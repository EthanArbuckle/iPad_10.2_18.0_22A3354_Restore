uint64_t _LTOSLogVisualTranslation()
{
  if (_LTOSLogVisualTranslation_onceToken != -1)
    dispatch_once(&_LTOSLogVisualTranslation_onceToken, &__block_literal_global_3);
  return _LTOSLogVisualTranslation_log;
}

id _LTSettingsLocalizedString(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x1E0CB34D0];
  v2 = a1;
  objc_msgSend(v1, "bundleForClass:", objc_opt_class());
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "localizedStringForKey:value:table:", v2, &stru_1E944F990, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D2CC4424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

UIMenu_optional __swiftcall _LTDisambiguableSentence.menu(forLinkIndex:)(Swift::UInt forLinkIndex)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v5;
  Swift::Bool v6;
  id v7;
  unint64_t v8;
  int64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  id v30;
  objc_class *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t ObjCClassFromMetadata;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  UIMenu_optional result;

  v3 = v1;
  v5 = objc_msgSend(v1, sel_selectedTargetPhrase);
  if (!v5)
    goto LABEL_30;
  v67 = v5;
  v7 = objc_msgSend(v5, sel_links);
  sub_1D2CC63E8(0, &qword_1EFCA5510);
  v8 = sub_1D2D9DE60();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v9 <= 0 || v9 <= forLinkIndex)
  {

LABEL_30:
    v30 = 0;
    goto LABEL_31;
  }
  v75 = MEMORY[0x1E0DEE9D8];
  v74 = MEMORY[0x1E0DEE9D8];
  v10 = objc_msgSend(v3, sel_menuConfigurationsForLinkIndex_, forLinkIndex);
  sub_1D2CC63E8(0, &qword_1EFCA5518);
  v11 = sub_1D2D9DE60();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_8;
LABEL_42:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    v2 = MEMORY[0x1E0DEE9D8] >> 62;
    if (MEMORY[0x1E0DEE9D8] >> 62)
      goto LABEL_43;
LABEL_33:
    v32 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v32)
      goto LABEL_34;
LABEL_44:
    swift_bridgeObjectRelease();
    v36 = 0;
    goto LABEL_45;
  }
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_42;
LABEL_8:
  v71 = (void *)sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5520);
  if (v12 < 1)
  {
    __break(1u);
LABEL_59:
    v33 = (id)MEMORY[0x1D8247E58](0, v11);
    goto LABEL_37;
  }
  v13 = 0;
  v69 = v12;
  v70 = v11 & 0xC000000000000001;
  v68 = v11;
  do
  {
    if (v70)
      v16 = (id)MEMORY[0x1D8247E58](v13, v11);
    else
      v16 = *(id *)(v11 + 8 * v13 + 32);
    v17 = v16;
    v18 = objc_msgSend(v16, sel_menuDescription);
    sub_1D2D9DCD4();

    v19 = objc_msgSend(v17, sel_targetPreview);
    sub_1D2D9DCD4();

    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v17;
    v22 = v17;
    v23 = (void *)sub_1D2D9E160();
    objc_msgSend(v23, sel_setState_, objc_msgSend(v3, sel_selectedPhraseIndex, 0, 0, 0, sub_1D2CC5B78, v21) == -[NSObject targetPhraseIndex](v22, sel_targetPhraseIndex));
    v24 = -[NSObject type](v22, sel_type);
    if (v24 == (id)1)
    {
      v29 = v23;
      MEMORY[0x1D8247990]();
      if (*(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D2D9DE84();
      sub_1D2D9DE9C();
      sub_1D2D9DE78();
      v11 = v68;
      goto LABEL_13;
    }
    if (!v24)
    {
      v14 = v23;
      MEMORY[0x1D8247990]();
      v11 = v68;
      if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D2D9DE84();
      sub_1D2D9DE9C();
      sub_1D2D9DE78();
LABEL_13:
      v15 = v69;
      goto LABEL_14;
    }
    if (qword_1EFCA54A0 != -1)
      swift_once();
    v25 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EFCB25E8);
    v26 = sub_1D2D9C8DC();
    v27 = sub_1D2D9E040();
    v15 = v69;
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D2CC0000, v26, v27, "Unknown edge type; ignoring", v28, 2u);
      MEMORY[0x1D8248974](v28, -1, -1);

      v22 = v26;
    }
    else
    {

    }
    v11 = v68;
LABEL_14:
    ++v13;

  }
  while (v15 != v13);
  swift_bridgeObjectRelease();
  v11 = v74;
  v2 = v74 >> 62;
  if (!(v74 >> 62))
    goto LABEL_33;
LABEL_43:
  swift_bridgeObjectRetain();
  v32 = sub_1D2D9E3AC();
  if (!v32)
    goto LABEL_44;
LABEL_34:
  if ((v11 & 0xC000000000000001) != 0)
    goto LABEL_59;
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_61:
    swift_once();
LABEL_47:
    v40 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EFCB25E8);
    v41 = sub_1D2D9C8DC();
    v42 = sub_1D2D9E01C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1D2CC0000, v41, v42, "Removing gender previews from menu since they're all the same", v43, 2u);
      MEMORY[0x1D8248974](v43, -1, -1);
    }

    if (v2)
    {
      swift_bridgeObjectRetain();
      v44 = sub_1D2D9E3AC();
      if (v44)
        goto LABEL_51;
    }
    else
    {
      v44 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v44)
      {
LABEL_51:
        v72 = MEMORY[0x1E0DEE9D8];
        v31 = (objc_class *)sub_1D2D9E358();
        if (v44 < 0)
        {
          __break(1u);
          goto LABEL_90;
        }
        v45 = 0;
        do
        {
          if ((v11 & 0xC000000000000001) != 0)
            v46 = (id)MEMORY[0x1D8247E58](v45, v11);
          else
            v46 = *(id *)(v11 + 8 * v45 + 32);
          ++v45;
          objc_msgSend(v46, sel_setSubtitle_, 0);
          sub_1D2D9E340();
          sub_1D2D9E364();
          sub_1D2D9E370();
          sub_1D2D9E34C();
        }
        while (v44 != v45);
        v47 = v72;
        swift_bridgeObjectRelease();
LABEL_64:
        swift_bridgeObjectRelease();
        v11 = v47;
        goto LABEL_65;
      }
    }
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x1E0DEE9D8];
    goto LABEL_64;
  }
  v33 = *(id *)(v11 + 32);
LABEL_37:
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v34, sel_subtitle);

  if (v35)
  {
    v36 = sub_1D2D9DCD4();
    v32 = v37;

  }
  else
  {
    v36 = 0;
    v32 = 0;
  }
LABEL_45:
  swift_bridgeObjectRetain();
  v38 = swift_bridgeObjectRetain();
  v39 = sub_1D2CC623C(v38, v36, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v71 = v39;
  if (!v39)
  {
    if (qword_1EFCA54A0 == -1)
      goto LABEL_47;
    goto LABEL_61;
  }
LABEL_65:
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v49 = (void *)objc_opt_self();
  v50 = objc_msgSend(v49, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9C5E8();

  v51 = objc_msgSend(v49, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_1D2D9C5E8();

  if (v75 >> 62)
  {
    sub_1D2CC63E8(0, &qword_1EFCA5528);
    swift_bridgeObjectRetain();
    sub_1D2D9E3A0();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_1D2D9E538();
    sub_1D2CC63E8(0, &qword_1EFCA5528);
  }
  swift_bridgeObjectRelease();
  sub_1D2CC63E8(0, &qword_1EFCA5530);
  v52 = (void *)sub_1D2D9E118();
  if (v11 >> 62)
  {
    sub_1D2CC63E8(0, &qword_1EFCA5528);
    swift_bridgeObjectRetain();
    v53 = sub_1D2D9E3A0();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_1D2D9E538();
    sub_1D2CC63E8(0, &qword_1EFCA5528);
    v53 = v11;
  }
  swift_bridgeObjectRelease();
  v65 = v53;
  v54 = (void *)sub_1D2D9E118();
  v55 = v52;
  v56 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v55, sel_setAccessibilityIdentifier_, v56, v65);

  v57 = v54;
  v58 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v57, sel_setAccessibilityIdentifier_, v58);

  v73 = MEMORY[0x1E0DEE9D8];
  if (v75 >> 62)
  {
    swift_bridgeObjectRetain();
    v59 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v59 >= 1)
  {
    v60 = v55;
    MEMORY[0x1D8247990]();
    if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D2D9DE84();
    sub_1D2D9DE9C();
    sub_1D2D9DE78();
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v61 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v61 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v61 >= 1)
  {
    v62 = v57;
    MEMORY[0x1D8247990]();
    if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D2D9DE84();
    sub_1D2D9DE9C();
    sub_1D2D9DE78();
  }
  if (v73 >> 62)
  {
    sub_1D2CC63E8(0, &qword_1EFCA5528);
    swift_bridgeObjectRetain();
    v63 = sub_1D2D9E3A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D2D9E538();
    sub_1D2CC63E8(0, &qword_1EFCA5528);
    v63 = v73;
  }
  swift_bridgeObjectRelease();
  v66 = v63;
  v30 = (id)sub_1D2D9E118();
  v64 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v30, sel_setAccessibilityIdentifier_, v64, v66);

LABEL_31:
  v31 = (objc_class *)v30;
LABEL_90:
  result.value.super.super.isa = v31;
  result.is_nil = v6;
  return result;
}

void sub_1D2CC5AB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *v5;
  void *v6;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1D8248A10](v4);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setSelectedPhraseIndex_, objc_msgSend(a3, sel_targetPhraseIndex));

  }
}

uint64_t sub_1D2CC5B28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2CC5B4C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1D2CC5B78(uint64_t a1)
{
  uint64_t v1;

  sub_1D2CC5AB4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1D2CC5B80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_DWORD *sub_1D2CC5BEC@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D2CC5BF8(uint64_t a1, uint64_t a2)
{
  return sub_1D2CC60C8(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1D2CC5C18(uint64_t a1, uint64_t a2)
{
  return sub_1D2CC60C8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1D2CC5C24(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1D2D9DCBC();
  *a2 = 0;
  return result;
}

uint64_t sub_1D2CC5C98(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1D2D9DCC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D2CC5D14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1D2D9DCD4();
  v2 = sub_1D2D9DCB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1D2CC5D54(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_1D2CC5D68(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1D2CC5D70@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1D2CC5D84@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1D2CC5D98@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D2CC5DAC(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1D2CC5DDC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1D2CC5E08@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1D2CC5E2C(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1D2CC5E40(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1D2CC5E54(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1D2CC5E68@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D2CC5E7C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D2CC5E90(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1D2CC5EA4(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D2CC5EB8()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1D2CC5EC8()
{
  return sub_1D2D9E220();
}

_DWORD *sub_1D2CC5EE0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1D2CC5EF4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1D2CC5F04(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D2CC5F14@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_1D2CC68BC(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1D2CC5F54()
{
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
  sub_1D2CC66E4(&qword_1EFCA55E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F844);
  return sub_1D2D9E3E8();
}

uint64_t sub_1D2CC5FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D2D9DCB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D2CC601C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D2D9DCD4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2CC6044()
{
  sub_1D2CC66E4(&qword_1EFCA55D8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1D2D9F9FC);
  sub_1D2CC66E4(&qword_1EFCA55E0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1D2D9F99C);
  return sub_1D2D9E3E8();
}

uint64_t sub_1D2CC60C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D2D9DCD4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D2CC6104()
{
  sub_1D2D9DCD4();
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CC6144()
{
  uint64_t v0;

  sub_1D2D9DCD4();
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  v0 = sub_1D2D9E5F8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2CC61B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1D2D9DCD4();
  v2 = v1;
  if (v0 == sub_1D2D9DCD4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_1D2CC623C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v5 = sub_1D2D9E3AC();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1D8247E58](v6 - 4, a1);
        else
          v7 = *(id *)(a1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        v10 = objc_msgSend(v7, sel_subtitle);
        if (!v10)
          break;
        v11 = v10;
        v12 = sub_1D2D9DCD4();
        v14 = v13;

        if (!a3)
        {
          swift_bridgeObjectRelease();
LABEL_23:
          swift_bridgeObjectRelease();
          return v8;
        }
        if (v12 != a2 || v14 != a3)
        {
          v16 = sub_1D2D9E52C();
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0)
            goto LABEL_23;
LABEL_19:

          goto LABEL_5;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        ++v6;
        if (v9 == v5)
          goto LABEL_26;
      }
      if (a3)
        goto LABEL_23;
      goto LABEL_19;
    }
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2CC63E8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for _LTTextLanguageDetectorStrategy(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1ED5870F8);
}

void type metadata accessor for SCNetworkReachabilityFlags(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5538);
}

void type metadata accessor for _LTDisambiguationType(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5540);
}

void type metadata accessor for SCNetworkReachability(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5548);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DisambiguationResultModel.LinkRangeInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DisambiguationResultModel.LinkRangeInfo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5550);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5558);
}

uint64_t sub_1D2CC6500(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D2CC6520(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5560);
}

uint64_t initializeBufferWithCopyOfBuffer for LanguageModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1D2CC65A0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D2CC65C0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5568);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5570);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5578);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1D2CC6648(a1, &qword_1EFCA5580);
}

void sub_1D2CC6648(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1D2CC668C()
{
  return sub_1D2CC66E4(&qword_1EFCA5588, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F808);
}

uint64_t sub_1D2CC66B8()
{
  return sub_1D2CC66E4(&qword_1EFCA5590, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F7DC);
}

uint64_t sub_1D2CC66E4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D82488A8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2CC6724()
{
  return sub_1D2CC66E4(&qword_1EFCA5598, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F878);
}

uint64_t sub_1D2CC6750()
{
  return sub_1D2CC66E4(&qword_1EFCA55A0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1D2D9F960);
}

uint64_t sub_1D2CC677C()
{
  return sub_1D2CC66E4(&qword_1EFCA55A8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1D2D9F934);
}

uint64_t sub_1D2CC67A8()
{
  return sub_1D2CC66E4(&qword_1EFCA55B0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1D2D9F9D0);
}

uint64_t sub_1D2CC67D4()
{
  return sub_1D2CC66E4(&qword_1EFCA55B8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1D2D9FABC);
}

uint64_t sub_1D2CC6800()
{
  return sub_1D2CC66E4(&qword_1EFCA55C0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1D2D9FA8C);
}

uint64_t sub_1D2CC682C()
{
  return sub_1D2CC66E4(&qword_1EFCA55C8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1D2D9FAE4);
}

uint64_t sub_1D2CC6858()
{
  return sub_1D2CC66E4(&qword_1EFCA55D0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1D2D9FB1C);
}

uint64_t sub_1D2CC6884(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1D2CC68BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1D2CC690C()
{
  return sub_1D2CC6934();
}

uint64_t sub_1D2CC6920()
{
  return sub_1D2CC6934();
}

uint64_t sub_1D2CC6934()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2CC699C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A98);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A68);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled))
  {
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled);
  }
  else
  {
    v17 = v10;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
    sub_1D2D9C990();
    swift_endAccess();
    swift_beginAccess();
    sub_1D2D9C990();
    swift_endAccess();
    sub_1D2CC6C74(&qword_1ED586A90, &qword_1ED586A98, MEMORY[0x1E0C96190]);
    sub_1D2D9C9F0();
    v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v6, v2);
    v15(v8, v2);
    sub_1D2CC6C74(&qword_1ED586A60, &qword_1ED586A68, MEMORY[0x1E0C95950]);
    v14 = sub_1D2D9C9D8();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v9);
    *(_QWORD *)(v1 + v13) = v14;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v14;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D8248890]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_BYTE *sub_1D2CC6C18@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X8>)
{
  *a3 = *result & ~*a2 & 1;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D824889C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1D2CC6C74(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D82488A8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2CC6CB4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = a1;
  return swift_release();
}

uint64_t (*sub_1D2CC6CCC(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1D2CC699C();
  return sub_1D2CC6D00;
}

uint64_t sub_1D2CC6D00(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = *a1;
  return swift_release();
}

id AirplaneModeConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

NSObject *AirplaneModeConfiguration.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  void (*v7)(char *, char *, uint64_t);
  char *v8;
  id v9;
  objc_class *v10;
  char *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  objc_super v20;
  char v21;
  int v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration___enabled];
  LOBYTE(v22) = 0;
  v6 = v0;
  sub_1D2D9C984();
  v7 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v7(v5, v4, v1);
  v8 = &v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration___reachable];
  LOBYTE(v22) = 0;
  sub_1D2D9C984();
  v7(v8, v4, v1);
  *(_QWORD *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled] = 0;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFA9B8]), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences] = v9;
  LOBYTE(v8) = objc_msgSend(v9, sel_airplaneMode);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v21 = (char)v8;
  sub_1D2D9C984();
  swift_endAccess();
  *(_QWORD *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability] = SCNetworkReachabilityCreateWithName(0, "apple.com");

  v10 = (objc_class *)type metadata accessor for AirplaneModeConfiguration();
  v20.receiver = v6;
  v20.super_class = v10;
  v11 = (char *)objc_msgSendSuper2(&v20, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences];
  v13 = v11;
  objc_msgSend(v12, sel_setDelegate_, v13);
  if (qword_1ED586A50 != -1)
    swift_once();
  v14 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED588680);
  v15 = v13;
  v16 = sub_1D2D9C8DC();
  v17 = sub_1D2D9E04C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 67109120;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2D9C9B4();

    swift_release();
    swift_release();
    v22 = v22;
    sub_1D2D9E1B4();

    _os_log_impl(&dword_1D2CC0000, v16, v17, "AirplaneModeConfiguration: Airplane mode enabled: %{BOOL}d", v18, 8u);
    MEMORY[0x1D8248974](v18, -1, -1);
  }
  else
  {

    v16 = v15;
  }

  sub_1D2CC71F4();
  return v15;
}

id AirplaneModeConfiguration.__deallocating_deinit()
{
  char *v0;
  void *v1;
  const __SCNetworkReachability *v2;
  objc_super v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability];
  if (v1)
  {
    v2 = v1;
    SCNetworkReachabilitySetCallback(v2, 0, 0);
    SCNetworkReachabilitySetDispatchQueue(v2, 0);

  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for AirplaneModeConfiguration();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1D2CC71F4()
{
  char *v0;
  void *v1;
  const __SCNetworkReachability *v2;
  SCNetworkReachabilityFlags v3;
  char *v4;
  NSObject *v5;
  SCNetworkReachabilityFlags flags;
  SCNetworkReachabilityContext context;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  v1 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability];
  if ((context.version & 1) != 0)
  {
    if (!v1)
      return;
    flags = 0;
    v2 = v1;
    SCNetworkReachabilityGetFlags(v2, &flags);
    v3 = flags & 2;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2D9C9B4();
    swift_release();
    swift_release();
    if (LOBYTE(context.version) != v3 >> 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(context.version) = v3 >> 1;
      v4 = v0;
      sub_1D2D9C9C0();
    }
    context.info = v0;
    memset(&context.retain, 0, 24);
    context.version = 0;
    SCNetworkReachabilitySetCallback(v2, (SCNetworkReachabilityCallBack)sub_1D2CC73C8, &context);
    sub_1D2CC80E0();
    v5 = sub_1D2D9E094();
    SCNetworkReachabilitySetDispatchQueue(v2, v5);

  }
  else
  {
    if (!v1)
      return;
    v2 = v1;
    SCNetworkReachabilitySetCallback(v2, 0, 0);
    SCNetworkReachabilitySetDispatchQueue(v2, 0);
  }

}

uint64_t sub_1D2CC73C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t result;

  if (a3)
  {
    v3 = a3;
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1D2D9C9C0();
  }
  return result;
}

id static AirplaneModeConfiguration.isAirplaneModeEnabled.getter()
{
  char v0;
  id v1;
  id v2;

  v0 = sub_1D2CC74D4(sub_1D2CC7DB0);
  if (v0 != 2)
    return (id)(v0 & 1);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFA9B8]), sel_init);
  v2 = objc_msgSend(v1, sel_airplaneMode);

  return v2;
}

uint64_t sub_1D2CC74AC()
{
  return sub_1D2CC74D4(sub_1D2CC7DB0);
}

uint64_t sub_1D2CC74C0()
{
  return sub_1D2CC74D4(sub_1D2D14400);
}

uint64_t sub_1D2CC74D4(uint64_t (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  if (qword_1ED586898 != -1)
    swift_once();
  if (byte_1EFCB25C9 != 1)
    return 2;
  v2 = a1();
  if (v2 == 2)
    return 2;
  v3 = v2;
  if (qword_1ED586A50 != -1)
    swift_once();
  v4 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED588680);
  v5 = sub_1D2D9C8DC();
  v6 = sub_1D2D9E01C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_1D2D9DD28();
    sub_1D2CF78E0(v9, v10, &v12);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v5, v6, "Network path fixture preempt %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v8, -1, -1);
    MEMORY[0x1D8248974](v7, -1, -1);
  }

  return v3;
}

void sub_1D2CC76B4(char *a1@<X8>)
{
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (qword_1ED586898 != -1)
    swift_once();
  if (byte_1EFCB25C9 == 1)
  {
    sub_1D2D2E0B4(&v10);
    v2 = v10;
    if (v10 != 5)
    {
      if (qword_1ED586A50 != -1)
        swift_once();
      v3 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v3, (uint64_t)qword_1ED588680);
      v4 = sub_1D2D9C8DC();
      v5 = sub_1D2D9E01C();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v10 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = sub_1D2D9DD28();
        sub_1D2CF78E0(v8, v9, &v10);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2CC0000, v4, v5, "Network path fixture preempt %s", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v7, -1, -1);
        MEMORY[0x1D8248974](v6, -1, -1);
      }

    }
  }
  else
  {
    v2 = 5;
  }
  *a1 = v2;
}

Swift::Void __swiftcall AirplaneModeConfiguration.airplaneModeChanged()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  char *v6;

  if (qword_1ED586A50 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588680);
  v2 = v0;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E01C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences], sel_airplaneMode);
    sub_1D2D9E1B4();

    _os_log_impl(&dword_1D2CC0000, v3, v4, "Airplane mode changed; is in Airplane mode: %{BOOL,public}d", v5, 8u);
    MEMORY[0x1D8248974](v5, -1, -1);

  }
  else
  {

  }
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences], sel_airplaneMode);
  swift_getKeyPath();
  swift_getKeyPath();
  v6 = v2;
  sub_1D2D9C9C0();
  sub_1D2CC71F4();
}

uint64_t sub_1D2CC7A60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2CC7AD8(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_1D2D9C9C0();
}

uint64_t type metadata accessor for AirplaneModeConfiguration()
{
  uint64_t result;

  result = qword_1ED5869A0;
  if (!qword_1ED5869A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2CC7B7C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2CC7A60(a1);
}

uint64_t sub_1D2CC7BA0(uint64_t a1, void **a2)
{
  return sub_1D2CC7AD8(a1, a2);
}

uint64_t sub_1D2CC7BC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2CC699C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CC7BEC(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D2CC7C24()
{
  return type metadata accessor for AirplaneModeConfiguration();
}

void sub_1D2CC7C2C()
{
  unint64_t v0;

  sub_1D2CC7D14();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AirplaneModeConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

void sub_1D2CC7D14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5877A0)
  {
    v0 = sub_1D2D9C9CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5877A0);
  }
}

uint64_t sub_1D2CC7D68@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2CC7A60(a1);
}

uint64_t sub_1D2CC7D8C(uint64_t a1, void **a2)
{
  return sub_1D2CC7AD8(a1, a2);
}

uint64_t sub_1D2CC7DB0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint32_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _DWORD v18[10];
  __int128 v19;
  __int128 v20;

  if (getenv("LT_AIRPLANE_MODE"))
  {
    v0 = sub_1D2D9DDAC();
    v2 = sub_1D2CDE84C(v0, v1);
    swift_bridgeObjectRelease();
    if (v2)
    {
      sub_1D2D9E298();
      if (*(_QWORD *)(v2 + 16) && (v3 = sub_1D2D64EFC((uint64_t)v18), (v4 & 1) != 0))
      {
        sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v19);
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1D2CC8030((uint64_t)v18);
      if (*((_QWORD *)&v20 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v5 = 16;
          if (qword_1ED586A50 != -1)
            swift_once();
          v6 = sub_1D2D9C8F4();
          __swift_project_value_buffer(v6, (uint64_t)qword_1ED588680);
          v7 = sub_1D2D9C8DC();
          v8 = sub_1D2D9E01C();
          if (os_log_type_enabled(v7, v8))
          {
            v9 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v9 = 67109120;
            v18[0] = 16;
            sub_1D2D9E1B4();
            v10 = "Airplane mode fixture found %{BOOL}d";
            v11 = v7;
            v12 = v8;
            v13 = v9;
            v14 = 8;
LABEL_18:
            _os_log_impl(&dword_1D2CC0000, v11, v12, v10, v13, v14);
            MEMORY[0x1D8248974](v9, -1, -1);
            goto LABEL_19;
          }
          goto LABEL_19;
        }
      }
      else
      {
        sub_1D2CC8064((uint64_t)&v19);
      }
    }
  }
  if (qword_1ED586A50 != -1)
    swift_once();
  v15 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED588680);
  v7 = sub_1D2D9C8DC();
  v16 = sub_1D2D9E01C();
  v5 = 2;
  if (os_log_type_enabled(v7, v16))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "Airplane mode fixture not found";
    v11 = v7;
    v12 = v16;
    v13 = v9;
    v14 = 2;
    goto LABEL_18;
  }
LABEL_19:

  return v5;
}

uint64_t sub_1D2CC8030(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1D2CC8064(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CC80A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1D2CC80E0()
{
  unint64_t result;

  result = qword_1ED586C20;
  if (!qword_1ED586C20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED586C20);
  }
  return result;
}

double sub_1D2CC811C()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8C0();
  return v1;
}

double sub_1D2CC8170()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8D8();
  return v1;
}

double sub_1D2CC81C8()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8C0();
  return v1;
}

double sub_1D2CC821C()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8D8();
  return v1;
}

double sub_1D2CC8274()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8C0();
  return v1;
}

double sub_1D2CC82C8()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8D8();
  return v1;
}

void BottomPanelContainer.init(content:panel:)()
{
  type metadata accessor for BottomPanelContainer();
}

uint64_t sub_1D2CC8364(int *a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v5 = (_QWORD *)(v2 + a1[14]);
  sub_1D2D9D8B4();
  *v5 = v11;
  v5[1] = v12;
  v6 = (_QWORD *)(v2 + a1[15]);
  sub_1D2D9D8B4();
  *v6 = v11;
  v6[1] = v12;
  v7 = (_QWORD *)(v2 + a1[16]);
  v8 = sub_1D2D9D8B4();
  *v7 = v11;
  v7[1] = v12;
  v9 = v3(v8);
  v1(v9);
  swift_release();
  return swift_release();
}

void type metadata accessor for BottomPanelContainer()
{
  JUMPOUT(0x1D8248824);
}

uint64_t BottomPanelContainer.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[4];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];

  v73 = a2;
  v69 = a1[3];
  v70 = a1[5];
  v74 = a1;
  v3 = sub_1D2D9D920();
  v62 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  v63 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  v4 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5670);
  v5 = sub_1D2D9CD80();
  v72 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v71 = (uint64_t)&v52 - v6;
  v67 = a1[2];
  sub_1D2D9CD80();
  sub_1D2D9CD80();
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5678);
  swift_getTupleTypeMetadata2();
  v7 = sub_1D2D9DADC();
  MEMORY[0x1D82488A8](MEMORY[0x1E0CE0680], v7);
  v8 = sub_1D2D9D950();
  v9 = sub_1D2D9CD80();
  v10 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v8);
  v11 = MEMORY[0x1E0CDA228];
  v89[0] = v10;
  v89[1] = MEMORY[0x1E0CDA228];
  v12 = MEMORY[0x1E0CD9C20];
  v60 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v9, v89);
  v13 = sub_1D2D9CB28();
  v65 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v57 = (char *)&v52 - v14;
  v64 = sub_1D2D9CD80();
  v15 = sub_1D2D9CD80();
  v66 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v55 = (uint64_t)&v52 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5680);
  v17 = sub_1D2D9CD80();
  v68 = *(_QWORD *)(v17 - 8);
  v54 = v17;
  MEMORY[0x1E0C80A78](v17);
  v61 = (char *)&v52 - v18;
  v88[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFB10], v3);
  v88[1] = v11;
  v19 = MEMORY[0x1D82488A8](v12, v62, v88);
  v20 = MEMORY[0x1E0CDB838];
  v53 = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  v87[0] = v19;
  v87[1] = v53;
  v21 = MEMORY[0x1D82488A8](v12, v63, v87);
  v52 = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
  v86[0] = v21;
  v86[1] = v52;
  v22 = MEMORY[0x1D82488A8](v12, v4, v86);
  v23 = sub_1D2CC6C74(&qword_1EFCA5698, &qword_1EFCA5670, v20);
  v85[0] = v22;
  v85[1] = v23;
  v56 = v5;
  v58 = MEMORY[0x1D82488A8](v12, v5, v85);
  v62 = sub_1D2D9CE1C();
  v24 = sub_1D2D9CD80();
  v63 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v59 = (char *)&v52 - v28;
  v76 = v67;
  v77 = v69;
  v78 = v74[4];
  v79 = v70;
  v80 = v75;
  sub_1D2D9D3F8();
  v29 = v57;
  sub_1D2D9CB34();
  v30 = sub_1D2CC82C8();
  v32 = v31;
  v34 = v33;
  v35 = v30;
  v36 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD8558], v13);
  v37 = v55;
  View.bindGeometry(to:reader:)(v32, v34, (uint64_t)sub_1D2CC95B4, 0, v36, v55, v35);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v13);
  v84[2] = 0x72666C6C6F726373;
  v84[3] = 0xEB00000000656D61;
  v84[0] = v36;
  v84[1] = v53;
  v38 = MEMORY[0x1E0CD9C20];
  v83[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v64, v84);
  v83[1] = v52;
  v39 = MEMORY[0x1D82488A8](v38, v15, v83);
  v40 = v61;
  sub_1D2D9D668();
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v37, v15);
  v41 = v71;
  sub_1D2CC95B8(v74, v71);
  sub_1D2D9DA64();
  v42 = sub_1D2CC6C74(qword_1EFCA56A0, &qword_1EFCA5680, MEMORY[0x1E0CDC6F0]);
  v82[0] = v39;
  v82[1] = v42;
  v43 = v54;
  v44 = MEMORY[0x1D82488A8](v38, v54, v82);
  v45 = v56;
  sub_1D2D9D71C();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v41, v45);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v43);
  v46 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDA280], v62);
  v81[0] = v44;
  v81[1] = v46;
  MEMORY[0x1D82488A8](v38, v24, v81);
  v47 = v63;
  v48 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v49 = v59;
  v48(v59, v27, v24);
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v27, v24);
  v48(v73, v49, v24);
  return ((uint64_t (*)(char *, uint64_t))v50)(v49, v24);
}

void sub_1D2CC8C04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[20];

  v16[5] = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  sub_1D2D9CD80();
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5678);
  swift_getTupleTypeMetadata2();
  v11 = sub_1D2D9DADC();
  v16[1] = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0680], v11);
  v12 = sub_1D2D9D950();
  v16[4] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1D2D9CD80();
  v16[3] = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v16[2] = (char *)v16 - v15;
  v16[8] = a2;
  v16[9] = a3;
  v16[10] = a4;
  v16[11] = a5;
  v16[12] = a1;
  sub_1D2D9D110();
  sub_1D2D9D944();
  v16[15] = a2;
  v16[16] = a3;
  v16[17] = a4;
  v16[18] = a5;
  type metadata accessor for BottomPanelContainer();
}

uint64_t sub_1D2CC8DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;

  sub_1D2CC8274();
  sub_1D2D9DA70();
  v11 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v2);
  sub_1D2D9D704();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(v0, v2);
  v5 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v4 - 136) = v11;
  *(_QWORD *)(v4 - 128) = v5;
  MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v4 - 136);
  v7 = *(_QWORD *)(v4 - 224);
  v6 = *(_QWORD *)(v4 - 216);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v7, v3, v1);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v3, v1);
  v8(*(_QWORD *)(v4 - 200), v7, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v1);
}

uint64_t sub_1D2CC8EDC()
{
  return sub_1D2CCADEC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2CC8C04);
}

void sub_1D2CC8EE8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[34];

  v13[7] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  v9 = sub_1D2D9CD80();
  v13[6] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D2D9CD80();
  v13[5] = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v13[3] = (char *)v13 - v12;
  v13[12] = a1;
  v13[13] = a2;
  v13[14] = a3;
  v13[15] = a4;
  type metadata accessor for BottomPanelContainer();
}

uint64_t sub_1D2CC9018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v31;

  *(_QWORD *)(v8 - 320) = a1;
  *(_QWORD *)(v8 - 336) = v4;
  v9 = sub_1D2CC821C();
  View.bindGeometry(to:reader:)(v10, v11, (uint64_t)sub_1D2CC92F0, 0, v7, v6, v9);
  swift_release();
  swift_release();
  sub_1D2D9DA70();
  v12 = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  *(_QWORD *)(v8 - 152) = v7;
  *(_QWORD *)(v8 - 144) = v12;
  v13 = MEMORY[0x1E0CD9C20];
  v14 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v8 - 152);
  v15 = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
  *(_QWORD *)(v8 - 168) = v14;
  *(_QWORD *)(v8 - 160) = v15;
  v31 = MEMORY[0x1D82488A8](v13, v5, v8 - 168);
  sub_1D2D9D704();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 304) + 8))(v6, v5);
  v16 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v8 - 184) = v31;
  *(_QWORD *)(v8 - 176) = v16;
  v17 = v2;
  *(_QWORD *)(v8 - 344) = MEMORY[0x1D82488A8](v13, v2, v8 - 184);
  v18 = *(_QWORD *)(v8 - 312);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v20 = *(_QWORD *)(v8 - 328);
  v19(v20, v3, v17);
  v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  *(_QWORD *)(v8 - 304) = v21;
  v22 = v3;
  v21(v3, v17);
  *(_QWORD *)(v8 - 312) = sub_1D2D9D800();
  sub_1D2CC811C();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v23 = *(_QWORD *)(v8 - 136);
  v24 = *(_BYTE *)(v8 - 128);
  v25 = *(_QWORD *)(v8 - 120);
  v26 = *(_BYTE *)(v8 - 112);
  v28 = *(_QWORD *)(v8 - 104);
  v27 = *(_QWORD *)(v8 - 96);
  v19(v22, v20, v17);
  *(_QWORD *)(v8 - 256) = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 248) = v23;
  *(_BYTE *)(v8 - 240) = v24;
  *(_QWORD *)(v8 - 232) = v25;
  *(_BYTE *)(v8 - 224) = v26;
  *(_QWORD *)(v8 - 216) = v28;
  *(_QWORD *)(v8 - 208) = v27;
  *(_QWORD *)(v8 - 200) = v22;
  *(_QWORD *)(v8 - 192) = v8 - 256;
  swift_retain();
  *(_QWORD *)(v8 - 272) = v17;
  *(_QWORD *)(v8 - 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5678);
  *(_QWORD *)(v8 - 288) = *(_QWORD *)(v8 - 344);
  *(_QWORD *)(v8 - 280) = sub_1D2CCAE00();
  sub_1D2CC93E8((uint64_t *)(v8 - 200), 2uLL, v8 - 272);
  swift_release();
  v29 = *(void (**)(uint64_t, uint64_t))(v8 - 304);
  v29(v20, v17);
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v22, v17);
}

void sub_1D2CC92F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  _QWORD v12[2];
  CGRect v13;

  v0 = sub_1D2D9D200();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0x72666C6C6F726373;
  v12[1] = 0xEB00000000656D61;
  sub_1D2D9D2B4();
  sub_1D2D9CC60();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v9;
  v13.size.height = v11;
  CGRectGetMaxY(v13);
}

uint64_t sub_1D2CC93E8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x1E0C80A78](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_1D2D9DAE8();
  }
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_1D2D9DAE8();
}

uint64_t sub_1D2CC959C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1D2CC95B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[3];

  v45 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5728);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5730);
  MEMORY[0x1E0C80A78](v44);
  v41 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[5];
  v9 = sub_1D2D9D920();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_1D2D9CD80();
  v38 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  v39 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  v40 = sub_1D2D9CD80();
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v36 = (uint64_t)&v36 - v15;
  v46 = a1[2];
  v47 = v7;
  v48 = a1[4];
  v49 = v8;
  v50 = v2;
  sub_1D2D9D038();
  sub_1D2D9D914();
  sub_1D2D9DA70();
  v35 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFB10], v9);
  sub_1D2D9D704();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  v16 = sub_1D2CC8170();
  v18 = v17;
  v20 = v19;
  v21 = v16;
  v53[0] = v35;
  v53[1] = MEMORY[0x1E0CDA228];
  v22 = MEMORY[0x1E0CD9C20];
  v23 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v12, v53);
  v24 = v36;
  View.bindGeometry(to:reader:)(v18, v20, (uint64_t)sub_1D2CC95B4, 0, v23, v36, v21);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v12);
  v25 = v43;
  sub_1D2CC9C28(v43);
  sub_1D2CC9A4C();
  v27 = v26;
  v28 = v41;
  sub_1D2CCAD60(v25, v41, &qword_1EFCA5728);
  *(_QWORD *)(v28 + *(int *)(v44 + 36)) = v27;
  sub_1D2CCADA4(v25, &qword_1EFCA5728);
  sub_1D2D9DA70();
  v29 = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  v52[0] = v23;
  v52[1] = v29;
  v30 = MEMORY[0x1D82488A8](v22, v39, v52);
  v31 = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
  v51[0] = v30;
  v51[1] = v31;
  v32 = v22;
  v33 = v40;
  MEMORY[0x1D82488A8](v32, v40, v51);
  sub_1D2CCABEC();
  sub_1D2D9D5FC();
  sub_1D2CCADA4(v28, &qword_1EFCA5730);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v24, v33);
}

uint64_t sub_1D2CC9A18()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1D2CC9A4C()
{
  sub_1D2CC8274();
  sub_1D2CC811C();
  sub_1D2CC81C8();
}

void sub_1D2CC9AB4(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for BottomPanelContainer();
}

uint64_t sub_1D2CC9B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = v2 + *(int *)(a1 + 52);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v4, v6, v1);
  v7(v3, v4, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
}

void sub_1D2CC9B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  uint64_t v12;
  CGRect v13;

  v0 = sub_1D2D9D1F4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D2A8();
  sub_1D2D9CC60();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v9;
  v13.size.height = v11;
  CGRectGetHeight(v13);
}

uint64_t sub_1D2CC9C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5760);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1D2D9DA40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5750);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)&v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1D2D9D800();
  sub_1D2D9DA34();
  v12 = sub_1D2D9D410();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v3, v7, v4);
  v3[*(int *)(v1 + 36)] = v12;
  sub_1D2CCAD60((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 36), &qword_1EFCA5760);
  *v10 = v11;
  swift_retain();
  sub_1D2CCADA4((uint64_t)v3, &qword_1EFCA5760);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  v13 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  MEMORY[0x1D8247330](v13);
  v26 = sub_1D2D9D818();
  swift_release();
  v25 = sub_1D2D9D278();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v14 = v28;
  LOBYTE(v1) = v29;
  v15 = v30;
  LOBYTE(v8) = v31;
  v17 = v32;
  v16 = v33;
  v18 = sub_1D2D9DA58();
  v20 = v19;
  v21 = v27;
  sub_1D2CCAD60((uint64_t)v10, v27, &qword_1EFCA5750);
  v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5728) + 36);
  *(_QWORD *)v22 = v26;
  *(_WORD *)(v22 + 8) = 256;
  *(_DWORD *)(v22 + 12) = v25;
  *(_QWORD *)(v22 + 16) = v14;
  *(_BYTE *)(v22 + 24) = v1;
  *(_QWORD *)(v22 + 32) = v15;
  *(_BYTE *)(v22 + 40) = v8;
  *(_QWORD *)(v22 + 48) = v17;
  *(_QWORD *)(v22 + 56) = v16;
  *(_QWORD *)(v22 + 64) = v18;
  *(_QWORD *)(v22 + 72) = v20;
  return sub_1D2CCADA4((uint64_t)v10, &qword_1EFCA5750);
}

uint64_t sub_1D2CC9E94()
{
  return sub_1D2D9D65C();
}

uint64_t sub_1D2CC9EB0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D2CC9EB8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D2CC9F50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    v17 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((v10 + v16) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    v17[1] = v18[1];
    v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v19[1] = v20[1];
    v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D2CCA0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2CCA158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2CCA248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2CCA354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D2CCA408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_release();
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_release();
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_release();
  return a1;
}

uint64_t sub_1D2CCA4FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  int v19;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFE)
    v9 = 2147483646;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)(((v12 + v17) & 0xFFFFFFFFFFFFF8) + 8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        v19 = v18 - 1;
        if (v19 < 0)
          v19 = -1;
        return (v19 + 1);
      }
    }
  }
  else
  {
    if (((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D2CCA5AC + 4 * byte_1D2D9FD40[v15]))();
  }
}

void sub_1D2CCA660(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v7 = 2147483646;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1D2CCA78C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D2CCA828);
}

void sub_1D2CCA794(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D2CCA79CLL);
  JUMPOUT(0x1D2CCA828);
}

void sub_1D2CCA7E0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D2CCA828);
}

void sub_1D2CCA7E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D2CCA828);
}

uint64_t sub_1D2CCA7F0(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x1D2CCA828);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x1D2CCA7FCLL);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t sub_1D2CCA840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[3];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  sub_1D2D9CD80();
  sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5678);
  swift_getTupleTypeMetadata2();
  v0 = sub_1D2D9DADC();
  MEMORY[0x1D82488A8](MEMORY[0x1E0CE0680], v0);
  v1 = sub_1D2D9D950();
  v2 = sub_1D2D9CD80();
  v3 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v1);
  v4 = MEMORY[0x1E0CDA228];
  v31[0] = v3;
  v31[1] = MEMORY[0x1E0CDA228];
  v5 = MEMORY[0x1E0CD9C20];
  MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v2, v31);
  v6 = sub_1D2D9CB28();
  v7 = sub_1D2D9CD80();
  v22 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5680);
  v21 = sub_1D2D9CD80();
  v8 = sub_1D2D9D920();
  v9 = sub_1D2D9CD80();
  v10 = sub_1D2D9CD80();
  v11 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5670);
  v12 = sub_1D2D9CD80();
  v30[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFB10], v8);
  v30[1] = v4;
  v13 = MEMORY[0x1D82488A8](v5, v9, v30);
  v14 = MEMORY[0x1E0CDB838];
  v15 = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  v29[0] = v13;
  v29[1] = v15;
  v16 = MEMORY[0x1D82488A8](v5, v10, v29);
  v17 = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
  v28[0] = v16;
  v28[1] = v17;
  v27[0] = MEMORY[0x1D82488A8](v5, v11, v28);
  v27[1] = sub_1D2CC6C74(&qword_1EFCA5698, &qword_1EFCA5670, v14);
  MEMORY[0x1D82488A8](v5, v12, v27);
  v18 = sub_1D2D9CE1C();
  v19 = sub_1D2D9CD80();
  v26[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CD8558], v6);
  v26[1] = v15;
  v25[0] = MEMORY[0x1D82488A8](v5, v7, v26);
  v25[1] = v17;
  v24[0] = MEMORY[0x1D82488A8](v5, v22, v25);
  v24[1] = sub_1D2CC6C74(qword_1EFCA56A0, &qword_1EFCA5680, MEMORY[0x1E0CDC6F0]);
  v23[0] = MEMORY[0x1D82488A8](v5, v21, v24);
  v23[1] = MEMORY[0x1D82488A8](MEMORY[0x1E0CDA280], v18);
  return MEMORY[0x1D82488A8](v5, v19, v23);
}

uint64_t sub_1D2CCABE0()
{
  return sub_1D2CCADEC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2CC9AB4);
}

unint64_t sub_1D2CCABEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA5738;
  if (!qword_1EFCA5738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5730);
    v2[0] = sub_1D2CCAC58();
    v2[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA5738);
  }
  return result;
}

unint64_t sub_1D2CCAC58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA5740;
  if (!qword_1EFCA5740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5728);
    v2[0] = sub_1D2CCACDC();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5768, &qword_1EFCA5770, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA5740);
  }
  return result;
}

unint64_t sub_1D2CCACDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA5748;
  if (!qword_1EFCA5748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5750);
    v2 = sub_1D2CC6C74(&qword_1EFCA5758, &qword_1EFCA5760, MEMORY[0x1E0CDC6D0]);
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA5748);
  }
  return result;
}

uint64_t sub_1D2CCAD60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2CCADA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D2CCADE0()
{
  return sub_1D2CCADEC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2CC8EE8);
}

uint64_t sub_1D2CCADEC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_1D2CCAE00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA5780;
  if (!qword_1EFCA5780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5678);
    v2[0] = MEMORY[0x1E0CDF5B0];
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA5780);
  }
  return result;
}

uint64_t sub_1D2CCAE68()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BundleObject()
{
  return objc_opt_self();
}

uint64_t *sub_1D2CCAE98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D2D9CC48();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2CCAF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1D2D9CC48();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D2CCB014(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CC48();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D2CCB0DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1D2CCADA4((uint64_t)a1 + v6, &qword_1EFCA5788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1D2D9CC48();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2CCB1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CC48();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1D2CCB290(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1D2CCADA4((uint64_t)a1 + v6, &qword_1EFCA5788);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D2D9CC48();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D2CCB380()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CCB38C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA5790);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1D2CCB40C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2CCB418(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA5790);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CameraPreviewDebugView()
{
  uint64_t result;

  result = qword_1EFCA57F0;
  if (!qword_1EFCA57F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2CCB4CC()
{
  unint64_t v0;

  sub_1D2CCB548();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D2CCB548()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED586AC8)
  {
    sub_1D2D9CC48();
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED586AC8);
  }
}

uint64_t sub_1D2CCB59C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CCB5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  void (*v15)(char *, _QWORD, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a2;
  v26 = sub_1D2D9D014();
  v22 = *(_QWORD *)(v26 - 8);
  v3 = v22;
  MEMORY[0x1E0C80A78](v26);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5838);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5868);
  sub_1D2CC6C74(&qword_1EFCA5870, &qword_1EFCA5868, MEMORY[0x1E0CE0680]);
  sub_1D2D9D50C();
  v29 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5848);
  v11 = sub_1D2CC6C74(&qword_1EFCA5850, &qword_1EFCA5840, MEMORY[0x1E0CDD898]);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5858);
  v13 = sub_1D2CC6C74(&qword_1EFCA5860, &qword_1EFCA5858, MEMORY[0x1E0CDA158]);
  v31 = v12;
  v32 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1D2D9D740();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D2D9D0A4();
  v15 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v16 = v24;
  v17 = v26;
  v15(v24, *MEMORY[0x1E0CDAB90], v26);
  v31 = v5;
  v32 = v10;
  v33 = v11;
  v34 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v18 = v25;
  v19 = v23;
  sub_1D2D9D68C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v19, v18);
}

uint64_t sub_1D2CCB88C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v45 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5888);
  v47 = *(_QWORD *)(v44 - 8);
  v3 = MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v36 - v5;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5890);
  v37 = *(_QWORD *)(v42 - 8);
  v6 = v37;
  v7 = MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5898);
  v40 = *(_QWORD *)(v11 - 8);
  v12 = v40;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v36 - v16;
  v50 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58A0);
  v18 = MEMORY[0x1E0CE0680];
  sub_1D2CC6C74(&qword_1EFCA58A8, &qword_1EFCA58A0, MEMORY[0x1E0CE0680]);
  v39 = v17;
  sub_1D2D9D9EC();
  v49 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58B0);
  sub_1D2CC6C74(&qword_1EFCA58B8, &qword_1EFCA58B0, v18);
  v19 = v10;
  v36 = v10;
  sub_1D2D9D9EC();
  v48 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58C0);
  sub_1D2CC6C74(&qword_1EFCA58C8, &qword_1EFCA58C0, MEMORY[0x1E0CDFA58]);
  v20 = v46;
  sub_1D2D9D9EC();
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v38 = v15;
  v22 = v11;
  v21(v15, v17, v11);
  v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v25 = v41;
  v24 = v42;
  v23(v41, v19, v42);
  v26 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v27 = v43;
  v28 = v20;
  v29 = v44;
  v26(v43, v28, v44);
  v30 = v45;
  v21(v45, v15, v22);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58D0);
  v23(&v30[*(int *)(v31 + 48)], v25, v24);
  v26(&v30[*(int *)(v31 + 64)], v27, v29);
  v32 = *(void (**)(char *, uint64_t))(v47 + 8);
  v32(v46, v29);
  v33 = *(void (**)(char *, uint64_t))(v37 + 8);
  v33(v36, v24);
  v34 = *(void (**)(char *, uint64_t))(v40 + 8);
  v34(v39, v22);
  v32(v27, v29);
  v33(v25, v24);
  return ((uint64_t (*)(char *, uint64_t))v34)(v38, v22);
}

uint64_t sub_1D2CCBBF4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t *v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v24 = a1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5908);
  v1 = MEMORY[0x1E0C80A78](v23);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v22 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5910);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - v11;
  sub_1D2D9CAD4();
  sub_1D2D9D938();
  sub_1D2D9CAD4();
  sub_1D2D9D938();
  sub_1D2D9CABC();
  v13 = v25;
  KeyPath = swift_getKeyPath();
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = v13;
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v16(v3, v10, v6);
  v17 = (uint64_t *)&v3[*(int *)(v23 + 36)];
  *v17 = KeyPath;
  v17[1] = (uint64_t)sub_1D2CCCBE0;
  v17[2] = v15;
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  sub_1D2CCCBF8((uint64_t)v3, (uint64_t)v5);
  v16(v10, v12, v6);
  sub_1D2CCCC40((uint64_t)v5, (uint64_t)v3);
  v19 = v24;
  v16(v24, v10, v6);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5918);
  sub_1D2CCCC40((uint64_t)v3, (uint64_t)&v19[*(int *)(v20 + 48)]);
  sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA5908);
  v18(v12, v6);
  sub_1D2CCADA4((uint64_t)v3, &qword_1EFCA5908);
  return ((uint64_t (*)(char *, uint64_t))v18)(v10, v6);
}

uint64_t sub_1D2CCBE80@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CCC6E4(a1);
}

uint64_t sub_1D2CCBEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CCC6E4(a1);
}

uint64_t sub_1D2CCBEC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58F0);
  v22 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - v6;
  v8 = sub_1D2D9D098();
  MEMORY[0x1E0C80A78](v8);
  sub_1D2D9D08C();
  sub_1D2D9D080();
  sub_1D2D9CABC();
  sub_1D2D9D05C();
  sub_1D2D9D080();
  sub_1D2D9D0B0();
  v9 = sub_1D2D9D5C0();
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  sub_1D2D9CAD4();
  v23 = xmmword_1D2D9FE00;
  sub_1D2CCCAC8();
  sub_1D2D9D92C();
  v16 = v22;
  v17 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v17(v5, v7, v2);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v13;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5900);
  v17((char *)(a1 + *(int *)(v18 + 48)), v5, v2);
  sub_1D2CCCB0C(v9, v11, v15);
  v19 = *(void (**)(char *, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  v19(v7, v2);
  v19(v5, v2);
  sub_1D2CCCAB4(v9, v11, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CCC14C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for CameraPreviewDebugView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9CAE0();
  v8 = sub_1D2D9CAEC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1D2CCC894(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  sub_1D2CCC8DC((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA58E0);
  sub_1D2CCCA50();
  return sub_1D2D9D8F0();
}

uint64_t sub_1D2CCC294()
{
  sub_1D2D9CAC8();
  sub_1D2D9CAC8();
  return sub_1D2D9CAC8();
}

__n128 sub_1D2CCC304@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  _OWORD v15[9];

  sub_1D2D9D0A4();
  v2 = sub_1D2D9D5C0();
  v4 = v3;
  v6 = v5;
  v8 = v7 & 1;
  v9 = sub_1D2D9DA70();
  sub_1D2CCDD10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_1D2CCCAB4(v2, v4, v8);
  swift_bridgeObjectRelease();
  v11 = v15[7];
  *(_OWORD *)(a1 + 96) = v15[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v15[8];
  v12 = v15[3];
  *(_OWORD *)(a1 + 32) = v15[2];
  *(_OWORD *)(a1 + 48) = v12;
  v13 = v15[5];
  *(_OWORD *)(a1 + 64) = v15[4];
  *(_OWORD *)(a1 + 80) = v13;
  result = (__n128)v15[1];
  *(_OWORD *)a1 = v15[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D2CCC420(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;

  v2 = sub_1D2D9D230();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5858);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2D9D20C();
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
  sub_1D2D9CE04();
  v7 = sub_1D2CC6C74(&qword_1EFCA5860, &qword_1EFCA5858, MEMORY[0x1E0CDA158]);
  MEMORY[0x1D8246DC0](v6, v3, v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D2CCC568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for CameraPreviewDebugView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CCC894(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CCC8DC((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return sub_1D2D9D8FC();
}

uint64_t sub_1D2CCC63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D2D9CC48();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CameraPreviewDebugView();
  sub_1D2D7C2F0((uint64_t)v3);
  sub_1D2D9CC3C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D2CCC6D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CCC6E4(a1);
}

uint64_t sub_1D2CCC6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1D2D9D0A4();
  result = sub_1D2D9D5C0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D2CCC740()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5830);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5838);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5840);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5848);
  sub_1D2CC6C74(&qword_1EFCA5850, &qword_1EFCA5840, MEMORY[0x1E0CDD898]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5858);
  sub_1D2CC6C74(&qword_1EFCA5860, &qword_1EFCA5858, MEMORY[0x1E0CDA158]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_1D2D9CD20();
}

uint64_t sub_1D2CCC874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CCB5AC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CCC87C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CCB88C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CCC884()
{
  uint64_t v0;

  return sub_1D2CCC420(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CCC88C()
{
  uint64_t v0;

  return sub_1D2CCC568(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CCC894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CameraPreviewDebugView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CCC8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CameraPreviewDebugView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CCC920()
{
  return sub_1D2CCCA14((uint64_t (*)(uint64_t))sub_1D2CCC63C);
}

uint64_t sub_1D2CCC92C@<X0>(char *a1@<X8>)
{
  return sub_1D2CCBBF4(a1);
}

uint64_t sub_1D2CCC934@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CCBEC0(a1);
}

uint64_t sub_1D2CCC93C()
{
  uint64_t v0;

  return sub_1D2CCC14C(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for CameraPreviewDebugView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1D2D9CC48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D2CCCA08()
{
  return sub_1D2CCCA14((uint64_t (*)(uint64_t))sub_1D2CCC294);
}

uint64_t sub_1D2CCCA14(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CameraPreviewDebugView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_1D2CCCA50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA58E8;
  if (!qword_1EFCA58E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA58E0);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA58E8);
  }
  return result;
}

uint64_t sub_1D2CCCAB4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_1D2CCCAC8()
{
  unint64_t result;

  result = qword_1EFCA58F8;
  if (!qword_1EFCA58F8)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1EFCA58F8);
  }
  return result;
}

uint64_t sub_1D2CCCB0C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1D2CCCB1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF9C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2CCCB48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF9C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2CCCB74()
{
  return sub_1D2D9CFA8();
}

uint64_t sub_1D2CCCB98()
{
  return sub_1D2D9CFA8();
}

_BYTE *sub_1D2CCCBBC(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1D2CCCBD0()
{
  return swift_deallocObject();
}

_BYTE *sub_1D2CCCBE0(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1D2CCCBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CCCC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CCCC88()
{
  return sub_1D2CC6C74(&qword_1EFCA5920, &qword_1EFCA5928, MEMORY[0x1E0CD94D0]);
}

uint64_t CloseButton.init(action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t CloseButton.makeUIView(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5930);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CC63E8(0, &qword_1EFCA5938);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5520);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1D2D9E160();
  return sub_1D2D9E184();
}

uint64_t sub_1D2CCCE04()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5930);
  sub_1D2D9D338();
  v0 = *(void (**)(uint64_t))(v3 + 16);
  if (v0)
  {
    v1 = sub_1D2CCCEF0(*(_QWORD *)(v3 + 16));
    v0(v1);
    sub_1D2CCCF1C((uint64_t)v0);
  }
  return swift_release();
}

uint64_t CloseButton.makeCoordinator()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  type metadata accessor for CloseButton.Coordinator();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  sub_1D2CCCEF0(v1);
  return v3;
}

uint64_t type metadata accessor for CloseButton.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_1D2CCCEF0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t CloseButton.Coordinator.deinit()
{
  uint64_t v0;

  sub_1D2CCCF1C(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t sub_1D2CCCF1C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t CloseButton.Coordinator.__deallocating_deinit()
{
  uint64_t v0;

  sub_1D2CCCF1C(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

unint64_t sub_1D2CCCF54()
{
  unint64_t result;

  result = qword_1EFCA5940;
  if (!qword_1EFCA5940)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for CloseButton, &type metadata for CloseButton);
    atomic_store(result, (unint64_t *)&qword_1EFCA5940);
  }
  return result;
}

uint64_t sub_1D2CCCF98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5930);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CC63E8(0, &qword_1EFCA5938);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5520);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1D2D9E160();
  return sub_1D2D9E184();
}

uint64_t sub_1D2CCD0E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  type metadata accessor for CloseButton.Coordinator();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a1 = v5;
  return sub_1D2CCCEF0(v4);
}

uint64_t sub_1D2CCD134()
{
  return sub_1D2D9D17C();
}

uint64_t sub_1D2CCD174()
{
  return MEMORY[0x1E0CE0788];
}

uint64_t sub_1D2CCD180()
{
  sub_1D2CCD440();
  return sub_1D2D9D1DC();
}

uint64_t sub_1D2CCD1D0()
{
  sub_1D2CCD440();
  return sub_1D2D9D188();
}

void sub_1D2CCD220()
{
  sub_1D2CCD440();
  sub_1D2D9D1D0();
  __break(1u);
}

_QWORD *destroy for CloseButton(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s13TranslationUI11CloseButtonVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  if (*a2)
  {
    v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for CloseButton(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for CloseButton(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

uint64_t method lookup function for CloseButton.Coordinator()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1D2CCD440()
{
  unint64_t result;

  result = qword_1EFCA5A08;
  if (!qword_1EFCA5A08)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for CloseButton, &type metadata for CloseButton);
    atomic_store(result, (unint64_t *)&qword_1EFCA5A08);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5930);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D2CCD4EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5930);
  return sub_1D2CCCE04();
}

uint64_t static Color.sourceTextColor.getter()
{
  return sub_1D2CCD580();
}

uint64_t static Color.translateAccentColor.getter()
{
  return sub_1D2CCD580();
}

uint64_t static Color.broadcastTintColor.getter()
{
  return sub_1D2CCD580();
}

uint64_t sub_1D2CCD580()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1D2D9D83C();
}

void static Color.sourceLinkColor.getter()
{
  sub_1D2CCD794((SEL *)&selRef_secondaryLabelColor);
}

uint64_t static Color.secondarySourceTextColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t static Color.tertiarySourceTextColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t static Color.quaternarySourceTextColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t static Color.targetTextColor.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1D2D9D83C();
}

uint64_t static Color.targetLinkColor.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9D83C();
  v2 = sub_1D2D9D818();
  swift_release();
  return v2;
}

uint64_t static Color.tertiaryTranslateAccentColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t static Color.secondaryTranslateAccentColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t static Color.quaternaryTranslateAccentColor.getter()
{
  return sub_1D2CCD854();
}

void static Color.appBackgroundColor.getter()
{
  sub_1D2CCD794((SEL *)&selRef_systemGroupedBackgroundColor);
}

void static Color.enabledCardButtonFillColor.getter()
{
  sub_1D2CCD794((SEL *)&selRef_systemGroupedBackgroundColor);
}

void sub_1D2CCD794(SEL *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), *a1);
  JUMPOUT(0x1D8247330);
}

uint64_t static Color.disabledCardButtonFillColor.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  MEMORY[0x1D8247330](v0);
  v1 = sub_1D2D9D818();
  swift_release();
  return v1;
}

double static Color.secondaryColorOpacity.getter()
{
  return 0.4;
}

uint64_t static Color.dictionaryHighlightColor.getter()
{
  return sub_1D2CCD854();
}

uint64_t sub_1D2CCD854()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9D83C();
  v2 = sub_1D2D9D818();
  swift_release();
  return v2;
}

void static UIColor.sourceTextColor.getter()
{
  sub_1D2CCD934();
}

void static UIColor.translateAccentColor.getter()
{
  sub_1D2CCD934();
}

void static UIColor.broadcastTintColor.getter()
{
  sub_1D2CCD934();
}

void sub_1D2CCD934()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1D2D9DCB0();
  v3 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v2, v1, 0);

  if (!v3)
    __break(1u);
}

uint64_t static UIColor.sourceLinkColor.getter()
{
  id v0;

  sub_1D2CCDA34();
  v0 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  MEMORY[0x1D8247330](v0);
  return sub_1D2D9E124();
}

unint64_t sub_1D2CCDA34()
{
  unint64_t result;

  result = qword_1ED586C40;
  if (!qword_1ED586C40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED586C40);
  }
  return result;
}

uint64_t static UIColor.secondarySourceTextColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t static UIColor.tertiarySourceTextColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t static UIColor.quaternarySourceTextColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t static UIColor.targetTextColor.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  sub_1D2CCDA34();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9D83C();
  return sub_1D2D9E124();
}

uint64_t static UIColor.targetLinkColor.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  sub_1D2CCDA34();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9D83C();
  sub_1D2D9D818();
  swift_release();
  return sub_1D2D9E124();
}

uint64_t static UIColor.secondaryTranslateAccentColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t static UIColor.tertiaryTranslateAccentColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t static UIColor.quaternaryTranslateAccentColor.getter()
{
  return sub_1D2CCDC6C();
}

id static UIColor.appBackgroundColor.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
}

uint64_t static UIColor.dictionaryHighlightColor.getter()
{
  return sub_1D2CCDC6C();
}

uint64_t sub_1D2CCDC6C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  sub_1D2CCDA34();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9D83C();
  sub_1D2D9D818();
  swift_release();
  return sub_1D2D9E124();
}

uint64_t sub_1D2CCDD10@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D2D9E040();
    v31 = (void *)sub_1D2D9D3EC();
    sub_1D2D9C84C();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_1D2D9CE10();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1D2CCCB0C(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_1D2CCDEF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1D2CCDF48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EFCA5A68, &qword_1EFCA5A70).n128_u64[0];
  return result;
}

__n128 sub_1D2CCDF48@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D2D9E040();
    v28 = (void *)sub_1D2D9D3EC();
    sub_1D2D9C84C();

    v19 = a17;
  }
  sub_1D2D9CE10();
  sub_1D2CCAD60(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_1D2CCE114@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1D2CCDF48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EFCA5A58, &qword_1EFCA5A60).n128_u64[0];
  return result;
}

double sub_1D2CCE16C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1D2CCDF48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EFCA5A48, &qword_1EFCA5A50).n128_u64[0];
  return result;
}

uint64_t ContainerStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A10);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9D410();
  sub_1D2D9CAF8();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, a1, v16);
  v17 = &v6[*(int *)(v4 + 36)];
  *v17 = v7;
  *((_QWORD *)v17 + 1) = v9;
  *((_QWORD *)v17 + 2) = v11;
  *((_QWORD *)v17 + 3) = v13;
  *((_QWORD *)v17 + 4) = v15;
  v17[40] = 0;
  v18 = sub_1D2D9DA70();
  sub_1D2CCDF48(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v18, v19, &qword_1EFCA5A10, &qword_1EFCA5A28);
  return sub_1D2CCE308((uint64_t)v6);
}

uint64_t sub_1D2CCE308(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CCE350()
{
  return sub_1D2D9CBC4();
}

uint64_t sub_1D2CCE368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A10);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9D410();
  sub_1D2D9CAF8();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, a1, v16);
  v17 = &v6[*(int *)(v4 + 36)];
  *v17 = v7;
  *((_QWORD *)v17 + 1) = v9;
  *((_QWORD *)v17 + 2) = v11;
  *((_QWORD *)v17 + 3) = v13;
  *((_QWORD *)v17 + 4) = v15;
  v17[40] = 0;
  v18 = sub_1D2D9DA70();
  sub_1D2CCDF48(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v18, v19, &qword_1EFCA5A10, &qword_1EFCA5A28);
  return sub_1D2CCE308((uint64_t)v6);
}

void View.containerPadding()()
{
  JUMPOUT(0x1D82472A0);
}

uint64_t sub_1D2CCE4C0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ContainerStyle()
{
  return &type metadata for ContainerStyle;
}

uint64_t sub_1D2CCE4E0()
{
  return sub_1D2CCE538(&qword_1EFCA5A20, &qword_1EFCA5A28, sub_1D2CCE514, MEMORY[0x1E0CDA228]);
}

uint64_t sub_1D2CCE514()
{
  return sub_1D2CCE538(&qword_1EFCA5A30, &qword_1EFCA5A10, (uint64_t (*)(void))sub_1D2CCE5A0, MEMORY[0x1E0CD9758]);
}

uint64_t sub_1D2CCE538(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2CCE5A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5A38;
  if (!qword_1EFCA5A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A18);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5A38);
  }
  return result;
}

uint64_t sub_1D2CCE5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_1D2D9CD80();
  v4[0] = v1;
  v4[1] = sub_1D2CCE640();
  return MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1D2CCE640()
{
  unint64_t result;

  result = qword_1EFCA5A40;
  if (!qword_1EFCA5A40)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ContainerStyle, &type metadata for ContainerStyle);
    atomic_store(result, (unint64_t *)&qword_1EFCA5A40);
  }
  return result;
}

uint64_t sub_1D2CCE684@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  double v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v43 = a1;
  v42 = a2;
  v2 = sub_1D2D9D2FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AB8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AC0);
  MEMORY[0x1E0C80A78](v38);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AC8);
  MEMORY[0x1E0C80A78](v39);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AD0);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AD8);
  MEMORY[0x1E0C80A78](v41);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D308();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v17 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v17 = 0;
  *((_WORD *)v17 + 4) = 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v3) = v43;
  LOBYTE(v2) = sub_1D2D9D410();
  sub_1D2D9CAF8();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v10, &qword_1EFCA5AB8);
  v26 = &v10[*(int *)(v38 + 36)];
  *v26 = v2;
  *((_QWORD *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA5AB8);
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  sub_1D2CCAD60((uint64_t)v10, (uint64_t)v12, &qword_1EFCA5AC0);
  v27 = &v12[*(int *)(v39 + 36)];
  v28 = v45;
  *(_OWORD *)v27 = v44;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v46;
  sub_1D2CCADA4((uint64_t)v10, &qword_1EFCA5AC0);
  KeyPath = 0;
  v30 = 0;
  v31 = 0;
  if ((v3 & 1) != 0)
  {
    v30 = sub_1D2D9D80C();
    KeyPath = swift_getKeyPath();
    if ((sub_1D2D9D314() & 1) != 0)
      v31 = 0x3FE3333333333333;
    else
      v31 = 0x3FF0000000000000;
  }
  v32 = sub_1D2D9DA70();
  v34 = v33;
  sub_1D2CCAD60((uint64_t)v12, (uint64_t)v14, &qword_1EFCA5AC8);
  v35 = (uint64_t *)&v14[*(int *)(v40 + 36)];
  *v35 = KeyPath;
  v35[1] = v30;
  v35[2] = v31;
  v35[3] = v32;
  v35[4] = v34;
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA5AC8);
  if (v43 & 1 | ((sub_1D2D9D314() & 1) == 0))
    v36 = 1.0;
  else
    v36 = 0.6;
  sub_1D2CCAD60((uint64_t)v14, (uint64_t)v16, &qword_1EFCA5AD0);
  *(double *)&v16[*(int *)(v41 + 36)] = v36;
  sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA5AD0);
  return sub_1D2CCF180((uint64_t)v16, v42);
}

uint64_t sub_1D2CCEA48@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_1D2CCE684(*v1, a1);
}

uint64_t ConversationButton.init(action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ConversationButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *v1;
  v11 = v1[1];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  sub_1D2CCCEF0(v12);
  sub_1D2D9D8FC();
  v16[15] = 1;
  sub_1D2CC6C74(&qword_1EFCA5A88, &qword_1EFCA5A78, MEMORY[0x1E0CDFA58]);
  sub_1D2CCECF8();
  sub_1D2D9D620();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v14 = sub_1D2D9D7E8();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A98) + 36)) = v14;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1D2CCEC18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_1D2D9D860();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D854();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF6F8], v2);
  v6 = sub_1D2D9D884();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

unint64_t sub_1D2CCECF8()
{
  unint64_t result;

  result = qword_1EFCA5A90;
  if (!qword_1EFCA5A90)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA00D8, &type metadata for TranslateButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1EFCA5A90);
  }
  return result;
}

uint64_t sub_1D2CCED3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CCED4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *v1;
  v11 = v1[1];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  sub_1D2CCCEF0(v12);
  sub_1D2D9D8FC();
  v16[15] = 1;
  sub_1D2CC6C74(&qword_1EFCA5A88, &qword_1EFCA5A78, MEMORY[0x1E0CDFA58]);
  sub_1D2CCECF8();
  sub_1D2D9D620();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v14 = sub_1D2D9D7E8();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A98) + 36)) = v14;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

ValueMetadata *type metadata accessor for ConversationButton()
{
  return &type metadata for ConversationButton;
}

unint64_t sub_1D2CCEF18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1EFCA5AA0;
  if (!qword_1EFCA5AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A98);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A78);
    v2[3] = &type metadata for TranslateButtonStyle;
    v2[4] = sub_1D2CC6C74(&qword_1EFCA5A88, &qword_1EFCA5A78, MEMORY[0x1E0CDFA58]);
    v2[5] = sub_1D2CCECF8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5AA8, &qword_1EFCA5AB0, MEMORY[0x1E0CDC718]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA5AA0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TranslateButtonStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslateButtonStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2CCF0F0 + 4 * byte_1D2DA0045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2CCF124 + 4 * asc_1D2DA0040[v4]))();
}

uint64_t sub_1D2CCF124(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CCF12C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CCF134);
  return result;
}

uint64_t sub_1D2CCF140(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CCF148);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2CCF14C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CCF154(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranslateButtonStyle()
{
  return &type metadata for TranslateButtonStyle;
}

uint64_t sub_1D2CCF170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CCF180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CCF200()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1D2CCF228()
{
  return sub_1D2CCE538(&qword_1EFCA5AE0, &qword_1EFCA5AD8, (uint64_t (*)(void))sub_1D2CCF25C, MEMORY[0x1E0CD9728]);
}

unint64_t sub_1D2CCF25C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA5AE8;
  if (!qword_1EFCA5AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5AD0);
    v2[0] = sub_1D2CCE538(&qword_1EFCA5AF0, &qword_1EFCA5AC8, sub_1D2CCF300, MEMORY[0x1E0CD8D70]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5B10, &qword_1EFCA5B18, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA5AE8);
  }
  return result;
}

uint64_t sub_1D2CCF300()
{
  return sub_1D2CCE538(&qword_1EFCA5AF8, &qword_1EFCA5AC0, sub_1D2CCF324, MEMORY[0x1E0CD9758]);
}

uint64_t sub_1D2CCF324()
{
  return sub_1D2CCE538(&qword_1EFCA5B00, &qword_1EFCA5AB8, (uint64_t (*)(void))sub_1D2CCF348, MEMORY[0x1E0CDB158]);
}

unint64_t sub_1D2CCF348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5B08;
  if (!qword_1EFCA5B08)
  {
    v1 = sub_1D2D9D2FC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDC520], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5B08);
  }
  return result;
}

unint64_t sub_1D2CCF390(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C10);
  v2 = (_QWORD *)sub_1D2D9E3D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1D2D64F2C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCF4A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B8);
  v2 = sub_1D2D9E3D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2CCAD60(v6, (uint64_t)&v15, &qword_1ED5877A8);
    v7 = v15;
    v8 = v16;
    result = sub_1D2D64F2C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D2CD1FA4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCF5DC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C48);
  v2 = sub_1D2D9E3D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2CCAD60(v6, (uint64_t)&v13, &qword_1EFCA5C50);
    v7 = v13;
    result = sub_1D2D64F90(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1D2CD1FA4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCF708(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5BF0);
  v2 = (_QWORD *)sub_1D2D9E3D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D2D64F2C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCF818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5FB0);
  v6 = sub_1D2D9E3D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2CCAD60(v12, (uint64_t)v5, &qword_1EFCA5C30);
    result = sub_1D2D65098((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1D2D9C6FC();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
    result = sub_1D2CD2018(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, &qword_1EFCA5C38);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCF9D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C20);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C28);
  v6 = sub_1D2D9E3D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2CCAD60(v12, (uint64_t)v5, &qword_1EFCA5C20);
    result = sub_1D2D65010((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for TextModel();
    sub_1D2CD1FD4((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v19 = v7[7];
    v20 = sub_1D2D9C6FC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCFB88(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C40);
  v2 = (_QWORD *)sub_1D2D9E3D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D2D64F2C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2CCFC98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C18);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5F90);
  v6 = sub_1D2D9E3D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2CCAD60(v12, (uint64_t)v5, &qword_1EFCA5C18);
    result = sub_1D2D65098((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1D2D9C6FC();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for VisualTranslationModel(0);
    result = sub_1D2CD1FD4(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, type metadata accessor for VisualTranslationModel);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t CoreAnalyticsLogger.Event.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001DLL;
  else
    return 0xD000000000000016;
}

TranslationUI::CoreAnalyticsLogger::Event_optional __swiftcall CoreAnalyticsLogger.Event.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (TranslationUI::CoreAnalyticsLogger::Event_optional)sub_1D2CD0980(v1);
}

uint64_t sub_1D2CCFE9C(char *a1, char *a2)
{
  return sub_1D2D2C13C(*a1, *a2);
}

uint64_t sub_1D2CCFEA8()
{
  return sub_1D2D69124();
}

uint64_t sub_1D2CCFEB0()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CCFF10()
{
  return sub_1D2D70548();
}

TranslationUI::CoreAnalyticsLogger::Event_optional sub_1D2CCFF18(Swift::String *a1)
{
  return CoreAnalyticsLogger.Event.init(rawValue:)(*a1);
}

void sub_1D2CCFF24(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001DLL;
  else
    v2 = 0xD000000000000016;
  v3 = 0x80000001D2DA7580;
  if (*v1)
    v3 = 0x80000001D2DA75A0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static CoreAnalyticsLogger.shared.getter()
{
  type metadata accessor for CoreAnalyticsLogger();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for CoreAnalyticsLogger()
{
  return objc_opt_self();
}

uint64_t sub_1D2CCFFA4(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = *a1;
  if (qword_1EFCA5498 != -1)
    swift_once();
  v4 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EFCB25D0);
  swift_bridgeObjectRetain_n();
  v5 = sub_1D2D9C8DC();
  v6 = sub_1D2D9E028();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446723;
    v17 = v8;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v16[1] = 0x80000001D2DA7E20;
    v15 = v3;
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2CF78E0(0xD000000000000016, 0x80000001D2DA7E20, &v17);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2081;
    swift_bridgeObjectRetain();
    v9 = sub_1D2D9DC38();
    v11 = v10;
    swift_bridgeObjectRelease();
    v16[0] = sub_1D2CF78E0(v9, v11, &v17);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2050;
    v12 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRelease();
    v16[0] = v12;
    v3 = v15;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v5, v6, "Sending event %{public}s with payload: %{private}s; number of keys: %{public}ld",
      (uint8_t *)v7,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v8, -1, -1);
    MEMORY[0x1D8248974](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v16[0]) = v3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  swift_bridgeObjectRetain();
  sub_1D2CD02C8((char *)v16, (uint64_t)sub_1D2CD2080, v13);
  return swift_release();
}

void sub_1D2CD02C8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t aBlock;
  unint64_t v22;
  id (*v23)(uint64_t);
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v6 = *v3;
  v7 = *a1;
  if (qword_1EFCA5498 != -1)
    swift_once();
  v8 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EFCB25D0);
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E028();
  if (os_log_type_enabled(v9, v10))
  {
    v19 = v6;
    v11 = (uint8_t *)swift_slowAlloc();
    v18 = a2;
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000016;
    v22 = 0x80000001D2DA7E20;
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    aBlock = sub_1D2CF78E0(0xD000000000000016, 0x80000001D2DA7E20, &v20);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v9, v10, "Got request to lazily log event %{public}s with a payload provider", v11, 0xCu);
    swift_arrayDestroy();
    v13 = v12;
    a2 = v18;
    MEMORY[0x1D8248974](v13, -1, -1);
    v14 = v11;
    v6 = v19;
    MEMORY[0x1D8248974](v14, -1, -1);

  }
  else
  {

  }
  aBlock = 0;
  v22 = 0xE000000000000000;
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000016;
  v22 = 0x80000001D2DA7E20;
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  *(_BYTE *)(v16 + 32) = v7;
  *(_QWORD *)(v16 + 40) = v6;
  v25 = sub_1D2CD1898;
  v26 = v16;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1D2CD0900;
  v24 = &block_descriptor;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v17);

}

uint64_t sub_1D2CD0628(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = a1();
  v2 = sub_1D2CD18FC(v1);
  swift_bridgeObjectRelease();
  if (qword_1EFCA5498 != -1)
    swift_once();
  v3 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFCB25D0);
  swift_bridgeObjectRetain_n();
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E028();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446723;
    v11 = v7;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2CF78E0(0xD000000000000016, 0x80000001D2DA7E20, &v11);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2081;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C00);
    v8 = sub_1D2D9DD28();
    sub_1D2CF78E0(v8, v9, &v11);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2050;
    if (v2)
      swift_bridgeObjectRelease();
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v4, v5, "Sending event %{public}s with payload: %{private}s; number of keys: %{public}ld",
      (uint8_t *)v6,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v7, -1, -1);
    MEMORY[0x1D8248974](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v2;
}

id sub_1D2CD0900(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1D2CD18C0();
    v4 = (void *)sub_1D2D9DC20();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

TranslationUI::CoreAnalyticsLogger::CardType_optional __swiftcall CoreAnalyticsLogger.CardType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (TranslationUI::CoreAnalyticsLogger::CardType_optional)sub_1D2CD0980(v1);
}

uint64_t sub_1D2CD0980@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D2D9E3F4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t CoreAnalyticsLogger.CardType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x657474696D6D6F63;
  else
    return 0x65736F706D6F63;
}

uint64_t sub_1D2CD0A1C(char *a1, char *a2)
{
  return sub_1D2D2C094(*a1, *a2);
}

uint64_t sub_1D2CD0A28()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2CD0AAC()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CD0B0C()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

TranslationUI::CoreAnalyticsLogger::CardType_optional sub_1D2CD0B8C(Swift::String *a1)
{
  return CoreAnalyticsLogger.CardType.init(rawValue:)(*a1);
}

void sub_1D2CD0B98(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65736F706D6F63;
  if (*v1)
    v2 = 0x657474696D6D6F63;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000064;
  *a1 = v2;
  a1[1] = v3;
}

TranslationUI::CoreAnalyticsLogger::InteractionLocation_optional __swiftcall CoreAnalyticsLogger.InteractionLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TranslationUI::CoreAnalyticsLogger::InteractionLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D2D9E3F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CoreAnalyticsLogger.InteractionLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D2CD0C68 + 4 * byte_1D2DA0160[*v0]))(0xD000000000000011, 0x80000001D2DA75D0);
}

uint64_t sub_1D2CD0C68()
{
  return 0x7463416B63697571;
}

uint64_t sub_1D2CD0C88()
{
  return 0x74616C736E617274;
}

uint64_t sub_1D2CD0CAC()
{
  return 0x61546172656D6163;
}

uint64_t sub_1D2CD0CC8()
{
  return 0x61737265766E6F63;
}

uint64_t sub_1D2CD0CEC()
{
  return 0x657469726F766166;
}

void sub_1D2CD0D0C(char *a1)
{
  sub_1D2D2C1E4(*a1);
}

void sub_1D2CD0D18()
{
  char *v0;

  sub_1D2D691A8(*v0);
}

void sub_1D2CD0D20(uint64_t a1)
{
  char *v1;

  sub_1D2D6FD38(a1, *v1);
}

void sub_1D2CD0D28(uint64_t a1)
{
  char *v1;

  sub_1D2D7042C(a1, *v1);
}

TranslationUI::CoreAnalyticsLogger::InteractionLocation_optional sub_1D2CD0D30(Swift::String *a1)
{
  return CoreAnalyticsLogger.InteractionLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D2CD0D3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2CD0D70 + 4 * byte_1D2DA0166[*v0]))();
}

void sub_1D2CD0D70(_QWORD *a1@<X8>)
{
  *a1 = 0x7463416B63697571;
  a1[1] = 0xEB000000006E6F69;
}

void sub_1D2CD0D94(char *a1@<X8>)
{
  strcpy(a1, "translationTab");
  a1[15] = -18;
}

void sub_1D2CD0DBC(_QWORD *a1@<X8>)
{
  *a1 = 0x61546172656D6163;
  a1[1] = 0xE900000000000062;
}

void sub_1D2CD0DDC(_QWORD *a1@<X8>)
{
  *a1 = 0x61737265766E6F63;
  a1[1] = 0xEF6261546E6F6974;
}

void sub_1D2CD0E04(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "favoritesTab");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1D2CD0E28(unsigned __int8 *a1, char a2, char a3, char a4)
{
  int v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v15;

  v7 = *a1;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D2DA03F0;
  *(_QWORD *)(inited + 32) = 0x6570795464726163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v9 = 0x65736F706D6F63;
  v10 = MEMORY[0x1E0DEA968];
  if (v7)
    v9 = 0x657474696D6D6F63;
  v11 = 0xE700000000000000;
  if (v7)
    v11 = 0xE900000000000064;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x80000001D2DA7DA0;
  strcpy((char *)(inited + 96), "translationTab");
  *(_BYTE *)(inited + 111) = -18;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0x65646E6547736168;
  v12 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 136) = 0xE900000000000072;
  *(_BYTE *)(inited + 144) = a2;
  *(_QWORD *)(inited + 168) = v12;
  *(_QWORD *)(inited + 176) = 0x696E61654D736168;
  *(_QWORD *)(inited + 184) = 0xEA0000000000676ELL;
  *(_BYTE *)(inited + 192) = a3;
  *(_QWORD *)(inited + 216) = v12;
  *(_QWORD *)(inited + 224) = 0xD000000000000022;
  *(_QWORD *)(inited + 232) = 0x80000001D2DA7DC0;
  *(_QWORD *)(inited + 264) = v12;
  *(_BYTE *)(inited + 240) = a4;
  v13 = sub_1D2CCF4A8(inited);
  sub_1D2CCFFA4(&v15, v13);
  return swift_bridgeObjectRelease();
}

void sub_1D2CD0FB8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t inited;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  char v21;

  v19[2] = a4;
  v20 = sub_1D2D9C7EC();
  v19[1] = *(_QWORD *)(v20 - 8);
  v6 = MEMORY[0x1E0C80A78](v20);
  v19[3] = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = *a1;
  v9 = *a2;
  v21 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C0);
  inited = swift_initStackObject();
  v11 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1D2DA03F0;
  *(_QWORD *)(inited + 32) = 0x6570795464726163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v12 = 0x65736F706D6F63;
  if (v8)
    v12 = 0x657474696D6D6F63;
  v13 = 0xE900000000000064;
  if (!v8)
    v13 = 0xE700000000000000;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 72) = v14;
  strcpy((char *)(inited + 80), "selectedType");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v15 = (id)_LTDisambiguationTypeDescription();
  v16 = sub_1D2D9DCD4();
  v18 = v17;

  v11[12] = v16;
  v11[13] = v18;
  v11[15] = v14;
  v11[16] = 0xD000000000000013;
  v11[17] = 0x80000001D2DA7DA0;
  __asm { BR              X10 }
}

uint64_t sub_1D2CD1178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  *(_QWORD *)(v2 + 144) = 0x7463416B63697571;
  *(_QWORD *)(v2 + 152) = 0xEB000000006E6F69;
  *(_QWORD *)(v2 + 168) = v1;
  strcpy((char *)(v2 + 176), "sourceLocale");
  *(_BYTE *)(v2 + 189) = 0;
  *(_WORD *)(v2 + 190) = -5120;
  v5 = (void *)v0[2];
  v6 = objc_msgSend(v5, sel_sourceLocale);
  sub_1D2D9C75C();

  v0[10] = sub_1D2D9C714();
  v0[11] = v7;
  v0[8] = 45;
  v0[9] = 0xE100000000000000;
  v0[6] = 95;
  v0[7] = 0xE100000000000000;
  sub_1D2CD1430();
  v8 = sub_1D2D9E1E4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v1;
  v12 = *(void (**)(uint64_t, uint64_t))(v0[1] + 8);
  v13 = v3;
  v14 = v0[4];
  v12(v13, v14);
  *(_QWORD *)(v2 + 192) = v8;
  *(_QWORD *)(v2 + 200) = v10;
  *(_QWORD *)(v2 + 216) = v11;
  strcpy((char *)(v2 + 224), "targetLocale");
  *(_BYTE *)(v2 + 237) = 0;
  *(_WORD *)(v2 + 238) = -5120;
  v15 = objc_msgSend(v5, sel_targetLocale);
  v16 = v0[3];
  sub_1D2D9C75C();

  v0[10] = sub_1D2D9C714();
  v0[11] = v17;
  v0[8] = 45;
  v0[9] = 0xE100000000000000;
  v0[6] = 95;
  v0[7] = 0xE100000000000000;
  v18 = sub_1D2D9E1E4();
  v20 = v19;
  swift_bridgeObjectRelease();
  v12(v16, v14);
  *(_QWORD *)(v2 + 264) = v11;
  *(_QWORD *)(v2 + 240) = v18;
  *(_QWORD *)(v2 + 248) = v20;
  v21 = sub_1D2CCF4A8(v2);
  sub_1D2CCFFA4((char *)(v4 - 89), v21);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D2CD1430()
{
  unint64_t result;

  result = qword_1ED5878D0;
  if (!qword_1ED5878D0)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED5878D0);
  }
  return result;
}

uint64_t CoreAnalyticsLogger.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreAnalyticsLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D2CD1490()
{
  unint64_t result;

  result = qword_1EFCA5B20;
  if (!qword_1EFCA5B20)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for CoreAnalyticsLogger.Event, &type metadata for CoreAnalyticsLogger.Event);
    atomic_store(result, (unint64_t *)&qword_1EFCA5B20);
  }
  return result;
}

unint64_t sub_1D2CD14D8()
{
  unint64_t result;

  result = qword_1EFCA5B28;
  if (!qword_1EFCA5B28)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for CoreAnalyticsLogger.CardType, &type metadata for CoreAnalyticsLogger.CardType);
    atomic_store(result, (unint64_t *)&qword_1EFCA5B28);
  }
  return result;
}

unint64_t sub_1D2CD1520()
{
  unint64_t result;

  result = qword_1EFCA5B30;
  if (!qword_1EFCA5B30)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for CoreAnalyticsLogger.InteractionLocation, &type metadata for CoreAnalyticsLogger.InteractionLocation);
    atomic_store(result, (unint64_t *)&qword_1EFCA5B30);
  }
  return result;
}

uint64_t method lookup function for CoreAnalyticsLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.didOfferDisambiguation(fromCard:hasGender:hasMeaning:genderDisambiguationSettingEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.didInteractWithDisambiguation(fromCard:location:type:localePair:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1D2CD1590(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D2CD1598(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.Event()
{
  return &type metadata for CoreAnalyticsLogger.Event;
}

uint64_t getEnumTagSinglePayload for ErrorStateView.Context(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13TranslationUI19CoreAnalyticsLoggerC5EventOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2CD1690 + 4 * byte_1D2DA0171[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2CD16C4 + 4 * byte_1D2DA016C[v4]))();
}

uint64_t sub_1D2CD16C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CD16CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CD16D4);
  return result;
}

uint64_t sub_1D2CD16E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CD16E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2CD16EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CD16F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.CardType()
{
  return &type metadata for CoreAnalyticsLogger.CardType;
}

uint64_t getEnumTagSinglePayload for CoreAnalyticsLogger.InteractionLocation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreAnalyticsLogger.InteractionLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D2CD17EC + 4 * byte_1D2DA017B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D2CD1820 + 4 * byte_1D2DA0176[v4]))();
}

uint64_t sub_1D2CD1820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CD1828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CD1830);
  return result;
}

uint64_t sub_1D2CD183C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CD1844);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D2CD1848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CD1850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1D2CD185C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.InteractionLocation()
{
  return &type metadata for CoreAnalyticsLogger.InteractionLocation;
}

uint64_t sub_1D2CD1874()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CD1898()
{
  uint64_t v0;

  return sub_1D2CD0628(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1D2CD18C0()
{
  unint64_t result;

  result = qword_1EFCA5BF8;
  if (!qword_1EFCA5BF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA5BF8);
  }
  return result;
}

uint64_t sub_1D2CD18FC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  id v28;
  char v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  int64_t v56;
  int64_t v57;
  id v58;
  uint64_t v59;
  _QWORD v60[4];
  __int128 v61;
  _OWORD v62[2];
  uint64_t v63;
  unint64_t v64;
  __int128 v65;

  if (!a1)
    return 0;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_1D2CCF390(MEMORY[0x1E0DEE9D8]);
  v55 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v56 = (unint64_t)(v3 + 63) >> 6;
  v57 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v57 << 6);
LABEL_10:
      v10 = *(_QWORD *)(a1 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v61 = *v11;
      *((_QWORD *)&v61 + 1) = v12;
      sub_1D2CC80A4(v10 + 32 * v9, (uint64_t)v62);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    v13 = v57 + 1;
    if (__OFADD__(v57, 1))
      goto LABEL_63;
    if (v13 < v56)
    {
      v14 = *(_QWORD *)(v55 + 8 * v13);
      if (v14)
        goto LABEL_14;
      v15 = v57 + 2;
      ++v57;
      if (v13 + 1 < v56)
      {
        v14 = *(_QWORD *)(v55 + 8 * v15);
        if (v14)
          goto LABEL_17;
        v57 = v13 + 1;
        if (v13 + 2 < v56)
        {
          v14 = *(_QWORD *)(v55 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_14;
          }
          v15 = v13 + 3;
          v57 = v13 + 2;
          if (v13 + 3 < v56)
            break;
        }
      }
    }
LABEL_28:
    v5 = 0;
    memset(v62, 0, sizeof(v62));
    v61 = 0u;
LABEL_29:
    sub_1D2CD2018((uint64_t)&v61, (uint64_t)&v63, &qword_1EFCA5C08);
    v16 = v64;
    if (!v64)
    {
      swift_release();
      return (uint64_t)v2;
    }
    v17 = v63;
    sub_1D2CD1FA4(&v65, &v61);
    sub_1D2CC80A4((uint64_t)&v61, (uint64_t)v60);
    if (swift_dynamicCast())
    {
      v18 = sub_1D2D9DCB0();
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60[0] = v2;
      v21 = sub_1D2D64F2C(v17, v16);
      v22 = v2[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      v25 = v20;
      if (v2[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v2 = (_QWORD *)v60[0];
          if ((v20 & 1) == 0)
            goto LABEL_49;
        }
        else
        {
          sub_1D2CD8B04();
          v2 = (_QWORD *)v60[0];
          if ((v25 & 1) == 0)
            goto LABEL_49;
        }
      }
      else
      {
        sub_1D2CD71DC(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_1D2D64F2C(v17, v16);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_68;
        v21 = v26;
        v2 = (_QWORD *)v60[0];
        if ((v25 & 1) == 0)
        {
LABEL_49:
          v2[(v21 >> 6) + 8] |= 1 << v21;
          v49 = (uint64_t *)(v2[6] + 16 * v21);
          *v49 = v17;
          v49[1] = v16;
          *(_QWORD *)(v2[7] + 8 * v21) = v18;
          v50 = v2[2];
          v40 = __OFADD__(v50, 1);
          v51 = v50 + 1;
          if (v40)
            goto LABEL_65;
          v2[2] = v51;
          swift_bridgeObjectRetain();
          goto LABEL_6;
        }
      }
      v6 = v2[7];
      v7 = 8 * v21;

      *(_QWORD *)(v6 + v7) = v18;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1D2CC80A4((uint64_t)&v61, (uint64_t)v60);
    sub_1D2CD18C0();
    if (swift_dynamicCast())
    {
      v28 = v58;
      v29 = swift_isUniquelyReferenced_nonNull_native();
      v60[0] = v2;
      v31 = sub_1D2D64F2C(v17, v16);
      v32 = v2[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_64;
      v35 = v30;
      if (v2[3] < v34)
      {
        sub_1D2CD71DC(v34, v29);
        v36 = sub_1D2D64F2C(v17, v16);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_68;
        v31 = v36;
        v2 = (_QWORD *)v60[0];
        if ((v35 & 1) == 0)
          goto LABEL_41;
LABEL_54:
        v52 = v2[7];
        v53 = 8 * v31;

        *(_QWORD *)(v52 + v53) = v28;
        goto LABEL_6;
      }
      if ((v29 & 1) != 0)
      {
        v2 = (_QWORD *)v60[0];
        if ((v30 & 1) != 0)
          goto LABEL_54;
      }
      else
      {
        sub_1D2CD8B04();
        v2 = (_QWORD *)v60[0];
        if ((v35 & 1) != 0)
          goto LABEL_54;
      }
LABEL_41:
      v2[(v31 >> 6) + 8] |= 1 << v31;
      v38 = (uint64_t *)(v2[6] + 16 * v31);
      *v38 = v17;
      v38[1] = v16;
      *(_QWORD *)(v2[7] + 8 * v31) = v28;
      v39 = v2[2];
      v40 = __OFADD__(v39, 1);
      v41 = v39 + 1;
      if (v40)
        goto LABEL_66;
      v2[2] = v41;
      swift_bridgeObjectRetain();

      goto LABEL_6;
    }
    if (qword_1EFCA5498 != -1)
      swift_once();
    v42 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EFCB25D0);
    sub_1D2CC80A4((uint64_t)&v61, (uint64_t)v60);
    swift_bridgeObjectRetain();
    v43 = sub_1D2D9C8DC();
    v44 = sub_1D2D9E040();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v59 = v46;
      *(_DWORD *)v45 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v45 + 4) = sub_1D2CF78E0(v17, v16, &v59);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2082;
      sub_1D2CC80A4((uint64_t)v60, (uint64_t)&v58);
      v47 = sub_1D2D9DD28();
      *(_QWORD *)(v45 + 14) = sub_1D2CF78E0(v47, v48, &v59);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      _os_log_impl(&dword_1D2CC0000, v43, v44, "Failed to convert Swift value to NSObject in analytics dictionary for key %{public}s: %{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v46, -1, -1);
      MEMORY[0x1D8248974](v45, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      swift_bridgeObjectRelease_n();
    }
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v61);
  }
  v14 = *(_QWORD *)(v55 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
LABEL_14:
    v5 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v57 = v13;
    goto LABEL_10;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v56)
    {
      v57 = v56 - 1;
      goto LABEL_28;
    }
    v14 = *(_QWORD *)(v55 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_14;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  result = sub_1D2D9E568();
  __break(1u);
  return result;
}

_OWORD *sub_1D2CD1FA4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1D2CD1FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2CD2018(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2CD205C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2CD2080()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectableLanguagePicker.init(isDetected:selectedOption:preferredLocales:oppositeLocale:languageModels:sourceUsesOCR:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v17 = (int *)type metadata accessor for DetectableLanguagePicker();
  v18 = v17[6];
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  sub_1D2CD2018(a4, a9 + v17[5], &qword_1EFCA5C58);
  *(_QWORD *)(a9 + v18) = a5;
  v19 = a9 + v17[7];
  v20 = sub_1D2D9C7EC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a6, v20);
  *(_QWORD *)(a9 + v17[8]) = a7;
  *(_BYTE *)(a9 + v17[9]) = a8;
  return result;
}

uint64_t type metadata accessor for DetectableLanguagePicker()
{
  uint64_t result;

  result = qword_1EFCA5CC0;
  if (!qword_1EFCA5CC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DetectableLanguagePicker.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1D2D9D020();
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C60);
  return sub_1D2CD21E8(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_1D2CD21E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  int *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v62 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v3);
  v60 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D28);
  v8 = MEMORY[0x1E0C80A78](v7);
  v61 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v54 - v10;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_BYTE *)(a1 + 16);
  v63 = *(_QWORD *)a1;
  v64 = v12;
  v65 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v66, v14);
  if (v66 == 1)
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v17 = sub_1D2D9C5E8();
    v54[2] = v5;
    v19 = v18;

    v63 = v17;
    v64 = v19;
    sub_1D2CD1430();
    v20 = sub_1D2D9D5CC();
    v22 = v21;
    v24 = v23 & 1;
    sub_1D2D9D4E8();
    sub_1D2D9D464();
    swift_release();
    v25 = sub_1D2D9D5B4();
    v27 = v26;
    v29 = v28;
    v54[1] = v30;
    swift_release();
    sub_1D2CCCAB4(v20, v22, v24);
    swift_bridgeObjectRelease();
    sub_1D2D9D830();
    v31 = sub_1D2D9D590();
    v57 = v32;
    v58 = v31;
    LOBYTE(v22) = v33;
    v56 = v34;
    swift_release();
    v55 = v22 & 1;
    sub_1D2CCCAB4(v25, v27, v29 & 1);
    swift_bridgeObjectRelease();
    v35 = sub_1D2D9DAAC();
  }
  else
  {
    v57 = 0;
    v58 = 0;
    v55 = 0;
    v56 = 0;
    v35 = 0;
  }
  v36 = (int *)type metadata accessor for DetectableLanguagePicker();
  v37 = (uint64_t)v59;
  sub_1D2D9D974();
  v38 = *(_QWORD *)(a1 + v36[6]);
  v39 = a1 + v36[7];
  v40 = sub_1D2D9C7EC();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v60, v39, v40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  v43 = *(_QWORD *)(a1 + v36[8]);
  LOBYTE(v40) = *(_BYTE *)(a1 + v36[9]);
  KeyPath = swift_getKeyPath();
  sub_1D2CD2018(v37, (uint64_t)v11, &qword_1EFCA5C58);
  v45 = (int *)type metadata accessor for LIDOrLanguagePicker();
  *(_QWORD *)&v11[v45[5]] = v38;
  sub_1D2CD2018(v42, (uint64_t)&v11[v45[6]], &qword_1ED587850);
  *(_QWORD *)&v11[v45[7]] = v43;
  v11[v45[8]] = v40;
  v46 = &v11[v45[9]];
  *(_QWORD *)v46 = KeyPath;
  v46[8] = 0;
  v47 = v61;
  sub_1D2CD3778((uint64_t)v11, v61);
  v48 = v62;
  v50 = v57;
  v49 = v58;
  *v62 = v58;
  v48[1] = v50;
  LOBYTE(v41) = v55;
  v51 = v56;
  v48[2] = v55;
  v48[3] = v51;
  v48[4] = v35;
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5D30);
  sub_1D2CD3778(v47, (uint64_t)v48 + *(int *)(v52 + 48));
  sub_1D2CD37C0(v49, v50, v41, v51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2CD37FC((uint64_t)v11);
  sub_1D2CD37FC(v47);
  return sub_1D2CD383C(v49, v50, v41, v51);
}

uint64_t sub_1D2CD2648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1D2D9D020();
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C60);
  return sub_1D2CD21E8(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

uint64_t _s13TranslationUI24DetectableLanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  int v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v49;
  char v50;
  _BYTE v51[4];
  int v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v4 = type metadata accessor for LanguageOption();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v51[-v8];
  v53 = type metadata accessor for DetectableLanguagePicker();
  v10 = MEMORY[0x1E0C80A78](v53);
  v58 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x1E0C80A78](v10);
  v57 = &v51[-v13];
  v14 = MEMORY[0x1E0C80A78](v12);
  v55 = &v51[-v15];
  v16 = MEMORY[0x1E0C80A78](v14);
  v56 = &v51[-v17];
  v18 = MEMORY[0x1E0C80A78](v16);
  v54 = &v51[-v19];
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = &v51[-v21];
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = &v51[-v24];
  MEMORY[0x1E0C80A78](v23);
  v27 = &v51[-v26];
  v28 = *(_QWORD *)(a1 + 8);
  v29 = *(_BYTE *)(a1 + 16);
  v59 = *(_QWORD *)a1;
  v60 = v28;
  v61 = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v62);
  v31 = v62;
  v32 = *(_QWORD *)(a2 + 8);
  v33 = *(_BYTE *)(a2 + 16);
  v59 = *(_QWORD *)a2;
  v60 = v32;
  v61 = v33;
  MEMORY[0x1D82474B0](&v62, v30);
  v34 = v62;
  sub_1D2CD36F0(a1, (uint64_t)v27);
  sub_1D2CD36F0(a2, (uint64_t)v25);
  if (v31 != v34)
  {
    sub_1D2CD3734((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD3734((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD36F0(a1, (uint64_t)v22);
    v35 = v54;
    sub_1D2CD36F0(a2, (uint64_t)v54);
    v36 = a1;
LABEL_8:
    sub_1D2CD3734((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    v43 = (uint64_t)v57;
    v42 = (uint64_t)v58;
    v45 = (uint64_t)v55;
    v44 = (uint64_t)v56;
LABEL_9:
    sub_1D2CD36F0(v36, v44);
    sub_1D2CD36F0(a2, v45);
    goto LABEL_10;
  }
  v37 = v53;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  MEMORY[0x1D82474B0]();
  MEMORY[0x1D82474B0](v38);
  v39 = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v7);
  sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2CD3734((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2CD3734((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD3734((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD36F0(a1, (uint64_t)v22);
  v35 = v54;
  sub_1D2CD36F0(a2, (uint64_t)v54);
  v36 = a1;
  if ((v39 & 1) == 0)
    goto LABEL_8;
  v40 = *(int *)(v37 + 24);
  v41 = *(_QWORD *)&v35[v40];
  v43 = (uint64_t)v57;
  v42 = (uint64_t)v58;
  v45 = (uint64_t)v55;
  v44 = (uint64_t)v56;
  if (!*(_QWORD *)&v22[v40])
  {
    swift_bridgeObjectRetain();
    sub_1D2CD3734((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    if (!v41)
    {
      v36 = a1;
      sub_1D2CD36F0(a1, v44);
      sub_1D2CD36F0(a2, v45);
      goto LABEL_18;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v36 = a1;
    goto LABEL_9;
  }
  if (!v41)
  {
    swift_bridgeObjectRetain();
    sub_1D2CD3734((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v46 = swift_bridgeObjectRetain();
  v52 = sub_1D2D31630(v46, v41);
  swift_bridgeObjectRelease();
  sub_1D2CD3734((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  swift_bridgeObjectRelease();
  v36 = a1;
  sub_1D2CD36F0(a1, v44);
  sub_1D2CD36F0(a2, v45);
  if ((v52 & 1) == 0)
  {
LABEL_10:
    sub_1D2CD3734(v45, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD3734(v44, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
    sub_1D2CD36F0(v36, v43);
    sub_1D2CD36F0(a2, v42);
    goto LABEL_11;
  }
LABEL_18:
  v49 = v53;
  v50 = MEMORY[0x1D82462A4](v44 + *(int *)(v53 + 28), v45 + *(int *)(v53 + 28));
  sub_1D2CD3734(v45, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD3734(v44, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD36F0(v36, v43);
  sub_1D2CD36F0(a2, v42);
  if ((v50 & 1) != 0)
  {
    v47 = sub_1D2D317B4(*(_QWORD *)(v43 + *(int *)(v49 + 32)), *(_QWORD *)(v42 + *(int *)(v49 + 32)));
    goto LABEL_12;
  }
LABEL_11:
  v47 = 0;
LABEL_12:
  sub_1D2CD3734(v43, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  sub_1D2CD3734(v42, (uint64_t (*)(_QWORD))type metadata accessor for DetectableLanguagePicker);
  return v47 & 1;
}

uint64_t sub_1D2CD2BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for DetectableLanguagePicker(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[5];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
    v13 = (char *)v9 + v12;
    v14 = (const void *)(v10 + v12);
    v15 = sub_1D2D9C7EC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 2, v15))
    {
      v17 = type metadata accessor for LanguageOption();
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 2, v15);
    }
    v18 = a3[7];
    *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v19 = a1 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v21(v19, v20, v15);
    v22 = a3[9];
    *(_QWORD *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(_BYTE *)(a1 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DetectableLanguagePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1 + *(int *)(a2 + 28), v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v12 = (char *)v8 + v11;
  v13 = (const void *)(v9 + v11);
  v14 = sub_1D2D9C7EC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 2, v14))
  {
    v16 = type metadata accessor for LanguageOption();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
  }
  v17 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v20(v18, v19, v14);
  v21 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  swift_retain();
  swift_release();
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_retain();
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v10 = (void *)(v7 + v9);
  v11 = (void *)(v8 + v9);
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = type metadata accessor for LanguageOption();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(a1 + a3[7], a2 + a3[7], v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, const void *, uint64_t);
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v11 = (char *)v7 + v10;
  v12 = (const void *)(v8 + v10);
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    v15 = type metadata accessor for LanguageOption();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    v16 = *(void (**)(char *, const void *, uint64_t))(v14 + 32);
  }
  else
  {
    v16 = *(void (**)(char *, const void *, uint64_t))(v14 + 32);
    v16(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  v17 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v16((char *)(a1 + v17), (const void *)(a2 + v17), v13);
  v18 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  swift_release();
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v10 = (void *)(v7 + v9);
  v11 = (void *)(v8 + v9);
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = type metadata accessor for LanguageOption();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(a1 + a3[7], a2 + a3[7], v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectableLanguagePicker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CD344C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1D2D9C7EC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DetectableLanguagePicker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CD34FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1D2D9C7EC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D2CD359C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2CD364C();
  if (v0 <= 0x3F)
  {
    sub_1D2D9C7EC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D2CD364C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA5CD0)
  {
    type metadata accessor for LanguageOption();
    v0 = sub_1D2D9D98C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA5CD0);
  }
}

unint64_t sub_1D2CD36A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5D10;
  if (!qword_1EFCA5D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5D18);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFB10], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5D10);
  }
  return result;
}

uint64_t sub_1D2CD36F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetectableLanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CD3734(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D2CD3778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CD37C0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCB0C(result, a2, a3 & 1);
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2CD37FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CD383C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCAB4(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void *DisambiguationResultModel.disambiguableResult.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  v2 = v1;
  return v1;
}

void sub_1D2CD38A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;

  v2 = *a1;
  v3 = *a2;
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  *v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_BYTE *)(v3 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if ((*v5 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();
}

uint64_t sub_1D2CD3940()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1D2CD3988(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if ((*v4 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();
}

void (*sub_1D2CD3A14(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D2CD3A5C;
}

void sub_1D2CD3A5C(uint64_t a1, char a2)
{
  _BYTE *v4;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = (_BYTE *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
    swift_beginAccess();
    if ((*v4 & 1) != 0)
      sub_1D2CD5A58();
    else
      sub_1D2CD4D3C();
  }
}

uint64_t static DisambiguationResultModel.dictionaryItemKey.getter()
{
  return 0x414E4F4954434944;
}

void sub_1D2CD3AE8(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  *v3 = v2;
  if ((v2 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();
}

uint64_t sub_1D2CD3B4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_1D2CD3B98(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  *v3 = v2;
  if ((v2 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();
}

void (*sub_1D2CD3BF8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1D2CD3C50;
}

void sub_1D2CD3C50(_QWORD **a1, char a2)
{
  _QWORD *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if ((*(_BYTE *)(v3[3] + v3[4]) & 1) != 0)
      sub_1D2CD5A58();
    else
      sub_1D2CD4D3C();
  }
  free(v3);
}

BOOL static DisambiguationResultModel.TextLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DisambiguationResultModel.TextLocation.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t _s13TranslationUI25DisambiguationResultModelC13RenderingModeO9hashValueSivg_0()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

BOOL sub_1D2CD3D20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D2CD3D38()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2CD3D60@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D2CD3DBC(a1);
}

uint64_t sub_1D2CD3D74(void **a1, void **a2)
{
  return sub_1D2CD3E48(a1, a2);
}

uint64_t sub_1D2CD3D88()
{
  return sub_1D2CD3EC8();
}

uint64_t sub_1D2CD3D9C()
{
  return sub_1D2CD40AC();
}

uint64_t sub_1D2CD3DA8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D2CD3DBC(a1);
}

uint64_t sub_1D2CD3DBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2CD3E34(void **a1, void **a2)
{
  return sub_1D2CD3E48(a1, a2);
}

uint64_t sub_1D2CD3E48(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v4 = v2;
  v5 = v3;
  return sub_1D2D9C9C0();
}

uint64_t sub_1D2CD3EB4()
{
  return sub_1D2CD3EC8();
}

uint64_t sub_1D2CD3EC8()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2CD3F30()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5D50);
  sub_1D2D9C990();
  return swift_endAccess();
}

uint64_t sub_1D2CD3F90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5F80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5D50);
  sub_1D2D9C99C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1D2CD40A0()
{
  return sub_1D2CD40AC();
}

uint64_t sub_1D2CD40AC()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5D50);
  sub_1D2D9C990();
  return swift_endAccess();
}

unint64_t static DisambiguationResultModel.defaultAttributes(forRTL:)(char a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  v3 = v2;
  if ((a1 & 1) != 0)
    v4 = 2;
  else
    v4 = 0;
  objc_msgSend(v2, sel_setAlignment_, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
  v6 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = sub_1D2CC63E8(0, &qword_1EFCA5D68);
  *(_QWORD *)(inited + 40) = v3;
  v7 = v6;
  return sub_1D2CCF5DC(inited);
}

char *DisambiguationResultModel.__allocating_init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;
  char *v19;

  v18 = objc_allocWithZone(v10);
  v19 = sub_1D2CDA020(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_1D2CCCF1C(a9);
  sub_1D2CCCF1C(a7);
  sub_1D2CCCF1C(a5);

  return v19;
}

char *DisambiguationResultModel.init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v13;

  v13 = sub_1D2CDA020(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_1D2CCCF1C(a9);
  sub_1D2CCCF1C(a7);
  sub_1D2CCCF1C(a5);

  return v13;
}

id DisambiguationResultModel.__allocating_init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;
  id v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_1D2CDA3C8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D2CCCF1C(a7);
  return v18;
}

id DisambiguationResultModel.init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9;

  v9 = sub_1D2CDA3C8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D2CCCF1C(a7);
  return v9;
}

void sub_1D2CD43F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_setDelegate_, v0);
    objc_msgSend(v2, sel_addObserver_, v0);
    v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
    swift_beginAccess();
    if ((*v3 & 1) != 0)
      sub_1D2CD5A58();
    else
      sub_1D2CD4D3C();

  }
}

uint64_t sub_1D2CD4490(unsigned __int8 *a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v1 = *a1;
  v9 = *a1;
  v2 = sub_1D2CD6298(&v9);
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v2 = 0;
    v4 = 0xE000000000000000;
  }
  v8 = v1;
  v5 = sub_1D2CD5FBC(v2, v4, &v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16))
    v6 = *(_QWORD *)(v5 + 32);
  else
    v6 = 0;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t DisambiguationResultModel.LinkRangeInfo.sourceRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DisambiguationResultModel.LinkRangeInfo.targetRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_1D2CD452C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  BOOL v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v5 = sub_1D2D9C6FC();
  v59 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5D70);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DisambiguationLinkInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  if (!v15)
    goto LABEL_27;
  sub_1D2CCAD60(a1, (uint64_t)v10, (uint64_t *)&unk_1EFCA5D70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    sub_1D2CD1FD4((uint64_t)v10, (uint64_t)v14, type metadata accessor for DisambiguationLinkInfo);
    v16 = v15;
    v17 = (void *)sub_1D2D9C6CC();
    v18 = objc_msgSend((id)v16, sel_sentenceWithUUID_, v17);

    if (v18)
    {
      v19 = objc_msgSend(v18, sel_selectedTargetPhrase);
      if (v19)
      {
        v20 = (uint64_t)v19;
        v57 = v5;
        v58 = v14;
        v21 = objc_msgSend(v19, sel_links);
        v53 = sub_1D2CC63E8(0, &qword_1EFCA5510);
        v22 = sub_1D2D9DE60();

        if (v22 >> 62)
          goto LABEL_40;
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (1)
        {
          swift_bridgeObjectRelease();
          v24 = (uint64_t)v58;
          if (v23 < 1 || *(_QWORD *)&v58[*(int *)(v11 + 20)] >= (unint64_t)v23)
          {

            sub_1D2CDA6A4(v24);
            goto LABEL_27;
          }
          v51 = *(int *)(v11 + 20);
          v25 = objc_msgSend((id)v16, sel_sentences);
          sub_1D2CC63E8(0, &qword_1EFCA5D80);
          v26 = sub_1D2D9DE60();

          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            v27 = sub_1D2D9E3AC();
            swift_bridgeObjectRelease();
          }
          else
          {
            v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v52 = (id)v20;
          v49 = v18;
          v50 = (id)v16;
          v11 = 0;
          v28 = 0;
          if (!v27)
            break;
          v55 = v26;
          v56 = v26 & 0xC000000000000001;
          v20 = 4;
          v54 = v27;
          while (1)
          {
            v29 = v56 ? (id)MEMORY[0x1D8247E58](v20 - 4, v26) : *(id *)(v26 + 8 * v20);
            v30 = v29;
            v31 = v20 - 3;
            if (__OFADD__(v20 - 4, 1))
              break;
            v32 = objc_msgSend(v29, sel_UUID);
            sub_1D2D9C6E4();

            LOBYTE(v32) = sub_1D2D9C6D8();
            (*(void (**)(char *, uint64_t))(v59 + 8))(v7, v57);
            if ((v32 & 1) != 0)
            {

              goto LABEL_30;
            }
            v33 = objc_msgSend(v30, sel_sourceText);
            sub_1D2D9DCD4();
            v18 = v34;

            v16 = sub_1D2D9DD7C();
            swift_bridgeObjectRelease();
            v35 = __OFADD__(v28, v16);
            v28 += v16;
            if (v35)
              goto LABEL_38;
            v36 = objc_msgSend(v30, sel_targetText);
            v18 = (id)sub_1D2D9DCD4();

            v16 = sub_1D2D9DD7C();
            swift_bridgeObjectRelease();

            v35 = __OFADD__(v11, v16);
            v11 += v16;
            if (v35)
              goto LABEL_39;
            ++v20;
            v26 = v55;
            if (v31 == v54)
              goto LABEL_30;
          }
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_bridgeObjectRetain();
          v23 = sub_1D2D9E3AC();
          swift_bridgeObjectRelease();
        }
LABEL_30:
        swift_bridgeObjectRelease();
        v37 = objc_msgSend(v52, sel_links);
        v38 = sub_1D2D9DE60();

        v39 = *(_QWORD *)&v58[v51];
        if ((v39 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((v38 & 0xC000000000000001) == 0)
        {
          if (v39 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_45;
          }
          v40 = *(id *)(v38 + 8 * v39 + 32);
LABEL_34:
          v41 = v40;
          swift_bridgeObjectRelease();
          v42 = (char *)objc_msgSend(v41, sel_sourceRange);
          v44 = v43;
          v45 = (char *)objc_msgSend(v41, sel_targetRange);
          v47 = v46;

          sub_1D2CDA6A4((uint64_t)v58);
          if (!__OFADD__(v42, v28))
          {
            if (!__OFADD__(v45, v11))
            {
              *(_QWORD *)a2 = &v42[v28];
              *(_QWORD *)(a2 + 8) = v44;
              *(_QWORD *)(a2 + 16) = &v45[v11];
              *(_QWORD *)(a2 + 24) = v47;
              *(_BYTE *)(a2 + 32) = 0;
              return;
            }
            goto LABEL_46;
          }
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        v40 = (id)MEMORY[0x1D8247E58]();
        goto LABEL_34;
      }
      sub_1D2CDA6A4((uint64_t)v14);

    }
    else
    {
      sub_1D2CDA6A4((uint64_t)v14);
    }

    goto LABEL_27;
  }
  sub_1D2CCADA4((uint64_t)v10, (uint64_t *)&unk_1EFCA5D70);
LABEL_27:
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_BYTE *)(a2 + 32) = 1;
}

void sub_1D2CD4AC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  id v12;
  char v13;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource + 8])
  {
    LOBYTE(v12) = 0;
    v1 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
    swift_beginAccess();
    v13 = *v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v2 = sub_1D2CD6358((char *)&v12, &v13);
    LOBYTE(v12) = 1;
    v13 = *v1;
    v3 = sub_1D2CD6358((char *)&v12, &v13);
    v4 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    if (v2)
    {
      type metadata accessor for Key(0);
      sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
      v5 = (void *)sub_1D2D9DC20();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithString_attributes_, v4, v5);

    swift_getKeyPath();
    swift_getKeyPath();
    v12 = v6;
    v7 = v0;
    sub_1D2D9C9C0();
    v8 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    if (v3)
    {
      type metadata accessor for Key(0);
      sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
      v9 = (void *)sub_1D2D9DC20();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithString_attributes_, v8, v9);

    swift_getKeyPath();
    swift_getKeyPath();
    v12 = v10;
    v11 = v7;
    sub_1D2D9C9C0();
  }
}

void sub_1D2CD4D3C()
{
  char *v0;
  uint64_t ObjectType;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  id v16;
  id aBlock;
  uint64_t v18;
  id (*v19)(uint64_t, void *, void *, void *, void *, uint64_t);
  void *v20;
  uint64_t (*v21)(uint64_t, void *, void *, uint64_t, uint64_t);
  uint64_t v22;
  char v23;

  ObjectType = swift_getObjectType();
  v2 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult];
  if (v2)
  {
    v3 = ObjectType;
    LOBYTE(aBlock) = 0;
    v4 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
    swift_beginAccess();
    v23 = *v4;
    v16 = v2;
    if (!sub_1D2CD6358((char *)&aBlock, &v23))
      sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
    LOBYTE(aBlock) = 1;
    v23 = *v4;
    if (!sub_1D2CD6358((char *)&aBlock, &v23))
      sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v3;
    type metadata accessor for Key(0);
    sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
    v7 = (void *)sub_1D2D9DC20();
    swift_bridgeObjectRelease();
    v21 = sub_1D2CDB740;
    v22 = v6;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v18 = 1107296256;
    v19 = sub_1D2CD5950;
    v20 = &block_descriptor_0;
    v8 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v9 = objc_msgSend(v16, sel_generateAttributedStringForLocation_withGlobalAttributes_attributeProvider_, 0, v7, v8);
    _Block_release(v8);

    v10 = (void *)sub_1D2D9DC20();
    swift_bridgeObjectRelease();
    v21 = sub_1D2CDB740;
    v22 = v6;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v18 = 1107296256;
    v19 = sub_1D2CD5950;
    v20 = &block_descriptor_22;
    v11 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v12 = objc_msgSend(v16, sel_generateAttributedStringForLocation_withGlobalAttributes_attributeProvider_, 1, v10, v11);
    _Block_release(v11);

    swift_getKeyPath();
    swift_getKeyPath();
    aBlock = v9;
    v13 = v9;
    v14 = v0;
    sub_1D2D9C9C0();
    swift_getKeyPath();
    swift_getKeyPath();
    aBlock = v12;
    v15 = v14;
    sub_1D2D9C9C0();

    swift_release();
  }
  else
  {
    sub_1D2CD4AC8();
  }
}

uint64_t sub_1D2CD50A8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(__int128 *, _OWORD *);
  char v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  id v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  char *v62;
  unint64_t v63;
  _OWORD v64[2];
  __int128 v65;
  uint64_t v66;

  v11 = sub_1D2D9DD10();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D2D9C6FC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DisambiguationLinkInfo(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v60 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v61 = (char *)&v58 - v19;
  swift_beginAccess();
  v20 = (char *)MEMORY[0x1D8248A10](a6 + 16);
  if (!v20)
    return 0;
  v59 = a2;
  v62 = v20;
  v21 = *(uint64_t (**)(__int128 *, _OWORD *))&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  if (!v21)
    goto LABEL_9;
  if (a5)
  {
    if (a5 != 1)
      goto LABEL_30;
    v22 = 1;
  }
  else
  {
    v22 = 0;
  }
  LOBYTE(v65) = v22;
  v23 = &v62[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  LOBYTE(v64[0]) = *v23;
  v24 = v21(&v65, v64);
  if (v24)
  {
    v25 = v24;
  }
  else
  {
LABEL_9:
    v25 = sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
  }
  v26 = objc_msgSend(a3, sel_links);
  sub_1D2CC63E8(0, &qword_1EFCA5510);
  v27 = sub_1D2D9DE60();

  sub_1D2CD575C(a4, v27);
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EFCA54A0 != -1)
      swift_once();
    v44 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EFCB25E8);
    v45 = sub_1D2D9C8DC();
    v46 = sub_1D2D9E040();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1D2CC0000, v45, v46, "LinkAttributeProvider gave invalid arguments; can't find linkConfiguration inside node",
        v47,
        2u);
      MEMORY[0x1D8248974](v47, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v32 = objc_msgSend(v59, sel_UUID);
  sub_1D2D9C6E4();

  if ((v29 & 0x8000000000000000) == 0)
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v34 = (uint64_t)v61;
    v33(v61, v15, v12);
    *(_QWORD *)(v34 + *(int *)(v16 + 20)) = v29;
    sub_1D2D9C558();
    swift_allocObject();
    sub_1D2D9C54C();
    sub_1D2CC66E4((unint64_t *)&unk_1EFCA5FC0, type metadata accessor for DisambiguationLinkInfo, (uint64_t)&protocol conformance descriptor for DisambiguationLinkInfo);
    v35 = sub_1D2D9C540();
    v36 = (uint64_t)v60;
    v50 = v35;
    v52 = v51;
    swift_release();
    sub_1D2D9DD04();
    v53 = sub_1D2D9DCEC();
    if (v54)
    {
      v55 = (void *)*MEMORY[0x1E0DC5590];
      v66 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v65 = v53;
      *((_QWORD *)&v65 + 1) = v54;
      sub_1D2CD1FA4(&v65, v64);
      v56 = v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63 = v25;
      sub_1D2D940F8(v64, v56, isUniquelyReferenced_nonNull_native);
      v48 = v63;

      swift_bridgeObjectRelease();
      sub_1D2CDB760(v50, v52);

      sub_1D2CDA6A4(v34);
      return v48;
    }
    swift_bridgeObjectRelease();
    sub_1D2CDB760(v50, v52);
    if (qword_1EFCA54A0 != -1)
      swift_once();
    v37 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EFCB25E8);
    sub_1D2CDB6B4(v34, v36, type metadata accessor for DisambiguationLinkInfo);
    v38 = sub_1D2D9C8DC();
    v39 = sub_1D2D9E034();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_QWORD *)&v65 = v41;
      *(_DWORD *)v40 = 136446210;
      v42 = DisambiguationLinkInfo.description.getter();
      *(_QWORD *)&v64[0] = sub_1D2CF78E0(v42, v43, (uint64_t *)&v65);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CDA6A4(v36);
      _os_log_impl(&dword_1D2CC0000, v38, v39, "Failed to encode link information; won't show link in string for link: %{public}s",
        v40,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v41, -1, -1);
      MEMORY[0x1D8248974](v40, -1, -1);

    }
    else
    {

      sub_1D2CDA6A4(v36);
    }
    sub_1D2CDA6A4(v34);
    return 0;
  }
  sub_1D2D9E388();
  __break(1u);
LABEL_30:
  result = sub_1D2D9E394();
  __break(1u);
  return result;
}

void sub_1D2CD575C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1D8247E58](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_1D2CC63E8(0, &qword_1EFCA5510);
      v6 = sub_1D2D9E154();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x1D8247E58](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_1D2D9E154();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_1D2D9E3AC();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

uint64_t DisambiguationLinkInfo.init(sentenceUUID:linkIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for DisambiguationLinkInfo(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

id sub_1D2CD5950(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t (*v11)(id, id, id, id, uint64_t);
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;

  v11 = *(uint64_t (**)(id, id, id, id, uint64_t))(a1 + 32);
  swift_retain();
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = v11(v12, v13, v14, v15, a6);
  swift_release();

  if (v16)
  {
    type metadata accessor for Key(0);
    sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
    v17 = (void *)sub_1D2D9DC20();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  return v17;
}

void sub_1D2CD5A58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t inited;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  LOBYTE(v50) = 0;
  v1 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  LOBYTE(v49) = *v1;
  if (!sub_1D2CD6358((char *)&v50, (char *)&v49))
    sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
  LOBYTE(v50) = 1;
  LOBYTE(v49) = *v1;
  if (!sub_1D2CD6358((char *)&v50, (char *)&v49))
    sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
  LOBYTE(v50) = 0;
  v2 = sub_1D2CD6298((unsigned __int8 *)&v50);
  if (v3)
    v4 = v2;
  else
    v4 = 0;
  v46 = v4;
  if (v3)
    v5 = v3;
  else
    v5 = 0xE000000000000000;
  LOBYTE(v50) = 1;
  v6 = sub_1D2CD6298((unsigned __int8 *)&v50);
  if (v7)
    v8 = v6;
  else
    v8 = 0;
  if (v7)
    v9 = v7;
  else
    v9 = 0xE000000000000000;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D2D9F8A4);
  v12 = (void *)sub_1D2D9DC20();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v10, sel_initWithString_attributes_, v11, v12);

  v13 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1D2D9DC20();
  swift_bridgeObjectRelease();
  v47 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  LOBYTE(v50) = 0;
  v16 = sub_1D2CD5FBC(v46, v5, (unsigned __int8 *)&v50);
  swift_bridgeObjectRelease();
  LOBYTE(v50) = 1;
  v44 = v0;
  v45 = sub_1D2CD5FBC(v8, v9, (unsigned __int8 *)&v50);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = 0;
    v19 = (void *)*MEMORY[0x1E0DC5590];
    v20 = (uint64_t *)(v16 + 40);
    do
    {
      v21 = *(v20 - 1);
      v22 = *v20;
      v23 = v18 + 1;
      v50 = 0x414E4F4954434944;
      v51 = 0xEB000000002D5952;
      v49 = v18;
      sub_1D2D9E508();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      v24 = v50;
      v25 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D60);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
      *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 32) = v19;
      *(_QWORD *)(inited + 40) = v24;
      *(_QWORD *)(inited + 48) = v25;
      v27 = v19;
      sub_1D2CCF5DC(inited);
      v28 = (void *)sub_1D2D9DC20();
      swift_bridgeObjectRelease();
      objc_msgSend(v48, sel_addAttributes_range_, v28, v21, v22);

      v20 += 2;
      v18 = v23;
    }
    while (v17 != v23);
  }
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v45 + 16);
  if (v29)
  {
    v30 = 0;
    v31 = (void *)*MEMORY[0x1E0DC5590];
    v32 = (uint64_t *)(v45 + 40);
    do
    {
      v33 = *(v32 - 1);
      v34 = *v32;
      v35 = v30 + 1;
      v50 = 0x414E4F4954434944;
      v51 = 0xEB000000002D5952;
      v49 = v30;
      sub_1D2D9E508();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      v37 = v50;
      v36 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D60);
      v38 = swift_initStackObject();
      *(_OWORD *)(v38 + 16) = xmmword_1D2DA0510;
      *(_QWORD *)(v38 + 64) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v38 + 32) = v31;
      *(_QWORD *)(v38 + 40) = v37;
      *(_QWORD *)(v38 + 48) = v36;
      v39 = v31;
      sub_1D2CCF5DC(v38);
      v40 = (void *)sub_1D2D9DC20();
      swift_bridgeObjectRelease();
      objc_msgSend(v47, sel_addAttributes_range_, v40, v33, v34);

      v32 += 2;
      v30 = v35;
    }
    while (v29 != v35);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v50 = (uint64_t)v48;
  v41 = v48;
  v42 = v44;
  sub_1D2D9C9C0();
  swift_getKeyPath();
  swift_getKeyPath();
  v50 = (uint64_t)v47;
  v43 = v42;
  sub_1D2D9C9C0();

}

uint64_t sub_1D2CD5FBC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v11 = *a3;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = &OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale;
  if (!v11)
    v14 = &OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, v3 + *v14, v12);
  sub_1D2D9C7EC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  v15 = (void *)sub_1D2D9DCB0();
  sub_1D2CCAD60((uint64_t)v10, (uint64_t)v8, &qword_1ED587850);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) != 1)
  {
    v16 = (void *)sub_1D2D9C744();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v17 = objc_msgSend(v15, sel_lt_wordRangesWithLocale_, v16);

  sub_1D2CC63E8(0, &qword_1EFCA5FB8);
  v18 = sub_1D2D9DE60();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v19)
    goto LABEL_17;
  v32 = MEMORY[0x1E0DEE9D8];
  result = sub_1D2D03F84(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    v31 = v10;
    v22 = 0;
    v20 = v32;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1D8247E58](v22, v18);
      else
        v23 = *(id *)(v18 + 8 * v22 + 32);
      v24 = v23;
      v25 = objc_msgSend(v23, sel_rangeValue, v31);
      v27 = v26;

      v32 = v20;
      v29 = *(_QWORD *)(v20 + 16);
      v28 = *(_QWORD *)(v20 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1D2D03F84(v28 > 1, v29 + 1, 1);
        v20 = v32;
      }
      ++v22;
      *(_QWORD *)(v20 + 16) = v29 + 1;
      v30 = v20 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v25;
      *(_QWORD *)(v30 + 40) = v27;
    }
    while (v19 != v22);
    v10 = v31;
LABEL_17:
    sub_1D2CCADA4((uint64_t)v10, &qword_1ED587850);
    swift_bridgeObjectRelease();
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2CD6298(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  char **v8;
  id v9;

  v2 = *a1;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource + 8))
  {
    if ((v2 & 1) != 0)
      v4 = v3[2];
    else
      v4 = *v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
    if (v5)
    {
      v6 = v5;
      v7 = v6;
      v8 = &selRef_targetText;
      if (!v2)
        v8 = &selRef_sourceText;
      v9 = objc_msgSend(v6, *v8);
      v4 = sub_1D2D9DCD4();

    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_1D2CD6358(char *a1, char *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_BYTE *, char *);
  uint64_t v8;
  unint64_t v9;
  char v11;
  _BYTE v12[17];

  v3 = *a1;
  v4 = *a2;
  v12[16] = *a1;
  v5 = sub_1D2CD6484();
  if (!v5)
    v5 = sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
  v6 = v5;
  v7 = *(uint64_t (**)(_BYTE *, char *))(v2
                                                 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider);
  if (v7 && (v12[0] = v3, v11 = v4, (v8 = v7(v12, &v11)) != 0))
  {
    v9 = v8;
  }
  else
  {
    v9 = sub_1D2CCF5DC(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
  }
  return sub_1D2CD6408(v9, v6);
}

uint64_t sub_1D2CD6408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1D2CD9B20(a1, (uint64_t)sub_1D2CD9AE4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1D2CD6484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BOOL4 v4;
  id v5;
  uint64_t inited;
  void *v7;
  id v8;
  uint64_t v10;

  v0 = sub_1D2D9C7D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C7E0();
  v4 = sub_1D2D9C7B0() == 2;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v5, sel_setAlignment_, 2 * v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
  v7 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = sub_1D2CC63E8(0, &qword_1EFCA5D68);
  *(_QWORD *)(inited + 40) = v5;
  v8 = v7;
  return sub_1D2CCF5DC(inited);
}

id DisambiguationResultModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DisambiguationResultModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DisambiguationResultModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2CD678C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DisambiguationResultModel(0);
  result = sub_1D2D9C96C();
  *a1 = result;
  return result;
}

void DisambiguationResultModel.disambiguableResult(_:didChangeResultFor:with:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _BYTE *v6;
  void (*v7)(uint64_t, id);
  id v8;

  v6 = (_BYTE *)(v3 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if ((*v6 & 1) != 0)
  {
    sub_1D2CD5A58();
    if (!a3)
      return;
  }
  else
  {
    sub_1D2CD4D3C();
    if (!a3)
      return;
  }
  v7 = *(void (**)(uint64_t, id))(v3
                                          + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler);
  if (v7)
  {
    v8 = a3;
    v7(a2, v8);

  }
}

void DisambiguationResultModel.disambiguableResultDidUpdate(_:)()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if ((*v1 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();
}

uint64_t DisambiguationLinkInfo.sentenceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DisambiguationLinkInfo.sentenceUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DisambiguationLinkInfo.sentenceUUID.modify())()
{
  return CGPointMake;
}

uint64_t DisambiguationLinkInfo.linkIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DisambiguationLinkInfo(0) + 20));
}

uint64_t DisambiguationLinkInfo.linkIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DisambiguationLinkInfo(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*DisambiguationLinkInfo.linkIndex.modify())(double, double)
{
  type metadata accessor for DisambiguationLinkInfo(0);
  return CGPointMake;
}

uint64_t DisambiguationLinkInfo.description.getter()
{
  sub_1D2D9E2EC();
  sub_1D2D9DDA0();
  sub_1D2D9C6FC();
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA5D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  type metadata accessor for DisambiguationLinkInfo(0);
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  return 0;
}

uint64_t sub_1D2CD6CDC()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2CD6D1C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65646E496B6E696CLL;
  else
    return 0x65636E65746E6573;
}

uint64_t sub_1D2CD6D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D2CDB510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D2CD6D88()
{
  return 0;
}

void sub_1D2CD6D94(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D2CD6DA0()
{
  sub_1D2CDA864();
  return sub_1D2D9E628();
}

uint64_t sub_1D2CD6DC8()
{
  sub_1D2CDA864();
  return sub_1D2D9E634();
}

uint64_t DisambiguationLinkInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2CDA864();
  sub_1D2D9E61C();
  v8[15] = 0;
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1EFCA5DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D2D9E4F0();
  if (!v1)
  {
    type metadata accessor for DisambiguationLinkInfo(0);
    v8[14] = 1;
    sub_1D2D9E4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisambiguationLinkInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v25 = a2;
  v4 = sub_1D2D9C6FC();
  v5 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  v29 = v5;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5DB0);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DisambiguationLinkInfo(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2CDA864();
  sub_1D2D9E610();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v23 = v10;
  v24 = v12;
  v13 = v7;
  v14 = v29;
  v31 = 0;
  sub_1D2CC66E4(&qword_1EFCA5DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v15 = v26;
  v16 = v27;
  v17 = v28;
  sub_1D2D9E46C();
  v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v19 = (uint64_t)v24;
  v18(v24, v15, v17);
  v30 = 1;
  v20 = sub_1D2D9E460();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v16);
  *(_QWORD *)(v19 + *(int *)(v23 + 20)) = v20;
  sub_1D2CDB6B4(v19, v25, type metadata accessor for DisambiguationLinkInfo);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1D2CDA6A4(v19);
}

uint64_t sub_1D2CD71B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DisambiguationLinkInfo.init(from:)(a1, a2);
}

uint64_t sub_1D2CD71C4(_QWORD *a1)
{
  return DisambiguationLinkInfo.encode(to:)(a1);
}

uint64_t sub_1D2CD71DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C10);
  v38 = a2;
  v6 = sub_1D2D9E3C4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1D2D9E5C8();
    sub_1D2D9DD70();
    result = sub_1D2D9E5F8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2CD74E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C48);
  v35 = a2;
  v6 = sub_1D2D9E3C4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1D2CD1FA4(v22, v36);
    }
    else
    {
      sub_1D2CC80A4((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1D2D9DCD4();
    sub_1D2D9E5C8();
    sub_1D2D9DD70();
    v24 = sub_1D2D9E5F8();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1D2CD1FA4(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2CD7820(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B8);
  v6 = sub_1D2D9E3C4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D2CD1FA4(v24, v35);
      }
      else
      {
        sub_1D2CC80A4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D2D9E5C8();
      sub_1D2D9DD70();
      result = sub_1D2D9E5F8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1D2CD1FA4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2CD7B1C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C6FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5FB0);
  v48 = a2;
  v12 = sub_1D2D9E3C4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2CD2018(v31 + v32 * v24, v49, &qword_1EFCA5C38);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2CCAD60(v33 + v32 * v24, v49, &qword_1EFCA5C38);
    }
    sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D2D9DC44();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_1D2CD2018(v49, *(_QWORD *)(v13 + 56) + v32 * v22, &qword_1EFCA5C38);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1D2CD7F3C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  void (**v44)(char *, unint64_t, uint64_t);
  uint64_t i;
  uint64_t v46;
  int v47;
  uint64_t (**v48)(unint64_t, char *, uint64_t);
  char *v49;
  uint64_t v50;

  v3 = v2;
  v50 = sub_1D2D9C6FC();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TextModel();
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C28);
  v47 = a2;
  v11 = sub_1D2D9E3C4();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v43 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v41 = v2;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v44 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v48 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_34;
      v25 = v43[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          v3 = v41;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v42)
              goto LABEL_34;
            v25 = v43[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v46 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v47 & 1) != 0)
    {
      sub_1D2CD1FD4(v28, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v29 = (void (**)(char *, unint64_t, uint64_t))v48;
    }
    else
    {
      sub_1D2CDB6B4(v28, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v29 = v44;
    }
    v30 = *(_QWORD *)(v10 + 56);
    v31 = v5;
    v32 = *(_QWORD *)(v5 + 72);
    (*v29)(v49, v30 + v32 * v22, v50);
    sub_1D2D9E5C8();
    sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1D2D9DC50();
    result = sub_1D2D9E5F8();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    sub_1D2CD1FD4((uint64_t)v9, *(_QWORD *)(v12 + 48) + v27 * v20, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    result = (*v48)(*(_QWORD *)(v12 + 56) + v32 * v20, v49, v50);
    ++*(_QWORD *)(v12 + 16);
    v5 = v31;
  }
  swift_release();
  v3 = v41;
  v24 = v43;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1D2CD8354(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for VisualTranslationModel(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C6FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5F90);
  v48 = a2;
  v12 = sub_1D2D9E3C4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2CD1FD4(v31 + v32 * v24, v49, type metadata accessor for VisualTranslationModel);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2CDB6B4(v33 + v32 * v24, v49, type metadata accessor for VisualTranslationModel);
    }
    sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D2D9DC44();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_1D2CD1FD4(v49, *(_QWORD *)(v13 + 56) + v32 * v22, type metadata accessor for VisualTranslationModel);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1D2CD8770(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1D2D9C6FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5FA0);
  v42 = a2;
  v10 = sub_1D2D9E3C4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D2D9DC44();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

id sub_1D2CD8B04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C10);
  v2 = *v0;
  v3 = sub_1D2D9E3B8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D2CD8CB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C48);
  v2 = *v0;
  v3 = sub_1D2D9E3B8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1D2CD1FA4(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2CD8E78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B8);
  v2 = *v0;
  v3 = sub_1D2D9E3B8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D2CD1FA4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2CD905C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1D2D9C6FC();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5FB0);
  v30 = v0;
  v5 = *v0;
  v6 = sub_1D2D9E3B8();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38; ; result = (void *)sub_1D2CD2018(v17, *(_QWORD *)(i + 56) + v23, &qword_1EFCA5C38))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1D2CCAD60(*(_QWORD *)(v21 + 56) + v23, v17, &qword_1EFCA5C38);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2CD9328()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = sub_1D2D9C6FC();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TextModel();
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C28);
  v31 = v0;
  v5 = *v0;
  v6 = sub_1D2D9E3B8();
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_1D2CDB6B4(*(_QWORD *)(v20 + 48) + v21, v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_1D2CD1FD4(v15, *(_QWORD *)(i + 48) + v21, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2CD95F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for VisualTranslationModel(0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1D2D9C6FC();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5F90);
  v30 = v0;
  v5 = *v0;
  v6 = sub_1D2D9E3B8();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_1D2CD1FD4(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for VisualTranslationModel))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1D2CDB6B4(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for VisualTranslationModel);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1D2CD98BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1D2D9C6FC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA5FA0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1D2D9E3B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D2CD9AE4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = *a1;
  sub_1D2CC80A4((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_1D2CD9B20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2CD9E48((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_1D2CD1FA4(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_1D2D64F90((uint64_t)v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1D2CD8CB4();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_1D2CD1FA4(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1D2CD9E48((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_1D2CD1FA4(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_1D2D64F90((uint64_t)i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1D2CD74E8(v34, 1);
        v36 = sub_1D2D64F90((uint64_t)i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_1D2CC80A4((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1D2CD1FA4(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_1D2CD1FA4(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_1D2CD9E48((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D2CDB67C();
    return swift_release();
  }
  sub_1D2CD74E8(v18, a4 & 1);
  v20 = sub_1D2D64F90((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1D2CC80A4((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1D2CD1FA4(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for Key(0);
  result = sub_1D2D9E568();
  __break(1u);
  return result;
}

uint64_t sub_1D2CD9E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_1D2CC80A4(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_1D2CD2018((uint64_t)v24, (uint64_t)v22, &qword_1EFCA5F60);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_1D2CCADA4((uint64_t)v20, &qword_1EFCA5F68);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

char *sub_1D2CDA020(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _BYTE *v10;
  _QWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  id v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  char *v34;
  char *v35;
  void (*v36)(uint64_t, uint64_t);
  objc_super v39;
  id v40;

  v16 = &v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes];
  *(_QWORD *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes] = MEMORY[0x1E0DEE9D8];
  v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode] = 0;
  v17 = &v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource];
  *v17 = 0u;
  v17[1] = 0u;
  *(_QWORD *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult] = a1;
  v18 = (uint64_t *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider];
  *v18 = a5;
  v18[1] = a6;
  v19 = (uint64_t *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  *v19 = a7;
  v19[1] = a8;
  swift_beginAccess();
  *v16 = a2;
  v20 = v10;
  v21 = a1;
  sub_1D2CCCEF0(a5);
  sub_1D2CCCEF0(a7);
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler];
  *v22 = a9;
  v22[1] = a10;
  v23 = &v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale];
  v24 = sub_1D2D9C7EC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v26(v23, a3, v24);
  v26(&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale], a4, v24);
  sub_1D2CCCEF0(a9);
  v27 = objc_msgSend(v21, sel_sourceText);
  sub_1D2D9DCD4();

  v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v29 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_initWithString_, v29);

  swift_beginAccess();
  sub_1D2CC63E8(0, &qword_1ED586C28);
  sub_1D2D9C984();
  swift_endAccess();
  v30 = objc_msgSend(v21, sel_targetText);
  sub_1D2D9DCD4();

  v31 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v32 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_initWithString_, v32);

  swift_beginAccess();
  v40 = v33;
  sub_1D2D9C984();
  swift_endAccess();

  v39.receiver = v20;
  v39.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  v34 = (char *)objc_msgSendSuper2(&v39, sel_init);
  objc_msgSend(v21, sel_setDelegate_, v34);
  objc_msgSend(v21, sel_addObserver_, v34);
  v35 = &v34[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  if ((*v35 & 1) != 0)
    sub_1D2CD5A58();
  else
    sub_1D2CD4D3C();

  v36 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v36(a4, v24);
  v36(a3, v24);
  return v34;
}

id sub_1D2CDA3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v8;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void (*v29)(uint64_t, uint64_t);
  objc_super v32;
  id v33;

  v12 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes];
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes] = MEMORY[0x1E0DEE9D8];
  v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode] = 0;
  v14 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource];
  *v14 = a1;
  v14[1] = a2;
  v14[2] = a3;
  v14[3] = a4;
  *(_QWORD *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult] = 0;
  v15 = (uint64_t *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider];
  *v15 = a7;
  v15[1] = a8;
  v16 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  *v16 = 0;
  v16[1] = 0;
  swift_beginAccess();
  *v12 = v13;
  v17 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2CCCEF0(a7);
  swift_bridgeObjectRelease();
  v18 = &v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale];
  v20 = sub_1D2D9C7EC();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v19, a5, v20);
  v22(&v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale], a6, v20);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_initWithString_, v24);

  swift_beginAccess();
  sub_1D2CC63E8(0, &qword_1ED586C28);
  sub_1D2D9C984();
  swift_endAccess();
  v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v26 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithString_, v26);

  swift_beginAccess();
  v33 = v27;
  sub_1D2D9C984();
  swift_endAccess();

  v32.receiver = v17;
  v32.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  v28 = objc_msgSendSuper2(&v32, sel_init);
  sub_1D2CD4AC8();

  v29 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v29(a6, v20);
  v29(a5, v20);
  return v28;
}

uint64_t type metadata accessor for DisambiguationLinkInfo(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA5EF8);
}

uint64_t sub_1D2CDA6A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DisambiguationLinkInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DisambiguationResultModel(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1ED5869D0);
}

uint64_t sub_1D2CDA6F4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s13TranslationUI25DisambiguationResultModelC13excludedTypes3forShySo8NSNumberCGSgSo016_LTDisambiguableD0C_tF_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D2D9E358();
    v5 = 0;
    do
    {
      v6 = v5 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, *(_QWORD *)(v2 + 8 * v5 + 32));
      sub_1D2D9E340();
      sub_1D2D9E364();
      sub_1D2D9E370();
      sub_1D2D9E34C();
      v5 = v6;
    }
    while (v3 != v6);
    v4 = v9;
    swift_bridgeObjectRelease();
  }
  v7 = sub_1D2D0509C(v4);
  swift_bridgeObjectRelease();
  return v7;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1D2CDA864()
{
  unint64_t result;

  result = qword_1EFCA5DA0;
  if (!qword_1EFCA5DA0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0928, &type metadata for DisambiguationLinkInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA5DA0);
  }
  return result;
}

unint64_t sub_1D2CDA8AC()
{
  unint64_t result;

  result = qword_1EFCA5DC0;
  if (!qword_1EFCA5DC0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for DisambiguationResultModel.RenderingMode, &type metadata for DisambiguationResultModel.RenderingMode);
    atomic_store(result, (unint64_t *)&qword_1EFCA5DC0);
  }
  return result;
}

unint64_t sub_1D2CDA8F4()
{
  unint64_t result;

  result = qword_1EFCA5DC8;
  if (!qword_1EFCA5DC8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for DisambiguationResultModel.TextLocation, &type metadata for DisambiguationResultModel.TextLocation);
    atomic_store(result, (unint64_t *)&qword_1EFCA5DC8);
  }
  return result;
}

uint64_t sub_1D2CDA938()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1D2CDA944@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2CDA99C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1D2CDA9F0()
{
  return sub_1D2CD3F30();
}

uint64_t sub_1D2CDAA0C(uint64_t a1)
{
  return sub_1D2CD3F90(a1);
}

uint64_t sub_1D2CDAA28()
{
  return sub_1D2CD3F30();
}

uint64_t sub_1D2CDAA44(uint64_t a1)
{
  return sub_1D2CD3F90(a1);
}

uint64_t sub_1D2CDAA60()
{
  return type metadata accessor for DisambiguationResultModel(0);
}

void sub_1D2CDAA68()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2D9C7EC();
  if (v0 <= 0x3F)
  {
    sub_1D2CDACBC();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DisambiguationResultModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.sourceAttributedText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.$sourceAttributedText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.targetAttributedText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DisambiguationResultModel.$targetAttributedText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of DisambiguationResultModel.__allocating_init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of DisambiguationResultModel.__allocating_init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of DisambiguationResultModel.didAppear()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DisambiguationResultModel.rangeOfFirstWordForDictionary(inLocation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DisambiguationResultModel.rangeInfo(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

void sub_1D2CDACBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED586AC0)
  {
    sub_1D2CC63E8(255, &qword_1ED586C28);
    v0 = sub_1D2D9C9CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED586AC0);
  }
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.RenderingMode()
{
  return &type metadata for DisambiguationResultModel.RenderingMode;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.TextLocation()
{
  return &type metadata for DisambiguationResultModel.TextLocation;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.LinkRangeInfo()
{
  return &type metadata for DisambiguationResultModel.LinkRangeInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for DisambiguationLinkInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for DisambiguationLinkInfo(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationLinkInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CDAF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DisambiguationLinkInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CDAFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D2CDB014()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C6FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for DisambiguationResultModel.DisplaySource(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DisambiguationResultModel.DisplaySource(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for DisambiguationResultModel.DisplaySource(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DisambiguationResultModel.DisplaySource(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationResultModel.DisplaySource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DisambiguationResultModel.DisplaySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1D2CDB320(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1D2CDB338(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.DisplaySource()
{
  return &type metadata for DisambiguationResultModel.DisplaySource;
}

uint64_t _s13TranslationUI25DisambiguationResultModelC12TextLocationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2CDB3B8 + 4 * byte_1D2DA0525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2CDB3EC + 4 * byte_1D2DA0520[v4]))();
}

uint64_t sub_1D2CDB3EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CDB3F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CDB3FCLL);
  return result;
}

uint64_t sub_1D2CDB408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CDB410);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2CDB414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CDB41C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationLinkInfo.CodingKeys()
{
  return &type metadata for DisambiguationLinkInfo.CodingKeys;
}

unint64_t sub_1D2CDB43C()
{
  unint64_t result;

  result = qword_1EFCA5F30;
  if (!qword_1EFCA5F30)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0900, &type metadata for DisambiguationLinkInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA5F30);
  }
  return result;
}

unint64_t sub_1D2CDB484()
{
  unint64_t result;

  result = qword_1EFCA5F38;
  if (!qword_1EFCA5F38)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0870, &type metadata for DisambiguationLinkInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA5F38);
  }
  return result;
}

unint64_t sub_1D2CDB4CC()
{
  unint64_t result;

  result = qword_1EFCA5F40;
  if (!qword_1EFCA5F40)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0898, &type metadata for DisambiguationLinkInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA5F40);
  }
  return result;
}

uint64_t sub_1D2CDB510(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636E65746E6573 && a2 == 0xEC00000044495555;
  if (v2 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646E496B6E696CLL && a2 == 0xE900000000000078)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D2CDB624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5F50;
  if (!qword_1EFCA5F50)
  {
    v1 = sub_1D2CC63E8(255, (unint64_t *)&qword_1EFCA5F48);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5F50);
  }
  return result;
}

uint64_t sub_1D2CDB67C()
{
  return swift_release();
}

uint64_t sub_1D2CDB684(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2CDB6B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2CDB6F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2CDB71C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CDB740(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1D2CD50A8(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1D2CDB760(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

double sub_1D2CDB7BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double result;
  char v13;
  _BYTE v14[280];
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  _OWORD v35[2];
  char v36;
  _BYTE __src[272];

  v3 = *(_OWORD *)(v1 + 16);
  v35[0] = *(_OWORD *)v1;
  v35[1] = v3;
  v36 = *(_BYTE *)(v1 + 32);
  v4 = sub_1D2D9D038();
  sub_1D2CDB970((uint64_t)v35, (uint64_t)__src);
  v13 = sub_1D2D9D410();
  sub_1D2D9DA70();
  v14[272] = 1;
  memcpy(&v14[7], __src, 0x108uLL);
  v15 = 0;
  sub_1D2D9CE10();
  v5 = v22;
  v6 = v24;
  v7 = v26;
  v8 = v28;
  v9 = v30;
  v10 = v32;
  v11 = v15;
  v21 = v23;
  v20 = v25;
  v19 = v27;
  v18 = v29;
  v17 = v31;
  v16 = v33;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  memcpy((void *)(a1 + 17), v14, 0x10FuLL);
  *(_BYTE *)(a1 + 288) = v13;
  *(_QWORD *)(a1 + 296) = 0x4020000000000000;
  *(_OWORD *)(a1 + 304) = xmmword_1D2DA0980;
  *(_QWORD *)(a1 + 320) = 0x4020000000000000;
  *(_BYTE *)(a1 + 328) = v11;
  *(_QWORD *)(a1 + 336) = v5;
  *(_BYTE *)(a1 + 344) = v21;
  *(_QWORD *)(a1 + 352) = v6;
  *(_BYTE *)(a1 + 360) = v20;
  *(_QWORD *)(a1 + 368) = v7;
  *(_BYTE *)(a1 + 376) = v19;
  *(_QWORD *)(a1 + 384) = v8;
  *(_BYTE *)(a1 + 392) = v18;
  *(_QWORD *)(a1 + 400) = v9;
  *(_BYTE *)(a1 + 408) = v17;
  *(_QWORD *)(a1 + 416) = v10;
  *(_BYTE *)(a1 + 424) = v16;
  result = *(double *)&v34;
  *(_OWORD *)(a1 + 432) = v34;
  return result;
}

uint64_t sub_1D2CDB970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  double v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t KeyPath;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  char v81;

  v4 = sub_1D2D9D11C();
  sub_1D2CDBC7C((uint64_t)&v53);
  v6 = v53;
  v5 = v54;
  v7 = v56;
  v8 = v57;
  v31 = BYTE1(v57);
  v29 = v59;
  v30 = v58;
  v28 = v60;
  v38 = v63;
  v39 = v61;
  v37 = v64;
  v36 = v66;
  v81 = 1;
  v80 = v55;
  v9 = v55;
  v20 = v55;
  v79 = v62;
  v78 = v65;
  v34 = v62;
  v35 = v65;
  KeyPath = swift_getKeyPath();
  v32 = sub_1D2D9D854();
  sub_1D2D9D458();
  sub_1D2D9D4B8();
  v27 = sub_1D2D9D4DC();
  swift_release();
  v26 = swift_getKeyPath();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v19 = v73;
  v24 = v74;
  v25 = v72;
  v18 = v75;
  v22 = v77;
  v23 = v76;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    v10 = 1.0;
  else
    v10 = 0.0;
  v21 = sub_1D2D9D7E8();
  v11 = swift_getKeyPath();
  v40 = (unint64_t)v4;
  LOBYTE(v41) = 1;
  *((_QWORD *)&v41 + 1) = v6;
  *(_QWORD *)&v42 = v5;
  BYTE8(v42) = v9;
  *(_QWORD *)&v43 = v7;
  BYTE8(v43) = v8;
  BYTE9(v43) = v31;
  *(_QWORD *)&v44 = v30;
  *((_QWORD *)&v44 + 1) = v29;
  *(_QWORD *)&v45 = v28;
  *((_QWORD *)&v45 + 1) = v39;
  LOBYTE(v46) = v34;
  *((_QWORD *)&v46 + 1) = v38;
  *(_QWORD *)&v47 = v37;
  BYTE8(v47) = v35;
  *(_QWORD *)&v48 = v36;
  *((_QWORD *)&v48 + 1) = KeyPath;
  v49 = 0;
  *(_BYTE *)(a2 + 144) = 0;
  v12 = v45;
  *(_OWORD *)(a2 + 64) = v44;
  *(_OWORD *)(a2 + 80) = v12;
  v13 = v43;
  *(_OWORD *)(a2 + 32) = v42;
  *(_OWORD *)(a2 + 48) = v13;
  v14 = v48;
  v15 = v46;
  *(_OWORD *)(a2 + 112) = v47;
  *(_OWORD *)(a2 + 128) = v14;
  *(_OWORD *)(a2 + 96) = v15;
  v16 = v41;
  *(_OWORD *)a2 = v40;
  *(_OWORD *)(a2 + 16) = v16;
  v52 = 1;
  v51 = v19;
  v50 = v18;
  *(_QWORD *)(a2 + 152) = 0;
  *(_BYTE *)(a2 + 160) = 1;
  *(_QWORD *)(a2 + 168) = v32;
  *(_QWORD *)(a2 + 176) = v26;
  *(_QWORD *)(a2 + 184) = v27;
  *(_QWORD *)(a2 + 192) = v25;
  *(_BYTE *)(a2 + 200) = v19;
  *(_QWORD *)(a2 + 208) = v24;
  *(_BYTE *)(a2 + 216) = v18;
  *(_QWORD *)(a2 + 224) = v23;
  *(_QWORD *)(a2 + 232) = v22;
  *(double *)(a2 + 240) = v10;
  *(_QWORD *)(a2 + 248) = v11;
  *(_QWORD *)(a2 + 256) = v21;
  sub_1D2CDD39C((uint64_t)&v40);
  v53 = v4;
  v54 = 0;
  v55 = 1;
  v56 = v6;
  v57 = v5;
  LOBYTE(v58) = v20;
  v59 = v7;
  LOBYTE(v60) = v8;
  BYTE1(v60) = v31;
  v61 = v30;
  v62 = v29;
  v63 = v28;
  v64 = v39;
  v65 = v34;
  v66 = v38;
  v67 = v37;
  v68 = v35;
  v69 = v36;
  v70 = KeyPath;
  v71 = 0;
  return sub_1D2CDD444((uint64_t)&v53);
}

uint64_t sub_1D2CDBC7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t KeyPath;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D2CD1430();
  swift_bridgeObjectRetain();
  v2 = sub_1D2D9D5CC();
  v24 = v3;
  v25 = v2;
  v23 = v4;
  v21 = v5 & 1;
  v22 = sub_1D2D9D824();
  KeyPath = swift_getKeyPath();
  v19 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  v6 = sub_1D2D9D5CC();
  v8 = v7;
  v10 = v9 & 1;
  sub_1D2D9D830();
  v11 = sub_1D2D9D590();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release();
  sub_1D2CCCAB4(v6, v8, v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v23;
  *(_BYTE *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v24;
  *(_WORD *)(a1 + 32) = 256;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v13;
  *(_BYTE *)(a1 + 96) = v15 & 1;
  *(_QWORD *)(a1 + 104) = v17;
  sub_1D2CCCB0C(v25, v23, v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D2CCCB0C(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_1D2CCCAB4(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  sub_1D2CCCAB4(v25, v23, v21);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

TranslationUI::DisambiguationView::Item __swiftcall DisambiguationView.Item.init(title:description:)(Swift::String title, Swift::String description)
{
  Swift::String *v2;
  TranslationUI::DisambiguationView::Item result;

  *v2 = title;
  v2[1] = description;
  result.description = description;
  result.title = title;
  return result;
}

uint64_t DisambiguationView.init(items:selection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t DisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a1;
  v38 = sub_1D2D9CDF8();
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6030);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6038);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  *(_QWORD *)v5 = sub_1D2D9D110();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v35[2] = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6040) + 44)];
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1D2CDCA3C(v12);
  swift_bridgeObjectRelease();
  v40 = v13;
  v35[1] = swift_getKeyPath();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v8;
  v14[3] = v9;
  v14[4] = v10;
  v14[5] = v11;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1D2CDCC20;
  *(_QWORD *)(v15 + 24) = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6048);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6050);
  sub_1D2CC6C74(&qword_1EFCA6058, &qword_1EFCA6048, MEMORY[0x1E0DEAF48]);
  sub_1D2CC6C74(&qword_1EFCA6060, &qword_1EFCA6050, MEMORY[0x1E0CE0680]);
  sub_1D2D9D9BC();
  v16 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v17 = MEMORY[0x1D8247330](objc_msgSend(v16, sel_tertiarySystemGroupedBackgroundColor));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v18 = sub_1D2D9DA70();
  v20 = v19;
  sub_1D2CCAD60((uint64_t)v5, (uint64_t)v7, &qword_1EFCA6030);
  v21 = (uint64_t *)&v7[*(int *)(v36 + 36)];
  *v21 = v17;
  v21[1] = v18;
  v21[2] = v20;
  sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA6030);
  v22 = v37;
  v23 = &v37[*(int *)(v38 + 20)];
  v24 = *MEMORY[0x1E0CDB0C0];
  v25 = sub_1D2D9D0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  __asm { FMOV            V0.2D, #10.0 }
  *v22 = _Q0;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6068);
  v32 = v39;
  v33 = v39 + *(int *)(v31 + 36);
  sub_1D2CDCC78((uint64_t)v22, v33);
  *(_WORD *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6070) + 36)) = 256;
  sub_1D2CCAD60((uint64_t)v7, v32, &qword_1EFCA6038);
  sub_1D2CDCCBC((uint64_t)v22);
  return sub_1D2CCADA4((uint64_t)v7, &qword_1EFCA6038);
}

uint64_t sub_1D2CDC214@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;

  v90 = a6;
  v96 = a5;
  v97 = a4;
  v89 = a3;
  v98 = a1;
  v95 = a7;
  v81 = sub_1D2D9D9B0();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v78 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60A8);
  MEMORY[0x1E0C80A78](v77);
  v82 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60B0);
  MEMORY[0x1E0C80A78](v79);
  v84 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60B8);
  v93 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v83 = (uint64_t)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v94 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v91 = (uint64_t)&v77 - v15;
  v87 = sub_1D2D9CDBC();
  v88 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60C8);
  v86 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60D0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v77 - v26;
  v85 = *a2;
  v28 = *((_QWORD *)a2 + 2);
  v29 = *((_QWORD *)a2 + 3);
  v30 = (_QWORD *)swift_allocObject();
  v31 = v89;
  v30[2] = v89;
  v32 = v97;
  v33 = v96;
  v30[3] = v97;
  v30[4] = v33;
  v34 = v90;
  v35 = v98;
  v30[5] = v90;
  v30[6] = v35;
  v99 = v85;
  v100 = v28;
  v101 = v29;
  v102 = v35;
  v103 = v31;
  v36 = v31;
  v104 = v32;
  v105 = v33;
  v106 = v34;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60D8);
  sub_1D2CDD614();
  sub_1D2D9D8FC();
  sub_1D2D9CDB0();
  sub_1D2CC6C74(&qword_1EFCA6100, &qword_1EFCA60C8, MEMORY[0x1E0CDFA58]);
  sub_1D2CDD6DC();
  v37 = v87;
  sub_1D2D9D614();
  v38 = v17;
  v39 = v27;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v38, v37);
  v40 = v20;
  v41 = v36;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v40, v18);
  v42 = v22;
  v43 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v44 = v21;
  v43(v27, v25, v21);
  if (*(_QWORD *)(v41 + 16) - 1 == v98)
  {
    v45 = 1;
    v46 = v91;
    v47 = v92;
  }
  else
  {
    v48 = v78;
    sub_1D2D9D9A4();
    v49 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v50 = MEMORY[0x1D8247330](objc_msgSend(v49, sel_separatorColor));
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v51 = sub_1D2D9D410();
    v52 = v80;
    v53 = (uint64_t)v82;
    v54 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v82, v48, v81);
    v55 = v53 + *(int *)(v77 + 36);
    *(_QWORD *)v55 = v50;
    *(_BYTE *)(v55 + 8) = v51;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v54);
    sub_1D2D9DA70();
    sub_1D2D9CBE8();
    v56 = v84;
    sub_1D2CCAD60(v53, v84, &qword_1EFCA60A8);
    v57 = (_OWORD *)(v56 + *(int *)(v79 + 36));
    v58 = v108;
    *v57 = v107;
    v57[1] = v58;
    v57[2] = v109;
    sub_1D2CCADA4(v53, &qword_1EFCA60A8);
    LOBYTE(v50) = sub_1D2D9D434();
    sub_1D2D9CAF8();
    v60 = v59;
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v67 = v83;
    sub_1D2CCAD60(v56, v83, &qword_1EFCA60B0);
    v68 = v92;
    v69 = v67 + *(int *)(v92 + 36);
    *(_BYTE *)v69 = v50;
    *(_QWORD *)(v69 + 8) = v60;
    *(_QWORD *)(v69 + 16) = v62;
    *(_QWORD *)(v69 + 24) = v64;
    *(_QWORD *)(v69 + 32) = v66;
    *(_BYTE *)(v69 + 40) = 0;
    sub_1D2CCADA4(v56, &qword_1EFCA60B0);
    v70 = v67;
    v46 = v91;
    sub_1D2CDD724(v70, v91);
    v45 = 0;
    v47 = v68;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v46, v45, 1, v47);
  v71 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v71(v25, v39, v44);
  v72 = v94;
  sub_1D2CCAD60(v46, v94, &qword_1EFCA60C0);
  v73 = v95;
  v71(v95, v25, v44);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6110);
  sub_1D2CCAD60(v72, (uint64_t)&v73[*(int *)(v74 + 48)], &qword_1EFCA60C0);
  sub_1D2CCADA4(v46, &qword_1EFCA60C0);
  v75 = *(void (**)(char *, uint64_t))(v42 + 8);
  v75(v39, v44);
  sub_1D2CCADA4(v72, &qword_1EFCA60C0);
  return ((uint64_t (*)(char *, uint64_t))v75)(v25, v44);
}

_QWORD *sub_1D2CDC93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *result;
  BOOL v14;
  uint64_t v15;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6118);
  result = MEMORY[0x1D82474B0](&v15, v12);
  v14 = v15 == a5;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = v14;
  *(_BYTE *)(a6 + 33) = 0;
  return result;
}

uint64_t sub_1D2CDC9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D2D9CFB4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D2CDCA10()
{
  return sub_1D2D9CFC0();
}

uint64_t sub_1D2CDCA3C(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v24 = v1;
    v6 = (uint64_t *)(result + 56);
    while (1)
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v10 = *(v6 - 1);
      v9 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        v11 = __OFSUB__(v3--, 1);
        if (v11)
          goto LABEL_28;
      }
      else
      {
        v12 = v2[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_29;
        v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6120);
        v15 = (_QWORD *)swift_allocObject();
        v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 40;
        v15[2] = v14;
        v15[3] = 2 * v16;
        v17 = v15 + 4;
        v18 = v2[3] >> 1;
        v5 = &v15[5 * v18 + 4];
        v19 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        if (v2[2])
        {
          if (v15 != v2 || v17 >= &v2[5 * v18 + 4])
            memmove(v17, v2 + 4, 40 * v18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v15;
        v1 = v24;
        v11 = __OFSUB__(v19, 1);
        v3 = v19 - 1;
        if (v11)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      v6 += 4;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5[3] = v10;
      v5[4] = v9;
      v5 += 5;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v21 = v2[3];
  if (v21 >= 2)
  {
    v22 = v21 >> 1;
    v11 = __OFSUB__(v22, v3);
    v23 = v22 - v3;
    if (v11)
      goto LABEL_30;
    v2[2] = v23;
  }
  return (uint64_t)v2;
}

uint64_t sub_1D2CDCC18()
{
  return objectdestroyTm_2();
}

uint64_t sub_1D2CDCC20@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X8>)
{
  uint64_t *v3;

  return sub_1D2CDC214(a1, a2, v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_1D2CDCC2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CDCC50(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t sub_1D2CDCC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9CDF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CDCCBC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9CDF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CDCCF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DisambiguationView()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for DisambiguationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DisambiguationView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for DisambiguationView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationView()
{
  return &type metadata for DisambiguationView;
}

_QWORD *initializeWithCopy for DisambiguationView.Item(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DisambiguationView.Item(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DisambiguationView.Item(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationView.Item(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationView.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationView.Item()
{
  return &type metadata for DisambiguationView.Item;
}

unint64_t sub_1D2CDD078()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6078;
  if (!qword_1EFCA6078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6068);
    v2[0] = sub_1D2CDD0FC();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60A0, &qword_1EFCA6070, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6078);
  }
  return result;
}

unint64_t sub_1D2CDD0FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6080;
  if (!qword_1EFCA6080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6038);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA6088, &qword_1EFCA6030, MEMORY[0x1E0CDFCC0]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6090, &qword_1EFCA6098, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6080);
  }
  return result;
}

uint64_t _s13TranslationUI18DisambiguationViewV4ItemVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationRow()
{
  return &type metadata for DisambiguationRow;
}

uint64_t sub_1D2CDD374()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CDD39C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  sub_1D2CCCB0C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2CCCB0C(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2CDD444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  sub_1D2CCCAB4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D2CCCAB4(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D2CDD4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D2D9CFB4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D2CDD51C()
{
  return sub_1D2D9CFC0();
}

uint64_t sub_1D2CDD548()
{
  return objectdestroyTm_2();
}

uint64_t objectdestroyTm_2()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CDD590()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6118);
  return sub_1D2D9D968();
}

_QWORD *sub_1D2CDD5E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1D2CDC93C(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_1D2CDD614()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA60E0;
  if (!qword_1EFCA60E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA60D8);
    v2[0] = sub_1D2CDD698();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60F0, &qword_1EFCA60F8, MEMORY[0x1E0CDBE48]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA60E0);
  }
  return result;
}

unint64_t sub_1D2CDD698()
{
  unint64_t result;

  result = qword_1EFCA60E8;
  if (!qword_1EFCA60E8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0A34, &type metadata for DisambiguationRow);
    atomic_store(result, (unint64_t *)&qword_1EFCA60E8);
  }
  return result;
}

unint64_t sub_1D2CDD6DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA6108;
  if (!qword_1EFCA6108)
  {
    v1 = sub_1D2D9CDBC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9F68], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA6108);
  }
  return result;
}

uint64_t sub_1D2CDD724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA60B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2CDD774()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6128;
  if (!qword_1EFCA6128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6130);
    v2[0] = sub_1D2CDD7E0();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6128);
  }
  return result;
}

unint64_t sub_1D2CDD7E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6138;
  if (!qword_1EFCA6138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6140);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA6148, &qword_1EFCA6150, MEMORY[0x1E0CDFB10]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6138);
  }
  return result;
}

uint64_t sub_1D2CDD868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t KeyPath;
  double v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[7];
  char v46;
  _BYTE v47[7];
  char v48;
  _BYTE v49[7];
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  __int128 v65;

  v2 = sub_1D2D9D860();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9CB70();
  v6 = v51;
  v7 = v52;
  v8 = v53;
  v9 = v54;
  v10 = v55;
  v11 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
  v12 = MEMORY[0x1D8247330](v11);
  KeyPath = swift_getKeyPath();
  v14 = COERCE_DOUBLE(sub_1D2D9D3B0());
  v44 = v9;
  v43 = v12;
  v42 = v7;
  v41 = v8;
  v40 = v10;
  if ((v15 & 1) != 0)
  {
    v16 = 0x3FB999999999999ALL;
  }
  else
  {
    v16 = *(_QWORD *)&v14;
    if (v14 < 0.1)
      v16 = 0x3FB999999999999ALL;
  }
  sub_1D2D9CB70();
  v17 = v56;
  v18 = v58;
  v19 = v59;
  v20 = v60;
  v39 = sub_1D2D9DAAC();
  v21 = sub_1D2D9D3B0();
  v23 = v22;
  sub_1D2D9DB00();
  v25 = v24;
  v27 = v26;
  sub_1D2D9D854();
  v28 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF6F8], v2);
  v29 = sub_1D2D9D884();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v30 = v61;
  v31 = v62;
  v32 = v63;
  v33 = v64;
  v50 = v23 & 1;
  v48 = v62;
  v46 = v64;
  *(_DWORD *)(a1 + 129) = *(_DWORD *)v49;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a1 + 177) = *(_DWORD *)v47;
  *(_DWORD *)(a1 + 180) = *(_DWORD *)&v47[3];
  v34 = *(_DWORD *)v45;
  *(_DWORD *)(a1 + 196) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a1 + 193) = v34;
  v35 = v42;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v35;
  *(_QWORD *)(a1 + 16) = v41;
  *(_QWORD *)(a1 + 24) = v44;
  *(_QWORD *)(a1 + 32) = v40;
  v36 = v43;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_QWORD *)(a1 + 48) = v36;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v20;
  *(_QWORD *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v21;
  *(_BYTE *)(a1 + 128) = v23 & 1;
  *(_QWORD *)(a1 + 136) = 0xBFF921FB54442D18;
  *(_QWORD *)(a1 + 144) = v25;
  *(_QWORD *)(a1 + 152) = v27;
  *(_QWORD *)(a1 + 160) = v29;
  *(_QWORD *)(a1 + 168) = v30;
  *(_BYTE *)(a1 + 176) = v31;
  *(_QWORD *)(a1 + 184) = v32;
  *(_BYTE *)(a1 + 192) = v33;
  *(_OWORD *)(a1 + 200) = v65;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1D2CDDC10@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  double result;
  __int128 v11;
  _OWORD v12[13];
  uint64_t v13;

  v2 = sub_1D2D9DA70();
  v4 = v3;
  sub_1D2CDD868((uint64_t)v12);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v12[11];
  *(_OWORD *)(a1 + 176) = v12[10];
  *(_OWORD *)(a1 + 192) = v5;
  *(_OWORD *)(a1 + 208) = v12[12];
  *(_QWORD *)(a1 + 224) = v13;
  v6 = v12[7];
  *(_OWORD *)(a1 + 112) = v12[6];
  *(_OWORD *)(a1 + 128) = v6;
  v7 = v12[9];
  *(_OWORD *)(a1 + 144) = v12[8];
  *(_OWORD *)(a1 + 160) = v7;
  v8 = v12[3];
  *(_OWORD *)(a1 + 48) = v12[2];
  *(_OWORD *)(a1 + 64) = v8;
  v9 = v12[5];
  *(_OWORD *)(a1 + 80) = v12[4];
  *(_OWORD *)(a1 + 96) = v9;
  result = *(double *)v12;
  v11 = v12[1];
  *(_OWORD *)(a1 + 16) = v12[0];
  *(_OWORD *)(a1 + 32) = v11;
  return result;
}

TranslationUI::DownloadProgressView __swiftcall DownloadProgressView.init(fractionCompleted:)(TranslationUI::DownloadProgressView fractionCompleted)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)v2 = *(_QWORD *)&fractionCompleted.fractionCompleted.is_nil;
  *(_BYTE *)(v2 + 8) = v1 & 1;
  return fractionCompleted;
}

uint64_t DownloadProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v37 = a1;
  v32 = sub_1D2D9D860();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6158);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6160);
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6168);
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6170);
  MEMORY[0x1E0C80A78](v35);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - v16;
  if ((v1[1] & 1) != 0)
  {
    sub_1D2D9D854();
    v18 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CDF6F8], v32);
    v19 = sub_1D2D9D884();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    sub_1D2D9D458();
    sub_1D2D9D4A0();
    v20 = sub_1D2D9D4DC();
    swift_release();
    KeyPath = swift_getKeyPath();
    sub_1D2D9DA70();
    sub_1D2D9CBE8();
    v22 = v39;
    v23 = BYTE8(v39);
    v24 = v40;
    v25 = BYTE8(v40);
    *(_QWORD *)v6 = v19;
    *((_QWORD *)v6 + 1) = KeyPath;
    *((_QWORD *)v6 + 2) = v20;
    *((_QWORD *)v6 + 3) = v22;
    v6[32] = v23;
    *((_QWORD *)v6 + 5) = v24;
    v6[48] = v25;
    *(_OWORD *)(v6 + 56) = v41;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6178);
    sub_1D2CDE1A0();
    sub_1D2CDE2AC();
    return sub_1D2D9D1E8();
  }
  else
  {
    v27 = *v1;
    BYTE8(v39) = 0;
    v38 = 0x3FF0000000000000;
    *(_QWORD *)&v39 = v27;
    sub_1D2CCCAC8();
    sub_1D2D9CB94();
    sub_1D2CC6C74(&qword_1EFCA6188, &qword_1EFCA6160, MEMORY[0x1E0CD8B78]);
    sub_1D2CDE268();
    sub_1D2D9D5F0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
    sub_1D2D9DA70();
    sub_1D2D9CBE8();
    v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v34);
    v29 = &v14[*(int *)(v35 + 36)];
    v30 = v40;
    *(_OWORD *)v29 = v39;
    *((_OWORD *)v29 + 1) = v30;
    *((_OWORD *)v29 + 2) = v41;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
    sub_1D2CDE39C((uint64_t)v14, (uint64_t)v17);
    sub_1D2CDE3E4((uint64_t)v17, (uint64_t)v6);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6178);
    sub_1D2CDE1A0();
    sub_1D2CDE2AC();
    sub_1D2D9D1E8();
    return sub_1D2CDE42C((uint64_t)v17);
  }
}

uint64_t sub_1D2CDE100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF54();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CDE128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF54();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CDE150()
{
  swift_retain();
  return sub_1D2D9CF60();
}

uint64_t sub_1D2CDE178()
{
  swift_retain();
  return sub_1D2D9CF60();
}

unint64_t sub_1D2CDE1A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1EFCA6180;
  if (!qword_1EFCA6180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6170);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6160);
    v2[3] = &type metadata for DownloadProgressStyle;
    v2[4] = sub_1D2CC6C74(&qword_1EFCA6188, &qword_1EFCA6160, MEMORY[0x1E0CD8B78]);
    v2[5] = sub_1D2CDE268();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6180);
  }
  return result;
}

unint64_t sub_1D2CDE268()
{
  unint64_t result;

  result = qword_1EFCA6190;
  if (!qword_1EFCA6190)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0C18, &type metadata for DownloadProgressStyle);
    atomic_store(result, (unint64_t *)&qword_1EFCA6190);
  }
  return result;
}

unint64_t sub_1D2CDE2AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6198;
  if (!qword_1EFCA6198)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6178);
    v2[0] = sub_1D2CDE318();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6198);
  }
  return result;
}

unint64_t sub_1D2CDE318()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA61A0;
  if (!qword_1EFCA61A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA61A8);
    v2 = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA61A0);
  }
  return result;
}

uint64_t sub_1D2CDE39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CDE3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CDE42C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CDE46C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LanguageState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DownloadProgressView(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DownloadProgressView()
{
  return &type metadata for DownloadProgressView;
}

unint64_t sub_1D2CDE4F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA61C0;
  if (!qword_1EFCA61C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA61C8);
    v2[0] = sub_1D2CDE1A0();
    v2[1] = sub_1D2CDE2AC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA61C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadProgressStyle()
{
  return &type metadata for DownloadProgressStyle;
}

uint64_t sub_1D2CDE56C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CDE584()
{
  return sub_1D2CC6C74(&qword_1EFCA61D0, &qword_1EFCA61D8, MEMORY[0x1E0CDFCF8]);
}

id sub_1D2CDE6F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EmptyViewController()
{
  return objc_opt_self();
}

uint64_t sub_1D2CDE748()
{
  uint64_t result;

  result = _LTIsInternalInstall();
  byte_1ED588640 = result;
  return result;
}

void sub_1D2CDE764()
{
  NSString *v0;
  Class v1;
  BOOL v2;

  v0 = (NSString *)sub_1D2D9DCB0();
  v1 = NSClassFromString(v0);

  if (v1)
    v2 = swift_getObjCClassMetadata() != 0;
  else
    v2 = 0;
  byte_1EFCB25C8 = v2;
}

uint64_t sub_1D2CDE7C4()
{
  char v0;
  uint64_t result;

  if (qword_1ED586890 != -1)
    result = swift_once();
  if (byte_1ED588640 == 1)
  {
    if (qword_1ED586888 != -1)
      result = swift_once();
    v0 = byte_1EFCB25C8;
  }
  else
  {
    v0 = 0;
  }
  byte_1EFCB25C9 = v0;
  return result;
}

uint64_t sub_1D2CDE84C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31[5];

  v31[4] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1D2D9DD10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9DD04();
  v8 = sub_1D2D9DCE0();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
LABEL_5:
    if (qword_1EFCA54B0 != -1)
      swift_once();
    v16 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EFCB2618);
    swift_bridgeObjectRetain_n();
    v17 = sub_1D2D9C8DC();
    v18 = sub_1D2D9E034();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v31[0] = v20;
      *(_DWORD *)v19 = 136380675;
      swift_bridgeObjectRetain();
      v30 = sub_1D2CF78E0(a1, a2, (uint64_t *)v31);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v17, v18, "Failed to decode Environment variable since object was not a dictionary: %{private}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v20, -1, -1);
      MEMORY[0x1D8248974](v19, -1, -1);
LABEL_15:

      return 0;
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1D2D9C660();
  v31[0] = 0;
  v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 16, v31);

  if (v13)
  {
    v14 = v31[0];
    sub_1D2D9E214();
    sub_1D2CDECC8(v8, v10);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6208);
    if (swift_dynamicCast())
      return v30;
    goto LABEL_5;
  }
  v21 = v31[0];
  v22 = (void *)sub_1D2D9C600();

  swift_willThrow();
  sub_1D2CDECC8(v8, v10);
  if (qword_1EFCA54B0 != -1)
    swift_once();
  v23 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EFCB2618);
  v24 = v22;
  v17 = sub_1D2D9C8DC();
  v25 = sub_1D2D9E034();
  if (!os_log_type_enabled(v17, v25))
  {

    goto LABEL_15;
  }
  v26 = (uint8_t *)swift_slowAlloc();
  v27 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v26 = 138412290;
  v28 = (void *)sub_1D2D9C5F4();
  v31[0] = v28;
  sub_1D2D9E1B4();
  *v27 = v28;

  _os_log_impl(&dword_1D2CC0000, v17, v25, "Failed to decode Environment variable: %@", v26, 0xCu);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
  swift_arrayDestroy();
  MEMORY[0x1D8248974](v27, -1, -1);
  MEMORY[0x1D8248974](v26, -1, -1);

  return 0;
}

uint64_t sub_1D2CDECC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D2CDB760(a1, a2);
  return a1;
}

BOOL static ErrorStateView.Context.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ErrorStateView.Context.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t ErrorStateView.Context.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

__n128 ErrorStateView.init(context:title:details:actionTitle:action:closeAction:)@<Q0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __n128 a12, uint64_t a13)
{
  __n128 result;

  result = a12;
  *(_BYTE *)a9 = *a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 112) = a13;
  return result;
}

uint64_t ErrorStateView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v40;
  _OWORD v42[7];
  uint64_t v43;

  v3 = sub_1D2D9CDF8();
  MEMORY[0x1E0C80A78](v3);
  v5 = (_OWORD *)((char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6210);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6218);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6220);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_OWORD *)(v1 + 80);
  v42[4] = *(_OWORD *)(v1 + 64);
  v42[5] = v15;
  v42[6] = *(_OWORD *)(v1 + 96);
  v43 = *(_QWORD *)(v1 + 112);
  v16 = *(_OWORD *)(v1 + 16);
  v42[0] = *(_OWORD *)v1;
  v42[1] = v16;
  v17 = *(_OWORD *)(v1 + 48);
  v42[2] = *(_OWORD *)(v1 + 32);
  v42[3] = v17;
  *(_QWORD *)v8 = sub_1D2D9D02C();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6228);
  sub_1D2CDF080((uint64_t)v42, (uint64_t)&v8[*(int *)(v18 + 44)]);
  v19 = sub_1D2D9D410();
  sub_1D2D9CAF8();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v11, &qword_1EFCA6210);
  v28 = &v11[*(int *)(v9 + 36)];
  *v28 = v19;
  *((_QWORD *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA6210);
  v29 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  v30 = MEMORY[0x1D824739C](v29);
  LOBYTE(v9) = sub_1D2D9D410();
  sub_1D2CCAD60((uint64_t)v11, (uint64_t)v14, &qword_1EFCA6218);
  v31 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v31 = v30;
  v31[8] = v9;
  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA6218);
  v32 = (char *)v5 + *(int *)(v3 + 20);
  v33 = *MEMORY[0x1E0CDB0C0];
  v34 = sub_1D2D9D0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #9.0 }
  *v5 = _Q0;
  v40 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6230) + 36);
  sub_1D2CDCC78((uint64_t)v5, v40);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6070) + 36)) = 256;
  sub_1D2CCAD60((uint64_t)v14, a1, &qword_1EFCA6220);
  sub_1D2CDCCBC((uint64_t)v5);
  return sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA6220);
}

uint64_t sub_1D2CDF080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62C8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  *(_QWORD *)v15 = sub_1D2D9D11C();
  *((_QWORD *)v15 + 1) = 0x4030000000000000;
  v15[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62D0);
  sub_1D2CDF2E0(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  if (*(_QWORD *)(a1 + 104))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62E8);
    sub_1D2CE19AC(&qword_1EFCA62F0, &qword_1EFCA62E8, &qword_1EFCA62F8, (uint64_t (*)(void))sub_1D2CE171C);
    sub_1D2D9D8FC();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62D8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  }
  sub_1D2CCAD60((uint64_t)v15, (uint64_t)v12, &qword_1EFCA62C8);
  sub_1D2CCAD60((uint64_t)v9, (uint64_t)v6, &qword_1EFCA62C0);
  sub_1D2CCAD60((uint64_t)v12, a2, &qword_1EFCA62C8);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62E0);
  sub_1D2CCAD60((uint64_t)v6, a2 + *(int *)(v19 + 48), &qword_1EFCA62C0);
  sub_1D2CCADA4((uint64_t)v9, &qword_1EFCA62C0);
  sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA62C8);
  sub_1D2CCADA4((uint64_t)v6, &qword_1EFCA62C0);
  return sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA62C8);
}

uint64_t sub_1D2CDF2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[8];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6320);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - v7;
  v40 = sub_1D2D9D11C();
  sub_1D2CDF700(a1, (uint64_t)&v54);
  v41 = v54;
  v39 = v55;
  v9 = v56;
  v42 = v57;
  v10 = v59;
  v47 = v58;
  v46 = v60;
  v45 = v61;
  v11 = v63;
  v44 = v62;
  v48 = v64;
  v49 = v65;
  sub_1D2CE1824(a1 + 56, (uint64_t)v66);
  v12 = sub_1D2CE1824((uint64_t)v66, (uint64_t)&v54);
  if (v55 && *(_QWORD *)(a1 + 88))
  {
    v35[2] = v35;
    MEMORY[0x1E0C80A78](v12);
    v35[-4] = v14;
    v35[-3] = v13;
    LOBYTE(v35[-2]) = v15;
    v35[-1] = v16;
    swift_retain();
    v35[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6340);
    v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B50);
    v36 = v11;
    v18 = v17;
    v19 = sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
    v20 = sub_1D2CE1934();
    v50 = v18;
    v51 = &type metadata for ActionButtonLabelStyle;
    v11 = v36;
    v52 = v19;
    v53 = v20;
    swift_getOpaqueTypeConformance2();
    sub_1D2D9D8FC();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6330);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
  }
  else
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6330);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  }
  v38 = v8;
  v23 = (uint64_t)v8;
  v24 = v43;
  sub_1D2CCAD60(v23, v43, &qword_1EFCA6320);
  *(_QWORD *)a2 = v40;
  *(_QWORD *)(a2 + 8) = 0x4000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v25 = v41;
  v26 = v39;
  *(_QWORD *)(a2 + 24) = v41;
  *(_QWORD *)(a2 + 32) = v26;
  *(_BYTE *)(a2 + 40) = v9;
  v27 = v47;
  *(_QWORD *)(a2 + 48) = v42;
  *(_QWORD *)(a2 + 56) = v27;
  v37 = v10;
  v28 = v46;
  *(_QWORD *)(a2 + 64) = v10;
  *(_QWORD *)(a2 + 72) = v28;
  v29 = v45;
  v30 = v44;
  *(_QWORD *)(a2 + 80) = v45;
  *(_QWORD *)(a2 + 88) = v30;
  v31 = v48;
  *(_QWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 104) = v31;
  *(_QWORD *)(a2 + 112) = v49;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6338);
  sub_1D2CCAD60(v24, a2 + *(int *)(v32 + 48), &qword_1EFCA6320);
  sub_1D2CCCB0C(v25, v26, v9);
  swift_bridgeObjectRetain();
  v33 = v27;
  LOBYTE(v27) = v46;
  sub_1D2CE186C(v33, v10, v46, v29);
  sub_1D2CCADA4((uint64_t)v38, &qword_1EFCA6320);
  sub_1D2CCADA4(v24, &qword_1EFCA6320);
  sub_1D2CCCAB4(v25, v26, v9);
  swift_bridgeObjectRelease();
  return sub_1D2CE18C8(v47, v37, v27, v45);
}

uint64_t sub_1D2CDF700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t KeyPath;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOWORD(v29) = 256;
  v4 = sub_1D2D9D5C0();
  v6 = v5;
  v8 = v7 & 1;
  sub_1D2D9D44C();
  v9 = sub_1D2D9D5B4();
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_1D2CCCAB4(v4, v6, v8);
  swift_bridgeObjectRelease();
  v14 = sub_1D2D9D5A8();
  v34 = v15;
  v35 = v14;
  v17 = v16;
  v36 = v18;
  sub_1D2CCCAB4(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a1 + 48);
  if (v19)
  {
    sub_1D2CD1430();
    swift_bridgeObjectRetain();
    v20 = sub_1D2D9D5CC();
    v32 = v21;
    v33 = v20;
    v31 = v22;
    v19 = v23 & 1;
    v30 = sub_1D2D9D44C();
    KeyPath = swift_getKeyPath();
    v25 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor, 0, v29);
    v26 = MEMORY[0x1D8247330](v25);
    v27 = 256;
  }
  else
  {
    v32 = 0;
    v33 = 0;
    v30 = 0;
    v31 = 0;
    v27 = 0;
    KeyPath = 0;
    v26 = 0;
  }
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v34;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v32;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v31;
  *(_QWORD *)(a2 + 64) = v27;
  *(_QWORD *)(a2 + 72) = KeyPath;
  *(_QWORD *)(a2 + 80) = v30;
  *(_QWORD *)(a2 + 88) = v26;
  sub_1D2CCCB0C(v35, v34, v17 & 1);
  swift_bridgeObjectRetain();
  sub_1D2CE186C(v33, v32, v19, v31);
  sub_1D2CE18C8(v33, v32, v19, v31);
  sub_1D2CCCAB4(v35, v34, v17 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CDF988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B50);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2D9D89C();
  sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
  sub_1D2CE1934();
  sub_1D2D9D608();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D2CDFAB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  v1 = sub_1D2D9D050();
  v28 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B50);
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6310);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62F8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6318);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D0A4();
  sub_1D2D9D89C();
  sub_1D2D9D044();
  sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
  sub_1D2CC66E4(&qword_1EFCA6308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAF30], MEMORY[0x1E0CDAF20]);
  sub_1D2D9D608();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  v16 = sub_1D2D9D44C();
  KeyPath = swift_getKeyPath();
  v18 = v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v27);
  v19 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v19 = KeyPath;
  v19[1] = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  sub_1D2CE171C();
  sub_1D2D9D6EC();
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA62F8);
  v20 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v21 = MEMORY[0x1D8247330](v20);
  v23 = v29;
  v22 = v30;
  v24 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v31, v15, v30);
  *(_QWORD *)(v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA62E8) + 36)) = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v22);
}

uint64_t static ErrorStateView.airplaneMode(sourceLocale:targetLocale:context:)@<X0>(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t result;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *a1;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v8 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v7);
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  if (v10)
    v12 = v8;
  else
    v12 = 0x45474155474E414CLL;
  v39 = v12;
  if (v10)
    v13 = v10;
  else
    v13 = 0xE800000000000000;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v14 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v7);
  v16 = v15;
  v11(v7, v4);
  if (v16)
    v17 = v14;
  else
    v17 = 0x45474155474E414CLL;
  if (v16)
    v18 = v16;
  else
    v18 = 0xE800000000000000;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_1D2D9C5E8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6238);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D2DA0CB0;
  v21 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  v22 = sub_1D2CE007C();
  *(_QWORD *)(v20 + 32) = v39;
  *(_QWORD *)(v20 + 40) = v13;
  *(_QWORD *)(v20 + 96) = v21;
  *(_QWORD *)(v20 + 104) = v22;
  *(_QWORD *)(v20 + 64) = v22;
  *(_QWORD *)(v20 + 72) = v17;
  *(_QWORD *)(v20 + 80) = v18;
  v23 = sub_1D2D9DCF8();
  v25 = v24;
  swift_bridgeObjectRelease();
  v26 = sub_1D2D9D0A4();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = (void *)sub_1D2D9DCB0();
  v34 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1D2D9DCD4();
  result = sub_1D2D9D0A4();
  *(_BYTE *)a2 = v40;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v28;
  *(_BYTE *)(a2 + 24) = v30 & 1;
  *(_QWORD *)(a2 + 32) = v32;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 56) = result;
  *(_QWORD *)(a2 + 64) = v37;
  *(_QWORD *)(a2 + 72) = v36 & 1;
  *(_QWORD *)(a2 + 80) = v38;
  *(_QWORD *)(a2 + 88) = sub_1D2CE00C0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  return result;
}

unint64_t sub_1D2CE007C()
{
  unint64_t result;

  result = qword_1EFCA6240;
  if (!qword_1EFCA6240)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFCA6240);
  }
  return result;
}

uint64_t sub_1D2CE00C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1D2D9DEFC();
  v4 = sub_1D2D9DEF0();
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v6;
  sub_1D2D06D10((uint64_t)v2, (uint64_t)&unk_1EFCA62B8, v5);
  return swift_release();
}

uint64_t sub_1D2CE0184()
{
  uint64_t v0;

  sub_1D2D9DEFC();
  *(_QWORD *)(v0 + 16) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2CE01EC()
{
  uint64_t v0;

  swift_release();
  sub_1D2D5F194(2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static ErrorStateView.missingOfflineAssets(context:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  int v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C648();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - v11;
  v13 = *a1;
  sub_1D2D9C63C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v45 = v13;
    v44 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v44(v12, v6, v7);
    v15 = sub_1D2D9D0A4();
    v41 = v16;
    v42 = v15;
    v40 = v17;
    v43 = v18;
    if (qword_1EFCA54E0 != -1)
      swift_once();
    v19 = sub_1D2D9C5E8();
    v38 = v20;
    v39 = v19;
    v21 = (void *)sub_1D2D9DCB0();
    v22 = (id)SFLocalizableWAPIStringKeyForKey();

    sub_1D2D9DCD4();
    v23 = sub_1D2D9D0A4();
    v25 = v24;
    v37 = v26;
    v28 = v27 & 1;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12, v7);
    v29 = v12;
    v30 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v31 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v32 = swift_allocObject();
    v44((char *)(v32 + v31), v30, v7);
    *(_BYTE *)a2 = v45;
    v33 = v41;
    *(_QWORD *)(a2 + 8) = v42;
    *(_QWORD *)(a2 + 16) = v33;
    *(_BYTE *)(a2 + 24) = v40 & 1;
    v34 = v39;
    *(_QWORD *)(a2 + 32) = v43;
    *(_QWORD *)(a2 + 40) = v34;
    v35 = v37;
    *(_QWORD *)(a2 + 48) = v38;
    *(_QWORD *)(a2 + 56) = v23;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v28;
    *(_QWORD *)(a2 + 80) = v35;
    *(_QWORD *)(a2 + 88) = sub_1D2CE0BE0;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 96) = v32;
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v29, v7);
  }
  return result;
}

uint64_t sub_1D2CE0518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_1D2D9C648();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_1D2D9DEFC();
  v10 = sub_1D2D9DEF0();
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, v2);
  sub_1D2D06E5C((uint64_t)v8, (uint64_t)&unk_1EFCA62A8, v12);
  return swift_release();
}

uint64_t sub_1D2CE0668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a4;
  sub_1D2D9DEFC();
  v4[4] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2CE06D4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_1D2D9C60C();
    sub_1D2CCF4A8(MEMORY[0x1E0DEE9D8]);
    v4 = (void *)sub_1D2D9DC20();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v2, sel_openSensitiveURL_withOptions_, v3, v4);

  }
  else
  {
    v5 = 2;
  }
  **(_BYTE **)(v0 + 16) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double static ErrorStateView.noInternetConnection(context:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  double result;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v14 = *a1;
  v3 = sub_1D2D9D0A4();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  if (qword_1EFCA54E0 != -1)
    swift_once();
  v15 = sub_1D2D9C5E8();
  v16 = v10;
  sub_1D2D9DDA0();
  v11 = (void *)sub_1D2D9DCB0();
  v12 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1D2D9DCD4();
  sub_1D2D9C5E8();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v7 & 1;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  result = 0.0;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  return result;
}

uint64_t sub_1D2CE0974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t *v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v1 = sub_1D2D9D2D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AE8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6280);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D2E4();
  v12 = sub_1D2D9D44C();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  v14 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v14 = KeyPath;
  v14[1] = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D2CE14B8();
  sub_1D2D9D6EC();
  sub_1D2CCADA4((uint64_t)v7, &qword_1ED586AE8);
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v17 = sub_1D2D9D83C();
  v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v21, v11, v8);
  *(_QWORD *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6298) + 36)) = v17;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1D2CE0B80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D2D9C648();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D2CE0BE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D2D9C648() - 8) + 80);
  return sub_1D2CE0518(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1D2CE0C10()
{
  unint64_t result;

  result = qword_1EFCA6248;
  if (!qword_1EFCA6248)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ErrorStateView.Context, &type metadata for ErrorStateView.Context);
    atomic_store(result, (unint64_t *)&qword_1EFCA6248);
  }
  return result;
}

uint64_t sub_1D2CE0C54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ErrorStateView(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[8];
  if (result)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (a1[11])
    result = swift_release();
  if (a1[13])
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ErrorStateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
  }
  v8 = *(_QWORD *)(a2 + 88);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v8;
    *(_QWORD *)(a1 + 96) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  v10 = *(_QWORD *)(a2 + 104);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v10;
    *(_QWORD *)(a1 + 112) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for ErrorStateView(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 56);
  v5 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D2CE0FCC(a1 + 56);
      v7 = *(_OWORD *)(a2 + 72);
      *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 72);
    *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v8;
  }
  v9 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v9;
      *(_QWORD *)(a1 + 96) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_15:
  v12 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (v12)
    {
      v14 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v12;
      *(_QWORD *)(a1 + 112) = v14;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_21;
  }
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2CE0FCC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CDB018] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ErrorStateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
  {
    v6 = *(_QWORD *)(a2 + 64);
    if (v6)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D2CE0FCC(a1 + 56);
  }
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
LABEL_6:
  v8 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v8;
      *(_QWORD *)(a1 + 96) = v9;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v8;
    *(_QWORD *)(a1 + 96) = v10;
    goto LABEL_13;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_13:
  v11 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v11;
      *(_QWORD *)(a1 + 112) = v13;
      return a1;
    }
LABEL_19:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorStateView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorStateView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorStateView()
{
  return &type metadata for ErrorStateView;
}

uint64_t storeEnumTagSinglePayload for ErrorStateView.Context(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2CE1280 + 4 * byte_1D2DA0CC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2CE12B4 + 4 * byte_1D2DA0CC0[v4]))();
}

uint64_t sub_1D2CE12B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CE12BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CE12C4);
  return result;
}

uint64_t sub_1D2CE12D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CE12D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2CE12DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CE12E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ErrorStateView.Context()
{
  return &type metadata for ErrorStateView.Context;
}

unint64_t sub_1D2CE1304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6250;
  if (!qword_1EFCA6250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6230);
    v2[0] = sub_1D2CE1388();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60A0, &qword_1EFCA6070, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6250);
  }
  return result;
}

unint64_t sub_1D2CE1388()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6258;
  if (!qword_1EFCA6258)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6220);
    v2[0] = sub_1D2CE140C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6270, &qword_1EFCA6278, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6258);
  }
  return result;
}

unint64_t sub_1D2CE140C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6260;
  if (!qword_1EFCA6260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6218);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA6268, &qword_1EFCA6210, MEMORY[0x1E0CDFB10]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6260);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionButtonLabelStyle()
{
  return &type metadata for ActionButtonLabelStyle;
}

uint64_t sub_1D2CE14A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D2CE14B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6288;
  if (!qword_1EFCA6288)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586AE8);
    v2[0] = sub_1D2CC66E4(&qword_1EFCA6290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC388], MEMORY[0x1E0CDC378]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6288);
  }
  return result;
}

uint64_t sub_1D2CE1554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D2D9C648();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D2CE15C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D2D9C648() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2CE0668(a1, v5, v6, v7);
}

uint64_t sub_1D2CE164C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2CE1670()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D2CE16D4;
  return sub_1D2CE0184();
}

uint64_t sub_1D2CE16D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_1D2CE171C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_1EFCA6300;
  if (!qword_1EFCA6300)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA62F8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B50);
    v3 = sub_1D2D9D050();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAF30];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
    v5[5] = sub_1D2CC66E4(&qword_1EFCA6308, v4, MEMORY[0x1E0CDAF20]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EFCA6300);
  }
  return result;
}

uint64_t sub_1D2CE1824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE186C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCB0C(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D2CE18C8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCAB4(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2CE1924()
{
  return sub_1D2CDF988();
}

unint64_t sub_1D2CE1934()
{
  unint64_t result;

  result = qword_1EFCA6348;
  if (!qword_1EFCA6348)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0DD8, &type metadata for ActionButtonLabelStyle);
    atomic_store(result, (unint64_t *)&qword_1EFCA6348);
  }
  return result;
}

uint64_t sub_1D2CE1978()
{
  return sub_1D2CE19AC(&qword_1EFCA6350, &qword_1EFCA6298, &qword_1ED586AE8, (uint64_t (*)(void))sub_1D2CE14B8);
}

uint64_t sub_1D2CE19AC(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[4];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v9[3] = a4();
    v9[0] = swift_getOpaqueTypeConformance2();
    v9[1] = sub_1D2CC6C74(&qword_1EFCA5AA8, &qword_1EFCA5AB0, MEMORY[0x1E0CDC718]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2CE1A5C()
{
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  return 0xD000000000000011;
}

_QWORD *sub_1D2CE1B4C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1D2CE1B58()
{
  return sub_1D2CE1A5C();
}

void sub_1D2CE1B60(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1D2CE1B68@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1D2CE1B7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1D2CE1B90@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D2CE1BA4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1D2CE1BD4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1D2CE1C00@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1D2CE1C24(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1D2CE1C38(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1D2CE1C4C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1D2CE1C60@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D2CE1C74(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D2CE1C88(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1D2CE1C9C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D2CE1CB0()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1D2CE1CC0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_1D2CE1CD4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1D2CE1CE4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1D2CE1CF0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D2CE1D04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1D2CC6884(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t ExpandingText.init(_:isExpanded:_:buttonAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t result;
  __int128 v29;

  v13 = (int *)type metadata accessor for ExpandingText();
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_BYTE *)(a9 + 32) = 0;
  v14 = a9 + v13[6];
  v15 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (uint64_t *)(a9 + v13[7]);
  *v16 = 0;
  v16[1] = 0;
  v17 = a9 + v13[8];
  sub_1D2D9D8B4();
  *(_BYTE *)v17 = v29;
  *(_QWORD *)(v17 + 8) = *((_QWORD *)&v29 + 1);
  v18 = (_OWORD *)(a9 + v13[9]);
  sub_1D2D9D8B4();
  *v18 = v29;
  v19 = v13[10];
  sub_1D2D9D8B4();
  *(_OWORD *)(a9 + v19) = v29;
  v20 = a9 + v13[11];
  sub_1D2D9D8B4();
  *(_BYTE *)v20 = v29;
  *(_QWORD *)(v20 + 8) = *((_QWORD *)&v29 + 1);
  v21 = a9 + v13[12];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = (uint64_t *)(a9 + v13[13]);
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  swift_storeEnumTagMultiPayload();
  sub_1D2D9D578();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  sub_1D2CE46A0(*(_QWORD *)(a9 + 16), *(_QWORD *)(a9 + 24));
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  sub_1D2CE46D0(a6, v14);
  result = sub_1D2CCCF1C(*v16);
  *v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t type metadata accessor for ExpandingText()
{
  uint64_t result;

  result = qword_1EFCA6430;
  if (!qword_1EFCA6430)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_1D2CE1F7C()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char *v68;
  double v69;
  double v70;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  double v81;
  __int128 v82;
  double v83[2];

  v1 = (_QWORD *)v0;
  v2 = (int *)type metadata accessor for ExpandingText();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v72 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9D584();
  v79 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v80 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v72 - v14;
  v16 = (uint64_t *)(v0 + v2[9]);
  v17 = *v16;
  v18 = v16[1];
  *(_QWORD *)&v82 = *v16;
  *((_QWORD *)&v82 + 1) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8C0();
  if (v83[0] <= 0.0
    || (v82 = *(_OWORD *)(v0 + v2[10]),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64B8),
        sub_1D2D9D8C0(),
        *(_QWORD *)&v83[0] == 3))
  {
    if (qword_1EFCA54B8 != -1)
      swift_once();
    v19 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EFCB2630);
    sub_1D2CE4718(v0, (uint64_t)v7);
    sub_1D2CE4718(v0, (uint64_t)v4);
    v20 = sub_1D2D9C8DC();
    v21 = sub_1D2D9E028();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      *(double *)&v23 = COERCE_DOUBLE(swift_slowAlloc());
      v83[0] = *(double *)&v23;
      *(_DWORD *)v22 = 134218242;
      v24 = sub_1D2D9DD7C();
      sub_1D2CE62C4((uint64_t)v7);
      *(_QWORD *)&v82 = v24;
      sub_1D2D9E1B4();
      *(_WORD *)(v22 + 12) = 2080;
      v25 = &v4[v2[9]];
      v26 = *(_QWORD *)v25;
      v27 = *((_QWORD *)v25 + 1);
      *(_QWORD *)&v82 = v26;
      *((_QWORD *)&v82 + 1) = v27;
      sub_1D2D9D8C0();
      if (v81 <= 0.0)
        v28 = 0xD000000000000013;
      else
        v28 = 0xD000000000000012;
      if (v81 <= 0.0)
        v29 = 0x80000001D2DA8400;
      else
        v29 = 0x80000001D2DA83E0;
      *(_QWORD *)&v82 = sub_1D2CF78E0(v28, v29, (uint64_t *)v83);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CE62C4((uint64_t)v4);
      _os_log_impl(&dword_1D2CC0000, v20, v21, "Text of len %ld hard isMultiline due to: %s", (uint8_t *)v22, 0x16u);
      v30 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v23, -1, -1);
      MEMORY[0x1D8248974](v22, -1, -1);

    }
    else
    {
      sub_1D2CE62C4((uint64_t)v7);
      sub_1D2CE62C4((uint64_t)v4);

      return 1;
    }
  }
  else
  {
    v78 = v10;
    *(_QWORD *)&v82 = v17;
    *((_QWORD *)&v82 + 1) = v18;
    sub_1D2D9D8C0();
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
    v76 = v0 + v2[14];
    v77 = v11;
    v75 = v31;
    ((void (*)(char *))v31)(v15);
    sub_1D2D9D0A4();
    v32 = sub_1D2D9D5C0();
    v34 = v33;
    v36 = v35;
    v37 = (char *)v1 + v2[12];
    v38 = *(_QWORD *)v37;
    v74 = v37;
    v39 = v37[8];
    j__swift_retain();
    v40 = sub_1D2D7C324(v38, v39);
    j__swift_release();
    if (!v40)
      sub_1D2D9D458();
    v41 = v36 & 1;
    v42 = sub_1D2D9D5B4();
    v44 = v43;
    v45 = v34;
    v47 = v46 & 1;
    sub_1D2CCCAB4(v32, v45, v41);
    swift_release();
    swift_bridgeObjectRelease();
    v48 = sub_1D2D9D560();
    v49 = (uint64_t)v78;
    v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
    v73(v78, 1, 1, v48);
    sub_1D2D9D56C();
    v51 = v50;
    sub_1D2CCCAB4(v42, v44, v47);
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v49, &qword_1EFCA64C0);
    v52 = v77;
    v79 = *(_QWORD *)(v79 + 8);
    ((void (*)(char *, uint64_t))v79)(v15, v77);
    v75(v80, v76, v52);
    v53 = v1[1];
    *(_QWORD *)&v82 = *v1;
    *((_QWORD *)&v82 + 1) = v53;
    sub_1D2CD1430();
    swift_bridgeObjectRetain();
    v54 = sub_1D2D9D5CC();
    v56 = v55;
    v58 = v57;
    v59 = *(_QWORD *)v74;
    v60 = v74[8];
    j__swift_retain();
    v61 = sub_1D2D7C324(v59, v60);
    j__swift_release();
    if (!v61)
      sub_1D2D9D458();
    v62 = sub_1D2D9D5B4();
    v64 = v63;
    v66 = v65 & 1;
    sub_1D2CCCAB4(v54, v56, v58 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    v67 = (uint64_t)v78;
    v73(v78, 1, 1, v48);
    v68 = v80;
    sub_1D2D9D56C();
    v70 = v69;
    sub_1D2CCCAB4(v62, v64, v66);
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v67, &qword_1EFCA64C0);
    ((void (*)(char *, uint64_t))v79)(v68, v77);
    return v51 < v70;
  }
  return v30;
}

uint64_t sub_1D2CE2644@<X0>(char a1@<W0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  char v98;
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  char v102;
  char v103;
  int v104;
  __int16 v105;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6540);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6548);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6550);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v65 - v17;
  v19 = sub_1D2D9D80C();
  if ((a1 & 1) != 0)
  {
    sub_1D2D9D0A4();
    v20 = sub_1D2D9D5C0();
    v77 = a3;
    v21 = v20;
    v75 = v10;
    v23 = v22;
    v76 = a2;
    v72 = v8;
    v25 = v24 & 1;
    sub_1D2D9D458();
    v26 = sub_1D2D9D5B4();
    v78 = v12;
    v74 = v26;
    *(_QWORD *)&v71 = v27;
    v73 = v9;
    v29 = v28;
    v31 = v30;
    v70 = v30;
    swift_release();
    v32 = v29 & 1;
    sub_1D2CCCAB4(v21, v23, v25);
    swift_bridgeObjectRelease();
    v68 = sub_1D2D9D434();
    sub_1D2D9CAF8();
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v41 = sub_1D2D9D800();
    KeyPath = swift_getKeyPath();
    v69 = KeyPath;
    v43 = sub_1D2D9D434();
    sub_1D2D9CAF8();
    v98 = v32;
    v97 = 0;
    v96 = 0;
    v44 = v74;
    v79 = v74;
    v45 = v71;
    *(_QWORD *)&v80 = v71;
    BYTE8(v80) = v32;
    v81 = v31;
    LOBYTE(v82) = v68;
    v83 = v34;
    v84 = v36;
    v85 = v38;
    v86 = v40;
    LOBYTE(v87) = 0;
    *((_QWORD *)&v87 + 1) = KeyPath;
    v88 = v41;
    v89 = v43;
    v91 = v46;
    v92 = v47;
    v93 = v48;
    v94 = v49;
    v95 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6560);
    sub_1D2CCE538(&qword_1EFCA6568, &qword_1EFCA6560, (uint64_t (*)(void))sub_1D2CE65E8, MEMORY[0x1E0CD9758]);
    v50 = (uint64_t)v72;
    sub_1D2D9D6A4();
    sub_1D2CCCAB4(v44, v45, v32);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v51 = sub_1D2D9D038();
    sub_1D2CE2C38((uint64_t)&v79);
    v52 = v79;
    v65 = v80;
    v53 = v81;
    v54 = v82;
    v55 = v83;
    LOBYTE(v44) = v84;
    v56 = v85;
    v74 = v19;
    v57 = v86;
    v71 = v87;
    v76 = v15;
    v70 = v88;
    LODWORD(v69) = v89;
    v68 = v90;
    v103 = 0;
    v102 = v84;
    v100 = v86;
    v67 = sub_1D2D9DA70();
    v66 = v58;
    v59 = (uint64_t)v78;
    sub_1D2CCAD60(v50, (uint64_t)v78, &qword_1EFCA6540);
    v60 = v73;
    v61 = v59 + *(int *)(v73 + 36);
    *(_QWORD *)v61 = v51;
    *(_QWORD *)(v61 + 8) = 0;
    *(_BYTE *)(v61 + 16) = 0;
    *(_DWORD *)(v61 + 17) = v79;
    *(_DWORD *)(v61 + 20) = *(_DWORD *)((char *)&v79 + 3);
    *(_QWORD *)(v61 + 24) = v52;
    *(_OWORD *)(v61 + 32) = v65;
    *(_QWORD *)(v61 + 48) = v53;
    *(_QWORD *)(v61 + 56) = v54;
    *(_QWORD *)(v61 + 64) = v55;
    *(_BYTE *)(v61 + 72) = v44;
    *(_DWORD *)(v61 + 73) = *(_DWORD *)v101;
    *(_DWORD *)(v61 + 76) = *(_DWORD *)&v101[3];
    *(_QWORD *)(v61 + 80) = v56;
    *(_BYTE *)(v61 + 88) = v57;
    v19 = v74;
    *(_DWORD *)(v61 + 92) = *(_DWORD *)&v99[3];
    *(_DWORD *)(v61 + 89) = *(_DWORD *)v99;
    *(_OWORD *)(v61 + 96) = v71;
    *(_QWORD *)(v61 + 112) = v70;
    v15 = v76;
    *(_BYTE *)(v61 + 120) = v69;
    *(_BYTE *)(v61 + 121) = v68;
    *(_WORD *)(v61 + 126) = v105;
    *(_DWORD *)(v61 + 122) = v104;
    a3 = v77;
    v62 = v66;
    *(_QWORD *)(v61 + 128) = v67;
    *(_QWORD *)(v61 + 136) = v62;
    sub_1D2CCADA4(v50, &qword_1EFCA6540);
    sub_1D2CD2018((uint64_t)v78, (uint64_t)v18, &qword_1EFCA6548);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v18, 0, 1, v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  }
  sub_1D2CCAD60((uint64_t)v18, (uint64_t)v15, &qword_1EFCA6550);
  *(_QWORD *)a3 = v19;
  *(_WORD *)(a3 + 8) = 256;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6558);
  sub_1D2CCAD60((uint64_t)v15, a3 + *(int *)(v63 + 48), &qword_1EFCA6550);
  swift_retain();
  sub_1D2CCADA4((uint64_t)v18, &qword_1EFCA6550);
  sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6550);
  return swift_release();
}

__n128 sub_1D2CE2C38@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6590);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D2DA0CB0;
  sub_1D2D9D80C();
  sub_1D2CE2DD8();
  v3 = sub_1D2D9D818();
  swift_release();
  *(_QWORD *)(v2 + 32) = v3;
  sub_1D2D9D80C();
  sub_1D2CE2DD8();
  v4 = sub_1D2D9D818();
  swift_release();
  *(_QWORD *)(v2 + 40) = v4;
  sub_1D2D9DE78();
  sub_1D2D9DB0C();
  sub_1D2D9DB18();
  MEMORY[0x1D8247570](v2);
  sub_1D2D9CD14();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v5 = sub_1D2D9D800();
  *(_QWORD *)a1 = v7;
  result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = 256;
  return result;
}

uint64_t sub_1D2CE2DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = sub_1D2D9CD68();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1D2D9C7D4();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ExpandingText();
  sub_1D2CCAD60(v0 + *(int *)(v17 + 24), (uint64_t)v12, &qword_1ED587850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D2CCADA4((uint64_t)v12, &qword_1ED587850);
    sub_1D2D7C4EC((uint64_t)v6);
    v18 = v25;
    v19 = v26;
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0CD9A98], v26);
    v20 = sub_1D2D9CD5C();
    v21 = *(void (**)(char *, uint64_t))(v18 + 8);
    v21(v3, v19);
    v21(v6, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1D2D9C7E0();
    v20 = sub_1D2D9C7B0() == 2;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v20 & 1;
}

uint64_t ExpandingText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t KeyPath;
  uint64_t v32;
  char v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)();
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t (**v55)();
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v79 = a1;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6360);
  MEMORY[0x1E0C80A78](v78);
  v77 = (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9CD68();
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6368);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6370);
  MEMORY[0x1E0C80A78](v63);
  v62 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A68);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A70);
  MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6378);
  MEMORY[0x1E0C80A78](v76);
  v75 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ExpandingText();
  v14 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v74 = v15;
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CE4718(v1, (uint64_t)v16);
  sub_1D2D9DEFC();
  v17 = sub_1D2D9DEF0();
  v18 = *(unsigned __int8 *)(v14 + 80);
  v19 = (v18 + 32) & ~v18;
  v72 = v18 | 7;
  v73 = v18;
  v20 = swift_allocObject();
  v21 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v21;
  sub_1D2CE4764((uint64_t)v16, v20 + v19);
  sub_1D2CE4718(v1, (uint64_t)v16);
  v22 = sub_1D2D9DEF0();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v21;
  sub_1D2CE4764((uint64_t)v16, v23 + v19);
  sub_1D2D9D980();
  v25 = v82;
  v24 = v83;
  v69 = v83;
  LODWORD(v22) = v84;
  *v8 = sub_1D2D9DA88();
  v8[1] = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6380);
  v28 = v2;
  sub_1D2CE3874(v2, v25, v24, v22, (uint64_t)v8 + *(int *)(v27 + 44));
  v29 = v62;
  sub_1D2CCAD60((uint64_t)v8, v62, &qword_1EFCA6368);
  v30 = (_QWORD *)(v29 + *(int *)(v63 + 36));
  *v30 = CGPointMake;
  v30[1] = 0;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA6368);
  KeyPath = swift_getKeyPath();
  v32 = v28;
  v33 = sub_1D2CE2DD8();
  v34 = (unsigned int *)MEMORY[0x1E0CD9A98];
  v36 = v70;
  v35 = v71;
  if ((v33 & 1) == 0)
    v34 = (unsigned int *)MEMORY[0x1E0CD9A90];
  v37 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v68, *v34, v71);
  v38 = (uint64_t)v64;
  v39 = (uint64_t *)&v64[*(int *)(v65 + 36)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6388);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v39 + *(int *)(v40 + 28), v37, v35);
  *v39 = KeyPath;
  v41 = v38;
  sub_1D2CCAD60(v29, v38, &qword_1EFCA6370);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
  sub_1D2CCADA4(v29, &qword_1EFCA6370);
  v42 = sub_1D2D9DA70();
  v43 = v67;
  sub_1D2CCDEF0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v67, 0.0, 1, 0.0, 1, v42, v44);
  sub_1D2CCADA4(v41, &qword_1EFCA5A68);
  v45 = (uint64_t *)(v32 + *(int *)(v66 + 36));
  v46 = *v45;
  v47 = v45[1];
  v80 = v46;
  v81 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8D8();
  v48 = v82;
  v49 = v83;
  v50 = v84;
  v51 = sub_1D2D9DA70();
  v53 = v52;
  v54 = v77;
  sub_1D2CCAD60(v43, v77, &qword_1EFCA5A70);
  v55 = (uint64_t (**)())(v54 + *(int *)(v78 + 36));
  *v55 = sub_1D2CE44C4;
  v55[1] = 0;
  v55[2] = (uint64_t (*)())v51;
  v55[3] = v53;
  v56 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v56 + 2) = v48;
  *((_QWORD *)v56 + 3) = v49;
  *((_QWORD *)v56 + 4) = v50;
  v57 = v75;
  sub_1D2CCAD60(v54, v75, &qword_1EFCA6360);
  v58 = (uint64_t (**)())(v57 + *(int *)(v76 + 36));
  *v58 = sub_1D2CE4A10;
  v58[1] = v56;
  sub_1D2CCADA4(v54, &qword_1EFCA6360);
  sub_1D2CCADA4(v43, &qword_1EFCA5A70);
  LOBYTE(v82) = sub_1D2CE1F7C();
  sub_1D2CE4718(v32, (uint64_t)v16);
  v59 = (v73 + 16) & ~v73;
  v60 = swift_allocObject();
  sub_1D2CE4764((uint64_t)v16, v60 + v59);
  sub_1D2CE4C18();
  sub_1D2D9D758();
  swift_release();
  swift_release();
  swift_release();
  return sub_1D2CCADA4(v57, &qword_1EFCA6378);
}

uint64_t sub_1D2CE3680@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = type metadata accessor for ExpandingText();
  MEMORY[0x1E0C80A78](v4);
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + 24);
  if (v8)
  {
    v9 = *(_BYTE *)(a1 + 32) & 1;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = v8;
    v19 = v9;
    swift_retain();
    swift_retain();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    MEMORY[0x1D82474B0](&v20, v10);
    swift_release();
    swift_release();
    v11 = v20;
    sub_1D2CE4718(a1, (uint64_t)v7);
  }
  else
  {
    sub_1D2CE4718(a1, (uint64_t)&v16 - v6);
    v12 = &v7[*(int *)(v4 + 32)];
    v13 = *v12;
    v14 = *((_QWORD *)v12 + 1);
    LOBYTE(v17) = v13;
    v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
    sub_1D2D9D8C0();
    v11 = v20;
  }
  result = sub_1D2CE62C4((uint64_t)v7);
  *a2 = v11;
  return result;
}

uint64_t sub_1D2CE37A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a4 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    sub_1D2D9D968();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for ExpandingText();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
    return sub_1D2D9D8CC();
  }
}

uint64_t sub_1D2CE3874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char v51;
  char v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BOOL8 v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  _OWORD v138[9];
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v132 = a4;
  v130 = a3;
  v131 = a2;
  v123 = a5;
  v6 = sub_1D2D9CDBC();
  v113 = *(_QWORD *)(v6 - 8);
  v114 = v6;
  MEMORY[0x1E0C80A78](v6);
  v111 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64C8);
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v115 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64D0);
  v109 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v107 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64D8);
  v129 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v106 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64E0);
  MEMORY[0x1E0C80A78](v11);
  v122 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v121 = (char *)&v102 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64E8);
  MEMORY[0x1E0C80A78](v15);
  v118 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for ExpandingText();
  v103 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v105 = (uint64_t)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v119 = (uint64_t)&v102 - v19;
  v104 = v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v102 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64F0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64F8);
  MEMORY[0x1E0C80A78](v117);
  v28 = (_OWORD *)((char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6500);
  MEMORY[0x1E0C80A78](v126);
  v127 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6508);
  MEMORY[0x1E0C80A78](v125);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v124 = (uint64_t)&v102 - v33;
  MEMORY[0x1E0C80A78](v34);
  v133 = (uint64_t)&v102 - v35;
  v36 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v139 = *(_QWORD *)a1;
  *((_QWORD *)&v139 + 1) = v36;
  sub_1D2CD1430();
  swift_bridgeObjectRetain();
  v37 = sub_1D2D9D5CC();
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = sub_1D2D9DA4C();
  sub_1D2CCDD10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v138, 0.0, 1, 0.0, 1, v44, v45, v37, v39, v43, v41);
  sub_1D2CCCAB4(v37, v39, v43);
  swift_bridgeObjectRelease();
  v145 = v138[6];
  v146 = v138[7];
  v147 = v138[8];
  v141 = v138[2];
  v142 = v138[3];
  v143 = v138[4];
  v144 = v138[5];
  v139 = v138[0];
  v140 = v138[1];
  v46 = sub_1D2CE1F7C();
  v128 = v31;
  if (v46)
  {
    v48 = v130;
    v47 = v131;
    v134 = v131;
    v135 = v130;
    v49 = v132 & 1;
    v136 = v132 & 1;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    MEMORY[0x1D82474B0](&v137, v50);
    v51 = v137;
    sub_1D2CE4718(a1, (uint64_t)v23);
    v132 = v49;
    if ((v51 & 1) != 0)
    {
      v52 = 0;
    }
    else
    {
      v53 = &v23[*(int *)(v116 + 44)];
      v54 = *v53;
      v55 = *((_QWORD *)v53 + 1);
      LOBYTE(v134) = v54;
      v135 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
      sub_1D2D9D8C0();
      v52 = v137;
    }
  }
  else
  {
    sub_1D2CE4718(a1, (uint64_t)v23);
    v52 = 0;
    v132 &= 1u;
    v48 = v130;
    v47 = v131;
  }
  v56 = v117;
  v57 = (uint64_t)v118;
  sub_1D2CE62C4((uint64_t)v23);
  *(_QWORD *)v26 = sub_1D2D9D038();
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 0;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6510);
  sub_1D2CE2644(v52, (char *)a1, (uint64_t)&v26[*(int *)(v58 + 44)]);
  sub_1D2CCAD60((uint64_t)v26, v57, &qword_1EFCA64F0);
  sub_1D2CCAD60(v57, (uint64_t)v28 + *(int *)(v56 + 36), &qword_1EFCA64E8);
  v59 = v146;
  v28[6] = v145;
  v28[7] = v59;
  v28[8] = v147;
  v60 = v142;
  v28[2] = v141;
  v28[3] = v60;
  v61 = v144;
  v28[4] = v143;
  v28[5] = v61;
  v62 = v140;
  *v28 = v139;
  v28[1] = v62;
  sub_1D2CE6300((uint64_t)&v139);
  sub_1D2CCADA4(v57, &qword_1EFCA64E8);
  sub_1D2CCADA4((uint64_t)v26, &qword_1EFCA64F0);
  sub_1D2CE633C((uint64_t)&v139);
  v134 = v47;
  v135 = v48;
  v136 = v132;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v137);
  v64 = v48;
  v65 = v137;
  v66 = (v137 & 1) == 0;
  KeyPath = swift_getKeyPath();
  v68 = v127;
  sub_1D2CCAD60((uint64_t)v28, v127, &qword_1EFCA64F8);
  v69 = v68 + *(int *)(v126 + 36);
  *(_QWORD *)v69 = KeyPath;
  *(_QWORD *)(v69 + 8) = v66;
  *(_BYTE *)(v69 + 16) = v65;
  sub_1D2CCADA4((uint64_t)v28, &qword_1EFCA64F8);
  v70 = v124;
  sub_1D2CCAD60(v68, v124, &qword_1EFCA6500);
  *(_BYTE *)(v70 + *(int *)(v125 + 36)) = 0;
  sub_1D2CCADA4(v68, &qword_1EFCA6500);
  sub_1D2CD2018(v70, v133, &qword_1EFCA6508);
  if (!sub_1D2CE1F7C())
  {
    v74 = v119;
    sub_1D2CE4718(a1, v119);
    goto LABEL_11;
  }
  v71 = v131;
  v134 = v131;
  v135 = v64;
  v72 = v132;
  v136 = v132;
  MEMORY[0x1D82474B0](&v137, v63);
  v73 = v137;
  v74 = v119;
  sub_1D2CE4718(a1, v119);
  if ((v73 & 1) != 0)
  {
LABEL_11:
    sub_1D2CE62C4(v74);
    v97 = 1;
    v81 = (uint64_t)v122;
    v80 = v123;
    v83 = v120;
    v82 = (uint64_t)v121;
    goto LABEL_12;
  }
  v75 = a1;
  v76 = v74 + *(int *)(v116 + 44);
  v77 = *(_BYTE *)v76;
  v78 = *(_QWORD *)(v76 + 8);
  LOBYTE(v134) = v77;
  v135 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
  sub_1D2D9D8C0();
  v79 = v137;
  sub_1D2CE62C4(v74);
  v81 = (uint64_t)v122;
  v80 = v123;
  v83 = v120;
  v82 = (uint64_t)v121;
  if ((v79 & 1) != 0)
  {
    v102 = v75;
    v132 = v72;
    v84 = v105;
    sub_1D2CE4718(v75, v105);
    v85 = (*(unsigned __int8 *)(v103 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    v86 = swift_allocObject();
    *(_QWORD *)(v86 + 16) = v71;
    *(_QWORD *)(v86 + 24) = v130;
    *(_BYTE *)(v86 + 32) = v132;
    v87 = sub_1D2CE4764(v84, v86 + v85);
    MEMORY[0x1E0C80A78](v87);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6528);
    sub_1D2CE657C();
    sub_1D2D9D8FC();
    v88 = v111;
    sub_1D2D9CDB0();
    sub_1D2CC6C74(&qword_1EFCA6538, &qword_1EFCA64C8, MEMORY[0x1E0CDFA58]);
    sub_1D2CDD6DC();
    v89 = v107;
    v90 = v110;
    v91 = v114;
    v92 = v115;
    sub_1D2D9D614();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v88, v91);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v92, v90);
    v93 = sub_1D2D9D7E8();
    v94 = v109;
    v95 = (uint64_t)v106;
    v96 = v112;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v89, v112);
    *(_QWORD *)(v95 + *(int *)(v83 + 36)) = v93;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v96);
    sub_1D2CD2018(v95, v82, &qword_1EFCA64D8);
    v97 = 0;
  }
  else
  {
    v97 = 1;
  }
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v82, v97, 1, v83);
  v98 = v133;
  v99 = (uint64_t)v128;
  sub_1D2CCAD60(v133, (uint64_t)v128, &qword_1EFCA6508);
  sub_1D2CCAD60(v82, v81, &qword_1EFCA64E0);
  sub_1D2CCAD60(v99, v80, &qword_1EFCA6508);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6518);
  sub_1D2CCAD60(v81, v80 + *(int *)(v100 + 48), &qword_1EFCA64E0);
  sub_1D2CCADA4(v82, &qword_1EFCA64E0);
  sub_1D2CCADA4(v98, &qword_1EFCA6508);
  sub_1D2CCADA4(v81, &qword_1EFCA64E0);
  return sub_1D2CCADA4(v99, &qword_1EFCA6508);
}

uint64_t sub_1D2CE4260(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v13 = a1;
  v14 = a2;
  v15 = a3;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v12);
  sub_1D2D9D968();
  swift_release();
  swift_release();
  result = type metadata accessor for ExpandingText();
  v11 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + *(int *)(result + 28));
  if (*v11)
    return (*v11)(result, v6, v7, v8, v9, v10);
  return result;
}

uint64_t sub_1D2CE4324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D2D9D0A4();
  v2 = sub_1D2D9D5C0();
  v4 = v3;
  v6 = v5 & 1;
  sub_1D2D9D458();
  v7 = sub_1D2D9D5B4();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_1D2CCCAB4(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_1D2D9D434();
  result = sub_1D2D9CAF8();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_BYTE *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  *(_BYTE *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1D2CE4428()
{
  return sub_1D2D9CE94();
}

uint64_t sub_1D2CE4448(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9CD68();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1D2D9CEA0();
}

uint64_t sub_1D2CE44C4()
{
  return sub_1D2D9CC54();
}

uint64_t sub_1D2CE44E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  type metadata accessor for ExpandingText();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64B8);
  sub_1D2D9D8C0();
  if (v5 == 3)
    sub_1D2CE1F7C();
  swift_retain();
  sub_1D2D9D8C0();
  sub_1D2D9D8CC();
  result = swift_release();
  if (*(_QWORD *)(a3 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    sub_1D2D9D968();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2CE462C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF54();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CE4654()
{
  swift_retain();
  return sub_1D2D9CF60();
}

uint64_t sub_1D2CE467C()
{
  return sub_1D2D9CE94();
}

uint64_t sub_1D2CE46A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2CE46D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE4718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE4764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE47A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandingText() - 8) + 80);
  return sub_1D2CE3680(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[14];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2CE49A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandingText() - 8) + 80);
  return sub_1D2CE37A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1D2CE49E4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CE4A10()
{
  return sub_1D2CE83C4();
}

uint64_t sub_1D2CE4A1C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[14];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2CE4BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandingText() - 8) + 80);
  return sub_1D2CE44E4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_1D2CE4C18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6390;
  if (!qword_1EFCA6390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6378);
    v2[0] = sub_1D2CE4C9C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6390);
  }
  return result;
}

unint64_t sub_1D2CE4C9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6398;
  if (!qword_1EFCA6398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6360);
    v2[0] = sub_1D2CCE538(&qword_1EFCA63A0, &qword_1EFCA5A70, (uint64_t (*)(void))sub_1D2CE4D40, MEMORY[0x1E0CDA228]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6398);
  }
  return result;
}

unint64_t sub_1D2CE4D40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA63A8;
  if (!qword_1EFCA63A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A68);
    v2[0] = sub_1D2CE4DC4();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA63C8, &qword_1EFCA6388, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA63A8);
  }
  return result;
}

unint64_t sub_1D2CE4DC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA63B0;
  if (!qword_1EFCA63B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6370);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA63B8, &qword_1EFCA6368, MEMORY[0x1E0CDFCF8]);
    v2[1] = sub_1D2CE4E48();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA63B0);
  }
  return result;
}

unint64_t sub_1D2CE4E48()
{
  unint64_t result;

  result = qword_1EFCA63C0;
  if (!qword_1EFCA63C0)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDBB98], MEMORY[0x1E0CDBBA8]);
    atomic_store(result, (unint64_t *)&qword_1EFCA63C0);
  }
  return result;
}

uint64_t sub_1D2CE4E8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ExpandingText(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    v10 = a3[6];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = sub_1D2D9C7EC();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v16 = a3[7];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = a1 + v20;
    v23 = (uint64_t)a2 + v20;
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    v24 = (_QWORD *)(a1 + v21);
    v25 = (uint64_t *)((char *)a2 + v21);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[10];
    v28 = a3[11];
    v29 = (_QWORD *)(a1 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a1 + v28;
    v33 = (uint64_t)a2 + v28;
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    v34 = a3[12];
    v35 = a1 + v34;
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = *v36;
    v38 = *((_BYTE *)v36 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(_QWORD *)v35 = v37;
    *(_BYTE *)(v35 + 8) = v38;
    v39 = a3[13];
    v40 = (_QWORD *)(a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_1D2D9CD68();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v43 = a3[14];
    v44 = a1 + v43;
    v45 = (uint64_t)a2 + v43;
    v46 = sub_1D2D9D584();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  }
  return a1;
}

uint64_t destroy for ExpandingText(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = a1 + a2[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = a1 + a2[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + a2[14];
  v10 = sub_1D2D9D584();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  if (*v16)
  {
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  v22 = (_QWORD *)(a1 + v19);
  v23 = (_QWORD *)(a2 + v19);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[10];
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v25);
  v28 = (_QWORD *)(a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a1 + v26;
  v31 = a2 + v26;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  v36 = *((_BYTE *)v34 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v36;
  v37 = a3[13];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = sub_1D2D9CD68();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  else
  {
    *v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v41 = a3[14];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

uint64_t assignWithCopy for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    else
    {
      sub_1D2CCADA4(a1 + 16, &qword_1EFCA5D20);
      v9 = *(_BYTE *)(a2 + 32);
      *v6 = *v7;
      *(_BYTE *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    v10 = *v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *v6 = v10;
  }
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1D2D9C7EC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_13:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_14:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  v24 = *(_QWORD *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *(_QWORD *)(v22 + 8);
      *v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *(_QWORD *)(v22 + 8);
    *v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_21:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_retain();
  swift_release();
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_retain();
  swift_release();
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  swift_retain();
  swift_release();
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  v43 = *((_BYTE *)v41 + 8);
  j__swift_retain();
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v43;
  j__swift_release();
  if (a1 != a2)
  {
    v44 = a3[13];
    v45 = (_QWORD *)(a1 + v44);
    v46 = (_QWORD *)(a2 + v44);
    sub_1D2CCADA4(a1 + v44, &qword_1EFCA6358);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v47 = sub_1D2D9CD68();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  return a1;
}

uint64_t initializeWithTake for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  v20 = a3[12];
  v21 = a3[13];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v24 = (void *)(a1 + v21);
  v25 = (const void *)(a2 + v21);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_1D2D9CD68();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = a3[14];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

uint64_t assignWithTake for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_release();
      *(_QWORD *)(a1 + 24) = v7;
      swift_release();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      goto LABEL_6;
    }
    sub_1D2CCADA4(a1 + 16, &qword_1EFCA5D20);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17);
  v21 = *(_QWORD *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *(_QWORD *)(v19 + 8);
      *v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *(_QWORD *)(v19 + 8);
    *v18 = v21;
    v18[1] = v23;
    goto LABEL_19;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_19:
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_release();
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  v30 = a3[10];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_release();
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)v37;
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  swift_release();
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = (uint64_t *)(a2 + v38);
  v41 = *v40;
  LOBYTE(v40) = *((_BYTE *)v40 + 8);
  *(_QWORD *)v39 = v41;
  *(_BYTE *)(v39 + 8) = (_BYTE)v40;
  j__swift_release();
  if (a1 != a2)
  {
    v42 = a3[13];
    v43 = (void *)(a1 + v42);
    v44 = (const void *)(a2 + v42);
    sub_1D2CCADA4(a1 + v42, &qword_1EFCA6358);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v46 = sub_1D2D9CD68();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
  }
  v47 = a3[14];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpandingText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CE5E3C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA63D0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v10 = sub_1D2D9D584();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[14];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ExpandingText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CE5F14(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA63D0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v10 = sub_1D2D9D584();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[14];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D2CE5FDC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2CE60DC(319, (unint64_t *)&qword_1ED5878C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1D2CE60DC(319, qword_1EFCA6440, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9AA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    if (v1 <= 0x3F)
    {
      sub_1D2D9D584();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1D2CE60DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1D2CE6134()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6378);
  sub_1D2CE4C18();
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LayoutOptions()
{
  return &type metadata for LayoutOptions;
}

unint64_t sub_1D2CE61A8()
{
  unint64_t result;

  result = qword_1EFCA6498;
  if (!qword_1EFCA6498)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0FB0, &type metadata for LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA6498);
  }
  return result;
}

unint64_t sub_1D2CE61F0()
{
  unint64_t result;

  result = qword_1EFCA64A0;
  if (!qword_1EFCA64A0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0F80, &type metadata for LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA64A0);
  }
  return result;
}

unint64_t sub_1D2CE6238()
{
  unint64_t result;

  result = qword_1EFCA64A8;
  if (!qword_1EFCA64A8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA0FD8, &type metadata for LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA64A8);
  }
  return result;
}

unint64_t sub_1D2CE6280()
{
  unint64_t result;

  result = qword_1EFCA64B0;
  if (!qword_1EFCA64B0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA1010, &type metadata for LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA64B0);
  }
  return result;
}

uint64_t sub_1D2CE62C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CE6300(uint64_t a1)
{
  sub_1D2CCCB0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D2CE633C(uint64_t a1)
{
  sub_1D2CCCAB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D2CE6380()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 33) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[14];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2CE6540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandingText() - 8) + 80);
  return sub_1D2CE4260(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), v0 + ((v1 + 33) & ~v1));
}

uint64_t sub_1D2CE6574@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CE4324(a1);
}

unint64_t sub_1D2CE657C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6530;
  if (!qword_1EFCA6530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6528);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6530);
  }
  return result;
}

unint64_t sub_1D2CE65E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6570;
  if (!qword_1EFCA6570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6578);
    v2[0] = sub_1D2CE657C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6570);
  }
  return result;
}

uint64_t sub_1D2CE6670()
{
  return 1;
}

uint64_t sub_1D2CE6678()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2CE66C8()
{
  return sub_1D2D9DD70();
}

uint64_t sub_1D2CE66E0()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2CE672C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D2D9E3F4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D2CE677C(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C6261736964;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D2CE67A8()
{
  return 0x64656C6261736964;
}

const char *TranslateFeatures.domain.getter()
{
  return "Translate";
}

uint64_t TranslateFeatures.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1D2CE67FC + 4 * byte_1D2DA11A0[*v0]))("EnableVisualIntelligenceUI", 26);
}

const char *sub_1D2CE67FC()
{
  return "asset_services";
}

const char *sub_1D2CE6810()
{
  return "asset_services_adaptive_refresh";
}

const char *sub_1D2CE6824()
{
  return "refresh_system_translation";
}

const char *sub_1D2CE6838()
{
  return "lowConfidenceLID";
}

uint64_t TranslateFeatures.isEnabled.getter()
{
  char *v0;
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *v0;
  v5 = &type metadata for TranslateFeatures;
  v6 = sub_1D2CE68A0();
  v4[0] = v1;
  v2 = sub_1D2D9C834();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_1D2CE68A0()
{
  unint64_t result;

  result = qword_1ED5872F0;
  if (!qword_1ED5872F0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslateFeatures, &type metadata for TranslateFeatures);
    atomic_store(result, (unint64_t *)&qword_1ED5872F0);
  }
  return result;
}

BOOL static TranslateFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranslateFeatures.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t TranslateFeatures.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

BOOL sub_1D2CE6964(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1D2CE697C()
{
  unint64_t result;

  result = qword_1EFCA6598;
  if (!qword_1EFCA6598)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslateFeatures, &type metadata for TranslateFeatures);
    atomic_store(result, (unint64_t *)&qword_1EFCA6598);
  }
  return result;
}

const char *sub_1D2CE69C0()
{
  return "Translate";
}

uint64_t sub_1D2CE69D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1D2CE69FC + 4 * byte_1D2DA11A5[*v0]))("EnableVisualIntelligenceUI", 26);
}

const char *sub_1D2CE69FC()
{
  return "asset_services";
}

const char *sub_1D2CE6A10()
{
  return "asset_services_adaptive_refresh";
}

const char *sub_1D2CE6A24()
{
  return "refresh_system_translation";
}

const char *sub_1D2CE6A38()
{
  return "lowConfidenceLID";
}

uint64_t getEnumTagSinglePayload for TranslateFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslateFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D2CE6B28 + 4 * byte_1D2DA11AF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D2CE6B5C + 4 * byte_1D2DA11AA[v4]))();
}

uint64_t sub_1D2CE6B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CE6B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CE6B6CLL);
  return result;
}

uint64_t sub_1D2CE6B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CE6B80);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D2CE6B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CE6B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranslateFeatures()
{
  return &type metadata for TranslateFeatures;
}

uint64_t getEnumTagSinglePayload for TranslateFeaturesError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for TranslateFeaturesError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D2CE6C3C + 4 * byte_1D2DA11B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D2CE6C5C + 4 * byte_1D2DA11B9[v4]))();
}

_BYTE *sub_1D2CE6C3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D2CE6C5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2CE6C64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2CE6C6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2CE6C74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2CE6C7C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D2CE6C88()
{
  return 0;
}

ValueMetadata *type metadata accessor for TranslateFeaturesError()
{
  return &type metadata for TranslateFeaturesError;
}

unint64_t sub_1D2CE6CA4()
{
  unint64_t result;

  result = qword_1EFCA65A0;
  if (!qword_1EFCA65A0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA1348, &type metadata for TranslateFeaturesError);
    atomic_store(result, (unint64_t *)&qword_1EFCA65A0);
  }
  return result;
}

uint64_t GenderDisambiguationLearnMoreView.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  return swift_storeEnumTagMultiPayload();
}

uint64_t GenderDisambiguationLearnMoreView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t ObjCClassFromMetadata;
  id v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA65A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA65B0);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA65B8);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA65C0);
  v9 = sub_1D2CE7448();
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA65D8);
  v11 = sub_1D2CC6C74(&qword_1EFCA65E0, &qword_1EFCA65D8, MEMORY[0x1E0CD8918]);
  v21 = v10;
  v22 = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1D2D9CD8C();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_1D2D9D83C();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  v17 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA65E8) + 36));
  *v17 = KeyPath;
  v17[1] = v15;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D2CE6F08()
{
  sub_1D2D9D428();
  sub_1D2D9CD98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA65B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA65C0);
  sub_1D2CE7448();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA65D8);
  sub_1D2CC6C74(&qword_1EFCA65E0, &qword_1EFCA65D8, MEMORY[0x1E0CD8918]);
  swift_getOpaqueTypeConformance2();
  return sub_1D2D9D740();
}

uint64_t sub_1D2CE6FEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;

  v2 = sub_1D2D9D230();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA65D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2D9D20C();
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
  sub_1D2D9CB7C();
  v7 = sub_1D2CC6C74(&qword_1EFCA65E0, &qword_1EFCA65D8, MEMORY[0x1E0CD8918]);
  MEMORY[0x1D8246DC0](v6, v3, v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D2CE7134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for GenderDisambiguationLearnMoreView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CE7F6C(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CE804C((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return sub_1D2D9D8FC();
}

uint64_t sub_1D2CE7208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D2D9CC48();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D7C2F0((uint64_t)v3);
  sub_1D2D9CC3C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D2CE7288@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1D2D9D0A4();
  result = sub_1D2D9D5C0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D2CE7304()
{
  return sub_1D2D9D35C();
}

uint64_t sub_1D2CE733C()
{
  sub_1D2CE7B90();
  return sub_1D2D9D398();
}

uint64_t sub_1D2CE738C()
{
  sub_1D2CE7B90();
  return sub_1D2D9D368();
}

void sub_1D2CE73DC()
{
  sub_1D2CE7B90();
  sub_1D2D9D38C();
  __break(1u);
}

uint64_t sub_1D2CE7400()
{
  return sub_1D2D9CF78();
}

uint64_t sub_1D2CE7420()
{
  return sub_1D2D9CF78();
}

uint64_t sub_1D2CE7440()
{
  return sub_1D2CE6F08();
}

unint64_t sub_1D2CE7448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA65C8;
  if (!qword_1EFCA65C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA65B8);
    v2[0] = sub_1D2CE74B4();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA65C8);
  }
  return result;
}

unint64_t sub_1D2CE74B4()
{
  unint64_t result;

  result = qword_1EFCA65D0;
  if (!qword_1EFCA65D0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA1568, &type metadata for GenderDisambiguationOnboardingViewController);
    atomic_store(result, (unint64_t *)&qword_1EFCA65D0);
  }
  return result;
}

uint64_t sub_1D2CE74F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CE7520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CE7548()
{
  swift_retain();
  return sub_1D2D9CFD8();
}

uint64_t sub_1D2CE7570()
{
  swift_retain();
  return sub_1D2D9CFD8();
}

uint64_t sub_1D2CE7598()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for GenderDisambiguationLearnMoreView(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_1D2D9CC48();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GenderDisambiguationLearnMoreView(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_1D2D9CC48();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for GenderDisambiguationLearnMoreView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1D2D9CC48();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for GenderDisambiguationLearnMoreView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1D2CE781C((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1D2D9CC48();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2CE781C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for GenderDisambiguationLearnMoreView(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_1D2D9CC48();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for GenderDisambiguationLearnMoreView(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1D2CE781C((uint64_t)a1);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_1D2D9CC48();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GenderDisambiguationLearnMoreView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CE79A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA5790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GenderDisambiguationLearnMoreView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CE79F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA5790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GenderDisambiguationLearnMoreView()
{
  uint64_t result;

  result = qword_1ED5869E0;
  if (!qword_1ED5869E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2CE7A74()
{
  unint64_t v0;

  sub_1D2CCB548();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1D2CE7AE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6618;
  if (!qword_1EFCA6618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EFCA65E8);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA6620, &qword_1EFCA65A8, MEMORY[0x1E0CD9C70]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6618);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenderDisambiguationOnboardingViewController()
{
  return &type metadata for GenderDisambiguationOnboardingViewController;
}

unint64_t sub_1D2CE7B90()
{
  unint64_t result;

  result = qword_1EFCA6628;
  if (!qword_1EFCA6628)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA14F0, &type metadata for GenderDisambiguationOnboardingViewController);
    atomic_store(result, (unint64_t *)&qword_1EFCA6628);
  }
  return result;
}

void sub_1D2CE7BD4()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2CE7F20();
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__systemImageNamed_, v3);

  if (!v4)
  {
    v8 = 0;
    goto LABEL_5;
  }
  v5 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_1D2D9DCB0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7)
  {
    v8 = objc_msgSend(v4, sel_imageWithTintColor_, v7);

LABEL_5:
    sub_1D2D9C5E8();
    v9 = objc_allocWithZone(MEMORY[0x1E0D651A8]);
    v10 = v8;
    v11 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v9, sel_initWithTitle_detailText_icon_, v11, 0, v10, 0xE000000000000000);

    sub_1D2D9C5E8();
    v13 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v13, 0xE000000000000000);

    sub_1D2D9C5E8();
    v14 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v14, 0xE000000000000000);

    sub_1D2D9C5E8();
    v15 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v15, 0xE000000000000000);

    return;
  }
  __break(1u);
}

unint64_t sub_1D2CE7F20()
{
  unint64_t result;

  result = qword_1EFCA6630;
  if (!qword_1EFCA6630)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA6630);
  }
  return result;
}

uint64_t sub_1D2CE7F5C()
{
  uint64_t v0;

  return sub_1D2CE6FEC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CE7F64()
{
  uint64_t v0;

  return sub_1D2CE7134(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CE7F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenderDisambiguationLearnMoreView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE7FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GenderDisambiguationLearnMoreView() - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1D2D9CC48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + ((v1 + 16) & ~v1), v2);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D2CE804C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenderDisambiguationLearnMoreView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE8090()
{
  type metadata accessor for GenderDisambiguationLearnMoreView();
  return sub_1D2CE7208();
}

uint64_t View.bindGeometry(to:reader:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  _QWORD v20[4];

  v19[1] = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  v13 = sub_1D2D9CD80();
  v19[0] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v19 - v14;
  v20[2] = a3;
  v20[3] = a4;
  swift_retain();
  sub_1D2D9DA70();
  sub_1D2CE8280();
  sub_1D2D9D5FC();
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(double *)(v16 + 32) = a7;
  v17 = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  v20[0] = a5;
  v20[1] = v17;
  swift_retain();
  swift_retain();
  MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v13, v20);
  sub_1D2CE8490();
  sub_1D2CE84D4();
  sub_1D2D9D698();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19[0] + 8))(v15, v13);
}

unint64_t sub_1D2CE8280()
{
  unint64_t result;

  result = qword_1EFCA6640;
  if (!qword_1EFCA6640)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA162C, &type metadata for GeometryBinding);
    atomic_store(result, (unint64_t *)&qword_1EFCA6640);
  }
  return result;
}

void sub_1D2CE82C4()
{
  qword_1EFCA6638 = 0;
}

double sub_1D2CE82D0@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_1EFCA5490 != -1)
    swift_once();
  result = *(double *)&qword_1EFCA6638;
  *a1 = qword_1EFCA6638;
  return result;
}

_QWORD *sub_1D2CE8320(double *a1, _QWORD *(*a2)(double *__return_ptr))
{
  double v3;
  _QWORD *result;
  double v5;
  double v6;

  v3 = *a1;
  result = a2(&v6);
  v5 = v6;
  if (v3 > v6)
    v5 = v3;
  *a1 = v5;
  return result;
}

uint64_t sub_1D2CE8374@<X0>(void (**a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a1 = sub_1D2CE876C;
  a1[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t sub_1D2CE83C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6658);
  return sub_1D2D9D968();
}

uint64_t sub_1D2CE8410()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CE843C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6658);
  return sub_1D2D9D968();
}

unint64_t sub_1D2CE8490()
{
  unint64_t result;

  result = qword_1EFCA6648;
  if (!qword_1EFCA6648)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA15E4, &type metadata for GeometryPreference);
    atomic_store(result, (unint64_t *)&qword_1EFCA6648);
  }
  return result;
}

unint64_t sub_1D2CE84D4()
{
  unint64_t result;

  result = qword_1EFCA6650;
  if (!qword_1EFCA6650)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEF070], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EFCA6650);
  }
  return result;
}

uint64_t sub_1D2CE8518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5660);
  v2 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5668);
  v3 = sub_1D2D9CD80();
  v7[0] = v1;
  v7[1] = sub_1D2CC6C74(&qword_1EFCA5688, &qword_1EFCA5660, MEMORY[0x1E0CDB838]);
  v4 = MEMORY[0x1E0CD9C20];
  v6[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v2, v7);
  v6[1] = sub_1D2CC6C74(&qword_1EFCA5690, &qword_1EFCA5668, MEMORY[0x1E0CDC940]);
  return MEMORY[0x1D82488A8](v4, v3, v6);
}

ValueMetadata *type metadata accessor for GeometryPreference()
{
  return &type metadata for GeometryPreference;
}

_QWORD *initializeBufferWithCopyOfBuffer for GeometryBinding(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for GeometryBinding()
{
  return swift_release();
}

_QWORD *assignWithCopy for GeometryBinding(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for GeometryBinding(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeometryBinding(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeometryBinding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeometryBinding()
{
  return &type metadata for GeometryBinding;
}

uint64_t sub_1D2CE8738()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CE8748()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D2CE876C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double (*v5)(uint64_t);
  uint64_t v6;
  double v7;

  v5 = *(double (**)(uint64_t))(v2 + 16);
  v6 = sub_1D2D9D800();
  v7 = v5(a1);
  *(_QWORD *)a2 = v6;
  *(double *)(a2 + 8) = v7;
}

uint64_t sub_1D2CE87B8()
{
  return sub_1D2CC6C74(&qword_1EFCA6660, &qword_1EFCA6668, MEMORY[0x1E0CD9318]);
}

uint64_t GrayCapsuleButton.init(title:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t GrayCapsuleButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a1;
  v2 = sub_1D2D9CE34();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x1E0C80A78](v2);
  v50 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9D104();
  v5 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v49 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6670);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6678);
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6680);
  MEMORY[0x1E0C80A78](v45);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = v1[1];
  v21 = v1[2];
  v20 = v1[3];
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v18;
  v22[3] = v19;
  v22[4] = v21;
  v22[5] = v20;
  v54 = v18;
  v55 = v19;
  v56 = v21;
  v57 = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D9D8FC();
  v23 = sub_1D2D9D830();
  KeyPath = swift_getKeyPath();
  v26 = v43;
  v25 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v12, v10, v44);
  v27 = (uint64_t *)&v12[*(int *)(v42 + 36)];
  *v27 = KeyPath;
  v27[1] = v23;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
  sub_1D2D9D0F8();
  sub_1D2CE8CB0();
  sub_1D2CE8D4C();
  v28 = v48;
  sub_1D2D9D614();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v28);
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA6670);
  v29 = v50;
  sub_1D2D9CE28();
  v30 = swift_getKeyPath();
  v31 = (uint64_t *)&v17[*(int *)(v45 + 36)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6698);
  v34 = v51;
  v33 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v31 + *(int *)(v32 + 28), v29, v52);
  *v31 = v30;
  v36 = v46;
  v35 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v17, v15, v47);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v35);
  v37 = sub_1D2D9D7E8();
  v38 = swift_getKeyPath();
  v39 = v53;
  sub_1D2CE8E84((uint64_t)v17, v53);
  v40 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66A0) + 36));
  *v40 = v38;
  v40[1] = v37;
  return sub_1D2CCADA4((uint64_t)v17, &qword_1EFCA6680);
}

uint64_t sub_1D2CE8B94()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CE8BC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1D2CE8BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1D2CD1430();
  swift_bridgeObjectRetain();
  result = sub_1D2D9D5CC();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D2CE8C48@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CE8BE0(a1);
}

uint64_t sub_1D2CE8C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CE7C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CE8C80()
{
  swift_retain();
  return sub_1D2D9CE88();
}

unint64_t sub_1D2CE8CB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6688;
  if (!qword_1EFCA6688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6670);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6688);
  }
  return result;
}

unint64_t sub_1D2CE8D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA6690;
  if (!qword_1EFCA6690)
  {
    v1 = sub_1D2D9D104();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB2A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA6690);
  }
  return result;
}

uint64_t sub_1D2CE8D94()
{
  return sub_1D2D9CF00();
}

uint64_t sub_1D2CE8DB4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9CE34();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1D2D9CF0C();
}

uint64_t sub_1D2CE8E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CE7C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CE8E5C()
{
  swift_retain();
  return sub_1D2D9CE88();
}

uint64_t sub_1D2CE8E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE8ECC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for GrayCapsuleButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for GrayCapsuleButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for GrayCapsuleButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GrayCapsuleButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for GrayCapsuleButton()
{
  return &type metadata for GrayCapsuleButton;
}

unint64_t sub_1D2CE9010()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA66A8;
  if (!qword_1EFCA66A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA66A0);
    v2[0] = sub_1D2CE9094();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA66A8);
  }
  return result;
}

unint64_t sub_1D2CE9094()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1EFCA66B0;
  if (!qword_1EFCA66B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6680);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6670);
    v2[3] = sub_1D2D9D104();
    v2[4] = sub_1D2CE8CB0();
    v2[5] = sub_1D2CE8D4C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA66B8, &qword_1EFCA6698, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA66B0);
  }
  return result;
}

uint64_t static HostedDownloadViewBridge.viewController.getter()
{
  return sub_1D2CE9208(0);
}

id sub_1D2CE9178(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;
  char v9;

  v4 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1E0C80A78](v4);
  v9 = a3;
  LanguageDownloadView.init(context:)(&v9, (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0)));
  v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66C0));
  return (id)sub_1D2D9D158();
}

uint64_t static HostedDownloadViewBridge.accessibilityViewController.getter()
{
  return sub_1D2CE9208(1);
}

uint64_t sub_1D2CE9208(char a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  char v7;

  v2 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1E0C80A78](v2);
  v7 = a1;
  LanguageDownloadView.init(context:)(&v7, (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0)));
  v4 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66C0));
  return sub_1D2D9D158();
}

id HostedDownloadViewBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id HostedDownloadViewBridge.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HostedDownloadViewBridge();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for HostedDownloadViewBridge()
{
  return objc_opt_self();
}

id HostedDownloadViewBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HostedDownloadViewBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static ImageTranslationButtonStyle.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImageTranslationButtonStyle.Style.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t ImageTranslationButtonStyle.Style.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t ImageTranslationButtonStyle.init(style:highlighted:)@<X0>(char *a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t *v6;
  uint64_t result;

  v5 = *a1;
  a3[1] = 0;
  v6 = (uint64_t *)&a3[*(int *)(type metadata accessor for ImageTranslationButtonStyle() + 24)];
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
  result = swift_storeEnumTagMultiPayload();
  *a3 = v5;
  a3[1] = a2;
  return result;
}

uint64_t type metadata accessor for ImageTranslationButtonStyle()
{
  uint64_t result;

  result = qword_1EFCA6798;
  if (!qword_1EFCA6798)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ImageTranslationButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v3 = v2;
  v50 = a2;
  v5 = sub_1D2D9D998();
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2D9D2FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6700);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6708);
  MEMORY[0x1E0C80A78](v43);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6710);
  MEMORY[0x1E0C80A78](v45);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6718);
  MEMORY[0x1E0C80A78](v46);
  v44 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a1;
  sub_1D2D9D308();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v21 = &v15[*(int *)(v13 + 36)];
  v22 = v52;
  *(_OWORD *)v21 = v51;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v53;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v3[1] == 1)
    v23 = sub_1D2D9D7F4();
  else
    v23 = sub_1D2D9D824();
  v24 = v23;
  KeyPath = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v15, (uint64_t)v17, &qword_1EFCA6700);
  v26 = (uint64_t *)&v17[*(int *)(v43 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6700);
  if ((*v3 & 1) != 0)
    v27 = sub_1D2D9D458();
  else
    v27 = sub_1D2D9D470();
  v28 = v27;
  v29 = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v17, (uint64_t)v19, &qword_1EFCA6708);
  v30 = (uint64_t *)&v19[*(int *)(v45 + 36)];
  *v30 = v29;
  v30[1] = v28;
  sub_1D2CCADA4((uint64_t)v17, &qword_1EFCA6708);
  v31 = *MEMORY[0x1E0CDB0C0];
  v32 = sub_1D2D9D0EC();
  v33 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v49, v31, v32);
  v34 = sub_1D2CE98BC(v48);
  sub_1D2CE9D7C(v33, (uint64_t)v8);
  v35 = v47;
  *(_QWORD *)&v8[*(int *)(v47 + 52)] = v34;
  *(_WORD *)&v8[*(int *)(v35 + 56)] = 256;
  sub_1D2CE9DC0(v33);
  v36 = sub_1D2D9DA70();
  v38 = v37;
  v39 = (uint64_t)v44;
  v40 = (uint64_t)&v44[*(int *)(v46 + 36)];
  sub_1D2CCAD60((uint64_t)v8, v40, &qword_1EFCA66F8);
  v41 = (uint64_t *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6720) + 36));
  *v41 = v36;
  v41[1] = v38;
  sub_1D2CCAD60((uint64_t)v19, v39, &qword_1EFCA6710);
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA66F8);
  sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA6710);
  return sub_1D2CE9DFC(v39, v50);
}

uint64_t sub_1D2CE98BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v2 = sub_1D2D9DA40();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9D29C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6808);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v28 - v14;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v28 - v18;
  if (*(_BYTE *)(v1 + 1) != 1)
  {
    v29 = v17;
    v30 = v4;
    v28[0] = v8;
    v28[1] = v2;
    type metadata accessor for ImageTranslationButtonStyle();
    sub_1D2D7C758((uint64_t)v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v15, *MEMORY[0x1E0CDC158], v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
    v20 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1D2CCAD60((uint64_t)v19, (uint64_t)v11, &qword_1EFCA6730);
    sub_1D2CCAD60((uint64_t)v15, v20, &qword_1EFCA6730);
    v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v21((uint64_t)v11, 1, v5) == 1)
    {
      sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6730);
      sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA6730);
      if (v21(v20, 1, v5) == 1)
      {
        sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA6730);
LABEL_13:
        if ((sub_1D2D9D314() & 1) == 0)
        {
          LODWORD(v32) = sub_1D2D9D284();
          return sub_1D2D9CBF4();
        }
        sub_1D2D9D80C();
        goto LABEL_15;
      }
    }
    else
    {
      v22 = v29;
      sub_1D2CCAD60((uint64_t)v11, v29, &qword_1EFCA6730);
      if (v21(v20, 1, v5) != 1)
      {
        v23 = v28[0];
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 32))(v28[0], v20, v5);
        sub_1D2CC66E4(&qword_1EFCA6810, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC170], MEMORY[0x1E0CDC190]);
        v24 = sub_1D2D9DC8C();
        v25 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v25(v23, v5);
        sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6730);
        sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA6730);
        v25(v22, v5);
        sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA6730);
        if ((v24 & 1) != 0)
          goto LABEL_13;
LABEL_9:
        if ((sub_1D2D9D314() & 1) == 0)
        {
          sub_1D2D9DA28();
          return sub_1D2D9CBF4();
        }
        sub_1D2D9D7F4();
LABEL_15:
        v26 = sub_1D2D9D818();
        swift_release();
        v32 = v26;
        return sub_1D2D9CBF4();
      }
      sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6730);
      sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA6730);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
    }
    sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA6808);
    goto LABEL_9;
  }
  v32 = sub_1D2D9D80C();
  return sub_1D2D9CBF4();
}

uint64_t sub_1D2CE9CC8()
{
  return sub_1D2D9CF18();
}

uint64_t sub_1D2CE9CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CCAD60(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EFCA6730);
  return sub_1D2D9CF24();
}

uint64_t sub_1D2CE9D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9D998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CE9DC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9D998();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CE9DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2CE9E48()
{
  unint64_t result;

  result = qword_1EFCA6728;
  if (!qword_1EFCA6728)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ImageTranslationButtonStyle.Style, &type metadata for ImageTranslationButtonStyle.Style);
    atomic_store(result, (unint64_t *)&qword_1EFCA6728);
  }
  return result;
}

uint64_t sub_1D2CE9E8C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for ImageTranslationButtonStyle(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    a1[1] = *((_BYTE *)a2 + 1);
    v5 = *(int *)(a3 + 24);
    v6 = &a1[v5];
    v7 = (uint64_t *)((char *)a2 + v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_1D2D9D29C();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      *v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ImageTranslationButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v3 = sub_1D2D9D29C();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *initializeWithCopy for ImageTranslationButtonStyle(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1D2D9D29C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v5, v6, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithCopy for ImageTranslationButtonStyle(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 24);
    v5 = &a1[v4];
    v6 = &a2[v4];
    sub_1D2CCADA4((uint64_t)&a1[v4], &qword_1EFCA66F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1D2D9D29C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v5, v6, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
      }
    }
    else
    {
      *v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for ImageTranslationButtonStyle(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9D29C();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for ImageTranslationButtonStyle(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 24);
    v5 = &a1[v4];
    v6 = &a2[v4];
    sub_1D2CCADA4((uint64_t)&a1[v4], &qword_1EFCA66F0);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA66F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_1D2D9D29C();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6730);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v5, v6, v8);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageTranslationButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CEA500(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6738);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ImageTranslationButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D2CEA584(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6738);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1D2CEA5F8()
{
  unint64_t v0;

  sub_1D2CEA66C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D2CEA66C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA67A8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6730);
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, qword_1EFCA67A8);
  }
}

uint64_t storeEnumTagSinglePayload for ImageTranslationButtonStyle.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2CEA710 + 4 * byte_1D2DA17C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2CEA744 + 4 * byte_1D2DA17C0[v4]))();
}

uint64_t sub_1D2CEA744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CEA74C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CEA754);
  return result;
}

uint64_t sub_1D2CEA760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CEA768);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2CEA76C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CEA774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageTranslationButtonStyle.Style()
{
  return &type metadata for ImageTranslationButtonStyle.Style;
}

unint64_t sub_1D2CEA794()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA67E0;
  if (!qword_1EFCA67E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6718);
    v2[0] = sub_1D2CEA818();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6800, &qword_1EFCA6720, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA67E0);
  }
  return result;
}

unint64_t sub_1D2CEA818()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA67E8;
  if (!qword_1EFCA67E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6710);
    v2[0] = sub_1D2CEA89C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA67E8);
  }
  return result;
}

unint64_t sub_1D2CEA89C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA67F0;
  if (!qword_1EFCA67F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6708);
    v2[0] = sub_1D2CEA920();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA67F0);
  }
  return result;
}

unint64_t sub_1D2CEA920()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA67F8;
  if (!qword_1EFCA67F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6700);
    v2[0] = sub_1D2CC66E4((unint64_t *)&qword_1EFCA5B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC528], MEMORY[0x1E0CDC520]);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA67F8);
  }
  return result;
}

uint64_t LanguageDownloadView.init(context:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  int *v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v4 = sub_1D2D9DA10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  v11 = *a1;
  v12 = (int *)type metadata accessor for LanguageDownloadView(0);
  v13 = (uint64_t *)((char *)a2 + v12[5]);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  swift_storeEnumTagMultiPayload();
  v14 = (char *)a2 + v12[6];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v15 = *((_QWORD *)&v33 + 1);
  *v14 = v33;
  *((_QWORD *)v14 + 1) = v15;
  v16 = (char *)a2 + v12[7];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v17 = *((_QWORD *)&v33 + 1);
  *v16 = v33;
  *((_QWORD *)v16 + 1) = v17;
  v18 = (char *)a2 + v12[8];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v19 = *((_QWORD *)&v33 + 1);
  *v18 = v33;
  *((_QWORD *)v18 + 1) = v19;
  v20 = v12[9];
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6820);
  sub_1D2D9D8B4();
  *(_OWORD *)((char *)a2 + v20) = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, *MEMORY[0x1E0CE0088], v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1D2D9D8B4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v21 = (uint64_t *)((char *)a2 + v12[11]);
  v22 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  sub_1D2D9D8B4();
  v23 = *((_QWORD *)&v33 + 1);
  *v21 = v33;
  v21[1] = v23;
  v24 = (uint64_t *)((char *)a2 + v12[12]);
  v32 = v22;
  sub_1D2D9D8B4();
  v25 = *((_QWORD *)&v33 + 1);
  *v24 = v33;
  v24[1] = v25;
  v26 = v12[13];
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(uint64_t *)((char *)a2 + v26) = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v28 = v12[14];
  LOBYTE(v33) = 0;
  type metadata accessor for LanguagesService();
  swift_allocObject();
  LanguagesService.init(task:)((unsigned __int8 *)&v33);
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  result = sub_1D2D9CD2C();
  *a2 = result;
  a2[1] = v30;
  *((_BYTE *)a2 + v28) = v11;
  return result;
}

uint64_t type metadata accessor for LanguageDownloadView(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA6918);
}

uint64_t sub_1D2CEACAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  char **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LanguageListItem(0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v9 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v7);
  v11 = v10;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v11)
  {
    v33[2] = v9;
    v33[3] = v11;
    sub_1D2CD1430();
    swift_bridgeObjectRetain();
    v13 = sub_1D2D9D5CC();
    v15 = v14;
    v33[0] = v16;
    v18 = v17 & 1;
    v19 = a1 + *(int *)(v8 + 24);
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    sub_1D2CF2AB8(*(_QWORD *)v19, v21);
    v22 = sub_1D2D7C784(v20, v21);
    sub_1D2CF2B30(v20, v21);
    v23 = (void *)objc_opt_self();
    v24 = &selRef_labelColor;
    if ((v22 & 1) == 0)
      v24 = &selRef_secondaryLabelColor;
    MEMORY[0x1D8247330](objc_msgSend(v23, *v24));
    v25 = sub_1D2D9D590();
    v27 = v26;
    v29 = v28;
    v31 = v30;
    swift_release();
    v32 = v29 & 1;
    sub_1D2CCCAB4(v13, v15, v18);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v27 = 0;
    v32 = 0;
    v31 = 0;
  }
  *a2 = v25;
  a2[1] = v27;
  a2[2] = v32;
  a2[3] = v31;
  return result;
}

__n128 sub_1D2CEAE8C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;
  __int128 v5;
  _OWORD v6[2];

  v3 = sub_1D2D9D11C();
  sub_1D2CEACAC(v1, (uint64_t *)v6);
  result = (__n128)v6[0];
  v5 = v6[1];
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1D2CEAEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_1D2D9D038();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6AF0);
  return sub_1D2CEAF34(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1D2CEAF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  unsigned __int8 v31;
  char v32;

  v26 = a2;
  v3 = type metadata accessor for LanguageListItem(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_BYTE *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 88);
  v27 = *(_QWORD *)(a1 + 80);
  v15 = &v5[*(int *)(v14 + 24)];
  *(_QWORD *)v15 = swift_getKeyPath();
  v15[8] = 0;
  *(_QWORD *)v5 = v9;
  *((_QWORD *)v5 + 1) = v10;
  *((_QWORD *)v5 + 2) = v11;
  v5[24] = v12;
  *((_QWORD *)v5 + 4) = v27;
  *((_QWORD *)v5 + 5) = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D2D9C708();
  sub_1D2CD1FD4((uint64_t)v5, (uint64_t)v8, type metadata accessor for LanguageListItem);
  if ((v12 & 1) != 0)
  {
    type metadata accessor for LanguageDownloadButton(0);
    v16 = sub_1D2D9DA04();
    v17 = v26;
    if ((v16 & 1) != 0)
    {
      v18 = 0;
      v19 = -256;
    }
    else
    {
      v28 = 0;
      v29 = 257;
      sub_1D2CF31A0();
      sub_1D2D9D1E8();
      v18 = v30;
      if (v32)
        v21 = 256;
      else
        v21 = 0;
      v19 = v21 | v31;
    }
  }
  else
  {
    v28 = v11;
    v29 = 0;
    sub_1D2CF31A0();
    sub_1D2D9D1E8();
    v18 = v30;
    if (v32)
      v20 = 256;
    else
      v20 = 0;
    v19 = v20 | v31;
    v17 = v26;
  }
  sub_1D2CDB6B4((uint64_t)v8, (uint64_t)v5, type metadata accessor for LanguageListItem);
  sub_1D2CDB6B4((uint64_t)v5, v17, type metadata accessor for LanguageListItem);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B00);
  v23 = v17 + *(int *)(v22 + 48);
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = v17 + *(int *)(v22 + 64);
  *(_QWORD *)v24 = v18;
  *(_WORD *)(v24 + 8) = v19;
  sub_1D2CD3734((uint64_t)v8, type metadata accessor for LanguageListItem);
  return sub_1D2CD3734((uint64_t)v5, type metadata accessor for LanguageListItem);
}

uint64_t sub_1D2CEB194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6AD0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2CDB6B4(v3, (uint64_t)&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for LanguageDownloadButton);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11, type metadata accessor for LanguageDownloadButton);
  v15 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6AD8);
  sub_1D2CC6C74(&qword_1EFCA6AE0, &qword_1EFCA6AD8, MEMORY[0x1E0CDFB10]);
  sub_1D2D9D8FC();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a2, v10, v7);
  *(_BYTE *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6AE8) + 36)) = 0;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1D2CEB320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL static LanguageDownloadView.ContextView.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LanguageDownloadView.ContextView.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t LanguageDownloadView.ContextView.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t LanguageDownloadView.init(languagesService:context:)@<X0>(char *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  int *v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v4 = sub_1D2D9DA10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  v11 = *a1;
  v12 = (int *)type metadata accessor for LanguageDownloadView(0);
  v13 = (uint64_t *)((char *)a2 + v12[5]);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  swift_storeEnumTagMultiPayload();
  v14 = (char *)a2 + v12[6];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v15 = *((_QWORD *)&v33 + 1);
  *v14 = v33;
  *((_QWORD *)v14 + 1) = v15;
  v16 = (char *)a2 + v12[7];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v17 = *((_QWORD *)&v33 + 1);
  *v16 = v33;
  *((_QWORD *)v16 + 1) = v17;
  v18 = (char *)a2 + v12[8];
  LOBYTE(v32) = 0;
  sub_1D2D9D8B4();
  v19 = *((_QWORD *)&v33 + 1);
  *v18 = v33;
  *((_QWORD *)v18 + 1) = v19;
  v20 = v12[9];
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6820);
  sub_1D2D9D8B4();
  *(_OWORD *)((char *)a2 + v20) = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, *MEMORY[0x1E0CE0088], v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1D2D9D8B4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v21 = (uint64_t *)((char *)a2 + v12[11]);
  v22 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  sub_1D2D9D8B4();
  v23 = *((_QWORD *)&v33 + 1);
  *v21 = v33;
  v21[1] = v23;
  v24 = (uint64_t *)((char *)a2 + v12[12]);
  v32 = v22;
  sub_1D2D9D8B4();
  v25 = *((_QWORD *)&v33 + 1);
  *v24 = v33;
  v24[1] = v25;
  v26 = v12[13];
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(uint64_t *)((char *)a2 + v26) = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v28 = v12[14];
  type metadata accessor for LanguagesService();
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  result = sub_1D2D9CD2C();
  *a2 = result;
  a2[1] = v30;
  *((_BYTE *)a2 + v28) = v11;
  return result;
}

uint64_t sub_1D2CEB6B4()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v0 = *(_QWORD *)(v6 + 16);
  if (v0)
  {
    v1 = (_BYTE *)(v6 + 56);
    while (*v1 != 1 || *((_QWORD *)v1 - 1) != 0)
    {
      v1 += 48;
      if (!--v0)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1D2D9C5E8();

    sub_1D2CD1430();
    return sub_1D2D9D5CC();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D2CEB81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v0 = Array<A>.downloadable.getter(v5);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  if (!v1)
    return 0;
  sub_1D2D9D0A4();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1D2D9D5C0();
}

uint64_t sub_1D2CEB970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  unsigned int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = sub_1D2D9D098();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v33 = (id)objc_opt_self();
  v34 = ObjCClassFromMetadata;
  v6 = objc_msgSend(v33, sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = sub_1D2D9C5E8();
  v9 = v8;

  v38 = v7;
  v39 = v9;
  sub_1D2CD1430();
  v10 = sub_1D2D9D5CC();
  v12 = v11;
  v14 = v13 & 1;
  sub_1D2D9D7E8();
  v35 = sub_1D2D9D590();
  v36 = v15;
  v17 = v16;
  v37 = v18;
  swift_release();
  sub_1D2CCCAB4(v10, v12, v14);
  swift_bridgeObjectRelease();
  LODWORD(ObjCClassFromMetadata) = *(unsigned __int8 *)(v0 + *(int *)(v2 + 56));
  sub_1D2CDB6B4(v0, (uint64_t)v4, type metadata accessor for LanguageDownloadView);
  if ((_DWORD)ObjCClassFromMetadata)
  {
    v19 = v4[*(int *)(v2 + 56)];
    sub_1D2CD3734((uint64_t)v4, type metadata accessor for LanguageDownloadView);
    if (v19 != 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1D2D9C9B4();
      swift_release();
      swift_release();
      swift_release();
      if ((v38 & 1) == 0)
      {
        _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
        v21 = v20;
        v22 = (void *)sub_1D2D9DCB0();
        v23 = objc_msgSend(v21, sel_BOOLForKey_, v22);

        v24 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
        if (v24)
        {
          v25 = v24;
          v26 = objc_msgSend(v24, sel_isOnDeviceOnlyTranslationForced);

          if (((v26 | v23) & 1) != 0)
            goto LABEL_6;
        }
        else
        {

          if (v23)
            goto LABEL_6;
        }
        sub_1D2D9D08C();
        sub_1D2D9D080();
        v30 = v35;
        v29 = v36;
        sub_1D2D9D068();
        sub_1D2D9D080();
        sub_1D2D9D0B0();
        v31 = objc_msgSend(v33, sel_bundleForClass_, v34);
        v28 = sub_1D2D9D5C0();
        sub_1D2CCCAB4(v30, v29, v17 & 1);
        goto LABEL_11;
      }
LABEL_6:
      sub_1D2D9D0A4();
      v27 = objc_msgSend(v33, sel_bundleForClass_, v34);
      v28 = sub_1D2D9D5C0();
      sub_1D2CCCAB4(v35, v36, v17 & 1);
LABEL_11:
      swift_bridgeObjectRelease();
      return v28;
    }
  }
  else
  {
    sub_1D2CD3734((uint64_t)v4, type metadata accessor for LanguageDownloadView);
  }
  sub_1D2CCCAB4(v35, v36, v17 & 1);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2CEBE1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C648();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2CEB970();
  if (v12)
  {
    v13 = v9;
    v14 = v10;
    v15 = v11;
    v16 = v12;
    sub_1D2D9C63C();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v18 = v15 & 1;
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      MEMORY[0x1E0C80A78](v19);
      *(&v22 - 4) = v13;
      *(&v22 - 3) = v14;
      *((_BYTE *)&v22 - 16) = v18;
      *(&v22 - 1) = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D18);
      sub_1D2CF4250();
      sub_1D2D9D518();
      sub_1D2CCCAB4(v13, v14, v18);
      swift_bridgeObjectRelease();
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C08);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
    }
  }
  else
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
  return result;
}

double sub_1D2CEC024@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  double result;
  __int128 v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;

  sub_1D2CCCB0C(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D18);
  swift_dynamicCast();
  result = *(double *)&v6;
  *(_OWORD *)a4 = v6;
  *(_BYTE *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 24) = v8;
  *(_BYTE *)(a4 + 32) = v9;
  *(_BYTE *)(a4 + 33) = v10;
  return result;
}

uint64_t sub_1D2CEC0BC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular) = a1;
  v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 48));
  v8 = v7[1];
  v16 = *v7;
  v17 = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  v9 = v18;
  v10 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  v11[5] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2D06D10((uint64_t)v5, (uint64_t)&unk_1EFCA6CD8, (uint64_t)v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v13 = v7[1];
  v16 = *v7;
  v12 = v16;
  v17 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2D9D8C0();
  swift_bridgeObjectRelease();
  v16 = v12;
  v17 = v13;
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1D2D9D8CC();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CEC25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 44));
  v6 = v5[1];
  v14 = *v5;
  v15 = v6;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  v7 = v16;
  v8 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2D06D10((uint64_t)v3, (uint64_t)&unk_1EFCA6CF0, (uint64_t)v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v5[1];
  v14 = *v5;
  v10 = v14;
  v15 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2D9D8C0();
  swift_bridgeObjectRelease();
  v14 = v10;
  v15 = v11;
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1D2D9D8CC();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t LanguageDownloadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  char *v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v66 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6830);
  MEMORY[0x1E0C80A78](v3);
  v65 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1D2D9D014();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9D260();
  v51 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6838);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6840);
  v52 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6848);
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v50 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6850);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v54 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6858);
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v55 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v2;
  v68 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6860);
  sub_1D2CC6C74(&qword_1EFCA6868, &qword_1EFCA6860, MEMORY[0x1E0CE0680]);
  sub_1D2D9D524();
  sub_1D2D9D254();
  v19 = sub_1D2CC6C74(&qword_1EFCA6870, &qword_1EFCA6838, MEMORY[0x1E0CDD950]);
  v20 = MEMORY[0x1E0CDBD50];
  sub_1D2D9D77C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v67 = v2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6878);
  v69 = v9;
  v70 = v6;
  v71 = v19;
  v72 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = sub_1D2CC6C74(&qword_1EFCA6880, &qword_1EFCA6878, MEMORY[0x1E0CDB5C0]);
  v24 = v50;
  sub_1D2D9D740();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
  sub_1D2D9D0A4();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v27 = sub_1D2D9D5C0();
  v29 = v28;
  v69 = v13;
  v70 = v21;
  LOBYTE(v13) = v30 & 1;
  v71 = OpaqueTypeConformance2;
  v72 = v23;
  v31 = swift_getOpaqueTypeConformance2();
  v32 = v54;
  v33 = v56;
  sub_1D2D9D680();
  sub_1D2CCCAB4(v27, v29, v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v33);
  v35 = v60;
  v34 = v61;
  v36 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E0CDAB90], v63);
  v69 = v33;
  v70 = v31;
  swift_getOpaqueTypeConformance2();
  v37 = v55;
  v38 = v58;
  sub_1D2D9D6E0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v38);
  KeyPath = swift_getKeyPath();
  type metadata accessor for LanguageDownloadView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  v40 = (uint64_t)v65;
  sub_1D2D9D8D8();
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6890);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6898);
  v43 = v66;
  v44 = (uint64_t *)(v66 + *(int *)(v42 + 36));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68A0);
  sub_1D2CCAD60(v40, (uint64_t)v44 + *(int *)(v45 + 28), &qword_1EFCA6830);
  *v44 = KeyPath;
  v46 = v62;
  v47 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v43, v37, v64);
  sub_1D2CCADA4(v40, &qword_1EFCA6830);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v37, v47);
}

uint64_t sub_1D2CECA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  ValueMetadata *v42;
  ValueMetadata *v43;
  char v44;
  unint64_t v45;
  uint64_t KeyPath;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  ValueMetadata *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  ValueMetadata *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  void (*v108)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  ValueMetadata *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  ValueMetadata *v152;
  unint64_t v153;
  char v154;
  char v155;
  uint64_t v156;

  v135 = a1;
  v142 = a2;
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B78);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v132 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B80);
  v136 = *(_QWORD *)(v3 - 8);
  v137 = v3;
  MEMORY[0x1E0C80A78](v3);
  v147 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B88);
  v139 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v140 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v138 = (char *)&v110 - v7;
  v8 = sub_1D2D9CDBC();
  v127 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v126 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B90);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B98);
  MEMORY[0x1E0C80A78](v123);
  v120 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BA0);
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v121 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BA8);
  MEMORY[0x1E0C80A78](v122);
  v128 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BB0);
  MEMORY[0x1E0C80A78](v129);
  v144 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BB8);
  v146 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v148 = (char *)&v110 - v19;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BC0);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BC8);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v118 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BD0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v116 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BD8);
  MEMORY[0x1E0C80A78](v27);
  v145 = (uint64_t)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v110 - v30;
  v152 = &type metadata for TranslateFeatures;
  v153 = sub_1D2CE68A0();
  LOBYTE(v149) = 3;
  v32 = sub_1D2D9C834();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v149);
  if ((v32 & 1) != 0)
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v34 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v35 = sub_1D2D9C5E8();
    v114 = v21;
    v36 = v35;
    v38 = v37;

    v149 = v36;
    v150 = v38;
    sub_1D2CD1430();
    v39 = sub_1D2D9D5CC();
    v111 = v39;
    v41 = v40;
    v43 = v42;
    v112 = v42;
    v115 = v25;
    v45 = v44 & 1;
    KeyPath = swift_getKeyPath();
    v149 = v39;
    v150 = v41;
    v151 = v45;
    v152 = v43;
    v153 = KeyPath;
    v154 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CB8);
    v113 = v22;
    sub_1D2CF3A04();
    sub_1D2D9D6D4();
    v47 = v45;
    v25 = v115;
    sub_1D2CCCAB4(v111, v41, v47);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D2CF3A88();
    v48 = v118;
    sub_1D2D9D9F8();
    v49 = v113;
    v50 = (uint64_t)v116;
    v51 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v116, v48, v114);
    v52 = v50 + *(int *)(v24 + 36);
    *(_OWORD *)v52 = xmmword_1D2DA1960;
    *(_QWORD *)(v52 + 16) = 0;
    *(_QWORD *)(v52 + 24) = 0;
    *(_BYTE *)(v52 + 32) = 0;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v51);
    sub_1D2CD2018(v50, (uint64_t)v31, &qword_1EFCA6BD0);
    v53 = 0;
  }
  else
  {
    v53 = 1;
  }
  v143 = v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v31, v53, 1, v24);
  v54 = v135;
  v55 = sub_1D2CEB6B4();
  v57 = v56;
  v59 = v58;
  v61 = (uint64_t)v60;
  v149 = v55;
  v150 = v56;
  v151 = v58;
  v152 = v60;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BE0);
  sub_1D2CF33C0();
  sub_1D2D9D6D4();
  sub_1D2CF341C(v55, v57, v59, v61);
  sub_1D2CEBE1C((uint64_t)v12);
  v62 = swift_getKeyPath();
  v63 = v120;
  sub_1D2CCAD60((uint64_t)v12, v120, &qword_1EFCA6B90);
  v64 = v123;
  v65 = v63 + *(int *)(v123 + 36);
  *(_QWORD *)v65 = v62;
  *(_BYTE *)(v65 + 8) = 0;
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA6B90);
  v66 = v126;
  sub_1D2D9CDB0();
  v67 = sub_1D2CF3454();
  v68 = sub_1D2CC66E4((unint64_t *)&qword_1EFCA6108, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9F78], MEMORY[0x1E0CD9F68]);
  v69 = v121;
  sub_1D2D9D614();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v66, v8);
  sub_1D2CCADA4(v63, &qword_1EFCA6B98);
  v149 = v64;
  v150 = v8;
  v151 = v67;
  v152 = (ValueMetadata *)v68;
  swift_getOpaqueTypeConformance2();
  v70 = v125;
  sub_1D2D9D6D4();
  v71 = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v69, v70);
  MEMORY[0x1E0C80A78](v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C20);
  v127 = sub_1D2CF355C();
  v72 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C30);
  v73 = sub_1D2CF35E0();
  v149 = v72;
  v150 = v73;
  swift_getOpaqueTypeConformance2();
  sub_1D2CF36E0();
  sub_1D2D9D9E0();
  v74 = sub_1D2CEB81C();
  v76 = v75;
  v78 = v77;
  v80 = (uint64_t)v79;
  v149 = v74;
  v150 = v75;
  v151 = v77;
  v152 = v79;
  sub_1D2D9D6D4();
  v81 = sub_1D2CF341C(v74, v76, v78, v80);
  MEMORY[0x1E0C80A78](v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C70);
  sub_1D2CF37D8(&qword_1EFCA6C78, &qword_1EFCA6C70, (uint64_t (*)(void))sub_1D2CF383C, MEMORY[0x1E0CDFEE8]);
  v82 = v132;
  sub_1D2D9D9D4();
  v83 = type metadata accessor for LanguageDownloadView(0);
  v84 = (char *)(v54 + *(int *)(v83 + 32));
  v85 = *v84;
  v86 = *((_QWORD *)v84 + 1);
  v155 = v85;
  v156 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
  v87 = sub_1D2D9D8D8();
  MEMORY[0x1E0C80A78](v87);
  v88 = sub_1D2CF3964();
  v89 = v134;
  sub_1D2D9D6F8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v82, v89);
  v90 = (char *)(v54 + *(int *)(v83 + 28));
  v91 = *v90;
  v92 = *((_QWORD *)v90 + 1);
  v155 = v91;
  v156 = v92;
  v93 = sub_1D2D9D8D8();
  MEMORY[0x1E0C80A78](v93);
  v149 = v89;
  v150 = v88;
  swift_getOpaqueTypeConformance2();
  v94 = v140;
  v95 = v137;
  v96 = v147;
  sub_1D2D9D6F8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v96, v95);
  v98 = v138;
  v97 = v139;
  v99 = v141;
  (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v94, v141);
  v100 = v145;
  sub_1D2CCAD60((uint64_t)v143, v145, &qword_1EFCA6BD8);
  v101 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
  v102 = v130;
  v103 = v131;
  v101(v130, v148, v131);
  v104 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v104(v94, v98, v99);
  v105 = v142;
  sub_1D2CCAD60(v100, v142, &qword_1EFCA6BD8);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CB0);
  v101((char *)(v105 + *(int *)(v106 + 48)), v102, v103);
  v104((char *)(v105 + *(int *)(v106 + 64)), v94, v99);
  v107 = *(void (**)(char *, uint64_t))(v97 + 8);
  v107(v98, v99);
  v108 = *(void (**)(char *, uint64_t))(v146 + 8);
  v108(v148, v103);
  sub_1D2CCADA4((uint64_t)v143, &qword_1EFCA6BD8);
  v107(v94, v99);
  v108(v102, v103);
  return sub_1D2CCADA4(v145, &qword_1EFCA6BD8);
}

uint64_t sub_1D2CED7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v19 = a1;
  v24 = a2;
  v23 = type metadata accessor for LanguageDownloadView(0);
  v20 = *(_QWORD *)(v23 - 8);
  v2 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v23);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C48);
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C30);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v8 = Array<A>.installed.getter(v28);
  swift_bridgeObjectRelease();
  v28 = v8;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  type metadata accessor for LanguageListItem(0);
  sub_1D2CC6C74(&qword_1ED586B88, &qword_1ED586B80, MEMORY[0x1E0DEAF48]);
  sub_1D2CC66E4(&qword_1EFCA6C50, type metadata accessor for LanguageListItem, (uint64_t)&unk_1D2DA1BB8);
  sub_1D2D9D9BC();
  v9 = v19;
  sub_1D2CDB6B4(v19, (uint64_t)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
  v10 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v11 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for LanguageDownloadView);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D2CF4110;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = v22;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v22);
  v14 = (uint64_t (**)())&v7[*(int *)(v21 + 36)];
  *v14 = sub_1D2CF4170;
  v14[1] = (uint64_t (*)())v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
  v15 = v9 + *(int *)(v23 + 24);
  v16 = *(_BYTE *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v26 = v16;
  v27 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
  sub_1D2D9D8D8();
  v25 = v9;
  sub_1D2CF35E0();
  sub_1D2D9D6F8();
  swift_release();
  swift_release();
  return sub_1D2CCADA4((uint64_t)v7, &qword_1EFCA6C30);
}

uint64_t sub_1D2CEDB18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  result = sub_1D2D01DC0(v3, v4);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1D2CEDBA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v8 = a1[4];
  v7 = a1[5];
  v9 = a2 + *(int *)(type metadata accessor for LanguageListItem(0) + 24);
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_1D2D9C708();
}

uint64_t sub_1D2CEDC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v3 = Array<A>.installed.getter(v11);
  swift_bridgeObjectRelease();
  v9[2] = v3;
  v9[3] = a2;
  sub_1D2CEDF4C((void (*)(_QWORD *))sub_1D2CF4220, (uint64_t)v9);
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_voiceOverImageCaptionsEnabled);

  v6 = a2 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 24);
  v7 = *(_QWORD *)(v6 + 8);
  LOBYTE(v11) = *(_BYTE *)v6;
  LOBYTE(v3) = v11;
  v12 = v7;
  v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
  sub_1D2D9D8CC();
  LOBYTE(v11) = v3;
  v12 = v7;
  result = sub_1D2D9D8C0();
  if ((v10 & 1) == 0)
    return sub_1D2CEC25C();
  return result;
}

uint64_t *sub_1D2CEDDC0(uint64_t *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = *result;
  if ((*result & 0x8000000000000000) == 0 && v2 < *(_QWORD *)(a2 + 16))
  {
    v3 = a2 + 48 * v2;
    v4 = *(_QWORD *)(v3 + 40);
    v12 = *(_QWORD *)(v3 + 48);
    v13 = *(_QWORD *)(v3 + 32);
    v11 = *(_BYTE *)(v3 + 56);
    v5 = *(_QWORD *)(v3 + 72);
    v10 = *(_QWORD *)(v3 + 64);
    type metadata accessor for LanguageDownloadView(0);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
    sub_1D2D9D8C0();
    v6 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_1D2D4A9DC(0, v14[2] + 1, 1, v14);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_1D2D4A9DC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v8 + 1;
    v9 = &v6[6 * v8];
    v9[4] = v13;
    v9[5] = v4;
    v9[6] = v12;
    *((_BYTE *)v9 + 56) = v11;
    v9[8] = v10;
    v9[9] = v5;
    sub_1D2D9D8CC();
    swift_release();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2CEDF4C(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(_QWORD *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  char *v29;
  uint64_t v30;
  void (*v31)(_QWORD *);
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[4];
  uint64_t v39;

  v31 = a1;
  v32 = a2;
  v3 = sub_1D2D9C7F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v35 = (char *)&v28 - v7;
  v8 = sub_1D2D9C804();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CF8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v10;
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v28(v12, v2, v8, v14);
  sub_1D2CC66E4(&qword_1EFCA6D00, v9, MEMORY[0x1E0CB13D0]);
  v29 = v12;
  sub_1D2D9DE0C();
  v17 = &v16[*(int *)(v13 + 36)];
  v37 = v4;
  v33 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v34 = v16;
  v18 = v35;
  v19 = v36;
  while (1)
  {
    v33(v18, v17, v3);
    sub_1D2CC66E4(&qword_1EFCA6D08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E0]);
    sub_1D2D9DFEC();
    sub_1D2CC66E4(&qword_1EFCA6D10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1248], MEMORY[0x1E0CB1260]);
    v20 = sub_1D2D9DC8C();
    v21 = *(void (**)(char *, uint64_t))(v37 + 8);
    v21(v19, v3);
    v21(v18, v3);
    if ((v20 & 1) != 0)
      break;
    v22 = (void (*)(_QWORD *, _QWORD))sub_1D2D9E004();
    v24 = *v23;
    v22(v38, 0);
    v25 = v29;
    ((void (*)(char *, char *, uint64_t))v28)(v29, v16, v8);
    sub_1D2D9DFF8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v8);
    v38[0] = v24;
    v26 = v39;
    v31(v38);
    if (v26)
      break;
    v39 = 0;
  }
  return sub_1D2CCADA4((uint64_t)v16, &qword_1EFCA6CF8);
}

uint64_t sub_1D2CEE228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;

  v4 = type metadata accessor for LanguageDownloadView(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v78 = v6;
  v81 = (uint64_t)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9D7D0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v83 = (char *)v72 - v11;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v72 - v17;
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v76 = (id)objc_opt_self();
  v77 = ObjCClassFromMetadata;
  v20 = objc_msgSend(v76, sel_bundleForClass_, ObjCClassFromMetadata);
  v21 = sub_1D2D9C5E8();
  v79 = v22;
  v80 = v21;

  v23 = *(int *)(v4 + 44);
  v82 = a1;
  v24 = (uint64_t *)(a1 + v23);
  v26 = *v24;
  v25 = v24[1];
  v86 = v26;
  v87 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  v27 = v88[2];
  v84 = v9;
  v85 = a2;
  if (v27)
  {
    v75 = v5;
    v28 = v88[4];
    v29 = v88[9];
    swift_bridgeObjectRetain_n();
    v73 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v74 = v28;
    sub_1D2D9C708();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v30 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v15);
    v32 = v31;
    v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    v33(v15, v12);
    v33(v18, v12);
    v34 = 0xE000000000000000;
    if (v32)
    {
      v35 = objc_msgSend(v76, sel_bundleForClass_, v77);
      sub_1D2D9C5E8();

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6238);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1D2DA0510;
      *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v36 + 64) = sub_1D2CE007C();
      *(_QWORD *)(v36 + 32) = v30;
      *(_QWORD *)(v36 + 40) = v32;
      v37 = sub_1D2D9DCF8();
      v34 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = 0;
    }
    swift_bridgeObjectRetain();
    sub_1D2D9C708();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v41 = Locale.sqDisplayName(context:in:)(2, (uint64_t)v15);
    v43 = v42;
    v33(v15, v12);
    v33(v18, v12);
    if (v43)
    {
      v74 = v41;
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v44 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v15);
      v46 = v45;
      v33(v15, v12);
      v33(v18, v12);
      if (v46)
      {
        v47 = v44;
        v48 = objc_msgSend(v76, sel_bundleForClass_, v77);
        sub_1D2D9C5E8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6238);
        v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1D2DA0CB0;
        v50 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
        v51 = sub_1D2CE007C();
        *(_QWORD *)(v49 + 32) = v74;
        *(_QWORD *)(v49 + 40) = v43;
        *(_QWORD *)(v49 + 96) = v50;
        *(_QWORD *)(v49 + 104) = v51;
        *(_QWORD *)(v49 + 64) = v51;
        *(_QWORD *)(v49 + 72) = v47;
        *(_QWORD *)(v49 + 80) = v46;
        v39 = sub_1D2D9DCF8();
        v40 = v52;
        swift_bridgeObjectRelease();
LABEL_11:
        v5 = v75;
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v39 = 0;
    v40 = 0xE000000000000000;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  v39 = 0;
  v37 = 0;
  v40 = 0xE000000000000000;
  v34 = 0xE000000000000000;
LABEL_12:
  v86 = v37;
  v87 = v34;
  sub_1D2CD1430();
  v53 = sub_1D2D9D5CC();
  v77 = v54;
  v78 = v53;
  LODWORD(v75) = v55;
  v76 = v56;
  v86 = v39;
  v87 = v40;
  v57 = sub_1D2D9D5CC();
  v73 = v58;
  v74 = v57;
  v72[1] = v59 & 1;
  v72[2] = v60;
  v61 = v81;
  v62 = v82;
  sub_1D2CDB6B4(v82, v81, type metadata accessor for LanguageDownloadView);
  v63 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v64 = swift_allocObject();
  sub_1D2CD1FD4(v61, v64 + v63, type metadata accessor for LanguageDownloadView);
  sub_1D2D9D7B8();
  swift_release();
  v86 = v80;
  v87 = v79;
  v65 = sub_1D2D9D5CC();
  v67 = v66;
  v69 = v68 & 1;
  sub_1D2CDB6B4(v62, v61, type metadata accessor for LanguageDownloadView);
  v70 = swift_allocObject();
  sub_1D2CD1FD4(v61, v70 + v63, type metadata accessor for LanguageDownloadView);
  sub_1D2D9D7AC();
  sub_1D2CCCAB4(v65, v67, v69);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1D2D9D7A0();
}

uint64_t sub_1D2CEE900()
{
  type metadata accessor for LanguageDownloadView(0);
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  swift_bridgeObjectRelease();
  sub_1D2D9D8CC();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CEE9A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for LanguageDownloadView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v5 = Array<A>.downloadable.getter(v10);
  swift_bridgeObjectRelease();
  v10 = v5;
  swift_getKeyPath();
  sub_1D2CDB6B4(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for LanguageDownloadView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C88);
  sub_1D2CC6C74(&qword_1ED586B88, &qword_1ED586B80, MEMORY[0x1E0DEAF48]);
  sub_1D2CF383C();
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2CEEB6C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t (**v28)();
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char *v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  _QWORD v65[3];
  char *v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;

  v76 = a3;
  v80 = sub_1D2D9C7EC();
  v69 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v77 = (char *)v65 - v7;
  v8 = type metadata accessor for LanguageDownloadView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v79 = sub_1D2D9DA10();
  v68 = *(_QWORD *)(v79 - 8);
  v11 = v68;
  MEMORY[0x1E0C80A78](v79);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LanguageDownloadButton(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C98);
  MEMORY[0x1E0C80A78](v73);
  v66 = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v72 = (char *)v65 - v19;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6C88);
  MEMORY[0x1E0C80A78](v75);
  v74 = (uint64_t)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[2];
  v84 = a1[1];
  v85 = v21;
  v83 = *a1;
  v71 = a2 + *(int *)(v8 + 40);
  sub_1D2CF3DD0((uint64_t)&v83);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  v67 = v13;
  sub_1D2D9D8C0();
  sub_1D2CDB6B4(a2, (uint64_t)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for LanguageDownloadView);
  v24 = (_OWORD *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  v25 = v83;
  v26 = v84;
  *v24 = v83;
  v24[1] = v26;
  v27 = v85;
  v24[2] = v85;
  *(_OWORD *)v16 = v25;
  *((_OWORD *)v16 + 1) = v26;
  *((_OWORD *)v16 + 4) = v26;
  *((_OWORD *)v16 + 5) = v27;
  *((_OWORD *)v16 + 2) = v27;
  *((_OWORD *)v16 + 3) = v25;
  v65[1] = v14;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[*(int *)(v14 + 24)], v13, v79);
  v28 = (uint64_t (**)())&v16[*(int *)(v14 + 28)];
  *v28 = sub_1D2CF3FC0;
  v28[1] = (uint64_t (*)())v23;
  v65[2] = v83;
  sub_1D2CF3DD0((uint64_t)&v83);
  sub_1D2CF3DD0((uint64_t)&v83);
  swift_bridgeObjectRetain();
  v29 = v77;
  sub_1D2D9C708();
  v30 = (uint64_t)v78;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v31 = Locale.sqDisplayName(context:in:)(0, v30);
  v33 = v32;
  v34 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v35 = v30;
  v36 = v80;
  v34(v35, v80);
  v34((uint64_t)v29, v36);
  if (v33)
    v37 = v31;
  else
    v37 = 0;
  v38 = 0xE000000000000000;
  if (v33)
    v38 = v33;
  v81 = v37;
  v82 = v38;
  v69 = sub_1D2CD1430();
  v39 = sub_1D2D9D5CC();
  v41 = v40;
  v43 = v42 & 1;
  sub_1D2CC66E4(&qword_1EFCA6CA0, type metadata accessor for LanguageDownloadButton, (uint64_t)&unk_1D2DA1C40);
  v44 = (uint64_t)v66;
  sub_1D2D9D650();
  sub_1D2CCCAB4(v39, v41, v43);
  swift_bridgeObjectRelease();
  sub_1D2CD3734((uint64_t)v16, type metadata accessor for LanguageDownloadButton);
  swift_bridgeObjectRetain();
  v45 = v77;
  sub_1D2D9C708();
  v46 = (uint64_t)v78;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v47 = Locale.sqDisplaySubname(context:in:)(0, v46);
  v49 = v48;
  v50 = v80;
  v34(v46, v80);
  v34((uint64_t)v45, v50);
  if (v49)
    v51 = v47;
  else
    v51 = 0;
  v52 = 0xE000000000000000;
  if (v49)
    v52 = v49;
  v81 = v51;
  v82 = v52;
  v53 = sub_1D2D9D5CC();
  v55 = v54;
  v57 = v56 & 1;
  v58 = (uint64_t)v72;
  sub_1D2D9CD74();
  sub_1D2CCCAB4(v53, v55, v57);
  swift_bridgeObjectRelease();
  sub_1D2CCADA4(v44, &qword_1EFCA6C98);
  v59 = v67;
  sub_1D2D9D8C0();
  LOBYTE(v53) = sub_1D2D9DA04();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v59, v79);
  KeyPath = swift_getKeyPath();
  v61 = swift_allocObject();
  *(_BYTE *)(v61 + 16) = v53 & 1;
  v62 = v74;
  sub_1D2CCAD60(v58, v74, &qword_1EFCA6C98);
  v63 = (uint64_t *)(v62 + *(int *)(v75 + 36));
  *v63 = KeyPath;
  v63[1] = (uint64_t)sub_1D2CF4018;
  v63[2] = v61;
  sub_1D2CCADA4(v58, &qword_1EFCA6C98);
  return sub_1D2CD2018(v62, v76, &qword_1EFCA6C88);
}

uint64_t sub_1D2CEF140(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t result;
  int *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;

  v4 = (int *)type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v61 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v61 - v14;
  if (*(_BYTE *)(a1 + v4[14]) != 1)
    goto LABEL_12;
  v65 = v4;
  v66 = a1;
  v71 = 0x53555F6E65;
  v72 = 0xE500000000000000;
  v68 = 45;
  v69 = 0xE100000000000000;
  v67[0] = 95;
  v67[1] = 0xE100000000000000;
  sub_1D2CD1430();
  v16 = sub_1D2D9E1E4();
  v18 = v17;
  swift_bridgeObjectRetain_n();
  v63 = v16;
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v19 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v12);
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v12, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
  if (v21)
  {
    v62 = v19;
    v22(v9, v6);
    v22(v15, v6);
  }
  else
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v23 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v12);
    v21 = v24;
    v22(v12, v6);
    v22(v9, v6);
    v22(v15, v6);
    if (!v21)
    {
      swift_bridgeObjectRetain();
      v26 = v63;
      v62 = v63;
      v21 = v18;
      v25 = v65;
      goto LABEL_7;
    }
    v62 = v23;
  }
  v25 = v65;
  v26 = v63;
LABEL_7:
  swift_bridgeObjectRelease();
  v27 = (uint64_t *)(v66 + v25[12]);
  v28 = *v27;
  v29 = v27[1];
  v71 = *v27;
  v72 = v29;
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  v30 = (_QWORD *)v68;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_1D2D4A9DC(0, v30[2] + 1, 1, v30);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_1D2D4A9DC((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v30[2] = v32 + 1;
  v33 = &v30[6 * v32];
  v33[4] = v26;
  v33[5] = v18;
  v33[6] = 1;
  *((_BYTE *)v33 + 56) = 1;
  v33[8] = v62;
  v33[9] = v21;
  v71 = v28;
  v72 = v29;
  v67[0] = (uint64_t)v30;
  sub_1D2D9D8CC();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v65;
  a1 = v66;
LABEL_12:
  sub_1D2CF4020((uint64_t *)(a2 + 16), (uint64_t)v67);
  result = sub_1D2CF4020(v67, (uint64_t)&v68);
  if (v69 == 1)
  {
    if (!v68)
      return result;
    v35 = v4;
    v36 = (uint64_t *)(a1 + v4[12]);
    v37 = *v36;
    v38 = v36[1];
    v71 = *v36;
    v72 = v38;
    swift_bridgeObjectRetain();
    sub_1D2CF3DD0(a2);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
    sub_1D2D9D8C0();
    v39 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v39 = sub_1D2D4A9DC(0, v39[2] + 1, 1, v39);
    v41 = v39[2];
    v40 = v39[3];
    if (v41 >= v40 >> 1)
      v39 = sub_1D2D4A9DC((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
    v39[2] = v41 + 1;
    v42 = &v39[6 * v41];
    v43 = *(_OWORD *)a2;
    v44 = *(_OWORD *)(a2 + 32);
    v42[3] = *(_OWORD *)(a2 + 16);
    v42[4] = v44;
    v42[2] = v43;
    v71 = v37;
    v72 = v38;
    v70 = v39;
    sub_1D2D9D8CC();
    swift_release();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtC13TranslationUI16LanguagesService_reachability))
    {
      v45 = v64;
      sub_1D2CDB6B4(a1, v64, type metadata accessor for LanguageDownloadView);
LABEL_30:
      sub_1D2CD3734(v45, type metadata accessor for LanguageDownloadView);
      return sub_1D2CEC0BC(0);
    }
    swift_retain();
    Reachability.networkStatus.getter((char *)&v71);
    swift_release();
    v45 = v64;
    if ((_BYTE)v71 && v71 != 1)
    {
      swift_bridgeObjectRelease();
      sub_1D2CDB6B4(a1, v45, type metadata accessor for LanguageDownloadView);
    }
    else
    {
      v55 = sub_1D2D9E52C();
      swift_bridgeObjectRelease();
      sub_1D2CDB6B4(a1, v45, type metadata accessor for LanguageDownloadView);
      if ((v55 & 1) == 0)
        goto LABEL_30;
    }
    v56 = *(_QWORD *)(v45 + 8);
    swift_retain();
    sub_1D2CD3734(v45, type metadata accessor for LanguageDownloadView);
    v57 = *(_BYTE *)(v56 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser);
    swift_release();
    if ((v57 & 1) != 0)
      return sub_1D2CEC0BC(0);
    v58 = a1 + v35[7];
    v59 = *(_BYTE *)v58;
    v60 = *(_QWORD *)(v58 + 8);
    LOBYTE(v71) = v59;
    v72 = v60;
    LOBYTE(v73) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
    return sub_1D2D9D8CC();
  }
  else
  {
    v46 = (uint64_t *)(a1 + v4[11]);
    v47 = *v46;
    v48 = v46[1];
    v71 = *v46;
    v72 = v48;
    sub_1D2CF3DD0(a2);
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
    sub_1D2D9D8C0();
    v49 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_1D2D4A9DC(0, v49[2] + 1, 1, v49);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_1D2D4A9DC((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v49[2] = v51 + 1;
    v52 = &v49[6 * v51];
    v53 = *(_OWORD *)a2;
    v54 = *(_OWORD *)(a2 + 32);
    v52[3] = *(_OWORD *)(a2 + 16);
    v52[4] = v54;
    v52[2] = v53;
    v71 = v47;
    v72 = v48;
    v70 = v49;
    sub_1D2D9D8CC();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1D2CEC25C();
  }
}

uint64_t sub_1D2CEF83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t result;
  void *v13;
  uint64_t ErrorValue;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  void *v38;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CE0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D0A4();
  v6 = type metadata accessor for LanguageDownloadView(0);
  v30 = *(int *)(v6 + 52);
  v7 = *(id *)(a1 + v30);
  v8 = sub_1D2D9D5C0();
  v33 = v9;
  v34 = v8;
  v31 = v10;
  v32 = v11;
  v37 = *(_OWORD *)(a1 + *(int *)(v6 + 36));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CE8);
  result = sub_1D2D9D8C0();
  v13 = v38;
  if (v38)
  {
    ErrorValue = swift_getErrorValue();
    v15 = v36;
    v16 = *(_QWORD *)(v36 - 8);
    v17 = MEMORY[0x1E0C80A78](ErrorValue);
    v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);

    v20 = sub_1D2D9E58C();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    *(_QWORD *)&v37 = v20;
    *((_QWORD *)&v37 + 1) = v22;
    sub_1D2CD1430();
    sub_1D2D9D5CC();
    sub_1D2D9D0A4();
    v23 = *(id *)(a1 + v30);
    v24 = sub_1D2D9D5C0();
    v26 = v25;
    v28 = v27 & 1;
    sub_1D2D9D7C4();
    sub_1D2CCCAB4(v24, v26, v28);
    swift_bridgeObjectRelease();
    v29 = sub_1D2D9D7D0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_1D2D9D794();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2CEFB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  id v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(char *, uint64_t);
  _QWORD v67[2];
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v86 = a2;
  v3 = sub_1D2D9D098();
  MEMORY[0x1E0C80A78](v3);
  v67[1] = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1D2D9C7D4();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D2D9C7EC();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v74 = (char *)v67 - v10;
  v11 = type metadata accessor for LanguageDownloadView(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  v80 = v11;
  v14 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v77 = (uint64_t)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D2D9D7D0();
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  MEMORY[0x1E0C80A78](v15);
  v82 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v81 = (char *)v67 - v18;
  MEMORY[0x1E0C80A78](v19);
  v87 = (char *)v67 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v67 - v22;
  sub_1D2D9D0A4();
  v79 = *(int *)(v13 + 52);
  v76 = a1;
  v24 = *(id *)(a1 + v79);
  v25 = sub_1D2D9D5C0();
  v27 = v26;
  v29 = v28 & 1;
  v30 = v77;
  sub_1D2CDB6B4(a1, v77, type metadata accessor for LanguageDownloadView);
  v31 = *(unsigned __int8 *)(v12 + 80);
  v32 = (v31 + 16) & ~v31;
  v78 = v31 | 7;
  v33 = swift_allocObject();
  sub_1D2CD1FD4(v30, v33 + v32, type metadata accessor for LanguageDownloadView);
  v83 = v23;
  sub_1D2D9D7C4();
  sub_1D2CCCAB4(v25, v27, v29);
  swift_release();
  swift_bridgeObjectRelease();
  v34 = (void *)sub_1D2D9DCB0();
  v35 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1D2D9DCD4();
  v36 = v79;
  v37 = v76;
  sub_1D2D9C5E8();
  swift_bridgeObjectRelease();
  sub_1D2CDB6B4(v37, v30, type metadata accessor for LanguageDownloadView);
  v38 = v37;
  v39 = swift_allocObject();
  sub_1D2CD1FD4(v30, v39 + v32, type metadata accessor for LanguageDownloadView);
  sub_1D2D9D7C4();
  swift_release();
  swift_bridgeObjectRelease();
  *(_BYTE *)(*(_QWORD *)(v37 + 8) + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser) = 1;
  v40 = (uint64_t *)(v37 + *(int *)(v80 + 48));
  v42 = *v40;
  v41 = v40[1];
  v88 = v42;
  v89 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6CD0);
  sub_1D2D9D8C0();
  if (!*(_QWORD *)(v90 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v74;
  sub_1D2D9C708();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = v71;
  sub_1D2D9C7E0();
  v45 = (uint64_t)v75;
  sub_1D2D9C7A4();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v73);
  v46 = sub_1D2D9C72C();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    sub_1D2CCADA4(v45, &qword_1ED587108);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v70);
LABEL_7:
    sub_1D2D9D0A4();
    v63 = *(id *)(v38 + v36);
    sub_1D2D9D5C0();
    v60 = v83;
    v59 = v84;
    v64 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    v62 = v85;
    v64(v81, v83, v85);
    v64(v82, v87, v62);
    goto LABEL_8;
  }
  sub_1D2D9C720();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  v48 = *(void (**)(char *, uint64_t))(v69 + 8);
  v49 = v70;
  v48(v43, v70);
  v50 = v68;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  sub_1D2D9C738();
  v52 = v51;
  swift_bridgeObjectRelease();
  v48(v50, v49);
  if (!v52)
    goto LABEL_7;
  sub_1D2D9D0A4();
  v53 = *(id *)(v38 + v36);
  v54 = sub_1D2D9D5C0();
  v79 = v55;
  v80 = v54;
  LODWORD(v77) = v56;
  v78 = v57;
  sub_1D2D9D08C();
  sub_1D2D9D080();
  sub_1D2D9D074();
  swift_bridgeObjectRelease();
  sub_1D2D9D080();
  sub_1D2D9D0B0();
  v58 = v53;
  sub_1D2D9D5C0();
  v60 = v83;
  v59 = v84;
  v61 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v62 = v85;
  v61(v81, v83, v85);
  v61(v82, v87, v62);
LABEL_8:
  sub_1D2D9D7A0();
  v65 = *(void (**)(char *, uint64_t))(v59 + 8);
  v65(v87, v62);
  return ((uint64_t (*)(char *, uint64_t))v65)(v60, v62);
}

uint64_t sub_1D2CF0408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B08);
  MEMORY[0x1E0C80A78](v19);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B10);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9D230();
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D218();
  v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B20);
  sub_1D2CF37D8(&qword_1EFCA6B28, &qword_1EFCA6B20, (uint64_t (*)(void))sub_1D2CF31EC, MEMORY[0x1E0CE0798]);
  sub_1D2D9CE04();
  sub_1D2D9D224();
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B60);
  sub_1D2CF3314();
  sub_1D2D9CE04();
  v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  v14 = v13;
  v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  sub_1D2D9D140();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1D2CF0640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  _BYTE *v20;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v4 = sub_1D2D9CB10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B48);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B38);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 *)(a1 + *(int *)(v16 + 56));
  sub_1D2CDB6B4(a1, (uint64_t)v15, v18);
  if (v17 != 3)
    goto LABEL_10;
  v29 = v10;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v19 = *(_QWORD *)(v32 + 16);
  if (!v19)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v10 = v29;
LABEL_10:
    sub_1D2CD3734((uint64_t)v15, type metadata accessor for LanguageDownloadView);
    v22 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v22, 1, v10);
  }
  v20 = (_BYTE *)(v32 + 56);
  while (*v20 != 1 || *((_QWORD *)v20 - 1) != 0)
  {
    v20 += 48;
    if (!--v19)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_1D2CD3734((uint64_t)v15, type metadata accessor for LanguageDownloadView);
  v24 = v31;
  sub_1D2D9CB04();
  sub_1D2D9D458();
  v25 = sub_1D2D9D464();
  swift_release();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v24, v4);
  v27 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v27 = KeyPath;
  v27[1] = v25;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  sub_1D2CF3270();
  v28 = (uint64_t)v30;
  sub_1D2D9D6D4();
  sub_1D2CCADA4((uint64_t)v9, &qword_1EFCA6B48);
  sub_1D2CD2018(v28, a2, &qword_1EFCA6B38);
  v22 = 0;
  v10 = v29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v22, 1, v10);
}

uint64_t sub_1D2CF094C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a2;
  v3 = sub_1D2D9CB10();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B48);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B38);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B20);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6B70);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t (**)())((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for LanguageDownloadView(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  if (*(_BYTE *)(a1 + *(int *)(v19 + 56)) == 3)
  {
    sub_1D2CDB6B4(a1, (uint64_t)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
    v20 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v21 = swift_allocObject();
    sub_1D2CD1FD4((uint64_t)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for LanguageDownloadView);
    *v15 = sub_1D2CF33B4;
    v15[1] = (uint64_t (*)())v21;
    swift_storeEnumTagMultiPayload();
    sub_1D2CCCF54();
    sub_1D2CF37D8(&qword_1EFCA6B28, &qword_1EFCA6B20, (uint64_t (*)(void))sub_1D2CF31EC, MEMORY[0x1E0CE0798]);
    return sub_1D2D9D1E8();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D2D9C9B4();
    swift_release();
    swift_release();
    swift_release();
    v23 = *(_QWORD *)(v42 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v42 + 56);
      while (*v24 != 1 || *((_QWORD *)v24 - 1) != 0)
      {
        v24 += 48;
        if (!--v23)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      sub_1D2D9CB04();
      sub_1D2D9D458();
      v34 = sub_1D2D9D464();
      swift_release();
      KeyPath = swift_getKeyPath();
      v28 = v37;
      v29 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v7, v5, v38);
      v30 = (uint64_t *)&v7[*(int *)(v36 + 36)];
      v31 = v34;
      *v30 = KeyPath;
      v30[1] = v31;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
      sub_1D2CF3270();
      v32 = (uint64_t)v35;
      sub_1D2D9D6D4();
      sub_1D2CCADA4((uint64_t)v7, &qword_1EFCA6B48);
      sub_1D2CD2018(v32, (uint64_t)v12, &qword_1EFCA6B38);
      v26 = 0;
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, v26, 1, v40);
    sub_1D2CCAD60((uint64_t)v12, (uint64_t)v15, &qword_1EFCA6B20);
    swift_storeEnumTagMultiPayload();
    sub_1D2CCCF54();
    sub_1D2CF37D8(&qword_1EFCA6B28, &qword_1EFCA6B20, (uint64_t (*)(void))sub_1D2CF31EC, MEMORY[0x1E0CE0798]);
    sub_1D2D9D1E8();
    return sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA6B20);
  }
}

uint64_t sub_1D2CF0DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D2D9CDD4();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageDownloadView(0);
  sub_1D2D7C93C((uint64_t)v3);
  MEMORY[0x1D82474B0](v1);
  sub_1D2D9CDC8();
  sub_1D2D9D968();
  return sub_1D2CCADA4((uint64_t)v3, &qword_1EFCA68B0);
}

uint64_t sub_1D2CF0EA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6830);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CCAD60(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EFCA6830);
  return sub_1D2D9CF90();
}

uint64_t sub_1D2CF0F2C()
{
  return sub_1D2D9CEDC();
}

uint64_t sub_1D2CF0F4C()
{
  return sub_1D2D9CEDC();
}

uint64_t sub_1D2CF0F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CECA4C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CF0F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF0408(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CF0F7C()
{
  return sub_1D2D9CF84();
}

unint64_t sub_1D2CF0FA4()
{
  unint64_t result;

  result = qword_1EFCA68A8;
  if (!qword_1EFCA68A8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguageDownloadView.ContextView, &type metadata for LanguageDownloadView.ContextView);
    atomic_store(result, (unint64_t *)&qword_1EFCA68A8);
  }
  return result;
}

uint64_t sub_1D2CF0FE8()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for LanguageDownloadView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      v9[1] = v10[1];
      swift_retain();
      swift_retain();
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v13 = (char *)v9 + v12;
      v14 = (char *)v10 + v12;
      v15 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[6];
    v18 = a3[7];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *v19 = *v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    v21 = (char *)a1 + v18;
    v22 = (char *)a2 + v18;
    *v21 = *v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *v25 = *v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v27 = (_QWORD *)((char *)a1 + v24);
    v28 = (char *)a2 + v24;
    v29 = *(void **)((char *)a2 + v24);
    swift_retain();
    swift_retain();
    swift_retain();
    v30 = v29;
    v31 = *((_QWORD *)v28 + 1);
    *v27 = v29;
    v27[1] = v31;
    v32 = a3[10];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_1D2D9DA10();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_retain();
    v36(v33, v34, v35);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
    *(_QWORD *)&v33[*(int *)(v37 + 28)] = *(_QWORD *)&v34[*(int *)(v37 + 28)];
    v38 = a3[11];
    v39 = a3[12];
    v40 = (_QWORD *)((char *)a1 + v38);
    v41 = (_QWORD *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (_QWORD *)((char *)a1 + v39);
    v44 = (_QWORD *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[13];
    v47 = a3[14];
    v48 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)a1 + v46) = v48;
    *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v49 = v48;
  }
  return a1;
}

void destroy for LanguageDownloadView(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v7 = sub_1D2D9CDD4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v8 = a1 + a2[10];
  v9 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

}

_QWORD *initializeWithCopy for LanguageDownloadView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v8 = *v9;
  if (EnumCaseMultiPayload == 1)
  {
    v8[1] = v9[1];
    swift_retain();
    swift_retain();
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v12 = (char *)v8 + v11;
    v13 = (char *)v9 + v11;
    v14 = sub_1D2D9CDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *v19 = *v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  v21 = a3[8];
  v22 = a3[9];
  v23 = (char *)a1 + v21;
  v24 = (char *)a2 + v21;
  *v23 = *v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  v25 = (_QWORD *)((char *)a1 + v22);
  v26 = (char *)a2 + v22;
  v27 = *(void **)((char *)a2 + v22);
  swift_retain();
  swift_retain();
  swift_retain();
  v28 = v27;
  v29 = *((_QWORD *)v26 + 1);
  *v25 = v27;
  v25[1] = v29;
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1D2D9DA10();
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_retain();
  v34(v31, v32, v33);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  *(_QWORD *)&v31[*(int *)(v35 + 28)] = *(_QWORD *)&v32[*(int *)(v35 + 28)];
  v36 = a3[11];
  v37 = a3[12];
  v38 = (_QWORD *)((char *)a1 + v36);
  v39 = (_QWORD *)((char *)a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = (_QWORD *)((char *)a1 + v37);
  v42 = (_QWORD *)((char *)a2 + v37);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = a3[13];
  v45 = a3[14];
  v46 = *(void **)((char *)a2 + v44);
  *(_QWORD *)((char *)a1 + v44) = v46;
  *((_BYTE *)a1 + v45) = *((_BYTE *)a2 + v45);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v47 = v46;
  return a1;
}

_QWORD *assignWithCopy for LanguageDownloadView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1D2CCADA4((uint64_t)a1 + v6, &qword_1EFCA6818);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v7[1] = v8[1];
      swift_retain();
      swift_retain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_retain();
  swift_release();
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_retain();
  swift_release();
  v23 = a3[9];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = *(void **)((char *)a1 + v23);
  v27 = *(void **)((char *)a2 + v23);
  v28 = v27;
  *v24 = v27;

  v24[1] = *((_QWORD *)v25 + 1);
  swift_retain();
  swift_release();
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_1D2D9DA10();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  *(_QWORD *)&v30[*(int *)(v33 + 28)] = *(_QWORD *)&v31[*(int *)(v33 + 28)];
  swift_retain();
  swift_release();
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_retain();
  swift_release();
  v37 = a3[12];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  swift_retain();
  swift_release();
  v40 = a3[13];
  v41 = *(void **)((char *)a2 + v40);
  v42 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = v41;
  v43 = v41;

  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

_OWORD *initializeWithTake for LanguageDownloadView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = v8[1];
    *v7 = *v8;
    v7[1] = v10;
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_1D2D9CDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v15 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  v16 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  v17 = a3[10];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1D2D9DA10();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  *(_QWORD *)&v18[*(int *)(v21 + 28)] = *(_QWORD *)&v19[*(int *)(v21 + 28)];
  v22 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  v23 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  return a1;
}

_QWORD *assignWithTake for LanguageDownloadView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_1D2CCADA4((uint64_t)a1 + v7, &qword_1EFCA6818);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = v9[1];
      *v8 = *v9;
      v8[1] = v11;
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release();
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_release();
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_release();
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(void **)((char *)a1 + v25);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);

  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_release();
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_1D2D9DA10();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  *(_QWORD *)&v30[*(int *)(v33 + 28)] = *(_QWORD *)&v31[*(int *)(v33 + 28)];
  swift_release();
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_release();
  v37 = a3[12];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  swift_bridgeObjectRelease();
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  swift_release();
  v40 = a3[13];
  v41 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);

  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageDownloadView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF1C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LanguageDownloadView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF1D1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D2CF1DC0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2CF1E7C();
  if (v0 <= 0x3F)
  {
    sub_1D2CF1ED4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D2CF1E7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA6928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA68B0);
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA6928);
  }
}

void sub_1D2CF1ED4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA6930)
  {
    sub_1D2D9DA10();
    v0 = sub_1D2D9D8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA6930);
  }
}

uint64_t getEnumTagSinglePayload for LanguageDownloadView.ContextView(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageDownloadView.ContextView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D2CF2004 + 4 * byte_1D2DA1975[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D2CF2038 + 4 * byte_1D2DA1970[v4]))();
}

uint64_t sub_1D2CF2038(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CF2040(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2CF2048);
  return result;
}

uint64_t sub_1D2CF2054(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2CF205CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D2CF2060(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2CF2068(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguageDownloadView.ContextView()
{
  return &type metadata for LanguageDownloadView.ContextView;
}

unint64_t sub_1D2CF2088()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_1EFCA6988;
  if (!qword_1EFCA6988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6898);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6850);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6848);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6840);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6878);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6838);
    sub_1D2D9D260();
    sub_1D2CC6C74(&qword_1EFCA6870, &qword_1EFCA6838, MEMORY[0x1E0CDD950]);
    v3[4] = swift_getOpaqueTypeConformance2();
    v3[5] = sub_1D2CC6C74(&qword_1EFCA6880, &qword_1EFCA6878, MEMORY[0x1E0CDB5C0]);
    swift_getOpaqueTypeConformance2();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_1D2CC6C74(qword_1EFCA6990, &qword_1EFCA68A0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA6988);
  }
  return result;
}

_QWORD *sub_1D2CF2230(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    v11 = a2[11];
    v12 = *(int *)(a3 + 24);
    v22 = a1 + v12;
    v13 = (uint64_t)a2 + v12;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v11;
    v14 = sub_1D2D9DA10();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v22, v13, v14);
    v16 = *(int *)(a3 + 28);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return v4;
}

uint64_t sub_1D2CF236C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D2D9DA10();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    return swift_release();
  return result;
}

uint64_t sub_1D2CF23FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v13 = sub_1D2D9DA10();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  if (*v17)
  {
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_1D2CF250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12);
  v16 = *v14;
  if (!v15)
  {
    if (v16)
    {
      v18 = v14[1];
      *v13 = v16;
      v13[1] = v18;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_7;
  }
  v17 = v14[1];
  *v13 = v16;
  v13[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D2CF266C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = sub_1D2D9DA10();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t sub_1D2CF2710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14);
  v18 = *v16;
  if (!v17)
  {
    if (v18)
    {
      v20 = v16[1];
      *v15 = v18;
      v15[1] = v20;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = v16[1];
  *v15 = v18;
  v15[1] = v19;
  swift_release();
  return a1;
}

uint64_t sub_1D2CF2824()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF2830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D2D9DA10();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1D2CF28AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF28B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D2D9DA10();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LanguageDownloadButton(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA69F0);
}

uint64_t sub_1D2CF2940()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9DA10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1D2CF29BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = sub_1D2D9C7EC();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(v6 + 24);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = *(_QWORD *)v16;
    LOBYTE(v6) = *(_BYTE *)(v16 + 8);
    sub_1D2CF2AB8(*(_QWORD *)v16, v6);
    *(_QWORD *)v15 = v17;
    v15[8] = v6;
  }
  return v4;
}

uint64_t sub_1D2CF2AB8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1D2CF2AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return sub_1D2CF2B30(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_1D2CF2B30(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1D2CF2B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = sub_1D2D9C7EC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = v4 + v13;
  v16 = *(_QWORD *)v15;
  LOBYTE(v4) = *(_BYTE *)(v15 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v15, v4);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v4;
  return a1;
}

uint64_t sub_1D2CF2C0C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = v4[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)v4 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4[4];
  *(_QWORD *)(a1 + 40) = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)v4 + v7;
  v10 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (char *)v4 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v4) = v13[8];
  sub_1D2CF2AB8(*(_QWORD *)v13, (char)v4);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v4;
  sub_1D2CF2B30(v15, v16);
  return a1;
}

_OWORD *sub_1D2CF2CF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D2D9C7EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t sub_1D2CF2D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = (_BYTE)v14;
  sub_1D2CF2B30(v16, v17);
  return a1;
}

uint64_t sub_1D2CF2E40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF2E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1D2CF2EC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF2ED4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LanguageListItem(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA6A88);
}

uint64_t sub_1D2CF2F5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C7EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1D2CF2FDC()
{
  unint64_t result;

  result = qword_1EFCA6AC8;
  if (!qword_1EFCA6AC8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguageModel, &type metadata for LanguageModel);
    atomic_store(result, (unint64_t *)&qword_1EFCA6AC8);
  }
  return result;
}

uint64_t sub_1D2CF3020()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CF3030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CF3040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LanguageDownloadButton(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 28)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CF30FC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (**v3)(void);

  result = type metadata accessor for LanguageDownloadButton(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v3 = (uint64_t (**)(void))(v0 + *(int *)(result + 28) + ((v2 + 16) & ~v2));
  if (*v3)
    return (*v3)();
  return result;
}

uint64_t sub_1D2CF3148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CEAEE8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CF3150@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF9C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2CF317C()
{
  return sub_1D2D9CFA8();
}

unint64_t sub_1D2CF31A0()
{
  unint64_t result;

  result = qword_1EFCA6AF8;
  if (!qword_1EFCA6AF8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for DownloadProgressView, &type metadata for DownloadProgressView);
    atomic_store(result, (unint64_t *)&qword_1EFCA6AF8);
  }
  return result;
}

uint64_t sub_1D2CF31E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF0640(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CF31EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6B30;
  if (!qword_1EFCA6B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B38);
    v2[0] = sub_1D2CF3270();
    v2[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6B30);
  }
  return result;
}

unint64_t sub_1D2CF3270()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6B40;
  if (!qword_1EFCA6B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B48);
    v2[0] = sub_1D2CC66E4(&qword_1EFCA6B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8400], MEMORY[0x1E0CD83F0]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6B40);
  }
  return result;
}

uint64_t sub_1D2CF330C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF094C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CF3314()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6B68;
  if (!qword_1EFCA6B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B60);
    v2[0] = sub_1D2CCCF54();
    v2[1] = sub_1D2CF37D8(&qword_1EFCA6B28, &qword_1EFCA6B20, (uint64_t (*)(void))sub_1D2CF31EC, MEMORY[0x1E0CE0798]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6B68);
  }
  return result;
}

uint64_t sub_1D2CF33B4()
{
  return sub_1D2CF41A8((uint64_t (*)(uint64_t))sub_1D2CF0DB8);
}

unint64_t sub_1D2CF33C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFCA6BE8;
  if (!qword_1EFCA6BE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6BE0);
    v2 = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6BE8);
  }
  return result;
}

uint64_t sub_1D2CF341C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCAB4(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D2CF3454()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6BF0;
  if (!qword_1EFCA6BF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B98);
    v2[0] = sub_1D2CF34D8();
    v2[1] = sub_1D2CC6C74((unint64_t *)&qword_1EFCA6C10, &qword_1EFCA6C18, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6BF0);
  }
  return result;
}

unint64_t sub_1D2CF34D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFCA6BF8;
  if (!qword_1EFCA6BF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B90);
    v2 = sub_1D2CC6C74(&qword_1EFCA6C00, &qword_1EFCA6C08, MEMORY[0x1E0CDD908]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6BF8);
  }
  return result;
}

uint64_t sub_1D2CF3554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CED7BC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CF355C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6C28;
  if (!qword_1EFCA6C28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6BB0);
    v2[0] = sub_1D2CF33C0();
    v2[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C28);
  }
  return result;
}

unint64_t sub_1D2CF35E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6C38;
  if (!qword_1EFCA6C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C30);
    v2[0] = sub_1D2CF3664();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6C58, &qword_1EFCA6C60, MEMORY[0x1E0CDBEF0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C38);
  }
  return result;
}

unint64_t sub_1D2CF3664()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFCA6C40;
  if (!qword_1EFCA6C40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C48);
    v2 = sub_1D2CC66E4(&qword_1EFCA6C50, type metadata accessor for LanguageListItem, (uint64_t)&unk_1D2DA1BB8);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C40);
  }
  return result;
}

unint64_t sub_1D2CF36E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_1EFCA6C68;
  if (!qword_1EFCA6C68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6BA8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B98);
    v3 = sub_1D2D9CDBC();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9F78];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_1D2CF3454();
    v5[5] = sub_1D2CC66E4((unint64_t *)&qword_1EFCA6108, v4, MEMORY[0x1E0CD9F68]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C68);
  }
  return result;
}

uint64_t sub_1D2CF37D0()
{
  uint64_t v0;

  return sub_1D2CEE9A8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CF37D8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1D82488A8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2CF383C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6C80;
  if (!qword_1EFCA6C80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C88);
    v2[0] = sub_1D2CF38C0();
    v2[1] = sub_1D2CC6C74(&qword_1ED586B20, &qword_1ED586B28, MEMORY[0x1E0CDD0D8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C80);
  }
  return result;
}

unint64_t sub_1D2CF38C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6C90;
  if (!qword_1EFCA6C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C98);
    v2[0] = sub_1D2CC66E4(&qword_1EFCA6CA0, type metadata accessor for LanguageDownloadButton, (uint64_t)&unk_1D2DA1C40);
    v2[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C90);
  }
  return result;
}

uint64_t sub_1D2CF395C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CEF83C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CF3964()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_1EFCA6CA8;
  if (!qword_1EFCA6CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6B78);
    v2[0] = sub_1D2CF355C();
    v2[1] = sub_1D2CF37D8(&qword_1EFCA6C78, &qword_1EFCA6C70, (uint64_t (*)(void))sub_1D2CF383C, MEMORY[0x1E0CDFEE8]);
    v2[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFF98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6CA8);
  }
  return result;
}

uint64_t sub_1D2CF39FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CEFB24(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CF3A04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6CC0;
  if (!qword_1EFCA6CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6CB8);
    v2[0] = sub_1D2CF33C0();
    v2[1] = sub_1D2CC6C74((unint64_t *)&qword_1EFCA6C10, &qword_1EFCA6C18, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6CC0);
  }
  return result;
}

unint64_t sub_1D2CF3A88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6CC8;
  if (!qword_1EFCA6CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6BC0);
    v2[0] = sub_1D2CF3A04();
    v2[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6CC8);
  }
  return result;
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for LanguageDownloadView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v7 = sub_1D2D9CDD4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v8 = v3 + v1[10];
  v9 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D2CF3CAC()
{
  return sub_1D2CF3CC0(1);
}

uint64_t sub_1D2CF3CB8()
{
  return sub_1D2CF3CC0(0);
}

uint64_t sub_1D2CF3CC0(char a1)
{
  type metadata accessor for LanguageDownloadView(0);
  return sub_1D2CEC0BC(a1);
}

uint64_t sub_1D2CF3D04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D0AF9C(a1, v4, v5, v7, v6);
}

uint64_t sub_1D2CF3D84@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageDownloadView(0) - 8) + 80);
  return sub_1D2CEEB6C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1D2CF3DD0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D2CF3E04()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for LanguageDownloadView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_release();
  v3 = v2 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v6 = sub_1D2D9CDD4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v7 = v2 + v1[10];
  v8 = sub_1D2D9DA10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6888);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2CF3FC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for LanguageDownloadView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1D2CEF140(v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1D2CF4008()
{
  return swift_deallocObject();
}

_BYTE *sub_1D2CF4018(_BYTE *a1)
{
  uint64_t v1;

  return sub_1D2CCCBBC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1D2CF4020(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

uint64_t objectdestroy_37Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CF4094(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE16D4;
  return sub_1D2D0D244(a1, v4, v5, v7, v6);
}

uint64_t sub_1D2CF4110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageDownloadView(0) - 8) + 80);
  return sub_1D2CEDC58(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1D2CF414C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2CF4170()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D2CF4190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CEE228(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CF419C()
{
  return sub_1D2CF41A8((uint64_t (*)(uint64_t))sub_1D2CEE900);
}

uint64_t sub_1D2CF41A8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageDownloadView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1D2CF41E8()
{
  type metadata accessor for LanguageDownloadView(0);
  return sub_1D2CEC25C();
}

uint64_t *sub_1D2CF4220(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D2CEDDC0(a1, *(_QWORD *)(v1 + 16));
}

double sub_1D2CF4238@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CEC024(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

unint64_t sub_1D2CF4250()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6D20;
  if (!qword_1EFCA6D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6D18);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDA1F0];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6D20);
  }
  return result;
}

unint64_t sub_1D2CF42C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA6D28;
  if (!qword_1EFCA6D28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6AE8);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA6D30, &qword_1EFCA6AD0, MEMORY[0x1E0CDFA58]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60F0, &qword_1EFCA60F8, MEMORY[0x1E0CDBE48]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6D28);
  }
  return result;
}

uint64_t sub_1D2CF435C()
{
  return sub_1D2CC6C74(&qword_1EFCA6D38, &qword_1EFCA6D40, MEMORY[0x1E0CDFCC0]);
}

uint64_t sub_1D2CF4388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = type metadata accessor for LanguageMenu();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2CF6608(a2, (uint64_t)v10);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v4);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (v9 + *(unsigned __int8 *)(v5 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  sub_1D2CF6650((uint64_t)v10, v13 + v11);
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v13 + v12, &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  v16 = a1;
  return sub_1D2D9D8FC();
}

uint64_t sub_1D2CF44EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - v7;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  type metadata accessor for LanguageMenu();
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v5, &qword_1ED587850);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  sub_1D2D9D968();
  return sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
}

uint64_t sub_1D2CF4600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD v15[2];

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v6 = Locale.sqDisplayName(context:in:)(4, (uint64_t)v5);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
    v9 = v6;
  else
    v9 = 0;
  v10 = 0xE000000000000000;
  if (v8)
    v10 = v8;
  v15[0] = v9;
  v15[1] = v10;
  sub_1D2CD1430();
  result = sub_1D2D9D5CC();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = v13 & 1;
  *(_QWORD *)(a1 + 24) = v14;
  return result;
}

uint64_t LanguageMenu.init(locales:selection:suggestedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;

  v8 = (int *)type metadata accessor for LanguageMenu();
  v9 = v8[6];
  *(_QWORD *)((char *)a4 + v9) = 0;
  v10 = (_QWORD *)((char *)a4 + v8[7]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  swift_storeEnumTagMultiPayload();
  *a4 = a1;
  sub_1D2CF5854(a2, (uint64_t)a4 + v8[5]);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a4 + v9) = a3;
  return result;
}

uint64_t type metadata accessor for LanguageMenu()
{
  uint64_t result;

  result = qword_1EFCA6DC8;
  if (!qword_1EFCA6DC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LanguageMenu.body.getter()
{
  sub_1D2D9D0A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D58);
  sub_1D2CC6C74(&qword_1EFCA6D60, &qword_1EFCA6D58, MEMORY[0x1E0CE0680]);
  return sub_1D2D9D53C();
}

uint64_t sub_1D2CF4888@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  ValueMetadata *v37;
  uint64_t v38;
  char v39;
  ValueMetadata *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  void (*v44)(char *, char *);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  uint64_t v78[2];
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  ValueMetadata *v105;
  unint64_t v106;

  v93 = a2;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  v92 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v94 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)v78 - v5;
  v6 = type metadata accessor for LanguageMenu();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v90 = v8;
  v9 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E28);
  v10 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v12 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E30);
  MEMORY[0x1E0C80A78](v87);
  v14 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E38);
  MEMORY[0x1E0C80A78](v88);
  v16 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1D2D9D9B0();
  v100 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v96 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v101 = (char *)v78 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E40);
  v84 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v82 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v83 = (char *)v78 - v23;
  MEMORY[0x1E0C80A78](v24);
  v85 = (char *)v78 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v78 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E48);
  MEMORY[0x1E0C80A78](v29);
  v99 = (uint64_t)v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v98 = (uint64_t)v78 - v32;
  v33 = *(uint64_t *)((char *)a1 + *(int *)(v6 + 24));
  v86 = v7;
  if (!v33 || !*(_QWORD *)(v33 + 16))
    goto LABEL_6;
  v81 = v28;
  v80 = v16;
  v105 = &type metadata for TranslateFeatures;
  v106 = sub_1D2CE68A0();
  LOBYTE(v102) = 4;
  swift_bridgeObjectRetain();
  v34 = sub_1D2D9C834();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v102);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    v102 = *a1;
    swift_getKeyPath();
    sub_1D2CF6608((uint64_t)a1, (uint64_t)v9);
    v56 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v57 = swift_allocObject();
    sub_1D2CF6650((uint64_t)v9, v57 + v56);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E50);
    sub_1D2CC6C74(&qword_1EFCA6E58, &qword_1EFCA6E50, MEMORY[0x1E0DEAF48]);
    sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
    v58 = v89;
    sub_1D2D9D9BC();
    v59 = v95;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v95);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA6E60, &qword_1EFCA6E38, MEMORY[0x1E0CE0680]);
    sub_1D2CF6698();
    v55 = v98;
    sub_1D2D9D1E8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v59);
    v54 = v58;
    goto LABEL_7;
  }
  sub_1D2D9D0A4();
  v102 = sub_1D2D9D5C0();
  v103 = v35;
  v104 = v36 & 1;
  v105 = v37;
  MEMORY[0x1E0C80A78](v102);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BE0);
  v78[0] = sub_1D2CF33C0();
  v78[1] = sub_1D2CF6698();
  sub_1D2D9D9D4();
  swift_bridgeObjectRelease();
  sub_1D2D9D9A4();
  sub_1D2D9D0A4();
  v102 = sub_1D2D9D5C0();
  v103 = v38;
  v104 = v39 & 1;
  v105 = v40;
  MEMORY[0x1E0C80A78](v102);
  v41 = v85;
  sub_1D2D9D9D4();
  v42 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v43 = v83;
  v42(v83, v81, v20);
  v79 = (uint64_t)v9;
  v44 = *(void (**)(char *, char *))(v100 + 16);
  v45 = v96;
  v78[0] = (uint64_t)v14;
  v46 = v20;
  v47 = v97;
  v44(v96, v101);
  v48 = v82;
  v42(v82, v41, v46);
  v49 = (uint64_t)v80;
  v42(v80, v43, v46);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E78);
  ((void (*)(uint64_t, char *, uint64_t))v44)(v49 + *(int *)(v50 + 48), v45, v47);
  v42((char *)(v49 + *(int *)(v50 + 64)), v48, v46);
  v51 = *(void (**)(char *, uint64_t))(v84 + 8);
  v51(v48, v46);
  v52 = *(void (**)(char *, uint64_t))(v100 + 8);
  v9 = (char *)v79;
  v52(v45, v47);
  v53 = v43;
  v54 = v89;
  v51(v53, v46);
  sub_1D2CCAD60(v49, v78[0], &qword_1EFCA6E38);
  swift_storeEnumTagMultiPayload();
  sub_1D2CC6C74(&qword_1EFCA6E60, &qword_1EFCA6E38, MEMORY[0x1E0CE0680]);
  v55 = v98;
  sub_1D2D9D1E8();
  sub_1D2CCADA4(v49, &qword_1EFCA6E38);
  v51(v85, v46);
  v52(v101, v97);
  v51(v81, v46);
LABEL_7:
  v60 = v101;
  sub_1D2D9D9A4();
  sub_1D2CF6608((uint64_t)a1, (uint64_t)v9);
  v61 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v62 = swift_allocObject();
  sub_1D2CF6650((uint64_t)v9, v62 + v61);
  v63 = v91;
  sub_1D2D9D8FC();
  v64 = v99;
  sub_1D2CCAD60(v55, v99, &qword_1EFCA6E48);
  v65 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v66 = v96;
  v67 = v97;
  v65(v96, v60, v97);
  v68 = v92;
  v69 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v70 = v94;
  v69(v94, v63, v54);
  v71 = v64;
  v72 = v54;
  v73 = v93;
  sub_1D2CCAD60(v71, v93, &qword_1EFCA6E48);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E70);
  v65((char *)(v73 + *(int *)(v74 + 48)), v66, v67);
  v69((char *)(v73 + *(int *)(v74 + 64)), v70, v72);
  v75 = *(void (**)(char *, uint64_t))(v68 + 8);
  v75(v63, v72);
  v76 = *(void (**)(char *, uint64_t))(v100 + 8);
  v76(v101, v67);
  sub_1D2CCADA4(v98, &qword_1EFCA6E48);
  v75(v70, v72);
  v76(v66, v67);
  return sub_1D2CCADA4(v99, &qword_1EFCA6E48);
}

uint64_t sub_1D2CF5240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v4 = type metadata accessor for LanguageMenu();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v10[1] = a2;
  swift_getKeyPath();
  sub_1D2CF6608(a1, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D2CF6650((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  sub_1D2CC6C74(&qword_1EFCA6E58, &qword_1EFCA6E50, MEMORY[0x1E0DEAF48]);
  sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2CF53A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = type metadata accessor for LanguageMenu();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E28);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + *(int *)(v4 + 24)))
    v11 = *(_QWORD *)(a1 + *(int *)(v4 + 24));
  else
    v11 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v12 = sub_1D2D051FC(v11);
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRetain();
  sub_1D2CF6754(v13, v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  v19[0] = v15;
  swift_getKeyPath();
  sub_1D2CF6608(a1, (uint64_t)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = swift_allocObject();
  sub_1D2CF6650((uint64_t)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  sub_1D2CC6C74(&qword_1EFCA6E58, &qword_1EFCA6E50, MEMORY[0x1E0DEAF48]);
  sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
  sub_1D2D9D9BC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

uint64_t sub_1D2CF55A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9C648();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9CC9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageMenu();
  sub_1D2D7CB90((uint64_t)v10);
  sub_1D2D9C63C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1D2D9CC78();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_1D2CF5720@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1D2D9D0A4();
  result = sub_1D2D9D5C0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D2CF5794()
{
  return sub_1D2D9CEE8();
}

uint64_t sub_1D2CF57B4()
{
  return sub_1D2D9CEE8();
}

uint64_t sub_1D2CF57D4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9CC9C();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1D2D9CEF4();
}

uint64_t sub_1D2CF5854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CF589C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF4888(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1D2CF58A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CF58B4()
{
  sub_1D2D9D0A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D58);
  sub_1D2CC6C74(&qword_1EFCA6D60, &qword_1EFCA6D58, MEMORY[0x1E0CE0680]);
  return sub_1D2D9D53C();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguageMenu(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
    v13 = (char *)v9 + v12;
    v14 = &v10[v12];
    v15 = sub_1D2D9C7EC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_1D2D9CC9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LanguageMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_1D2D9CC9C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for LanguageMenu(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_1D2D9CC9C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for LanguageMenu(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_1D2CCADA4((uint64_t)a1 + v18, &qword_1EFCA6D48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_1D2D9CC9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for LanguageMenu(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_1D2D9CC9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for LanguageMenu(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    sub_1D2CCADA4((uint64_t)a1 + v18, &qword_1EFCA6D48);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_1D2D9CC9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageMenu()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF6338(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D68);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LanguageMenu()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2CF63EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D68);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1D2CF6490()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2CF652C();
  if (v0 <= 0x3F)
  {
    sub_1D2CF6584();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D2CF652C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA6DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED587850);
    v0 = sub_1D2D9D98C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA6DD8);
  }
}

void sub_1D2CF6584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA6DE0)
  {
    sub_1D2D9CC9C();
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA6DE0);
  }
}

uint64_t sub_1D2CF65D8()
{
  return sub_1D2CC6C74(&qword_1EFCA6E18, &qword_1EFCA6E20, MEMORY[0x1E0CDD990]);
}

uint64_t sub_1D2CF6608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguageMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CF6650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguageMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2CF6698()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFCA6E68;
  if (!qword_1EFCA6E68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6E28);
    v2 = sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA6E68);
  }
  return result;
}

uint64_t sub_1D2CF6718()
{
  type metadata accessor for LanguageMenu();
  return sub_1D2CF55A8();
}

uint64_t sub_1D2CF6744()
{
  uint64_t v0;

  return sub_1D2CF5240(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D2CF674C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF53A4(*(_QWORD *)(v1 + 16), a1);
}

void sub_1D2CF6754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v43 = (char *)&v32 - v15;
  v44 = MEMORY[0x1E0DEE9D8];
  v36 = *(_QWORD *)(a1 + 16);
  if (v36)
  {
    v16 = 0;
    v41 = a2 + 56;
    v34 = v6;
    v35 = a1;
    while (v16 < *(_QWORD *)(a1 + 16))
    {
      v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v42 = *(_QWORD *)(v8 + 72);
      v19 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
      v19(v6, a1 + v18 + v42 * v16, v7, v14);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        goto LABEL_19;
      v38 = v18;
      v39 = v16;
      v20 = v8;
      v40 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v40(v43, v6, v7);
      if (*(_QWORD *)(a2 + 16)
        && (sub_1D2CF6B0C(&qword_1EFCA6E80, MEMORY[0x1E0CB0E58]),
            v21 = sub_1D2D9DC44(),
            v22 = -1 << *(_BYTE *)(a2 + 32),
            v23 = v21 & ~v22,
            ((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0))
      {
        v24 = ~v22;
        while (1)
        {
          v25 = a2;
          ((void (*)(char *, unint64_t, uint64_t))v19)(v12, *(_QWORD *)(a2 + 48) + v23 * v42, v7);
          sub_1D2CF6B0C(qword_1EFCA7C00, MEMORY[0x1E0CB0E60]);
          v26 = sub_1D2D9DC8C();
          v27 = *(void (**)(char *, uint64_t))(v20 + 8);
          v27(v12, v7);
          if ((v26 & 1) != 0)
            break;
          v23 = (v23 + 1) & v24;
          a2 = v25;
          if (((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_12;
        }
        v27(v43, v7);
        a1 = v35;
        a2 = v25;
        v8 = v20;
        v17 = v39;
      }
      else
      {
LABEL_12:
        v40(v37, v43, v7);
        v28 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D03FA0(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v44;
        }
        v8 = v20;
        v29 = v38;
        v17 = v39;
        v31 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1D2D03FA0(v30 > 1, v31 + 1, 1);
          v28 = v44;
        }
        *(_QWORD *)(v28 + 16) = v31 + 1;
        v40((char *)(v28 + v29 + v31 * v42), v37, v7);
        v44 = v28;
        a1 = v35;
      }
      v16 = v17 + 1;
      v6 = v34;
      if (v16 == v36)
      {
        v33(v34, 1, 1, v7, v14);
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v14);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
  }
}

uint64_t sub_1D2CF6B0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D2D9C7EC();
    result = MEMORY[0x1D82488A8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for LanguageMenu();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v8 = v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1D2D9CC9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D2CF6C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageMenu() - 8) + 80);
  return sub_1D2CF4388(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1D2CF6CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for LanguageMenu();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v8, v4);
  swift_bridgeObjectRelease();
  v9 = v0 + v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1D2D9CC9C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v12 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_1D2CF6E3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for LanguageMenu() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D2D9C7EC() - 8) + 80);
  return sub_1D2CF44EC(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1D2CF6E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2CF4600(a1);
}

uint64_t Locale.title(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v10 = Locale.sqDisplayName(context:in:)(a1, (uint64_t)v9);
  v12 = v11;
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, v3);
  if (!v12)
  {
    if (qword_1ED587118 != -1)
      swift_once();
    v14 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED5886C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
    v15 = sub_1D2D9C8DC();
    v16 = sub_1D2D9E034();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136446210;
      sub_1D2CC66E4((unint64_t *)&qword_1EFCA6E88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
      v19 = sub_1D2D9E508();
      v22 = sub_1D2CF78E0(v19, v20, &v23);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      v13(v6, v3);
      _os_log_impl(&dword_1D2CC0000, v15, v16, "Locale %{public}s has no value for sqDisplayName()", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v18, -1, -1);
      MEMORY[0x1D8248974](v17, -1, -1);
    }
    else
    {
      v13(v6, v3);
    }

    return 0;
  }
  return v10;
}

uint64_t Locale.subtitle(opposite:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CF811C(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2CCADA4((uint64_t)v5, &qword_1ED587850);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  if ((MEMORY[0x1D82462A4](v1, v9) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_1D2D9C5E8();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

uint64_t LanguageOption.title(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CF81A0(v2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4))
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v13 = sub_1D2D9C5E8();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = Locale.title(_:)(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v13;
}

uint64_t LanguageOption.subtitle(opposite:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - v10;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  sub_1D2CF811C(a1, (uint64_t)v11);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1)
  {
    sub_1D2CCADA4((uint64_t)v11, &qword_1ED587850);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v20(v18, v11, v12);
    sub_1D2CF81A0(v1, (uint64_t)v5);
    if (!v19(v5, 2, v12))
    {
      v20(v15, v5, v12);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      v21 = Locale.subtitle(opposite:)((uint64_t)v8);
      sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
      v22 = *(void (**)(char *, uint64_t))(v13 + 8);
      v22(v15, v12);
      v22(v18, v12);
      return v21;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    sub_1D2CF81E4((uint64_t)v5);
  }
  return 0;
}

uint64_t LanguageOption.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1D2D9C7EC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CF81A0(v0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return LanguageOption.title(_:)(0);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  v8 = sub_1D2D9C714();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

uint64_t LanguageOption.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CF81A0(v1, (uint64_t)v5);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6))
  {
    sub_1D2CF81E4((uint64_t)v5);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v8, 1, v6);
}

uint64_t sub_1D2CF78E0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1D2CF79B0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D2CC80A4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D2CC80A4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1D2CF79B0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D2D9E1C0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1D2CF7B68(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1D2D9E328();
  if (!v8)
  {
    sub_1D2D9E388();
    __break(1u);
LABEL_17:
    result = sub_1D2D9E3DC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1D2CF7B68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1D2CF7BFC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D2CF7DD4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1D2CF7DD4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D2CF7BFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1D2CF7D70(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1D2D9E2F8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1D2D9E388();
      __break(1u);
LABEL_10:
      v2 = sub_1D2D9DDB8();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1D2D9E3DC();
    __break(1u);
LABEL_14:
    result = sub_1D2D9E388();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1D2CF7D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587370);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D2CF7DD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587370);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F18);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D2CF81A0(a1, (uint64_t)v14);
  sub_1D2CF81A0(a2, v15);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_1D2CF81A0((uint64_t)v14, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = MEMORY[0x1D82462A4](v10, v7);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1D2CF81E4((uint64_t)v14);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA6F18);
    v18 = 0;
    return v18 & 1;
  }
  sub_1D2CF81E4((uint64_t)v14);
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_1D2CF811C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LanguageOption()
{
  uint64_t result;

  result = qword_1EFCA6F08;
  if (!qword_1EFCA6F08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2CF81A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguageOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CF81E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LanguageOption();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CF8220(uint64_t a1)
{
  uint64_t result;

  result = sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D2CF825C(uint64_t a1)
{
  uint64_t result;

  result = sub_1D2CC66E4(&qword_1EFCA6E90, (uint64_t (*)(uint64_t))type metadata accessor for LanguageOption, (uint64_t)&protocol conformance descriptor for LanguageOption);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of LanguagePickerElement.title(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LanguagePickerElement.subtitle(opposite:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguageOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for LanguageOption(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for LanguageOption(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for LanguageOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for LanguageOption(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for LanguageOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageOption()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF870C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1D2D9C7EC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LanguageOption()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CF8764(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D2CF87B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1D2CF87F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_1D2CF8830()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C7EC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D2CF8884@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1D2CFBD64();
  result = sub_1D2D9CFFC();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2CF88D0()
{
  sub_1D2CFBD64();
  return sub_1D2D9D008();
}

uint64_t LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v12 = (int *)type metadata accessor for LanguagePicker();
  v13 = v12[5];
  *(_QWORD *)(a6 + v13) = 0;
  v14 = v12[8];
  *(_QWORD *)(a6 + v14) = MEMORY[0x1E0DEE9E8];
  v15 = a6 + v12[9];
  *(_QWORD *)v15 = swift_getKeyPath();
  *(_BYTE *)(v15 + 8) = 0;
  sub_1D2CD2018(a1, a6, &qword_1ED586B58);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v13) = a2;
  v16 = a6 + v12[6];
  v17 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a3, v17);
  *(_QWORD *)(a6 + v12[7]) = a4;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v14) = a5;
  return result;
}

uint64_t type metadata accessor for LanguagePicker()
{
  uint64_t result;

  result = qword_1ED5866C0;
  if (!qword_1ED5866C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2CF8A40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1D2CFBD64();
  result = sub_1D2D9CFFC();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2CF8A8C()
{
  sub_1D2CFBD64();
  return sub_1D2D9D008();
}

uint64_t LanguagePicker.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1D2D9DAD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v0;
  v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B70);
  sub_1D2CFA058();
  sub_1D2CFA164();
  sub_1D2D9D530();
  sub_1D2D9DAC4();
  sub_1D2CC6C74(&qword_1ED586B30, &qword_1ED586B38, MEMORY[0x1E0CDD990]);
  sub_1D2D9D788();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D2CF8C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for LanguagePicker();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = sub_1D2CF8D94();
  swift_getKeyPath();
  sub_1D2CFB880(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CFB9F4((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AD8);
  sub_1D2CC6C74(&qword_1ED586B88, &qword_1ED586B80, MEMORY[0x1E0DEAF48]);
  sub_1D2CFA1C8();
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2CF8D8C()
{
  uint64_t v0;

  return sub_1D2CF8C4C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2CF8D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  int v55;
  char v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  BOOL v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, unint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  unint64_t v79;
  int64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  __int128 v89;
  int64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;

  v1 = sub_1D2D9C7EC();
  v78 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v69 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v69 - v8;
  MEMORY[0x1E0C80A78](v10);
  v83 = (char *)&v69 - v11;
  MEMORY[0x1E0C80A78](v12);
  v82 = (char *)&v69 - v13;
  v14 = type metadata accessor for LanguagePicker();
  v15 = *(_QWORD *)(v0 + *(int *)(v14 + 20));
  if (!v15)
    return swift_bridgeObjectRetain();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
    return swift_bridgeObjectRetain();
  v70 = v14;
  v75 = v9;
  v76 = (uint64_t)v6;
  *(_QWORD *)&v77 = v3;
  v71 = v0;
  v88 = (char *)MEMORY[0x1E0DEE9D8];
  sub_1D2D03F2C(0, v16, 0);
  v17 = v15 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
  v74 = *(_QWORD *)(v78 + 72);
  v73 = *(void (**)(char *, unint64_t, uint64_t))(v78 + 16);
  v18 = v73;
  do
  {
    v79 = v17;
    v80 = v16;
    v19 = v82;
    v18(v82, v17, v1);
    v18(v83, (unint64_t)v19, v1);
    *(_QWORD *)&v89 = sub_1D2D9C714();
    *((_QWORD *)&v89 + 1) = v20;
    v86 = 45;
    v87 = 0xE100000000000000;
    v84 = 95;
    v85 = 0xE100000000000000;
    sub_1D2CD1430();
    v21 = sub_1D2D9E1E4();
    v23 = v22;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v89 = v21;
    *((_QWORD *)&v89 + 1) = v23;
    v86 = 45;
    v87 = 0xE100000000000000;
    v84 = 95;
    v85 = 0xE100000000000000;
    v24 = sub_1D2D9E1E4();
    v26 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v27 = v75;
    sub_1D2D9C708();
    v28 = v76;
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v29 = Locale.sqDisplayName(context:in:)(0, v28);
    v31 = v30;
    v32 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v32(v28, v1);
    v33 = v77;
    v18((char *)v77, (unint64_t)v27, v1);
    v81 = v24;
    if (v31)
    {
      v32(v33, v1);
      v32((uint64_t)v27, v1);
    }
    else
    {
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v29 = Locale.sqDisplaySubname(context:in:)(0, v28);
      v31 = v34;
      v32(v28, v1);
      v32(v33, v1);
      v32((uint64_t)v27, v1);
      if (!v31)
      {
        swift_bridgeObjectRetain();
        v29 = v24;
        v31 = v26;
      }
    }
    v36 = v79;
    v35 = v80;
    swift_bridgeObjectRelease();
    v32((uint64_t)v83, v1);
    v32((uint64_t)v82, v1);
    v37 = v88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D2D03F2C(0, *((_QWORD *)v37 + 2) + 1, 1);
      v37 = v88;
    }
    v39 = *((_QWORD *)v37 + 2);
    v38 = *((_QWORD *)v37 + 3);
    v40 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
      v43 = *((_QWORD *)v37 + 2);
      sub_1D2D03F2C(v38 > 1, v40, 1);
      v39 = v43;
      v37 = v88;
    }
    *((_QWORD *)v37 + 2) = v40;
    v41 = v37 + 32;
    v42 = (uint64_t)&v37[48 * v39 + 32];
    *(_QWORD *)v42 = v81;
    *(_QWORD *)(v42 + 8) = v26;
    *(_QWORD *)(v42 + 16) = 1;
    *(_BYTE *)(v42 + 24) = 1;
    *(_QWORD *)(v42 + 32) = v29;
    *(_QWORD *)(v42 + 40) = v31;
    v17 = v36 + v74;
    v16 = v35 - 1;
  }
  while (v16);
  v86 = *(_QWORD *)(v71 + *(int *)(v70 + 28));
  swift_bridgeObjectRetain();
  v75 = v37;
  swift_retain();
  v45 = 0;
  *(_QWORD *)&v46 = 136315138;
  v77 = v46;
  v76 = MEMORY[0x1E0DEE9B8] + 8;
  v79 = v39;
  v72 = v37 + 32;
  while (1)
  {
    v48 = &v41[48 * v45];
    v49 = *(_QWORD *)v48;
    v50 = *((_QWORD *)v48 + 1);
    v81 = *((_QWORD *)v48 + 5);
    v82 = (char *)v45;
    v51 = (_QWORD *)v86;
    v52 = *(_QWORD *)(v86 + 16);
    if (v52)
      break;
LABEL_44:
    if (qword_1ED587118 != -1)
      swift_once();
    v64 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v64, (uint64_t)qword_1ED5886C8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = sub_1D2D9C8DC();
    v66 = sub_1D2D9E034();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v84 = v68;
      *(_DWORD *)v67 = v77;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v67 + 4) = sub_1D2CF78E0(v49, v50, &v84);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v65, v66, "When sorting language menu, master list does not contain LID identified language %s", (uint8_t *)v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v68, -1, -1);
      MEMORY[0x1D8248974](v67, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v47 = (uint64_t)v82;
LABEL_17:
    v45 = v47 + 1;
    v41 = v72;
    if (v47 == v79)
    {
      swift_release_n();
      return v86;
    }
  }
  v53 = 0;
  v54 = *((_QWORD *)v48 + 2);
  v55 = v48[24];
  v78 = *((_QWORD *)v48 + 4);
  v80 = v54;
  if (v54)
    v56 = v55;
  else
    v56 = 0;
  if (v54)
    v57 = 0;
  else
    v57 = v55;
  LODWORD(v83) = v57;
  v58 = 5;
  while (1)
  {
    v59 = v51[v58 + 1];
    v60 = v51[v58 + 2];
    v61 = v51[v58 - 1] == v49 && v51[v58] == v50;
    if (!v61 && (sub_1D2D9E52C() & 1) == 0)
      goto LABEL_27;
    if ((v60 & 1) == 0)
    {
      if ((v55 & 1) == 0)
        goto LABEL_38;
      goto LABEL_27;
    }
    if (!v59)
      break;
    if ((v56 & 1) != 0)
      goto LABEL_38;
LABEL_27:
    ++v53;
    v58 += 6;
    if (v52 == v53)
      goto LABEL_44;
  }
  if ((v83 & 1) == 0)
    goto LABEL_27;
LABEL_38:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v51 = sub_1D2D4B0F4(v51);
  v62 = v51[2];
  if (v62 <= v53)
  {
    __break(1u);
    goto LABEL_50;
  }
  if ((uint64_t)(~v53 + v62) >= 0)
  {
    v63 = v62 - 1;
    memmove(&v51[v58 - 1], &v51[v58 + 5], 48 * (~v53 + v62));
    v51[2] = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v86 = (uint64_t)v51;
    v47 = (uint64_t)v82;
    if (v51[2] >= (unint64_t)v82)
    {
      *(_QWORD *)&v89 = v49;
      *((_QWORD *)&v89 + 1) = v50;
      v90 = v80;
      v91 = v55;
      v92 = v78;
      v93 = v81;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D2D23D88(v47, v47, &v89);
      goto LABEL_17;
    }
LABEL_50:
    __break(1u);
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2CF955C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t result;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v46 = a3;
  v5 = sub_1D2D9C7EC();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - v8;
  v48 = type metadata accessor for LanguagePicker();
  v10 = *(_QWORD *)(v48 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v48);
  v12 = a1[1];
  v55 = *a1;
  v56 = v12;
  v57 = a1[2];
  v45 = a2;
  sub_1D2CFB880(a2, (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2D9DEFC();
  sub_1D2CF3DD0((uint64_t)&v55);
  v13 = sub_1D2D9DEF0();
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v16;
  v17 = v56;
  *(_OWORD *)(v15 + 32) = v55;
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = v57;
  sub_1D2CFB9F4((uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + ((v14 + 80) & ~v14));
  sub_1D2CFB880(a2, (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2CF3DD0((uint64_t)&v55);
  v18 = sub_1D2D9DEF0();
  v19 = (v14 + 32) & ~v14;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = MEMORY[0x1E0DF06E8];
  sub_1D2CFB9F4((uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  v21 = (__int128 *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  v22 = v56;
  *v21 = v55;
  v21[1] = v22;
  v21[2] = v57;
  sub_1D2D9D980();
  v23 = v52;
  v51 = v53;
  swift_bridgeObjectRetain();
  sub_1D2D9C708();
  v24 = (uint64_t)v47;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v25 = Locale.sqDisplayName(context:in:)(0, v24);
  v27 = v26;
  v28 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v29 = v24;
  v30 = v50;
  v28(v29, v50);
  v28((uint64_t)v9, v30);
  swift_bridgeObjectRetain();
  v31 = v45;
  sub_1D2D9C708();
  LOBYTE(v20) = MEMORY[0x1D82462A4](v9, v31 + *(int *)(v48 + 24));
  v28((uint64_t)v9, v30);
  v32 = 0;
  v33 = 0;
  if ((v20 & 1) != 0)
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v35 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v32 = sub_1D2D9C5E8();
    v33 = v36;

  }
  if (v27)
    v37 = v27;
  else
    v37 = 0xE000000000000000;
  if (v27)
    v38 = v25;
  else
    v38 = 0;
  v52 = v55;
  v53 = v56;
  v54 = v57;
  swift_retain();
  swift_retain();
  v39 = sub_1D2CF9B44(&v52);
  KeyPath = swift_getKeyPath();
  v41 = swift_allocObject();
  *(_BYTE *)(v41 + 16) = !v39;
  swift_release();
  result = swift_release();
  v43 = v46;
  *v46 = v23;
  *((_BYTE *)v43 + 16) = v51;
  *((_QWORD *)v43 + 3) = v38;
  *((_QWORD *)v43 + 4) = v37;
  *((_QWORD *)v43 + 5) = v32;
  *((_QWORD *)v43 + 6) = v33;
  *((_QWORD *)v43 + 7) = KeyPath;
  *((_QWORD *)v43 + 8) = sub_1D2CF4018;
  *((_QWORD *)v43 + 9) = v41;
  return result;
}

uint64_t sub_1D2CF9954@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t result;
  uint64_t v13;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  swift_bridgeObjectRetain();
  sub_1D2D9C708();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
  MEMORY[0x1D82474B0](v9);
  v10 = MEMORY[0x1D82462A4](v8, v5);
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  result = ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  *a1 = v10 & 1;
  return result;
}

void sub_1D2CF9A4C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v9 - v7;
  if (*a1 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1D2D9C708();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
    sub_1D2D9D968();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

BOOL sub_1D2CF9B44(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  void *v19;
  unsigned int v20;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23[2];
  uint64_t v24;
  char v25;

  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v21 = *a1;
  v22[0] = v7;
  v22[1] = a1[2];
  v8 = type metadata accessor for LanguagePicker();
  if ((sub_1D2D26FC8((uint64_t *)&v21, *(_QWORD *)(v1 + *(int *)(v8 + 32))) & 1) != 0)
    return 0;
  swift_bridgeObjectRetain();
  sub_1D2D9C708();
  v10 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
  v11 = (void *)sub_1D2D9C744();
  v12 = (void *)sub_1D2D9C744();
  v13 = objc_msgSend(v10, sel_initWithSourceLocale_targetLocale_, v11, v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (objc_msgSend(v13, sel_isVariantPair))
  {

    return 0;
  }
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  v15 = v14;
  v16 = (void *)sub_1D2D9DCB0();
  v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

  v18 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (!v18)
  {

    if (v17)
      goto LABEL_7;
    return 1;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_isOnDeviceOnlyTranslationForced);

  if (((v20 | v17) & 1) == 0)
    return 1;
LABEL_7:
  sub_1D2CF4020((uint64_t *)v22, (uint64_t)v23);
  sub_1D2CF4020(v23, (uint64_t)&v24);
  if (v25 != 1)
    return 0;
  return v24 == 0;
}

uint64_t sub_1D2CF9D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v36 = a2;
  v3 = sub_1D2D9C7EC();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - v7;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B50);
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B40);
  v11 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
  MEMORY[0x1D82474B0](v16);
  v17 = a1 + *(int *)(type metadata accessor for LanguagePicker() + 36);
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v17, v19);
  v20 = sub_1D2D7CBC4(v18, v19);
  sub_1D2CF2B30(v18, v19);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v21 = Locale.sqDisplayName(context:in:)(v20, (uint64_t)v5);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v31 + 8);
  v24(v5, v3);
  v24(v8, v3);
  if (v23)
    v25 = v21;
  else
    v25 = 0;
  v26 = 0xE000000000000000;
  if (v23)
    v26 = v23;
  v37 = v25;
  v38 = v26;
  sub_1D2CD1430();
  sub_1D2D9D8A8();
  sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
  sub_1D2CFA120();
  v27 = v33;
  sub_1D2D9D608();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v27);
  v28 = v34;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v34);
  v29 = (uint64_t (**)())&v15[*(int *)(v32 + 36)];
  *v29 = sub_1D2CFA290;
  v29[1] = 0;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  return sub_1D2CD2018((uint64_t)v15, v36, &qword_1ED586AF8);
}

uint64_t sub_1D2CFA050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CF9D6C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2CFA058()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1ED586AF0;
  if (!qword_1ED586AF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586AF8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B50);
    v2[3] = &type metadata for LanguagePickerLabelStyle;
    v2[4] = sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
    v2[5] = sub_1D2CFA120();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x1E0CDBC38];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED586AF0);
  }
  return result;
}

unint64_t sub_1D2CFA120()
{
  unint64_t result;

  result = qword_1ED586980;
  if (!qword_1ED586980)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguagePickerLabelStyle, &type metadata for LanguagePickerLabelStyle);
    atomic_store(result, (unint64_t *)&qword_1ED586980);
  }
  return result;
}

unint64_t sub_1D2CFA164()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED586B68;
  if (!qword_1ED586B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B70);
    v2 = sub_1D2CFA1C8();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED586B68);
  }
  return result;
}

unint64_t sub_1D2CFA1C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED586AD0;
  if (!qword_1ED586AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586AD8);
    v2[0] = sub_1D2CFA24C();
    v2[1] = sub_1D2CC6C74(&qword_1ED586B20, &qword_1ED586B28, MEMORY[0x1E0CDD0D8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED586AD0);
  }
  return result;
}

unint64_t sub_1D2CFA24C()
{
  unint64_t result;

  result = qword_1ED5868A0;
  if (!qword_1ED5868A0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguagePickerItem, &type metadata for LanguagePickerItem);
    atomic_store(result, (unint64_t *)&qword_1ED5868A0);
  }
  return result;
}

uint64_t sub_1D2CFA290()
{
  return sub_1D2D9CB88();
}

uint64_t sub_1D2CFA2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1D2D9DAD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v0;
  v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B70);
  sub_1D2CFA058();
  sub_1D2CFA164();
  sub_1D2D9D530();
  sub_1D2D9DAC4();
  sub_1D2CC6C74(&qword_1ED586B30, &qword_1ED586B38, MEMORY[0x1E0CDD990]);
  sub_1D2D9D788();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LanguagePickerLabelStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_1D2D9D038();
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F20);
  return sub_1D2CFA480(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1D2CFA480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v75 = a1;
  v1 = sub_1D2D9D878();
  v66 = *(_QWORD *)(v1 - 8);
  v67 = v1;
  MEMORY[0x1E0C80A78](v1);
  v65 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9D2C0();
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AE0);
  MEMORY[0x1E0C80A78](v64);
  v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B00);
  MEMORY[0x1E0C80A78](v71);
  v68 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B10);
  MEMORY[0x1E0C80A78](v74);
  v72 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v73 = (uint64_t)&v57 - v9;
  v10 = sub_1D2D9D2D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AE8);
  MEMORY[0x1E0C80A78](v57);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B08);
  MEMORY[0x1E0C80A78](v58);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F38);
  MEMORY[0x1E0C80A78](v59);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F40);
  MEMORY[0x1E0C80A78](v61);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v60 = (uint64_t)&v57 - v23;
  sub_1D2D9D2E4();
  sub_1D2D9D4F4();
  sub_1D2D9D4B8();
  v24 = sub_1D2D9D4DC();
  swift_release();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v10);
  v26 = (uint64_t *)&v15[*(int *)(v57 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v27 = sub_1D2D9D7E8();
  v28 = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v15, (uint64_t)v17, &qword_1ED586AE8);
  v29 = (uint64_t *)&v17[*(int *)(v58 + 36)];
  *v29 = v28;
  v29[1] = v27;
  sub_1D2CCADA4((uint64_t)v15, &qword_1ED586AE8);
  v30 = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v17, (uint64_t)v19, &qword_1ED586B08);
  v31 = &v19[*(int *)(v59 + 36)];
  *(_QWORD *)v31 = v30;
  v31[8] = 1;
  sub_1D2CCADA4((uint64_t)v17, &qword_1ED586B08);
  v32 = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v19, (uint64_t)v21, &qword_1EFCA6F38);
  v33 = &v21[*(int *)(v61 + 36)];
  *(_QWORD *)v33 = v32;
  *((_QWORD *)v33 + 1) = 1;
  v33[16] = 0;
  sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA6F38);
  v34 = v60;
  sub_1D2CD2018((uint64_t)v21, v60, &qword_1EFCA6F40);
  v35 = v62;
  sub_1D2D9D2CC();
  v37 = v65;
  v36 = v66;
  v38 = v67;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E0CDF7D0], v67);
  v39 = swift_getKeyPath();
  v40 = (uint64_t)v63;
  v41 = (uint64_t *)&v63[*(int *)(v64 + 36)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B18);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v41 + *(int *)(v42 + 28), v37, v38);
  *v41 = v39;
  v44 = v69;
  v43 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v40, v35, v70);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v43);
  sub_1D2D9D7E8();
  v45 = sub_1D2D9D818();
  swift_release();
  v46 = swift_getKeyPath();
  v47 = v68;
  sub_1D2CCAD60(v40, v68, &qword_1ED586AE0);
  v48 = (uint64_t *)(v47 + *(int *)(v71 + 36));
  *v48 = v46;
  v48[1] = v45;
  sub_1D2CCADA4(v40, &qword_1ED586AE0);
  sub_1D2D9D4F4();
  sub_1D2D9D4B8();
  v49 = sub_1D2D9D4DC();
  swift_release();
  v50 = swift_getKeyPath();
  v51 = v72;
  sub_1D2CCAD60(v47, v72, &qword_1ED586B00);
  v52 = (uint64_t *)(v51 + *(int *)(v74 + 36));
  *v52 = v50;
  v52[1] = v49;
  sub_1D2CCADA4(v47, &qword_1ED586B00);
  v53 = v73;
  sub_1D2CD2018(v51, v73, &qword_1ED586B10);
  sub_1D2CCAD60(v34, (uint64_t)v21, &qword_1EFCA6F40);
  sub_1D2CCAD60(v53, v51, &qword_1ED586B10);
  v54 = v75;
  sub_1D2CCAD60((uint64_t)v21, v75, &qword_1EFCA6F40);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F48);
  sub_1D2CCAD60(v51, v54 + *(int *)(v55 + 48), &qword_1ED586B10);
  sub_1D2CCADA4(v53, &qword_1ED586B10);
  sub_1D2CCADA4(v34, &qword_1EFCA6F40);
  sub_1D2CCADA4(v51, &qword_1ED586B10);
  return sub_1D2CCADA4((uint64_t)v21, &qword_1EFCA6F40);
}

uint64_t sub_1D2CFAAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_1D2D9D038();
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F20);
  return sub_1D2CFA480(a1 + *(int *)(v2 + 44));
}

uint64_t _s13TranslationUI14LanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v41 = type metadata accessor for LanguagePicker();
  MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v40 - v6;
  MEMORY[0x1E0C80A78](v7);
  v43 = (uint64_t)&v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v42 = (uint64_t)&v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - v15;
  v17 = sub_1D2D9C7EC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
  MEMORY[0x1D82474B0]();
  v25 = a2;
  MEMORY[0x1D82474B0](v24);
  LOBYTE(a2) = MEMORY[0x1D82462A4](v23, v20);
  v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27 = v25;
  v26(v20, v17);
  v26(v23, v17);
  sub_1D2CFB880(a1, (uint64_t)v16);
  sub_1D2CFB880(v25, (uint64_t)v13);
  if ((a2 & 1) == 0)
  {
    sub_1D2CFB8C4((uint64_t)v13);
    sub_1D2CFB8C4((uint64_t)v16);
    v30 = v42;
    sub_1D2CFB880(a1, v42);
    v31 = v43;
    sub_1D2CFB880(v25, v43);
    goto LABEL_8;
  }
  v28 = v41;
  v29 = MEMORY[0x1D82462A4](&v16[*(int *)(v41 + 24)], &v13[*(int *)(v41 + 24)]);
  sub_1D2CFB8C4((uint64_t)v13);
  sub_1D2CFB8C4((uint64_t)v16);
  v30 = v42;
  sub_1D2CFB880(a1, v42);
  v31 = v43;
  sub_1D2CFB880(v27, v43);
  if ((v29 & 1) == 0)
  {
LABEL_8:
    sub_1D2CFB8C4(v31);
    sub_1D2CFB8C4(v30);
    v35 = (uint64_t)v44;
    v34 = (uint64_t)v45;
LABEL_9:
    sub_1D2CFB880(a1, v35);
    sub_1D2CFB880(v27, v34);
    goto LABEL_10;
  }
  v32 = *(int *)(v28 + 20);
  v33 = *(_QWORD *)(v31 + v32);
  v35 = (uint64_t)v44;
  v34 = (uint64_t)v45;
  if (!*(_QWORD *)(v30 + v32))
  {
    swift_bridgeObjectRetain();
    sub_1D2CFB8C4(v31);
    sub_1D2CFB8C4(v30);
    if (!v33)
    {
      sub_1D2CFB880(a1, v35);
      sub_1D2CFB880(v27, v34);
LABEL_17:
      v38 = sub_1D2D317B4(*(_QWORD *)(v35 + *(int *)(v28 + 28)), *(_QWORD *)(v34 + *(int *)(v28 + 28)));
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (!v33)
  {
    swift_bridgeObjectRetain();
    sub_1D2CFB8C4(v31);
    sub_1D2CFB8C4(v30);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v36 = swift_bridgeObjectRetain();
  v37 = sub_1D2D31630(v36, v33);
  swift_bridgeObjectRelease();
  sub_1D2CFB8C4(v31);
  sub_1D2CFB8C4(v30);
  swift_bridgeObjectRelease();
  sub_1D2CFB880(a1, v35);
  sub_1D2CFB880(v27, v34);
  if ((v37 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v38 = 0;
LABEL_11:
  sub_1D2CFB8C4(v35);
  sub_1D2CFB8C4(v34);
  return v38 & 1;
}

uint64_t sub_1D2CFAEDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CFAEEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a3;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D2D9C7EC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = v6[6];
    *(uint64_t *)((char *)a1 + v6[5]) = *(uint64_t *)((char *)a2 + v6[5]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v12(v14, v15, v11);
    v16 = v6[8];
    *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    v17 = v6[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)v19;
    LOBYTE(v6) = v19[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D2CF2AB8(v20, (char)v6);
    *(_QWORD *)v18 = v20;
    v18[8] = (char)v6;
  }
  return a1;
}

uint64_t destroy for LanguagePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v5 = sub_1D2D9C7EC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1D2CF2B30(*(_QWORD *)(a1 + *(int *)(a2 + 36)), *(_BYTE *)(a1 + *(int *)(a2 + 36) + 8));
}

_QWORD *initializeWithCopy for LanguagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  v11(v13, v14, v10);
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v16 = a3[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  LOBYTE(a3) = v18[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2CF2AB8(v19, (char)a3);
  *(_QWORD *)v17 = v19;
  v17[8] = (char)a3;
  return a1;
}

char *assignWithCopy for LanguagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D2D9C7EC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  LOBYTE(a3) = v13[8];
  sub_1D2CF2AB8(*(_QWORD *)v13, (char)a3);
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)a3;
  sub_1D2CF2B30(v15, v16);
  return a1;
}

char *initializeWithTake for LanguagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1D2D9C7EC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v11(&a1[v12], &a2[v12], v10);
  v13 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[9];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  return a1;
}

char *assignWithTake for LanguagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D2D9C7EC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  sub_1D2CF2B30(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagePicker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CFB518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagePicker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2CFB5D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_1D2CFB678()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2CFB71C();
  if (v0 <= 0x3F)
  {
    sub_1D2D9C7EC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D2CFB71C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED586B60)
  {
    sub_1D2D9C7EC();
    v0 = sub_1D2D9D98C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED586B60);
  }
}

ValueMetadata *type metadata accessor for LanguagePickerLabelStyle()
{
  return &type metadata for LanguagePickerLabelStyle;
}

uint64_t sub_1D2CFB780()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B38);
  sub_1D2CC6C74(&qword_1ED586B30, &qword_1ED586B38, MEMORY[0x1E0CDD990]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2CFB7E4()
{
  return sub_1D2CC6C74(&qword_1EFCA6F28, &qword_1EFCA6F30, MEMORY[0x1E0CDFB10]);
}

uint64_t sub_1D2CFB820@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CEAC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2CFB84C()
{
  return sub_1D2D9CEB8();
}

uint64_t sub_1D2CFB880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CFB8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2CFB900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = type metadata accessor for LanguagePicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v5 = sub_1D2D9C7EC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(v3 + *(int *)(v1 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v3 + *(int *)(v1 + 36)), *(_BYTE *)(v3 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2CFB9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2CFBA38@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguagePicker() - 8) + 80);
  return sub_1D2CF955C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1D2CFBA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = type metadata accessor for LanguagePicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 80) & ~v2;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  swift_release();
  swift_release();
  v5 = v0 + v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  v7(v4 + *(int *)(v1 + 24), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v4 + *(int *)(v1 + 36)), *(_BYTE *)(v4 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2CFBB90@<X0>(_BYTE *a1@<X8>)
{
  type metadata accessor for LanguagePicker();
  return sub_1D2CF9954(a1);
}

uint64_t sub_1D2CFBBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = type metadata accessor for LanguagePicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  swift_release();
  swift_release();
  v5 = v0 + v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B58) + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  v7(v4 + *(int *)(v1 + 24), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v4 + *(int *)(v1 + 36)), *(_BYTE *)(v4 + *(int *)(v1 + 36) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D2CFBCF8(_BYTE *a1)
{
  type metadata accessor for LanguagePicker();
  sub_1D2CF9A4C(a1);
}

uint64_t sub_1D2CFBD54()
{
  return swift_deallocObject();
}

unint64_t sub_1D2CFBD64()
{
  unint64_t result;

  result = qword_1ED586A48;
  if (!qword_1ED586A48)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3358, &type metadata for LanguagePickerLabelFormatEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1ED586A48);
  }
  return result;
}

uint64_t LanguagePickerItem.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  sub_1D2D9D974();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F50);
  sub_1D2CC6C74(&qword_1EFCA6F58, &qword_1EFCA6F50, MEMORY[0x1E0CD84A0]);
  return sub_1D2D9D938();
}

uint64_t sub_1D2CFBE88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F70);
  sub_1D2CC6C74(&qword_1EFCA6F78, &qword_1EFCA6F70, MEMORY[0x1E0CE0680]);
  return sub_1D2D9CB1C();
}

uint64_t sub_1D2CFBF00()
{
  return sub_1D2CFBE88();
}

uint64_t sub_1D2CFBF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  sub_1D2CD1430();
  swift_bridgeObjectRetain();
  v4 = sub_1D2D9D5CC();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  if (*(_QWORD *)(a1 + 48))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D2D9D5CC();
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
  }
  else
  {
    v11 = 0;
    v13 = 0;
    v17 = 0;
    v15 = 0;
  }
  v18 = v8 & 1;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  sub_1D2CCCB0C(v4, v6, v18);
  swift_bridgeObjectRetain();
  sub_1D2CFC518(v11, v13, v17, v15);
  sub_1D2CF341C(v11, v13, v17, v15);
  sub_1D2CCCAB4(v4, v6, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CFC04C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  sub_1D2D9D974();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F50);
  sub_1D2CC6C74(&qword_1EFCA6F58, &qword_1EFCA6F50, MEMORY[0x1E0CD84A0]);
  return sub_1D2D9D938();
}

uint64_t _s13TranslationUI18LanguagePickerItemV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a1[3];
  v14 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v3 = a2[3];
  v11 = a2[4];
  v4 = a2[5];
  v5 = a2[6];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v15);
  v7 = v15;
  MEMORY[0x1D82474B0](&v15, v6);
  if (v7 == v15)
  {
    if (v2 == v3 && v14 == v11 || (v10 = sub_1D2D9E52C(), v8 = 0, (v10 & 1) != 0))
    {
      v8 = (v13 | v5) == 0;
      if (v13 && v5)
      {
        if (v12 == v4 && v13 == v5)
          v8 = 1;
        else
          v8 = sub_1D2D9E52C();
      }
    }
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1D2CFC270()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LanguagePickerItem()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagePickerItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagePickerItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagePickerItem()
{
  return &type metadata for LanguagePickerItem;
}

uint64_t sub_1D2CFC4E4()
{
  return sub_1D2CC6C74(&qword_1EFCA6F60, &qword_1EFCA6F68, MEMORY[0x1E0CDFC78]);
}

uint64_t sub_1D2CFC510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2CFBF08(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2CFC518(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D2CCCB0C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2CFC54C()
{
  return sub_1D2CFC574();
}

uint64_t sub_1D2CFC560()
{
  return sub_1D2CFC574();
}

uint64_t sub_1D2CFC574()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2CFC5D0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2CFC640()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2CFC6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__sourceLocale;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7150);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__targetLocale, v2);
  v4 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__selection;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__suggestedLocales;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2CFC77C()
{
  return type metadata accessor for LanguageSelectionModel();
}

uint64_t type metadata accessor for LanguageSelectionModel()
{
  uint64_t result;

  result = qword_1EFCA6FC8;
  if (!qword_1EFCA6FC8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2CFC7C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2CFC8D4(319, &qword_1EFCA6FD8, &qword_1ED587850);
  if (v0 <= 0x3F)
  {
    sub_1D2CFC880();
    if (v1 <= 0x3F)
    {
      sub_1D2CFC8D4(319, &qword_1EFCA6FE8, qword_1EFCA6FF0);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_1D2CFC880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA6FE0)
  {
    v0 = sub_1D2D9C9CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA6FE0);
  }
}

void sub_1D2CFC8D4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1D2D9C9CC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D2CFC920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7160);
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7158);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7150);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__sourceLocale;
  v16 = sub_1D2D9C7EC();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v14, 1, 1, v16);
  sub_1D2CF811C((uint64_t)v14, (uint64_t)v11);
  sub_1D2D9C984();
  sub_1D2CFCC18((uint64_t)v14);
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v18(v15, v8, v5);
  v19 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__targetLocale;
  v17(v14, 1, 1, v16);
  sub_1D2CF811C((uint64_t)v14, (uint64_t)v11);
  sub_1D2D9C984();
  sub_1D2CFCC18((uint64_t)v14);
  v18(v19, v8, v5);
  v20 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__selection;
  v32 = 1;
  v21 = v26;
  sub_1D2D9C984();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v20, v21, v28);
  v22 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__suggestedLocales;
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA6FF0);
  v23 = v29;
  sub_1D2D9C984();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v22, v23, v31);
  return v0;
}

uint64_t sub_1D2CFCBBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for LanguageSelectionModel();
  result = sub_1D2D9C96C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2CFCC18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D2CFCC58(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(unint64_t, _BYTE *, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(_QWORD, _QWORD);
  uint64_t v42;
  uint64_t aBlock;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;

  v39 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v37 = v6;
  v38 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1D2D9C7EC();
  v41 = *(void (***)(_QWORD, _QWORD))(v7 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v35 = a3;
    v36 = v5;
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1D2D9E358();
    v11 = a2 + 40;
    do
    {
      v16 = *(double *)(v11 + 8);
      v17 = *(unsigned __int8 *)(v11 + 16);
      v18 = (void *)objc_opt_self();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v19 = (void *)sub_1D2D9DCB0();
      if (v17 == 1)
      {
        if (v16 == 0.0)
          v20 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 2);
        else
          v20 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 0);
        v12 = v20;

      }
      else
      {
        v12 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 1);

        if (v16 > 0.001)
          v13 = v16;
        else
          v13 = 0.001;
        objc_msgSend(v12, sel_updatePercentComplete_, v13);
      }
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      v14 = objc_allocWithZone(MEMORY[0x1E0CE9968]);
      v15 = (void *)sub_1D2D9C744();
      objc_msgSend(v14, sel_initWithLocale_progress_, v15, v12);

      ((void (**)(_BYTE *, uint64_t))v41)[1](v9, v42);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1D2D9E340();
      sub_1D2D9E364();
      sub_1D2D9E370();
      sub_1D2D9E34C();
      v11 += 48;
      --v10;
    }
    while (v10);
    v5 = v36;
    LOBYTE(a3) = v35;
  }
  v21 = 2;
  if ((a3 & 1) != 0)
    v21 = 3;
  v42 = v21;
  v41 = (void (**)(_QWORD, _QWORD))objc_opt_self();
  sub_1D2D01A34();
  v36 = sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v23 = v38;
  v24 = v39;
  v25 = v40;
  v22(v38, v39, v40);
  v26 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v27 = swift_allocObject();
  v28 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32);
  v28(v27 + v26, v23, v25);
  v47 = sub_1D2D01A74;
  v48 = v27;
  v29 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v44 = 1107296256;
  v45 = sub_1D2CFD568;
  v46 = &block_descriptor_1;
  v30 = _Block_copy(&aBlock);
  swift_release();
  v22(v23, v24, v25);
  v31 = swift_allocObject();
  v28(v31 + v26, v23, v25);
  v47 = sub_1D2D01B00;
  v48 = v31;
  aBlock = v29;
  v44 = 1107296256;
  v45 = sub_1D2CFD618;
  v46 = &block_descriptor_23;
  v32 = _Block_copy(&aBlock);
  swift_release();
  v33 = (void *)v36;
  objc_msgSend(v41, sel_setLanguageAssets_options_progress_completion_, v36, v42, v30, v32);
  _Block_release(v32);
  _Block_release(v30);

}

void sub_1D2CFD07C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  int v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v58 = sub_1D2D9C7EC();
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - v7;
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v50 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7190);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v53 = v14;
    v61 = v5;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1D2D9E3AC();
      if (v15)
        goto LABEL_4;
    }
    else
    {
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_4:
        v70 = MEMORY[0x1E0DEE9D8];
        sub_1D2D03F2C(0, v15 & ~(v15 >> 63), 0);
        if (v15 < 0)
        {
          __break(1u);
          return;
        }
        v50 = v12;
        v51 = v11;
        v52 = a2;
        v16 = 0;
        v54 = a1 & 0xC000000000000001;
        v55 = v15;
        v56 = v8;
        v57 = a1;
        v17 = v59;
        do
        {
          if (v54)
            v18 = (id)MEMORY[0x1D8247E58](v16, a1);
          else
            v18 = *(id *)(a1 + 8 * v16 + 32);
          v19 = v18;
          v20 = objc_msgSend(v18, sel_state, v50, v51, v52);
          if (v20 == (id)2)
          {
            v62 = 1;
            v23 = 0;
          }
          else if (v20 == (id)1)
          {
            v21 = objc_msgSend(v19, sel_progress);
            objc_msgSend(v21, sel_fractionCompleted);
            v23 = v22;

            v62 = 0;
          }
          else
          {
            v62 = 1;
            v23 = 1;
          }
          v63 = v19;
          v24 = objc_msgSend(v19, sel_ltIdentifier);
          v25 = sub_1D2D9DCD4();
          v27 = v26;

          v68 = v25;
          v69 = v27;
          v66 = 45;
          v67 = 0xE100000000000000;
          v64 = 95;
          v65 = 0xE100000000000000;
          sub_1D2CD1430();
          v28 = sub_1D2D9E1E4();
          v30 = v29;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          v31 = v28;
          sub_1D2D9C708();
          _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
          v32 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v8);
          v34 = v33;
          v35 = v60;
          v36 = *(void (**)(char *, uint64_t))(v60 + 8);
          v37 = v58;
          v36(v8, v58);
          v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
          v39 = v61;
          v38(v61, v17, v37);
          if (v34)
          {
            v36(v39, v37);
            v36(v17, v37);
            v40 = v55;
            v41 = v32;
          }
          else
          {
            _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
            v42 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v8);
            v34 = v43;
            v36(v8, v37);
            v36(v61, v37);
            v36(v17, v37);
            if (v34)
            {
              v40 = v55;
              v41 = v42;
            }
            else
            {
              swift_bridgeObjectRetain();
              v41 = v31;
              v34 = v30;
              v40 = v55;
            }
          }

          swift_bridgeObjectRelease();
          v44 = v70;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D2D03F2C(0, *(_QWORD *)(v44 + 16) + 1, 1);
            v44 = v70;
          }
          v46 = *(_QWORD *)(v44 + 16);
          v45 = *(_QWORD *)(v44 + 24);
          if (v46 >= v45 >> 1)
          {
            sub_1D2D03F2C(v45 > 1, v46 + 1, 1);
            v44 = v70;
          }
          ++v16;
          *(_QWORD *)(v44 + 16) = v46 + 1;
          v47 = v44 + 48 * v46;
          *(_QWORD *)(v47 + 32) = v31;
          *(_QWORD *)(v47 + 40) = v30;
          *(_QWORD *)(v47 + 48) = v23;
          *(_BYTE *)(v47 + 56) = v62;
          *(_QWORD *)(v47 + 64) = v41;
          *(_QWORD *)(v47 + 72) = v34;
          v48 = v40 == v16;
          v8 = v56;
          a1 = v57;
        }
        while (!v48);
        swift_bridgeObjectRelease();
        v11 = v51;
        v12 = v50;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    v68 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    v49 = v53;
    sub_1D2D9DF74();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v11);
  }
}

uint64_t sub_1D2CFD568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1D2D01A34();
    v2 = sub_1D2D9DE60();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2CFD5C8(void *a1)
{
  id v1;

  if (a1)
    v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  return sub_1D2D9DF80();
}

void sub_1D2CFD618(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t static LanguagesInstallService.save(_:useCellular:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = a1;
  v11 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF0A50], v4);
  return sub_1D2D9DFA4();
}

void sub_1D2CFD738(uint64_t a1)
{
  uint64_t v1;

  sub_1D2CFCC58(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t static LanguagesInstallService.add(_:useCellular:)(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v8 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E01C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v25 = v7;
    v12 = v11;
    v13 = swift_slowAlloc();
    v23 = v13;
    *(_DWORD *)v12 = 134349314;
    v26 = *(_QWORD *)(a1 + 16);
    v27 = v13;
    v24 = a2;
    sub_1D2D9E1B4();
    *(_WORD *)(v12 + 12) = 2082;
    v22 = v12 + 14;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x1D82479C0](v14, &type metadata for LanguageModel);
    v17 = v16;
    swift_bridgeObjectRelease();
    v26 = sub_1D2CF78E0(v15, v17, &v27);
    LOBYTE(a2) = v24;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v9, v10, "Add %{public}ld languages: %{public}s", (uint8_t *)v12, 0x16u);
    v18 = v23;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v18, -1, -1);
    v19 = v12;
    v7 = v25;
    MEMORY[0x1D8248974](v19, -1, -1);

  }
  else
  {

    v20 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x1E0C80A78](v20);
  *(&v22 - 2) = a1;
  *((_BYTE *)&v22 - 8) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF0A50], v4);
  return sub_1D2D9DFA4();
}

uint64_t sub_1D2CFDA14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = a2;
  *(_BYTE *)(v14 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_bridgeObjectRetain();
  sub_1D2D06D10((uint64_t)v11, (uint64_t)&unk_1EFCA71D0, v14);
  return swift_release();
}

uint64_t sub_1D2CFDB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + 344) = a5;
  *(_QWORD *)(v6 + 184) = a4;
  *(_QWORD *)(v6 + 192) = a6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7190);
  *(_QWORD *)(v6 + 200) = v7;
  *(_QWORD *)(v6 + 208) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 216) = swift_task_alloc();
  v8 = sub_1D2D9C7EC();
  *(_QWORD *)(v6 + 224) = v8;
  *(_QWORD *)(v6 + 232) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 240) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  *(_QWORD *)(v6 + 248) = v9;
  *(_QWORD *)(v6 + 256) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  *(_QWORD *)(v6 + 272) = v10;
  *(_QWORD *)(v6 + 280) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 288) = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  *(_QWORD *)(v6 + 296) = v11;
  *(_QWORD *)(v6 + 304) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 312) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2CFDC80()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0[23];
  v2 = *(_QWORD *)(v1 + 16);
  v0[40] = v2;
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v29 = v0[29];
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v2, 0);
    v4 = (_QWORD *)(v1 + 72);
    do
    {
      v6 = *(v4 - 5);
      v5 = *(v4 - 4);
      v7 = *(v4 - 3);
      v8 = *v4;
      v33 = *(v4 - 1);
      if (*((_BYTE *)v4 - 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          v9 = v30[30];
          v32 = v30[28];
          swift_bridgeObjectRetain();
          sub_1D2D9C708();
          v30[2] = sub_1D2D9C714();
          v30[3] = v10;
          v30[4] = 45;
          v30[5] = 0xE100000000000000;
          v30[6] = 95;
          v30[7] = 0xE100000000000000;
          sub_1D2CD1430();
          v11 = sub_1D2D9E1E4();
          v13 = v12;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v9, v32);
          v30[8] = v11;
          v30[9] = v13;
          v30[10] = 45;
          v30[11] = 0xE100000000000000;
          v30[12] = 95;
          v30[13] = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v6 = sub_1D2D9E1E4();
          v15 = v14;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v7 = 0;
          v16 = 0;
          v5 = v15;
        }
        else
        {
          v16 = 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16 = 0;
      }
      v3 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v3 = v34;
      }
      v18 = *(_QWORD *)(v3 + 16);
      v17 = *(_QWORD *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D2D03F2C(v17 > 1, v18 + 1, 1);
        v3 = v34;
      }
      v4 += 6;
      *(_QWORD *)(v3 + 16) = v18 + 1;
      v19 = v3 + 48 * v18;
      *(_QWORD *)(v19 + 32) = v6;
      *(_QWORD *)(v19 + 40) = v5;
      *(_QWORD *)(v19 + 48) = v7;
      *(_BYTE *)(v19 + 56) = v16;
      *(_QWORD *)(v19 + 64) = v33;
      *(_QWORD *)(v19 + 72) = v8;
      --v2;
    }
    while (v2);
    v0 = v30;
  }
  v20 = v0[36];
  v31 = v0[35];
  v22 = v0[33];
  v21 = v0[34];
  v24 = v0[31];
  v23 = v0[32];
  v25 = *((_BYTE *)v0 + 344);
  v26 = swift_task_alloc();
  *(_QWORD *)(v26 + 16) = v3;
  *(_BYTE *)(v26 + 24) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E0DF0A50], v24);
  sub_1D2D9DFA4();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v20, v21);
  v27 = (_QWORD *)swift_task_alloc();
  v0[41] = v27;
  *v27 = v0;
  v27[1] = sub_1D2CFE030;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2CFE030()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2CFE094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 208);
    v2 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 176) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    sub_1D2D9DF74();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v5;
    *v5 = v0;
    v5[1] = sub_1D2CFE43C;
    return sub_1D2D9DF98();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    if (qword_1ED5878C8 != -1)
      swift_once();
    v7 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED588700);
    swift_bridgeObjectRetain_n();
    v8 = sub_1D2D9C8DC();
    v9 = sub_1D2D9E01C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = *(_QWORD *)(v0 + 320);
      v11 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32 = v30;
      *(_DWORD *)v11 = 136446210;
      v12 = MEMORY[0x1E0DEE9D8];
      if (v10)
      {
        v27 = v9;
        v28 = v11;
        v29 = v8;
        v13 = *(_QWORD *)(v0 + 320);
        v14 = *(_QWORD *)(v0 + 184);
        v33 = MEMORY[0x1E0DEE9D8];
        sub_1D2D03FCC(0, v13, 0);
        v15 = 0;
        v12 = v33;
        v31 = *(_QWORD *)(v33 + 16);
        v16 = 16 * v31;
        v17 = (uint64_t *)(v14 + 40);
        do
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v33 = v12;
          v20 = *(_QWORD *)(v12 + 24);
          v21 = v31 + v15 + 1;
          swift_bridgeObjectRetain();
          if (v31 + v15 >= v20 >> 1)
          {
            sub_1D2D03FCC(v20 > 1, v21, 1);
            v12 = v33;
          }
          v22 = *(_QWORD *)(v0 + 320);
          ++v15;
          *(_QWORD *)(v12 + 16) = v21;
          v23 = v12 + v16;
          *(_QWORD *)(v23 + 32) = v18;
          *(_QWORD *)(v23 + 40) = v19;
          v16 += 16;
          v17 += 6;
        }
        while (v15 != v22);
        v11 = v28;
        v8 = v29;
        v9 = v27;
      }
      v24 = MEMORY[0x1D82479C0](v12, MEMORY[0x1E0DEA968]);
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 168) = sub_1D2CF78E0(v24, v26, &v32);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v8, v9, "Successfully added languages: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v30, -1, -1);
      MEMORY[0x1D8248974](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)(v0 + 160) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    sub_1D2D9DF80();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2CFE43C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2CFE4A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  NSObject *v28;
  void *v29;
  _QWORD *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  v1 = *(void **)(v0 + 120);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v3 = v1;
  v4 = v1;
  v5 = sub_1D2D9C8DC();
  v6 = sub_1D2D9E034();
  if (os_log_type_enabled(v5, v6))
  {
    v31 = v6;
    v7 = *(_QWORD *)(v0 + 320);
    v8 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v8 = 134218498;
    *(_QWORD *)(v0 + 136) = v7;
    sub_1D2D9E1B4();
    *(_WORD *)(v8 + 12) = 2082;
    v9 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v27 = v8;
      v28 = v5;
      v29 = v1;
      v10 = *(_QWORD *)(v0 + 320);
      v33 = v0;
      v11 = *(_QWORD *)(v0 + 184);
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1D2D03FCC(0, v10, 0);
      v12 = 0;
      v9 = v35;
      v13 = *(_QWORD *)(v35 + 16);
      v14 = 16 * v13;
      v15 = (uint64_t *)(v11 + 40);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v35 = v9;
        v18 = *(_QWORD *)(v9 + 24);
        v19 = v13 + v12 + 1;
        swift_bridgeObjectRetain();
        if (v13 + v12 >= v18 >> 1)
        {
          sub_1D2D03FCC(v18 > 1, v13 + v12 + 1, 1);
          v9 = v35;
        }
        v20 = *(_QWORD *)(v33 + 320);
        ++v12;
        *(_QWORD *)(v9 + 16) = v19;
        v21 = v9 + v14;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v17;
        v14 += 16;
        v15 += 6;
      }
      while (v12 != v20);
      v0 = v33;
      v5 = v28;
      v1 = v29;
      v8 = v27;
    }
    v22 = MEMORY[0x1D82479C0](v9, MEMORY[0x1E0DEA968]);
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_1D2CF78E0(v22, v24, &v34);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2112;
    v25 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 152) = v25;
    sub_1D2D9E1B4();
    *v30 = v25;

    _os_log_impl(&dword_1D2CC0000, v5, v31, "Failed to save %ld languages: %{public}s; %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v30, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v32, -1, -1);
    MEMORY[0x1D8248974](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  *(_QWORD *)(v0 + 128) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  sub_1D2D9DF80();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static LanguagesInstallService.add(pair:useCellular:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint8_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  LODWORD(v3) = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7170);
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalePair();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v12 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED588700);
  sub_1D2D01568(a1, (uint64_t)v11);
  v13 = sub_1D2D9C8DC();
  v14 = sub_1D2D9E01C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = (int)v3;
    v3 = (uint8_t *)v15;
    v16 = swift_slowAlloc();
    v26 = a3;
    v23 = v16;
    v24 = a1;
    *(_DWORD *)v3 = 136446210;
    v22[1] = v3 + 4;
    v28 = 0;
    v29 = 0xE000000000000000;
    v30 = v16;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v28 = 0x203A656372756F73;
    v29 = 0xE800000000000000;
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    v28 = sub_1D2CF78E0(v28, v29, &v30);
    a1 = v24;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2D015AC((uint64_t)v11);
    _os_log_impl(&dword_1D2CC0000, v13, v14, "Add locale pair: %{public}s", v3, 0xCu);
    v17 = v23;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v17, -1, -1);
    v18 = v3;
    LOBYTE(v3) = v25;
    MEMORY[0x1D8248974](v18, -1, -1);
  }
  else
  {
    sub_1D2D015AC((uint64_t)v11);
  }

  v20 = MEMORY[0x1E0C80A78](v19);
  v22[-2] = a1;
  LOBYTE(v22[-1]) = v3 & 1;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v27 + 104))(v8, *MEMORY[0x1E0DF0A50], v6, v20);
  return sub_1D2D9DFA4();
}

uint64_t sub_1D2CFEBC0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v20[12];
  int v21;

  v21 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LocalePair();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1D2D9DF14();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1D2D01568(a2, (uint64_t)&v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = (*(unsigned __int8 *)(v6 + 80) + v16 + v11 + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  sub_1D2D0180C((uint64_t)&v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], v18 + v16);
  *(_BYTE *)(v18 + v16 + v11) = v21;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v18 + v17, v8, v5);
  sub_1D2D06D10((uint64_t)v14, (uint64_t)&unk_1EFCA71B8, v18);
  return swift_release();
}

uint64_t sub_1D2CFED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 265) = a5;
  *(_QWORD *)(v6 + 344) = a4;
  *(_QWORD *)(v6 + 352) = a6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71C0);
  *(_QWORD *)(v6 + 360) = v7;
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 376) = swift_task_alloc();
  *(_QWORD *)(v6 + 384) = type metadata accessor for LocalePair();
  *(_QWORD *)(v6 + 392) = swift_task_alloc();
  *(_QWORD *)(v6 + 400) = swift_task_alloc();
  *(_QWORD *)(v6 + 408) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  *(_QWORD *)(v6 + 416) = v8;
  *(_QWORD *)(v6 + 424) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 432) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  *(_QWORD *)(v6 + 440) = v9;
  *(_QWORD *)(v6 + 448) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 456) = swift_task_alloc();
  v10 = sub_1D2D9C7EC();
  *(_QWORD *)(v6 + 464) = v10;
  *(_QWORD *)(v6 + 472) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 480) = swift_task_alloc();
  *(_QWORD *)(v6 + 488) = swift_task_alloc();
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  *(_QWORD *)(v6 + 504) = swift_task_alloc();
  *(_QWORD *)(v6 + 512) = swift_task_alloc();
  *(_QWORD *)(v6 + 520) = swift_task_alloc();
  *(_QWORD *)(v6 + 528) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2CFEEEC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;

  v54 = *(_QWORD *)(v0 + 520);
  v1 = *(_QWORD *)(v0 + 512);
  v61 = *(_QWORD *)(v0 + 472);
  v63 = *(_QWORD *)(v0 + 504);
  v57 = *(_QWORD *)(v0 + 464);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
  ((void (*)(_QWORD, _QWORD))v2)(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 344));
  *(_QWORD *)(v0 + 16) = sub_1D2D9C714();
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = 45;
  *(_QWORD *)(v0 + 40) = 0xE100000000000000;
  *(_QWORD *)(v0 + 48) = 95;
  *(_QWORD *)(v0 + 56) = 0xE100000000000000;
  sub_1D2CD1430();
  v4 = sub_1D2D9E1E4();
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 80) = 45;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 88) = 0xE100000000000000;
  *(_QWORD *)(v0 + 96) = 95;
  *(_QWORD *)(v0 + 104) = 0xE100000000000000;
  v7 = sub_1D2D9E1E4();
  v9 = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 536) = v7;
  *(_QWORD *)(v0 + 544) = v9;
  swift_bridgeObjectRetain_n();
  v66 = v9;
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v10 = Locale.sqDisplayName(context:in:)(0, v1);
  v12 = v11;
  v13 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v13(v1, v57);
  v14 = v63;
  v64 = v2;
  v2(v14, v54, v57);
  v15 = *(_QWORD *)(v0 + 520);
  v59 = v7;
  if (v12)
  {
    v62 = v10;
    v16 = *(_QWORD *)(v0 + 464);
    v13(*(_QWORD *)(v0 + 504), v16);
    v13(v15, v16);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 504);
    v17 = *(_QWORD *)(v0 + 512);
    v19 = *(_QWORD *)(v0 + 464);
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v62 = Locale.sqDisplaySubname(context:in:)(0, v17);
    v20 = v17;
    v12 = v21;
    v13(v20, v19);
    v13(v18, v19);
    v13(v15, v19);
    if (!v12)
    {
      v12 = v66;
      swift_bridgeObjectRetain();
      v62 = v7;
    }
  }
  v58 = v12;
  *(_QWORD *)(v0 + 552) = v12;
  v22 = *(_QWORD *)(v0 + 528);
  v23 = *(_QWORD *)(v0 + 512);
  v24 = *(_QWORD *)(v0 + 496);
  v53 = *(_QWORD *)(v0 + 488);
  v55 = *(_QWORD *)(v0 + 480);
  v25 = *(_QWORD *)(v0 + 464);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRelease();
  v13(v22, v25);
  v64(v24, v27 + *(int *)(v26 + 20), v25);
  *(_QWORD *)(v0 + 112) = sub_1D2D9C714();
  *(_QWORD *)(v0 + 120) = v28;
  *(_QWORD *)(v0 + 128) = 45;
  *(_QWORD *)(v0 + 136) = 0xE100000000000000;
  *(_QWORD *)(v0 + 144) = 95;
  *(_QWORD *)(v0 + 152) = 0xE100000000000000;
  v29 = sub_1D2D9E1E4();
  v31 = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 160) = v29;
  *(_QWORD *)(v0 + 168) = v31;
  *(_QWORD *)(v0 + 176) = 45;
  *(_QWORD *)(v0 + 184) = 0xE100000000000000;
  *(_QWORD *)(v0 + 192) = 95;
  *(_QWORD *)(v0 + 200) = 0xE100000000000000;
  v32 = sub_1D2D9E1E4();
  v34 = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 560) = v32;
  *(_QWORD *)(v0 + 568) = v34;
  swift_bridgeObjectRetain_n();
  v60 = v32;
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v35 = Locale.sqDisplayName(context:in:)(0, v23);
  v37 = v36;
  v13(v23, v25);
  v64(v55, v53, v25);
  if (v37)
  {
    v65 = v35;
    v38 = *(_QWORD *)(v0 + 488);
    v39 = *(_QWORD *)(v0 + 464);
    v13(*(_QWORD *)(v0 + 480), v39);
    v13(v38, v39);
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 512);
    v42 = *(_QWORD *)(v0 + 480);
    v41 = *(_QWORD *)(v0 + 488);
    v43 = *(_QWORD *)(v0 + 464);
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v65 = Locale.sqDisplaySubname(context:in:)(0, v40);
    v37 = v44;
    v13(v40, v43);
    v13(v42, v43);
    v13(v41, v43);
    if (!v37)
    {
      swift_bridgeObjectRetain();
      v65 = v60;
      v37 = v34;
    }
  }
  *(_QWORD *)(v0 + 576) = v37;
  v45 = *(_QWORD *)(v0 + 496);
  v46 = *(_QWORD *)(v0 + 464);
  v47 = *(_QWORD *)(v0 + 432);
  v56 = *(_QWORD *)(v0 + 424);
  v48 = *(_QWORD *)(v0 + 416);
  v49 = *(unsigned __int8 *)(v0 + 265);
  swift_bridgeObjectRelease();
  v13(v45, v46);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586C48);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1D2DA0CB0;
  *(_QWORD *)(v50 + 32) = v59;
  *(_QWORD *)(v50 + 40) = v66;
  *(_QWORD *)(v50 + 48) = 0;
  *(_BYTE *)(v50 + 56) = 0;
  *(_QWORD *)(v50 + 64) = v62;
  *(_QWORD *)(v50 + 72) = v58;
  *(_QWORD *)(v50 + 80) = v60;
  *(_QWORD *)(v50 + 88) = v34;
  *(_QWORD *)(v50 + 96) = 0;
  *(_BYTE *)(v50 + 104) = 0;
  *(_QWORD *)(v50 + 112) = v65;
  *(_QWORD *)(v50 + 120) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static LanguagesInstallService.add(_:useCellular:)(v50, v49);
  swift_bridgeObjectRelease();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v47, v48);
  v51 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v51;
  *v51 = v0;
  v51[1] = sub_1D2CFF4A0;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2CFF4A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = *v1 + 266;
  swift_task_dealloc();
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 568);
    *(_QWORD *)(v2 + 752) = *(_QWORD *)(v2 + 576);
    *(_QWORD *)(v2 + 744) = v4;
    *(_OWORD *)(v3 + 462) = *(_OWORD *)(v2 + 544);
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 576);
    v6 = *(_QWORD *)(v2 + 568);
    v7 = *(_QWORD *)(v2 + 560);
    v8 = *(_QWORD *)(v2 + 552);
    v9 = *(_QWORD *)(v2 + 544);
    *(_QWORD *)(v2 + 648) = *(_QWORD *)(v2 + 536);
    *(_QWORD *)(v2 + 640) = v9;
    *(_QWORD *)(v2 + 632) = 0;
    *(_QWORD *)(v2 + 624) = v8;
    *(_QWORD *)(v2 + 616) = v7;
    *(_QWORD *)(v2 + 608) = v6;
    *(_QWORD *)(v2 + 600) = 0;
    *(_WORD *)v3 = 0;
    *(_QWORD *)(v2 + 592) = v5;
  }
  return swift_task_switch();
}

uint64_t sub_1D2CFF564()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  BOOL v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  char v30;
  char v31;
  _BOOL8 v32;
  int v33;
  double v35;
  double v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _BYTE *v59;
  uint64_t v60;
  char v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  char v67;
  uint64_t v68;
  uint64_t v69[2];

  v1 = *(_QWORD *)(v0 + 336);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
    if (qword_1ED5878C8 != -1)
      swift_once();
    v21 = *(_QWORD *)(v0 + 408);
    v22 = *(_QWORD *)(v0 + 344);
    v23 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v22, v21);
    v24 = sub_1D2D9C8DC();
    v25 = sub_1D2D9E01C();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(_QWORD *)(v0 + 408);
    if (v26)
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_DWORD *)v28 = 136446210;
      v68 = v29;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v69[0] = 0x203A656372756F73;
      v69[1] = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v60 + 288) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v68);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2D015AC(v27);
      _os_log_impl(&dword_1D2CC0000, v24, v25, "Successfully added locale pair: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      v0 = v60;
      MEMORY[0x1D8248974](v29, -1, -1);
      MEMORY[0x1D8248974](v28, -1, -1);
    }
    else
    {
      sub_1D2D015AC(*(_QWORD *)(v0 + 408));
    }

    *(_QWORD *)(v0 + 280) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8);
    sub_1D2D9DF80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = (_BYTE *)(v0 + 264);
  v3 = *(_QWORD *)(v1 + 16);
  v59 = (_BYTE *)(v0 + 264);
  if (!v3)
  {
    v30 = *(_BYTE *)(v0 + 267);
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v0 + 648);
    v5 = *(_QWORD *)(v0 + 640);
    v17 = *(double *)(v0 + 632);
    v6 = *(_QWORD *)(v0 + 624);
    v16 = *(_QWORD *)(v0 + 616);
    v15 = *(_QWORD *)(v0 + 608);
    v19 = *(double *)(v0 + 600);
    v20 = *(_BYTE *)(v0 + 266);
    v18 = *(_QWORD *)(v0 + 592);
    if ((v30 & 1) != 0)
    {
LABEL_31:
      if (v17 != 0.0)
      {
        v31 = 1;
        goto LABEL_35;
      }
      if ((v20 & 1) == 0)
      {
        v20 = 0;
        v17 = 0.0;
        v31 = 1;
        v36 = v19;
        goto LABEL_44;
      }
      v17 = 0.0;
      v32 = *(_QWORD *)&v19 != 0;
      v20 = 1;
      v31 = 1;
      v33 = 1;
      goto LABEL_46;
    }
    if ((*(_BYTE *)(v0 + 266) & 1) != 0)
      goto LABEL_34;
LABEL_39:
    v20 = 0;
    v31 = 0;
    v33 = 0;
    v35 = (v17 + v19) * 0.5;
    goto LABEL_45;
  }
  v4 = *(_QWORD *)(v0 + 648);
  v5 = *(_QWORD *)(v0 + 640);
  v66 = *(double *)(v0 + 632);
  v67 = *(_BYTE *)(v0 + 267);
  v6 = *(_QWORD *)(v0 + 624);
  v63 = *(_QWORD *)(v0 + 616);
  v64 = *(_QWORD *)(v0 + 608);
  v61 = *(_BYTE *)(v0 + 266);
  v62 = *(double *)(v0 + 600);
  v65 = *(_QWORD *)(v0 + 592);
  v7 = swift_bridgeObjectRetain() + 40;
  do
  {
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(_QWORD *)v7;
    v10 = *(double *)(v7 + 8);
    v11 = *(_BYTE *)(v7 + 16);
    v12 = *(_QWORD *)(v7 + 32);
    if (v4 == v8 && v5 == v9)
    {
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if ((sub_1D2D9E52C() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v4 = v8;
      v5 = v9;
LABEL_11:
      v66 = v10;
      v67 = v11;
      v6 = v12;
      goto LABEL_12;
    }
    if (v63 == v8 && v64 == v9)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      v61 = v11;
      v62 = v10;
      v65 = v12;
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    if ((sub_1D2D9E52C() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v63 = v8;
      v64 = v9;
      goto LABEL_22;
    }
LABEL_13:
    v7 += 48;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease_n();
  if ((v67 & 1) != 0)
  {
    v2 = v59;
    v16 = v63;
    v15 = v64;
    v17 = v66;
    v18 = v65;
    v20 = v61;
    v19 = v62;
    goto LABEL_31;
  }
  v2 = v59;
  v16 = v63;
  v15 = v64;
  v17 = v66;
  v18 = v65;
  v19 = v62;
  if ((v61 & 1) == 0)
    goto LABEL_39;
LABEL_34:
  v31 = 0;
  v20 = 1;
  if (v19 != 0.0)
  {
LABEL_35:
    v32 = 1;
    v33 = 1;
    goto LABEL_46;
  }
  v36 = v17;
LABEL_44:
  v33 = 0;
  v35 = v36 * 0.5 + 0.5;
LABEL_45:
  v32 = *(_QWORD *)&v35;
LABEL_46:
  *(_QWORD *)(v60 + 712) = v4;
  *(_QWORD *)(v60 + 704) = v5;
  *(double *)(v60 + 696) = v17;
  v2[5] = v31;
  *(_QWORD *)(v60 + 688) = v6;
  *(_QWORD *)(v60 + 680) = v16;
  *(_QWORD *)(v60 + 672) = v15;
  *(double *)(v60 + 664) = v19;
  v2[4] = v20 & 1;
  *(_QWORD *)(v60 + 656) = v18;
  if (qword_1ED5878C8 != -1)
    swift_once();
  v37 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v37, (uint64_t)qword_1ED588700);
  v38 = sub_1D2D9C8DC();
  v39 = sub_1D2D9E028();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v42 = v33;
    v43 = v41;
    *(_QWORD *)(v60 + 328) = v41;
    *(_DWORD *)v40 = 136446210;
    v44 = v42;
    if (v42)
    {
      if (v32)
        v45 = 0xD000000000000014;
      else
        v45 = 0x656C6C6174736E69;
      if (v32)
        v46 = 0x80000001D2DA8C20;
      else
        v46 = 0xE900000000000064;
    }
    else
    {
      *(_QWORD *)(v60 + 208) = 0;
      *(_QWORD *)(v60 + 216) = 0xE000000000000000;
      sub_1D2D9DDA0();
      sub_1D2D9DFBC();
      sub_1D2D9DDA0();
      v45 = *(_QWORD *)(v60 + 208);
      v46 = *(_QWORD *)(v60 + 216);
    }
    *(_QWORD *)(v40 + 4) = sub_1D2CF78E0(v45, v46, (uint64_t *)(v60 + 328));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v38, v39, "Add locale pair state yield: %{public}s", (uint8_t *)v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v43, -1, -1);
    MEMORY[0x1D8248974](v40, -1, -1);

    v33 = v44;
  }
  else
  {

  }
  v47 = v60;
  v49 = *(_QWORD *)(v60 + 368);
  v48 = *(_QWORD *)(v60 + 376);
  v50 = *(_QWORD *)(v60 + 360);
  *(_QWORD *)(v60 + 256) = v32;
  *v59 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8);
  sub_1D2D9DF74();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  if (v32)
    v51 = 0;
  else
    v51 = v33;
  if (v51 == 1)
  {
    sub_1D2D01568(*(_QWORD *)(v60 + 344), *(_QWORD *)(v60 + 400));
    v52 = sub_1D2D9C8DC();
    v53 = sub_1D2D9E01C();
    v54 = os_log_type_enabled(v52, v53);
    v55 = *(_QWORD *)(v60 + 400);
    if (v54)
    {
      v56 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v69[0] = v57;
      *(_DWORD *)v56 = 136446210;
      *(_QWORD *)(v60 + 224) = 0;
      *(_QWORD *)(v60 + 232) = 0xE000000000000000;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v60 + 240) = 0x203A656372756F73;
      *(_QWORD *)(v60 + 248) = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v56 + 4) = sub_1D2CF78E0(*(_QWORD *)(v60 + 240), *(_QWORD *)(v60 + 248), v69);
      swift_bridgeObjectRelease();
      sub_1D2D015AC(v55);
      _os_log_impl(&dword_1D2CC0000, v52, v53, "Install complete for locale pair: %{public}s", (uint8_t *)v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v57, -1, -1);
      MEMORY[0x1D8248974](v56, -1, -1);
    }
    else
    {
      sub_1D2D015AC(*(_QWORD *)(v60 + 400));
    }

    *(_QWORD *)(v60 + 304) = 0;
    sub_1D2D9DF80();
    v47 = v60;
  }
  v58 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v47 + 720) = v58;
  *v58 = v47;
  v58[1] = sub_1D2CFFFC0;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2CFFFC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  char v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 704);
    v4 = *(_QWORD *)(v2 + 688);
    v5 = *(_QWORD *)(v2 + 672);
    *(_QWORD *)(v2 + 752) = *(_QWORD *)(v2 + 656);
    *(_QWORD *)(v2 + 744) = v5;
    *(_QWORD *)(v2 + 736) = v4;
    *(_QWORD *)(v2 + 728) = v3;
  }
  else
  {
    v6 = *(_OWORD *)(v2 + 696);
    v7 = *(_BYTE *)(v2 + 269);
    v8 = *(_OWORD *)(v2 + 680);
    v9 = *(_OWORD *)(v2 + 664);
    v10 = *(_BYTE *)(v2 + 268);
    v11 = *(_QWORD *)(v2 + 656);
    *(_QWORD *)(v2 + 648) = *(_QWORD *)(v2 + 712);
    *(_OWORD *)(v2 + 632) = v6;
    *(_BYTE *)(v2 + 267) = v7;
    *(_OWORD *)(v2 + 616) = v8;
    *(_OWORD *)(v2 + 600) = v9;
    *(_BYTE *)(v2 + 266) = v10;
    *(_QWORD *)(v2 + 592) = v11;
  }
  return swift_task_switch();
}

uint64_t sub_1D2D00094()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[3];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  v1 = *(void **)(v0 + 320);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED588700);
  sub_1D2D01568(v3, v2);
  v5 = v1;
  v6 = v1;
  v7 = sub_1D2D9C8DC();
  v8 = sub_1D2D9E034();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 392);
  if (v9)
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16[0] = v13;
    *(_DWORD *)v11 = 136446466;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v16[1] = 0x203A656372756F73;
    v16[2] = 0xE800000000000000;
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 296) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, v16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2D015AC(v10);
    *(_WORD *)(v11 + 12) = 2112;
    v14 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 272) = v14;
    sub_1D2D9E1B4();
    *v12 = v14;

    _os_log_impl(&dword_1D2CC0000, v7, v8, "Failed to add locale pair %{public}s: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v13, -1, -1);
    MEMORY[0x1D8248974](v11, -1, -1);
  }
  else
  {
    sub_1D2D015AC(*(_QWORD *)(v0 + 392));

  }
  *(_QWORD *)(v0 + 312) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8);
  sub_1D2D9DF80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static LanguagesInstallService.remove(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v8 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E01C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v25 = a2;
    v12 = v11;
    v13 = swift_slowAlloc();
    v24 = v4;
    v14 = v13;
    *(_DWORD *)v12 = 134349314;
    v26 = *(_QWORD *)(a1 + 16);
    v27 = v13;
    v23 = v5;
    sub_1D2D9E1B4();
    *(_WORD *)(v12 + 12) = 2082;
    v15 = swift_bridgeObjectRetain();
    v16 = MEMORY[0x1D82479C0](v15, &type metadata for LanguageModel);
    v18 = v17;
    swift_bridgeObjectRelease();
    v26 = sub_1D2CF78E0(v16, v18, &v27);
    v5 = v23;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v9, v10, "Request to remove %{public}ld languages: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    v19 = v14;
    v4 = v24;
    MEMORY[0x1D8248974](v19, -1, -1);
    MEMORY[0x1D8248974](v12, -1, -1);

  }
  else
  {

    v20 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x1E0C80A78](v20);
  *(&v22 - 2) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF0A50], v4);
  return sub_1D2D9DFA4();
}

uint64_t sub_1D2D00720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  sub_1D2D06D10((uint64_t)v9, (uint64_t)&unk_1EFCA7188, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1D2D00868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[23] = a4;
  v5[24] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7190);
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v7 = sub_1D2D9C7EC();
  v5[28] = v7;
  v5[29] = *(_QWORD *)(v7 - 8);
  v5[30] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v5[31] = v8;
  v5[32] = *(_QWORD *)(v8 - 8);
  v5[33] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  v5[34] = v9;
  v5[35] = *(_QWORD *)(v9 - 8);
  v5[36] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  v5[37] = v10;
  v5[38] = *(_QWORD *)(v10 - 8);
  v5[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D00978()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;

  v1 = v0[23];
  v2 = *(_QWORD *)(v1 + 16);
  v0[40] = v2;
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v26 = v0[29];
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v2, 0);
    v4 = (_QWORD *)(v1 + 72);
    do
    {
      v6 = *(v4 - 5);
      v5 = *(v4 - 4);
      v7 = *v4;
      v29 = *(v4 - 1);
      v30 = v2;
      if (*((_BYTE *)v4 - 16) == 1 && *(v4 - 3))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v8 = v0[30];
        v27 = v0[28];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1D2D9C708();
        v0[12] = sub_1D2D9C714();
        v0[13] = v9;
        v0[10] = 45;
        v0[11] = 0xE100000000000000;
        v0[8] = 95;
        v0[9] = 0xE100000000000000;
        sub_1D2CD1430();
        v10 = sub_1D2D9E1E4();
        v12 = v11;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v8, v27);
        v0[6] = v10;
        v0[7] = v12;
        v0[4] = 45;
        v0[5] = 0xE100000000000000;
        v0[2] = 95;
        v0[3] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v6 = sub_1D2D9E1E4();
        v14 = v13;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = v14;
      }
      v3 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v3 = v31;
      }
      v16 = *(_QWORD *)(v3 + 16);
      v15 = *(_QWORD *)(v3 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1D2D03F2C(v15 > 1, v16 + 1, 1);
        v3 = v31;
      }
      *(_QWORD *)(v3 + 16) = v16 + 1;
      v17 = v3 + 48 * v16;
      *(_QWORD *)(v17 + 32) = v6;
      *(_QWORD *)(v17 + 40) = v5;
      *(_QWORD *)(v17 + 48) = 1;
      *(_BYTE *)(v17 + 56) = 1;
      *(_QWORD *)(v17 + 64) = v29;
      *(_QWORD *)(v17 + 72) = v7;
      v4 += 6;
      --v2;
    }
    while (v30 != 1);
  }
  v18 = v0[36];
  v28 = v0[35];
  v20 = v0[33];
  v19 = v0[34];
  v22 = v0[31];
  v21 = v0[32];
  v23 = swift_task_alloc();
  *(_QWORD *)(v23 + 16) = v3;
  *(_BYTE *)(v23 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, *MEMORY[0x1E0DF0A50], v22);
  sub_1D2D9DFA4();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v18, v19);
  v24 = (_QWORD *)swift_task_alloc();
  v0[41] = v24;
  *v24 = v0;
  v24[1] = sub_1D2D00D00;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D00D00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D00D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 208);
    v2 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 128) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    sub_1D2D9DF74();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v5;
    *v5 = v0;
    v5[1] = sub_1D2D0111C;
    return sub_1D2D9DF98();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    if (qword_1ED5878C8 != -1)
      swift_once();
    v7 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED588700);
    swift_bridgeObjectRetain_n();
    v8 = sub_1D2D9C8DC();
    v9 = sub_1D2D9E01C();
    if (os_log_type_enabled(v8, v9))
    {
      v30 = v9;
      v10 = *(_QWORD *)(v0 + 320);
      v11 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32 = v29;
      *(_DWORD *)v11 = 136446210;
      v12 = MEMORY[0x1E0DEE9D8];
      if (v10)
      {
        v27 = v11;
        v28 = v8;
        v13 = *(_QWORD *)(v0 + 320);
        v14 = *(_QWORD *)(v0 + 184);
        v33 = MEMORY[0x1E0DEE9D8];
        sub_1D2D03FCC(0, v13, 0);
        v15 = 0;
        v12 = v33;
        v31 = *(_QWORD *)(v33 + 16);
        v16 = 16 * v31;
        v17 = (uint64_t *)(v14 + 40);
        do
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v33 = v12;
          v20 = *(_QWORD *)(v12 + 24);
          v21 = v31 + v15 + 1;
          swift_bridgeObjectRetain();
          if (v31 + v15 >= v20 >> 1)
          {
            sub_1D2D03FCC(v20 > 1, v21, 1);
            v12 = v33;
          }
          v22 = *(_QWORD *)(v0 + 320);
          ++v15;
          *(_QWORD *)(v12 + 16) = v21;
          v23 = v12 + v16;
          *(_QWORD *)(v23 + 32) = v18;
          *(_QWORD *)(v23 + 40) = v19;
          v16 += 16;
          v17 += 6;
        }
        while (v15 != v22);
        v8 = v28;
        v11 = v27;
      }
      v24 = MEMORY[0x1D82479C0](v12, MEMORY[0x1E0DEA968]);
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 176) = sub_1D2CF78E0(v24, v26, &v32);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v8, v30, "Successfully removed languages: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v29, -1, -1);
      MEMORY[0x1D8248974](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)(v0 + 112) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    sub_1D2D9DF80();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D0111C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D01180()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  NSObject *v28;
  void *v29;
  _QWORD *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  v1 = *(void **)(v0 + 168);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v3 = v1;
  v4 = v1;
  v5 = sub_1D2D9C8DC();
  v6 = sub_1D2D9E034();
  if (os_log_type_enabled(v5, v6))
  {
    v31 = v6;
    v7 = *(_QWORD *)(v0 + 320);
    v8 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v8 = 134349570;
    *(_QWORD *)(v0 + 152) = v7;
    sub_1D2D9E1B4();
    *(_WORD *)(v8 + 12) = 2082;
    v9 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v27 = v8;
      v28 = v5;
      v29 = v1;
      v10 = *(_QWORD *)(v0 + 320);
      v33 = v0;
      v11 = *(_QWORD *)(v0 + 184);
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1D2D03FCC(0, v10, 0);
      v12 = 0;
      v9 = v35;
      v13 = *(_QWORD *)(v35 + 16);
      v14 = 16 * v13;
      v15 = (uint64_t *)(v11 + 40);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v35 = v9;
        v18 = *(_QWORD *)(v9 + 24);
        v19 = v13 + v12 + 1;
        swift_bridgeObjectRetain();
        if (v13 + v12 >= v18 >> 1)
        {
          sub_1D2D03FCC(v18 > 1, v13 + v12 + 1, 1);
          v9 = v35;
        }
        v20 = *(_QWORD *)(v33 + 320);
        ++v12;
        *(_QWORD *)(v9 + 16) = v19;
        v21 = v9 + v14;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v17;
        v14 += 16;
        v15 += 6;
      }
      while (v12 != v20);
      v0 = v33;
      v5 = v28;
      v1 = v29;
      v8 = v27;
    }
    v22 = MEMORY[0x1D82479C0](v9, MEMORY[0x1E0DEA968]);
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_1D2CF78E0(v22, v24, &v34);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2112;
    v25 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 136) = v25;
    sub_1D2D9E1B4();
    *v30 = v25;

    _os_log_impl(&dword_1D2CC0000, v5, v31, "Failed to remove %{public}ld languages: %{public}s: %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v30, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v32, -1, -1);
    MEMORY[0x1D8248974](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  *(_QWORD *)(v0 + 160) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  sub_1D2D9DF80();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0155C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2CFDA14(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1D2D01568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D015AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2D015E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2CFEBC0(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1D2D015F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D00720(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for LanguagesInstallService()
{
  return &type metadata for LanguagesInstallService;
}

uint64_t sub_1D2D0160C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D2D0168C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1D2CE1A58;
  return sub_1D2D00868(a1, v5, v6, v7, v8);
}

uint64_t sub_1D2D01724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for LocalePair();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + v3 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  v8 = v0 + v3;
  v9 = sub_1D2D9C7EC();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v8 + *(int *)(v1 + 20), v9);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1D2D0180C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D01850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for LocalePair() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A8) - 8) + 80);
  v8 = v6 + v7 + 1;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  LOBYTE(v6) = *(_BYTE *)(v1 + v6);
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1D2CE16D4;
  return sub_1D2CFED78(a1, v9, v10, v11, v6, v12);
}

uint64_t sub_1D2D01914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D2D01994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = v1 + ((v4 + 41) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1D2CE1A58;
  return sub_1D2CFDB6C(a1, v5, v6, v7, v8, v9);
}

unint64_t sub_1D2D01A34()
{
  unint64_t result;

  result = qword_1ED586C38;
  if (!qword_1ED586C38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED586C38);
  }
  return result;
}

uint64_t sub_1D2D01A74(uint64_t a1)
{
  return sub_1D2D01B0C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1D2CFD07C);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D2D01B00(uint64_t a1)
{
  return sub_1D2D01B0C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1D2CFD5C8);
}

uint64_t sub_1D2D01B0C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t LanguageModel.init(identifier:state:displayName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a4;
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v31[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v31[-v19];
  v33 = *a3;
  v32 = *((unsigned __int8 *)a3 + 8);
  v40 = a1;
  v41 = a2;
  v38 = 45;
  v39 = 0xE100000000000000;
  v36 = 95;
  v37 = 0xE100000000000000;
  sub_1D2CD1430();
  v21 = sub_1D2D9E1E4();
  v23 = v22;
  swift_bridgeObjectRelease();
  v34 = v21;
  if (a5)
  {
    swift_bridgeObjectRetain();
LABEL_5:
    v26 = v33;
    v27 = v32;
    v28 = v35;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain_n();
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v35 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v17);
  a5 = v24;
  v25 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
  v25(v17, v11);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v14, v20, v11);
  if (a5)
  {
    v25(v14, v11);
    v25(v20, v11);
    goto LABEL_5;
  }
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v28 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v17);
  a5 = v30;
  v25(v17, v11);
  v25(v14, v11);
  v25(v20, v11);
  if (!a5)
  {
    swift_bridgeObjectRetain();
    v28 = v34;
    a5 = v23;
  }
  v26 = v33;
  v27 = v32;
LABEL_6:
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a6 = v34;
  *(_QWORD *)(a6 + 8) = v23;
  *(_QWORD *)(a6 + 16) = v26;
  *(_BYTE *)(a6 + 24) = v27;
  *(_QWORD *)(a6 + 32) = v28;
  *(_QWORD *)(a6 + 40) = a5;
  return result;
}

uint64_t sub_1D2D01DC0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_1D2D9DDA0();
    sub_1D2D9DFBC();
    sub_1D2D9DDA0();
  }
  sub_1D2D9DDA0();
  return swift_bridgeObjectRelease();
}

uint64_t LanguageModel.locale.getter()
{
  swift_bridgeObjectRetain();
  return sub_1D2D9C708();
}

uint64_t Array<A>.installedLanguagesExist.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = v1 - 1;
  v3 = (unsigned __int8 *)(a1 + 56);
  do
  {
    v4 = v2;
    if (*((_QWORD *)v3 - 1))
      result = 0;
    else
      result = *v3;
    if ((result & 1) != 0)
      break;
    --v2;
    v3 += 48;
  }
  while (v4);
  return result;
}

uint64_t Array<A>.downloadable.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    v7 = *(v2 - 3);
    v8 = *((unsigned __int8 *)v2 - 16);
    if (v8 != 1 || v7 != 0)
    {
      v11 = *(v2 - 5);
      v10 = *(v2 - 4);
      v12 = *v2;
      v14 = *(v2 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D2D03F2C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v5 = *(_QWORD *)(v3 + 16);
      v4 = *(_QWORD *)(v3 + 24);
      if (v5 >= v4 >> 1)
        sub_1D2D03F2C(v4 > 1, v5 + 1, 1);
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 48 * v5;
      *(_QWORD *)(v6 + 32) = v11;
      *(_QWORD *)(v6 + 40) = v10;
      *(_QWORD *)(v6 + 48) = v7;
      *(_BYTE *)(v6 + 56) = v8;
      *(_QWORD *)(v6 + 64) = v14;
      *(_QWORD *)(v6 + 72) = v12;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.installed.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)(swift_bridgeObjectRetain() + 72);
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (*((_BYTE *)v2 - 16) == 1 && !*(v2 - 3))
    {
      v8 = *(v2 - 5);
      v7 = *(v2 - 4);
      v10 = *(v2 - 1);
      v9 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D2D03F2C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v5 = *(_QWORD *)(v3 + 16);
      v4 = *(_QWORD *)(v3 + 24);
      if (v5 >= v4 >> 1)
        sub_1D2D03F2C(v4 > 1, v5 + 1, 1);
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 48 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v7;
      *(_QWORD *)(v6 + 48) = 0;
      *(_BYTE *)(v6 + 56) = 1;
      *(_QWORD *)(v6 + 64) = v10;
      *(_QWORD *)(v6 + 72) = v9;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t LanguageModel.identifierForDownloads.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D01DC0(v1, v2);
  return 0;
}

uint64_t LanguageModel.init(locale:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v32 = a3;
  v5 = sub_1D2D9C7EC();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - v12;
  v34 = *(_QWORD *)a2;
  v35 = a1;
  v33 = *(unsigned __int8 *)(a2 + 8);
  v40 = sub_1D2D9C714();
  v41 = v14;
  v38 = 45;
  v39 = 0xE100000000000000;
  v36 = 95;
  v37 = 0xE100000000000000;
  sub_1D2CD1430();
  v15 = sub_1D2D9E1E4();
  v17 = v16;
  swift_bridgeObjectRelease();
  v40 = v15;
  v41 = v17;
  v38 = 45;
  v39 = 0xE100000000000000;
  v36 = 95;
  v37 = 0xE100000000000000;
  v18 = v7;
  v19 = sub_1D2D9E1E4();
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v22 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v10);
  v24 = v23;
  v25 = v31;
  v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v10, v5);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v13, v5);
  if (v24)
  {
    v26(v18, v5);
    v26(v13, v5);
  }
  else
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v22 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v10);
    v24 = v27;
    v26(v10, v5);
    v26(v18, v5);
    v26(v13, v5);
    if (!v24)
    {
      swift_bridgeObjectRetain();
      v22 = v19;
      v24 = v21;
    }
  }
  swift_bridgeObjectRelease();
  result = ((uint64_t (*)(uint64_t, uint64_t))v26)(v35, v5);
  v29 = v32;
  *v32 = v19;
  v29[1] = v21;
  v29[2] = v34;
  *((_BYTE *)v29 + 24) = v33;
  v29[4] = v22;
  v29[5] = v24;
  return result;
}

uint64_t static LanguageState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

uint64_t LanguageModel.replacing(state:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v21 = *((unsigned __int8 *)a1 + 8);
  v9 = *(_QWORD *)(v2 + 32);
  v19 = *(_QWORD *)(v2 + 40);
  v20 = v9;
  swift_bridgeObjectRetain();
  sub_1D2D9C708();
  v27 = sub_1D2D9C714();
  v28 = v10;
  v25 = 45;
  v26 = 0xE100000000000000;
  v23 = 95;
  v24 = 0xE100000000000000;
  sub_1D2CD1430();
  v11 = sub_1D2D9E1E4();
  v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v27 = v11;
  v28 = v13;
  v25 = 45;
  v26 = 0xE100000000000000;
  v23 = 95;
  v24 = 0xE100000000000000;
  v14 = v19;
  swift_bridgeObjectRetain();
  v15 = sub_1D2D9E1E4();
  v17 = v16;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v22;
  *(_BYTE *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v14;
  return result;
}

uint64_t LanguageState.combine(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  char v4;
  double v5;
  double v6;

  v3 = *(double *)result;
  v4 = *(_BYTE *)(result + 8);
  v5 = *(double *)v2;
  if (*(_BYTE *)(v2 + 8) == 1)
  {
    if (v5 == 0.0)
    {
      if (*(_BYTE *)(result + 8))
      {
        if (v3 == 0.0)
        {
          *(_QWORD *)a2 = 0;
          *(_BYTE *)(a2 + 8) = 1;
          return result;
        }
        goto LABEL_8;
      }
      v5 = *(double *)result;
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  if (*(_BYTE *)(result + 8))
  {
    if (v3 == 0.0)
    {
LABEL_11:
      v4 = 0;
      v6 = v5 * 0.5 + 0.5;
      goto LABEL_12;
    }
LABEL_8:
    *(_QWORD *)a2 = 1;
    *(_BYTE *)(a2 + 8) = 1;
    return result;
  }
  v6 = (v3 + v5) * 0.5;
LABEL_12:
  *(double *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1D2D02770(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D027AC
                                                            + 4 * asc_1D2DA2480[a1]))(0x6C69614664616572, 0xEB00000000657275);
}

unint64_t sub_1D2D027AC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D2D027C8()
{
  return 0x546C6C6174736E69;
}

uint64_t sub_1D2D027EC()
{
  return 0x466C6C6174736E69;
}

uint64_t sub_1D2D02810()
{
  return 0x6E61697261567369;
}

unint64_t sub_1D2D0282C()
{
  return 0xD000000000000016;
}

uint64_t sub_1D2D02868(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D028A4 + 4 * byte_1D2DA2487[a1]))(0x6C69614664616572, 0xEB00000000657275);
}

unint64_t sub_1D2D028A4()
{
  return 0xD000000000000010;
}

uint64_t sub_1D2D028C0()
{
  return 0x546C6C6174736E69;
}

uint64_t sub_1D2D028E4()
{
  return 0x466C6C6174736E69;
}

uint64_t sub_1D2D02908()
{
  return 0x6E61697261567369;
}

unint64_t sub_1D2D02924()
{
  return 0xD000000000000016;
}

void sub_1D2D02960(char *a1)
{
  sub_1D2D2C708(*a1);
}

void sub_1D2D0296C()
{
  char *v0;

  sub_1D2D702F4(0, *v0);
}

void sub_1D2D02978(uint64_t a1)
{
  char *v1;

  sub_1D2D6FE34(a1, *v1);
}

void sub_1D2D02980(uint64_t a1)
{
  char *v1;

  sub_1D2D702F4(a1, *v1);
}

uint64_t sub_1D2D02988@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D06030();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D029B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D2D02868(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D2D029DC()
{
  unsigned __int8 *v0;

  return sub_1D2D02770(*v0);
}

uint64_t TranslationTaskHint.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 5;
  else
    return 1;
}

TranslationUI::TranslationTaskHint_optional __swiftcall TranslationTaskHint.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 5)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (TranslationUI::TranslationTaskHint_optional)rawValue;
}

uint64_t sub_1D2D02A14()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D02A60()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2D02A94()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

_QWORD *sub_1D2D02ADC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 5)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1D2D02AFC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 5;
  if (!*v1)
    v2 = 1;
  *a1 = v2;
}

uint64_t LocalePair.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t LocalePair.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LocalePair() + 20);
  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LocalePair.init(sourceLocale:targetLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D2D9C7EC();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v9(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for LocalePair() + 20);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v7, a2, v6);
}

uint64_t LocalePair.identifier.getter()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  type metadata accessor for LocalePair();
  v0 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
  v1 = (void *)sub_1D2D9C744();
  v2 = (void *)sub_1D2D9C744();
  v3 = objc_msgSend(v0, sel_initWithSourceLocale_targetLocale_, v1, v2);

  v4 = objc_msgSend(v3, sel_identifier);
  v5 = sub_1D2D9DCD4();

  return v5;
}

uint64_t LocalePair.description.getter()
{
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  type metadata accessor for LocalePair();
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  return 0x203A656372756F73;
}

uint64_t LanguageState.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    if (*(_QWORD *)v0)
      return 0xD000000000000014;
    else
      return 0x656C6C6174736E69;
  }
  else
  {
    sub_1D2D9DDA0();
    sub_1D2D9DFBC();
    sub_1D2D9DDA0();
    return 0;
  }
}

uint64_t sub_1D2D02E68(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

uint64_t LanguageModel.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LanguageModel.state.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t LanguageModel.state.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*LanguageModel.state.modify())()
{
  return CGPointMake;
}

uint64_t LanguageModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LanguageModel.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

BOOL static LanguageModel.< infix(_:_:)()
{
  sub_1D2CD1430();
  return sub_1D2D9E1F0() == -1;
}

uint64_t LanguageModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D01DC0(v1, v2);
  return 0;
}

uint64_t LanguageModel.hashValue.getter()
{
  sub_1D2D9E5C8();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D03114@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2D03120()
{
  sub_1D2D9E5C8();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D03178()
{
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D031BC()
{
  sub_1D2D9E5C8();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

BOOL sub_1D2D03214()
{
  sub_1D2CD1430();
  return sub_1D2D9E1F0() == -1;
}

BOOL sub_1D2D03270()
{
  sub_1D2CD1430();
  return sub_1D2D9E1F0() != -1;
}

BOOL sub_1D2D032CC()
{
  sub_1D2CD1430();
  return sub_1D2D9E1F0() != -1;
}

BOOL sub_1D2D03328()
{
  sub_1D2CD1430();
  return sub_1D2D9E1F0() == -1;
}

uint64_t Array<A>.set.getter(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03FCC(0, v1, 0);
    v2 = v12;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_1D2D03FCC(v8 > 1, v7 + 1, 1);
      v4 += 6;
      *(_QWORD *)(v12 + 16) = v7 + 1;
      v9 = v12 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  v10 = sub_1D2D053CC(v2);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t Array<A>.available.getter(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  v3 = v2;
  v4 = (void *)sub_1D2D9DCB0();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (!v6)
  {

    if (v5)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_isOnDeviceOnlyTranslationForced);

  if (((v8 | v5) & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v9 = Array<A>.installed.getter(a1);
  v10 = Array<A>.downloadable.getter(a1);
  sub_1D2D04D5C(v10);
  return v9;
}

uint64_t Array<A>.downloading.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)(swift_bridgeObjectRetain() + 72);
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (*((_BYTE *)v2 - 16) != 1)
    {
      v8 = *(v2 - 5);
      v7 = *(v2 - 4);
      v9 = *(v2 - 3);
      v11 = *(v2 - 1);
      v10 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D2D03F2C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v5 = *(_QWORD *)(v3 + 16);
      v4 = *(_QWORD *)(v3 + 24);
      if (v5 >= v4 >> 1)
        sub_1D2D03F2C(v4 > 1, v5 + 1, 1);
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 48 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v7;
      *(_QWORD *)(v6 + 48) = v9;
      *(_BYTE *)(v6 + 56) = 0;
      *(_QWORD *)(v6 + 64) = v11;
      *(_QWORD *)(v6 + 72) = v10;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.localeState(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  BOOL v11;
  uint64_t result;
  char v13;

  sub_1D2D9C714();
  sub_1D2CD1430();
  v4 = sub_1D2D9E1E4();
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = (_BYTE *)(a1 + 56);
    while (1)
    {
      v9 = *((_QWORD *)v8 - 1);
      v10 = *v8;
      v11 = *((_QWORD *)v8 - 3) == v4 && *((_QWORD *)v8 - 2) == v6;
      if (v11 || (sub_1D2D9E52C() & 1) != 0)
        break;
      v8 += 48;
      if (!--v7)
        goto LABEL_9;
    }
    result = swift_bridgeObjectRelease();
    v13 = 0;
  }
  else
  {
LABEL_9:
    result = swift_bridgeObjectRelease();
    v9 = 0;
    v10 = 0;
    v13 = 1;
  }
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 9) = v13;
  return result;
}

BOOL sub_1D2D037B0(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t Array<A>.defaultPair(userLanguages:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  _BYTE *v23;
  uint64_t v24;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(unint64_t, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - v9;
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v48 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v48 - v20;
  sub_1D2D9C708();
  sub_1D2D9C708();
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v23 = (_BYTE *)(a1 + 56);
    v24 = *(_QWORD *)(a1 + 16);
    while (*v23 != 1 || *((_QWORD *)v23 - 1) != 0)
    {
      v23 += 48;
      if (!--v24)
        goto LABEL_8;
    }
    v49 = v7;
    v50 = v15;
    v51 = v18;
    v52 = a2;
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03FA0(0, v22, 0);
    v29 = v54;
    v30 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      v54 = v29;
      v32 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1D2D03FA0(v31 > 1, v32 + 1, 1);
        v29 = v54;
      }
      v30 += 48;
      *(_QWORD *)(v29 + 16) = v32 + 1;
      v33 = v29
          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
          + *(_QWORD *)(v5 + 72) * v32;
      v34 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
      v35 = v34(v33, v10, v4);
      --v22;
    }
    while (v22);
    MEMORY[0x1E0C80A78](v35);
    v36 = v50;
    *(&v48 - 2) = (uint64_t)v50;
    if (sub_1D2D037B0((uint64_t (*)(char *))sub_1D2D056D0, (_BOOL8)(&v48 - 4), v29))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
      v37 = v53;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v53, v36, v4);
    }
    else
    {
      v37 = v53;
      v34((unint64_t)v53, v21, v4);
    }
    v34((unint64_t)v21, v37, v4);
    v38 = (void *)objc_opt_self();
    v39 = (void *)sub_1D2D9C744();
    v40 = (void *)sub_1D2D9C744();
    v41 = (void *)sub_1D2D9DE48();
    v42 = objc_msgSend(v38, sel_lt_defaultTargetForSource_systemLocale_availableLocales_targetMap_, v39, v40, v41, 0);

    v43 = v49;
    sub_1D2D9C75C();
    swift_release();

    v44 = *(void (**)(char *, uint64_t))(v5 + 8);
    v45 = v51;
    v44(v51, v4);
    v34((unint64_t)v45, v43, v4);
    v46 = v52;
    v34(v52, v21, v4);
    v47 = type metadata accessor for LocalePair();
    v34(v46 + *(int *)(v47 + 20), v45, v4);
    return ((uint64_t (*)(char *, uint64_t))v44)(v36, v4);
  }
  else
  {
LABEL_8:
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    v26(a2, v21, v4);
    v27 = type metadata accessor for LocalePair();
    return ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(a2 + *(int *)(v27 + 20), v18, v4);
  }
}

uint64_t sub_1D2D03DC0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D2D9C714();
  sub_1D2CD1430();
  v0 = 1;
  v1 = sub_1D2D9E1E4();
  v3 = v2;
  swift_bridgeObjectRelease();
  sub_1D2D9C714();
  v4 = sub_1D2D9E1E4();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (v1 != v4 || v3 != v6)
    v0 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1D2D03F2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D04108(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for LocalePair()
{
  uint64_t result;

  result = qword_1ED5872E0;
  if (!qword_1ED5872E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D03F84(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D0428C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2D03FA0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04B7C(a1, a2, a3, (_QWORD *)*v3, &qword_1EFCA7210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38]);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D03FCC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D043FC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2D03FE8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04B7C(a1, a2, a3, (_QWORD *)*v3, &qword_1EFCA7228, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D04014(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04564(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D04030(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D0474C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2D0404C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D048B8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2D04068(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04B7C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED587360, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D04094(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04B7C(a1, a2, a3, (_QWORD *)*v3, &qword_1EFCA71F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D040C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2D04A14(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2D040DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2D04B7C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED587358, type metadata accessor for VisualTranslationModel);
  *v3 = result;
  return result;
}

uint64_t sub_1D2D04108(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586C48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D0428C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7230);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D043E8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D2D04B7C(a1, a2, a3, a4, &qword_1EFCA7210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38]);
}

uint64_t sub_1D2D043FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D04564(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7218);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7220) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7220) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D0474C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7208);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D048B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7200);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D04A14(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587368);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D04B7C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D04D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1D2D4A9DC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D04EB4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1D2D4AE40(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for TextModel();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t _s13TranslationUI13LanguageModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  char v7;
  uint64_t result;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1D2D9E52C(), result = 0, (v7 & 1) != 0))
  {
    if (v4)
      v9 = v5;
    else
      v9 = 0;
    if (v4)
      v10 = 0;
    else
      v10 = v5;
    if (!v2)
      v9 = v10;
    if ((v3 & 1) != 0)
      return v9;
    else
      return v5 ^ 1;
  }
  return result;
}

uint64_t sub_1D2D0509C(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  sub_1D2D06078();
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA5F50, (uint64_t (*)(uint64_t))sub_1D2D06078, MEMORY[0x1E0DEFCF8]);
  result = sub_1D2D9DFE0();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1D2D9E3AC();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1D8247E58](i, a1);
        sub_1D2D9487C(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1D2D9487C(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D051FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1D2D9C7EC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_1D2CC66E4(&qword_1EFCA6E80, v3, MEMORY[0x1E0CB0E58]);
  v19 = sub_1D2D9DFE0();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v2);
      sub_1D2D94B18((uint64_t)v9, v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1D2D053CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1D2D9DFE0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D2D94D74(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D2D05460(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _OWORD *v4;
  __int128 v5;
  _BYTE v6[8];
  uint64_t v7;
  _OWORD v8[3];

  v2 = *(_QWORD *)(a1 + 16);
  sub_1D2CF2FDC();
  result = sub_1D2D9DFE0();
  v7 = result;
  if (v2)
  {
    v4 = (_OWORD *)(a1 + 32);
    do
    {
      v5 = v4[1];
      v8[0] = *v4;
      v8[1] = v5;
      v8[2] = v4[2];
      sub_1D2CF3DD0((uint64_t)v8);
      sub_1D2D94F20((uint64_t)v6, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D2D05500(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1D2D9C6FC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_1D2CC66E4(&qword_1ED586CD8, v3, MEMORY[0x1E0CB09C8]);
  v19 = sub_1D2D9DFE0();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v2);
      sub_1D2D9519C((uint64_t)v9, v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1D2D056D0()
{
  return sub_1D2D03DC0() & 1;
}

unint64_t sub_1D2D056F0()
{
  unint64_t result;

  result = qword_1EFCA71D8;
  if (!qword_1EFCA71D8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslationTaskHint, &type metadata for TranslationTaskHint);
    atomic_store(result, (unint64_t *)&qword_1EFCA71D8);
  }
  return result;
}

uint64_t sub_1D2D05734()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1D2D05744()
{
  unint64_t result;

  result = qword_1EFCA71E0;
  if (!qword_1EFCA71E0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguageModel, &type metadata for LanguageModel);
    atomic_store(result, (unint64_t *)&qword_1EFCA71E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranslationTaskHint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D057D4 + 4 * byte_1D2DA2493[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D05808 + 4 * byte_1D2DA248E[v4]))();
}

uint64_t sub_1D2D05808(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D05810(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D05818);
  return result;
}

uint64_t sub_1D2D05824(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D0582CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D05830(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D05838(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranslationTaskHint()
{
  return &type metadata for TranslationTaskHint;
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for LocalePair(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1D2D9C7EC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalePair()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D05B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocalePair()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D05B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D2D05BAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C7EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LanguageState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1D2D05C44(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D2D05C60(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageState()
{
  return &type metadata for LanguageState;
}

uint64_t destroy for LanguageModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LanguageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LanguageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageModel()
{
  return &type metadata for LanguageModel;
}

uint64_t getEnumTagSinglePayload for LanguageError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D2D05F68 + 4 * byte_1D2DA249D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D2D05F9C + 4 * byte_1D2DA2498[v4]))();
}

uint64_t sub_1D2D05F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D05FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D05FACLL);
  return result;
}

uint64_t sub_1D2D05FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D05FC0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D2D05FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D05FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguageError()
{
  return &type metadata for LanguageError;
}

unint64_t sub_1D2D05FEC()
{
  unint64_t result;

  result = qword_1EFCA71E8;
  if (!qword_1EFCA71E8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA27F0, &type metadata for LanguageError);
    atomic_store(result, (unint64_t *)&qword_1EFCA71E8);
  }
  return result;
}

uint64_t sub_1D2D06030()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_1D2D06078()
{
  unint64_t result;

  result = qword_1EFCA5F48;
  if (!qword_1EFCA5F48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA5F48);
  }
  return result;
}

uint64_t LanguagesProgressView.init(progress:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t LanguagesProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A58);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v7 = *((_QWORD *)v1 + 2);
  *(_QWORD *)v5 = sub_1D2D9D110();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7238);
  sub_1D2D061CC(v8, v7, (uint64_t)&v5[*(int *)(v9 + 44)], v6);
  v10 = sub_1D2D9DA70();
  sub_1D2CCE114(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA5A58);
}

uint64_t sub_1D2D061CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _BYTE v25[16];

  v8 = sub_1D2D9C7EC();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1D2D9DCA4();
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7250);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v25[-v14];
  *(_QWORD *)v15 = sub_1D2D9D038();
  *((_QWORD *)v15 + 1) = 0x4020000000000000;
  v15[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7258);
  sub_1D2D06448(&v15[*(int *)(v16 + 44)], a4);
  sub_1D2D9DC98();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v19 = sub_1D2D9DD1C();
  v21 = v20;
  v22 = swift_allocObject();
  *(double *)(v22 + 16) = a4;
  *(_QWORD *)(v22 + 24) = a1;
  *(_QWORD *)(v22 + 32) = a2;
  sub_1D2D06B60((uint64_t)v15, (uint64_t)v12);
  sub_1D2D06B60((uint64_t)v12, a3);
  v23 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7260) + 48));
  *v23 = v19;
  v23[1] = v21;
  v23[2] = (uint64_t)sub_1D2D06B40;
  v23[3] = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA7250);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA7250);
}

uint64_t sub_1D2D06438()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D06448@<X0>(char *a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  double v44;

  v42 = a1;
  v3 = sub_1D2D9D098();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D2D9D32C();
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6160);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7268);
  v40 = *(_QWORD *)(v38 - 8);
  v11 = v40;
  MEMORY[0x1E0C80A78](v38);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - v15;
  v41 = (char *)&v38 - v15;
  sub_1D2D9CBA0();
  sub_1D2D9D320();
  sub_1D2CC6C74(&qword_1EFCA6188, &qword_1EFCA6160, MEMORY[0x1E0CD8B78]);
  sub_1D2D06BA8();
  sub_1D2D9D5F0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v18 = v38;
  v17(v16, v13, v38);
  sub_1D2D9D08C();
  sub_1D2D9D080();
  v44 = a2 * 100.0;
  sub_1D2D9D05C();
  sub_1D2D9D080();
  sub_1D2D9D0B0();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v21 = sub_1D2D9D5C0();
  v23 = v22;
  LOBYTE(ObjCClassFromMetadata) = v24 & 1;
  v43 = sub_1D2D9D290();
  v25 = sub_1D2D9D59C();
  v27 = v26;
  v29 = v28;
  LOBYTE(v8) = v30 & 1;
  sub_1D2CCCAB4(v21, v23, ObjCClassFromMetadata);
  swift_bridgeObjectRelease();
  v31 = v40;
  v32 = v41;
  v33 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v33(v13, v41, v18);
  v34 = v42;
  v33(v42, v13, v18);
  v35 = &v34[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7278) + 48)];
  *(_QWORD *)v35 = v25;
  *((_QWORD *)v35 + 1) = v27;
  v35[16] = v8;
  *((_QWORD *)v35 + 3) = v29;
  sub_1D2CCCB0C(v25, v27, v8);
  v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  swift_bridgeObjectRetain();
  v36(v32, v18);
  sub_1D2CCCAB4(v25, v27, v8);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v36)(v13, v18);
}

uint64_t sub_1D2D06824@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A58);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v7 = *((_QWORD *)v1 + 2);
  *(_QWORD *)v5 = sub_1D2D9D110();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7238);
  sub_1D2D061CC(v8, v7, (uint64_t)&v5[*(int *)(v9 + 44)], v6);
  v10 = sub_1D2D9DA70();
  sub_1D2CCE114(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA5A58);
}

uint64_t destroy for LanguagesProgressView()
{
  return swift_release();
}

_QWORD *_s13TranslationUI21LanguagesProgressViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LanguagesProgressView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagesProgressView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesProgressView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesProgressView()
{
  return &type metadata for LanguagesProgressView;
}

unint64_t sub_1D2D06A98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7240;
  if (!qword_1EFCA7240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A60);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA7248, &qword_1EFCA5A58, MEMORY[0x1E0CDFCC0]);
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7240);
  }
  return result;
}

uint64_t sub_1D2D06B1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D06B40()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1D2D06B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2D06BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA7270;
  if (!qword_1EFCA7270)
  {
    v1 = sub_1D2D9D32C();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDC798], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA7270);
  }
  return result;
}

void *sub_1D2D06BF0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1D2D9E3AC())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8247E58](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2D06D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D2D9DF14();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D2D9DF08();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D2CCADA4(a1, (uint64_t *)&unk_1ED5878F0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D2D9DEB4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D2D06E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D06E94(a1, a2, a3, (uint64_t)&unk_1E944B888, &qword_1EFCA7440);
}

uint64_t sub_1D2D06E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D06E94(a1, a2, a3, (uint64_t)&unk_1E944B680, &qword_1EFCA7380);
}

uint64_t sub_1D2D06E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = sub_1D2D9DF14();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_1D2D9DF08();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D2CCADA4(a1, (uint64_t *)&unk_1ED5878F0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D2D9DEB4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_1D2D06FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D06E94(a1, a2, a3, (uint64_t)&unk_1E944B6A8, &qword_1EFCA7398);
}

uint64_t LanguagesService.__allocating_init(task:)(unsigned __int8 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  LanguagesService.init(task:)(a1);
  return v2;
}

uint64_t LanguagesService.models.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t LanguagesService.airplaneModeEnabled.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

Swift::Void __swiftcall LanguagesService.download(_:)(Swift::OpaquePointer a1)
{
  sub_1D2D07150((uint64_t)a1._rawValue, (uint64_t)&unk_1E944B450, (uint64_t)&unk_1EFCA6CD8);
}

Swift::Void __swiftcall LanguagesService.delete(_:)(Swift::OpaquePointer a1)
{
  sub_1D2D07150((uint64_t)a1._rawValue, (uint64_t)&unk_1E944B478, (uint64_t)&unk_1EFCA6CF0);
}

uint64_t sub_1D2D07150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D06D10((uint64_t)v8, a3, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1D2D07224@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D072A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t LanguagesService.models.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t (*LanguagesService.models.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

uint64_t LanguagesService.$models.getter()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1ED586AB0);
}

uint64_t LanguagesService.$models.setter(uint64_t a1)
{
  return sub_1D2D07DD8(a1, &qword_1EFCA7290, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1ED586AB0);
}

uint64_t (*LanguagesService.$models.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7290);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AB0);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

uint64_t LanguagesService.autoDetectSpeechUnsupportedPairs.getter()
{
  return sub_1D2D0E3C0();
}

uint64_t LanguagesService.autoDetectSpeechUnsupportedPairs.setter(uint64_t a1)
{
  return sub_1D2D0E48C(a1, &OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs);
}

uint64_t (*LanguagesService.autoDetectSpeechUnsupportedPairs.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t LanguagesService.localeModalities.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2D075CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D07648(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t LanguagesService.localeModalities.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t (*LanguagesService.localeModalities.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

uint64_t LanguagesService.$localeModalities.getter()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EFCA72A0);
}

uint64_t LanguagesService.$localeModalities.setter(uint64_t a1)
{
  return sub_1D2D07DD8(a1, &qword_1EFCA72A8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EFCA72A0);
}

uint64_t (*LanguagesService.$localeModalities.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA72A8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA72A0);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

uint64_t LanguagesService.asrUnsupportedModels.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  if (!v5)
    return MEMORY[0x1E0DEE9E8];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  v0 = v5;
  sub_1D2D10CA0((uint64_t)v5, v0);
  v2 = v1;
  swift_bridgeObjectRelease();

  v3 = sub_1D2D05460(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D2D079A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D07A20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t LanguagesService.airplaneModeEnabled.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t (*LanguagesService.airplaneModeEnabled.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

void sub_1D2D07B74(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t LanguagesService.$airplaneModeEnabled.getter()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1ED587798);
}

uint64_t sub_1D2D07BD4(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D2D9C990();
  return swift_endAccess();
}

uint64_t sub_1D2D07C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_1D2D9C990();
  return swift_endAccess();
}

uint64_t sub_1D2D07CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v19;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v19 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1D2D9C99C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t LanguagesService.$airplaneModeEnabled.setter(uint64_t a1)
{
  return sub_1D2D07DD8(a1, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1ED587798);
}

uint64_t sub_1D2D07DD8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1D2D9C99C();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*LanguagesService.$airplaneModeEnabled.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A98);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

void sub_1D2D07F78(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1D2D9C99C();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1D2D9C99C();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t LanguagesService.init(task:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  __uint8_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v43;
  int v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  sockaddr address;
  uint64_t v52;

  v2 = v1;
  v52 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586C08);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A78);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  v10 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA72A0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AB0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *a1;
  v21 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  *(_QWORD *)&address.sa_len = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  sub_1D2D9C984();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v20, v17);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs) = MEMORY[0x1E0DEE9E8];
  v22 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  *(_QWORD *)&address.sa_len = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA72B0);
  sub_1D2D9C984();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22, v16, v13);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser) = 0;
  v23 = OBJC_IVAR____TtC13TranslationUI16LanguagesService_airplaneModeConfiguration;
  *(_QWORD *)(v2 + v23) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AirplaneModeConfiguration()), sel_init);
  v24 = sub_1D2CC74AC();
  if (v24 == 2)
  {
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFA9B8]), sel_init);
    v26 = objc_msgSend(v25, sel_airplaneMode);

  }
  else
  {
    v26 = v24 & 1;
  }
  v27 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  address.sa_len = v26;
  sub_1D2D9C984();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v27, v12, v43);
  *(_QWORD *)&address.sa_data[6] = 0;
  *(_QWORD *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  v28 = (uint64_t)SCNetworkReachabilityCreateWithAddress(0, &address);
  if (v28)
  {
    v29 = v28;
    type metadata accessor for Reachability();
    swift_allocObject();
    v28 = Reachability.init(networkReachability:)(v29);
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_reachability) = v28;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_subscriptions) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_task) = v44;
  LanguagesService.refresh()();
  v30 = *(id *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_airplaneModeConfiguration);
  v31 = sub_1D2CC699C();

  *(_QWORD *)&address.sa_len = v31;
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C20);
  v50 = (id)sub_1D2D9E094();
  v32 = sub_1D2D9E07C();
  v33 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v45, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A88);
  sub_1D2CC6C74(&qword_1ED586A80, &qword_1ED586A88, MEMORY[0x1E0C95D90]);
  sub_1D2D10F08();
  v34 = v46;
  sub_1D2D9C9FC();
  sub_1D2CCADA4(v33, &qword_1ED586C08);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1D2CC6C74(&qword_1ED586A70, &qword_1ED586A78, MEMORY[0x1E0C95CB8]);
  v35 = v48;
  sub_1D2D9CA20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v35);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BA8);
  sub_1D2CC6C74((unint64_t *)&unk_1ED586BB0, &qword_1ED586BA8, MEMORY[0x1E0DEAF58]);
  sub_1D2D9C960();
  swift_endAccess();
  swift_release();
  v36 = (void *)*MEMORY[0x1E0DC4860];
  v37 = sub_1D2D9DF14();
  v38 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v49, 1, 1, v37);
  v39 = swift_allocObject();
  swift_weakInit();
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = 0;
  v40[3] = 0;
  v40[4] = v36;
  v40[5] = v39;
  v41 = v36;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle) = sub_1D2D06D10(v38, (uint64_t)&unk_1EFCA72C0, (uint64_t)v40);
  swift_release();
  return v2;
}

Swift::Void __swiftcall LanguagesService.refresh()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9DF14();
  v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  swift_retain();
  sub_1D2D0A90C((uint64_t)v3, (uint64_t)&unk_1EFCA72D0, (uint64_t)v6);
  swift_release();
  v5(v3, 1, 1, v4);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  swift_retain();
  sub_1D2D06D10((uint64_t)v3, (uint64_t)&unk_1EFCA72E0, (uint64_t)v7);
  swift_release();
  v5(v3, 1, 1, v4);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  sub_1D2D06D10((uint64_t)v3, (uint64_t)&unk_1EFCA72F0, (uint64_t)v8);
  swift_release();
}

uint64_t sub_1D2D08858()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1D2D9C9C0();
  }
  return result;
}

uint64_t sub_1D2D088E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586238);
  v5[23] = swift_task_alloc();
  v6 = sub_1D2D9E0F4();
  v5[24] = v6;
  v5[25] = *(_QWORD *)(v6 - 8);
  v5[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D089A4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1D2D9E100();

  sub_1D2D9E0E8();
  swift_beginAccess();
  *(_QWORD *)(v0 + 216) = sub_1D2D11854();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v2;
  *v2 = v0;
  v2[1] = sub_1D2D08A80;
  return sub_1D2D9DEE4();
}

uint64_t sub_1D2D08A80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 232) = v0;
  return swift_task_switch();
}

uint64_t sub_1D2D08AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = sub_1D2D9C594();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1ED5878C8 != -1)
      swift_once();
    v4 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED588700);
    v5 = sub_1D2D9C8DC();
    v6 = sub_1D2D9E028();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1D2CC0000, v5, v6, "Foreground event refresh", v7, 2u);
      MEMORY[0x1D8248974](v7, -1, -1);
    }

    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v9 = Strong;
      v10 = *(_QWORD *)(v0 + 176);
      v11 = sub_1D2D9DF14();
      v12 = *(_QWORD *)(v11 - 8);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v37(v10, 1, 1, v11);
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = 0;
      v13[3] = 0;
      v13[4] = v9;
      v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      v14 = v36(v10, 1, v11);
      swift_retain();
      v15 = *(_QWORD *)(v0 + 176);
      if (v14 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1ED5878F0);
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
        if (v13[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v16 = sub_1D2D9DEB4();
          v18 = v17;
          swift_unknownObjectRelease();
          if (v18 | v16)
          {
            *(_QWORD *)(v0 + 16) = 0;
            *(_QWORD *)(v0 + 24) = 0;
            *(_QWORD *)(v0 + 32) = v16;
            *(_QWORD *)(v0 + 40) = v18;
          }
        }
      }
      v19 = *(_QWORD *)(v0 + 168);
      swift_task_create();
      swift_release();
      v37(v19, 1, 1, v11);
      v20 = (_QWORD *)swift_allocObject();
      v20[2] = 0;
      v20[3] = 0;
      v20[4] = v9;
      v21 = v36(v19, 1, v11);
      swift_retain();
      v22 = *(_QWORD *)(v0 + 168);
      if (v21 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 168), (uint64_t *)&unk_1ED5878F0);
        v23 = 0;
        v24 = 0;
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
        if (v20[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v23 = sub_1D2D9DEB4();
          v24 = v25;
          swift_unknownObjectRelease();
        }
        else
        {
          v23 = 0;
          v24 = 0;
        }
      }
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = &unk_1EFCA7408;
      *(_QWORD *)(v26 + 24) = v20;
      if (v24 | v23)
      {
        *(_QWORD *)(v0 + 48) = 0;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = v23;
        *(_QWORD *)(v0 + 72) = v24;
      }
      v27 = *(_QWORD *)(v0 + 160);
      swift_task_create();
      swift_release();
      v37(v27, 1, 1, v11);
      v28 = (_QWORD *)swift_allocObject();
      v28[2] = 0;
      v28[3] = 0;
      v28[4] = v9;
      v29 = v36(v27, 1, v11);
      swift_retain();
      v30 = *(_QWORD *)(v0 + 160);
      if (v29 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_1ED5878F0);
        v31 = 0;
        v32 = 0;
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v30, v11);
        if (v28[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v31 = sub_1D2D9DEB4();
          v32 = v33;
          swift_unknownObjectRelease();
        }
        else
        {
          v31 = 0;
          v32 = 0;
        }
      }
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = &unk_1EFCA7418;
      *(_QWORD *)(v34 + 24) = v28;
      if (v32 | v31)
      {
        *(_QWORD *)(v0 + 80) = 0;
        *(_QWORD *)(v0 + 88) = 0;
        *(_QWORD *)(v0 + 96) = v31;
        *(_QWORD *)(v0 + 104) = v32;
      }
      swift_task_create();
      swift_release();
      swift_release();
    }
    sub_1D2CCADA4(*(_QWORD *)(v0 + 184), &qword_1ED586238);
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v35;
    *v35 = v0;
    v35[1] = sub_1D2D09140;
    return sub_1D2D9DEE4();
  }
}

uint64_t sub_1D2D090E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 232);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED587378);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1D2D09140()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 232) = v0;
  return swift_task_switch();
}

uint64_t LanguagesService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle))
  {
    swift_retain();
    sub_1D2D9DF5C();
    swift_release();
  }
  v1 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA72A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  v5 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LanguagesService.__deallocating_deinit()
{
  LanguagesService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2D092F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_1D2D09310()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_1D2D9DEFC();
  *(_QWORD *)(v0 + 56) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D0937C()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 24);
  return swift_task_switch();
}

uint64_t sub_1D2D09414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 104) = 0;
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)(v1 + 72);
  do
  {
    v5 = *(v3 - 1);
    v4 = *v3;
    v6 = *((_BYTE *)v3 - 16);
    v7 = *(v3 - 3);
    v10 = *(_OWORD *)(v3 - 5);
    v11 = v7;
    v12 = v6;
    v13 = v5;
    v14 = v4;
    sub_1D2D09810(&v10, (uint64_t *)(v0 + 16), (_BYTE *)(v0 + 104));
    v3 += 6;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  v8 = *(unsigned __int8 *)(v0 + 104);
  if (v8 == 2)
  {
    *(_QWORD *)&v10 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain_n();
    sub_1D2D0FEE4((uint64_t *)&v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v10;
    *(_QWORD *)(v0 + 96) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  if (v8 != 1)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 80) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D095C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 24) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D09654()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D09684()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 24) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D09718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  sub_1D2D9DEFC();
  v5[5] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D09784()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D09810(__int128 *a1, uint64_t *a2, _BYTE *a3)
{
  __int128 v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  double *v10;
  double *v11;
  double v12;
  double v13;
  int v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  double v21;
  double v22;
  double v23;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29[2];
  double v30;
  char v31;
  double v32;
  char v33;

  v5 = a1[1];
  v26 = *a1;
  v27 = v5;
  v28 = a1[2];
  v6 = (_QWORD *)*a2;
  v7 = sub_1D2D116E4(*a2, (uint64_t *)&v26);
  if ((v8 & 1) != 0)
  {
    sub_1D2CF3DD0((uint64_t)&v26);
    result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v6;
    if ((result & 1) != 0)
    {
LABEL_10:
      v17 = v6[2];
      v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        result = (uint64_t)sub_1D2D4A9DC((_QWORD *)(v16 > 1), v17 + 1, 1, v6);
        v6 = (_QWORD *)result;
        *a2 = result;
      }
      v6[2] = v17 + 1;
      v20 = &v6[6 * v17];
      v18 = v26;
      v19 = v28;
      v20[3] = v27;
      v20[4] = v19;
      v20[2] = v18;
      LOBYTE(v20) = 2;
      goto LABEL_38;
    }
LABEL_42:
    result = (uint64_t)sub_1D2D4A9DC(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
    *a2 = result;
    goto LABEL_10;
  }
  v9 = v7;
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v7 >= v6[2])
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v10 = (double *)&v6[6 * v7];
  v13 = v10[6];
  v11 = v10 + 6;
  v12 = v13;
  v14 = *((unsigned __int8 *)v11 + 8);
  sub_1D2CF4020((uint64_t *)&v27, (uint64_t)v29);
  if (v14 == 1)
  {
    if (v12 == 0.0)
    {
      result = sub_1D2CF4020(v29, (uint64_t)&v32);
      if (v33 == 1 && v32 == 0.0)
        return result;
    }
    else
    {
      result = sub_1D2CF4020(v29, (uint64_t)&v32);
      if (v33 == 1 && v32 != 0.0)
        return result;
    }
  }
  else
  {
    result = sub_1D2CF4020(v29, (uint64_t)&v32);
    if ((v33 & 1) == 0 && v32 == v12)
      return result;
  }
  if (((_BYTE)v11[1] & 1) != 0)
    goto LABEL_33;
  v21 = *v11;
  result = sub_1D2CF4020(v29, (uint64_t)&v30);
  if ((v31 & 1) != 0)
    goto LABEL_33;
  v22 = v21 * 100.0;
  if (v21 * 100.0 <= -9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v23 = v30 * 100.0;
  if ((*(_QWORD *)&v22 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (COERCE_UNSIGNED_INT64(v30 * 100.0) & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_46;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  if (*(uint64_t *)&v22 != *(uint64_t *)&v23 && v30 > v21)
  {
LABEL_33:
    result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1D2D4B0F4(v6);
      v6 = (_QWORD *)result;
    }
    if (v9 < v6[2])
    {
      result = sub_1D2CF4020(v29, (uint64_t)&v6[6 * v9 + 6]);
      *a2 = (uint64_t)v6;
      LODWORD(v20) = *a3;
      if (v20 <= 1)
        LOBYTE(v20) = 1;
LABEL_38:
      *a3 = (_BYTE)v20;
      return result;
    }
    __break(1u);
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_1D2D09AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  v4[9] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D09BC4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  int v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588700);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E028();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "refresh", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }
  v5 = v0[8];

  v6 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular);
  v7 = sub_1D2D9C8DC();
  v8 = sub_1D2D9E028();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2CC0000, v7, v8, "Requested refresh of language asset query", v9, 2u);
    MEMORY[0x1D8248974](v9, -1, -1);
  }
  v10 = v0[14];
  v11 = v0[15];
  v13 = v0[12];
  v12 = v0[13];
  v15 = v0[10];
  v14 = v0[11];

  if (v6)
    v16 = 17;
  else
    v16 = 16;
  *(_QWORD *)(swift_task_alloc() + 16) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E0DF0A50], v15);
  sub_1D2D9DFA4();
  swift_task_dealloc();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  v17 = (_QWORD *)swift_task_alloc();
  v0[19] = v17;
  *v17 = v0;
  v17[1] = sub_1D2D09E14;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D09E14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 160) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D09E78()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(void);

  v1 = v0[2];
  v0[21] = v1;
  if (v1)
  {
    v0[22] = sub_1D2D9DEFC();
    v0[23] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[18], v0[16]);
    v4 = (uint64_t (*)(void))((char *)&dword_1EFCA7450 + dword_1EFCA7450);
    v3 = (_QWORD *)swift_task_alloc();
    v0[25] = v3;
    *v3 = v0;
    v3[1] = sub_1D2D0A438;
    return v4();
  }
}

uint64_t sub_1D2D09F4C()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_1D2D09FE4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  double *v4;
  char v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  double v19;
  int v20;
  double v21;
  char v22;
  double v23;
  double v24;
  char v26;
  double *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0[21];
  v34 = *(_QWORD *)(v1 + 16);
  if (!v34)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)swift_task_alloc();
    v0[29] = v28;
    *v28 = v0;
    v28[1] = sub_1D2D0A714;
    return sub_1D2D9DF98();
  }
  v30 = v0 + 5;
  v33 = v1 + 32;
  v2 = (_QWORD *)v0[24];
  swift_bridgeObjectRetain();
  v3 = 0;
  v31 = 0;
  v32 = v0;
  do
  {
    v6 = (double *)(v33 + 48 * v3);
    v7 = *v6;
    v8 = *((_QWORD *)v6 + 1);
    v9 = v6[2];
    v10 = *((unsigned __int8 *)v6 + 24);
    v11 = *((_QWORD *)v6 + 5);
    v35 = *((_QWORD *)v6 + 4);
    v12 = v2[2];
    if (!v12)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1D2D4A9DC(0, v12 + 1, 1, v2);
      v18 = v2[2];
      v17 = v2[3];
      if (v18 >= v17 >> 1)
        v2 = sub_1D2D4A9DC((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
      v2[2] = v18 + 1;
      v4 = (double *)&v2[6 * v18];
      v4[4] = v7;
      *((_QWORD *)v4 + 5) = v8;
      v4[6] = v9;
      *((_BYTE *)v4 + 56) = v10;
      *((_QWORD *)v4 + 8) = v35;
      *((_QWORD *)v4 + 9) = v11;
      v5 = 2;
LABEL_4:
      v31 = v5;
      goto LABEL_5;
    }
    v13 = 0;
    v14 = 7;
    while (1)
    {
      result = v2[v14 - 3];
      if (result == *(_QWORD *)&v7 && v2[v14 - 2] == v8)
        break;
      result = sub_1D2D9E52C();
      if ((result & 1) != 0)
        break;
      ++v13;
      v14 += 6;
      if (v12 == v13)
        goto LABEL_14;
    }
    if (v13 >= v12)
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    v19 = *(double *)&v2[v14 - 1];
    if (LOBYTE(v2[v14]) == 1)
    {
      if (v19 == 0.0)
      {
        if (v9 == 0.0)
          v26 = v10;
        else
          v26 = 0;
        if ((v26 & 1) == 0)
          goto LABEL_47;
      }
      else
      {
        if (v9 == 0.0)
          v20 = 0;
        else
          v20 = v10;
        if (v20 != 1)
          goto LABEL_47;
      }
    }
    else
    {
      v21 = *(double *)&v2[v14 - 1];
      if (v19 == v9)
        v22 = v10;
      else
        v22 = 1;
      if ((v22 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_47;
        v23 = v21 * 100.0;
        if (v21 * 100.0 <= -9.22337204e18)
          goto LABEL_62;
        if (v23 >= 9.22337204e18)
          goto LABEL_63;
        v24 = v9 * 100.0;
        if ((~COERCE__INT64(v9 * 100.0) & 0x7FF0000000000000) == 0
          || (*(_QWORD *)&v23 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_64;
        }
        if (v24 <= -9.22337204e18)
          goto LABEL_65;
        if (v24 >= 9.22337204e18)
          goto LABEL_66;
        if (*(uint64_t *)&v23 != *(uint64_t *)&v24 && v21 < v9)
        {
LABEL_47:
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D2D4B0F4(v2);
            v2 = (_QWORD *)result;
          }
          if (v13 >= v2[2])
            goto LABEL_61;
          v27 = (double *)&v2[v14];
          *(v27 - 1) = v9;
          *(_BYTE *)v27 = v10;
          v5 = v31;
          if ((v31 & 0xFE) == 0)
            v5 = 1;
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    v0 = v32;
    v32[27] = v2;
    ++v3;
  }
  while (v3 != v34);
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_55;
  if (v31 == 1)
  {
    swift_bridgeObjectRetain();
    v32[28] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  else
  {
    v29 = v32[20];
    v32[5] = v2;
    swift_bridgeObjectRetain_n();
    sub_1D2D0FEE4(v30);
    if (v29)
      return swift_release();
    swift_bridgeObjectRelease();
    v32[30] = v32[5];
    v32[31] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D0A438(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0A494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 72);
    v4 = MEMORY[0x1E0DEE9D8];
    do
    {
      v8 = *(v3 - 3);
      v9 = *((unsigned __int8 *)v3 - 16);
      if (v9 != 1 || v8 != 0)
      {
        v12 = *(v3 - 5);
        v11 = *(v3 - 4);
        v13 = *v3;
        v20 = *(v3 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D2D03F2C(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v6 = *(_QWORD *)(v4 + 16);
        v5 = *(_QWORD *)(v4 + 24);
        if (v6 >= v5 >> 1)
          sub_1D2D03F2C(v5 > 1, v6 + 1, 1);
        *(_QWORD *)(v4 + 16) = v6 + 1;
        v7 = v4 + 48 * v6;
        *(_QWORD *)(v7 + 32) = v12;
        *(_QWORD *)(v7 + 40) = v11;
        *(_QWORD *)(v7 + 48) = v8;
        *(_BYTE *)(v7 + 56) = v9;
        *(_QWORD *)(v7 + 64) = v20;
        *(_QWORD *)(v7 + 72) = v13;
      }
      v3 += 6;
      --v2;
    }
    while (v2);
    v0 = v19;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v15 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v16 = sub_1D2D9DF14();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v4;
  v17[5] = v15;
  swift_retain();
  swift_retain();
  sub_1D2D06D10(v14, (uint64_t)&unk_1EFCA73F0, (uint64_t)v17);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0A680()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 56) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0A714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 160) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0A778()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0A80C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D0A714;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0A894()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0A90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1D2D9DF14();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1D2D9DF08();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1D2CCADA4(a1, (uint64_t *)&unk_1ED5878F0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D2D9DEB4();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1D2D0AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_1D2D0AA58()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588700);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E01C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Bootstrapping language service speech auto-detect unsupported pairs", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BF0);
  *v5 = v0;
  v5[1] = sub_1D2D0AB9C;
  return sub_1D2D9E514();
}

uint64_t sub_1D2D0AB9C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0ABF0()
{
  _QWORD *v0;

  v0[8] = v0[5];
  sub_1D2D9DEFC();
  v0[9] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D0AC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release();
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs);
  swift_beginAccess();
  *v3 = v1;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0ACCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  *(_QWORD *)(v4 + 32) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0AD28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588700);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E01C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Bootstrapping locale modalities", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  sub_1D2CC63E8(0, &qword_1EFCA73D8);
  *v5 = v0;
  v5[1] = sub_1D2D0AE78;
  return sub_1D2D9E514();
}

uint64_t sub_1D2D0AE78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0AECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(void **)(v0 + 16);
  v4 = sub_1D2D9DF14();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  sub_1D2D9DEFC();
  swift_retain();
  v5 = v3;
  v6 = sub_1D2D9DEF0();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DF06E8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v2;
  v7[5] = v5;
  sub_1D2D06D10(v1, (uint64_t)&unk_1EFCA73E8, (uint64_t)v7);

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0AF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[22] = a4;
  v5[23] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  v5[24] = v6;
  v5[25] = *(_QWORD *)(v6 - 8);
  v5[26] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  v5[27] = v7;
  v5[28] = *(_QWORD *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v8 = sub_1D2D9C7EC();
  v5[30] = v8;
  v5[31] = *(_QWORD *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0B054()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0[22];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v24 = v0[31];
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v2, 0);
    v4 = (_QWORD *)(v1 + 72);
    do
    {
      v6 = *(v4 - 5);
      v5 = *(v4 - 4);
      v7 = *(v4 - 3);
      v8 = *v4;
      v27 = *(v4 - 1);
      if (*((_BYTE *)v4 - 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          v9 = v25[32];
          v26 = v25[30];
          swift_bridgeObjectRetain();
          sub_1D2D9C708();
          v25[2] = sub_1D2D9C714();
          v25[3] = v10;
          v25[4] = 45;
          v25[5] = 0xE100000000000000;
          v25[6] = 95;
          v25[7] = 0xE100000000000000;
          sub_1D2CD1430();
          v11 = sub_1D2D9E1E4();
          v13 = v12;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v9, v26);
          v25[8] = v11;
          v25[9] = v13;
          v25[10] = 45;
          v25[11] = 0xE100000000000000;
          v25[12] = 95;
          v25[13] = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v6 = sub_1D2D9E1E4();
          v15 = v14;
          v16 = v8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v7 = 0;
          v17 = 0;
          v5 = v15;
        }
        else
        {
          v16 = v8;
          v17 = 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v16 = v8;
        swift_bridgeObjectRetain();
        v17 = 0;
      }
      v3 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v3 = v28;
      }
      v19 = *(_QWORD *)(v3 + 16);
      v18 = *(_QWORD *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D2D03F2C(v18 > 1, v19 + 1, 1);
        v3 = v28;
      }
      v4 += 6;
      *(_QWORD *)(v3 + 16) = v19 + 1;
      v20 = v3 + 48 * v19;
      *(_QWORD *)(v20 + 32) = v6;
      *(_QWORD *)(v20 + 40) = v5;
      *(_QWORD *)(v20 + 48) = v7;
      *(_BYTE *)(v20 + 56) = v17;
      *(_QWORD *)(v20 + 64) = v27;
      *(_QWORD *)(v20 + 72) = v16;
      --v2;
    }
    while (v2);
    v0 = v25;
  }
  v0[33] = v3;
  v21 = (_QWORD *)swift_task_alloc();
  v0[34] = v21;
  *v21 = v0;
  v21[1] = sub_1D2D0B354;
  v22 = v0[23];
  v21[4] = v3;
  v21[5] = v22;
  return swift_task_switch();
}

uint64_t sub_1D2D0B354()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0B3A8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E04C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v15 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x1D82479C0](v6, &type metadata for LanguageModel);
    v9 = v8;
    swift_bridgeObjectRelease();
    v0[21] = sub_1D2CF78E0(v7, v9, &v15);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Requested download of: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v5, -1, -1);
    MEMORY[0x1D8248974](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = v0[25];
  v10 = v0[26];
  v12 = v0[24];
  static LanguagesInstallService.add(_:useCellular:)(v0[33], *(unsigned __int8 *)(v0[23] + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular));
  swift_bridgeObjectRelease();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v13 = (_QWORD *)swift_task_alloc();
  v0[36] = v13;
  *v13 = v0;
  v13[1] = sub_1D2D0B618;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0B618()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 296) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0B67C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 304) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 312) = sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 320) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D0B738()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 136);
  return swift_task_switch();
}

uint64_t sub_1D2D0B7D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  double *v4;
  char v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  double v19;
  int v20;
  double v21;
  char v22;
  double v23;
  double v24;
  char v26;
  double *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0[38];
  v34 = *(_QWORD *)(v1 + 16);
  if (!v34)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)swift_task_alloc();
    v0[44] = v28;
    *v28 = v0;
    v28[1] = sub_1D2D0BCB8;
    return sub_1D2D9DF98();
  }
  v30 = v0 + 18;
  v33 = v1 + 32;
  v2 = (_QWORD *)v0[41];
  swift_bridgeObjectRetain();
  v3 = 0;
  v31 = 0;
  v32 = v0;
  do
  {
    v6 = (double *)(v33 + 48 * v3);
    v7 = *v6;
    v8 = *((_QWORD *)v6 + 1);
    v9 = v6[2];
    v10 = *((unsigned __int8 *)v6 + 24);
    v11 = *((_QWORD *)v6 + 5);
    v35 = *((_QWORD *)v6 + 4);
    v12 = v2[2];
    if (!v12)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1D2D4A9DC(0, v12 + 1, 1, v2);
      v18 = v2[2];
      v17 = v2[3];
      if (v18 >= v17 >> 1)
        v2 = sub_1D2D4A9DC((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
      v2[2] = v18 + 1;
      v4 = (double *)&v2[6 * v18];
      v4[4] = v7;
      *((_QWORD *)v4 + 5) = v8;
      v4[6] = v9;
      *((_BYTE *)v4 + 56) = v10;
      *((_QWORD *)v4 + 8) = v35;
      *((_QWORD *)v4 + 9) = v11;
      v5 = 2;
LABEL_4:
      v31 = v5;
      goto LABEL_5;
    }
    v13 = 0;
    v14 = 7;
    while (1)
    {
      result = v2[v14 - 3];
      if (result == *(_QWORD *)&v7 && v2[v14 - 2] == v8)
        break;
      result = sub_1D2D9E52C();
      if ((result & 1) != 0)
        break;
      ++v13;
      v14 += 6;
      if (v12 == v13)
        goto LABEL_14;
    }
    if (v13 >= v12)
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    v19 = *(double *)&v2[v14 - 1];
    if (LOBYTE(v2[v14]) == 1)
    {
      if (v19 == 0.0)
      {
        if (v9 == 0.0)
          v26 = v10;
        else
          v26 = 0;
        if ((v26 & 1) == 0)
          goto LABEL_47;
      }
      else
      {
        if (v9 == 0.0)
          v20 = 0;
        else
          v20 = v10;
        if (v20 != 1)
          goto LABEL_47;
      }
    }
    else
    {
      v21 = *(double *)&v2[v14 - 1];
      if (v19 == v9)
        v22 = v10;
      else
        v22 = 1;
      if ((v22 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_47;
        v23 = v21 * 100.0;
        if (v21 * 100.0 <= -9.22337204e18)
          goto LABEL_62;
        if (v23 >= 9.22337204e18)
          goto LABEL_63;
        v24 = v9 * 100.0;
        if ((~COERCE__INT64(v9 * 100.0) & 0x7FF0000000000000) == 0
          || (*(_QWORD *)&v23 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_64;
        }
        if (v24 <= -9.22337204e18)
          goto LABEL_65;
        if (v24 >= 9.22337204e18)
          goto LABEL_66;
        if (*(uint64_t *)&v23 != *(uint64_t *)&v24 && v21 < v9)
        {
LABEL_47:
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D2D4B0F4(v2);
            v2 = (_QWORD *)result;
          }
          if (v13 >= v2[2])
            goto LABEL_61;
          v27 = (double *)&v2[v14];
          *(v27 - 1) = v9;
          *(_BYTE *)v27 = v10;
          v5 = v31;
          if ((v31 & 0xFE) == 0)
            v5 = 1;
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    v0 = v32;
    v32[42] = v2;
    ++v3;
  }
  while (v3 != v34);
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_55;
  if (v31 == 1)
  {
    swift_bridgeObjectRetain();
    v32[43] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  else
  {
    v29 = v32[37];
    v32[18] = v2;
    swift_bridgeObjectRetain_n();
    sub_1D2D0FEE4(v30);
    if (v29)
      return swift_release();
    swift_bridgeObjectRelease();
    v32[45] = v32[18];
    v32[46] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D0BC24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 336);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 160) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0BCB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 296) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0BD1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 152) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0BDB0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D0BCB8;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0BE38()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0BE8C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0BEDC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 384) = v1;
  v2 = v1;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E034();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 128) = v7;
    sub_1D2D9E1B4();
    *v6 = v7;

    _os_log_impl(&dword_1D2CC0000, v3, v4, "Failed to download a language model: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v6, -1, -1);
    MEMORY[0x1D8248974](v5, -1, -1);
  }
  else
  {

  }
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_1D2D0BE38;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v0 + 176);
  return swift_task_switch();
}

Swift::Void __swiftcall LanguagesService.cancelDownloads()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9DF14();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1D2CCADA4((uint64_t)v4, (uint64_t *)&unk_1ED5878F0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1D2D9DF08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1D2D9DEB4();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EFCA7300;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1D2D0C248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[22] = a4;
  v5 = sub_1D2D9C7EC();
  v4[23] = v5;
  v4[24] = *(_QWORD *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  v4[26] = v6;
  v4[27] = *(_QWORD *)(v6 - 8);
  v4[28] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  v4[29] = v7;
  v4[30] = *(_QWORD *)(v7 - 8);
  v4[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0C300()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED588700);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E01C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Requested cancelling downloads", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }

  v0[33] = sub_1D2D9DEFC();
  v0[34] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D0C424()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1D2D0C4BC()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;

  v1 = Array<A>.downloading.getter(v0[35]);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v22 = v0[24];
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v2, 0);
    v3 = (uint64_t *)(v1 + 72);
    do
    {
      v25 = v2;
      v4 = v0[25];
      v23 = v0[23];
      v5 = *v3;
      v24 = *(v3 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      v0[4] = sub_1D2D9C714();
      v0[5] = v6;
      v0[6] = 45;
      v0[7] = 0xE100000000000000;
      v0[8] = 95;
      v0[9] = 0xE100000000000000;
      sub_1D2CD1430();
      v7 = sub_1D2D9E1E4();
      v9 = v8;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v23);
      v0[10] = v7;
      v0[11] = v9;
      v0[12] = 45;
      v0[13] = 0xE100000000000000;
      v0[2] = 95;
      v0[3] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v10 = sub_1D2D9E1E4();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v13 = v26;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D2D03F2C(v14 > 1, v15 + 1, 1);
        v13 = v26;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      v16 = v13 + 48 * v15;
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = 1;
      *(_BYTE *)(v16 + 56) = 1;
      *(_QWORD *)(v16 + 64) = v24;
      *(_QWORD *)(v16 + 72) = v5;
      v3 += 6;
      --v2;
    }
    while (v25 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v0[36] = v13;
  v18 = v0[27];
  v17 = v0[28];
  v19 = v0[26];
  static LanguagesInstallService.remove(_:)(v13, v17);
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  v20 = (_QWORD *)swift_task_alloc();
  v0[37] = v20;
  *v20 = v0;
  v20[1] = sub_1D2D0C7E0;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0C7E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 304) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0C844()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 312) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 320) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D0C900()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_1D2D0C998()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  double *v4;
  char v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  double v19;
  int v20;
  double v21;
  char v22;
  double v23;
  double v24;
  char v26;
  double *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0[39];
  v34 = *(_QWORD *)(v1 + 16);
  if (!v34)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)swift_task_alloc();
    v0[44] = v28;
    *v28 = v0;
    v28[1] = sub_1D2D0CE80;
    return sub_1D2D9DF98();
  }
  v30 = v0 + 19;
  v33 = v1 + 32;
  v2 = (_QWORD *)v0[41];
  swift_bridgeObjectRetain();
  v3 = 0;
  v31 = 0;
  v32 = v0;
  do
  {
    v6 = (double *)(v33 + 48 * v3);
    v7 = *v6;
    v8 = *((_QWORD *)v6 + 1);
    v9 = v6[2];
    v10 = *((unsigned __int8 *)v6 + 24);
    v11 = *((_QWORD *)v6 + 5);
    v35 = *((_QWORD *)v6 + 4);
    v12 = v2[2];
    if (!v12)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1D2D4A9DC(0, v12 + 1, 1, v2);
      v18 = v2[2];
      v17 = v2[3];
      if (v18 >= v17 >> 1)
        v2 = sub_1D2D4A9DC((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
      v2[2] = v18 + 1;
      v4 = (double *)&v2[6 * v18];
      v4[4] = v7;
      *((_QWORD *)v4 + 5) = v8;
      v4[6] = v9;
      *((_BYTE *)v4 + 56) = v10;
      *((_QWORD *)v4 + 8) = v35;
      *((_QWORD *)v4 + 9) = v11;
      v5 = 2;
LABEL_4:
      v31 = v5;
      goto LABEL_5;
    }
    v13 = 0;
    v14 = 7;
    while (1)
    {
      result = v2[v14 - 3];
      if (result == *(_QWORD *)&v7 && v2[v14 - 2] == v8)
        break;
      result = sub_1D2D9E52C();
      if ((result & 1) != 0)
        break;
      ++v13;
      v14 += 6;
      if (v12 == v13)
        goto LABEL_14;
    }
    if (v13 >= v12)
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    v19 = *(double *)&v2[v14 - 1];
    if (LOBYTE(v2[v14]) == 1)
    {
      if (v19 == 0.0)
      {
        if (v9 == 0.0)
          v26 = v10;
        else
          v26 = 0;
        if ((v26 & 1) == 0)
          goto LABEL_47;
      }
      else
      {
        if (v9 == 0.0)
          v20 = 0;
        else
          v20 = v10;
        if (v20 != 1)
          goto LABEL_47;
      }
    }
    else
    {
      v21 = *(double *)&v2[v14 - 1];
      if (v19 == v9)
        v22 = v10;
      else
        v22 = 1;
      if ((v22 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_47;
        v23 = v21 * 100.0;
        if (v21 * 100.0 <= -9.22337204e18)
          goto LABEL_62;
        if (v23 >= 9.22337204e18)
          goto LABEL_63;
        v24 = v9 * 100.0;
        if ((~COERCE__INT64(v9 * 100.0) & 0x7FF0000000000000) == 0
          || (*(_QWORD *)&v23 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_64;
        }
        if (v24 <= -9.22337204e18)
          goto LABEL_65;
        if (v24 >= 9.22337204e18)
          goto LABEL_66;
        if (*(uint64_t *)&v23 != *(uint64_t *)&v24 && v21 < v9)
        {
LABEL_47:
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D2D4B0F4(v2);
            v2 = (_QWORD *)result;
          }
          if (v13 >= v2[2])
            goto LABEL_61;
          v27 = (double *)&v2[v14];
          *(v27 - 1) = v9;
          *(_BYTE *)v27 = v10;
          v5 = v31;
          if ((v31 & 0xFE) == 0)
            v5 = 1;
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    v0 = v32;
    v32[42] = v2;
    ++v3;
  }
  while (v3 != v34);
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_55;
  if (v31 == 1)
  {
    swift_bridgeObjectRetain();
    v32[43] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  else
  {
    v29 = v32[38];
    v32[19] = v2;
    swift_bridgeObjectRetain_n();
    sub_1D2D0FEE4(v30);
    if (v29)
      return swift_release();
    swift_bridgeObjectRelease();
    v32[45] = v32[19];
    v32[46] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D0CDEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 336);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 168) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0CE80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 304) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0CEE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 160) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0CF78()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D0CE80;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0D000()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D0D060()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0D0B0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[31], v0[29]);
  v1 = (void *)v0[16];
  v0[48] = v1;
  v2 = v1;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E034();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = sub_1D2D9C5F4();
    v0[17] = v7;
    sub_1D2D9E1B4();
    *v6 = v7;

    _os_log_impl(&dword_1D2CC0000, v3, v4, "Failed to cancel downloads: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v6, -1, -1);
    MEMORY[0x1D8248974](v5, -1, -1);
  }
  else
  {

  }
  v8 = (_QWORD *)swift_task_alloc();
  v0[47] = v8;
  *v8 = v0;
  v8[1] = sub_1D2D0D000;
  v9 = v0[22];
  v8[4] = v0[36];
  v8[5] = v9;
  return swift_task_switch();
}

uint64_t sub_1D2D0D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[23] = a4;
  v5[24] = a5;
  v6 = sub_1D2D9C7EC();
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7198);
  v5[28] = v7;
  v5[29] = *(_QWORD *)(v7 - 8);
  v5[30] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71A0);
  v5[31] = v8;
  v5[32] = *(_QWORD *)(v8 - 8);
  v5[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0D2FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = v0 + 23;
  v2 = sub_1D2D9C8F4();
  v0[34] = __swift_project_value_buffer(v2, (uint64_t)qword_1ED588700);
  swift_bridgeObjectRetain_n();
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E04C();
  v5 = os_log_type_enabled(v3, v4);
  v6 = v0[23];
  v35 = v0;
  if (v5)
  {
    v7 = v0 + 21;
    v8 = v0 + 22;
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v39 = v10;
    *(_DWORD *)v9 = 134349314;
    *v7 = *(_QWORD *)(v6 + 16);
    sub_1D2D9E1B4();
    *(_WORD *)(v9 + 12) = 2082;
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x1D82479C0](v11, &type metadata for LanguageModel);
    v14 = v13;
    swift_bridgeObjectRelease();
    *v8 = sub_1D2CF78E0(v12, v14, &v39);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2CC0000, v3, v4, "Requested delete of %{public}ld languages: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v10, -1, -1);
    MEMORY[0x1D8248974](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v34 = v35[26];
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v16, 0);
    v18 = (_QWORD *)(v15 + 72);
    do
    {
      v20 = *(v18 - 5);
      v19 = *(v18 - 4);
      v21 = *v18;
      v37 = *(v18 - 1);
      v38 = v16;
      if (*((_BYTE *)v18 - 16) == 1 && *(v18 - 3))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v22 = v35[27];
        v36 = v35[25];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1D2D9C708();
        v35[2] = sub_1D2D9C714();
        v35[3] = v23;
        v35[12] = 45;
        v35[13] = 0xE100000000000000;
        v35[10] = 95;
        v35[11] = 0xE100000000000000;
        sub_1D2CD1430();
        v24 = sub_1D2D9E1E4();
        v26 = v25;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v22, v36);
        v35[8] = v24;
        v35[9] = v26;
        v35[6] = 45;
        v35[7] = 0xE100000000000000;
        v35[4] = 95;
        v35[5] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v20 = sub_1D2D9E1E4();
        v19 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v17 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v39;
      }
      v29 = *(_QWORD *)(v17 + 16);
      v28 = *(_QWORD *)(v17 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1D2D03F2C(v28 > 1, v29 + 1, 1);
        v17 = v39;
      }
      *(_QWORD *)(v17 + 16) = v29 + 1;
      v30 = v17 + 48 * v29;
      *(_QWORD *)(v30 + 32) = v20;
      *(_QWORD *)(v30 + 40) = v19;
      *(_QWORD *)(v30 + 48) = 1;
      *(_BYTE *)(v30 + 56) = 1;
      *(_QWORD *)(v30 + 64) = v37;
      *(_QWORD *)(v30 + 72) = v21;
      v18 += 6;
      --v16;
    }
    while (v38 != 1);
  }
  v35[35] = v17;
  v31 = (_QWORD *)swift_task_alloc();
  v35[36] = v31;
  *v31 = v35;
  v31[1] = sub_1D2D0D784;
  v32 = v35[24];
  v31[4] = v17;
  v31[5] = v32;
  return swift_task_switch();
}

uint64_t sub_1D2D0D784()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0D7D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[29];
  v1 = v0[30];
  v3 = v0[28];
  static LanguagesInstallService.remove(_:)(v0[35], v1);
  swift_bridgeObjectRelease();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[37] = v4;
  *v4 = v0;
  v4[1] = sub_1D2D0D8A0;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0D8A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 304) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0D904()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 312) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 320) = sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 328) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D0D9C0()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_1D2D0DA58()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  double *v4;
  char v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  double v19;
  int v20;
  double v21;
  char v22;
  double v23;
  double v24;
  char v26;
  double *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0[39];
  v34 = *(_QWORD *)(v1 + 16);
  if (!v34)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)swift_task_alloc();
    v0[45] = v28;
    *v28 = v0;
    v28[1] = sub_1D2D0DF40;
    return sub_1D2D9DF98();
  }
  v30 = v0 + 17;
  v33 = v1 + 32;
  v2 = (_QWORD *)v0[42];
  swift_bridgeObjectRetain();
  v3 = 0;
  v31 = 0;
  v32 = v0;
  do
  {
    v6 = (double *)(v33 + 48 * v3);
    v7 = *v6;
    v8 = *((_QWORD *)v6 + 1);
    v9 = v6[2];
    v10 = *((unsigned __int8 *)v6 + 24);
    v11 = *((_QWORD *)v6 + 5);
    v35 = *((_QWORD *)v6 + 4);
    v12 = v2[2];
    if (!v12)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1D2D4A9DC(0, v12 + 1, 1, v2);
      v18 = v2[2];
      v17 = v2[3];
      if (v18 >= v17 >> 1)
        v2 = sub_1D2D4A9DC((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
      v2[2] = v18 + 1;
      v4 = (double *)&v2[6 * v18];
      v4[4] = v7;
      *((_QWORD *)v4 + 5) = v8;
      v4[6] = v9;
      *((_BYTE *)v4 + 56) = v10;
      *((_QWORD *)v4 + 8) = v35;
      *((_QWORD *)v4 + 9) = v11;
      v5 = 2;
LABEL_4:
      v31 = v5;
      goto LABEL_5;
    }
    v13 = 0;
    v14 = 7;
    while (1)
    {
      result = v2[v14 - 3];
      if (result == *(_QWORD *)&v7 && v2[v14 - 2] == v8)
        break;
      result = sub_1D2D9E52C();
      if ((result & 1) != 0)
        break;
      ++v13;
      v14 += 6;
      if (v12 == v13)
        goto LABEL_14;
    }
    if (v13 >= v12)
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    v19 = *(double *)&v2[v14 - 1];
    if (LOBYTE(v2[v14]) == 1)
    {
      if (v19 == 0.0)
      {
        if (v9 == 0.0)
          v26 = v10;
        else
          v26 = 0;
        if ((v26 & 1) == 0)
          goto LABEL_47;
      }
      else
      {
        if (v9 == 0.0)
          v20 = 0;
        else
          v20 = v10;
        if (v20 != 1)
          goto LABEL_47;
      }
    }
    else
    {
      v21 = *(double *)&v2[v14 - 1];
      if (v19 == v9)
        v22 = v10;
      else
        v22 = 1;
      if ((v22 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_47;
        v23 = v21 * 100.0;
        if (v21 * 100.0 <= -9.22337204e18)
          goto LABEL_62;
        if (v23 >= 9.22337204e18)
          goto LABEL_63;
        v24 = v9 * 100.0;
        if ((~COERCE__INT64(v9 * 100.0) & 0x7FF0000000000000) == 0
          || (*(_QWORD *)&v23 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_64;
        }
        if (v24 <= -9.22337204e18)
          goto LABEL_65;
        if (v24 >= 9.22337204e18)
          goto LABEL_66;
        if (*(uint64_t *)&v23 != *(uint64_t *)&v24 && v21 < v9)
        {
LABEL_47:
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D2D4B0F4(v2);
            v2 = (_QWORD *)result;
          }
          if (v13 >= v2[2])
            goto LABEL_61;
          v27 = (double *)&v2[v14];
          *(v27 - 1) = v9;
          *(_BYTE *)v27 = v10;
          v5 = v31;
          if ((v31 & 0xFE) == 0)
            v5 = 1;
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    v0 = v32;
    v32[43] = v2;
    ++v3;
  }
  while (v3 != v34);
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_55;
  if (v31 == 1)
  {
    swift_bridgeObjectRetain();
    v32[44] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  else
  {
    v29 = v32[38];
    v32[17] = v2;
    swift_bridgeObjectRetain_n();
    sub_1D2D0FEE4(v30);
    if (v29)
      return swift_release();
    swift_bridgeObjectRelease();
    v32[46] = v32[17];
    v32[47] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D0DEAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 344);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 112) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0DF40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 304) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D0DFA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 128) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D0E038()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D0DF40;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D0E0C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0E114()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D0E164()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  v1 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 392) = v1;
  v2 = v1;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E034();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 152) = v7;
    sub_1D2D9E1B4();
    *v6 = v7;

    _os_log_impl(&dword_1D2CC0000, v3, v4, "Failed to delete language: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v6, -1, -1);
    MEMORY[0x1D8248974](v5, -1, -1);
  }
  else
  {

  }
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_1D2D0E0C0;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v0 + 184);
  return swift_task_switch();
}

uint64_t sub_1D2D0E30C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9C96C();
  *a1 = result;
  return result;
}

uint64_t LanguagesServiceBridge.models.getter()
{
  return sub_1D2D0E3C0();
}

uint64_t sub_1D2D0E3C0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t LanguagesServiceBridge.models.setter(uint64_t a1)
{
  return sub_1D2D0E48C(a1, &OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_models);
}

uint64_t sub_1D2D0E48C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

void sub_1D2D0E4D8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_models);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
  v4 = sub_1D2D9DE60();

  *a2 = v4;
}

void sub_1D2D0E548(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
  v3 = (id)sub_1D2D9DE48();
  objc_msgSend(v2, sel_setModels_, v3);

}

uint64_t static LanguagesServiceBridge.modelsKeyPath.getter()
{
  return 0x736C65646F6DLL;
}

id LanguagesServiceBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LanguagesServiceBridge.init()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;
  unsigned __int8 v10;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service;
  v10 = 0;
  type metadata accessor for LanguagesService();
  v4 = swift_allocObject();
  v5 = v1;
  LanguagesService.init(task:)(&v10);
  *(_QWORD *)&v1[v3] = v4;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_subscriptions] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_models] = v6;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1D2D0E6D0();
  sub_1D2D0E9A8();

  return v7;
}

uint64_t sub_1D2D0E6D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  id v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586C08);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7290);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA73B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AB0);
  sub_1D2D9C990();
  swift_endAccess();
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C20);
  v14 = (id)sub_1D2D9E094();
  v11 = sub_1D2D9E07C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1D2CC6C74(&qword_1EFCA73C0, &qword_1EFCA7290, MEMORY[0x1E0C96190]);
  sub_1D2D10F08();
  sub_1D2D9C9FC();
  sub_1D2CCADA4((uint64_t)v2, &qword_1ED586C08);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D2CC6C74(&qword_1EFCA73C8, &qword_1EFCA73B8, MEMORY[0x1E0C95CB8]);
  sub_1D2D9CA20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BA8);
  sub_1D2CC6C74((unint64_t *)&unk_1ED586BB0, &qword_1ED586BA8, MEMORY[0x1E0DEAF58]);
  sub_1D2D9C960();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1D2D0E9A8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9DF14();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_1D2CCADA4((uint64_t)v3, (uint64_t *)&unk_1ED5878F0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1D2D9DF08();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1D2D9DEB4();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EFCA73A8;
  *(_QWORD *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1D2D0EB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v4[2] = a4;
  v5 = sub_1D2D9C7EC();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v8 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA7450 + dword_1EFCA7450);
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1D2D0EC1C;
  return v8();
}

uint64_t sub_1D2D0EC1C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D0EC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  Swift::OpaquePointer v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = (uint64_t *)(v1 + 72);
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(v4 - 3);
      v10 = *((unsigned __int8 *)v4 - 16);
      if (v10 != 1 || v9 != 0)
      {
        v12 = *(v4 - 4);
        v13 = *v4;
        v24 = *(v4 - 5);
        v25 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D2D03F2C(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
          sub_1D2D03F2C(v6 > 1, v7 + 1, 1);
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v8 = v5 + 48 * v7;
        *(_QWORD *)(v8 + 32) = v24;
        *(_QWORD *)(v8 + 40) = v12;
        *(_QWORD *)(v8 + 48) = v9;
        *(_BYTE *)(v8 + 56) = v10;
        *(_QWORD *)(v8 + 64) = v25;
        *(_QWORD *)(v8 + 72) = v13;
      }
      v4 += 6;
      --v2;
    }
    while (v2);
    v0 = v23;
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v5 + 16);
  if (v14)
  {
    v15 = *(_QWORD *)(v0 + 32);
    sub_1D2D03FA0(0, v14, 0);
    v16._rawValue = v3;
    v17 = v5 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      v19 = v3[2];
      v18 = v3[3];
      if (v19 >= v18 >> 1)
        sub_1D2D03FA0(v18 > 1, v19 + 1, 1);
      v20 = *(_QWORD *)(v0 + 40);
      v21 = *(_QWORD *)(v0 + 24);
      v3[2] = v19 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))((unint64_t)v3+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v19, v20, v21);
      v17 += 48;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    v16._rawValue = (void *)MEMORY[0x1E0DEE9D8];
  }
  LanguagesServiceBridge.download(locales:)(v16);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall LanguagesServiceBridge.download(locales:)(Swift::OpaquePointer locales)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v47 - v7;
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v10);
  v60 = (char *)&v47 - v11;
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v47 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *((_QWORD *)locales._rawValue + 2);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v48 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v49 = v1;
    v67 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03F2C(0, v17, 0);
    v19 = (char *)locales._rawValue
        + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v20 = *(_QWORD *)(v4 + 72);
    v50 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v51 = v20;
    v52 = v4;
    do
    {
      v56 = v19;
      v57 = v17;
      v21 = v59;
      v22 = v50;
      v50(v59, v19, v3);
      v22(v60, v21, v3);
      v65 = sub_1D2D9C714();
      v66 = v23;
      v63 = 45;
      v64 = 0xE100000000000000;
      v61 = 95;
      v62 = 0xE100000000000000;
      sub_1D2CD1430();
      v24 = sub_1D2D9E1E4();
      v26 = v25;
      swift_bridgeObjectRelease();
      v65 = v24;
      v66 = v26;
      v63 = 45;
      v64 = 0xE100000000000000;
      v61 = 95;
      v62 = 0xE100000000000000;
      v27 = sub_1D2D9E1E4();
      v29 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v30 = v53;
      sub_1D2D9C708();
      v31 = (uint64_t)v54;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v32 = Locale.sqDisplayName(context:in:)(0, v31);
      v34 = v33;
      v35 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v35(v31, v3);
      v36 = v55;
      v22(v55, v30, v3);
      v58 = v27;
      if (v34)
      {
        v27 = v32;
        v35((uint64_t)v36, v3);
        v35((uint64_t)v30, v3);
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v37 = Locale.sqDisplaySubname(context:in:)(0, v31);
        v34 = v38;
        v35(v31, v3);
        v35((uint64_t)v36, v3);
        v35((uint64_t)v30, v3);
        if (v34)
        {
          v27 = v37;
        }
        else
        {
          swift_bridgeObjectRetain();
          v34 = v29;
        }
      }
      v39 = v56;
      v40 = v57;
      swift_bridgeObjectRelease();
      v35((uint64_t)v60, v3);
      v35((uint64_t)v59, v3);
      v18 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v67;
      }
      v42 = *(_QWORD *)(v18 + 16);
      v41 = *(_QWORD *)(v18 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1D2D03F2C(v41 > 1, v42 + 1, 1);
        v18 = v67;
      }
      *(_QWORD *)(v18 + 16) = v42 + 1;
      v43 = v18 + 48 * v42;
      *(_QWORD *)(v43 + 32) = v58;
      *(_QWORD *)(v43 + 40) = v29;
      *(_QWORD *)(v43 + 48) = 1;
      *(_BYTE *)(v43 + 56) = 1;
      *(_QWORD *)(v43 + 64) = v27;
      *(_QWORD *)(v43 + 72) = v34;
      v19 = &v39[v51];
      v17 = v40 - 1;
    }
    while (v17);
    v16 = v48;
    v1 = v49;
  }
  v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service);
  v45 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v16, 1, 1, v45);
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = 0;
  v46[3] = 0;
  v46[4] = v18;
  v46[5] = v44;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D06D10((uint64_t)v16, (uint64_t)&unk_1EFCA7330, (uint64_t)v46);
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_1D2D0F380(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  int v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1D2D9C7EC();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1D8248A10](a2 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(v7 + 16);
    if (v9)
    {
      v23 = v8;
      v26 = MEMORY[0x1E0DEE9D8];
      sub_1D2D9E358();
      v10 = v7 + 40;
      do
      {
        v15 = *(double *)(v10 + 8);
        v16 = *(unsigned __int8 *)(v10 + 16);
        v17 = (void *)objc_opt_self();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v18 = (void *)sub_1D2D9DCB0();
        if (v16 == 1)
        {
          if (v15 == 0.0)
            v19 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 2);
          else
            v19 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 0);
          v11 = v19;

        }
        else
        {
          v11 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 1);

          if (v15 > 0.001)
            v12 = v15;
          else
            v12 = 0.001;
          objc_msgSend(v11, sel_updatePercentComplete_, v12);
        }
        swift_bridgeObjectRetain();
        sub_1D2D9C708();
        v13 = objc_allocWithZone(MEMORY[0x1E0CE9968]);
        v14 = (void *)sub_1D2D9C744();
        objc_msgSend(v13, sel_initWithLocale_progress_, v14, v11);

        (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1D2D9E340();
        sub_1D2D9E364();
        sub_1D2D9E370();
        sub_1D2D9E34C();
        v10 += 48;
        --v9;
      }
      while (v9);
      sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
      v20 = sub_1D2D9DE48();
      swift_release();
      v21 = v23;
      objc_msgSend(v23, sel_setModels_, v20);

      v8 = (void *)v20;
    }

  }
}

void *LanguagesServiceBridge.model(locale:)(uint64_t a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  void *v5;
  _QWORD v7[4];

  v3 = objc_msgSend(v1, sel_models);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
  v4 = sub_1D2D9DE60();

  v7[2] = a1;
  v5 = sub_1D2D06BF0(sub_1D2D1129C, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D2D0F6DC(id *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = objc_msgSend(*a1, sel_ltIdentifier);
  v2 = sub_1D2D9DCD4();
  v4 = v3;

  sub_1D2D9C714();
  sub_1D2CD1430();
  v5 = 1;
  v6 = sub_1D2D9E1E4();
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2 != v6 || v4 != v8)
    v5 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t LanguagesServiceBridge.delete(locale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, __n128);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9C7EC();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v36 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v36 - v15;
  v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v38((char *)&v36 - v15, a1, v4, v14);
  v39 = v16;
  v46 = sub_1D2D9C714();
  v47 = v18;
  v44 = 45;
  v45 = 0xE100000000000000;
  v42 = 95;
  v43 = 0xE100000000000000;
  sub_1D2CD1430();
  v19 = sub_1D2D9E1E4();
  v21 = v20;
  swift_bridgeObjectRelease();
  v46 = v19;
  v47 = v21;
  v44 = 45;
  v45 = 0xE100000000000000;
  v42 = 95;
  v43 = 0xE100000000000000;
  v22 = sub_1D2D9E1E4();
  v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v25 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v9);
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28(v9, v4);
  ((void (*)(char *, char *, uint64_t))v38)(v6, v12, v4);
  if (v27)
  {
    v28(v6, v4);
    v28(v12, v4);
  }
  else
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    v25 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v9);
    v27 = v29;
    v28(v9, v4);
    v28(v6, v4);
    v28(v12, v4);
    if (!v27)
    {
      swift_bridgeObjectRetain();
      v25 = v22;
      v27 = v24;
    }
  }
  swift_bridgeObjectRelease();
  v28(v39, v4);
  v30 = *(_QWORD *)(v40 + OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586C48);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1D2DA0510;
  *(_QWORD *)(v31 + 32) = v22;
  *(_QWORD *)(v31 + 40) = v24;
  *(_QWORD *)(v31 + 48) = 1;
  *(_BYTE *)(v31 + 56) = 1;
  *(_QWORD *)(v31 + 64) = v25;
  *(_QWORD *)(v31 + 72) = v27;
  v32 = sub_1D2D9DF14();
  v33 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v41, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v31;
  v34[5] = v30;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D06D10(v33, (uint64_t)&unk_1EFCA7338, (uint64_t)v34);
  swift_bridgeObjectRelease();
  return swift_release();
}

id LanguagesServiceBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2D0FE34(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D2D0FE98;
  return v6(a1);
}

uint64_t sub_1D2D0FE98()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D2D0FEE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D2D2B9B4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D2D0FF4C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D2D0FF4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1D2D9E4FC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      return sub_1D2D106E4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v104 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v103 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v94)
            goto LABEL_139;
          v96 = *(_QWORD *)&v8[16 * v95 + 32];
          v97 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1D2D1080C((char *)(v94 + 48 * v96), (char *)(v94 + 48 * *(_QWORD *)&v8[16 * v11 + 16]), v94 + 48 * v97, __dst);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1D2D2B9A0((uint64_t)v8);
          if (v95 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v98 = &v8[16 * v95 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v8 + 2);
          if (v11 > v99)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v99 - v11));
          *((_QWORD *)v8 + 2) = v99 - 1;
          v11 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1D2D9DE90();
    *(_QWORD *)(v7 + 16) = v6;
    v103 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v102 = *a1 + 136;
  v100 = *a1 + 40;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v3;
  while (1)
  {
    v12 = v9++;
    v106 = v12;
    if (v9 < v3)
    {
      sub_1D2CD1430();
      v13 = sub_1D2D9E1F0();
      v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        v14 = v102 + 48 * v12;
        while ((v13 == -1) != (sub_1D2D9E1F0() != -1))
        {
          v14 += 48;
          ++v9;
          v3 = v105;
          if (v105 == v9)
          {
            v9 = v105;
            goto LABEL_22;
          }
        }
        v3 = v105;
      }
LABEL_22:
      if (v13 == -1)
      {
        if (v9 < v12)
          goto LABEL_135;
        if (v12 < v9)
        {
          v15 = 48 * v9;
          v16 = 48 * v12;
          v17 = v9;
          v18 = v12;
          do
          {
            if (v18 != --v17)
            {
              if (!v10)
                goto LABEL_138;
              v19 = (_OWORD *)(v10 + v16);
              v20 = *(_OWORD *)(v10 + v16);
              v21 = v10 + v15;
              v22 = *(_QWORD *)(v10 + v16 + 16);
              v23 = *(_BYTE *)(v10 + v16 + 24);
              v24 = *(_QWORD *)(v10 + v16 + 32);
              v25 = *(_QWORD *)(v10 + v16 + 40);
              v27 = *(_OWORD *)(v10 + v15 - 32);
              v26 = *(_OWORD *)(v10 + v15 - 16);
              *v19 = *(_OWORD *)(v10 + v15 - 48);
              v19[1] = v27;
              v19[2] = v26;
              *(_OWORD *)(v21 - 48) = v20;
              *(_QWORD *)(v21 - 32) = v22;
              *(_BYTE *)(v21 - 24) = v23;
              *(_QWORD *)(v21 - 16) = v24;
              *(_QWORD *)(v21 - 8) = v25;
            }
            ++v18;
            v15 -= 48;
            v16 += 48;
          }
          while (v18 < v17);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v104)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D2D2B6E0(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v41 = *((_QWORD *)v8 + 2);
    v40 = *((_QWORD *)v8 + 3);
    v11 = v41 + 1;
    if (v41 >= v40 >> 1)
      v8 = sub_1D2D2B6E0((char *)(v40 > 1), v41 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v42 = v8 + 32;
    v43 = &v8[16 * v41 + 32];
    *(_QWORD *)v43 = v12;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v11 - 1;
        if (v11 >= 4)
        {
          v49 = &v42[16 * v11];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_115;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_116;
          v56 = v11 - 2;
          v57 = &v42[16 * v11 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_118;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_121;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_125;
            v72 = v47 < v82;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v73 = *((_QWORD *)v8 + 4);
            v74 = *((_QWORD *)v8 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_80;
          }
          v46 = *((_QWORD *)v8 + 4);
          v45 = *((_QWORD *)v8 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_117;
        v56 = v11 - 2;
        v62 = &v42[16 * v11 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_120;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_123;
        if (__OFADD__(v66, v71))
          goto LABEL_124;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_86:
          if (v72)
            v44 = v56;
          goto LABEL_88;
        }
LABEL_80:
        if ((v67 & 1) != 0)
          goto LABEL_119;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_122;
        if (v78 < v66)
          goto LABEL_14;
LABEL_88:
        v83 = v44 - 1;
        if (v44 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10)
          goto LABEL_137;
        v84 = v8;
        v85 = v10;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v85;
        sub_1D2D1080C((char *)(v85 + 48 * *(_QWORD *)v86), (char *)(v85 + 48 * *(_QWORD *)v90), v85 + 48 * v91, __dst);
        if (v1)
          goto LABEL_109;
        if (v91 < v87)
          goto LABEL_112;
        if (v89 > *((_QWORD *)v84 + 2))
          goto LABEL_113;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v84 + 2);
        if (v89 >= v93)
          goto LABEL_114;
        v8 = v84;
        v11 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v84 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v105;
    if (v9 >= v105)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v104))
    goto LABEL_133;
  if (v12 + v104 >= v3)
    v28 = v3;
  else
    v28 = v12 + v104;
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      sub_1D2CD1430();
      v29 = v100 + 48 * v9;
      do
      {
        v30 = v29;
        do
        {
          if (sub_1D2D9E1F0() != -1)
            break;
          if (!v10)
            goto LABEL_136;
          v31 = (_OWORD *)(v30 - 40);
          v32 = (_OWORD *)(v30 - 88);
          v34 = *(_OWORD *)(v30 - 72);
          v33 = *(_OWORD *)(v30 - 56);
          *(_QWORD *)(v30 - 48) = *(_QWORD *)v30;
          v30 -= 48;
          v35 = *(_QWORD *)(v30 + 8);
          v36 = *(_QWORD *)(v30 + 16);
          v37 = *(_QWORD *)(v30 + 24);
          v38 = *(_BYTE *)(v30 + 32);
          v39 = *(_QWORD *)(v30 + 40);
          *v31 = *v32;
          v31[1] = v34;
          v31[2] = v33;
          *(_QWORD *)(v30 - 40) = v35;
          *(_QWORD *)(v30 - 32) = v36;
          *(_QWORD *)(v30 - 24) = v37;
          *(_BYTE *)(v30 - 16) = v38;
          *(_QWORD *)(v30 - 8) = v39;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v29 += 48;
        v12 = v106;
      }
      while (v9 != v28);
      v9 = v28;
    }
    goto LABEL_48;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  result = sub_1D2D9E388();
  __break(1u);
  return result;
}

uint64_t sub_1D2D106E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v19 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    sub_1D2CD1430();
    v7 = v6 + 48 * v4 + 40;
LABEL_5:
    v8 = v19;
    v9 = v7;
    while (1)
    {
      result = sub_1D2D9E1F0();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 48;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v10 = (_OWORD *)(v9 - 40);
      v11 = (_OWORD *)(v9 - 88);
      v13 = *(_OWORD *)(v9 - 72);
      v12 = *(_OWORD *)(v9 - 56);
      *(_QWORD *)(v9 - 48) = *(_QWORD *)v9;
      v9 -= 48;
      v14 = *(_QWORD *)(v9 + 8);
      v15 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      v17 = *(_BYTE *)(v9 + 32);
      v18 = *(_QWORD *)(v9 + 40);
      *v10 = *v11;
      v10[1] = v13;
      v10[2] = v12;
      *(_QWORD *)(v9 - 40) = v14;
      *(_QWORD *)(v9 - 32) = v15;
      *(_QWORD *)(v9 - 24) = v16;
      *(_BYTE *)(v9 - 16) = v17;
      *(_QWORD *)(v9 - 8) = v18;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2D1080C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char *v27;
  const void *v28;
  char *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v29 = __src;
  v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v18 = &v4[48 * v11];
      v27 = v18;
      v29 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        sub_1D2CD1430();
        v19 = (char *)(a3 - 48);
        do
        {
          v20 = v19 + 48;
          if (sub_1D2D9E1F0() == -1)
          {
            v23 = v6 - 48;
            if (v20 != v6 || v19 >= v6)
            {
              v24 = *(_OWORD *)v23;
              v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v19 + 2) = v25;
              *(_OWORD *)v19 = v24;
            }
            v29 = v6 - 48;
            if (v23 <= v7)
              break;
          }
          else
          {
            v27 = v18 - 48;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
            {
              v21 = *((_OWORD *)v18 - 3);
              v22 = *((_OWORD *)v18 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 2) = v22;
              *(_OWORD *)v19 = v21;
            }
            v23 = v6;
            v18 -= 48;
            if (v6 <= v7)
              break;
          }
          v19 -= 48;
          v6 = v23;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1D2D2B7D8((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = &v4[48 * v9];
    v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      sub_1D2CD1430();
      v13 = v4;
      while (1)
      {
        if (sub_1D2D9E1F0() == -1)
        {
          v15 = v6 + 48;
          v14 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_18;
        }
        else
        {
          v4 = v13 + 48;
          v14 = v13;
          v15 = v6;
          if (v7 == v13)
          {
            v13 += 48;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 48;
          }
        }
        v16 = *(_OWORD *)v14;
        v17 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 48;
        if (v13 < v12)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v28 = v4;
        v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D10B30(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D2D10B98;
  return v5(v2 + 32);
}

uint64_t sub_1D2D10B98()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1D2D10BE8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_1D2D10C50;
  return v5(v2 + 16);
}

uint64_t sub_1D2D10C50()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void sub_1D2D10CA0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;

  v40 = a2;
  v3 = sub_1D2D9C7EC();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = a1 + 40;
    v31 = v5 - 1;
    v8 = MEMORY[0x1E0DEE9D8];
    v32 = v7;
    v36 = v5;
    do
    {
      v33 = v8;
      if (v6 <= v5)
        v9 = v5;
      else
        v9 = v6;
      v41 = v9;
      for (i = (uint64_t *)(v7 + 48 * v6); ; i += 6)
      {
        if (v41 == v6)
        {
          __break(1u);
          return;
        }
        v12 = *(i - 1);
        v11 = *i;
        v35 = i[1];
        v34 = *((unsigned __int8 *)i + 16);
        v13 = v6 + 1;
        v14 = i[3];
        v15 = i[4];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v16 = v37;
        sub_1D2D9C708();
        v17 = (void *)sub_1D2D9C744();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
        LOBYTE(v16) = objc_msgSend(v40, sel_locale_supportsModality_, v17, 1);

        if ((v16 & 1) == 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v6;
        if (v36 == v13)
          return;
      }
      v41 = v14;
      v18 = v15;
      v30 = v6;
      v19 = v34;
      v20 = v35;
      v8 = v33;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v42;
      }
      v22 = v20;
      v23 = v19;
      v24 = v12;
      v25 = v41;
      v27 = *(_QWORD *)(v8 + 16);
      v26 = *(_QWORD *)(v8 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1D2D03F2C(v26 > 1, v27 + 1, 1);
        v25 = v41;
        v24 = v12;
        v23 = v19;
        v22 = v20;
        v8 = v42;
      }
      *(_QWORD *)(v8 + 16) = v27 + 1;
      v28 = v8 + 48 * v27;
      *(_QWORD *)(v28 + 32) = v24;
      *(_QWORD *)(v28 + 40) = v11;
      *(_QWORD *)(v28 + 48) = v22;
      *(_BYTE *)(v28 + 56) = v23;
      *(_QWORD *)(v28 + 64) = v25;
      *(_QWORD *)(v28 + 72) = v18;
      v5 = v36;
      v7 = v32;
      ++v6;
    }
    while (v31 != v30);
  }
}

unint64_t sub_1D2D10F08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED586C10;
  if (!qword_1ED586C10)
  {
    v1 = sub_1D2CC63E8(255, (unint64_t *)&qword_1ED586C20);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED586C10);
  }
  return result;
}

uint64_t sub_1D2D10F60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2D10F84()
{
  return sub_1D2D08858();
}

uint64_t sub_1D2D10F8C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D10FC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D088E0(a1, v4, v5, v7, v6);
}

uint64_t sub_1D2D1103C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D09AE4(a1, v4, v5, v6);
}

uint64_t sub_1D2D110AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2CE1A58;
  v3[6] = v2;
  return swift_task_switch();
}

uint64_t sub_1D2D11110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D0ACCC(a1, v4, v5, v6);
}

uint64_t sub_1D2D11180(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE16D4;
  return sub_1D2D0C248(a1, v4, v5, v6);
}

uint64_t sub_1D2D111EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE1A58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA7308 + dword_1EFCA7308))(a1, v4);
}

uint64_t type metadata accessor for LanguagesService()
{
  uint64_t result;

  result = qword_1ED586788;
  if (!qword_1ED586788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D1129C(id *a1)
{
  return sub_1D2D0F6DC(a1) & 1;
}

uint64_t sub_1D2D112BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D0D244(a1, v4, v5, v7, v6);
}

uint64_t sub_1D2D11334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1ED586AB0);
}

uint64_t sub_1D2D11358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, &qword_1EFCA7290, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1ED586AB0);
}

uint64_t sub_1D2D11384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EFCA72A0);
}

uint64_t sub_1D2D113A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, &qword_1EFCA72A8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EFCA72A0);
}

uint64_t sub_1D2D113D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1ED587798);
}

uint64_t sub_1D2D113F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1ED587798);
}

char *keypath_get_selector_models()
{
  return sel_models;
}

uint64_t sub_1D2D11438()
{
  return type metadata accessor for LanguagesService();
}

void sub_1D2D11440()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2CFC8D4(319, &qword_1ED586AB8, &qword_1ED586B80);
  if (v0 <= 0x3F)
  {
    sub_1D2CFC8D4(319, &qword_1EFCA7340, &qword_1EFCA72B0);
    if (v1 <= 0x3F)
    {
      sub_1D2CC7D14();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for LanguagesService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LanguagesService.__allocating_init(task:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t type metadata accessor for LanguagesServiceBridge()
{
  return objc_opt_self();
}

uint64_t sub_1D2D1156C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE1A58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA7370 + dword_1EFCA7370))(a1, v4);
}

uint64_t sub_1D2D115DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE1A58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA7388 + dword_1EFCA7388))(a1, v4);
}

uint64_t sub_1D2D1164C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D2D11678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D0EB98(a1, v4, v5, v6);
}

uint64_t sub_1D2D116E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *i;
  BOOL v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v3 = 0;
  v4 = *a2;
  v5 = a2[1];
  for (i = (_QWORD *)(a1 + 40); ; i += 6)
  {
    v7 = *(i - 1) == v4 && *i == v5;
    if (v7 || (sub_1D2D9E52C() & 1) != 0)
      break;
    if (v2 == ++v3)
      return 0;
  }
  return v3;
}

uint64_t sub_1D2D11770()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D2D11794(uint64_t *a1)
{
  uint64_t v1;

  sub_1D2D0F380(a1, v1);
}

uint64_t sub_1D2D1179C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D2D117D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D09718(a1, v4, v5, v7, v6);
}

void sub_1D2D11848(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D11DF4(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1D2D11854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA73F8;
  if (!qword_1EFCA73F8)
  {
    v1 = sub_1D2D9E0F4();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CB1EE8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA73F8);
  }
  return result;
}

uint64_t sub_1D2D118A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE16D4;
  return sub_1D2D09AE4(a1, v4, v5, v6);
}

uint64_t sub_1D2D11910()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D11964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE1A58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA7430 + dword_1EFCA7430))(a1, v4);
}

uint64_t sub_1D2D119D4(id *a1)
{
  return sub_1D2D1129C(a1) & 1;
}

uint64_t static LanguagesStatusService.refresh(task:useCellular:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7168);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5878C8 != -1)
    swift_once();
  v4 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED588700);
  v5 = sub_1D2D9C8DC();
  v6 = sub_1D2D9E028();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D2CC0000, v5, v6, "Requested refresh of language asset query", v7, 2u);
    MEMORY[0x1D8248974](v7, -1, -1);
  }

  MEMORY[0x1E0C80A78](v8);
  *(&v11 - 2) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DF0A50], v0);
  return sub_1D2D9DFA4();
}

uint64_t static LanguagesStatusService.selected()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA7450 + dword_1EFCA7450);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D18080;
  return v3();
}

uint64_t static LanguagesStatusService.autoDetectSpeechUnsupportedPairs()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BF0);
  *v1 = v0;
  v1[1] = sub_1D2D11CA8;
  return sub_1D2D9E514();
}

uint64_t sub_1D2D11CA8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t static LanguagesStatusService.localeModalities()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  sub_1D2CC63E8(0, &qword_1EFCA73D8);
  *v1 = v0;
  v1[1] = sub_1D2D11D98;
  return sub_1D2D9E514();
}

uint64_t sub_1D2D11D98()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D11DEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_1D2D11DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1D2D17F10;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D12430;
  aBlock[3] = &block_descriptor_35;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_languageAssetsWithOptions_completion_, a2, v10);
  _Block_release(v10);
}

uint64_t sub_1D2D11F38(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  id v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v56 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7190);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v74 = (uint64_t)a2;
    v20 = a2;
LABEL_30:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    return sub_1D2D9DF80();
  }
  v69 = v15;
  v66 = v6;
  if (!a1)
  {
LABEL_29:
    v74 = 0;
    goto LABEL_30;
  }
  v59 = v19;
  v65 = v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v22 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  if (!v21)
  {
LABEL_28:
    v74 = (uint64_t)v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178);
    v55 = v59;
    sub_1D2D9DF74();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v55, v16);
    goto LABEL_29;
  }
  v56 = v17;
  v64 = v7;
  v57 = v16;
  v58 = a3;
  v76 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  result = sub_1D2D03F2C(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    v24 = 0;
    v60 = a1 & 0xC000000000000001;
    v61 = v21;
    v62 = v12;
    v63 = a1;
    while (1)
    {
      if (v60)
        v25 = (id)MEMORY[0x1D8247E58](v24, a1);
      else
        v25 = *(id *)(a1 + 8 * v24 + 32);
      v26 = v25;
      v27 = v65;
      v28 = objc_msgSend(v25, sel_state);
      if (v28 == (id)2)
      {
        v67 = 1;
        v31 = 0;
      }
      else if (v28 == (id)1)
      {
        v29 = objc_msgSend(v26, sel_progress);
        objc_msgSend(v29, sel_fractionCompleted);
        v31 = v30;

        v67 = 0;
      }
      else
      {
        v67 = 1;
        v31 = 1;
      }
      v68 = v26;
      v32 = objc_msgSend(v26, sel_ltIdentifier);
      v33 = sub_1D2D9DCD4();
      v35 = v34;

      v74 = v33;
      v75 = v35;
      v72 = 45;
      v73 = 0xE100000000000000;
      v70 = 95;
      v71 = 0xE100000000000000;
      sub_1D2CD1430();
      v36 = sub_1D2D9E1E4();
      v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v39 = v36;
      sub_1D2D9C708();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v40 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v12);
      v42 = v41;
      v43 = v64;
      v44 = *(void (**)(char *, uint64_t))(v64 + 8);
      v45 = v66;
      v44(v12, v66);
      v46 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      v47 = v69;
      v46(v27, v69, v45);
      if (v42)
      {
        v44(v27, v45);
        v44(v47, v45);
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v48 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v12);
        v49 = v66;
        v40 = v48;
        v42 = v50;
        v44(v12, v66);
        v44(v27, v49);
        v44(v47, v49);
        if (!v42)
        {
          swift_bridgeObjectRetain();
          v51 = v39;
          v42 = v38;
          goto LABEL_21;
        }
      }
      v51 = v40;
LABEL_21:

      swift_bridgeObjectRelease();
      v22 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, v22[2] + 1, 1);
        v22 = v76;
      }
      v53 = v22[2];
      v52 = v22[3];
      if (v53 >= v52 >> 1)
      {
        sub_1D2D03F2C(v52 > 1, v53 + 1, 1);
        v22 = v76;
      }
      ++v24;
      v22[2] = v53 + 1;
      v54 = &v22[6 * v53];
      v54[4] = v39;
      v54[5] = v38;
      v54[6] = v31;
      *((_BYTE *)v54 + 56) = v67;
      v54[8] = v51;
      v54[9] = v42;
      v12 = v62;
      a1 = v63;
      if (v61 == v24)
      {
        v16 = v57;
        v17 = v56;
        goto LABEL_28;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D12430(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
    v4 = sub_1D2D9DE60();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t static LanguagesStatusService.available(task:)()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1D2D9C7EC();
  v0[22] = v1;
  v0[23] = *(_QWORD *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D12534()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 21;
  v0[2] = v0;
  v0[3] = sub_1D2D125E0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D2D12AA0;
  v3[3] = &block_descriptor_2;
  v3[4] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 16, v3);
  return swift_continuation_await();
}

uint64_t sub_1D2D125E0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D2D12640()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v32);
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_25;
LABEL_3:
  v48 = MEMORY[0x1E0DEE9D8];
  result = sub_1D2D03F2C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v41 = *(_QWORD *)(v0 + 184);
    v40 = v1 & 0xC000000000000001;
    v42 = v2;
    v43 = v1;
    while (1)
    {
      if (v40)
        v5 = (id)MEMORY[0x1D8247E58](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_state, v36, v37, v38, v39);
      if (v7 == (id)2)
      {
        v44 = 1;
        v10 = 0;
      }
      else if (v7 == (id)1)
      {
        v8 = objc_msgSend(v6, sel_progress);
        objc_msgSend(v8, sel_fractionCompleted);
        v10 = v9;

        v44 = 0;
      }
      else
      {
        v44 = 1;
        v10 = 1;
      }
      v12 = *(_QWORD *)(v0 + 200);
      v11 = *(_QWORD *)(v0 + 208);
      v45 = *(_QWORD *)(v0 + 192);
      v13 = *(_QWORD *)(v0 + 176);
      v47 = v6;
      v14 = objc_msgSend(v6, sel_ltIdentifier);
      v15 = sub_1D2D9DCD4();
      v17 = v16;

      *(_QWORD *)(v0 + 120) = v15;
      *(_QWORD *)(v0 + 128) = v17;
      *(_QWORD *)(v0 + 136) = 45;
      *(_QWORD *)(v0 + 144) = 0xE100000000000000;
      *(_QWORD *)(v0 + 152) = 95;
      *(_QWORD *)(v0 + 160) = 0xE100000000000000;
      v38 = sub_1D2CD1430();
      v39 = v38;
      v37 = v38;
      v36 = MEMORY[0x1E0DEA968];
      v18 = sub_1D2D9E1E4();
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v46 = v18;
      sub_1D2D9C708();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v21 = Locale.sqDisplayName(context:in:)(0, v12);
      v23 = v22;
      v24 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v24(v12, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v45, v11, v13);
      v25 = *(_QWORD *)(v0 + 208);
      if (v23)
      {
        v26 = *(_QWORD *)(v0 + 176);
        v24(*(_QWORD *)(v0 + 192), v26);
        v24(v25, v26);
      }
      else
      {
        v27 = *(_QWORD *)(v0 + 192);
        v28 = *(_QWORD *)(v0 + 200);
        v29 = *(_QWORD *)(v0 + 176);
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v21 = Locale.sqDisplaySubname(context:in:)(0, v28);
        v23 = v30;
        v24(v28, v29);
        v24(v27, v29);
        v24(v25, v29);
        if (!v23)
        {
          swift_bridgeObjectRetain();
          v31 = v46;
          v21 = v46;
          v23 = v20;
          goto LABEL_17;
        }
      }
      v31 = v46;
LABEL_17:
      swift_bridgeObjectRelease();

      v32 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v32 = v48;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1D2D03F2C(v33 > 1, v34 + 1, 1);
        v32 = v48;
      }
      ++v4;
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v35 = v32 + 48 * v34;
      *(_QWORD *)(v35 + 32) = v31;
      *(_QWORD *)(v35 + 40) = v20;
      *(_QWORD *)(v35 + 48) = v10;
      *(_BYTE *)(v35 + 56) = v44;
      *(_QWORD *)(v35 + 64) = v21;
      *(_QWORD *)(v35 + 72) = v23;
      v1 = v43;
      if (v42 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D12A40()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D12AA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587378);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C38);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1D2D9DE60();
    return swift_continuation_throwingResume();
  }
}

uint64_t static LanguagesStatusService.offline()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA7478 + dword_1EFCA7478);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D12BA0;
  return v3();
}

uint64_t sub_1D2D12BA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t static LanguagesStatusService.status(task:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA7488 + dword_1EFCA7488);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D12C50;
  return v3();
}

uint64_t sub_1D2D12C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t static LanguagesStatusService.isInstalled(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA7498 + dword_1EFCA7498);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2D12BA0;
  return v5(a1);
}

uint64_t static LanguagesStatusService.languagePairState(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
  *(_QWORD *)(v2 + 240) = type metadata accessor for LocalePair();
  *(_QWORD *)(v2 + 248) = swift_task_alloc();
  v3 = sub_1D2D9C7EC();
  *(_QWORD *)(v2 + 256) = v3;
  *(_QWORD *)(v2 + 264) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 272) = swift_task_alloc();
  *(_QWORD *)(v2 + 280) = swift_task_alloc();
  *(_QWORD *)(v2 + 288) = swift_task_alloc();
  *(_QWORD *)(v2 + 296) = swift_task_alloc();
  *(_QWORD *)(v2 + 304) = swift_task_alloc();
  *(_QWORD *)(v2 + 312) = swift_task_alloc();
  *(_QWORD *)(v2 + 320) = swift_task_alloc();
  *(_BYTE *)(v2 + 352) = 1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA7488 + dword_1EFCA7488);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 328) = v4;
  *v4 = v2;
  v4[1] = sub_1D2D12E0C;
  return v6(v2 + 352);
}

uint64_t sub_1D2D12E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D12E78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  BOOL v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t (*v71)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char v89;

  v1 = v0[39];
  v77 = v0[33];
  v79 = v0[37];
  v74 = v0[38];
  v75 = v0[32];
  v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
  ((void (*)(_QWORD, _QWORD))v83)(v0[40], v0[29]);
  v0[4] = sub_1D2D9C714();
  v0[5] = v2;
  v0[6] = 45;
  v0[7] = 0xE100000000000000;
  v0[8] = 95;
  v0[9] = 0xE100000000000000;
  sub_1D2CD1430();
  v3 = sub_1D2D9E1E4();
  v5 = v4;
  swift_bridgeObjectRelease();
  v0[10] = v3;
  v0[12] = 45;
  v0[11] = v5;
  v0[13] = 0xE100000000000000;
  v0[14] = 95;
  v0[15] = 0xE100000000000000;
  v6 = sub_1D2D9E1E4();
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v9 = v1;
  Locale.sqDisplayName(context:in:)(0, v74);
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v12(v74, v75);
  v83(v79, v9, v75);
  v13 = v0[39];
  if (v11)
  {
    v14 = v0[32];
    v12(v0[37], v14);
    v12(v13, v14);
  }
  else
  {
    v16 = v0[37];
    v15 = v0[38];
    v17 = v0[32];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v15);
    v19 = v18;
    v12(v15, v17);
    v12(v16, v17);
    v12(v13, v17);
    if (!v19)
      swift_bridgeObjectRetain();
  }
  v20 = v0[40];
  v21 = v0[36];
  v76 = v0[35];
  v78 = v0[38];
  v80 = v0[34];
  v22 = v0[32];
  v23 = v0[29];
  v24 = v0[30];
  swift_bridgeObjectRelease();
  v12(v20, v22);
  v83(v21, v23 + *(int *)(v24 + 20), v22);
  v0[2] = sub_1D2D9C714();
  v0[3] = v25;
  v0[18] = 45;
  v0[19] = 0xE100000000000000;
  v0[20] = 95;
  v0[21] = 0xE100000000000000;
  v26 = sub_1D2D9E1E4();
  v28 = v27;
  swift_bridgeObjectRelease();
  v0[22] = v26;
  v0[23] = v28;
  v0[24] = 45;
  v0[25] = 0xE100000000000000;
  v0[16] = 95;
  v0[17] = 0xE100000000000000;
  v29 = sub_1D2D9E1E4();
  v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v85 = v29;
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v78);
  v33 = v32;
  v12(v78, v22);
  v83(v80, v76, v22);
  v34 = v12;
  if (v33)
  {
    v35 = v0[35];
    v36 = v0[32];
    v12(v0[34], v36);
    v12(v35, v36);
  }
  else
  {
    v37 = v0[38];
    v38 = v0[34];
    v39 = v0[35];
    v40 = v0[32];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v37);
    v42 = v41;
    v34(v37, v40);
    v34(v38, v40);
    v34(v39, v40);
    if (!v42)
      swift_bridgeObjectRetain();
  }
  v43 = v0[42];
  v44 = v0[36];
  v45 = v0[32];
  swift_bridgeObjectRelease();
  v34(v44, v45);
  v82 = v43;
  v46 = *(_QWORD *)(v43 + 16);
  if (!v46)
    goto LABEL_26;
  v81 = v0[42];
  v47 = v81 + 40;
  while (1)
  {
    v48 = *(_QWORD *)(v47 + 8);
    v49 = *(_BYTE *)(v47 + 16);
    v50 = *(_QWORD *)(v47 - 8) == v6 && *(_QWORD *)v47 == v8;
    if (v50 || (sub_1D2D9E52C() & 1) != 0)
      break;
    v47 += 48;
    if (!--v46)
      goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = *(_QWORD *)(v82 + 16);
  if (v51)
  {
    v52 = (_BYTE *)(v81 + 56);
    v53 = v85;
    while (1)
    {
      v54 = *((_QWORD *)v52 - 1);
      v55 = *v52;
      if (*((_QWORD *)v52 - 3) == v53 && *((_QWORD *)v52 - 2) == v31)
        break;
      v57 = sub_1D2D9E52C();
      v53 = v85;
      if ((v57 & 1) != 0)
        break;
      v52 += 48;
      if (!--v51)
        goto LABEL_26;
    }
    v73 = v0[28];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = v48;
    v89 = v49;
    v86 = v54;
    LOBYTE(v87) = v55;
    LanguageState.combine(_:)((uint64_t)&v86, v73);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v71 = (uint64_t (*)(void))v0[1];
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED5878C8 != -1)
      swift_once();
    v58 = v0[31];
    v59 = v0[29];
    v60 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v60, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v59, v58);
    v61 = sub_1D2D9C8DC();
    v62 = sub_1D2D9E034();
    v63 = os_log_type_enabled(v61, v62);
    v64 = v0[31];
    if (v63)
    {
      v65 = swift_slowAlloc();
      v66 = (_QWORD *)swift_slowAlloc();
      v84 = swift_slowAlloc();
      *(_DWORD *)v65 = 136446466;
      v88 = v84;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v86 = 0x203A656372756F73;
      v87 = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      v0[27] = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v88);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734(v64, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      *(_WORD *)(v65 + 12) = 2112;
      sub_1D2D15ED8();
      v67 = (void *)swift_allocError();
      *v68 = 0;
      v69 = sub_1D2D9C5F4();

      v0[26] = v69;
      sub_1D2D9E1B4();
      *v66 = v69;
      _os_log_impl(&dword_1D2CC0000, v61, v62, "Failed to read pair state for pair %{public}s: %@", (uint8_t *)v65, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v66, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v84, -1, -1);
      MEMORY[0x1D8248974](v65, -1, -1);
    }
    else
    {
      sub_1D2CD3734(v0[31], (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    }

    sub_1D2D15ED8();
    swift_allocError();
    *v70 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v71 = (uint64_t (*)(void))v0[1];
  }
  return v71();
}

uint64_t sub_1D2D13828()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static LanguagesStatusService.languagePairPath(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA74B8 + dword_1EFCA74B8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2D12BA0;
  return v5(a1);
}

uint64_t static LanguagesStatusService.isReady(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA74B8 + dword_1EFCA74B8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2D13980;
  return v5(a1);
}

uint64_t sub_1D2D13980(unsigned __int8 a1)
{
  uint64_t *v1;
  unsigned int v3;
  uint64_t v5;

  v3 = a1;
  v5 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v5 + 8))((v3 > 5) | (6u >> a1) & 1);
}

uint64_t LanguagePairPath.isReady.getter(unsigned __int8 a1)
{
  return (a1 > 5u) | (6u >> a1) & 1;
}

void sub_1D2D13A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (void *)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1D2D17E48;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D28A2C;
  aBlock[3] = &block_descriptor_28;
  v8 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_autoDetectSpeechUnsupportedPairsWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1D2D13B44(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9E8];
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9E8];
LABEL_12:
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE0);
    return sub_1D2D9DECC();
  }
  swift_bridgeObjectRetain();
  result = sub_1D2D9E3AC();
  v2 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1D8247E58](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_canonicalIdentifier);
      v8 = sub_1D2D9DCD4();
      v10 = v9;

      sub_1D2D94D74(&v12, v8, v10);
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    v11 = v13;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1D2D13CA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA74D8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (void *)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1D2D17E10;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D13E28;
  aBlock[3] = &block_descriptor_22_0;
  v8 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_modalitiesPerLocaleWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1D2D13DE4(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA74D8);
  return sub_1D2D9DECC();
}

void sub_1D2D13E28(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t LanguagePairPath.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D13EB4 + 4 * byte_1D2DA2A90[a1]))(0x6F72687473736170, 0xEB00000000686775);
}

uint64_t sub_1D2D13EB4()
{
  return 0x6563697665446E6FLL;
}

uint64_t sub_1D2D13ECC()
{
  return 0x6B726F7774656ELL;
}

unint64_t sub_1D2D13EE4()
{
  return 0xD000000000000017;
}

unint64_t sub_1D2D13F0C()
{
  return 0xD000000000000012;
}

uint64_t LanguagePairPath.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D13F68 + 4 * byte_1D2DA2A96[a1]))(0x6F72687473736170, 0xEB00000000686775);
}

uint64_t sub_1D2D13F68()
{
  return 0x6563697665446E6FLL;
}

uint64_t sub_1D2D13F80()
{
  return 0x6B726F7774656ELL;
}

unint64_t sub_1D2D13F98()
{
  return 0xD000000000000017;
}

unint64_t sub_1D2D13FC0()
{
  return 0xD000000000000012;
}

uint64_t sub_1D2D13FE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = LanguagePairPath.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == LanguagePairPath.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D2D1406C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  LanguagePairPath.rawValue.getter(v1);
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D140CC()
{
  unsigned __int8 *v0;

  LanguagePairPath.rawValue.getter(*v0);
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D1410C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  LanguagePairPath.rawValue.getter(v1);
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D14168@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13TranslationUI16LanguagePairPathO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D14194@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = LanguagePairPath.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D2D141BC()
{
  unsigned __int8 *v0;

  return LanguagePairPath.description.getter(*v0);
}

uint64_t sub_1D2D141C4(char *a1, char *a2)
{
  return sub_1D2D2C54C(*a1, *a2);
}

uint64_t sub_1D2D141D0()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D14250()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D142AC()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D14328@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D2D9E3F4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1D2D14384(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6563697665446E6FLL;
  if (*v1)
    v2 = 0x6B726F7774656ELL;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2D143C4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B726F7774656ELL;
  else
    return 0x6563697665446E6FLL;
}

uint64_t sub_1D2D14400()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18[5];
  __int128 v19;
  __int128 v20;

  if (getenv("LT_ONDEVICE_MODE"))
  {
    v0 = sub_1D2D9DDAC();
    v2 = sub_1D2CDE84C(v0, v1);
    swift_bridgeObjectRelease();
    if (v2)
    {
      sub_1D2D9E298();
      if (*(_QWORD *)(v2 + 16) && (v3 = sub_1D2D64EFC((uint64_t)v18), (v4 & 1) != 0))
      {
        sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v19);
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1D2CC8030((uint64_t)v18);
      if (*((_QWORD *)&v20 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v5 = sub_1D2D9E3F4();
          swift_bridgeObjectRelease();
          if (v5 <= 1)
          {
            if (qword_1ED586A50 != -1)
              swift_once();
            v6 = sub_1D2D9C8F4();
            __swift_project_value_buffer(v6, (uint64_t)qword_1ED588680);
            v7 = sub_1D2D9C8DC();
            v8 = sub_1D2D9E01C();
            if (!os_log_type_enabled(v7, v8))
            {

              return v5;
            }
            v9 = (uint8_t *)swift_slowAlloc();
            v10 = swift_slowAlloc();
            *(_DWORD *)v9 = 136315138;
            v18[0] = v10;
            if ((_DWORD)v5)
              v11 = 0x6B726F7774656ELL;
            else
              v11 = 0x6563697665446E6FLL;
            if ((_DWORD)v5)
              v12 = 0xE700000000000000;
            else
              v12 = 0xE800000000000000;
            *(_QWORD *)&v19 = sub_1D2CF78E0(v11, v12, v18);
            sub_1D2D9E1B4();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2CC0000, v7, v8, "Model path fixture found %s", v9, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D8248974](v10, -1, -1);
            v13 = v9;
            goto LABEL_25;
          }
        }
      }
      else
      {
        sub_1D2CC8064((uint64_t)&v19);
      }
    }
  }
  if (qword_1ED586A50 != -1)
    swift_once();
  v14 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED588680);
  v7 = sub_1D2D9C8DC();
  v15 = sub_1D2D9E01C();
  if (!os_log_type_enabled(v7, v15))
  {

    return 2;
  }
  v5 = 2;
  v16 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v16 = 0;
  _os_log_impl(&dword_1D2CC0000, v7, v15, "Model path fixture not found", v16, 2u);
  v13 = v16;
LABEL_25:
  MEMORY[0x1D8248974](v13, -1, -1);

  return v5;
}

uint64_t sub_1D2D14758()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1D2D9C7EC();
  v0[22] = v1;
  v0[23] = *(_QWORD *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D147D0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 21;
  v0[2] = v0;
  v0[3] = sub_1D2D1487C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D2D12AA0;
  v3[3] = &block_descriptor_29;
  v3[4] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 32, v3);
  return swift_continuation_await();
}

uint64_t sub_1D2D1487C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D2D148DC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1D2D9C7EC();
  v0[22] = v1;
  v0[23] = *(_QWORD *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D14954()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 21;
  v0[2] = v0;
  v0[3] = sub_1D2D14A00;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D2D12AA0;
  v3[3] = &block_descriptor_21;
  v3[4] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 64, v3);
  return swift_continuation_await();
}

uint64_t sub_1D2D14A00()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D2D14A60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v32);
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_25;
LABEL_3:
  v48 = MEMORY[0x1E0DEE9D8];
  result = sub_1D2D03F2C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v41 = *(_QWORD *)(v0 + 184);
    v40 = v1 & 0xC000000000000001;
    v42 = v2;
    v43 = v1;
    while (1)
    {
      if (v40)
        v5 = (id)MEMORY[0x1D8247E58](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_state, v36, v37, v38, v39);
      if (v7 == (id)2)
      {
        v44 = 1;
        v10 = 0;
      }
      else if (v7 == (id)1)
      {
        v8 = objc_msgSend(v6, sel_progress);
        objc_msgSend(v8, sel_fractionCompleted);
        v10 = v9;

        v44 = 0;
      }
      else
      {
        v44 = 1;
        v10 = 1;
      }
      v12 = *(_QWORD *)(v0 + 200);
      v11 = *(_QWORD *)(v0 + 208);
      v45 = *(_QWORD *)(v0 + 192);
      v13 = *(_QWORD *)(v0 + 176);
      v47 = v6;
      v14 = objc_msgSend(v6, sel_ltIdentifier);
      v15 = sub_1D2D9DCD4();
      v17 = v16;

      *(_QWORD *)(v0 + 120) = v15;
      *(_QWORD *)(v0 + 128) = v17;
      *(_QWORD *)(v0 + 136) = 45;
      *(_QWORD *)(v0 + 144) = 0xE100000000000000;
      *(_QWORD *)(v0 + 152) = 95;
      *(_QWORD *)(v0 + 160) = 0xE100000000000000;
      v38 = sub_1D2CD1430();
      v39 = v38;
      v37 = v38;
      v36 = MEMORY[0x1E0DEA968];
      v18 = sub_1D2D9E1E4();
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v46 = v18;
      sub_1D2D9C708();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v21 = Locale.sqDisplayName(context:in:)(0, v12);
      v23 = v22;
      v24 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v24(v12, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v45, v11, v13);
      v25 = *(_QWORD *)(v0 + 208);
      if (v23)
      {
        v26 = *(_QWORD *)(v0 + 176);
        v24(*(_QWORD *)(v0 + 192), v26);
        v24(v25, v26);
      }
      else
      {
        v27 = *(_QWORD *)(v0 + 192);
        v28 = *(_QWORD *)(v0 + 200);
        v29 = *(_QWORD *)(v0 + 176);
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v21 = Locale.sqDisplaySubname(context:in:)(0, v28);
        v23 = v30;
        v24(v28, v29);
        v24(v27, v29);
        v24(v25, v29);
        if (!v23)
        {
          swift_bridgeObjectRetain();
          v31 = v46;
          v21 = v46;
          v23 = v20;
          goto LABEL_17;
        }
      }
      v31 = v46;
LABEL_17:
      swift_bridgeObjectRelease();

      v32 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v32 = v48;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1D2D03F2C(v33 > 1, v34 + 1, 1);
        v32 = v48;
      }
      ++v4;
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v35 = v32 + 48 * v34;
      *(_QWORD *)(v35 + 32) = v31;
      *(_QWORD *)(v35 + 40) = v20;
      *(_QWORD *)(v35 + 48) = v10;
      *(_BYTE *)(v35 + 56) = v44;
      *(_QWORD *)(v35 + 64) = v21;
      *(_QWORD *)(v35 + 72) = v23;
      v1 = v43;
      if (v42 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D14E5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1D2D14EC4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1D2D9C7EC();
  v0[28] = v1;
  v0[29] = *(_QWORD *)(v1 - 8);
  v0[30] = swift_task_alloc();
  v0[31] = swift_task_alloc();
  v0[32] = swift_task_alloc();
  v0[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D14F48()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 27;
  v0[2] = v0;
  v0[3] = sub_1D2D14FF4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D2D12AA0;
  v3[3] = &block_descriptor_19;
  v3[4] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_1D2D14FF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D2D15054()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _BOOL8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 216);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v32);
  }
  swift_bridgeObjectRetain();
  v2 = sub_1D2D9E3AC();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_23;
LABEL_3:
  v50 = MEMORY[0x1E0DEE9D8];
  result = sub_1D2D03F2C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v40 = v1 & 0xC000000000000001;
    v41 = *(_QWORD *)(v0 + 232);
    v42 = v2;
    v43 = v1;
    do
    {
      if (v40)
        v5 = (id)MEMORY[0x1D8247E58](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_locale, v36, v37, v38, v39);
      sub_1D2D9C75C();

      v8 = objc_msgSend(v6, sel_state);
      v49 = v6;
      if (v8 == (id)1)
      {
        v45 = 0;
        v44 = 0;
      }
      else
      {
        v45 = v8 != (id)2;
        v44 = 1;
      }
      v9 = *(_QWORD *)(v0 + 256);
      v10 = *(_QWORD *)(v0 + 248);
      v46 = *(_QWORD *)(v0 + 224);
      v47 = *(_QWORD *)(v0 + 240);
      *(_QWORD *)(v0 + 136) = sub_1D2D9C714();
      *(_QWORD *)(v0 + 144) = v11;
      *(_QWORD *)(v0 + 120) = 45;
      *(_QWORD *)(v0 + 128) = 0xE100000000000000;
      *(_QWORD *)(v0 + 168) = 95;
      *(_QWORD *)(v0 + 176) = 0xE100000000000000;
      v12 = sub_1D2CD1430();
      v13 = MEMORY[0x1E0DEA968];
      v14 = sub_1D2D9E1E4();
      v16 = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 184) = v14;
      *(_QWORD *)(v0 + 192) = v16;
      *(_QWORD *)(v0 + 200) = 45;
      *(_QWORD *)(v0 + 208) = 0xE100000000000000;
      *(_QWORD *)(v0 + 152) = 95;
      *(_QWORD *)(v0 + 160) = 0xE100000000000000;
      v38 = v12;
      v39 = v12;
      v36 = v13;
      v37 = v12;
      v17 = sub_1D2D9E1E4();
      v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      sub_1D2D9C708();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v20 = Locale.sqDisplayName(context:in:)(0, v10);
      v22 = v21;
      v23 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v23(v10, v46);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v47, v9, v46);
      v24 = *(_QWORD *)(v0 + 256);
      if (v22)
      {
        v25 = *(_QWORD *)(v0 + 224);
        v23(*(_QWORD *)(v0 + 240), v25);
        v23(v24, v25);
      }
      else
      {
        v48 = v17;
        v26 = *(_QWORD *)(v0 + 240);
        v27 = *(_QWORD *)(v0 + 248);
        v28 = *(_QWORD *)(v0 + 224);
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v20 = Locale.sqDisplaySubname(context:in:)(0, v27);
        v22 = v29;
        v23(v27, v28);
        v23(v26, v28);
        v23(v24, v28);
        if (v22)
        {
          v17 = v48;
        }
        else
        {
          swift_bridgeObjectRetain();
          v17 = v48;
          v20 = v48;
          v22 = v19;
        }
      }
      v30 = *(_QWORD *)(v0 + 264);
      v31 = *(_QWORD *)(v0 + 224);
      swift_bridgeObjectRelease();
      v23(v30, v31);

      v32 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03F2C(0, *(_QWORD *)(v50 + 16) + 1, 1);
        v32 = v50;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1D2D03F2C(v33 > 1, v34 + 1, 1);
        v32 = v50;
      }
      ++v4;
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v35 = v32 + 48 * v34;
      *(_QWORD *)(v35 + 32) = v17;
      *(_QWORD *)(v35 + 40) = v19;
      *(_QWORD *)(v35 + 48) = v45;
      *(_BYTE *)(v35 + 56) = v44;
      *(_QWORD *)(v35 + 64) = v20;
      *(_QWORD *)(v35 + 72) = v22;
      v1 = v43;
    }
    while (v42 != v4);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D154AC()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D15518(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[27] = a1;
  v2 = sub_1D2D9C7EC();
  v1[28] = v2;
  v1[29] = *(_QWORD *)(v2 - 8);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = type metadata accessor for LocalePair();
  v1[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D155E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (__cdecl *v12)();
  uint64_t v13[3];

  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = v0[27];
  v2 = v0[38];
  v3 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED588700);
  sub_1D2D01568(v1, v2);
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E028();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[38];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446210;
    v13[0] = v9;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v13[1] = 0x203A656372756F73;
    v13[2] = 0xE800000000000000;
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    v0[26] = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, v13);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CD3734(v7, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1D2CC0000, v4, v5, "Querying whether locale pair is installed: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v9, -1, -1);
    MEMORY[0x1D8248974](v8, -1, -1);
  }
  else
  {
    sub_1D2CD3734(v0[38], (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  }

  v12 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA7478 + dword_1EFCA7478);
  v10 = (_QWORD *)swift_task_alloc();
  v0[39] = v10;
  *v10 = v0;
  v10[1] = sub_1D2D15874;
  return v12();
}

uint64_t sub_1D2D15874(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D158D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v52;
  int v53;
  char v55;
  uint64_t v56;
  unsigned __int8 *v57;
  char v58;
  uint64_t v59;
  int v60;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;

  v1 = v0;
  v2 = v0[35];
  v3 = v0[34];
  v70 = v0[33];
  v65 = v0[28];
  v67 = v0[29];
  v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  ((void (*)(_QWORD, _QWORD))v72)(v0[36], v0[27]);
  v0[2] = sub_1D2D9C714();
  v0[3] = v4;
  v0[4] = 45;
  v0[5] = 0xE100000000000000;
  v0[6] = 95;
  v0[7] = 0xE100000000000000;
  sub_1D2CD1430();
  v5 = sub_1D2D9E1E4();
  v7 = v6;
  swift_bridgeObjectRelease();
  v1[8] = v5;
  v1[10] = 45;
  v1[9] = v7;
  v1[11] = 0xE100000000000000;
  v1[12] = 95;
  v1[13] = 0xE100000000000000;
  v8 = sub_1D2D9E1E4();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v11 = v2;
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v3);
  v13 = v12;
  v14 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  v14(v3, v65);
  v72(v70, v11, v65);
  v15 = v1[35];
  if (v13)
  {
    v16 = v1[28];
    v14(v1[33], v16);
    v14(v15, v16);
  }
  else
  {
    v17 = v1[33];
    v18 = v1[34];
    v19 = v1[28];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v18);
    v20 = v18;
    v22 = v21;
    v14(v20, v19);
    v14(v17, v19);
    v14(v15, v19);
    if (!v22)
      swift_bridgeObjectRetain();
  }
  v23 = v1[36];
  v24 = v1[37];
  v25 = v1[32];
  v64 = v1[31];
  v66 = v1[34];
  v68 = v1[30];
  v26 = v1[27];
  v27 = v1[28];
  swift_bridgeObjectRelease();
  v14(v23, v27);
  v72(v25, v26 + *(int *)(v24 + 20), v27);
  v1[14] = sub_1D2D9C714();
  v1[15] = v28;
  v1[16] = 45;
  v1[17] = 0xE100000000000000;
  v1[18] = 95;
  v1[19] = 0xE100000000000000;
  v29 = sub_1D2D9E1E4();
  v31 = v30;
  swift_bridgeObjectRelease();
  v1[20] = v29;
  v1[21] = v31;
  v1[22] = 45;
  v1[23] = 0xE100000000000000;
  v1[24] = 95;
  v1[25] = 0xE100000000000000;
  v32 = sub_1D2D9E1E4();
  v34 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1D2D9C708();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v66);
  v36 = v35;
  v14(v66, v27);
  v72(v68, v64, v27);
  v37 = v14;
  if (v36)
  {
    v38 = v1[31];
    v39 = v1[28];
    v14(v1[30], v39);
    v14(v38, v39);
  }
  else
  {
    v40 = v1[34];
    v41 = v1[30];
    v73 = v1[31];
    v42 = v1[28];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v40);
    v44 = v43;
    v37(v40, v42);
    v37(v41, v42);
    v37(v73, v42);
    if (!v44)
      swift_bridgeObjectRetain();
  }
  v45 = v1[40];
  v46 = v1[32];
  v47 = v1[28];
  swift_bridgeObjectRelease();
  v37(v46, v47);
  v48 = *(_QWORD *)(v45 + 16);
  v49 = v1[40];
  if (!v48)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v69 = v45;
  v50 = (unsigned __int8 *)(v49 + 56);
  while (1)
  {
    v52 = *((_QWORD *)v50 - 1);
    if (*((_QWORD *)v50 - 3) == v8 && *((_QWORD *)v50 - 2) == v10)
      break;
    v53 = *v50;
    if ((sub_1D2D9E52C() & v53) == 1 && v52 == 0)
      goto LABEL_25;
LABEL_15:
    v50 += 48;
    if (!--v48)
      goto LABEL_42;
  }
  if (v52)
    v55 = 0;
  else
    v55 = *v50;
  if ((v55 & 1) == 0)
    goto LABEL_15;
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v69 + 16);
  if (!v56)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    v71 = 0;
    goto LABEL_44;
  }
  v57 = (unsigned __int8 *)(v49 + 56);
  while (1)
  {
    v59 = *((_QWORD *)v57 - 1);
    if (*((_QWORD *)v57 - 3) == v32 && *((_QWORD *)v57 - 2) == v34)
      break;
    v60 = *v57;
    if ((sub_1D2D9E52C() & v60) == 1 && v59 == 0)
      goto LABEL_41;
LABEL_31:
    v57 += 48;
    if (!--v56)
      goto LABEL_43;
  }
  if (v59)
    v58 = 0;
  else
    v58 = *v57;
  if ((v58 & 1) == 0)
    goto LABEL_31;
LABEL_41:
  swift_bridgeObjectRelease();
  v71 = 1;
LABEL_44:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v1[1])(v71);
}

unint64_t sub_1D2D15ED8()
{
  unint64_t result;

  result = qword_1EFCA74A8;
  if (!qword_1EFCA74A8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA2818, &type metadata for LanguageError);
    atomic_store(result, (unint64_t *)&qword_1EFCA74A8);
  }
  return result;
}

uint64_t _s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for LocalePair();
  MEMORY[0x1E0C80A78](v2);
  v35 = (uint8_t *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v34 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v34 - v8;
  v10 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v10);
  v36 = (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D3A46C(4, v36);
  v12 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
  v13 = (void *)sub_1D2D9C744();
  v14 = (void *)sub_1D2D9C744();
  v15 = objc_msgSend(v12, sel_initWithSourceLocale_targetLocale_, v13, v14);

  LODWORD(v14) = objc_msgSend(v15, sel_isVariantPair);
  sub_1D2D01568(a1, (uint64_t)v9);
  v37 = v2;
  if ((_DWORD)v14)
  {
    sub_1D2CD3734((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
LABEL_4:
    if (qword_1ED5878C8 != -1)
      swift_once();
    v20 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED588700);
    sub_1D2D01568(a1, (uint64_t)v6);
    v21 = sub_1D2D9C8DC();
    v22 = sub_1D2D9E028();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = 136446210;
      v35 = v23 + 4;
      v38 = 0;
      v39 = 0xE000000000000000;
      v40 = v24;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v38 = 0x203A656372756F73;
      v39 = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      v38 = sub_1D2CF78E0(v38, v39, &v40);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1D2CC0000, v21, v22, "Pair %{public}s is passthrough", v23, 0xCu);
      v25 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v24, -1, -1);
      MEMORY[0x1D8248974](v23, -1, -1);

    }
    else
    {
      sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

      v25 = 1;
    }
    goto LABEL_15;
  }
  v16 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
  v17 = (void *)sub_1D2D9C744();
  v18 = (void *)sub_1D2D9C744();
  v19 = objc_msgSend(v16, sel_initWithSourceLocale_targetLocale_, v17, v18);

  LODWORD(v18) = objc_msgSend(v19, sel_isPassthrough);
  sub_1D2CD3734((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  if ((_DWORD)v18)
    goto LABEL_4;
  if (qword_1ED5878C8 != -1)
    swift_once();
  v26 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED588700);
  v27 = (uint64_t)v35;
  sub_1D2D01568(a1, (uint64_t)v35);
  v28 = sub_1D2D9C8DC();
  v29 = sub_1D2D9E028();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    *(_DWORD *)v30 = 136446210;
    v34[1] = v30 + 4;
    v38 = 0;
    v39 = 0xE000000000000000;
    v40 = v31;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v38 = 0x203A656372756F73;
    v39 = 0xE800000000000000;
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    v38 = sub_1D2CF78E0(v38, v39, &v40);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CD3734(v27, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1D2CC0000, v28, v29, "Pair %{public}s is not passthrough", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v31, -1, -1);
    MEMORY[0x1D8248974](v30, -1, -1);
  }
  else
  {
    sub_1D2CD3734(v27, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  }

  v25 = 0;
LABEL_15:
  v32 = v36;
  sub_1D2D3A760(v25);
  sub_1D2D3A96C();
  sub_1D2CD3734(v32, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  return v25;
}

uint64_t sub_1D2D16550()
{
  return swift_task_switch();
}

uint64_t sub_1D2D16564()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_1D2CC74C0();
  if (v1 != 2)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
  v2 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1D2D1663C;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1D2D87560;
  v4[3] = &block_descriptor_17;
  v4[4] = v3;
  objc_msgSend(v2, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v4);
  return swift_continuation_await();
}

uint64_t sub_1D2D1663C()
{
  return swift_task_switch();
}

uint64_t sub_1D2D16688()
{
  uint64_t v0;

  return (*(uint64_t (**)(BOOL))(v0 + 8))((*(_BYTE *)(v0 + 120) & 1) == 0);
}

uint64_t sub_1D2D1669C(uint64_t a1)
{
  _QWORD *v1;

  v1[9] = a1;
  v1[10] = type metadata accessor for LocalePair();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  type metadata accessor for Signpost();
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D16764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t (__cdecl *v14)();
  uint64_t v15[3];

  v1 = *(_QWORD *)(v0 + 72);
  sub_1D2D3A46C(4, *(_QWORD *)(v0 + 144));
  if ((_s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(v1) & 1) != 0)
  {
    if (qword_1ED5878C8 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 72);
    v4 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v3, v2);
    v5 = sub_1D2D9C8DC();
    v6 = sub_1D2D9E01C();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 88);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_DWORD *)v9 = 136446210;
      v15[0] = v10;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v15[1] = 0x203A656372756F73;
      v15[2] = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 64) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, v15);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734(v8, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1D2CC0000, v5, v6, "Pair %{public}s is passthrough", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v10, -1, -1);
      MEMORY[0x1D8248974](v9, -1, -1);
    }
    else
    {
      sub_1D2CD3734(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    }

    v13 = *(_QWORD *)(v0 + 144);
    sub_1D2D3A760(1);
    sub_1D2D3A96C();
    sub_1D2CD3734(v13, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v14 = (uint64_t (__cdecl *)())((char *)&dword_1EFCA74D0 + dword_1EFCA74D0);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_1D2D16AA8;
    return v14();
  }
}

uint64_t sub_1D2D16AA8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D16B04()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t);

  if ((*(_BYTE *)(v0 + 184) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_4:
    v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA7498 + dword_1EFCA7498);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    *v2 = v0;
    v2[1] = sub_1D2D17740;
    return v5(*(_QWORD *)(v0 + 72));
  }
  v1 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    goto LABEL_4;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  *v4 = v0;
  v4[1] = sub_1D2D16BEC;
  return static NetworkPathService.isDisconnected()();
}

uint64_t sub_1D2D16BEC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 185) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D16C48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14[3];

  if ((*(_BYTE *)(v0 + 185) & 1) != 0)
  {
    v13 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA7498 + dword_1EFCA7498);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v1;
    *v1 = v0;
    v1[1] = sub_1D2D16F6C;
    return v13(*(_QWORD *)(v0 + 72));
  }
  else
  {
    if (qword_1ED5878C8 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v4, v3);
    v6 = sub_1D2D9C8DC();
    v7 = sub_1D2D9E01C();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 136);
    if (v8)
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v10 = 136446210;
      v14[0] = v11;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v14[1] = 0x203A656372756F73;
      v14[2] = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, v14);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734(v9, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1D2CC0000, v6, v7, "Pair %{public}s is available to use via network", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v11, -1, -1);
      MEMORY[0x1D8248974](v10, -1, -1);
    }
    else
    {
      sub_1D2CD3734(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    }

    v12 = *(_QWORD *)(v0 + 144);
    sub_1D2D3A760(0);
    sub_1D2D3A96C();
    sub_1D2CD3734(v12, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
}

uint64_t sub_1D2D16F6C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 186) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D16FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  int v10;
  char v11;
  id v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  if ((*(_BYTE *)(v0 + 186) & 1) == 0)
  {
    v11 = sub_1D2CC74AC();
    if (v11 == 2)
    {
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFA9B8]), sel_init);
      v13 = objc_msgSend(v12, sel_airplaneMode);

      if ((v13 & 1) == 0)
      {
LABEL_8:
        if (qword_1ED5878C8 != -1)
          swift_once();
        v14 = *(_QWORD *)(v0 + 128);
        v15 = *(_QWORD *)(v0 + 72);
        v16 = sub_1D2D9C8F4();
        __swift_project_value_buffer(v16, (uint64_t)qword_1ED588700);
        sub_1D2D01568(v15, v14);
        v17 = sub_1D2D9C8DC();
        v18 = sub_1D2D9E01C();
        v19 = os_log_type_enabled(v17, v18);
        v20 = *(_QWORD *)(v0 + 128);
        if (v19)
        {
          v21 = (uint8_t *)swift_slowAlloc();
          v37 = swift_slowAlloc();
          v22 = v37;
          *(_DWORD *)v21 = 136446210;
          sub_1D2D9E2EC();
          swift_bridgeObjectRelease();
          v38 = 0x203A656372756F73;
          v39 = 0xE800000000000000;
          sub_1D2D9C714();
          sub_1D2D9DDA0();
          swift_bridgeObjectRelease();
          sub_1D2D9DDA0();
          sub_1D2D9C714();
          sub_1D2D9DDA0();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v0 + 24) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v37);
          sub_1D2D9E1B4();
          swift_bridgeObjectRelease();
          sub_1D2CD3734(v20, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
          _os_log_impl(&dword_1D2CC0000, v17, v18, "Pair %{public}s isn't available due to no network", v21, 0xCu);
          v10 = 1;
          swift_arrayDestroy();
          MEMORY[0x1D8248974](v22, -1, -1);
          MEMORY[0x1D8248974](v21, -1, -1);

          v23 = 5;
LABEL_13:
          v36 = v23;
          goto LABEL_22;
        }
        sub_1D2CD3734(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

        v33 = 5;
LABEL_21:
        v36 = v33;
        v10 = 1;
        goto LABEL_22;
      }
    }
    else if ((v11 & 1) == 0)
    {
      goto LABEL_8;
    }
    if (qword_1ED5878C8 != -1)
      swift_once();
    v24 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 72);
    v26 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v25, v24);
    v27 = sub_1D2D9C8DC();
    v28 = sub_1D2D9E01C();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 120);
    if (v29)
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v32 = v37;
      *(_DWORD *)v31 = 136446210;
      sub_1D2D9E2EC();
      swift_bridgeObjectRelease();
      v38 = 0x203A656372756F73;
      v39 = 0xE800000000000000;
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      sub_1D2D9DDA0();
      sub_1D2D9C714();
      sub_1D2D9DDA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 32) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v37);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734(v30, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1D2CC0000, v27, v28, "Pair %{public}s is not available due to airplane mode", v31, 0xCu);
      v10 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v32, -1, -1);
      MEMORY[0x1D8248974](v31, -1, -1);

      v36 = 4;
      goto LABEL_22;
    }
    sub_1D2CD3734(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

    v33 = 4;
    goto LABEL_21;
  }
  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED588700);
  sub_1D2D01568(v2, v1);
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E01C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 112);
  if (!v6)
  {
    sub_1D2CD3734(*(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

    v10 = 0;
    v23 = 1;
    goto LABEL_13;
  }
  v8 = (uint8_t *)swift_slowAlloc();
  v9 = swift_slowAlloc();
  *(_DWORD *)v8 = 136446210;
  v37 = v9;
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  v38 = 0x203A656372756F73;
  v39 = 0xE800000000000000;
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v37);
  sub_1D2D9E1B4();
  swift_bridgeObjectRelease();
  sub_1D2CD3734(v7, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  _os_log_impl(&dword_1D2CC0000, v4, v5, "Pair %{public}s is available on-device", v8, 0xCu);
  v36 = 1;
  swift_arrayDestroy();
  MEMORY[0x1D8248974](v9, -1, -1);
  MEMORY[0x1D8248974](v8, -1, -1);

  v10 = 0;
LABEL_22:
  v34 = *(_QWORD *)(v0 + 144);
  sub_1D2D3A760(v10);
  sub_1D2D3A96C();
  sub_1D2CD3734(v34, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
}

uint64_t sub_1D2D17740(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 187) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D1779C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  if ((*(_BYTE *)(v0 + 187) & 1) == 0)
  {
    if (qword_1ED5878C8 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED588700);
    sub_1D2D01568(v12, v11);
    v14 = sub_1D2D9C8DC();
    v15 = sub_1D2D9E01C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 104);
    if (!v16)
    {
      sub_1D2CD3734(*(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

      v23 = 3;
      v10 = 1;
      goto LABEL_13;
    }
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v18 = 136446210;
    v24 = v19;
    sub_1D2D9E2EC();
    swift_bridgeObjectRelease();
    v25 = 0x203A656372756F73;
    v26 = 0xE800000000000000;
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    sub_1D2D9C714();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v24);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CD3734(v17, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1D2CC0000, v14, v15, "Pair %{public}s is not available on-device", v18, 0xCu);
    v10 = 1;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v19, -1, -1);
    MEMORY[0x1D8248974](v18, -1, -1);

    v20 = 3;
    goto LABEL_11;
  }
  if (qword_1ED5878C8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED588700);
  sub_1D2D01568(v2, v1);
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E01C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 96);
  if (!v6)
  {
    sub_1D2CD3734(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);

    v10 = 0;
    v20 = 1;
LABEL_11:
    v23 = v20;
    goto LABEL_13;
  }
  v8 = (uint8_t *)swift_slowAlloc();
  v9 = swift_slowAlloc();
  v24 = v9;
  *(_DWORD *)v8 = 136446210;
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  v25 = 0x203A656372756F73;
  v26 = 0xE800000000000000;
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = sub_1D2CF78E0(0x203A656372756F73, 0xE800000000000000, &v24);
  sub_1D2D9E1B4();
  swift_bridgeObjectRelease();
  sub_1D2CD3734(v7, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  _os_log_impl(&dword_1D2CC0000, v4, v5, "Pair %{public}s is ready to use on-device", v8, 0xCu);
  v23 = 1;
  swift_arrayDestroy();
  MEMORY[0x1D8248974](v9, -1, -1);
  MEMORY[0x1D8248974](v8, -1, -1);

  v10 = 0;
LABEL_13:
  v21 = *(_QWORD *)(v0 + 144);
  sub_1D2D3A760(v10);
  sub_1D2D3A96C();
  sub_1D2CD3734(v21, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t _s13TranslationUI16LanguagePairPathO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1D2D17CE4()
{
  unint64_t result;

  result = qword_1EFCA74C8;
  if (!qword_1EFCA74C8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguagePairPath, &type metadata for LanguagePairPath);
    atomic_store(result, (unint64_t *)&qword_1EFCA74C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesStatusService()
{
  return &type metadata for LanguagesStatusService;
}

uint64_t storeEnumTagSinglePayload for LanguagePairPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D2D17D84 + 4 * byte_1D2DA2AA1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D2D17DB8 + 4 * byte_1D2DA2A9C[v4]))();
}

uint64_t sub_1D2D17DB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D17DC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D17DC8);
  return result;
}

uint64_t sub_1D2D17DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D17DDCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D2D17DE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D17DE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguagePairPath()
{
  return &type metadata for LanguagePairPath;
}

uint64_t sub_1D2D17E04()
{
  return objectdestroyTm_5(&qword_1EFCA74D8);
}

uint64_t sub_1D2D17E10(uint64_t a1)
{
  return sub_1D2D17E5C(a1, &qword_1EFCA74D8, (uint64_t (*)(uint64_t, uint64_t))sub_1D2D13DE4);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1D2D17E3C()
{
  return objectdestroyTm_5(&qword_1ED586BE0);
}

uint64_t sub_1D2D17E48(uint64_t a1)
{
  return sub_1D2D17E5C(a1, &qword_1ED586BE0, (uint64_t (*)(uint64_t, uint64_t))sub_1D2D13B44);
}

uint64_t sub_1D2D17E5C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t sub_1D2D17EA8()
{
  return objectdestroyTm_5(&qword_1EFCA7178);
}

uint64_t objectdestroyTm_5(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1D2D17F10(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7178) - 8) + 80);
  return sub_1D2D11F38(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t storeEnumTagSinglePayload for LanguageModelPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D17FAC + 4 * byte_1D2DA2AAB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D17FE0 + 4 * byte_1D2DA2AA6[v4]))();
}

uint64_t sub_1D2D17FE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D17FE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D17FF0);
  return result;
}

uint64_t sub_1D2D17FFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D18004);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D18008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D18010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguageModelPath()
{
  return &type metadata for LanguageModelPath;
}

unint64_t sub_1D2D18030()
{
  unint64_t result;

  result = qword_1EFCA74E0;
  if (!qword_1EFCA74E0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA2C74, &type metadata for LanguageModelPath);
    atomic_store(result, (unint64_t *)&qword_1EFCA74E0);
  }
  return result;
}

uint64_t sub_1D2D18094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D2D9C714();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2D180BC()
{
  unsigned __int8 v1;

  v1 = 0;
  type metadata accessor for LanguagesService();
  swift_allocObject();
  return LanguagesService.init(task:)(&v1);
}

uint64_t LanguagesView.init(sourceLocale:targetLocale:selection:showsManageLanguages:requiresOnDeviceAvailability:suggestedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  int v23;

  v23 = a6;
  v15 = (int *)type metadata accessor for LanguagesView(0);
  v16 = v15[6];
  *(_QWORD *)(a9 + v16) = 0;
  v17 = v15[7];
  *(_BYTE *)(a9 + v17) = 1;
  v18 = (uint64_t *)(a9 + v15[9]);
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  swift_storeEnumTagMultiPayload();
  v19 = a9 + v15[10];
  *(_QWORD *)v19 = sub_1D2D180BC;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 0;
  sub_1D2CD2018(a1, a9, &qword_1EFCA6D50);
  sub_1D2CD2018(a2, a9 + v15[5], &qword_1EFCA6D50);
  v20 = (_QWORD *)(a9 + v15[11]);
  *v20 = a3;
  v20[1] = a4;
  v20[2] = a5;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v16) = a8;
  *(_BYTE *)(a9 + v15[8]) = a7;
  if (v23 != 2)
    *(_BYTE *)(a9 + v17) = a6 & 1;
  return result;
}

uint64_t type metadata accessor for LanguagesView(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA7580);
}

uint64_t sub_1D2D18264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  int v25;
  __int128 *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  _QWORD v38[2];
  char *v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD v46[2];

  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v38 - v10;
  v12 = type metadata accessor for LanguagesView(0);
  v41 = v1;
  type metadata accessor for LanguagesService();
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  sub_1D2D9CB64();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v13 = v42;
  v38[1] = a1;
  *(_QWORD *)&v42 = sub_1D2D9C714();
  *((_QWORD *)&v42 + 1) = v14;
  v46[0] = 45;
  v46[1] = 0xE100000000000000;
  v44 = 95;
  v45 = 0xE100000000000000;
  sub_1D2CD1430();
  v15 = sub_1D2D9E1E4();
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v13 + 16);
  if (v18)
  {
    v38[0] = v8;
    v39 = v11;
    v19 = v4;
    v20 = v3;
    v21 = (unsigned __int8 *)(v13 + 56);
    while (1)
    {
      v22 = *((_QWORD *)v21 - 1);
      v23 = *v21;
      v24 = *((_QWORD *)v21 - 3) == v15 && *((_QWORD *)v21 - 2) == v17;
      if (v24 || (sub_1D2D9E52C() & 1) != 0)
        break;
      v21 += 48;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = 0;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22)
      v25 = 0;
    else
      v25 = v23;
LABEL_13:
    v3 = v20;
    v4 = v19;
    v11 = v39;
    v8 = (char *)v38[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = 0;
  }
  if (*(_BYTE *)(v41 + *(int *)(v12 + 32)) == 1 && v25 == 0)
    return 0;
  v27 = (__int128 *)(v41 + *(int *)(v12 + 44));
  v28 = *v27;
  v29 = *((_QWORD *)v27 + 2);
  v42 = v28;
  v43 = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6118);
  MEMORY[0x1D82474B0](v46, v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  MEMORY[0x1D82474B0](v31);
  sub_1D2CCAD60((uint64_t)v11, (uint64_t)v8, &qword_1ED587850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    sub_1D2CCADA4((uint64_t)v11, &qword_1ED587850);
    sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
    return 1;
  }
  else
  {
    v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v40, v8, v3);
    v34 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
    v35 = (void *)sub_1D2D9C744();
    v36 = (void *)sub_1D2D9C744();
    v37 = objc_msgSend(v34, sel_initWithSourceLocale_targetLocale_, v35, v36);

    LODWORD(v36) = objc_msgSend(v37, sel_isVariantPair);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v3);
    sub_1D2CCADA4((uint64_t)v11, &qword_1ED587850);
    return v36 ^ 1;
  }
}

uint64_t sub_1D2D18694()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  char v6;

  type metadata accessor for LanguagesView(0);
  type metadata accessor for LanguagesService();
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  sub_1D2D9CB64();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  if ((v6 & 1) == 0)
  {
    _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
    v1 = v0;
    v2 = (void *)sub_1D2D9DCB0();
    objc_msgSend(v1, sel_BOOLForKey_, v2);

    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_isOnDeviceOnlyTranslationForced);

    }
    else
    {

    }
  }
  return sub_1D2D9D0A4();
}

uint64_t sub_1D2D18844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1D2D9C7EC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(int *)(type metadata accessor for LanguagesView(0) + 24);
  v6 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + v5))
    v7 = *(_QWORD *)(v0 + v5);
  else
    v7 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v8 = sub_1D2D051FC(v7);
  swift_bridgeObjectRelease();
  type metadata accessor for LanguagesService();
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  sub_1D2D9CB64();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v9 = Array<A>.available.getter(v19);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v19 = v6;
    sub_1D2D03FA0(0, v10, 0);
    v11 = v19;
    v12 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D2D9C708();
      v19 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D2D03FA0(v13 > 1, v14 + 1, 1);
        v11 = v19;
      }
      v12 += 48;
      *(_QWORD *)(v11 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v14, v4, v1);
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D2D1DDE0(v11, v8);
  v16 = v15;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1D2D18AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v85[4];
  uint64_t v86;
  unint64_t v87;
  id v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v114 = a1;
  v2 = type metadata accessor for LanguagesView(0);
  v100 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v102 = v3;
  v103 = (uint64_t)v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76E0);
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76E8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76F0);
  v110 = *(_QWORD *)(v6 - 8);
  v111 = v6;
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76F8);
  MEMORY[0x1E0C80A78](v8);
  v113 = (uint64_t)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v112 = (char *)v85 - v11;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7700);
  v12 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v14 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7708);
  MEMORY[0x1E0C80A78](v105);
  v16 = (char *)v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7710);
  MEMORY[0x1E0C80A78](v106);
  v94 = (char *)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7718);
  v92 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v91 = (char *)v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v90 = (char *)v85 - v21;
  MEMORY[0x1E0C80A78](v22);
  v93 = (char *)v85 - v23;
  MEMORY[0x1E0C80A78](v24);
  v104 = (char *)v85 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7720);
  MEMORY[0x1E0C80A78](v26);
  v109 = (uint64_t)v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v115 = (uint64_t)v85 - v30;
  v108 = v2;
  v31 = v1;
  v32 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  if (v32 && *(_QWORD *)(v32 + 16))
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v89 = ObjCClassFromMetadata;
    v34 = (void *)objc_opt_self();
    v88 = v34;
    swift_bridgeObjectRetain();
    v35 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    v36 = sub_1D2D9C5E8();
    v38 = v37;

    v116 = v36;
    v117 = v38;
    v87 = sub_1D2CD1430();
    v39 = sub_1D2D9D5CC();
    v85[1] = v85;
    v116 = v39;
    v117 = v40;
    v118 = v41 & 1;
    v119 = v42;
    MEMORY[0x1E0C80A78](v39);
    v86 = v31;
    v85[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BE0);
    v85[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7788);
    sub_1D2D1D830((unint64_t *)&qword_1EFCA6BE8, &qword_1EFCA6BE0, MEMORY[0x1E0CDDD58]);
    sub_1D2D1DB2C(&qword_1EFCA7790, &qword_1EFCA7788);
    v43 = v104;
    sub_1D2D9D9D4();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v88, sel_bundleForClass_, v89);
    v45 = sub_1D2D9C5E8();
    v47 = v46;

    v116 = v45;
    v117 = v47;
    v116 = sub_1D2D9D5CC();
    v117 = v48;
    v118 = v49 & 1;
    v119 = v50;
    MEMORY[0x1E0C80A78](v116);
    v51 = v86;
    v52 = v93;
    sub_1D2D9D9D4();
    v53 = v92;
    v54 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    v55 = v90;
    v54(v90, v43, v18);
    v56 = v91;
    v54(v91, v52, v18);
    v57 = (uint64_t)v94;
    v54(v94, v55, v18);
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7798);
    v54((char *)(v57 + *(int *)(v58 + 48)), v56, v18);
    v59 = *(void (**)(char *, uint64_t))(v53 + 8);
    v59(v56, v18);
    v31 = v51;
    v59(v55, v18);
    sub_1D2CCAD60(v57, (uint64_t)v16, &qword_1EFCA7710);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA7750, &qword_1EFCA7710, MEMORY[0x1E0CE0680]);
    sub_1D2D1D938();
    sub_1D2D9D1E8();
    sub_1D2CCADA4(v57, &qword_1EFCA7710);
    v59(v52, v18);
    v59(v104, v18);
  }
  else
  {
    MEMORY[0x1E0C80A78](v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7728);
    sub_1D2D1DB2C(&qword_1EFCA7730, &qword_1EFCA7728);
    sub_1D2D9D9EC();
    v60 = v107;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v107);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA7750, &qword_1EFCA7710, MEMORY[0x1E0CE0680]);
    sub_1D2D1D938();
    sub_1D2D9D1E8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v60);
  }
  if (*(_BYTE *)(v31 + *(int *)(v108 + 28)) == 1)
  {
    sub_1D2D18694();
    type metadata accessor for _BundleObject();
    v61 = swift_getObjCClassFromMetadata();
    v62 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v61);
    v116 = sub_1D2D9D5C0();
    v117 = v63;
    LOBYTE(v118) = v64 & 1;
    v119 = v65;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7768);
    sub_1D2CC6C74(&qword_1EFCA7770, &qword_1EFCA7768, MEMORY[0x1E0CDFB10]);
    v66 = v95;
    sub_1D2D9D9F8();
    v67 = v96;
    v68 = (uint64_t)v101;
    v69 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v101, v66, v97);
    *(_BYTE *)(v68 + *(int *)(v99 + 36)) = 0;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
    v70 = v103;
    sub_1D2CDB6B4(v31, v103, type metadata accessor for LanguagesView);
    v71 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    v72 = swift_allocObject();
    sub_1D2CD1FD4(v70, v72 + v71, type metadata accessor for LanguagesView);
    sub_1D2D1DA10();
    v73 = v98;
    sub_1D2D9D644();
    swift_release();
    sub_1D2CCADA4(v68, &qword_1EFCA76E8);
    v74 = v110;
    v75 = (uint64_t)v112;
    v76 = v73;
    v77 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v112, v76, v111);
    v78 = 0;
  }
  else
  {
    v78 = 1;
    v77 = v111;
    v75 = (uint64_t)v112;
    v74 = v110;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, v78, 1, v77);
  v79 = v115;
  v80 = v109;
  sub_1D2CCAD60(v115, v109, &qword_1EFCA7720);
  v81 = v113;
  sub_1D2CCAD60(v75, v113, &qword_1EFCA76F8);
  v82 = v114;
  sub_1D2CCAD60(v80, v114, &qword_1EFCA7720);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7760);
  sub_1D2CCAD60(v81, v82 + *(int *)(v83 + 48), &qword_1EFCA76F8);
  sub_1D2CCADA4(v75, &qword_1EFCA76F8);
  sub_1D2CCADA4(v79, &qword_1EFCA7720);
  sub_1D2CCADA4(v81, &qword_1EFCA76F8);
  return sub_1D2CCADA4(v80, &qword_1EFCA7720);
}

uint64_t sub_1D2D195D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v4 = type metadata accessor for LanguagesView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v10[1] = a1;
  swift_getKeyPath();
  sub_1D2CDB6B4(a2, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for LanguagesView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7740);
  sub_1D2CC6C74(&qword_1EFCA6E58, &qword_1EFCA6E50, MEMORY[0x1E0DEAF48]);
  sub_1D2D1D89C();
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2D1972C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for LanguagesView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = sub_1D2D18844();
  swift_getKeyPath();
  sub_1D2CDB6B4(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for LanguagesView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7740);
  sub_1D2CC6C74(&qword_1EFCA6E58, &qword_1EFCA6E50, MEMORY[0x1E0DEAF48]);
  sub_1D2D1D89C();
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2D19884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a3;
  v39 = a4;
  v40 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for LanguageListButton(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7740);
  v17 = MEMORY[0x1E0C80A78](v36);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v37 = a1;
  v20(v13, a1, v10, v17);
  v21 = type metadata accessor for LanguagesView(0);
  v22 = a2 + *(int *)(v21 + 44);
  v23 = *(_OWORD *)v22;
  v24 = *(_QWORD *)(v22 + 16);
  v41 = v23;
  v42 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6118);
  MEMORY[0x1D82474B0](&v43, v25);
  v26 = a2;
  if (v43)
    v26 = a2 + *(int *)(v21 + 20);
  sub_1D2CCAD60(v26, (uint64_t)v9, &qword_1EFCA6D50);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v16[v14[7]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  sub_1D2CD2018((uint64_t)v9, (uint64_t)&v16[v14[5]], &qword_1EFCA6D50);
  v28 = &v16[v14[6]];
  *(_QWORD *)v28 = KeyPath;
  v28[8] = 0;
  v29 = sub_1D2D18264(v37);
  v30 = swift_getKeyPath();
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = (v29 & 1) == 0;
  sub_1D2CDB6B4((uint64_t)v16, (uint64_t)v19, type metadata accessor for LanguageListButton);
  v32 = (uint64_t *)&v19[*(int *)(v36 + 36)];
  v33 = v39;
  *v32 = v30;
  v32[1] = v33;
  v32[2] = v31;
  sub_1D2D1DD9C((uint64_t)v16);
  return sub_1D2CD2018((uint64_t)v19, v40, &qword_1EFCA7740);
}

uint64_t sub_1D2D19B3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for LanguagesView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for LanguagesService();
  sub_1D2CC66E4(&qword_1EFCA6828, (uint64_t (*)(uint64_t))type metadata accessor for LanguagesService, (uint64_t)&protocol conformance descriptor for LanguagesService);
  sub_1D2D9CB64();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v5 = Array<A>.available.getter(v10);
  swift_bridgeObjectRelease();
  v10 = v5;
  sub_1D2CDB6B4(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for LanguagesView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7740);
  sub_1D2CC6C74(&qword_1ED586B88, &qword_1ED586B80, MEMORY[0x1E0DEAF48]);
  sub_1D2D1D89C();
  sub_1D2D1E25C();
  return sub_1D2D9D9C8();
}

uint64_t sub_1D2D19D44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9C7EC();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = (int *)type metadata accessor for LanguageListButton(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7740);
  MEMORY[0x1E0C80A78](v37);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  swift_bridgeObjectRetain();
  v35 = v18;
  sub_1D2D9C708();
  v19 = type metadata accessor for LanguagesView(0);
  v20 = a2 + *(int *)(v19 + 44);
  v21 = *(_OWORD *)v20;
  v22 = *(_QWORD *)(v20 + 16);
  v41 = v21;
  v42 = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6118);
  MEMORY[0x1D82474B0](&v43, v23);
  v24 = a2;
  if (v43)
    v24 = a2 + *(int *)(v19 + 20);
  sub_1D2CCAD60(v24, (uint64_t)v7, &qword_1EFCA6D50);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v15[v13[7]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  swift_storeEnumTagMultiPayload();
  v26 = v38;
  v27 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v15, v12, v39);
  sub_1D2CD2018((uint64_t)v7, (uint64_t)&v15[v13[5]], &qword_1EFCA6D50);
  v28 = &v15[v13[6]];
  *(_QWORD *)v28 = KeyPath;
  v28[8] = 0;
  swift_bridgeObjectRetain();
  v29 = (uint64_t)v36;
  sub_1D2D9C708();
  v30 = sub_1D2D18264(v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v27);
  v31 = swift_getKeyPath();
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = (v30 & 1) == 0;
  sub_1D2CDB6B4((uint64_t)v15, (uint64_t)v17, type metadata accessor for LanguageListButton);
  v33 = (uint64_t *)&v17[*(int *)(v37 + 36)];
  *v33 = v31;
  v33[1] = (uint64_t)sub_1D2D1E2DC;
  v33[2] = v32;
  sub_1D2D1DD9C((uint64_t)v15);
  return sub_1D2CD2018((uint64_t)v17, v40, &qword_1EFCA7740);
}

__n128 sub_1D2D1A050@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __n128 result;
  __n128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = sub_1D2D9D038();
  sub_1D2D1A0B0((uint64_t)&v8);
  v3 = v9;
  v4 = v10;
  v5 = v11;
  v6 = v12;
  result = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_1D2D1A0B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  sub_1D2D9D0A4();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_1D2D9D5C0();
  v6 = v5;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v8 = v7 & 1;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  sub_1D2CCCB0C(v4, v5, v7 & 1);
  swift_bridgeObjectRetain();
  sub_1D2CCCAB4(v4, v6, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D1A1BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9C648();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9CC9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguagesView(0);
  sub_1D2D7CB90((uint64_t)v10);
  sub_1D2D9C63C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1D2D9CC78();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t LanguagesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  unint64_t v52;

  v47 = a1;
  v1 = sub_1D2D9D260();
  v38 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA74E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA74F0);
  v40 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA74F8);
  v42 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v39 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)v37 - v12;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7500);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7508);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = &type metadata for TranslateFeatures;
  v52 = sub_1D2CE68A0();
  LOBYTE(v48) = 4;
  v18 = sub_1D2D9C834();
  v19 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v48);
  if ((v18 & 1) != 0)
  {
    sub_1D2D18AA0((uint64_t)v17);
    sub_1D2CCAD60((uint64_t)v17, (uint64_t)v14, &qword_1EFCA7508);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA7510, &qword_1EFCA7508, MEMORY[0x1E0CE0680]);
    v20 = sub_1D2CC6C74(&qword_1EFCA7518, &qword_1EFCA74E8, MEMORY[0x1E0CDD950]);
    v48 = v4;
    v49 = v1;
    v50 = v20;
    v51 = (ValueMetadata *)MEMORY[0x1E0CDBD50];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v48 = v45;
    v49 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1D2D9D1E8();
    return sub_1D2CCADA4((uint64_t)v17, &qword_1EFCA7508);
  }
  else
  {
    MEMORY[0x1E0C80A78](v19);
    v43 = sub_1D2CC6C74(&qword_1EFCA7510, &qword_1EFCA7508, MEMORY[0x1E0CE0680]);
    v37[1] = v15;
    sub_1D2D9D524();
    sub_1D2D9D254();
    v23 = sub_1D2CC6C74(&qword_1EFCA7518, &qword_1EFCA74E8, MEMORY[0x1E0CDD950]);
    sub_1D2D9D77C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1D2D9D0A4();
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v25 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v26 = sub_1D2D9D5C0();
    v28 = v27;
    v48 = v4;
    v49 = v1;
    v30 = v29 & 1;
    v50 = v23;
    v51 = (ValueMetadata *)MEMORY[0x1E0CDBD50];
    v31 = swift_getOpaqueTypeConformance2();
    v32 = v39;
    v33 = v45;
    sub_1D2D9D680();
    sub_1D2CCCAB4(v26, v28, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v33);
    v35 = v41;
    v34 = v42;
    v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v32, v46);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v14, v35, v36);
    swift_storeEnumTagMultiPayload();
    v48 = v33;
    v49 = v31;
    swift_getOpaqueTypeConformance2();
    sub_1D2D9D1E8();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  }
}

uint64_t sub_1D2D1A8A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D18AA0(a1);
}

uint64_t sub_1D2D1A8C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_1D2D9CDD4();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  type metadata accessor for LanguageListButton(0);
  sub_1D2CCAD60((uint64_t)v11, (uint64_t)v8, &qword_1ED587850);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  sub_1D2D9D968();
  sub_1D2CCADA4((uint64_t)v11, &qword_1ED587850);
  sub_1D2D7C93C((uint64_t)v5);
  MEMORY[0x1D82474B0](v3);
  sub_1D2D9CDC8();
  sub_1D2D9D968();
  return sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA68B0);
}

uint64_t sub_1D2D1AA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7690);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1;
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6BE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76A8);
  sub_1D2D1D830((unint64_t *)&qword_1EFCA6BE8, &qword_1EFCA6BE0, MEMORY[0x1E0CDDD58]);
  sub_1D2D1D830(&qword_1EFCA76B0, &qword_1EFCA76A8, MEMORY[0x1E0CDF820]);
  sub_1D2D9D890();
  sub_1D2CC6C74(&qword_1EFCA7698, &qword_1EFCA7690, MEMORY[0x1E0CDF8C8]);
  sub_1D2D1D7DC();
  sub_1D2D9D608();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D2D1AC04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  char **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v8 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    v32[2] = v8;
    v32[3] = v10;
    sub_1D2CD1430();
    swift_bridgeObjectRetain();
    v12 = sub_1D2D9D5CC();
    v14 = v13;
    v32[0] = v15;
    v17 = v16 & 1;
    v18 = a1 + *(int *)(type metadata accessor for LanguageListButton(0) + 24);
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_1D2CF2AB8(*(_QWORD *)v18, v20);
    v21 = sub_1D2D7C784(v19, v20);
    sub_1D2CF2B30(v19, v20);
    v22 = (void *)objc_opt_self();
    v23 = &selRef_labelColor;
    if ((v21 & 1) == 0)
      v23 = &selRef_secondaryLabelColor;
    MEMORY[0x1D8247330](objc_msgSend(v22, *v23));
    v24 = sub_1D2D9D590();
    v26 = v25;
    v28 = v27;
    v30 = v29;
    swift_release();
    v31 = v28 & 1;
    sub_1D2CCCAB4(v12, v14, v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v31 = 0;
    v30 = 0;
  }
  *a2 = v24;
  a2[1] = v26;
  a2[2] = v31;
  a2[3] = v30;
  return result;
}

uint64_t sub_1D2D1ADDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageListButton(0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  MEMORY[0x1D82474B0](v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
    sub_1D2D9C714();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
    v11 = sub_1D2D9C714();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v14 = sub_1D2D9C714();
    if (v13)
    {
      if (v11 == v14 && v13 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v17 = sub_1D2D9E52C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_4;
      }
      result = sub_1D2D9D854();
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_4:
  result = 0;
LABEL_5:
  *a1 = result;
  return result;
}

uint64_t sub_1D2D1AFB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  unint64_t v16;

  v2 = v1;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1D2CDB6B4(v2, (uint64_t)&v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for LanguageListButton);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)&v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v6 + v5, type metadata accessor for LanguageListButton);
  v12 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7688);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7690);
  v8 = sub_1D2CC6C74(&qword_1EFCA7698, &qword_1EFCA7690, MEMORY[0x1E0CDF8C8]);
  v9 = sub_1D2D1D7DC();
  v13 = v7;
  v14 = &type metadata for ListLabelStyle;
  v15 = v8;
  v16 = v9;
  swift_getOpaqueTypeConformance2();
  return sub_1D2D9D8FC();
}

uint64_t ListLabelStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_1D2D9D038();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7520);
  return sub_1D2D1B144(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1D2D1B144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a1;
  v1 = sub_1D2D9D878();
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9D2C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76B8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76C0);
  MEMORY[0x1E0C80A78](v34);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76C8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - v18;
  *(_QWORD *)v19 = sub_1D2D9D11C();
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76D0);
  sub_1D2D9D2E4();
  sub_1D2D9D2CC();
  sub_1D2D9D458();
  sub_1D2D9D4A0();
  v20 = sub_1D2D9D4DC();
  swift_release();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
  v22 = (uint64_t *)&v8[*(int *)(v33 + 36)];
  *v22 = KeyPath;
  v22[1] = v20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v24 = v35;
  v23 = v36;
  v25 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0CDF7D8], v37);
  v26 = swift_getKeyPath();
  v27 = (uint64_t *)&v10[*(int *)(v34 + 36)];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B18);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))((char *)v27 + *(int *)(v28 + 28), v24, v25);
  *v27 = v26;
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v10, &qword_1EFCA76B8);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA76B8);
  sub_1D2CD2018((uint64_t)v10, (uint64_t)v13, &qword_1EFCA76C0);
  sub_1D2CCAD60((uint64_t)v19, (uint64_t)v16, &qword_1EFCA76C8);
  sub_1D2CCAD60((uint64_t)v13, (uint64_t)v10, &qword_1EFCA76C0);
  v29 = v38;
  sub_1D2CCAD60((uint64_t)v16, v38, &qword_1EFCA76C8);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA76D8);
  v31 = v29 + *(int *)(v30 + 48);
  *(_QWORD *)v31 = 0;
  *(_BYTE *)(v31 + 8) = 1;
  sub_1D2CCAD60((uint64_t)v10, v29 + *(int *)(v30 + 64), &qword_1EFCA76C0);
  sub_1D2CCADA4((uint64_t)v13, &qword_1EFCA76C0);
  sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA76C8);
  sub_1D2CCADA4((uint64_t)v10, &qword_1EFCA76C0);
  return sub_1D2CCADA4((uint64_t)v16, &qword_1EFCA76C8);
}

uint64_t sub_1D2D1B4D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D1B4E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D1B4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_1D2D9D038();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7520);
  return sub_1D2D1B144(a1 + *(int *)(v2 + 44));
}

char *initializeBufferWithCopyOfBuffer for LanguagesView(char *a1, char *a2, int *a3)
{
  int v3;
  uint64_t v4;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_retain();
    swift_retain();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
    v9 = *(int *)(v8 + 32);
    v10 = sub_1D2D9C7EC();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(&a2[v9], 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(&v7[v9], &a2[v9], *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v7[v9], &a2[v9], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(&v7[v9], 0, 1, v10);
      v9 = *(int *)(v8 + 32);
    }
    v14 = a3[5];
    v15 = &v7[v14];
    v16 = &a2[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = &v15[v9];
    v19 = &v16[v9];
    swift_retain();
    swift_retain();
    if (v12(v19, 1, v10))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v19, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
    }
    v21 = a3[7];
    *(_QWORD *)&v7[a3[6]] = *(_QWORD *)&a2[a3[6]];
    v7[v21] = a2[v21];
    v22 = a3[9];
    v7[a3[8]] = a2[a3[8]];
    v23 = &v7[v22];
    v24 = &a2[v22];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_1D2D9CC9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v26 = a3[10];
    v27 = &v7[v26];
    v28 = &a2[v26];
    v29 = *(_QWORD *)v28;
    v30 = *((_QWORD *)v28 + 1);
    v31 = v28[16];
    sub_1D2D1B7D4();
    *(_QWORD *)v27 = v29;
    *((_QWORD *)v27 + 1) = v30;
    v27[16] = v31;
    v32 = a3[11];
    v33 = &v7[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1D2D1B7D4()
{
  return swift_retain();
}

uint64_t destroy for LanguagesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v5 = a1 + *(int *)(v4 + 32);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v10 = v9 + *(int *)(v4 + 32);
  if (!v8(v10, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  v11 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_1D2D9CC9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  sub_1D2D1B93C();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D1B93C()
{
  return swift_release();
}

char *initializeWithCopy for LanguagesView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_retain();
  swift_retain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v8 = *(int *)(v7 + 32);
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(&a2[v8], 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(&a1[v8], &a2[v8], *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&a1[v8], &a2[v8], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(&a1[v8], 0, 1, v9);
    v8 = *(int *)(v7 + 32);
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = &v14[v8];
  v18 = &v15[v8];
  swift_retain();
  swift_retain();
  if (v11(v18, 1, v9))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v20 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  a1[v20] = a2[v20];
  v21 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_1D2D9CC9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = v27[16];
  sub_1D2D1B7D4();
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  v26[16] = v30;
  v31 = a3[11];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LanguagesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v7 = *(int *)(v6 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[5];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_retain();
  swift_release();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_retain();
  swift_release();
  v19 = *(int *)(v6 + 32);
  v20 = &v17[v19];
  v21 = &v18[v19];
  LODWORD(v17) = v12(&v17[v19], 1, v10);
  v22 = v12(v21, 1, v10);
  if ((_DWORD)v17)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v20, v21, v10);
LABEL_13:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  if (a1 != a2)
  {
    v24 = a3[9];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    sub_1D2CCADA4((uint64_t)a1 + v24, &qword_1EFCA6D48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_1D2D9CC9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v28 = a3[10];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)v30;
  v32 = *((_QWORD *)v30 + 1);
  v33 = v30[16];
  sub_1D2D1B7D4();
  *(_QWORD *)v29 = v31;
  *((_QWORD *)v29 + 1) = v32;
  v29[16] = v33;
  sub_1D2D1B93C();
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  swift_retain();
  swift_release();
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
  return a1;
}

char *initializeWithTake for LanguagesView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v8 = *(int *)(v7 + 32);
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(&a2[v8], 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(&a1[v8], &a2[v8], *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v8], &a2[v8], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(&a1[v8], 0, 1, v9);
    v8 = *(int *)(v7 + 32);
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = &v14[v8];
  v18 = &v15[v8];
  if (v11(&v15[v8], 1, v9))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v20 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  a1[v20] = a2[v20];
  v21 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_1D2D9CC9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v26 = a3[10];
  v27 = a3[11];
  v28 = &a1[v26];
  v29 = &a2[v26];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v28[16] = v29[16];
  v30 = &a1[v27];
  v31 = &a2[v27];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  return a1;
}

_QWORD *assignWithTake for LanguagesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v7 = *(int *)(v6 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[5];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_release();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release();
  v19 = *(int *)(v6 + 32);
  v20 = &v17[v19];
  v21 = &v18[v19];
  LODWORD(v18) = v12(v20, 1, v10);
  v22 = v12(v21, 1, v10);
  if ((_DWORD)v18)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v20, v21, v10);
LABEL_13:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v24 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  if (a1 != a2)
  {
    v25 = a3[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    sub_1D2CCADA4((uint64_t)a1 + v25, &qword_1EFCA6D48);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_1D2D9CC9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = v32[16];
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v33;
  sub_1D2D1B93C();
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (_QWORD *)((char *)a2 + v34);
  *(_QWORD *)((char *)a1 + v34) = *v36;
  swift_release();
  *((_QWORD *)v35 + 1) = v36[1];
  swift_release();
  *((_QWORD *)v35 + 2) = v36[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D1C498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D68);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 44) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D1C558(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D68);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 44) + 8) = (a2 - 1);
  return result;
}

void sub_1D2D1C608()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2D1D600(319, (unint64_t *)&qword_1EFCA6DD8, &qword_1ED587850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  if (v0 <= 0x3F)
  {
    sub_1D2CF6584();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ListLabelStyle()
{
  return &type metadata for ListLabelStyle;
}

unint64_t sub_1D2D1C6E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_1EFCA75D0;
  if (!qword_1EFCA75D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA75D8);
    v2 = sub_1D2CC6C74(&qword_1EFCA7510, &qword_1EFCA7508, MEMORY[0x1E0CE0680]);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA74F0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA74E8);
    sub_1D2D9D260();
    v4[4] = sub_1D2CC6C74(&qword_1EFCA7518, &qword_1EFCA74E8, MEMORY[0x1E0CDD950]);
    v4[5] = MEMORY[0x1E0CDBD50];
    v4[2] = v3;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[0] = v2;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EFCA75D0);
  }
  return result;
}

uint64_t sub_1D2D1C7F8()
{
  return sub_1D2CC6C74(&qword_1EFCA75E0, qword_1EFCA75E8, MEMORY[0x1E0CDFB10]);
}

uint64_t *sub_1D2D1C824(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(uint64_t *)((char *)a2 + v10 + 8);
    *v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v13;
    swift_retain();
    swift_retain();
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
    v15 = (char *)v11 + v14;
    v16 = &v12[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&v12[v14], 1, v7))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v15, (uint64_t *)v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    v19 = a3[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = v21[8];
    sub_1D2CF2AB8(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    v20[8] = v23;
    v24 = a3[7];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v25 = *v26;
    if (EnumCaseMultiPayload == 1)
    {
      v25[1] = v26[1];
      swift_retain();
      swift_retain();
      v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v29 = (char *)v25 + v28;
      v30 = (char *)v26 + v28;
      v31 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2D1CA2C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
    v6(v8, v4);
  sub_1D2CF2B30(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  v9 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v12 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v13 = sub_1D2D9CDD4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  return result;
}

uint64_t sub_1D2D1CB5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_retain();
  swift_retain();
  v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v14 = (char *)v10 + v13;
  v15 = (const void *)(v11 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11 + v13, 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  v22 = a3[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v23 = *v24;
  if (EnumCaseMultiPayload == 1)
  {
    v23[1] = v24[1];
    swift_retain();
    swift_retain();
    v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v27 = (char *)v23 + v26;
    v28 = (char *)v24 + v26;
    v29 = sub_1D2D9CDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D2D1CD30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_retain();
  swift_release();
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_retain();
  swift_release();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v13 = (void *)(v10 + v12);
  v14 = (void *)(v11 + v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v11) = v15(v13, 1, v6);
  v16 = v15(v14, 1, v6);
  if ((_DWORD)v11)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_1D2CF2B30(v23, v24);
  if (a1 != a2)
  {
    v25 = a3[7];
    v26 = (_QWORD *)(a1 + v25);
    v27 = (_QWORD *)(a2 + v25);
    sub_1D2CCADA4(a1 + v25, &qword_1EFCA6818);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v26 = *v27;
    if (EnumCaseMultiPayload == 1)
    {
      v26[1] = v27[1];
      swift_retain();
      swift_retain();
      v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v30 = (char *)v26 + v29;
      v31 = (char *)v27 + v29;
      v32 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2D1CF88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v14 = (char *)v10 + v13;
  v15 = (const void *)(v11 + v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  v17 = a3[6];
  v18 = a3[7];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = (_QWORD *)(a1 + v18);
  v22 = (_QWORD *)(a2 + v18);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = v22[1];
    *v21 = *v22;
    v21[1] = v24;
    v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v26 = (char *)v21 + v25;
    v27 = (char *)v22 + v25;
    v28 = sub_1D2D9CDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1D2D1D12C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release();
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_release();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  v13 = (void *)(v10 + v12);
  v14 = (void *)(v11 + v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v16 = v15(v13, 1, v6);
  v17 = v15(v14, 1, v6);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  v19 = a3[6];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  v23 = *(_QWORD *)v20;
  v24 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = (_BYTE)v21;
  sub_1D2CF2B30(v23, v24);
  if (a1 != a2)
  {
    v25 = a3[7];
    v26 = (_QWORD *)(a1 + v25);
    v27 = (_QWORD *)(a2 + v25);
    sub_1D2CCADA4(a1 + v25, &qword_1EFCA6818);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = v27[1];
      *v26 = *v27;
      v26[1] = v29;
      v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
      v31 = (char *)v26 + v30;
      v32 = (char *)v27 + v30;
      v33 = sub_1D2D9CDD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D2D1D35C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D1D368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 254)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B8);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(unsigned __int8 *)(a1 + a3[6] + 8);
  if (v13 > 1)
    return (v13 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1D2D1D438()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D1D444(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(_BYTE *)(a1 + a4[6] + 8) = -(char)a2;
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LanguageListButton(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA7648);
}

void sub_1D2D1D528()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2D9C7EC();
  if (v0 <= 0x3F)
  {
    sub_1D2D1D600(319, (unint64_t *)&qword_1EFCA6DD8, &qword_1ED587850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
    if (v1 <= 0x3F)
    {
      sub_1D2D1D600(319, (unint64_t *)&qword_1EFCA6928, &qword_1EFCA68B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1D2D1D600(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1D2D1D658()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D1D668()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for LanguageListButton(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v3 + v1[5];
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
    v6(v8, v4);
  sub_1D2CF2B30(*(_QWORD *)(v3 + v1[6]), *(_BYTE *)(v3 + v1[6] + 8));
  v9 = v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6818);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v11 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA68B0) + 32);
    v12 = sub_1D2D9CDD4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  return swift_deallocObject();
}

uint64_t sub_1D2D1D7C0()
{
  return sub_1D2D1D9D0(type metadata accessor for LanguageListButton, sub_1D2D1A8C4);
}

uint64_t sub_1D2D1D7D4()
{
  uint64_t v0;

  return sub_1D2D1AA98(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1D2D1D7DC()
{
  unint64_t result;

  result = qword_1EFCA76A0;
  if (!qword_1EFCA76A0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ListLabelStyle, &type metadata for ListLabelStyle);
    atomic_store(result, (unint64_t *)&qword_1EFCA76A0);
  }
  return result;
}

uint64_t sub_1D2D1D820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D1AC04(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2D1D828@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D2D1ADDC(a1);
}

uint64_t sub_1D2D1D830(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0798], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2D1D894()
{
  uint64_t v0;

  return sub_1D2D19B3C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1D2D1D89C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7738;
  if (!qword_1EFCA7738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7740);
    v2[0] = sub_1D2CC66E4(&qword_1EFCA7748, type metadata accessor for LanguageListButton, (uint64_t)&unk_1D2DA2E20);
    v2[1] = sub_1D2CC6C74(&qword_1ED586B20, &qword_1ED586B28, MEMORY[0x1E0CDD0D8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7738);
  }
  return result;
}

unint64_t sub_1D2D1D938()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_1EFCA7758;
  if (!qword_1EFCA7758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7700);
    v2 = sub_1D2D1DB2C(&qword_1EFCA7730, &qword_1EFCA7728);
    v3[0] = MEMORY[0x1E0CE0400];
    v3[1] = v2;
    v3[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFF98], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA7758);
  }
  return result;
}

uint64_t sub_1D2D1D9BC()
{
  return sub_1D2D1D9D0(type metadata accessor for LanguagesView, (uint64_t (*)(uint64_t))sub_1D2D1A1BC);
}

uint64_t sub_1D2D1D9D0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

unint64_t sub_1D2D1DA10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7778;
  if (!qword_1EFCA7778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA76E8);
    v2[0] = sub_1D2D1DA94();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60F0, &qword_1EFCA60F8, MEMORY[0x1E0CDBE48]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7778);
  }
  return result;
}

unint64_t sub_1D2D1DA94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_1EFCA7780;
  if (!qword_1EFCA7780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA76E0);
    v2 = sub_1D2CC6C74(&qword_1EFCA7770, &qword_1EFCA7768, MEMORY[0x1E0CDFB10]);
    v3[0] = MEMORY[0x1E0CE0400];
    v3[1] = v2;
    v3[2] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFF98], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA7780);
  }
  return result;
}

uint64_t sub_1D2D1DB24()
{
  uint64_t v0;

  return sub_1D2D195D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D2D1DB2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  unint64_t v5;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5 = sub_1D2D1D89C();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFEE8], v4, &v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2D1DB84()
{
  uint64_t v0;

  return sub_1D2D1972C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2D1DB8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D2D9C714();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for LanguagesView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  v4 = v2 + *(int *)(v3 + 32);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = v2 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(v3 + 32);
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease();
  v10 = v2 + *(int *)(v1 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_1D2D9CC9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_1D2D1B93C();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D1DD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2D1E18C(a1, (uint64_t)&unk_1E944BC78, (uint64_t)sub_1D2CF4018, a2);
}

uint64_t sub_1D2D1DD8C()
{
  return swift_deallocObject();
}

uint64_t sub_1D2D1DD9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LanguageListButton(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D2D1DDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v43 = (char *)&v32 - v15;
  v44 = MEMORY[0x1E0DEE9D8];
  v36 = *(_QWORD *)(a1 + 16);
  if (v36)
  {
    v16 = 0;
    v41 = a2 + 56;
    v42 = a2;
    v34 = v6;
    v35 = a1;
    while (v16 < *(_QWORD *)(a1 + 16))
    {
      v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v18 = *(_QWORD *)(v8 + 72);
      v19 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
      v19(v6, a1 + v17 + v18 * v16, v7, v14);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        goto LABEL_19;
      v39 = v17;
      v40 = v16;
      v38 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v38(v43, v6, v7);
      v20 = v42;
      if (*(_QWORD *)(v42 + 16)
        && (sub_1D2CC66E4(&qword_1EFCA6E80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]),
            v21 = sub_1D2D9DC44(),
            v22 = -1 << *(_BYTE *)(v20 + 32),
            v23 = v21 & ~v22,
            ((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0))
      {
        v24 = ~v22;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v19)(v12, *(_QWORD *)(v20 + 48) + v23 * v18, v7);
          sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
          v25 = sub_1D2D9DC8C();
          v26 = *(void (**)(char *, uint64_t))(v8 + 8);
          v26(v12, v7);
          if ((v25 & 1) != 0)
            break;
          v23 = (v23 + 1) & v24;
          v20 = v42;
          if (((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_12;
        }
        v26(v43, v7);
      }
      else
      {
LABEL_12:
        v27 = (void (*)(unint64_t, char *, uint64_t))v38;
        v38(v37, v43, v7);
        v28 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D03FA0(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v44;
        }
        v29 = v39;
        v31 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1D2D03FA0(v30 > 1, v31 + 1, 1);
          v28 = v44;
        }
        *(_QWORD *)(v28 + 16) = v31 + 1;
        v27(v28 + v29 + v31 * v18, v37, v7);
        v44 = v28;
      }
      v6 = v34;
      a1 = v35;
      v16 = v40 + 1;
      if (v40 + 1 == v36)
      {
        v33(v34, 1, 1, v7, v14);
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v14);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
  }
}

uint64_t sub_1D2D1E178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2D1E18C(a1, (uint64_t)&unk_1E944BCC8, (uint64_t)sub_1D2D1E2DC, a2);
}

uint64_t sub_1D2D1E18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguagesView(0) - 8) + 80);
  return sub_1D2D19884(a1, v4 + ((v9 + 16) & ~v9), a2, a3, a4);
}

uint64_t sub_1D2D1E1F4()
{
  return swift_deallocObject();
}

uint64_t sub_1D2D1E210@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguagesView(0) - 8) + 80);
  return sub_1D2D19D44(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1D2D1E25C()
{
  unint64_t result;

  result = qword_1EFCA77A0;
  if (!qword_1EFCA77A0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LanguageModel, &type metadata for LanguageModel);
    atomic_store(result, (unint64_t *)&qword_1EFCA77A0);
  }
  return result;
}

uint64_t sub_1D2D1E2A0()
{
  return swift_deallocObject();
}

uint64_t sub_1D2D1E2B0()
{
  return sub_1D2CC6C74(&qword_1EFCA77A8, &qword_1EFCA77B0, MEMORY[0x1E0CDFA58]);
}

uint64_t sub_1D2D1E2E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x1D8248A10](v1);
}

void sub_1D2D1E32C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();

}

void (*sub_1D2D1E390(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1D8248A10](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1D2D1E404;
}

void sub_1D2D1E404(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  *(_QWORD *)((char *)(*a1)[6] + (_QWORD)(*a1)[5] + 8) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

id LanguagesViewController.__allocating_init(initialSelection:showsCloseButton:requireOnDevice:)(uint64_t a1, char a2, char a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return LanguagesViewController.init(initialSelection:showsCloseButton:requireOnDevice:)(a1, a2, a3);
}

id LanguagesViewController.init(initialSelection:showsCloseButton:requireOnDevice:)(uint64_t a1, char a2, char a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl] = 0;
  v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  type metadata accessor for LanguageSelectionModel();
  swift_allocObject();
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_1D2CFC920();
  *(_QWORD *)&v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_subscriptions] = MEMORY[0x1E0DEE9D8];
  v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_showsCloseButton] = a2;
  v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_requireOnDevice] = a3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for LanguagesViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9C0();
  return v8;
}

uint64_t type metadata accessor for LanguagesViewController()
{
  return objc_opt_self();
}

uint64_t sub_1D2D1E6E8()
{
  return sub_1D2D1E9E0();
}

uint64_t sub_1D2D1E6FC(uint64_t a1)
{
  return sub_1D2D1EA68(a1);
}

void (*sub_1D2D1E710(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = malloc(v4);
  v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  v3[4] = v5;
  v3[5] = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  return sub_1D2D1E7F8;
}

void sub_1D2D1E7F8(uint64_t a1, char a2)
{
  sub_1D2D1EC78(a1, a2);
}

uint64_t sub_1D2D1E80C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D1E888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - v9;
  sub_1D2CF811C(a1, (uint64_t)&v12 - v9);
  sub_1D2CF811C((uint64_t)v10, (uint64_t)v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2CF811C((uint64_t)v7, (uint64_t)v4);
  swift_retain_n();
  sub_1D2D9C9C0();
  sub_1D2CCADA4((uint64_t)v7, &qword_1ED587850);
  swift_release();
  return sub_1D2CCADA4((uint64_t)v10, &qword_1ED587850);
}

uint64_t sub_1D2D1E9CC()
{
  return sub_1D2D1E9E0();
}

uint64_t sub_1D2D1E9E0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D1EA54(uint64_t a1)
{
  return sub_1D2D1EA68(a1);
}

uint64_t sub_1D2D1EA68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1D2CF811C(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2CF811C((uint64_t)v7, (uint64_t)v4);
  swift_retain_n();
  sub_1D2D9C9C0();
  sub_1D2CCADA4((uint64_t)v7, &qword_1ED587850);
  swift_release();
  return sub_1D2CCADA4(a1, &qword_1ED587850);
}

void (*sub_1D2D1EB7C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = malloc(v4);
  v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  v3[4] = v5;
  v3[5] = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  return sub_1D2D1EC64;
}

void sub_1D2D1EC64(uint64_t a1, char a2)
{
  sub_1D2D1EC78(a1, a2);
}

void sub_1D2D1EC78(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 16);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_1D2CF811C(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v5);
    sub_1D2CF811C((uint64_t)v5, (uint64_t)v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2CF811C((uint64_t)v4, (uint64_t)v6);
    swift_retain_n();
    sub_1D2D9C9C0();
    sub_1D2CCADA4((uint64_t)v4, &qword_1ED587850);
    swift_release();
    sub_1D2CCADA4((uint64_t)v5, &qword_1ED587850);
  }
  else
  {
    sub_1D2CF811C(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2CF811C((uint64_t)v5, (uint64_t)v4);
    swift_retain_n();
    sub_1D2D9C9C0();
    sub_1D2CCADA4((uint64_t)v5, &qword_1ED587850);
    swift_release();
  }
  sub_1D2CCADA4((uint64_t)v3, &qword_1ED587850);
  free(v3);
  free(v5);
  free(v4);
  free(v6);
  free(v2);
}

void sub_1D2D1EDF8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  double Height;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  uint64_t v90;
  objc_super v91;
  CGRect v92;

  v1 = v0;
  v91.receiver = v0;
  v91.super_class = (Class)type metadata accessor for LanguagesViewController();
  objc_msgSendSuper2(&v91, sel_viewDidLoad);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7208);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D2DA0CB0;
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v89 = (void *)objc_opt_self();
  v4 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = sub_1D2D9C5E8();
  v7 = v6;

  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 40) = v7;
  v9 = objc_msgSend(v89, (SEL)&selRef_setPreferredHeight_ + 1, ObjCClassFromMetadata, 0xE000000000000000);
  v10 = sub_1D2D9C5E8();
  v12 = v11;

  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 64) = v10;
  *(_QWORD *)(v2 + 72) = v12;
  v13 = objc_allocWithZone(MEMORY[0x1E0DC3C58]);
  v14 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithItems_, v14, 0xE000000000000000);

  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v1, sel_updateSelectedTarget, 4096);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  objc_msgSend(v15, sel_setSelectedSegmentIndex_, v90);
  objc_msgSend(v15, sel_sizeToFit);
  objc_msgSend(v15, sel_frame);
  Height = CGRectGetHeight(v92);
  v17 = *(void **)&v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl];
  *(_QWORD *)&v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl] = v15;
  v18 = v15;

  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v19, sel_addSubview_, v18);
  v88 = v19;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4290]), sel_initWithContentView_, v19);
  v21 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1D2DA3020;
  v23 = objc_msgSend(v18, sel_heightAnchor);
  v24 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToConstant_, Height);

  *(_QWORD *)(v22 + 32) = v24;
  v25 = objc_msgSend(v18, sel_topAnchor);
  v26 = objc_msgSend(v20, sel_topAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v22 + 40) = v27;
  v28 = objc_msgSend(v18, sel_leadingAnchor);
  v29 = objc_msgSend(v20, sel_safeAreaLayoutGuide);
  v30 = objc_msgSend(v29, sel_leadingAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 20.0);
  *(_QWORD *)(v22 + 48) = v31;
  v32 = objc_msgSend(v20, sel_safeAreaLayoutGuide);
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v18, sel_trailingAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v34, 20.0);

  *(_QWORD *)(v22 + 56) = v35;
  v36 = objc_msgSend(v20, sel_bottomAnchor);
  v37 = objc_msgSend(v18, sel_bottomAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, 8.0);

  *(_QWORD *)(v22 + 64) = v38;
  sub_1D2D9DE78();
  sub_1D2CC63E8(0, &qword_1EFCA77E8);
  v39 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v87 = v21;
  objc_msgSend(v21, sel_activateConstraints_, v39);

  objc_msgSend(v20, sel_setPreferredHeight_, Height + 8.0);
  v40 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v40, sel__setBottomPalette_, v20);

  v41 = objc_msgSend(v1, sel_navigationItem);
  v42 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9C5E8();

  v43 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_setTitle_, v43, 0xE000000000000000);

  if (v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_showsCloseButton] == 1)
  {
    v44 = objc_msgSend(v1, sel_navigationItem);
    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 24, v1, sel_closeActionWithSender_);
    objc_msgSend(v44, sel_setRightBarButtonItem_, v45);

  }
  v46 = objc_msgSend(v1, sel_view);
  if (!v46)
  {
    __break(1u);
    goto LABEL_17;
  }
  v47 = v46;
  v48 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  objc_msgSend(v47, sel_setBackgroundColor_, v48);

  type metadata accessor for LanguageSelectionModel();
  sub_1D2CC66E4(&qword_1EFCA77F0, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSelectionModel, (uint64_t)&unk_1D2DA22E8);
  swift_retain();
  sub_1D2D9CD2C();
  v49 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA77F8));
  v50 = (void *)sub_1D2D9D158();
  v51 = objc_msgSend(v50, sel_view);
  if (!v51)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v52 = v51;
  objc_msgSend(v51, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v1, sel_addChildViewController_, v50);
  v53 = objc_msgSend(v1, sel_view);
  if (!v53)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v54 = v53;
  v55 = objc_msgSend(v50, sel_view);
  if (!v55)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v56 = v55;
  objc_msgSend(v54, sel_addSubview_, v55);

  objc_msgSend(v50, sel_didMoveToParentViewController_, v1);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1D2DA3030;
  v58 = objc_msgSend(v50, sel_view);
  if (!v58)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, sel_topAnchor);

  v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, sel_topAnchor);

  v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);
  *(_QWORD *)(v57 + 32) = v64;
  v65 = objc_msgSend(v50, sel_view);
  if (!v65)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v66 = v65;
  v67 = objc_msgSend(v65, sel_leadingAnchor);

  v68 = objc_msgSend(v1, sel_view);
  if (!v68)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v69 = v68;
  v70 = objc_msgSend(v68, sel_leadingAnchor);

  v71 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v70);
  *(_QWORD *)(v57 + 40) = v71;
  v72 = objc_msgSend(v1, sel_view);
  if (!v72)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v73 = v72;
  v74 = objc_msgSend(v72, sel_trailingAnchor);

  v75 = objc_msgSend(v50, sel_view);
  if (!v75)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v76 = v75;
  v77 = objc_msgSend(v75, sel_trailingAnchor);

  v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
  *(_QWORD *)(v57 + 48) = v78;
  v79 = objc_msgSend(v1, sel_view);
  if (!v79)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v80 = v79;
  v81 = objc_msgSend(v79, sel_bottomAnchor);

  v82 = objc_msgSend(v50, sel_view);
  if (v82)
  {
    v83 = v82;
    v84 = objc_msgSend(v82, sel_bottomAnchor);

    v85 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v84);
    *(_QWORD *)(v57 + 56) = v85;
    sub_1D2D9DE78();
    v86 = (void *)sub_1D2D9DE48();
    swift_bridgeObjectRelease();
    objc_msgSend(v87, sel_activateConstraints_, v86);

    return;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1D2D1F9E4(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[4];
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  id v61;
  objc_super v62;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586C08);
  MEMORY[0x1E0C80A78](v3);
  v59 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7800);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7808);
  v9 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7810);
  v42 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7818);
  v14 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7820);
  v54 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v55 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (objc_class *)type metadata accessor for LanguagesViewController();
  v62.receiver = v1;
  v62.super_class = v18;
  objc_msgSendSuper2(&v62, sel_viewWillAppear_, a1 & 1);
  v19 = &v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_subscriptions];
  v39 = v1;
  swift_beginAccess();
  v48 = v19;
  *(_QWORD *)v19 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v53 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  swift_beginAccess();
  swift_retain();
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7150);
  sub_1D2D9C990();
  swift_endAccess();
  swift_release();
  v51 = sub_1D2CC6C74(&qword_1EFCA7828, &qword_1EFCA7800, MEMORY[0x1E0C96190]);
  v49 = v5;
  sub_1D2D9CA08();
  v50 = *(void (**)(char *, uint64_t))(v6 + 8);
  v50(v8, v5);
  v47 = sub_1D2D9C7EC();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
  v46 = sub_1D2CC6C74(&qword_1EFCA7830, &qword_1EFCA7808, MEMORY[0x1E0C95988]);
  v21 = v57;
  sub_1D2D9C9E4();
  v45 = *(void (**)(char *, uint64_t))(v9 + 8);
  v45(v11, v21);
  v44 = sub_1D2CC6C74(&qword_1EFCA7838, &qword_1EFCA7810, MEMORY[0x1E0C95708]);
  v43 = sub_1D2CC66E4(qword_1EFCA7C00, v20, MEMORY[0x1E0CB0E60]);
  v22 = v56;
  sub_1D2D9CA14();
  v42 = *(_QWORD *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v13, v22);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C20);
  v61 = (id)sub_1D2D9E094();
  v41 = sub_1D2D9E07C();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v23 = (uint64_t)v59;
  v40(v59, 1, 1, v41);
  v38 = sub_1D2CC6C74(&qword_1EFCA7840, &qword_1EFCA7818, MEMORY[0x1E0C958E0]);
  v37 = sub_1D2D10F08();
  v24 = v55;
  v25 = v58;
  sub_1D2D9C9FC();
  sub_1D2CCADA4(v23, &qword_1ED586C08);

  v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v25);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v35[3] = sub_1D2CC6C74(&qword_1EFCA7848, &qword_1EFCA7820, MEMORY[0x1E0C95CB8]);
  v26 = v60;
  sub_1D2D9CA20();
  swift_release();
  v54 = *(_QWORD *)(v54 + 8);
  ((void (*)(char *, uint64_t))v54)(v24, v26);
  swift_beginAccess();
  v35[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BA8);
  v35[1] = sub_1D2CC6C74((unint64_t *)&unk_1ED586BB0, &qword_1ED586BA8, MEMORY[0x1E0DEAF58]);
  sub_1D2D9C960();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1D2D9C990();
  swift_endAccess();
  swift_release();
  v27 = v49;
  sub_1D2D9CA08();
  v50(v8, v27);
  v28 = v57;
  sub_1D2D9C9E4();
  v45(v11, v28);
  v29 = v56;
  sub_1D2D9CA14();
  ((void (*)(char *, uint64_t))v42)(v13, v29);
  v61 = (id)sub_1D2D9E094();
  v30 = (uint64_t)v59;
  v40(v59, 1, 1, v41);
  v31 = v55;
  v32 = v58;
  sub_1D2D9C9FC();
  sub_1D2CCADA4(v30, &qword_1ED586C08);

  v36(v16, v32);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v33 = v60;
  sub_1D2D9CA20();
  swift_release();
  ((void (*)(char *, uint64_t))v54)(v31, v33);
  swift_beginAccess();
  sub_1D2D9C960();
  swift_endAccess();
  return swift_release();
}

void sub_1D2D201CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjectType;
  void *v30;
  void *v31;
  uint8_t *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[7];
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  if (qword_1ED5878C8 != -1)
    swift_once();
  v12 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED588700);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v35(v10, a1, v7);
  v13 = sub_1D2D9C8DC();
  v14 = sub_1D2D9E01C();
  v15 = os_log_type_enabled(v13, v14);
  v36 = a1;
  v37 = v8;
  if (v15)
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v33 = a2 + 16;
    v18 = v17;
    v38[0] = v17;
    v34 = v6;
    *(_DWORD *)v16 = 136446210;
    v32 = v16 + 4;
    v39 = sub_1D2D9C714();
    v40 = v19;
    v38[4] = 45;
    v38[5] = 0xE100000000000000;
    v38[1] = 95;
    v38[2] = 0xE100000000000000;
    sub_1D2CD1430();
    v20 = sub_1D2D9E1E4();
    v22 = v21;
    swift_bridgeObjectRelease();
    v39 = sub_1D2CF78E0(v20, v22, v38);
    v6 = v34;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
    _os_log_impl(&dword_1D2CC0000, v13, v14, "Source language changed %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    v23 = v18;
    v11 = v33;
    MEMORY[0x1D8248974](v23, -1, -1);
    MEMORY[0x1D8248974](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  swift_beginAccess();
  v24 = MEMORY[0x1D8248A10](v11);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = v24 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
    swift_beginAccess();
    v27 = (void *)MEMORY[0x1D8248A10](v26);
    v28 = *(_QWORD *)(v26 + 8);

    if (v27)
    {
      ObjectType = swift_getObjectType();
      v35(v6, v36, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v6, 0, 1, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 8))(v6, ObjectType, v28);

      sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
    }
  }
  swift_beginAccess();
  v30 = (void *)MEMORY[0x1D8248A10](v11);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

uint64_t sub_1D2D2057C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2CF811C(a1, a2);
}

void sub_1D2D20584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjectType;
  void *v30;
  void *v31;
  uint8_t *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[7];
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  if (qword_1ED5878C8 != -1)
    swift_once();
  v12 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED588700);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v35(v10, a1, v7);
  v13 = sub_1D2D9C8DC();
  v14 = sub_1D2D9E01C();
  v15 = os_log_type_enabled(v13, v14);
  v36 = a1;
  v37 = v8;
  if (v15)
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v33 = a2 + 16;
    v18 = v17;
    v38[0] = v17;
    v34 = v6;
    *(_DWORD *)v16 = 136446210;
    v32 = v16 + 4;
    v39 = sub_1D2D9C714();
    v40 = v19;
    v38[4] = 45;
    v38[5] = 0xE100000000000000;
    v38[1] = 95;
    v38[2] = 0xE100000000000000;
    sub_1D2CD1430();
    v20 = sub_1D2D9E1E4();
    v22 = v21;
    swift_bridgeObjectRelease();
    v39 = sub_1D2CF78E0(v20, v22, v38);
    v6 = v34;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
    _os_log_impl(&dword_1D2CC0000, v13, v14, "Target language changed %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    v23 = v18;
    v11 = v33;
    MEMORY[0x1D8248974](v23, -1, -1);
    MEMORY[0x1D8248974](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  swift_beginAccess();
  v24 = MEMORY[0x1D8248A10](v11);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = v24 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
    swift_beginAccess();
    v27 = (void *)MEMORY[0x1D8248A10](v26);
    v28 = *(_QWORD *)(v26 + 8);

    if (v27)
    {
      ObjectType = swift_getObjectType();
      v35(v6, v36, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v6, 0, 1, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, ObjectType, v28);

      sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
    }
  }
  swift_beginAccess();
  v30 = (void *)MEMORY[0x1D8248A10](v11);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

uint64_t sub_1D2D20974()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl);
  swift_retain();
  if (v1)
    objc_msgSend(v1, sel_selectedSegmentIndex);
  swift_getKeyPath();
  swift_getKeyPath();
  return sub_1D2D9C9C0();
}

id LanguagesViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void LanguagesViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LanguagesViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguagesViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2D20C18@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v33 = a1;
  v34 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D50);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - v6;
  v8 = (int *)type metadata accessor for LanguagesView(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v32 = (uint64_t)&v31 - v12;
  type metadata accessor for LanguageSelectionModel();
  sub_1D2CC66E4(&qword_1EFCA77F0, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSelectionModel, (uint64_t)&unk_1D2DA22E8);
  sub_1D2D9CD38();
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  sub_1D2D9CD38();
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  sub_1D2D9CD38();
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  v31 = v36;
  v13 = v37;
  v14 = MKBGetDeviceLockState();
  v15 = (v14 > 3) | (9u >> (v14 & 0xF));
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  v16 = v35;
  v17 = v8[6];
  *(_QWORD *)&v10[v17] = 0;
  v18 = v8[7];
  v10[v18] = 1;
  v19 = (uint64_t *)&v10[v8[9]];
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6D48);
  swift_storeEnumTagMultiPayload();
  v20 = &v10[v8[10]];
  *(_QWORD *)v20 = sub_1D2D180BC;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  sub_1D2CF5854((uint64_t)v7, (uint64_t)v10);
  sub_1D2CF5854((uint64_t)v4, (uint64_t)&v10[v8[5]]);
  v21 = &v10[v8[11]];
  *(_OWORD *)v21 = v31;
  *((_QWORD *)v21 + 2) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v17] = v16;
  v10[v8[8]] = v33;
  v10[v18] = v15 & 1;
  v22 = (uint64_t)v10;
  v23 = v32;
  sub_1D2D218C0(v22, v32);
  sub_1D2D9D0A4();
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v25 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v26 = sub_1D2D9D5C0();
  v28 = v27;
  LOBYTE(v15) = v29 & 1;
  sub_1D2CC66E4(&qword_1EFCA7878, type metadata accessor for LanguagesView, (uint64_t)&protocol conformance descriptor for LanguagesView);
  sub_1D2D9D680();
  sub_1D2CCCAB4(v26, v28, v15);
  swift_bridgeObjectRelease();
  return sub_1D2D21904(v23);
}

uint64_t sub_1D2D21060()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D21074(uint64_t a1)
{
  return sub_1D2D21114(a1);
}

uint64_t sub_1D2D21088()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D2109C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D21100(uint64_t a1)
{
  return sub_1D2D21114(a1);
}

uint64_t sub_1D2D21114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1D2CF811C(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2CF811C((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_1D2D9C9C0();
  return sub_1D2CCADA4((uint64_t)v7, &qword_1ED587850);
}

uint64_t sub_1D2D2120C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D2128C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t sub_1D2D21300()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D21324(uint64_t a1)
{
  return sub_1D2D21114(a1);
}

uint64_t sub_1D2D21348()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D2136C(uint64_t a1)
{
  return sub_1D2D21114(a1);
}

uint64_t sub_1D2D21390()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D2D213B4(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D201CC(a1, v1);
}

void sub_1D2D213BC(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D20584(a1, v1);
}

uint64_t sub_1D2D213C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1D8248A10](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D2D2141C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1D2D2147C()
{
  return sub_1D2D1E80C();
}

uint64_t sub_1D2D214A0(uint64_t a1)
{
  return sub_1D2D1E888(a1);
}

uint64_t sub_1D2D214C4()
{
  return sub_1D2D1E80C();
}

uint64_t sub_1D2D214E8(uint64_t a1)
{
  return sub_1D2D1E888(a1);
}

uint64_t dispatch thunk of LanguageSelectionDelegate.sourceChanged(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LanguageSelectionDelegate.targetChanged(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for LanguagesViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LanguagesViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LanguagesViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of LanguagesViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of LanguagesViewController.__allocating_init(initialSelection:showsCloseButton:requireOnDevice:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t sub_1D2D21630(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LanguagesViewController.LanguageModelWrapper(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagesViewController.LanguageModelWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesViewController.LanguageModelWrapper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesViewController.LanguageModelWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesViewController.LanguageModelWrapper()
{
  return &type metadata for LanguagesViewController.LanguageModelWrapper;
}

uint64_t sub_1D2D217A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D217B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D20C18(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_1D2D217BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D2183C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t sub_1D2D218C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LanguagesView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D21904(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LanguagesView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2D21940(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1D2D21964()
{
  type metadata accessor for LanguagesView(255);
  sub_1D2CC66E4(&qword_1EFCA7878, type metadata accessor for LanguagesView, (uint64_t)&protocol conformance descriptor for LanguagesView);
  return swift_getOpaqueTypeConformance2();
}

uint64_t EnvironmentValues.languageLabelContext.getter()
{
  uint64_t v1;

  sub_1D2CFBD64();
  sub_1D2D9CFFC();
  return v1;
}

uint64_t EnvironmentValues.languageLabelContext.setter()
{
  sub_1D2CFBD64();
  return sub_1D2D9D008();
}

uint64_t LIDOrLanguagePicker.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1D2D9DAD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7880);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v0;
  v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7888);
  sub_1D2CFA058();
  sub_1D2D23A38();
  sub_1D2D9D530();
  sub_1D2D9DAC4();
  sub_1D2CC6C74(&qword_1EFCA78B8, &qword_1EFCA7880, MEMORY[0x1E0CDD990]);
  sub_1D2D9D788();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D2D21BB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for LIDOrLanguagePicker();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = sub_1D2D21D10();
  swift_getKeyPath();
  sub_1D2CDB6B4(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7970);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA78A0);
  sub_1D2CC6C74(&qword_1EFCA7978, &qword_1EFCA7970, MEMORY[0x1E0DEAF48]);
  sub_1D2D23A9C();
  return sub_1D2D9D9BC();
}

uint64_t sub_1D2D21D08()
{
  uint64_t v0;

  return sub_1D2D21BB0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D2D21D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  int v66;
  char v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  BOOL v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t result;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  void (*v98)(char *, char *, uint64_t);
  __int128 v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  __int128 v116;
  char *v117;
  char v118;
  char *v119;
  char *v120;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7980);
  MEMORY[0x1E0C80A78](v1);
  v93 = (uint64_t)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LanguageOption();
  v103 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v105 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v91 - v6;
  v110 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v104 = (char *)&v91 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v91 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v91 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v91 - v20;
  v22 = type metadata accessor for LIDOrLanguagePicker();
  if (*(_QWORD *)(v0 + *(int *)(v22 + 20)))
    v23 = *(_QWORD *)(v0 + *(int *)(v22 + 20));
  else
    v23 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v23 + 16);
  v95 = v7;
  v94 = v0;
  v108 = v8;
  if (v24)
  {
    v100 = v15;
    v92 = v22;
    v115 = (char *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D2D03F2C(0, v24, 0);
    v25 = (char *)(v23 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
    *(_QWORD *)&v99 = *(_QWORD *)(v8 + 72);
    v98 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v26 = v110;
    v101 = v10;
    v97 = v18;
    v96 = v21;
    v102 = (char *)v23;
    do
    {
      v106 = v25;
      v107 = v24;
      v27 = v25;
      v28 = v98;
      v98(v21, v27, v26);
      v28(v18, v21, v26);
      *(_QWORD *)&v116 = sub_1D2D9C714();
      *((_QWORD *)&v116 + 1) = v29;
      v113 = 45;
      v114 = 0xE100000000000000;
      v111 = 95;
      v112 = 0xE100000000000000;
      sub_1D2CD1430();
      v30 = sub_1D2D9E1E4();
      v32 = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v116 = v30;
      *((_QWORD *)&v116 + 1) = v32;
      v113 = 45;
      v114 = 0xE100000000000000;
      v111 = 95;
      v112 = 0xE100000000000000;
      v33 = sub_1D2D9E1E4();
      v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v36 = v100;
      sub_1D2D9C708();
      v37 = (uint64_t)v104;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      v38 = Locale.sqDisplayName(context:in:)(0, v37);
      v26 = v110;
      v39 = v38;
      v41 = v40;
      v42 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
      v42(v37, v110);
      v28(v10, v36, v26);
      v109 = v33;
      if (v41)
      {
        v33 = v39;
        v42((uint64_t)v10, v26);
        v42((uint64_t)v36, v26);
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        v43 = Locale.sqDisplaySubname(context:in:)(0, v37);
        v26 = v110;
        v44 = v43;
        v41 = v45;
        v42(v37, v110);
        v42((uint64_t)v10, v26);
        v42((uint64_t)v36, v26);
        if (v41)
        {
          v33 = v44;
        }
        else
        {
          swift_bridgeObjectRetain();
          v41 = v35;
        }
      }
      v18 = v97;
      v21 = v96;
      v46 = v106;
      v47 = v107;
      swift_bridgeObjectRelease();
      v42((uint64_t)v18, v26);
      v42((uint64_t)v21, v26);
      v48 = v115;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v49 = v48;
      }
      else
      {
        sub_1D2D03F2C(0, *((_QWORD *)v48 + 2) + 1, 1);
        v26 = v110;
        v49 = v115;
      }
      v51 = *((_QWORD *)v49 + 2);
      v50 = *((_QWORD *)v49 + 3);
      if (v51 >= v50 >> 1)
      {
        sub_1D2D03F2C(v50 > 1, v51 + 1, 1);
        v26 = v110;
        v49 = v115;
      }
      *((_QWORD *)v49 + 2) = v51 + 1;
      v52 = &v49[48 * v51];
      *((_QWORD *)v52 + 4) = v109;
      *((_QWORD *)v52 + 5) = v35;
      *((_QWORD *)v52 + 6) = 1;
      v52[56] = 1;
      *((_QWORD *)v52 + 8) = v33;
      *((_QWORD *)v52 + 9) = v41;
      v25 = &v46[v99];
      v24 = v47 - 1;
      v10 = v101;
    }
    while (v24);
    v53 = v49;
    swift_bridgeObjectRelease();
    v54 = v94;
    v7 = v95;
    v22 = v92;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v54 = v0;
    v53 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v113 = *(_QWORD *)(v54 + *(int *)(v22 + 28));
  v55 = (uint64_t)v105;
  v104 = (char *)*((_QWORD *)v53 + 2);
  if (!v104)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  v102 = v53 + 32;
  swift_bridgeObjectRetain();
  v97 = v53;
  swift_bridgeObjectRetain();
  v56 = 0;
  *(_QWORD *)&v57 = 136446210;
  v99 = v57;
  v98 = (void (*)(char *, char *, uint64_t))(MEMORY[0x1E0DEE9B8] + 8);
  while (1)
  {
    v59 = &v102[48 * v56];
    v60 = *(_QWORD *)v59;
    v61 = *((_QWORD *)v59 + 1);
    v106 = (char *)*((_QWORD *)v59 + 5);
    v107 = v56;
    v62 = (_QWORD *)v113;
    v63 = *(_QWORD *)(v113 + 16);
    if (v63)
      break;
LABEL_50:
    if (qword_1ED587118 != -1)
      swift_once();
    v75 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v75, (uint64_t)qword_1ED5886C8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76 = sub_1D2D9C8DC();
    v77 = sub_1D2D9E034();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v111 = v79;
      *(_DWORD *)v78 = v99;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v78 + 4) = sub_1D2CF78E0(v60, v61, &v111);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v76, v77, "When sorting language menu, master list does not contain LID identified language %{public}s", (uint8_t *)v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v79, -1, -1);
      MEMORY[0x1D8248974](v78, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v55 = (uint64_t)v105;
    v58 = v107;
LABEL_23:
    v56 = v58 + 1;
    if ((char *)v56 == v104)
    {
      swift_bridgeObjectRelease_n();
      v7 = v95;
LABEL_56:
      v80 = v113;
      v81 = *(_QWORD *)(v113 + 16);
      v82 = MEMORY[0x1E0DEE9D8];
      if (v81)
      {
        v111 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1D2D03FE8(0, v81, 0);
        v82 = v111;
        v83 = v80 + 40;
        do
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1D2D9C708();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v55, 0, 2, v110);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = v82;
          v85 = *(_QWORD *)(v82 + 16);
          v84 = *(_QWORD *)(v82 + 24);
          if (v85 >= v84 >> 1)
          {
            sub_1D2D03FE8(v84 > 1, v85 + 1, 1);
            v82 = v111;
          }
          *(_QWORD *)(v82 + 16) = v85 + 1;
          sub_1D2CD1FD4(v55, v82+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v85, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
          v83 += 48;
          --v81;
        }
        while (v81);
        swift_bridgeObjectRelease();
        v7 = v95;
      }
      v111 = v82;
      swift_bridgeObjectRetain();
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
      MEMORY[0x1D82474B0]();
      v87 = sub_1D2D31D44((uint64_t)v7, v82);
      sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
      swift_bridgeObjectRelease();
      if ((v87 & 1) == 0)
      {
        MEMORY[0x1D82474B0](v86);
        v88 = v93;
        sub_1D2CD1FD4((uint64_t)v7, v93, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
        sub_1D2D23F1C(0, 0, v88);
      }
      v89 = v111;
      swift_bridgeObjectRelease();
      return v89;
    }
  }
  v64 = 0;
  v65 = (char *)*((_QWORD *)v59 + 2);
  v66 = v59[24];
  v100 = (char *)*((_QWORD *)v59 + 4);
  v101 = v65;
  if (v65)
    v67 = v66;
  else
    v67 = 0;
  if (v65)
    v68 = 0;
  else
    v68 = v66;
  LODWORD(v109) = v68;
  v69 = 5;
  while (1)
  {
    v70 = v62[v69 + 1];
    v71 = v62[v69 + 2];
    v72 = v62[v69 - 1] == v60 && v62[v69] == v61;
    if (!v72 && (sub_1D2D9E52C() & 1) == 0)
      goto LABEL_33;
    if ((v71 & 1) == 0)
    {
      if ((v66 & 1) == 0)
        goto LABEL_44;
      goto LABEL_33;
    }
    if (!v70)
      break;
    if ((v67 & 1) != 0)
      goto LABEL_44;
LABEL_33:
    ++v64;
    v69 += 6;
    if (v63 == v64)
      goto LABEL_50;
  }
  if ((v109 & 1) == 0)
    goto LABEL_33;
LABEL_44:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v62 = sub_1D2D4B0F4(v62);
  v73 = v62[2];
  if (v73 <= v64)
  {
    __break(1u);
    goto LABEL_66;
  }
  if ((uint64_t)(~v64 + v73) >= 0)
  {
    v74 = v73 - 1;
    memmove(&v62[v69 - 1], &v62[v69 + 5], 48 * (~v64 + v73));
    v62[2] = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v113 = (uint64_t)v62;
    v58 = v107;
    if (v62[2] >= v107)
    {
      *(_QWORD *)&v116 = v60;
      *((_QWORD *)&v116 + 1) = v61;
      v117 = v101;
      v118 = v66;
      v119 = v100;
      v120 = v106;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D2D23D88(v58, v58, &v116);
      v55 = (uint64_t)v105;
      goto LABEL_23;
    }
LABEL_66:
    __break(1u);
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D227F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CDB6B4(a1, (uint64_t)v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4))
  {
    result = LanguageOption.title(_:)(0);
    v13 = result;
    v15 = v14;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = sub_1D2D9C714();
    v15 = v16;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_1D2D2290C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v41 = a2;
  v39 = a1;
  v38 = type metadata accessor for LIDOrLanguagePicker();
  v6 = *(_QWORD *)(v38 - 8);
  v40 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v38);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LanguageOption();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37[2] = v11;
  v13 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CDB6B4(a1, (uint64_t)v13, v14);
  sub_1D2CDB6B4(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2D9DEFC();
  v15 = sub_1D2D9DEF0();
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(unsigned __int8 *)(v6 + 80);
  v37[1] = v16 | v18 | 7;
  v19 = swift_allocObject();
  v20 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v19 + 16) = v15;
  *(_QWORD *)(v19 + 24) = v20;
  sub_1D2CD1FD4((uint64_t)v13, v19 + v17, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2CD1FD4((uint64_t)v8, v19 + ((v12 + v18 + v17) & ~v18), (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CDB6B4(v41, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CDB6B4(v39, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  v21 = sub_1D2D9DEF0();
  v22 = (v18 + 32) & ~v18;
  v23 = (v40 + v16 + v22) & ~v16;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v24 + 24) = MEMORY[0x1E0DF06E8];
  sub_1D2CD1FD4((uint64_t)v8, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CD1FD4((uint64_t)v13, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2D9D980();
  v25 = v42;
  v26 = v43;
  LOBYTE(v15) = v44;
  v27 = v39;
  v28 = LanguageOption.title(_:)(0);
  v40 = v29;
  v30 = LanguageOption.subtitle(opposite:)(v41 + *(int *)(v38 + 24));
  v32 = v31;
  swift_retain();
  swift_retain();
  LOBYTE(v27) = sub_1D2D22D94(v27);
  KeyPath = swift_getKeyPath();
  v34 = swift_allocObject();
  *(_BYTE *)(v34 + 16) = (v27 & 1) == 0;
  swift_release();
  result = swift_release();
  *(_QWORD *)a3 = v25;
  *(_QWORD *)(a3 + 8) = v26;
  *(_BYTE *)(a3 + 16) = v15;
  v36 = v40;
  *(_QWORD *)(a3 + 24) = v28;
  *(_QWORD *)(a3 + 32) = v36;
  *(_QWORD *)(a3 + 40) = v30;
  *(_QWORD *)(a3 + 48) = v32;
  *(_QWORD *)(a3 + 56) = KeyPath;
  *(_QWORD *)(a3 + 64) = sub_1D2CF4018;
  *(_QWORD *)(a3 + 72) = v34;
  return result;
}

uint64_t sub_1D2D22C08@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  MEMORY[0x1D82474B0](v7);
  LOBYTE(a1) = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
  result = sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  *a2 = a1 & 1;
  return result;
}

void sub_1D2D22CB4(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v7 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v13 - v11;
  if (*a1 == 1)
  {
    sub_1D2CDB6B4(a5, (uint64_t)&v13 - v11, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    sub_1D2CDB6B4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
    sub_1D2D9D968();
    sub_1D2CD3734((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  }
}

uint64_t sub_1D2D22D94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  char v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  unsigned int v52;
  char *v53;
  uint64_t v54;
  id v55;
  char *v56;
  void *v57;
  void *v58;
  id v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char v78;
  void (*v79)(uint64_t, uint64_t);
  void *v80;
  void *v81;
  void *v82;
  unsigned int v83;
  id v84;
  void *v85;
  unsigned int v86;
  char v87;
  void *v88;
  char *v89;
  void *v90;
  id v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  int *v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(void);
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;

  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7968);
  MEMORY[0x1E0C80A78](v113);
  v117 = (uint64_t)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v3);
  v109 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v98 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v110 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v112 = (uint64_t)&v98 - v11;
  MEMORY[0x1E0C80A78](v12);
  v111 = (uint64_t)&v98 - v13;
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v98 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v98 - v17;
  v19 = sub_1D2D9C7EC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (void (*)(char *, uint64_t))((char *)&v98 - v24);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v98 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v98 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v98 - v33;
  v114 = a1;
  sub_1D2CDB6B4(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v118 = v19;
  if (v35(v7, 2, v19))
  {
    sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v118);
LABEL_4:
    sub_1D2CCADA4((uint64_t)v18, &qword_1ED587850);
    if (qword_1ED587118 != -1)
      swift_once();
    v39 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED5886C8);
    v40 = sub_1D2D9C8DC();
    v41 = sub_1D2D9E034();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1D2CC0000, v40, v41, "LanguageOption does not contain a locale", v42, 2u);
      MEMORY[0x1D8248974](v42, -1, -1);
    }

    goto LABEL_9;
  }
  v103 = v22;
  v104 = v25;
  v36 = (uint64_t)v115;
  v106 = v28;
  v107 = v31;
  v102 = v34;
  v37 = *(void (**)(void))(v20 + 32);
  v38 = v118;
  ((void (*)(char *, char *, uint64_t))v37)(v18, v7, v118);
  v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v116(v18, 0, 1, v38);
  if (v35(v18, 1, v38) == 1)
    goto LABEL_4;
  v45 = v20;
  v46 = v102;
  v47 = v118;
  v37();
  v48 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v48(v107, v46, v47);
  v100 = (int *)type metadata accessor for LIDOrLanguagePicker();
  v49 = v108;
  v50 = v36;
  sub_1D2CF811C(v108 + v100[6], v36);
  v51 = v104;
  v48((char *)v104, v46, v47);
  v52 = v35((char *)v36, 1, v47);
  v105 = v37;
  if (v52 == 1)
  {
    v53 = v106;
    ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v37)(v106, v51, v118);
    sub_1D2CCADA4(v50, &qword_1ED587850);
  }
  else
  {
    v54 = v118;
    (*(void (**)(_QWORD, uint64_t))(v45 + 8))(v51, v118);
    v53 = v106;
    ((void (*)(char *, uint64_t, uint64_t))v37)(v106, v50, v54);
  }
  v55 = objc_allocWithZone(MEMORY[0x1E0CE9978]);
  v56 = v107;
  v57 = (void *)sub_1D2D9C744();
  v58 = (void *)sub_1D2D9C744();
  v59 = objc_msgSend(v55, sel_initWithSourceLocale_targetLocale_, v57, v58);

  v60 = *(void (**)(char *, uint64_t))(v45 + 8);
  v61 = v118;
  v60(v53, v118);
  v60(v56, v61);
  if (objc_msgSend(v59, sel_isVariantPair)
    || (v62 = *(_QWORD *)(v49 + v100[7]), (v63 = *(_QWORD *)(v62 + 16)) == 0))
  {
LABEL_29:
    v60(v46, v118);

LABEL_9:
    v43 = 0;
    return v43 & 1;
  }
  v104 = v60;
  v99 = v59;
  swift_bridgeObjectRetain_n();
  v98 = v62;
  v64 = v62 + 40;
  v65 = (uint64_t)v109;
  v67 = v111;
  v66 = v112;
  v101 = v35;
  while (1)
  {
    v107 = *(char **)(v64 + 8);
    LODWORD(v106) = *(unsigned __int8 *)(v64 + 16);
    v69 = *(char **)(v64 + 32);
    swift_bridgeObjectRetain_n();
    v115 = v69;
    v70 = v118;
    swift_bridgeObjectRetain();
    sub_1D2D9C708();
    v116((char *)v67, 0, 1, v70);
    sub_1D2CDB6B4(v114, v65, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    if (v35((char *)v65, 2, v70))
    {
      sub_1D2CD3734(v65, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
      v71 = 1;
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v105)(v66, v65, v118);
      v71 = 0;
    }
    v68 = v117;
    v72 = v118;
    v116((char *)v66, v71, 1, v118);
    v73 = v68 + *(int *)(v113 + 48);
    sub_1D2CF811C(v67, v68);
    sub_1D2CF811C(v66, v73);
    if (v35((char *)v68, 1, v72) == 1)
      break;
    v74 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
    v75 = v110;
    sub_1D2CF811C(v68, v110);
    if (v74(v73, 1, v118) == 1)
    {
      v66 = v112;
      sub_1D2CCADA4(v112, &qword_1ED587850);
      v67 = v111;
      sub_1D2CCADA4(v111, &qword_1ED587850);
      v104((char *)v75, v118);
      v35 = v101;
      goto LABEL_18;
    }
    v76 = v103;
    v77 = v118;
    ((void (*)(char *, uint64_t, uint64_t))v105)(v103, v73, v118);
    sub_1D2D25530();
    v78 = sub_1D2D9DC8C();
    v79 = (void (*)(uint64_t, uint64_t))v104;
    v104(v76, v77);
    v66 = v112;
    sub_1D2CCADA4(v112, &qword_1ED587850);
    v67 = v111;
    sub_1D2CCADA4(v111, &qword_1ED587850);
    v79(v75, v77);
    v65 = (uint64_t)v109;
    sub_1D2CCADA4(v117, &qword_1ED587850);
    v35 = v101;
    if ((v78 & 1) != 0)
      goto LABEL_31;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 += 48;
    if (!--v63)
    {
      swift_bridgeObjectRelease_n();
      v46 = v102;
      v59 = v99;
      v60 = v104;
      goto LABEL_29;
    }
  }
  sub_1D2CCADA4(v66, &qword_1ED587850);
  v68 = v117;
  sub_1D2CCADA4(v67, &qword_1ED587850);
  if (v35((char *)v73, 1, v118) != 1)
  {
LABEL_18:
    sub_1D2CCADA4(v68, &qword_1EFCA7968);
    goto LABEL_19;
  }
  sub_1D2CCADA4(v68, &qword_1ED587850);
LABEL_31:
  swift_bridgeObjectRelease_n();
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  v81 = v80;
  v82 = (void *)sub_1D2D9DCB0();
  v83 = objc_msgSend(v81, sel_BOOLForKey_, v82, v98);

  v84 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (!v84)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v83)
      goto LABEL_35;
    goto LABEL_38;
  }
  v85 = v84;
  v86 = objc_msgSend(v84, sel_isOnDeviceOnlyTranslationForced);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (((v86 | v83) & 1) == 0)
    goto LABEL_38;
LABEL_35:
  v87 = (char)v106;
  if (v107)
    v87 = 0;
  if ((v87 & 1) == 0)
  {
    v104(v102, v118);

    goto LABEL_9;
  }
LABEL_38:
  if (*(_BYTE *)(v108 + v100[8]) == 1)
  {
    v88 = (void *)objc_opt_self();
    v89 = v102;
    v90 = (void *)sub_1D2D9C744();
    v91 = objc_msgSend(v90, sel_languageIdentifier);

    sub_1D2D9DCD4();
    v92 = (void *)sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
    v93 = objc_msgSend(v88, sel_baseLanguageFromLanguage_, v92);

    v94 = sub_1D2D9DCD4();
    v96 = v95;

    if (qword_1ED587110 != -1)
      swift_once();
    v97 = qword_1ED5886C0;
    swift_bridgeObjectRetain();
    v43 = sub_1D2D26E94(v94, v96, v97);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104(v89, v118);
  }
  else
  {
    v104(v102, v118);

    v43 = 1;
  }
  return v43 & 1;
}

uint64_t sub_1D2D237F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)();
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B50);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  MEMORY[0x1D82474B0](v14);
  v15 = a1 + *(int *)(type metadata accessor for LIDOrLanguagePicker() + 36);
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v15, v17);
  v18 = sub_1D2D7CBC4(v16, v17);
  sub_1D2CF2B30(v16, v17);
  v19 = LanguageOption.title(_:)(v18);
  v21 = v20;
  sub_1D2CD3734((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  v27 = v19;
  v28 = v21;
  sub_1D2CD1430();
  sub_1D2D9D8A8();
  sub_1D2CC6C74(&qword_1ED586B48, &qword_1ED586B50, MEMORY[0x1E0CDF8C8]);
  sub_1D2CFA120();
  sub_1D2D9D608();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v22 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v26, v13, v10);
  v23 = (uint64_t (**)())(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8) + 36));
  *v23 = sub_1D2CFA290;
  v23[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1D2D23A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D237F0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D2D23A38()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFCA7890;
  if (!qword_1EFCA7890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7888);
    v2 = sub_1D2D23A9C();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7890);
  }
  return result;
}

unint64_t sub_1D2D23A9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7898;
  if (!qword_1EFCA7898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA78A0);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA78A8, &qword_1EFCA78B0, MEMORY[0x1E0CD8ED0]);
    v2[1] = sub_1D2CC6C74(&qword_1ED586B20, &qword_1ED586B28, MEMORY[0x1E0CDD0D8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7898);
  }
  return result;
}

uint64_t sub_1D2D23B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1D2D9DAD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7880);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v0;
  v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586AF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7888);
  sub_1D2CFA058();
  sub_1D2D23A38();
  sub_1D2D9D530();
  sub_1D2D9DAC4();
  sub_1D2CC6C74(&qword_1EFCA78B8, &qword_1EFCA7880, MEMORY[0x1E0CDD990]);
  sub_1D2D9D788();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D2D23CB8()
{
  sub_1D2D254EC();
  return sub_1D2D9CCD8();
}

uint64_t (*EnvironmentValues.languageLabelContext.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_1D2CFBD64();
  sub_1D2D9CFFC();
  return sub_1D2D23D54;
}

uint64_t sub_1D2D23D54(_QWORD *a1)
{
  a1[1] = *a1;
  return sub_1D2D9D008();
}

char *sub_1D2D23D88(uint64_t a1, int64_t a2, _OWORD *a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  _OWORD *v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1D2D4A9DC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = &v5[6 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 3);
    v19 = (char *)&v5[6 * a2 + 4];
    if (v14 + 3 != (_OWORD *)v19 || result >= &v19[48 * v18])
      result = (char *)memmove(result, v19, 48 * v18);
    v20 = v5[2];
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      v22 = a3[1];
      *v14 = *a3;
      v14[1] = v22;
      v14[2] = a3[2];
      *(_QWORD *)v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D23F1C(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1D2D4AB00(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = *(_QWORD *)(type metadata accessor for LanguageOption() - 8);
  v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_33;
  if (v19 < 0)
  {
LABEL_35:
    result = sub_1D2D9E3DC();
    __break(1u);
    return result;
  }
  v20 = v17 + v16;
  v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v9);
  v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1)
    sub_1D2CDB6B4(a3, v17, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  return sub_1D2CCADA4(a3, &qword_1EFCA7980);
}

uint64_t _s13TranslationUI19LIDOrLanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v66 = a2;
  v3 = sub_1D2D9C7EC();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7968);
  MEMORY[0x1E0C80A78](v63);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LIDOrLanguagePicker();
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v67 = (uint64_t)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v57 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v57 - v21;
  v23 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v57 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  MEMORY[0x1D82474B0]();
  v30 = v66;
  MEMORY[0x1D82474B0](v29);
  LOBYTE(v29) = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0((uint64_t)v28, (uint64_t)v25);
  v31 = (uint64_t)v25;
  v32 = a1;
  sub_1D2CD3734(v31, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  v33 = v30;
  sub_1D2CD3734((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2CDB6B4(a1, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CDB6B4(v30, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  if ((v29 & 1) == 0)
  {
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
LABEL_11:
    v42 = (uint64_t)v64;
    v41 = (uint64_t)v65;
    v40 = v67;
    v39 = v68;
    sub_1D2CDB6B4(v32, v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CDB6B4(v33, v40, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    goto LABEL_12;
  }
  v34 = v63;
  v58 = v8;
  v35 = *(int *)(v9 + 20);
  v36 = *(_QWORD *)&v19[v35];
  if (!*(_QWORD *)&v22[v35])
  {
    swift_bridgeObjectRetain();
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    if (!v36)
    {
      v39 = v68;
      sub_1D2CDB6B4(v32, v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
      v40 = v67;
      sub_1D2CDB6B4(v33, v67, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
      v42 = (uint64_t)v64;
      v41 = (uint64_t)v65;
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  if (!v36)
  {
    swift_bridgeObjectRetain();
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v37 = swift_bridgeObjectRetain();
  v38 = sub_1D2D31630(v37, v36);
  swift_bridgeObjectRelease();
  sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CD3734((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  swift_bridgeObjectRelease();
  v39 = v68;
  sub_1D2CDB6B4(v32, v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  v40 = v67;
  sub_1D2CDB6B4(v33, v67, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  v42 = (uint64_t)v64;
  v41 = (uint64_t)v65;
  if ((v38 & 1) == 0)
  {
LABEL_12:
    sub_1D2CD3734(v40, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734(v39, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
LABEL_13:
    sub_1D2CDB6B4(v32, v42, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CDB6B4(v33, v41, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    goto LABEL_14;
  }
LABEL_17:
  v65 = (char *)v9;
  v45 = *(int *)(v9 + 24);
  v46 = v39 + v45;
  v47 = v40 + v45;
  v48 = *(int *)(v34 + 48);
  v49 = (uint64_t)v58;
  v50 = (uint64_t)&v58[v48];
  sub_1D2CF811C(v46, (uint64_t)v58);
  sub_1D2CF811C(v47, v50);
  v51 = v61;
  v52 = v62;
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v53(v49, 1, v62) == 1)
  {
    sub_1D2CD3734(v40, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734(v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    if (v53(v50, 1, v52) == 1)
    {
      sub_1D2CCADA4(v49, &qword_1ED587850);
      sub_1D2CDB6B4(v32, v42, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
      sub_1D2CDB6B4(v33, v41, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
LABEL_24:
      v43 = sub_1D2D317B4(*(_QWORD *)(v42 + *((int *)v65 + 7)), *(_QWORD *)(v41 + *((int *)v65 + 7)));
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  v54 = v60;
  sub_1D2CF811C(v49, v60);
  if (v53(v50, 1, v52) == 1)
  {
    sub_1D2CD3734(v67, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    sub_1D2CD3734(v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v52);
LABEL_22:
    sub_1D2CCADA4(v49, &qword_1EFCA7968);
    goto LABEL_13;
  }
  v55 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v59, v50, v52);
  sub_1D2D25530();
  LODWORD(v64) = sub_1D2D9DC8C();
  v56 = *(void (**)(char *, uint64_t))(v51 + 8);
  v56(v55, v52);
  sub_1D2CD3734(v67, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CD3734(v68, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  v56((char *)v54, v52);
  sub_1D2CCADA4(v49, &qword_1ED587850);
  sub_1D2CDB6B4(v32, v42, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CDB6B4(v33, v41, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  if ((v64 & 1) != 0)
    goto LABEL_24;
LABEL_14:
  v43 = 0;
LABEL_15:
  sub_1D2CD3734(v42, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  sub_1D2CD3734(v41, (uint64_t (*)(_QWORD))type metadata accessor for LIDOrLanguagePicker);
  return v43 & 1;
}

uint64_t sub_1D2D2475C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for LIDOrLanguagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D2D9C7EC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 2, v11))
    {
      v14 = type metadata accessor for LanguageOption();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
    }
    v15 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    swift_bridgeObjectRetain();
    if (v13(v17, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    v19 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *(_QWORD *)v22;
    v24 = v22[8];
    swift_bridgeObjectRetain();
    sub_1D2CF2AB8(v23, v24);
    *(_QWORD *)v21 = v23;
    v21[8] = v24;
  }
  return a1;
}

uint64_t destroy for LIDOrLanguagePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 2, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 24);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  return sub_1D2CF2B30(*(_QWORD *)(a1 + *(int *)(a2 + 36)), *(_BYTE *)(a1 + *(int *)(a2 + 36) + 8));
}

_QWORD *initializeWithCopy for LIDOrLanguagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 2, v10))
  {
    v13 = type metadata accessor for LanguageOption();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  v14 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  swift_bridgeObjectRetain();
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  v19 = a3[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = v21[8];
  swift_bridgeObjectRetain();
  sub_1D2CF2AB8(v22, v23);
  *(_QWORD *)v20 = v22;
  v20[8] = v23;
  return a1;
}

char *assignWithCopy for LIDOrLanguagePicker(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;

  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *((_QWORD *)a1 + 1) = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = type metadata accessor for LanguageOption();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
  v21 = a3[9];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = v23[8];
  sub_1D2CF2AB8(*(_QWORD *)v23, v25);
  v26 = *(_QWORD *)v22;
  v27 = v22[8];
  *(_QWORD *)v22 = v24;
  v22[8] = v25;
  sub_1D2CF2B30(v26, v27);
  return a1;
}

_QWORD *initializeWithTake for LIDOrLanguagePicker(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 2, v10))
  {
    v13 = type metadata accessor for LanguageOption();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  v14 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)&a2[a3[5]];
  v15 = (char *)a1 + v14;
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  *((_BYTE *)a1 + v18) = a2[v18];
  v19 = a3[9];
  v20 = (char *)a1 + v19;
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  return a1;
}

char *assignWithTake for LIDOrLanguagePicker(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)a1 = *a2;
  swift_release();
  *((_QWORD *)a1 + 1) = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = type metadata accessor for LanguageOption();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v21 = a3[9];
  a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  LOBYTE(v23) = v23[8];
  v25 = *(_QWORD *)v22;
  v26 = v22[8];
  *(_QWORD *)v22 = v24;
  v22[8] = (char)v23;
  sub_1D2CF2B30(v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LIDOrLanguagePicker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D251F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LIDOrLanguagePicker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D252B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for LIDOrLanguagePicker()
{
  uint64_t result;

  result = qword_1EFCA7918;
  if (!qword_1EFCA7918)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2D2539C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2CE60DC(319, (unint64_t *)&qword_1EFCA5CD0, (uint64_t (*)(uint64_t))type metadata accessor for LanguageOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  if (v0 <= 0x3F)
  {
    sub_1D2CE60DC(319, (unint64_t *)&qword_1ED5878C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D2D25478()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7880);
  sub_1D2CC6C74(&qword_1EFCA78B8, &qword_1EFCA7880, MEMORY[0x1E0CDD990]);
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LanguagePickerLabelFormatEnvironmentKey()
{
  return &type metadata for LanguagePickerLabelFormatEnvironmentKey;
}

unint64_t sub_1D2D254EC()
{
  unint64_t result;

  result = qword_1EFCA7960;
  if (!qword_1EFCA7960)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for DisplayNameContext, &type metadata for DisplayNameContext);
    atomic_store(result, (unint64_t *)&qword_1EFCA7960);
  }
  return result;
}

unint64_t sub_1D2D25530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA7C00[0];
  if (!qword_1EFCA7C00[0])
  {
    v1 = sub_1D2D9C7EC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CB0E60], v1);
    atomic_store(result, qword_1EFCA7C00);
  }
  return result;
}

uint64_t sub_1D2D2557C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for LIDOrLanguagePicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 2, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = v3 + *(int *)(v1 + 24);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v3 + *(int *)(v1 + 36)), *(_BYTE *)(v3 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2D256A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LIDOrLanguagePicker() - 8) + 80);
  return sub_1D2D2290C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1D2D256EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for LanguageOption() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for LIDOrLanguagePicker();
  v5 = (v2 + v3 + *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  swift_unknownObjectRelease();
  v6 = v0 + v2;
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 2, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v0 + v5;
  swift_release();
  swift_release();
  v11 = v0 + v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  if (!v9(v11, 2, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_bridgeObjectRelease();
  v12 = v10 + *(int *)(v4 + 24);
  if (!v9(v12, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v7);
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v10 + *(int *)(v4 + 36)), *(_BYTE *)(v10 + *(int *)(v4 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2D25874@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for LanguageOption();
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  type metadata accessor for LIDOrLanguagePicker();
  return sub_1D2D22C08(v1 + v4, a1);
}

uint64_t sub_1D2D258E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;

  v1 = type metadata accessor for LIDOrLanguagePicker();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageOption() - 8) + 80);
  v6 = v3 + v4 + v5;
  swift_unknownObjectRelease();
  v7 = v0 + v3;
  swift_release();
  swift_release();
  v8 = v0 + v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C58) + 32);
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 2, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = v6 & ~v5;
  swift_bridgeObjectRelease();
  v13 = v7 + *(int *)(v1 + 24);
  if (!v11(v13, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v13, v9);
  swift_bridgeObjectRelease();
  sub_1D2CF2B30(*(_QWORD *)(v7 + *(int *)(v1 + 36)), *(_BYTE *)(v7 + *(int *)(v1 + 36) + 8));
  if (!v11(v0 + v12, 2, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  return swift_deallocObject();
}

void sub_1D2D25A60(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for LIDOrLanguagePicker() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LanguageOption() - 8) + 80);
  sub_1D2D22CB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1D2D25AD4()
{
  return swift_deallocObject();
}

uint64_t Locale.ltLanguageCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1D2D9C7D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C7E0();
  sub_1D2D9C7A4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_1D2D9C72C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D2D25C14((uint64_t)v6);
    return 0;
  }
  else
  {
    v9 = sub_1D2D9C720();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1D2D25C14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void Locale.ltDefaultTarget(for:availableLocales:map:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = (void *)sub_1D2D9C744();
  v5 = (void *)sub_1D2D9C744();
  sub_1D2D9C7EC();
  v6 = (void *)sub_1D2D9DE48();
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7988);
    a3 = (void *)sub_1D2D9DC20();
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_lt_defaultTargetForSource_systemLocale_availableLocales_targetMap_, v4, v5, v6, a3);

  sub_1D2D9C75C();
}

uint64_t static Locale.ensureSupported(locale:availableLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v4 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7210);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D2DA0510;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v8 + v7, a1, v5);
  v9 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1D2D9DE48();
  v11 = objc_msgSend(v4, sel_lt_bestMatchForPreferredLocales_fromSupportedLocales_, v9, v10);

  if (v11)
  {
    sub_1D2D9C75C();

    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v12, 1, v5);
}

void static Locale.fallback(for:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D2D9C744();
  v2 = objc_msgSend(v0, sel_lt_fallbackForLocale_, v1);

  sub_1D2D9C75C();
}

uint64_t sub_1D2D25EFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1D2D9DDF4();
  else
    return 0;
}

uint64_t Locale.ltIdentifier.getter()
{
  uint64_t v0;

  sub_1D2D9C714();
  sub_1D2CD1430();
  v0 = sub_1D2D9E1E4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Locale.sqDisplayName(context:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v69 = a1;
  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v65 - v9;
  v11 = sub_1D2D9C7D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v2;
  sub_1D2D9C7E0();
  sub_1D2D9C7A4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v18 = sub_1D2D9C72C();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1D2CCADA4((uint64_t)v17, &qword_1ED587108);
    return 0;
  }
  v21 = sub_1D2D9C720();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v65[1] = v21;
  v24 = sub_1D2D9C738();
  v20 = v24;
  v68 = v23;
  if (v25)
  {
    v71 = v24;
    v72 = v25;
    sub_1D2CD1430();
    v20 = sub_1D2D9E1CC();
    v67 = v26;
    swift_bridgeObjectRelease();
  }
  else
  {
    v67 = 0;
  }
  v65[2] = Locale.sqDisplaySubname(context:in:)(v69, a2);
  v66 = v27;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v28 = sub_1D2D9C714();
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v10, v4);
  if (v28 == sub_1D2D9C714() && v30 == v32)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v70, v4);
  }
  else
  {
    v33 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v70, v4);
    if ((v33 & 1) == 0)
    {
      v31(v7, v4);
      goto LABEL_13;
    }
  }
  v34 = sub_1D2D9C744();
  v35 = objc_msgSend((id)v34, sel_languageIdentifier);

  sub_1D2D9DCD4();
  LOBYTE(v34) = sub_1D2D9DDE8();
  swift_bridgeObjectRelease();
  v31(v7, v4);
  if ((v34 & 1) != 0)
  {
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v20 = sub_1D2D9C5E8();
    v39 = v38;

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_13:
  v39 = v67;
LABEL_14:
  switch(v69)
  {
    case 0:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      if (!v66)
        return v20;
      if (v39)
        goto LABEL_41;
      goto LABEL_35;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    case 2:
      v45 = sub_1D2D9C744();
      v46 = objc_msgSend((id)v45, sel_languageIdentifier);

      sub_1D2D9DCD4();
      LOBYTE(v45) = sub_1D2D9DDE8();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0)
      {
        v56 = objc_msgSend((id)objc_opt_self(), sel_sharedIntlUtility);
        v57 = (void *)sub_1D2D9DCB0();
        swift_bridgeObjectRelease();
        sub_1D2D9C714();
        v58 = (void *)sub_1D2D9DCB0();
        swift_bridgeObjectRelease();
        v59 = objc_msgSend(v56, sel_displayNameForLanguage_context_displayLanguage_, v57, 2, v58);

        v20 = sub_1D2D9DCD4();
        v61 = v60;

        swift_bridgeObjectRelease();
        v39 = v61;
        v47 = v66;
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      if ((sub_1D2D277E0(2) & 1) != 0)
      {
        v47 = v66;
        if (!v39)
          goto LABEL_39;
        v71 = v20;
        v72 = v39;
        sub_1D2CD1430();
        v48 = sub_1D2D9E1CC();
      }
      else
      {
        v47 = v66;
        if (!v39)
          goto LABEL_39;
        v48 = sub_1D2D9DD34();
      }
      v20 = v48;
      v63 = v49;
      swift_bridgeObjectRelease();
      v39 = v63;
LABEL_39:
      if (!v47)
        return v20;
      if (v39)
        goto LABEL_41;
      goto LABEL_35;
    case 3:
      v40 = sub_1D2D9C744();
      v41 = objc_msgSend((id)v40, sel_languageIdentifier);

      sub_1D2D9DCD4();
      LOBYTE(v40) = sub_1D2D9DDE8();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
        v50 = objc_msgSend((id)objc_opt_self(), sel_sharedIntlUtility);
        v51 = (void *)sub_1D2D9DCB0();
        swift_bridgeObjectRelease();
        sub_1D2D9C714();
        v52 = (void *)sub_1D2D9DCB0();
        swift_bridgeObjectRelease();
        v53 = objc_msgSend(v50, sel_displayNameForLanguage_context_displayLanguage_, v51, 1, v52);

        v20 = sub_1D2D9DCD4();
        v55 = v54;

        swift_bridgeObjectRelease();
        v39 = v55;
        v42 = v66;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      if ((sub_1D2D277E0(1) & 1) != 0)
      {
        v42 = v66;
        if (!v39)
          goto LABEL_33;
        v71 = v20;
        v72 = v39;
        sub_1D2CD1430();
        v43 = sub_1D2D9E1CC();
      }
      else
      {
        v42 = v66;
        if (!v39)
          goto LABEL_33;
        v43 = sub_1D2D9DD34();
      }
      v20 = v43;
      v62 = v44;
      swift_bridgeObjectRelease();
      v39 = v62;
LABEL_33:
      if (v42)
      {
        if (v39)
        {
LABEL_41:
          v71 = v20;
          v72 = v39;
          swift_bridgeObjectRetain();
          sub_1D2D9DDA0();
          sub_1D2D9DDA0();
          sub_1D2D9DDA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = v71;
        }
        else
        {
LABEL_35:
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      v71 = v69;
      sub_1D2D9E550();
      __break(1u);
      JUMPOUT(0x1D2D267E4);
  }
  return v20;
}

uint64_t Locale.sqDisplaySubname(context:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9C7D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586258);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C7E0();
  sub_1D2D9C7BC();
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v12, v6);
  v17 = sub_1D2D9C774();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_1D2CCADA4((uint64_t)v15, &qword_1ED586258);
  }
  else
  {
    v42 = a1;
    v41 = sub_1D2D9C720();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    sub_1D2D9C7E0();
    sub_1D2D9C7A4();
    v16(v9, v6);
    v19 = sub_1D2D9C72C();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v19) == 1)
    {
      sub_1D2CCADA4((uint64_t)v5, &qword_1ED587108);
    }
    else
    {
      v23 = sub_1D2D9C720();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
      v26 = sub_1D2D27DA4((uint64_t)&unk_1E9447EE0);
      swift_arrayDestroy();
      v27 = sub_1D2D26E94(v23, v25, v26);
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        v28 = (void *)sub_1D2D9C744();
        v29 = (void *)sub_1D2D9DCB0();
        v30 = objc_msgSend(v28, sel_localizedStringForRegion_context_short_, v29, 3, 1);

        v31 = v42;
        if (v30)
        {
          v21 = sub_1D2D9DCD4();

        }
        else
        {
          v21 = 0;
        }
        if (Locale.isTraditionalChinese()())
        {
          swift_bridgeObjectRelease();
          switch(v31)
          {
            case 0:
            case 1:
            case 3:
            case 4:
              type metadata accessor for _BundleObject();
              ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
              v33 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
              v21 = sub_1D2D9C5E8();

              break;
            case 2:
            case 5:
LABEL_18:
              swift_bridgeObjectRelease();
              goto LABEL_5;
            default:
LABEL_27:
              v44 = v31;
              sub_1D2D9E550();
              __break(1u);
              JUMPOUT(0x1D2D26E64);
          }
        }
        if (Locale.isSimplifiedChinese()())
        {
          swift_bridgeObjectRelease();
          switch(v31)
          {
            case 0:
            case 1:
            case 3:
            case 4:
              type metadata accessor for _BundleObject();
              v34 = swift_getObjCClassFromMetadata();
              v35 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v34);
              v21 = sub_1D2D9C5E8();

              break;
            case 2:
            case 5:
              goto LABEL_18;
            default:
              goto LABEL_27;
          }
        }
      }
      else
      {
        v21 = 0;
        v31 = v42;
      }
      v36 = sub_1D2D27DA4((uint64_t)&unk_1E9447F20);
      swift_arrayDestroy();
      if (v31)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v21;
      }
      v37 = sub_1D2D26E94(v23, v25, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
      swift_bridgeObjectRelease();
      v38 = (void *)sub_1D2D9C744();
      v39 = (void *)sub_1D2D9DCB0();
      v40 = objc_msgSend(v38, sel_localizedStringForRegion_context_short_, v39, 3, 0);

      if (v40)
      {
        v21 = sub_1D2D9DCD4();
        swift_bridgeObjectRelease();

        return v21;
      }
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1D2D26E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D2D9E5C8();
    sub_1D2D9DD70();
    v6 = sub_1D2D9E5F8();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D2D9E52C() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D2D9E52C() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D2D26FC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  BOOL v15;
  uint64_t v17;
  char v18;
  uint64_t v19[2];
  _BYTE v20[16];
  double v21;
  char v22;
  uint64_t v23;
  char v24;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1D2D9E5C8();
    v4 = *a1;
    v5 = a1[1];
    swift_bridgeObjectRetain();
    sub_1D2D9DD70();
    swift_bridgeObjectRelease();
    v6 = sub_1D2D9E5F8();
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v8 = v6 & ~v7;
    v9 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = ~v7;
      v11 = *(_QWORD *)(a2 + 48);
      sub_1D2CF4020(a1 + 2, (uint64_t)v19);
      do
      {
        v12 = v11 + 48 * v8;
        v13 = *(double *)(v12 + 16);
        v14 = *(_BYTE *)(v12 + 24);
        v15 = *(_QWORD *)v12 == v4 && *(_QWORD *)(v12 + 8) == v5;
        if (v15 || (sub_1D2D9E52C() & 1) != 0)
        {
          if ((v14 & 1) != 0)
          {
            if (v13 == 0.0)
            {
              sub_1D2CF4020(v19, (uint64_t)&v23);
              if (v24 == 1 && !v23)
                return 1;
            }
            else
            {
              sub_1D2CF4020(v19, (uint64_t)&v17);
              if (v18 == 1 && v17)
                return 1;
            }
          }
          else
          {
            sub_1D2CF4020(v19, (uint64_t)v20);
            if ((v20[8] & 1) == 0)
              return 1;
            sub_1D2CF4020(v19, (uint64_t)&v21);
            if ((v22 & 1) == 0 && v21 == v13)
              return 1;
          }
        }
        v8 = (v8 + 1) & v10;
      }
      while (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1D2D2716C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1D2D9C6FC();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]),
        v6 = sub_1D2D9DC44(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v12 = sub_1D2D9DC8C();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

Swift::String_optional __swiftcall Locale.localizedString(forRegion:context:short:)(Swift::String forRegion, NSFormattingContext context, Swift::Bool a3)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional result;

  v5 = (void *)sub_1D2D9C744();
  v6 = (void *)sub_1D2D9DCB0();
  v7 = objc_msgSend(v5, sel_localizedStringForRegion_context_short_, v6, context, a3);

  if (v7)
  {
    v8 = sub_1D2D9DCD4();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = v8;
  v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

uint64_t Locale.languageIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_1D2D9C744();
  v1 = objc_msgSend(v0, sel_languageIdentifier);

  v2 = sub_1D2D9DCD4();
  return v2;
}

unint64_t DisplayNameContext.init(rawValue:)(unint64_t a1)
{
  return sub_1D2D27F44(a1);
}

uint64_t sub_1D2D27418()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D2745C()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2D27484()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

unint64_t sub_1D2D274C4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1D2D27F44(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

Swift::String __swiftcall Locale.ltLocalizedAppString(_:table:bundle:)(Swift::String _, Swift::String table, NSBundle bundle)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  Swift::String result;

  v4 = -[objc_class localizations](bundle.super.isa, sel_localizations);
  if (!v4)
  {
    sub_1D2D9DE60();
    v4 = (id)sub_1D2D9DE48();
    swift_bridgeObjectRelease();
  }
  v5 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D2DA0510;
  *(_QWORD *)(v6 + 32) = sub_1D2D9C714();
  *(_QWORD *)(v6 + 40) = v7;
  v8 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v5, sel_preferredLocalizationsFromArray_forPreferences_, v4, v8);

  v10 = sub_1D2D9DE60();
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = (void *)sub_1D2D9DCB0();
    v12 = (void *)sub_1D2D9DCB0();
    v13 = (void *)sub_1D2D9DCB0();
    if (*(_QWORD *)(v10 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14 = (void *)sub_1D2D9DCB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v14 = 0;
    }
    v15 = -[objc_class localizedStringForKey:value:table:localization:](bundle.super.isa, sel_localizedStringForKey_value_table_localization_, v11, v12, v13, v14);

  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1D2D9DCB0();
    v13 = (void *)sub_1D2D9DCB0();
    v14 = (void *)sub_1D2D9DCB0();
    v15 = -[objc_class localizedStringForKey:value:table:](bundle.super.isa, sel_localizedStringForKey_value_table_, v12, v13, v14);
  }

  v16 = sub_1D2D9DCD4();
  v18 = v17;

  v19 = v16;
  v20 = v18;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

uint64_t Locale.isChinese.getter()
{
  uint64_t v0;
  id v1;

  v0 = sub_1D2D9C744();
  v1 = objc_msgSend((id)v0, sel_languageIdentifier);

  sub_1D2D9DCD4();
  LOBYTE(v0) = sub_1D2D9DDE8();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1D2D277E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;

  v2 = sub_1D2D9C7D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedIntlUtility);
  sub_1D2D9C7E0();
  sub_1D2D9C7A4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = sub_1D2D9C72C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1D2CCADA4((uint64_t)v8, &qword_1ED587108);
  }
  else
  {
    sub_1D2D9C720();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v12 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  sub_1D2D9C714();
  v13 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v9, sel_displayNameForLanguage_context_displayLanguage_, v12, a1, v13);

  v15 = sub_1D2D9DCD4();
  v17 = v16;

  sub_1D2D25EFC(v15, v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v20 = sub_1D2D9DC5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 1;
  }
  return v20 & 1;
}

Swift::Bool __swiftcall Locale.supportsVerticalText()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t v16;

  v0 = sub_1D2D9C7D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587108);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C7E0();
  sub_1D2D9C7A4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_1D2D9C72C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED587108);
    v9 = 0;
  }
  else
  {
    v10 = sub_1D2D9C720();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v13 = v10 == 24938 && v12 == 0xE200000000000000;
    if (v13 || (sub_1D2D9E52C() & 1) != 0 || (v10 == 26746 ? (v14 = v12 == 0xE200000000000000) : (v14 = 0), v14))
    {
      swift_bridgeObjectRelease();
      v9 = 1;
    }
    else
    {
      v9 = sub_1D2D9E52C();
      swift_bridgeObjectRelease();
    }
  }
  return v9 & 1;
}

uint64_t NSLocale.sqDisplayName(context:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1D2D27BCC(a1, a2, Locale.sqDisplayName(context:in:));
}

id sub_1D2D27BB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D27C8C(a1, a2, a3, a4, (void (*)(uint64_t, char *))Locale.sqDisplayName(context:in:));
}

uint64_t NSLocale.sqDisplaySubname(context:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1D2D27BCC(a1, a2, Locale.sqDisplaySubname(context:in:));
}

uint64_t sub_1D2D27BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C75C();
  v10 = a3(a1, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

id sub_1D2D27C80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D27C8C(a1, a2, a3, a4, (void (*)(uint64_t, char *))Locale.sqDisplaySubname(context:in:));
}

id sub_1D2D27C8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  uint64_t v21;

  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - v13;
  sub_1D2D9C75C();
  sub_1D2D9C75C();
  v15 = a1;
  a5(a3, v14);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);

  v18(v14, v8);
  if (!v17)
    return 0;
  v19 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1D2D27DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5878D8);
    v3 = sub_1D2D9E2C8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1D2D9E5C8();
      swift_bridgeObjectRetain();
      sub_1D2D9DD70();
      result = sub_1D2D9E5F8();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1D2D9E52C(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1D2D9E52C();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1D2D27F44(unint64_t result)
{
  if (result > 5)
    return 0;
  return result;
}

ValueMetadata *type metadata accessor for DisplayNameContext()
{
  return &type metadata for DisplayNameContext;
}

uint64_t sub_1D2D27F68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1D2D9D0E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7990);
    v10 = sub_1D2D9E2C8();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1D2CC66E4(&qword_1EFCA7998, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB090], MEMORY[0x1E0CDB0A0]);
      v14 = sub_1D2D9DC44();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1D2CC66E4(&qword_1EFCA79A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB090], MEMORY[0x1E0CDB0A8]);
          v20 = sub_1D2D9DC8C();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

Swift::Bool __swiftcall Locale.isRTL()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::Bool v4;
  uint64_t v6;

  v0 = sub_1D2D9C7D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C7E0();
  v4 = sub_1D2D9C7B0() == 2;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

BOOL Locale.Language.isRTL.getter()
{
  return sub_1D2D9C7B0() == 2;
}

Swift::Bool __swiftcall Locale.isTraditionalChinese()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = sub_1D2D9C7D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586260);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v37 = v0;
  if (sub_1D2D9C714() == 0x57545F687ALL && v15 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v37;
    v16(v14, v37, v8);
  }
  else
  {
    v36 = v11;
    v18 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v37;
    v16(v14, v37, v8);
    if ((v18 & 1) == 0)
    {
      sub_1D2D9C7E0();
      sub_1D2D9C7C8();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v22 = sub_1D2D9C78C();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22) == 1)
      {
        sub_1D2D28630((uint64_t)v7);
        v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        v11 = v36;
        v16(v36, v37, v8);
      }
      else
      {
        v24 = sub_1D2D9C720();
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
        v40 = v24;
        v41 = v26;
        sub_1D2CD1430();
        v27 = sub_1D2D9E1CC();
        v29 = v28;
        swift_bridgeObjectRelease();
        if (v27 == 1414414664 && v29 == 0xE400000000000000)
        {
          v19 = *(void (**)(char *, uint64_t))(v9 + 8);
          v19(v14, v8);
          swift_bridgeObjectRelease();
          v11 = v36;
          v17 = v37;
          goto LABEL_7;
        }
        v30 = sub_1D2D9E52C();
        v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        swift_bridgeObjectRelease();
        v11 = v36;
        v16(v36, v37, v8);
        if ((v30 & 1) != 0)
          goto LABEL_8;
      }
      v31 = (void *)sub_1D2D9C744();
      v32 = objc_msgSend(v31, sel_languageIdentifier);

      v33 = sub_1D2D9DCD4();
      v35 = v34;

      v40 = v33;
      v41 = v35;
      v38 = 0x2D746E61482DLL;
      v39 = 0xE600000000000000;
      sub_1D2CD1430();
      v20 = sub_1D2D9E208();
      swift_bridgeObjectRelease();
      v19(v11, v8);
      return v20 & 1;
    }
    v11 = v36;
  }
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
LABEL_7:
  v16(v11, v17, v8);
LABEL_8:
  v19(v11, v8);
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_1D2D28630(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586260);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Bool __swiftcall Locale.isSimplifiedChinese()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = sub_1D2D9C7D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586260);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v37 = v0;
  if (sub_1D2D9C714() == 0x4E435F687ALL && v15 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v37;
    v16(v14, v37, v8);
  }
  else
  {
    v36 = v11;
    v18 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v37;
    v16(v14, v37, v8);
    if ((v18 & 1) == 0)
    {
      sub_1D2D9C7E0();
      sub_1D2D9C7C8();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v22 = sub_1D2D9C78C();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22) == 1)
      {
        sub_1D2D28630((uint64_t)v7);
        v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        v11 = v36;
        v16(v36, v37, v8);
      }
      else
      {
        v24 = sub_1D2D9C720();
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
        v40 = v24;
        v41 = v26;
        sub_1D2CD1430();
        v27 = sub_1D2D9E1CC();
        v29 = v28;
        swift_bridgeObjectRelease();
        if (v27 == 1397637448 && v29 == 0xE400000000000000)
        {
          v19 = *(void (**)(char *, uint64_t))(v9 + 8);
          v19(v14, v8);
          swift_bridgeObjectRelease();
          v11 = v36;
          v17 = v37;
          goto LABEL_7;
        }
        v30 = sub_1D2D9E52C();
        v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        swift_bridgeObjectRelease();
        v11 = v36;
        v16(v36, v37, v8);
        if ((v30 & 1) != 0)
          goto LABEL_8;
      }
      v31 = (void *)sub_1D2D9C744();
      v32 = objc_msgSend(v31, sel_languageIdentifier);

      v33 = sub_1D2D9DCD4();
      v35 = v34;

      v40 = v33;
      v41 = v35;
      v38 = 0x2D736E61482DLL;
      v39 = 0xE600000000000000;
      sub_1D2CD1430();
      v20 = sub_1D2D9E208();
      swift_bridgeObjectRelease();
      v19(v11, v8);
      return v20 & 1;
    }
    v11 = v36;
  }
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
LABEL_7:
  v16(v11, v17, v8);
LABEL_8:
  v19(v11, v8);
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_1D2D28A2C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D2D29CEC();
  v2 = sub_1D2D9DE60();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static LocaleService.lastTargetLocale.getter()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  v1 = v0;
  v2 = (void *)sub_1D2D9DCB0();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (v3)
  {
    sub_1D2D9DCD4();

  }
  else
  {

  }
  return sub_1D2D9C708();
}

void static LocaleService.localePairs(forSpeech:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  if ((a1 & 1) != 0)
    v5 = 1;
  else
    v5 = 5;
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v9[4] = sub_1D2D29B94;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1D2D28A2C;
  v9[3] = &block_descriptor_3;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, v5, 1, v8);
  _Block_release(v8);
}

uint64_t sub_1D2D28C28(unint64_t a1, void (*a2)(uint64_t, _QWORD, __n128), uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, __n128);
  uint64_t v22;
  uint64_t v23;

  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7220);
  v6 = *(_QWORD *)(v22 - 8);
  v7 = MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = MEMORY[0x1E0DEE9D8];
  if (!v10)
  {
LABEL_13:
    a2(v11, 0, v7);
    return swift_bridgeObjectRelease();
  }
  v23 = MEMORY[0x1E0DEE9D8];
  result = sub_1D2D04014(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v20 = a3;
    v21 = a2;
    v13 = 0;
    v11 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1D8247E58](v13, a1);
      else
        v14 = *(id *)(a1 + 8 * v13 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_sourceLocale, v20, v21, v22);
      sub_1D2D9C75C();

      v17 = objc_msgSend(v15, sel_targetLocale);
      sub_1D2D9C75C();

      v23 = v11;
      v19 = *(_QWORD *)(v11 + 16);
      v18 = *(_QWORD *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D2D04014(v18 > 1, v19 + 1, 1);
        v11 = v23;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v19 + 1;
      sub_1D2D29D28((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19);
    }
    while (v10 != v13);
    a2 = v21;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t static LocaleService.sanitizeLocale(_:supportedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  static Locale.ensureSupported(locale:availableLocales:)(a1, (uint64_t)&v18 - v12);
  sub_1D2CCAD60((uint64_t)v13, (uint64_t)v10, &qword_1ED587850);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_1D2D9C744();
    v16 = objc_msgSend(v14, sel_lt_fallbackForLocale_, v15);

    sub_1D2D9C75C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1D2CCADA4((uint64_t)v13, &qword_1ED587850);
    return sub_1D2CCADA4((uint64_t)v10, &qword_1ED587850);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1D2CCADA4((uint64_t)v13, &qword_1ED587850);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v10, v4);
  }
}

uint64_t static LocaleService.supportedTargetLocale(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v12 = (_QWORD *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v12 = a2;
  v12[1] = a3;
  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1D2D29BB8;
  *(_QWORD *)(v14 + 24) = v11;
  aBlock[4] = sub_1D2D29D88;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D28A2C;
  aBlock[3] = &block_descriptor_10;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, 5, 1, v15);
  _Block_release(v15);
  return swift_release();
}

uint64_t sub_1D2D291A0(_QWORD *a1, char a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(_QWORD);
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v56 = a3;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7220);
  v9 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)&v52 - v12;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79B0);
  MEMORY[0x1E0C80A78](v57);
  v58 = (uint64_t *)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1D2D9C7EC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v52 - v20;
  if ((a2 & 1) != 0)
  {
    v37 = a1;
    if (qword_1ED5878C8 != -1)
      swift_once();
    v38 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED588700);
    v39 = a1;
    v40 = sub_1D2D9C8DC();
    v41 = sub_1D2D9E034();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = a4;
      v44 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v42 = 138412290;
      v45 = sub_1D2D9C5F4();
      v65 = v45;
      sub_1D2D9E1B4();
      *v44 = v45;
      sub_1D2D29CE0(a1, 1);
      _os_log_impl(&dword_1D2CC0000, v40, v41, "Failed to obtain supported target locale: %@", v42, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      v46 = v44;
      a4 = v43;
      MEMORY[0x1D8248974](v46, -1, -1);
      MEMORY[0x1D8248974](v42, -1, -1);
    }
    else
    {
      sub_1D2D29CE0(a1, 1);
    }

    v50 = (uint64_t)v58;
    *v58 = a1;
    swift_storeEnumTagMultiPayload();
    v51 = a1;
    a4(v50);
    sub_1D2D29CE0(a1, 1);
    return sub_1D2CCADA4(v50, &qword_1EFCA79B0);
  }
  else
  {
    v55 = a5;
    v22 = a1[2];
    v64 = v19;
    if (v22)
    {
      v53 = (char *)&v52 - v20;
      v54 = a4;
      v65 = MEMORY[0x1E0DEE9D8];
      sub_1D2D03FA0(0, v22, 0);
      v23 = (uint64_t)a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v59 = *(_QWORD *)(v9 + 72);
      v60 = v17;
      v24 = (uint64_t)v61;
      do
      {
        sub_1D2CCAD60(v23, v24, &qword_1EFCA7220);
        v25 = v62;
        v26 = *(int *)(v63 + 48);
        v27 = &v62[v26];
        v28 = v24 + v26;
        v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
        v29(v62, v24, v64);
        v29(v27, v28, v64);
        v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v30(v17, v27, v64);
        v31 = v25;
        v32 = v64;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v64);
        sub_1D2CCADA4(v24, &qword_1EFCA7220);
        v33 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D03FA0(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v65;
        }
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_1D2D03FA0(v34 > 1, v35 + 1, 1);
          v33 = v65;
        }
        *(_QWORD *)(v33 + 16) = v35 + 1;
        v36 = v33
            + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
            + *(_QWORD *)(v15 + 72) * v35;
        v17 = v60;
        v30((char *)v36, v60, v32);
        v65 = v33;
        v23 += v59;
        --v22;
      }
      while (v22);
      v21 = v53;
      a4 = v54;
    }
    static LocaleService.sanitizeLocale(_:supportedLocales:)(v56, (uint64_t)v21);
    swift_bridgeObjectRelease();
    v47 = (uint64_t)v58;
    v48 = v64;
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v58, v21, v64);
    swift_storeEnumTagMultiPayload();
    a4(v47);
    sub_1D2CCADA4(v47, &qword_1EFCA79B0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v21, v48);
  }
}

uint64_t static LocaleService.supportedTargetLocaleSync(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(uint64_t);
  void *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(unint64_t, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD aBlock[6];

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9DB60();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v33 - v8;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocBox();
  v35 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
  v15 = dispatch_group_create();
  dispatch_group_enter(v15);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  v34 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v34(v19 + v17, v12, v9);
  v20 = (void (**)(uint64_t))(v19 + v18);
  *v20 = sub_1D2D29BE8;
  v20[1] = (void (*)(uint64_t))v16;
  v21 = (void *)objc_opt_self();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1D2D29BB8;
  *(_QWORD *)(v22 + 24) = v19;
  aBlock[4] = sub_1D2D29D88;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D28A2C;
  aBlock[3] = &block_descriptor_24;
  v23 = _Block_copy(aBlock);
  v24 = v15;
  v41 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, 5, 1, v23);
  _Block_release(v23);
  swift_release();
  swift_release();
  v25 = v36;
  sub_1D2D9DB54();
  v26 = v37;
  MEMORY[0x1D82476C0](v25, 1.0);
  v27 = *(void (**)(char *, uint64_t))(v38 + 8);
  v28 = v25;
  v29 = v39;
  v27(v28, v39);
  sub_1D2D9E064();
  v27(v26, v29);
  v30 = (uint64_t)v40;
  v31 = v35;
  swift_beginAccess();
  sub_1D2CCAD60(v31, v30, &qword_1ED587850);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v30, 1, v9) == 1)
  {
    sub_1D2D9C708();

    sub_1D2CCADA4(v30, &qword_1ED587850);
  }
  else
  {

    v34(v42, (char *)v30, v9);
  }
  return swift_release();
}

void sub_1D2D29A14(uint64_t a1, NSObject *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79B0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (id *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = swift_projectBox();
  sub_1D2CCAD60(a1, (uint64_t)v9, &qword_1EFCA79B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v11 = sub_1D2D9C7EC();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v6, v9, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    swift_beginAccess();
    sub_1D2CE46D0((uint64_t)v6, v10);
  }
  dispatch_group_leave(a2);
}

uint64_t sub_1D2D29B70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D29B94(unint64_t a1)
{
  uint64_t v1;

  return sub_1D2D28C28(a1, *(void (**)(uint64_t, _QWORD, __n128))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1D2D29BBC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1D2D29BE8(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D29A14(a1, *(NSObject **)(v1 + 16));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D2D9C7EC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D29C6C(_QWORD *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_1D2D9C7EC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1D2D291A0(a1, v4, v2 + v6, *(void (**)(_QWORD))v7, *(_QWORD *)(v7 + 8));
}

ValueMetadata *type metadata accessor for LocaleService()
{
  return &type metadata for LocaleService;
}

void sub_1D2D29CE0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

unint64_t sub_1D2D29CEC()
{
  unint64_t result;

  result = qword_1ED586BF8;
  if (!qword_1ED586BF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED586BF8);
  }
  return result;
}

uint64_t sub_1D2D29D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D29D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1D2D04030(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast();
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D04030(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1D2D04030(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_1D2CD1FA4(&v15, (_OWORD *)(v7 + 32 * v12 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t Sequence<>.sortedLocalized(for:)()
{
  return sub_1D2D9DE18();
}

BOOL sub_1D2D29F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Locale.sqDisplayName(context:in:)(0, a3);
  Locale.sqDisplaySubname(context:in:)(0, a3);
  if (v4)
  {
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
  }
  Locale.sqDisplayName(context:in:)(0, a3);
  Locale.sqDisplaySubname(context:in:)(0, a3);
  if (v5)
  {
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
  }
  sub_1D2CD1430();
  v6 = sub_1D2D9E1F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 == -1;
}

BOOL sub_1D2D2A0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D2D29F40(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t NSArray.sortedLocalized(for:)()
{
  uint64_t result;

  sub_1D2D9C7EC();
  sub_1D2D9DE54();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id sub_1D2D2A1A0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v9;

  v2 = sub_1D2D9C7EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C75C();
  v6 = a1;
  NSArray.sortedLocalized(for:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1D2D2A264(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;

  sub_1D2D9C7EC();
  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1D2D2B9C8(v5);
  sub_1D2D2A2FC(a1, a2);
  *v2 = v5;
}

void sub_1D2D2A2FC(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  void (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char v128;
  char v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  unint64_t v139;
  void (*v140)(char *, uint64_t);
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t (*v165)(char *, char *);
  uint64_t v166;
  _QWORD *v167;

  v165 = a1;
  v166 = a2;
  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v157 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v160 = (char *)&v142 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v142 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v142 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v142 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v142 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v142 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v142 - v24;
  v164 = v2;
  v26 = v2[1];
  v27 = sub_1D2D9E4FC();
  if (v27 >= v26)
  {
    if (v26 < 0)
      goto LABEL_146;
    if (v26)
      sub_1D2D2AE90(0, v26, 1, v165, v166);
  }
  else
  {
    v146 = v27;
    if (v26 >= 0)
      v28 = v26;
    else
      v28 = v26 + 1;
    if (v26 > -2)
    {
      v167 = (_QWORD *)v4;
      v147 = v25;
      if (v26 < 2)
      {
        v31 = (_QWORD *)v4;
        v33 = MEMORY[0x1E0DEE9D8];
        v161 = MEMORY[0x1E0DEE9D8]
             + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        if (v26 != 1)
        {
          v66 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          v35 = (char *)MEMORY[0x1E0DEE9D8];
          v36 = v162;
          goto LABEL_110;
        }
        v145 = v22;
        v150 = v19;
        v151 = v16;
        v155 = v13;
        v156 = v10;
        v148 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v145 = v22;
        v150 = v19;
        v151 = v16;
        v155 = v13;
        v156 = v10;
        v29 = v28 >> 1;
        v30 = sub_1D2D9DE90();
        v31 = (_QWORD *)v4;
        *(_QWORD *)(v30 + 16) = v29;
        v32 = *(unsigned __int8 *)(v4 + 80);
        v148 = v30;
        v161 = v30 + ((v32 + 32) & ~v32);
      }
      v34 = 0;
      v35 = (char *)MEMORY[0x1E0DEE9D8];
      v163 = v3;
      v36 = v162;
      while (1)
      {
        v37 = v34;
        if (v34 + 1 >= v26)
        {
          v47 = v34 + 1;
        }
        else
        {
          v158 = v26;
          v38 = *v164;
          v39 = v31[9];
          v154 = v34 + 1;
          v40 = (void (*)(char *, uint64_t, uint64_t))v31[2];
          v41 = v34;
          v42 = v147;
          v43 = v31;
          v40(v147, v38 + v39 * (v34 + 1), v3);
          v152 = v38;
          v159 = v39;
          v44 = v38 + v39 * v41;
          v45 = v145;
          v40(v145, v44, v3);
          LODWORD(v162) = v165(v42, v45);
          if (v36)
          {
            v141 = (void (*)(char *, uint64_t))v43[1];
            v141(v45, v3);
            v141(v42, v3);
            goto LABEL_124;
          }
          v149 = v35;
          v46 = (void (*)(char *, uint64_t))v43[1];
          v46(v45, v3);
          v46(v42, v3);
          v47 = v41 + 2;
          v26 = v158;
          v37 = v41;
          if (v41 + 2 < v158)
          {
            v144 = v41;
            v48 = v152;
            v153 = v159 * v47;
            v154 *= v159;
            while (1)
            {
              v49 = v47;
              v50 = v150;
              v40(v150, v48 + v153, v3);
              v51 = v151;
              v40(v151, v48 + v154, v3);
              v52 = v3;
              v53 = v165(v50, v51);
              v46(v51, v52);
              v46(v50, v52);
              if (((v162 ^ v53) & 1) != 0)
                break;
              v47 = v49 + 1;
              v26 = v158;
              v48 += v159;
              v3 = v163;
              if (v158 == v49 + 1)
              {
                v47 = v158;
                v37 = v144;
                goto LABEL_23;
              }
            }
            v3 = v163;
            v47 = v49;
            v37 = v144;
            v26 = v158;
          }
LABEL_23:
          v35 = v149;
          v31 = v167;
          if ((v162 & 1) != 0)
          {
            if (v47 < v37)
              goto LABEL_150;
            if (v37 < v47)
            {
              v54 = 0;
              v55 = v159 * (v47 - 1);
              v56 = v47 * v159;
              v57 = v37;
              v144 = v37;
              v58 = v37 * v159;
              do
              {
                if (v57 != v47 + v54 - 1)
                {
                  v162 = v36;
                  v60 = v152;
                  if (!v152)
                    goto LABEL_153;
                  v61 = v47;
                  v62 = v152 + v58;
                  v154 = v152 + v55;
                  v153 = v31[4];
                  ((void (*)(char *, uint64_t, uint64_t))v153)(v157, v152 + v58, v163);
                  if (v58 < v55 || v62 >= v60 + v56)
                  {
                    v59 = v154;
                    v3 = v163;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v3 = v163;
                    v59 = v154;
                    if (v58 != v55)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  ((void (*)(uint64_t, char *, uint64_t))v153)(v59, v157, v3);
                  v31 = v167;
                  v36 = v162;
                  v47 = v61;
                }
                ++v57;
                --v54;
                v55 -= v159;
                v56 -= v159;
                v58 += v159;
              }
              while (v57 < v47 + v54);
              v35 = v149;
              v37 = v144;
              v26 = v158;
            }
          }
        }
        if (v47 >= v26)
          goto LABEL_46;
        if (__OFSUB__(v47, v37))
          goto LABEL_147;
        if (v47 - v37 >= v146)
        {
LABEL_46:
          if (v47 < v37)
            goto LABEL_145;
          goto LABEL_47;
        }
        if (__OFADD__(v37, v146))
          goto LABEL_148;
        v63 = v37 + v146 >= v26 ? v26 : v37 + v146;
        if (v63 < v37)
          break;
        if (v47 == v63)
          goto LABEL_46;
        v162 = v36;
        v149 = v35;
        v116 = (char *)v31[2];
        v152 = v31[9];
        v153 = (uint64_t)v116;
        v117 = v152 * (v47 - 1);
        v118 = v47 * v152;
        v144 = v37;
        v143 = v63;
        do
        {
          v158 = v47;
          v119 = 0;
          v154 = v118;
          while (1)
          {
            v159 = v37;
            v120 = *v164;
            v121 = v118 + v119 + *v164;
            v122 = v155;
            v123 = (void (*)(char *, uint64_t, uint64_t))v153;
            ((void (*)(char *, uint64_t, uint64_t))v153)(v155, v121, v3);
            v124 = v117;
            v125 = v117 + v119 + v120;
            v126 = v156;
            v123(v156, v125, v3);
            v127 = v162;
            v128 = v165(v122, v126);
            v162 = v127;
            if (v127)
            {
              v140 = (void (*)(char *, uint64_t))v167[1];
              v140(v126, v3);
              v140(v122, v3);
              swift_bridgeObjectRelease();
              goto LABEL_125;
            }
            v129 = v128;
            v130 = (void (*)(char *, uint64_t))v167[1];
            v130(v126, v3);
            v130(v122, v3);
            if ((v129 & 1) == 0)
              break;
            v131 = *v164;
            if (!*v164)
              goto LABEL_152;
            v117 = v124;
            v118 = v154;
            v132 = (char *)(v131 + v124 + v119);
            v133 = (void (*)(char *, uint64_t, uint64_t))v167[4];
            v133(v160, v131 + v154 + v119, v163);
            swift_arrayInitWithTakeFrontToBack();
            v3 = v163;
            v133(v132, (uint64_t)v160, v163);
            v119 -= v152;
            v37 = v159 + 1;
            if (v158 == v159 + 1)
              goto LABEL_104;
          }
          v117 = v124;
          v118 = v154;
LABEL_104:
          v47 = v158 + 1;
          v117 += v152;
          v118 += v152;
          v37 = v144;
        }
        while (v158 + 1 != v143);
        v47 = v143;
        v35 = v149;
        v36 = v162;
        if (v143 < v144)
          goto LABEL_145;
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_1D2D2B6E0(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
        v65 = *((_QWORD *)v35 + 2);
        v64 = *((_QWORD *)v35 + 3);
        v66 = v65 + 1;
        v158 = v47;
        if (v65 >= v64 >> 1)
          v35 = sub_1D2D2B6E0((char *)(v64 > 1), v65 + 1, 1, v35);
        *((_QWORD *)v35 + 2) = v66;
        v67 = v35 + 32;
        v68 = &v35[16 * v65 + 32];
        v69 = v158;
        *(_QWORD *)v68 = v37;
        *((_QWORD *)v68 + 1) = v69;
        if (v65)
        {
LABEL_52:
          v70 = v66 - 1;
          if (v66 >= 4)
          {
            v75 = &v67[16 * v66];
            v76 = *((_QWORD *)v75 - 8);
            v77 = *((_QWORD *)v75 - 7);
            v81 = __OFSUB__(v77, v76);
            v78 = v77 - v76;
            if (v81)
              goto LABEL_130;
            v80 = *((_QWORD *)v75 - 6);
            v79 = *((_QWORD *)v75 - 5);
            v81 = __OFSUB__(v79, v80);
            v73 = v79 - v80;
            v74 = v81;
            if (v81)
              goto LABEL_131;
            v82 = v66 - 2;
            v83 = &v67[16 * v66 - 32];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v81 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v81)
              goto LABEL_133;
            v81 = __OFADD__(v73, v86);
            v87 = v73 + v86;
            if (v81)
              goto LABEL_136;
            if (v87 >= v78)
            {
              v105 = &v67[16 * v70];
              v107 = *(_QWORD *)v105;
              v106 = *((_QWORD *)v105 + 1);
              v81 = __OFSUB__(v106, v107);
              v108 = v106 - v107;
              if (v81)
                goto LABEL_140;
              v98 = v73 < v108;
            }
            else
            {
LABEL_65:
              if ((v74 & 1) != 0)
                goto LABEL_132;
              v82 = v66 - 2;
              v88 = &v67[16 * v66 - 32];
              v90 = *(_QWORD *)v88;
              v89 = *((_QWORD *)v88 + 1);
              v91 = __OFSUB__(v89, v90);
              v92 = v89 - v90;
              v93 = v91;
              if (v91)
                goto LABEL_135;
              v94 = &v67[16 * v70];
              v96 = *(_QWORD *)v94;
              v95 = *((_QWORD *)v94 + 1);
              v81 = __OFSUB__(v95, v96);
              v97 = v95 - v96;
              if (v81)
                goto LABEL_138;
              if (__OFADD__(v92, v97))
                goto LABEL_139;
              if (v92 + v97 < v73)
                goto LABEL_77;
              v98 = v73 < v97;
            }
            if (v98)
              v70 = v82;
          }
          else
          {
            if (v66 == 3)
            {
              v72 = *((_QWORD *)v35 + 4);
              v71 = *((_QWORD *)v35 + 5);
              v81 = __OFSUB__(v71, v72);
              v73 = v71 - v72;
              v74 = v81;
              goto LABEL_65;
            }
            v99 = *((_QWORD *)v35 + 4);
            v100 = *((_QWORD *)v35 + 5);
            v81 = __OFSUB__(v100, v99);
            v92 = v100 - v99;
            v93 = v81;
LABEL_77:
            if ((v93 & 1) != 0)
              goto LABEL_134;
            v101 = &v67[16 * v70];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v81 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v81)
              goto LABEL_137;
            if (v104 < v92)
              goto LABEL_94;
          }
          v109 = v70 - 1;
          if (v70 - 1 >= v66)
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            break;
          }
          if (!*v164)
            goto LABEL_151;
          v110 = v35;
          v111 = &v67[16 * v109];
          v112 = *(_QWORD *)v111;
          v113 = &v67[16 * v70];
          v114 = *((_QWORD *)v113 + 1);
          sub_1D2D2B13C(*v164 + v167[9] * *(_QWORD *)v111, *v164 + v167[9] * *(_QWORD *)v113, *v164 + v167[9] * v114, v161, (uint64_t (*)(_QWORD, _QWORD))v165, v166);
          if (v36)
            goto LABEL_124;
          if (v114 < v112)
            goto LABEL_127;
          if (v70 > *((_QWORD *)v110 + 2))
            goto LABEL_128;
          *(_QWORD *)v111 = v112;
          *(_QWORD *)&v67[16 * v109 + 8] = v114;
          v115 = *((_QWORD *)v110 + 2);
          if (v70 >= v115)
            goto LABEL_129;
          v35 = v110;
          v66 = v115 - 1;
          memmove(&v67[16 * v70], v113 + 16, 16 * (v115 - 1 - v70));
          *((_QWORD *)v35 + 2) = v115 - 1;
          if (v115 <= 2)
            goto LABEL_94;
          goto LABEL_52;
        }
        v66 = 1;
LABEL_94:
        v3 = v163;
        v26 = v164[1];
        v34 = v158;
        v31 = v167;
        if (v158 >= v26)
        {
          v33 = v148;
LABEL_110:
          v148 = v33;
          if (v66 >= 2)
          {
            v134 = *v164;
            do
            {
              v135 = v66 - 2;
              if (v66 < 2)
                goto LABEL_141;
              if (!v134)
                goto LABEL_154;
              v136 = *(_QWORD *)&v35[16 * v135 + 32];
              v137 = *(_QWORD *)&v35[16 * v66 + 24];
              sub_1D2D2B13C(v134 + v167[9] * v136, v134 + v167[9] * *(_QWORD *)&v35[16 * v66 + 16], v134 + v167[9] * v137, v161, (uint64_t (*)(_QWORD, _QWORD))v165, v166);
              if (v36)
                break;
              if (v137 < v136)
                goto LABEL_142;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v35 = sub_1D2D2B9A0((uint64_t)v35);
              if (v135 >= *((_QWORD *)v35 + 2))
                goto LABEL_143;
              v138 = &v35[16 * v135 + 32];
              *(_QWORD *)v138 = v136;
              *((_QWORD *)v138 + 1) = v137;
              v139 = *((_QWORD *)v35 + 2);
              if (v66 > v139)
                goto LABEL_144;
              memmove(&v35[16 * v66 + 16], &v35[16 * v66 + 32], 16 * (v139 - v66));
              *((_QWORD *)v35 + 2) = v139 - 1;
              v66 = v139 - 1;
            }
            while (v139 > 2);
          }
LABEL_124:
          swift_bridgeObjectRelease();
LABEL_125:
          *(_QWORD *)(v148 + 16) = 0;
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
    }
    sub_1D2D9E388();
    __break(1u);
  }
}

void sub_1D2D2AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v43 = a4;
  v44 = a5;
  v8 = sub_1D2D9C7EC();
  MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v35 - v11;
  v15 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v35 - v13;
  v37 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v14 + 72);
    v47 = v14;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v39 = v17;
    v40 = v18;
    v49 = v17 * a3;
    v50 = v17 * (a3 - 1);
    v19 = v41;
    v36 = a1;
    v38 = (char *)&v35 - v13;
    while (2)
    {
      v20 = 0;
      v21 = a1;
      v22 = v51;
      v42 = a3;
      while (1)
      {
        v45 = v21;
        v24 = *v48;
        v25 = v8;
        v26 = v8;
        v27 = v40;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v40)(v16, v49 + v20 + *v48, v25, v15);
        v27(v19, v50 + v20 + v24, v26);
        v28 = v43(v16, v19);
        v51 = v22;
        if (v22)
        {
          v34 = *(void (**)(char *, uint64_t))(v47 + 8);
          v34(v19, v26);
          v34(v16, v26);
          return;
        }
        v29 = v28;
        v30 = *(void (**)(char *, uint64_t))(v47 + 8);
        v30(v19, v26);
        v30(v16, v26);
        v8 = v26;
        if ((v29 & 1) == 0)
          break;
        v22 = v51;
        v31 = *v48;
        if (!*v48)
        {
          __break(1u);
          return;
        }
        v32 = (char *)(v31 + v50 + v20);
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
        v33(v46, v31 + v49 + v20, v26);
        swift_arrayInitWithTakeFrontToBack();
        v33(v32, (uint64_t)v46, v26);
        v16 = v38;
        v20 -= v39;
        v21 = v45 + 1;
        v19 = v41;
        v23 = v42;
        if (v42 == v45 + 1)
          goto LABEL_10;
      }
      v23 = v42;
      v16 = v38;
      v22 = v51;
LABEL_10:
      v51 = v22;
      a3 = v23 + 1;
      v50 += v39;
      v49 += v39;
      a1 = v36;
      if (a3 != v37)
        continue;
      break;
    }
  }
}

uint64_t sub_1D2D2B13C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  char v33;
  char v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  void (*v42)(_QWORD, unint64_t, uint64_t);
  unint64_t v43;
  void (*v44)(_QWORD, unint64_t, uint64_t);
  uint64_t v45;
  unint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  char v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(_QWORD, _QWORD);
  uint64_t result;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(_QWORD, unint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, _QWORD);
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v7 = v6;
  v68 = a6;
  v69 = a5;
  v12 = sub_1D2D9C7EC();
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v59 - v15;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v59 - v20;
  v70 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_68;
  v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_69;
  v25 = (uint64_t)(a2 - a1) / v23;
  v73 = a1;
  v72 = a4;
  v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      v28 = a3;
      v29 = v26 * v23;
      v63 = v19;
      v64 = v18;
      if (a4 < a2 || a2 + v29 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v39 = a4 + v29;
      v71 = a4 + v29;
      v73 = a2;
      if (v29 >= 1 && a1 < a2)
      {
        v41 = -v23;
        v42 = *(void (**)(_QWORD, unint64_t, uint64_t))(v70 + 16);
        v61 = a1;
        v62 = v42;
        v59 = v41;
        v60 = a4;
        v65 = v12;
        while (1)
        {
          v43 = v7;
          v44 = v62;
          v45 = v63;
          v62(v63, v39 + v41, v12);
          v66 = a2;
          v46 = a2 + v41;
          v47 = v64;
          v44(v64, a2 + v41, v12);
          v48 = v69(v45, v47);
          v67 = v43;
          if (v43)
            break;
          v49 = v48;
          v50 = v12;
          v51 = v28 + v41;
          v52 = *(void (**)(_QWORD, _QWORD))(v70 + 8);
          v52(v47, v50);
          v52(v45, v50);
          if ((v49 & 1) != 0)
          {
            if (v28 < v66 || v28 + v41 >= v66)
            {
              v51 = v28 + v41;
              swift_arrayInitWithTakeFrontToBack();
              v7 = v67;
            }
            else
            {
              v7 = v67;
              v51 = v28 + v41;
              if (v28 != v66)
                swift_arrayInitWithTakeBackToFront();
            }
            v41 = v59;
            v54 = v60;
            v73 += v59;
            v55 = v61;
          }
          else
          {
            v53 = v71;
            v71 += v41;
            if (v28 < v53 || v51 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack();
              v46 = v66;
              v7 = v67;
            }
            else
            {
              v7 = v67;
              if (v28 != v53)
                swift_arrayInitWithTakeBackToFront();
              v46 = v66;
            }
            v54 = v60;
            v55 = v61;
            v41 = v59;
          }
          v39 = v71;
          if (v71 > v54)
          {
            a2 = v46;
            v28 = v51;
            v12 = v65;
            if (v46 > v55)
              continue;
          }
          goto LABEL_66;
        }
        v57 = *(void (**)(_QWORD, _QWORD))(v70 + 8);
        v57(v47, v12);
        v57(v45, v12);
      }
      goto LABEL_66;
    }
  }
  else
  {
    v67 = a3;
    if ((v25 & 0x8000000000000000) == 0)
    {
      v27 = v25 * v23;
      if (a4 < a1 || a1 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v66 = a4 + v27;
      v71 = a4 + v27;
      if (v27 >= 1 && a2 < v67)
      {
        v64 = *(void (**)(_QWORD, _QWORD, _QWORD))(v70 + 16);
        while (1)
        {
          v31 = v23;
          v32 = (void (*)(char *, unint64_t, uint64_t))v64;
          v64(v21, a2, v12);
          v32(v16, a4, v12);
          v33 = v69(v21, v16);
          if (v6)
            break;
          v34 = v33;
          v35 = *(void (**)(char *, uint64_t))(v70 + 8);
          v35(v16, v12);
          v35(v21, v12);
          v36 = v73;
          if ((v34 & 1) != 0)
          {
            v23 = v31;
            v37 = a2 + v31;
            if (v73 < a2 || v73 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v73 == a2)
            {
              v36 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            v23 = v31;
            v38 = v72 + v31;
            if (v73 < v72 || v73 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v73 != v72)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v72 = v38;
            v37 = a2;
          }
          v73 = v36 + v23;
          a4 = v72;
          if (v72 < v66)
          {
            a2 = v37;
            if (v37 < v67)
              continue;
          }
          goto LABEL_66;
        }
        v56 = *(void (**)(char *, uint64_t))(v70 + 8);
        v56(v16, v12);
        v56(v21, v12);
      }
LABEL_66:
      sub_1D2D2B894(&v73, &v72, (uint64_t *)&v71);
      return 1;
    }
  }
LABEL_70:
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

char *sub_1D2D2B6E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D2D2B7D8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1D2D9E3DC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

uint64_t sub_1D2D2B894(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1D2D9E3DC();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1D2D2B9A0(uint64_t a1)
{
  return sub_1D2D2B6E0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D2D2B9B4(uint64_t a1)
{
  return sub_1D2D04108(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D2D2B9C8(_QWORD *a1)
{
  return sub_1D2D043E8(0, a1[2], 0, a1);
}

BOOL sub_1D2D2B9DC(uint64_t a1, uint64_t a2)
{
  return sub_1D2D2A0AC(a1, a2);
}

uint64_t sub_1D2D2B9F4(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1EFCB25D0);
}

uint64_t sub_1D2D2BA18(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1ED588700);
}

uint64_t sub_1D2D2BA34(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1EFCB25E8);
}

uint64_t sub_1D2D2BA60(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1ED588698);
}

uint64_t sub_1D2D2BA84(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1ED5886C8);
}

uint64_t sub_1D2D2BA9C(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1ED588680);
}

uint64_t sub_1D2D2BAC8(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1EFCB2600);
}

uint64_t sub_1D2D2BAEC(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1EFCB2618);
}

uint64_t sub_1D2D2BB10(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1EFCB2630);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1D2D2BB74(uint64_t a1)
{
  return sub_1D2D2BB98(a1, qword_1ED5886E8);
}

uint64_t sub_1D2D2BB98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D2D9C8F4();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1D2D9C8E8();
}

uint64_t LTUILocalizedStrings.string.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1D2D9C5E8();

  return v2;
}

uint64_t static LTUILocalizedStrings.== infix(_:_:)()
{
  return 1;
}

uint64_t LTUILocalizedStrings.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t LTUILocalizedStrings.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D2BD28()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D2BD68()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2D2BD8C()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

unint64_t sub_1D2D2BDCC()
{
  unint64_t result;

  result = qword_1EFCA79C0;
  if (!qword_1EFCA79C0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for LTUILocalizedStrings, &type metadata for LTUILocalizedStrings);
    atomic_store(result, (unint64_t *)&qword_1EFCA79C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LTUILocalizedStrings(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D2D2BE50 + 4 * asc_1D2DA34E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D2D2BE70 + 4 * byte_1D2DA34E5[v4]))();
}

_BYTE *sub_1D2D2BE50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D2D2BE70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2D2BE78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2D2BE80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2D2BE88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2D2BE90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LTUILocalizedStrings()
{
  return &type metadata for LTUILocalizedStrings;
}

void sub_1D2D2BEAC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2BEE4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2BF94 + 4 * byte_1D2DA3587[a2]))(0x7865646E69);
}

uint64_t sub_1D2D2BF94(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7865646E69 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D2D2C094(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657474696D6D6F63;
  else
    v3 = 0x65736F706D6F63;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000064;
  if ((a2 & 1) != 0)
    v5 = 0x657474696D6D6F63;
  else
    v5 = 0x65736F706D6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000064;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2D2C13C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001DLL;
  else
    v3 = 0xD000000000000016;
  if (v2)
    v4 = 0x80000001D2DA7580;
  else
    v4 = 0x80000001D2DA75A0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001DLL;
  else
    v5 = 0xD000000000000016;
  if ((a2 & 1) != 0)
    v6 = 0x80000001D2DA75A0;
  else
    v6 = 0x80000001D2DA7580;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D2D2C1E4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D2D2C230(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2C2F0 + 4 * byte_1D2DA3594[a2]))(0x7463416B63697571);
}

uint64_t sub_1D2D2C2F0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7463416B63697571 && v1 == 0xEB000000006E6F69)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D2D2C400(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2C464(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2C4BC + 4 * byte_1D2DA359E[a2]))(0x6F4C746567726174);
}

uint64_t sub_1D2D2C4BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6F4C746567726174 && v2 == v1)
    v3 = 1;
  else
    v3 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D2D2C54C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6B726F7774656ELL;
  else
    v3 = 0x6563697665446E6FLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6B726F7774656ELL;
  else
    v5 = 0x6563697665446E6FLL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2D2C5F0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED00006E6F697463;
  v3 = 0x656E6E6F43206F4ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 1768319319;
    else
      v5 = 0x72616C756C6C6543;
    if (v4 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE800000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x656E6E6F43206F4ELL;
  v6 = 0xED00006E6F697463;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 1768319319;
    else
      v3 = 0x72616C756C6C6543;
    if (v7 == 1)
      v2 = 0xE400000000000000;
    else
      v2 = 0xE800000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D2D2C708(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2C76C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2C840 + 4 * byte_1D2DA35A9[a2]))(0xD000000000000010);
}

uint64_t sub_1D2D2C840(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000001D2DA7640)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D2D2C94C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2C9B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2CA24 + 4 * byte_1D2DA35B5[a2]))(0x656E6E6F63736964);
}

uint64_t sub_1D2D2CA24(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656E6E6F63736964 && v1 == 0xEC00000064657463)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D2D2CAE4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2CB50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2CBB8 + 4 * byte_1D2DA35BE[a2]))(1684108657);
}

uint64_t sub_1D2D2CBB8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1684108657 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D2D2CC68(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001D2DA78A0;
  else
    v2 = 0x80000001D2DA7880;
  if ((a2 & 1) != 0)
    v3 = 0x80000001D2DA78A0;
  else
    v3 = 0x80000001D2DA7880;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1D2D2CD04(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2CD3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2CE34 + 4 * byte_1D2DA35CA[a2]))(0x73646E756F62);
}

uint64_t sub_1D2D2CE34(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73646E756F62 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D2D2CF88(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0x76726573624F6F6ELL;
  if (v2)
    v4 = 0xEE00736E6F697461;
  else
    v4 = 0x80000001D2DA7930;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0x76726573624F6F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001D2DA7930;
  else
    v6 = 0xEE00736E6F697461;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D2D2D03C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2D08C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2D2D0FC + 4 * byte_1D2DA35D6[a2]))(0x7468676952706F74);
}

uint64_t sub_1D2D2D0FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7468676952706F74 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t static NetworkPathService.isDisconnected()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D2D200;
  return static NetworkPathService.read()(v0 + 24);
}

uint64_t sub_1D2D2D200()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D2D2D254()
{
  __asm { BR              X11 }
}

uint64_t sub_1D2D2D2B4()
{
  uint64_t v0;
  char v1;

  v1 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t NetworkPath.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D2D374 + 4 * byte_1D2DA35DF[*v0]))(0x616C696176616E75, 0xEB00000000656C62);
}

uint64_t sub_1D2D2D374()
{
  return 0x656E6E6F63736964;
}

uint64_t sub_1D2D2D394()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1D2D2D3AC()
{
  return 1768319351;
}

uint64_t sub_1D2D2D3BC()
{
  return 0x6465726977;
}

uint64_t NetworkPath.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D2D408 + 4 * byte_1D2DA35E4[*v0]))(0x616C696176616E75, 0xEB00000000656C62);
}

uint64_t sub_1D2D2D408()
{
  return 0x656E6E6F63736964;
}

uint64_t sub_1D2D2D428()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1D2D2D440()
{
  return 1768319351;
}

uint64_t sub_1D2D2D450()
{
  return 0x6465726977;
}

TranslationUI::NetworkPath_optional __swiftcall NetworkPath.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TranslationUI::NetworkPath_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D2D9E3F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1D2D2D4BC(char *a1)
{
  sub_1D2D2C94C(*a1);
}

void sub_1D2D2D4C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D2D51C()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D2D5A0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D2D5E4()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D2D654()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D2D6A4()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

TranslationUI::NetworkPath_optional sub_1D2D2D728(Swift::String *a1)
{
  return NetworkPath.init(rawValue:)(*a1);
}

uint64_t sub_1D2D2D734()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2D2D76C + 4 * byte_1D2DA35F8[*v0]))();
}

void sub_1D2D2D76C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "disconnected");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D2D2D790(_QWORD *a1@<X8>)
{
  *a1 = 0x72616C756C6C6563;
  a1[1] = 0xE800000000000000;
}

void sub_1D2D2D7AC(_QWORD *a1@<X8>)
{
  *a1 = 1768319351;
  a1[1] = 0xE400000000000000;
}

void sub_1D2D2D7C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6465726977;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1D2D2D7D8()
{
  sub_1D2D2E578();
  return sub_1D2D9DE30();
}

uint64_t sub_1D2D2D834()
{
  sub_1D2D2E578();
  return sub_1D2D9DE24();
}

uint64_t sub_1D2D2D880()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D2D8B8 + 4 * byte_1D2DA35FD[*v0]))(0x616C696176616E75, 0xEB00000000656C62);
}

uint64_t sub_1D2D2D8B8()
{
  return 0x656E6E6F63736964;
}

uint64_t sub_1D2D2D8D8()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1D2D2D8F0()
{
  return 1768319351;
}

uint64_t sub_1D2D2D900()
{
  return 0x6465726977;
}

uint64_t static NetworkPathService.read()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  type metadata accessor for Signpost();
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D2D96C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v10;

  if (qword_1ED586A50 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588680);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E01C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Network status read", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }

  sub_1D2CC76B4(&v10);
  if (v10 == 5)
  {
    v5 = *(_QWORD *)(v0 + 24);
    sub_1D2D3A46C(5, v5);
    sub_1D2D9CA68();
    swift_allocObject();
    v6 = sub_1D2D9CA5C();
    *(_QWORD *)(v0 + 32) = v6;
    v7 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v7;
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v8;
    *v8 = v0;
    v8[1] = sub_1D2D2DB28;
    return sub_1D2D9E514();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = v10;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D2DB28()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D2DB84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_1D2D2DDC0(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D2D2DBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v5 = sub_1D2D9DB30();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Signpost();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v14);
  sub_1D2D2E5BC(a3, (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (*(unsigned __int8 *)(v9 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v16, v15, v11);
  *(_QWORD *)(v19 + v17) = v24;
  sub_1D2D2E70C((uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  swift_retain();
  sub_1D2D9CA38();
  sub_1D2CC80E0();
  v21 = v25;
  v20 = v26;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v7, *MEMORY[0x1E0DEF540], v26);
  v22 = (void *)sub_1D2D9E0B8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  sub_1D2D9CA44();

}

void sub_1D2D2DDB8(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D2DBC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D2D2DDC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2D2DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, _QWORD, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  char v20;
  char v22;
  _QWORD v23[3];
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v23[1] = a4;
  v23[2] = a3;
  v4 = sub_1D2D9CA2C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9CA80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - v13;
  sub_1D2D9CA8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CCEAB0], v8);
  sub_1D2D2E7CC();
  v15 = sub_1D2D9DC8C();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v16(v14, v8);
  if ((v15 & 1) == 0)
  {
    v28 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
    goto LABEL_7;
  }
  v17 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v17(v7, *MEMORY[0x1E0CCE360], v4);
  v18 = sub_1D2D9CA74();
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v7, v4);
  if ((v18 & 1) != 0)
  {
    v24 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
LABEL_7:
    sub_1D2D9DECC();
    goto LABEL_8;
  }
  v17(v7, *MEMORY[0x1E0CCE368], v4);
  v20 = sub_1D2D9CA74();
  v19(v7, v4);
  if ((v20 & 1) != 0)
  {
    v25 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
    goto LABEL_7;
  }
  v17(v7, *MEMORY[0x1E0CCE378], v4);
  v22 = sub_1D2D9CA74();
  v19(v7, v4);
  if ((v22 & 1) != 0)
    v26 = 2;
  else
    v27 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
  sub_1D2D9DECC();
LABEL_8:
  sub_1D2D9CA50();
  return sub_1D2D3A96C();
}

void sub_1D2D2E0B4(_BYTE *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  unsigned __int8 v17[40];
  __int128 v18;
  __int128 v19;

  if (getenv("LT_NETWORK_PATH"))
  {
    v2 = sub_1D2D9DDAC();
    v4 = sub_1D2CDE84C(v2, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
      sub_1D2D9E298();
      if (*(_QWORD *)(v4 + 16) && (v5 = sub_1D2D64EFC((uint64_t)v17), (v6 & 1) != 0))
      {
        sub_1D2CC80A4(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v18);
      }
      else
      {
        v18 = 0u;
        v19 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1D2CC8030((uint64_t)v17);
      if (*((_QWORD *)&v19 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v7._countAndFlagsBits = 0x4F5754454E5F544CLL;
          v7._object = (void *)0xEF485441505F4B52;
          NetworkPath.init(rawValue:)(v7);
          v8 = v17[0];
          if (v17[0] != 5)
          {
            if (qword_1ED586A50 != -1)
              swift_once();
            v9 = sub_1D2D9C8F4();
            __swift_project_value_buffer(v9, (uint64_t)qword_1ED588680);
            v10 = sub_1D2D9C8DC();
            v11 = sub_1D2D9E01C();
            if (os_log_type_enabled(v10, v11))
            {
              v12 = (_DWORD *)swift_slowAlloc();
              *(_QWORD *)v17 = swift_slowAlloc();
              *v12 = 136315138;
              __asm { BR              X9 }
            }

            goto LABEL_20;
          }
        }
      }
      else
      {
        sub_1D2CC8064((uint64_t)&v18);
      }
    }
  }
  if (qword_1ED586A50 != -1)
    swift_once();
  v13 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED588680);
  v14 = sub_1D2D9C8DC();
  v15 = sub_1D2D9E01C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D2CC0000, v14, v15, "Network path fixture not found", v16, 2u);
    MEMORY[0x1D8248974](v16, -1, -1);
  }

  LOBYTE(v8) = 5;
LABEL_20:
  *a1 = v8;
}

unint64_t sub_1D2D2E458()
{
  unint64_t result;

  result = qword_1EFCA79D8;
  if (!qword_1EFCA79D8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for NetworkPath, &type metadata for NetworkPath);
    atomic_store(result, (unint64_t *)&qword_1EFCA79D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D2D2E4E8 + 4 * byte_1D2DA360C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D2D2E51C + 4 * byte_1D2DA3607[v4]))();
}

uint64_t sub_1D2D2E51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D2E524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D2E52CLL);
  return result;
}

uint64_t sub_1D2D2E538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D2E540);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D2D2E544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D2E54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkPath()
{
  return &type metadata for NetworkPath;
}

ValueMetadata *type metadata accessor for NetworkPathService()
{
  return &type metadata for NetworkPathService;
}

unint64_t sub_1D2D2E578()
{
  unint64_t result;

  result = qword_1EFCA79E0;
  if (!qword_1EFCA79E0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for NetworkPath, &type metadata for NetworkPath);
    atomic_store(result, (unint64_t *)&qword_1EFCA79E0);
  }
  return result;
}

uint64_t sub_1D2D2E5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D2E600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for Signpost();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v8 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v7, v8);
  v9 = v0 + v7 + *(int *)(v5 + 20);
  v10 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D2E70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D2E750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79E8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Signpost() - 8) + 80);
  return sub_1D2D2DDFC(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

unint64_t sub_1D2D2E7CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA79F0;
  if (!qword_1EFCA79F0)
  {
    v1 = sub_1D2D9CA80();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CCEAC8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA79F0);
  }
  return result;
}

uint64_t sub_1D2D2E814@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _OWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v48 = a1;
  v46 = sub_1D2D9CDF8();
  MEMORY[0x1E0C80A78](v46);
  v47 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1D2D9D2FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A20);
  MEMORY[0x1E0C80A78](v42);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A28);
  MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A30);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A38);
  MEMORY[0x1E0C80A78](v45);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D308();
  sub_1D2D9DA70();
  sub_1D2D9CE10();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v17 = &v8[*(int *)(v6 + 36)];
  v18 = v54;
  *((_OWORD *)v17 + 4) = v53;
  *((_OWORD *)v17 + 5) = v18;
  *((_OWORD *)v17 + 6) = v55;
  v19 = v50;
  *(_OWORD *)v17 = v49;
  *((_OWORD *)v17 + 1) = v19;
  v20 = v52;
  *((_OWORD *)v17 + 2) = v51;
  *((_OWORD *)v17 + 3) = v20;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1D2D9D7E8();
  sub_1D2D9D314();
  v21 = sub_1D2D9D818();
  swift_release();
  LOBYTE(v5) = sub_1D2D9D410();
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v10, &qword_1EFCA7A18);
  v22 = &v10[*(int *)(v42 + 36)];
  *(_QWORD *)v22 = v21;
  v22[8] = (char)v5;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA7A18);
  if ((sub_1D2D9D314() & 1) != 0)
  {
    v23 = sub_1D2D9D830();
  }
  else
  {
    v24 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    v23 = MEMORY[0x1D8247330](v24);
  }
  v25 = v23;
  KeyPath = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v10, (uint64_t)v12, &qword_1EFCA7A20);
  v27 = (uint64_t *)&v12[*(int *)(v43 + 36)];
  *v27 = KeyPath;
  v27[1] = v25;
  sub_1D2CCADA4((uint64_t)v10, &qword_1EFCA7A20);
  sub_1D2D9D458();
  v28 = sub_1D2D9D464();
  swift_release();
  v29 = swift_getKeyPath();
  sub_1D2CCAD60((uint64_t)v12, (uint64_t)v14, &qword_1EFCA7A28);
  v30 = (uint64_t *)&v14[*(int *)(v44 + 36)];
  *v30 = v29;
  v30[1] = v28;
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA7A28);
  v31 = v47;
  v32 = &v47[*(int *)(v46 + 20)];
  v33 = *MEMORY[0x1E0CDB0C0];
  v34 = sub_1D2D9D0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #10.0 }
  *v31 = _Q0;
  v40 = (uint64_t)&v16[*(int *)(v45 + 36)];
  sub_1D2CDCC78((uint64_t)v31, v40);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6070) + 36)) = 256;
  sub_1D2CCAD60((uint64_t)v14, (uint64_t)v16, &qword_1EFCA7A30);
  sub_1D2CDCCBC((uint64_t)v31);
  sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA7A30);
  return sub_1D2D2F1F4((uint64_t)v16, v48);
}

TranslationUI::PanelButtonStyle __swiftcall PanelButtonStyle.init(isProminent:)(TranslationUI::PanelButtonStyle isProminent)
{
  TranslationUI::PanelButtonStyle *v1;

  v1->prominent = isProminent.prominent;
  return isProminent;
}

uint64_t PanelButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v2 = sub_1D2D9D3E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79F8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(&v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2, v7);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v3 + 32))(v11 + v10, &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  v14 = a1;
  sub_1D2D9D3BC();
  sub_1D2CC66E4(&qword_1EFCA7A00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD128], MEMORY[0x1E0CDD120]);
  sub_1D2D9D8FC();
  sub_1D2CC6C74(&qword_1EFCA7A08, &qword_1EFCA79F8, MEMORY[0x1E0CDFA58]);
  sub_1D2D2EE80();
  sub_1D2D9D620();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1D2D2EE60()
{
  return sub_1D2D9D3C8();
}

unint64_t sub_1D2D2EE80()
{
  unint64_t result;

  result = qword_1EFCA7A10;
  if (!qword_1EFCA7A10)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA380C, &type metadata for BorderedButtonAlternative);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A10);
  }
  return result;
}

uint64_t sub_1D2D2EEC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D2EED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v2 = sub_1D2D9D3E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA79F8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(&v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2, v7);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v3 + 32))(v11 + v10, &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  v14 = a1;
  sub_1D2D9D3BC();
  sub_1D2CC66E4(&qword_1EFCA7A00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD128], MEMORY[0x1E0CDD120]);
  sub_1D2D9D8FC();
  sub_1D2CC6C74(&qword_1EFCA7A08, &qword_1EFCA79F8, MEMORY[0x1E0CDFA58]);
  sub_1D2D2EE80();
  sub_1D2D9D620();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t storeEnumTagSinglePayload for PanelButtonStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D2F0CC + 4 * byte_1D2DA3785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D2F100 + 4 * asc_1D2DA3780[v4]))();
}

uint64_t sub_1D2D2F100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D2F108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D2F110);
  return result;
}

uint64_t sub_1D2D2F11C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D2F124);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D2F128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D2F130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PanelButtonStyle()
{
  return &type metadata for PanelButtonStyle;
}

uint64_t sub_1D2D2F14C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA79F8);
  sub_1D2CC6C74(&qword_1EFCA7A08, &qword_1EFCA79F8, MEMORY[0x1E0CDFA58]);
  sub_1D2D2EE80();
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for BorderedButtonAlternative()
{
  return &type metadata for BorderedButtonAlternative;
}

uint64_t sub_1D2D2F1D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D2F1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D2D9D3E0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D2D2F2A0()
{
  sub_1D2D9D3E0();
  return sub_1D2D9D3D4();
}

unint64_t sub_1D2D2F2DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A40;
  if (!qword_1EFCA7A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A38);
    v2[0] = sub_1D2D2F360();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60A0, &qword_1EFCA6070, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A40);
  }
  return result;
}

unint64_t sub_1D2D2F360()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A48;
  if (!qword_1EFCA7A48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A30);
    v2[0] = sub_1D2D2F3E4();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A48);
  }
  return result;
}

unint64_t sub_1D2D2F3E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A50;
  if (!qword_1EFCA7A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A28);
    v2[0] = sub_1D2D2F468();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A50);
  }
  return result;
}

unint64_t sub_1D2D2F468()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A58;
  if (!qword_1EFCA7A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A20);
    v2[0] = sub_1D2D2F4EC();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6270, &qword_1EFCA6278, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A58);
  }
  return result;
}

unint64_t sub_1D2D2F4EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A60;
  if (!qword_1EFCA7A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A18);
    v2[0] = sub_1D2CC66E4((unint64_t *)&qword_1EFCA5B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC528], MEMORY[0x1E0CDC520]);
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A60);
  }
  return result;
}

BOOL static PlayButton.Size.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PlayButton.Size.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t PlayButton.Size.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t PlayButton.init(isPlaying:size:action:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a2;
  *(_BYTE *)a5 = result;
  *(_BYTE *)(a5 + 1) = v5;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  return result;
}

uint64_t PlayButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v30 = a1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A68);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9CDBC();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A70);
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A78);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = v1[1];
  v15 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = v12;
  *(_BYTE *)(v16 + 17) = v13;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v14;
  v34 = v12;
  v17 = v3;
  v18 = (uint64_t)v31;
  v35 = v13;
  v36 = v15;
  v37 = v14;
  sub_1D2CCCEF0(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A80);
  sub_1D2D2FD60();
  sub_1D2D9D8FC();
  sub_1D2D9CDB0();
  v19 = sub_1D2CC6C74(&qword_1EFCA7AC8, &qword_1EFCA7A70, MEMORY[0x1E0CDFA58]);
  v20 = sub_1D2CC66E4((unint64_t *)&qword_1EFCA6108, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9F78], MEMORY[0x1E0CD9F68]);
  sub_1D2D9D614();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v17);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  v21 = *MEMORY[0x1E0CD9938];
  v22 = sub_1D2D9CD50();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v18, v21, v22);
  sub_1D2CC66E4(&qword_1EFCA7AD0, v23, MEMORY[0x1E0CD9990]);
  result = sub_1D2D9DC8C();
  if ((result & 1) != 0)
  {
    v38 = v6;
    v39 = v17;
    v40 = v19;
    v41 = v20;
    swift_getOpaqueTypeConformance2();
    sub_1D2CC6C74(&qword_1EFCA7AD8, &qword_1EFCA7A68, MEMORY[0x1E0DECD88]);
    v25 = v28;
    sub_1D2D9D674();
    sub_1D2CCADA4(v18, &qword_1EFCA7A68);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2D2F954()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D2F980()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1D2D2F9A8@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  *(_QWORD *)&v32 = a2;
  v35 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D2D9D878();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7AE8);
  MEMORY[0x1E0C80A78](v33);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7AB8);
  MEMORY[0x1E0C80A78](v34);
  v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - v16;
  if ((a1 & 0xFF00) == 0x200)
  {
    v18 = sub_1D2D9D854();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CDF7C0], v7);
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 28), v10, v7);
    *v6 = KeyPath;
    sub_1D2CCAD60((uint64_t)v6, (uint64_t)v14 + *(int *)(v34 + 36), &qword_1ED586B18);
    *v14 = v18;
    swift_retain();
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED586B18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
    sub_1D2D305F0((uint64_t)v14, (uint64_t)v17);
    sub_1D2CCAD60((uint64_t)v17, (uint64_t)v12, &qword_1EFCA7AB8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A98);
    sub_1D2D2FDCC();
    sub_1D2D2FE50();
    sub_1D2D9D1E8();
    return sub_1D2CCADA4((uint64_t)v17, &qword_1EFCA7AB8);
  }
  else
  {
    v21 = sub_1D2D9DA70();
    v23 = v22;
    sub_1D2D2FF2C((uint64_t)&v36);
    v24 = v37;
    v25 = v38;
    v26 = v39;
    v27 = BYTE1(v39);
    v32 = v36;
    sub_1D2D9DA70();
    sub_1D2D9CBE8();
    v28 = v36;
    v29 = BYTE8(v36);
    v30 = v37;
    v31 = v38;
    *(_QWORD *)v12 = v21;
    *((_QWORD *)v12 + 1) = v23;
    *((_OWORD *)v12 + 1) = v32;
    *((_QWORD *)v12 + 4) = v24;
    *((_QWORD *)v12 + 5) = v25;
    v12[48] = v26;
    v12[49] = v27;
    *((_QWORD *)v12 + 7) = v28;
    v12[64] = v29;
    *((_QWORD *)v12 + 9) = v30;
    v12[80] = v31;
    *(_OWORD *)(v12 + 88) = v39;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7A98);
    sub_1D2D2FDCC();
    sub_1D2D2FE50();
    return sub_1D2D9D1E8();
  }
}

uint64_t sub_1D2D2FD4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D2F9A8(*(unsigned __int8 *)(v1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 17) << 8), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1D2D2FD60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A88;
  if (!qword_1EFCA7A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A80);
    v2[0] = sub_1D2D2FDCC();
    v2[1] = sub_1D2D2FE50();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A88);
  }
  return result;
}

unint64_t sub_1D2D2FDCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7A90;
  if (!qword_1EFCA7A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A98);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA7AA0, &qword_1EFCA7AA8, MEMORY[0x1E0CDFCF8]);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7A90);
  }
  return result;
}

unint64_t sub_1D2D2FE50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA7AB0;
  if (!qword_1EFCA7AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7AB8);
    v2 = sub_1D2CC6C74(&qword_1EFCA7AC0, &qword_1ED586B18, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA7AB0);
  }
  return result;
}

unint64_t sub_1D2D2FED8()
{
  unint64_t result;

  result = qword_1EFCA7AE0;
  if (!qword_1EFCA7AE0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for PlayButton.Size, &type metadata for PlayButton.Size);
    atomic_store(result, (unint64_t *)&qword_1EFCA7AE0);
  }
  return result;
}

uint64_t sub_1D2D2FF1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D2FF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_1D2D9D860();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9D854();
  v6 = *MEMORY[0x1E0CDF6F8];
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, v6, v2);
  v8 = sub_1D2D9D884();
  swift_release();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_1D2D9D83C();
  sub_1D2D9D854();
  v7(v5, v6, v2);
  v13 = sub_1D2D9D884();
  swift_release();
  v9(v5, v2);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  swift_retain();
  return swift_release();
}

uint64_t destroy for PlayButton(uint64_t result)
{
  if (*(_QWORD *)(result + 8))
    return swift_release();
  return result;
}

uint64_t _s13TranslationUI10PlayButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for PlayButton(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayButton(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayButton(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButton()
{
  return &type metadata for PlayButton;
}

uint64_t storeEnumTagSinglePayload for PlayButton.Size(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D303A4 + 4 * byte_1D2DA38AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D303D8 + 4 * byte_1D2DA38A8[v4]))();
}

uint64_t sub_1D2D303D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D303E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D303E8);
  return result;
}

uint64_t sub_1D2D303F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D303FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D30400(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D30408(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayButton.Size()
{
  return &type metadata for PlayButton.Size;
}

uint64_t sub_1D2D30424()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A78);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A68);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7A70);
  sub_1D2D9CDBC();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9F78];
  sub_1D2CC6C74(&qword_1EFCA7AC8, &qword_1EFCA7A70, MEMORY[0x1E0CDFA58]);
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA6108, v0, MEMORY[0x1E0CD9F68]);
  swift_getOpaqueTypeConformance2();
  sub_1D2CC6C74(&qword_1EFCA7AD8, &qword_1EFCA7A68, MEMORY[0x1E0DECD88]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D30530()
{
  return sub_1D2D9CE40();
}

uint64_t sub_1D2D30550()
{
  return sub_1D2D9CE40();
}

uint64_t sub_1D2D30570(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9D878();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1D2D9CE4C();
}

uint64_t sub_1D2D305F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2D30638(_QWORD *a1@<X8>)
{
  *a1 = CGPointMake;
  a1[1] = 0;
}

uint64_t sub_1D2D30648(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t (*EnvironmentValues.presentLanguageSelection.getter())()
{
  __int128 v1;

  sub_1D2D307F0();
  sub_1D2D9CFFC();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_1D2CF4170;
}

uint64_t sub_1D2D306C8()
{
  sub_1D2D307F0();
  swift_retain();
  return sub_1D2D9D008();
}

uint64_t EnvironmentValues.presentLanguageSelection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1D2D307F0();
  return sub_1D2D9D008();
}

uint64_t (*EnvironmentValues._presentLanguageSelection.getter())()
{
  __int128 v1;

  sub_1D2D307F0();
  sub_1D2D9CFFC();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_1D2D30C30;
}

unint64_t sub_1D2D307F0()
{
  unint64_t result;

  result = qword_1EFCA7AF0;
  if (!qword_1EFCA7AF0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA39D4, &type metadata for PresentActionKey);
    atomic_store(result, (unint64_t *)&qword_1EFCA7AF0);
  }
  return result;
}

uint64_t sub_1D2D30834()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t EnvironmentValues._presentLanguageSelection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1D2D307F0();
  return sub_1D2D9D008();
}

void (*EnvironmentValues.presentLanguageSelection.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1D2D307F0();
  sub_1D2D9CFFC();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *((_OWORD *)v3 + 1);
  *v3 = sub_1D2D30C30;
  v3[1] = v4;
  return sub_1D2D30958;
}

void sub_1D2D30958(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v2[2] = (uint64_t)sub_1D2D30C30;
    v2[3] = v5;
    swift_retain();
    sub_1D2D9D008();
    swift_release();
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v3;
    v2[2] = (uint64_t)sub_1D2D30C30;
    v2[3] = v6;
    sub_1D2D9D008();
  }
  free(v2);
}

void (*EnvironmentValues._presentLanguageSelection.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1D2D307F0();
  sub_1D2D9CFFC();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *((_OWORD *)v3 + 1);
  *v3 = sub_1D2D30C30;
  v3[1] = v4;
  return sub_1D2D30AB4;
}

void sub_1D2D30AB4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v2[2] = (uint64_t)sub_1D2D30C30;
    v2[3] = v5;
    swift_retain();
    sub_1D2D9D008();
    swift_release();
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v3;
    v2[2] = (uint64_t)sub_1D2D30C30;
    v2[3] = v6;
    sub_1D2D9D008();
  }
  free(v2);
}

double sub_1D2D30B80@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1D2D307F0();
  sub_1D2D9CFFC();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_1D2D30BD0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1D2D307F0();
  sub_1D2D9CFFC();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for PresentActionKey()
{
  return &type metadata for PresentActionKey;
}

const __SCNetworkReachability *Reachability.networkStatus.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  const __SCNetworkReachability *result;
  char v4;
  const __SCNetworkReachability *v5;
  const __SCNetworkReachability *v6;
  SCNetworkReachabilityFlags flags;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  result = *(const __SCNetworkReachability **)(v1 + 48);
  if (result
    && (flags = 0,
        result = (const __SCNetworkReachability *)SCNetworkReachabilityGetFlags(result, &flags),
        (_DWORD)result)
    && (flags & 2) != 0)
  {
    v5 = *(const __SCNetworkReachability **)(v1 + 48);
    if (v5 && (flags = 0, SCNetworkReachabilityGetFlags(v5, &flags)) && (flags & 4) != 0)
    {
      v4 = 0;
      result = *(const __SCNetworkReachability **)(v1 + 48);
      if (!result)
        goto LABEL_5;
    }
    else
    {
      v4 = 1;
      result = *(const __SCNetworkReachability **)(v1 + 48);
      if (!result)
        goto LABEL_5;
    }
    flags = 0;
    if (SCNetworkReachabilityGetFlags(result, &flags) && (flags & 0x20) != 0)
      goto LABEL_15;
    result = *(const __SCNetworkReachability **)(v1 + 48);
    if (!result)
      goto LABEL_5;
    flags = 0;
    if (SCNetworkReachabilityGetFlags(result, &flags))
    {
      if ((flags & 8) != 0)
      {
LABEL_15:
        v6 = *(const __SCNetworkReachability **)(v1 + 48);
        if (!v6 || (flags = 0, !SCNetworkReachabilityGetFlags(v6, &flags)) || (flags & 0x10) == 0)
          v4 = 1;
      }
    }
    result = *(const __SCNetworkReachability **)(v1 + 48);
    if (result)
    {
      flags = 0;
      result = (const __SCNetworkReachability *)SCNetworkReachabilityGetFlags(result, &flags);
      if ((_DWORD)result)
      {
        if ((flags & 0x40000) != 0)
          v4 = 2;
      }
    }
  }
  else
  {
    v4 = 0;
  }
LABEL_5:
  *a1 = v4;
  return result;
}

TranslationUI::NetworkStatus_optional __swiftcall NetworkStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TranslationUI::NetworkStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D2D9E3F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NetworkStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1768319319;
  if (*v0 != 1)
    v1 = 0x72616C756C6C6543;
  if (*v0)
    return v1;
  else
    return 0x656E6E6F43206F4ELL;
}

uint64_t sub_1D2D30E54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D2D2C5F0(*a1, *a2);
}

uint64_t sub_1D2D30E60()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D30F04()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D30F84()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

TranslationUI::NetworkStatus_optional sub_1D2D31024(Swift::String *a1)
{
  return NetworkStatus.init(rawValue:)(*a1);
}

void sub_1D2D31030(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xED00006E6F697463;
  v4 = 0xE400000000000000;
  v5 = 1768319319;
  if (v2 != 1)
  {
    v5 = 0x72616C756C6C6543;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x656E6E6F43206F4ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t static Reachability.reachibilityChangedNotificationName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1D2D310B0()
{
  uint64_t result;

  result = sub_1D2D9DCB0();
  qword_1EFCA7AF8 = result;
  return result;
}

id static Reachability.reachibilityChangedNotification.getter()
{
  if (qword_1EFCA54C0 != -1)
    swift_once();
  return (id)qword_1EFCA7AF8;
}

uint64_t Reachability.__allocating_init(networkReachability:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Reachability.init(networkReachability:)(a1);
  return v2;
}

uint64_t Reachability.init(networkReachability:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v10[0] = a1;
  v2 = sub_1D2D9E088();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9E070();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D2D9DB48();
  MEMORY[0x1E0C80A78](v7);
  *(_OWORD *)(v1 + 44) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_BYTE *)(v1 + 60) = 1;
  sub_1D2CC80E0();
  sub_1D2D9DB3C();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1D2D313C4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BD0);
  sub_1D2D3140C();
  sub_1D2D9E22C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  *(_QWORD *)(v1 + 64) = sub_1D2D9E0AC();
  *(_BYTE *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v8 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v10[0];

  return v1;
}

uint64_t Reachability.deinit()
{
  uint64_t v0;

  sub_1D2CCCF1C(*(_QWORD *)(v0 + 16));
  sub_1D2CCCF1C(*(_QWORD *)(v0 + 32));

  return v0;
}

uint64_t Reachability.__deallocating_deinit()
{
  uint64_t v0;

  sub_1D2CCCF1C(*(_QWORD *)(v0 + 16));
  sub_1D2CCCF1C(*(_QWORD *)(v0 + 32));

  return swift_deallocClassInstance();
}

unint64_t sub_1D2D313C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED586C00;
  if (!qword_1ED586C00)
  {
    v1 = sub_1D2D9E070();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED586C00);
  }
  return result;
}

unint64_t sub_1D2D3140C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED586BD8;
  if (!qword_1ED586BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586BD0);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED586BD8);
  }
  return result;
}

unint64_t sub_1D2D3145C()
{
  unint64_t result;

  result = qword_1EFCA7B00;
  if (!qword_1EFCA7B00)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for NetworkStatus, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EFCA7B00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D2D3157C + 4 * byte_1D2DA3A15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D2D315B0 + 4 * byte_1D2DA3A10[v4]))();
}

uint64_t sub_1D2D315B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D315B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D315C0);
  return result;
}

uint64_t sub_1D2D315CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D315D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D2D315D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D315E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

uint64_t type metadata accessor for Reachability()
{
  return objc_opt_self();
}

uint64_t method lookup function for Reachability()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Reachability.__allocating_init(networkReachability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_1D2D31630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1D2D9C7EC();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
        v17 = sub_1D2D9DC8C();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1D2D317B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  int v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 56);
    for (i = (_BYTE *)(a1 + 56); ; i += 48)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      v7 = *((_QWORD *)v3 - 1);
      v8 = *v3;
      v9 = *((_QWORD *)i - 3) == *((_QWORD *)v3 - 3) && *((_QWORD *)i - 2) == *((_QWORD *)v3 - 2);
      if (!v9 && (sub_1D2D9E52C() & 1) == 0)
        break;
      if ((v6 & 1) != 0)
      {
        if (v5)
        {
          if (v7)
            v10 = v8;
          else
            v10 = 0;
          if (v10 != 1)
            return 0;
        }
        else
        {
          if (v7)
            v11 = 0;
          else
            v11 = v8;
          if ((v11 & 1) == 0)
            return 0;
        }
      }
      else if ((v8 & 1) != 0)
      {
        return 0;
      }
      v3 += 48;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1D2D31880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v54 - v17;
  MEMORY[0x1E0C80A78](v19);
  v26 = (char *)&v54 - v25;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27 == *(_QWORD *)(a2 + 16))
  {
    if (!v27 || a1 == a2)
      return 1;
    v63 = v20;
    v59 = v24;
    v60 = v23;
    v28 = *(unsigned __int8 *)(v22 + 80);
    v57 = a2;
    v58 = v21;
    v29 = (v28 + 32) & ~v28;
    v54 = *(_QWORD *)(v22 + 72);
    v55 = v15;
    v56 = a1;
    while (1)
    {
      sub_1D2CDB6B4(a1 + v29, (uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4(a2 + v29, (uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
      v31 = MEMORY[0x1D82462A4](v26, v18);
      sub_1D2CDB6B4((uint64_t)v26, (uint64_t)v15, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4((uint64_t)v18, (uint64_t)v12, type metadata accessor for SharedTranslations.Translation);
      if ((v31 & 1) == 0)
        break;
      v61 = v27;
      v62 = v29;
      v32 = (uint64_t)v18;
      v33 = (uint64_t)v9;
      v34 = v63;
      v35 = MEMORY[0x1D82462A4](&v15[*(int *)(v63 + 20)], &v12[*(int *)(v63 + 20)]);
      v36 = v12;
      sub_1D2CD3734((uint64_t)v12, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734((uint64_t)v15, type metadata accessor for SharedTranslations.Translation);
      v37 = (uint64_t)v26;
      sub_1D2CDB6B4((uint64_t)v26, v33, type metadata accessor for SharedTranslations.Translation);
      v38 = v32;
      v39 = v58;
      sub_1D2CDB6B4(v32, v58, type metadata accessor for SharedTranslations.Translation);
      if ((v35 & 1) == 0)
        goto LABEL_21;
      v40 = *(int *)(v34 + 24);
      v41 = *(_QWORD *)(v33 + v40);
      v42 = *(_QWORD *)(v33 + v40 + 8);
      v43 = (_QWORD *)(v39 + v40);
      v44 = v41 == *v43 && v42 == v43[1];
      v9 = (char *)v33;
      if (v44)
      {
        sub_1D2CD3734(v33, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734(v39, type metadata accessor for SharedTranslations.Translation);
        v26 = (char *)v37;
        v46 = v59;
        sub_1D2CDB6B4(v37, v59, type metadata accessor for SharedTranslations.Translation);
        v18 = (char *)v32;
        v47 = v60;
        sub_1D2CDB6B4(v32, v60, type metadata accessor for SharedTranslations.Translation);
        v12 = v36;
        v48 = v62;
      }
      else
      {
        v45 = sub_1D2D9E52C();
        sub_1D2CD3734(v33, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734(v39, type metadata accessor for SharedTranslations.Translation);
        v26 = (char *)v37;
        v46 = v59;
        sub_1D2CDB6B4(v37, v59, type metadata accessor for SharedTranslations.Translation);
        v18 = (char *)v32;
        v47 = v60;
        sub_1D2CDB6B4(v32, v60, type metadata accessor for SharedTranslations.Translation);
        v12 = v36;
        v48 = v62;
        if ((v45 & 1) == 0)
          goto LABEL_22;
      }
      v49 = *(int *)(v63 + 28);
      v50 = *(_QWORD *)(v46 + v49);
      v51 = *(_QWORD *)(v46 + v49 + 8);
      v52 = (_QWORD *)(v47 + v49);
      if (v50 == *v52 && v51 == v52[1])
      {
        sub_1D2CD3734(v46, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734(v47, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
      }
      else
      {
        v30 = sub_1D2D9E52C();
        sub_1D2CD3734(v46, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734(v47, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
        sub_1D2CD3734((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
        if ((v30 & 1) == 0)
          return 0;
      }
      v15 = v55;
      v29 = v48 + v54;
      v27 = v61 - 1;
      a1 = v56;
      a2 = v57;
      if (v61 == 1)
        return 1;
    }
    sub_1D2CD3734((uint64_t)v12, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v15, type metadata accessor for SharedTranslations.Translation);
    v37 = (uint64_t)v26;
    sub_1D2CDB6B4((uint64_t)v26, (uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
    v38 = (uint64_t)v18;
    v39 = v58;
    sub_1D2CDB6B4((uint64_t)v18, v58, type metadata accessor for SharedTranslations.Translation);
    v33 = (uint64_t)v9;
LABEL_21:
    sub_1D2CD3734(v33, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734(v39, type metadata accessor for SharedTranslations.Translation);
    v26 = (char *)v37;
    v46 = v59;
    sub_1D2CDB6B4(v37, v59, type metadata accessor for SharedTranslations.Translation);
    v18 = (char *)v38;
    v47 = v60;
    sub_1D2CDB6B4(v38, v60, type metadata accessor for SharedTranslations.Translation);
LABEL_22:
    sub_1D2CD3734(v46, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734(v47, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
  }
  return 0;
}

uint64_t sub_1D2D31D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6F18);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v31 - v12;
  v14 = *(_QWORD *)(a2 + 16);
  if (!v14)
    return 0;
  v35 = v11;
  v15 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v16 = *(_QWORD *)(v10 + 72);
  v31[1] = a2;
  swift_bridgeObjectRetain();
  v34 = v16;
  while (1)
  {
    sub_1D2CDB6B4(v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    v17 = (uint64_t)&v7[*(int *)(v36 + 48)];
    sub_1D2CDB6B4((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    sub_1D2CDB6B4(v37, v17, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
    v19 = v18(v7, 2, v3);
    if (v19)
    {
      if (v19 == 1)
      {
        if (v18((char *)v17, 2, v3) == 1)
          goto LABEL_16;
      }
      else if (v18((char *)v17, 2, v3) == 2)
      {
        goto LABEL_16;
      }
      goto LABEL_4;
    }
    v20 = v4;
    v21 = v35;
    sub_1D2CDB6B4((uint64_t)v7, v35, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    if (!v18((char *)v17, 2, v3))
      break;
    v22 = v21;
    v4 = v20;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v3);
    v16 = v34;
LABEL_4:
    sub_1D2CCADA4((uint64_t)v7, &qword_1EFCA6F18);
LABEL_5:
    sub_1D2CD3734((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    v15 += v16;
    if (!--v14)
    {
      v29 = 0;
      goto LABEL_17;
    }
  }
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  v24 = v20;
  v25 = v32;
  v23(v32, v17, v3);
  v33 = MEMORY[0x1D82462A4](v21, v25);
  v26 = v24;
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  v27(v25, v3);
  v28 = v21;
  v4 = v26;
  v27((char *)v28, v3);
  v16 = v34;
  if ((v33 & 1) == 0)
  {
    sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
    goto LABEL_5;
  }
LABEL_16:
  sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  sub_1D2CD3734((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
  v29 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1D2D3203C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;
  int v46;
  int *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v47 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1E0C80A78](v47);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - v5;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v45 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v45 - v21;
  v23 = *(_QWORD *)(a2 + 16);
  if (!v23)
    return 0;
  v50 = v20;
  v52 = v19;
  v24 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v48 = *(_QWORD *)(v18 + 72);
  v45 = a2;
  swift_bridgeObjectRetain();
  v49 = v6;
  v51 = v13;
  do
  {
    sub_1D2CDB6B4(v24, (uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
    v28 = MEMORY[0x1D82462A4](v22, a1);
    sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a1, (uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
    if ((v28 & 1) == 0)
    {
      sub_1D2CD3734((uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734((uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
      v32 = v50;
      sub_1D2CDB6B4(a1, v50, type metadata accessor for SharedTranslations.Translation);
LABEL_14:
      sub_1D2CD3734((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734(v32, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v6, type metadata accessor for SharedTranslations.Translation);
      v38 = v52;
      sub_1D2CDB6B4(a1, v52, type metadata accessor for SharedTranslations.Translation);
      v13 = v51;
LABEL_15:
      sub_1D2CD3734((uint64_t)v6, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734(v38, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
      goto LABEL_4;
    }
    v29 = MEMORY[0x1D82462A4](&v16[v47[5]], &v13[v47[5]]);
    v30 = (uint64_t)v13;
    v31 = v29;
    sub_1D2CD3734(v30, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
    v32 = v50;
    sub_1D2CDB6B4(a1, v50, type metadata accessor for SharedTranslations.Translation);
    if ((v31 & 1) == 0)
      goto LABEL_14;
    v33 = v47[6];
    v34 = *(_QWORD *)&v10[v33];
    v35 = *(_QWORD *)&v10[v33 + 8];
    v36 = (_QWORD *)(v32 + v33);
    if (v34 == *v36 && v35 == v36[1])
    {
      sub_1D2CD3734((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734(v32, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v6, type metadata accessor for SharedTranslations.Translation);
      v38 = v52;
      sub_1D2CDB6B4(a1, v52, type metadata accessor for SharedTranslations.Translation);
      v13 = v51;
    }
    else
    {
      v46 = sub_1D2D9E52C();
      sub_1D2CD3734((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734(v32, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CDB6B4((uint64_t)v22, (uint64_t)v6, type metadata accessor for SharedTranslations.Translation);
      v38 = v52;
      sub_1D2CDB6B4(a1, v52, type metadata accessor for SharedTranslations.Translation);
      v13 = v51;
      if ((v46 & 1) == 0)
        goto LABEL_15;
    }
    v39 = v47[7];
    v40 = *(_QWORD *)&v6[v39];
    v41 = *(_QWORD *)&v6[v39 + 8];
    v42 = (_QWORD *)(v38 + v39);
    if (v40 == *v42 && v41 == v42[1])
    {
      sub_1D2CD3734((uint64_t)v6, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734(v38, type metadata accessor for SharedTranslations.Translation);
      sub_1D2CD3734((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
LABEL_20:
      v43 = 1;
      goto LABEL_22;
    }
    v25 = sub_1D2D9E52C();
    v26 = (uint64_t)v6;
    v27 = v25;
    sub_1D2CD3734(v26, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734(v38, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
    if ((v27 & 1) != 0)
      goto LABEL_20;
LABEL_4:
    v6 = v49;
    v24 += v48;
    --v23;
  }
  while (v23);
  v43 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1D2D32468(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_1D2D324DC()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  return *v1;
}

void sub_1D2D3257C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1D2D325CC(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1D2D3262C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D2D3274C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  return sub_1D2D3279C(v3, a1);
}

uint64_t sub_1D2D3279C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D328E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D32938(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1D2D32938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D32980(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D3279C(a1, (uint64_t)v6);
  v7 = *a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D32938((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t (*sub_1D2D32A2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D2D32A70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D32AD8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2D32B20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D2D32B70())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D2D32BB4@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1D2D38A30;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1D2CCCEF0(v4);
}

uint64_t sub_1D2D32C48(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1D2D38A30;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1D2CCCEF0(v3);
  return sub_1D2CCCF1C(v8);
}

uint64_t sub_1D2D32D00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  v2 = *v1;
  sub_1D2CCCEF0(*v1);
  return v2;
}

uint64_t sub_1D2D32D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1D2CCCF1C(v6);
}

uint64_t (*sub_1D2D32DB4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static SharedTranslations.translationGroupSharedTranslations()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  id v23;
  id v24;
  uint64_t v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_1D2D9DCB0();
  v17 = objc_msgSend(v15, sel_containerURLForSecurityApplicationGroupIdentifier_, v16);

  if (v17)
  {
    sub_1D2D9C624();

    v18 = sub_1D2D9C648();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 0, 1, v18);
  }
  else
  {
    v18 = sub_1D2D9C648();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  sub_1D2D330A8((uint64_t)v11, (uint64_t)v14);
  sub_1D2D3279C((uint64_t)v14, (uint64_t)v5);
  sub_1D2D9C648();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v5, 1, v18) == 1)
  {
    sub_1D2CCADA4((uint64_t)v5, (uint64_t *)&unk_1ED586240);
    v21 = 1;
  }
  else
  {
    sub_1D2D9C618();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v8, v21, 1, v18);
  sub_1D2D3279C((uint64_t)v8, (uint64_t)v2);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v2, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v23 = objc_allocWithZone((Class)type metadata accessor for SharedTranslations(0));
    v24 = SharedTranslations.init(_:)((uint64_t)v2);
    sub_1D2CCADA4((uint64_t)v8, (uint64_t *)&unk_1ED586240);
    sub_1D2CCADA4((uint64_t)v14, (uint64_t *)&unk_1ED586240);
    return (uint64_t)v24;
  }
  return result;
}

uint64_t sub_1D2D330A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id SharedTranslations.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SharedTranslations.init(_:)(a1);
}

uint64_t type metadata accessor for SharedTranslations(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1ED586970);
}

id SharedTranslations.init(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  objc_super v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue;
  v10 = (void *)objc_opt_self();
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, sel_mainQueue);
  v12 = &v11[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL];
  v13 = sub_1D2D9C648();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v12, 1, 1, v13);
  *(_QWORD *)&v11[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations] = MEMORY[0x1E0DEE9D8];
  v16 = &v11[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  objc_msgSend(v18, sel_setQualityOfService_, 25);
  *(_QWORD *)&v11[v17] = v18;

  v19 = (objc_class *)type metadata accessor for SharedTranslations(0);
  v34.receiver = v11;
  v34.super_class = v19;
  v20 = objc_msgSendSuper2(&v34, sel_init);
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v23 = objc_msgSend(v21, sel_defaultManager);
  sub_1D2D9C630();
  v24 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  LOBYTE(v20) = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if ((v20 & 1) == 0)
  {
    if (qword_1ED586A58 != -1)
      swift_once();
    v25 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED588698);
    v26 = sub_1D2D9C8DC();
    v27 = sub_1D2D9E01C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D2CC0000, v26, v27, "Shared translations file doesn't exist, creating empty file", v28, 2u);
      MEMORY[0x1D8248974](v28, -1, -1);
    }

    sub_1D2D36030();
  }
  objc_msgSend((id)objc_opt_self(), sel_addFilePresenter_, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v8, a1, v13);
  v15(v8, 0, 1, v13);
  v29 = (uint64_t)v22 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D32938((uint64_t)v8, v29);
  swift_endAccess();
  v30 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = v22;
  sub_1D2D06D10((uint64_t)v5, (uint64_t)&unk_1EFCA7B28, (uint64_t)v31);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v22;
}

uint64_t sub_1D2D334E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[13] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  v4[14] = swift_task_alloc();
  v5 = sub_1D2D9C648();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D33564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D3279C(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D2CCADA4(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_1ED586240);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    return swift_task_switch();
  }
}

uint64_t sub_1D2D3363C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[17];
  v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_1D2D3369C;
  v3 = swift_continuation_init();
  sub_1D2D33C2C(v3, v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1D2D3369C()
{
  return swift_task_switch();
}

id SharedTranslations.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_1D2D337DC();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedTranslations(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2D337DC()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = sub_1D2D9DB24();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9DB48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C20);
  v9 = (void *)sub_1D2D9E094();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_1D2D377E4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D32468;
  aBlock[3] = &block_descriptor_4;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  sub_1D2D9DB3C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D2CC66E4(&qword_1ED586B78, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BC0);
  sub_1D2D37830();
  sub_1D2D9E22C();
  MEMORY[0x1D8247BF4](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D2D339D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[13] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  v1[14] = swift_task_alloc();
  v2 = sub_1D2D9C648();
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D33A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D3279C(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D2CCADA4(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_1ED586240);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    return swift_task_switch();
  }
}

uint64_t sub_1D2D33B34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[17];
  v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_1D2D33B94;
  v3 = swift_continuation_init();
  sub_1D2D33C2C(v3, v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1D2D33B94()
{
  return swift_task_switch();
}

uint64_t sub_1D2D33BE0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D2D33C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1D2D9C60C();
  v7 = objc_msgSend(v5, sel_readingIntentWithURL_options_, v6, 1);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_initWithFilePresenter_, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D2DA3B40;
  *(_QWORD *)(v9 + 32) = v7;
  v17[0] = v9;
  sub_1D2D9DE78();
  sub_1D2CC63E8(0, &qword_1ED586C30);
  v10 = v7;
  v11 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a3 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = v10;
  v17[4] = sub_1D2D38BF8;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1D2CFD618;
  v17[3] = &block_descriptor_52;
  v15 = _Block_copy(v17);
  v16 = v10;
  swift_release();
  objc_msgSend(v8, sel_coordinateAccessWithIntents_queue_byAccessor_, v11, v12, v15);
  _Block_release(v15);

}

void sub_1D2D33E18(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;

  v7 = sub_1D2D9C648();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = MEMORY[0x1D8248A10](a2 + 16);
  if (!v11)
  {
    swift_continuation_throwingResume();
    return;
  }
  v12 = (char *)v11;
  if (a1)
  {
    if (qword_1ED586A58 != -1)
      swift_once();
    v13 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED588698);
    v14 = a1;
    v15 = sub_1D2D9C8DC();
    v16 = sub_1D2D9E034();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v19 = sub_1D2D9C5F4();
      v37 = v19;
      sub_1D2D9E1B4();
      *v18 = v19;

      _os_log_impl(&dword_1D2CC0000, v15, v16, "Failed to load shared translations from disk: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v18, -1, -1);
      MEMORY[0x1D8248974](v17, -1, -1);
    }
    else
    {

    }
    goto LABEL_10;
  }
  v20 = objc_msgSend(a4, sel_URL);
  sub_1D2D9C624();

  v21 = sub_1D2D9C654();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1D2D9C504();
  swift_allocObject();
  sub_1D2D9C4F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B90);
  sub_1D2D38B38(&qword_1ED586BA0, &qword_1ED5868B8, (uint64_t)&protocol conformance descriptor for SharedTranslations.Translation, MEMORY[0x1E0DEAF40]);
  sub_1D2D9C4EC();
  v24 = v37;
  v25 = &v12[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations];
  swift_beginAccess();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_1D2D31880(v26, v24);
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED586A58 != -1)
      swift_once();
    v28 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED588698);
    v15 = sub_1D2D9C8DC();
    v29 = sub_1D2D9E01C();
    if (!os_log_type_enabled(v15, v29))
      goto LABEL_22;
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1D2CC0000, v15, v29, "Did not load translations from disk because no changes", v30, 2u);
    v31 = v30;
  }
  else
  {
    *(_QWORD *)v25 = v24;
    swift_bridgeObjectRelease();
    if (qword_1ED586A58 != -1)
      swift_once();
    v32 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED588698);
    v33 = v12;
    v15 = sub_1D2D9C8DC();
    v34 = sub_1D2D9E01C();
    if (!os_log_type_enabled(v15, v34))
    {

      goto LABEL_22;
    }
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134217984;
    v36 = *(_QWORD *)(*(_QWORD *)v25 + 16);
    sub_1D2D9E1B4();

    _os_log_impl(&dword_1D2CC0000, v15, v34, "Loaded %ld translations from disk", v35, 0xCu);
    v31 = v35;
  }
  MEMORY[0x1D8248974](v31, -1, -1);
LABEL_22:
  swift_release();
  sub_1D2CDB760(v21, v23);
LABEL_10:

  swift_continuation_throwingResume();
}

uint64_t sub_1D2D34468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for SharedTranslations.Translation(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9C648();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D3279C(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1D2CCADA4((uint64_t)v10, (uint64_t *)&unk_1ED586240);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v39 = a1;
  v17 = objc_opt_self();
  v40 = v11;
  v18 = (void *)v17;
  v19 = (void *)sub_1D2D9C60C();
  v20 = objc_msgSend(v18, sel_readingIntentWithURL_options_, v19, 0);

  v21 = (void *)sub_1D2D9C60C();
  v22 = objc_msgSend(v18, sel_writingIntentWithURL_options_, v21, 4);
  v37 = v5;
  v23 = v22;

  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_initWithFilePresenter_, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1D2DA3B50;
  *(_QWORD *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 40) = v23;
  aBlock[0] = v24;
  sub_1D2D9DE78();
  sub_1D2CC63E8(0, &qword_1ED586C30);
  v25 = v20;
  v26 = v23;
  v27 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D2CDB6B4(v39, (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharedTranslations.Translation);
  v29 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v28;
  *(_QWORD *)(v31 + 24) = v25;
  sub_1D2D37990((uint64_t)v7, v31 + v29);
  *(_QWORD *)(v31 + v30) = v26;
  aBlock[4] = sub_1D2D379D4;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2CFD618;
  aBlock[3] = &block_descriptor_13;
  v32 = _Block_copy(aBlock);
  v33 = v25;
  v34 = v26;
  swift_release();
  v35 = v38;
  objc_msgSend(v38, sel_coordinateAccessWithIntents_queue_byAccessor_, v27, v36, v32);
  _Block_release(v32);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v40);
}

void sub_1D2D3481C(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint8_t *v48;
  uint8_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  char *v60;
  unint64_t v61;
  _QWORD v62[2];
  int v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, unint64_t);
  char *v71;
  uint64_t v72;
  char *v73;
  id v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  _QWORD aBlock[7];

  v74 = a5;
  v76 = a4;
  v8 = sub_1D2D9DB24();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D2D9DB48();
  v72 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v71 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharedTranslations.Translation(0);
  v77 = *(_QWORD **)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v75 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1D2D9C648();
  v16 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v62 - v19;
  swift_beginAccess();
  v21 = MEMORY[0x1D8248A10](a2 + 16);
  if (v21)
  {
    v22 = (void *)v21;
    if (a1)
    {
      if (qword_1ED586A58 != -1)
        swift_once();
      v23 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED588698);
      v24 = a1;
      v25 = a1;
      v26 = sub_1D2D9C8DC();
      v27 = sub_1D2D9E034();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v28 = 138412290;
        v30 = sub_1D2D9C5F4();
        aBlock[0] = v30;
        sub_1D2D9E1B4();
        *v29 = v30;

        _os_log_impl(&dword_1D2CC0000, v26, v27, "Failed to write translations to disk: %@", v28, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v29, -1, -1);
        MEMORY[0x1D8248974](v28, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v68 = v12;
      v69 = v11;
      v31 = objc_msgSend(a3, sel_URL);
      sub_1D2D9C624();

      v32 = sub_1D2D9C654();
      v34 = v33;
      v70 = *(void (**)(char *, unint64_t))(v16 + 8);
      v70(v20, v78);
      sub_1D2D9C504();
      swift_allocObject();
      v35 = sub_1D2D9C4F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B90);
      sub_1D2D38B38(&qword_1ED586BA0, &qword_1ED5868B8, (uint64_t)&protocol conformance descriptor for SharedTranslations.Translation, MEMORY[0x1E0DEAF40]);
      sub_1D2D9C4EC();
      v66 = v32;
      v61 = aBlock[0];
      v43 = (uint64_t)v75;
      if (qword_1ED586A58 != -1)
        swift_once();
      v44 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v44, (uint64_t)qword_1ED588698);
      v67 = v22;
      v45 = sub_1D2D9C8DC();
      v46 = sub_1D2D9E01C();
      v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        v64 = v45;
        v48 = (uint8_t *)swift_slowAlloc();
        v63 = v47;
        v49 = v48;
        v65 = v35;
        *(_DWORD *)v48 = 134217984;
        v62[1] = v48 + 4;
        v50 = &v67[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations];
        swift_beginAccess();
        v51 = *(_QWORD *)v50;
        v45 = v64;
        aBlock[0] = *(_QWORD *)(v51 + 16);
        sub_1D2D9E1B4();

        _os_log_impl(&dword_1D2CC0000, v45, (os_log_type_t)v63, "Read %ld translations from disk", v49, 0xCu);
        MEMORY[0x1D8248974](v49, -1, -1);
      }
      else
      {

      }
      swift_release();
      sub_1D2CDB760(v66, v34);

      sub_1D2CDB6B4(v76, v43, type metadata accessor for SharedTranslations.Translation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v61 = sub_1D2D4AB14(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
      v37 = *(_QWORD *)(v61 + 16);
      v36 = *(_QWORD *)(v61 + 24);
      if (v37 >= v36 >> 1)
        v61 = sub_1D2D4AB14(v36 > 1, v37 + 1, 1, v61);
      *(_QWORD *)(v61 + 16) = v37 + 1;
      sub_1D2D37990(v43, v61+ ((*((unsigned __int8 *)v77 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v77 + 80))+ v77[9] * v37);
      sub_1D2D9C558();
      swift_allocObject();
      sub_1D2D9C54C();
      aBlock[0] = v61;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B90);
      sub_1D2D38B38(&qword_1ED586B98, &qword_1ED5868B0, (uint64_t)&protocol conformance descriptor for SharedTranslations.Translation, MEMORY[0x1E0DEAF10]);
      v38 = sub_1D2D9C540();
      v40 = v39;
      swift_bridgeObjectRelease();
      v41 = objc_msgSend(v74, sel_URL);
      v42 = v73;
      sub_1D2D9C624();

      sub_1D2D9C66C();
      v70(v42, v78);
      if (qword_1ED586A58 != -1)
        swift_once();
      v78 = v40;
      v52 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v52, (uint64_t)qword_1ED588698);
      swift_bridgeObjectRetain();
      v53 = sub_1D2D9C8DC();
      v54 = sub_1D2D9E04C();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v55 = 134217984;
        aBlock[0] = *(_QWORD *)(v61 + 16);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2CC0000, v53, v54, "Wrote total of %ld (already on disk + 1) shared translations to disk", v55, 0xCu);
        MEMORY[0x1D8248974](v55, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      sub_1D2CC63E8(0, (unint64_t *)&qword_1ED586C20);
      v56 = (void *)sub_1D2D9E094();
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v61;
      *(_QWORD *)(v57 + 24) = v22;
      aBlock[4] = sub_1D2D38B30;
      aBlock[5] = v57;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D2D32468;
      aBlock[3] = &block_descriptor_45;
      v58 = _Block_copy(aBlock);
      v77 = v22;
      swift_release();
      v59 = v71;
      sub_1D2D9DB3C();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1D2CC66E4(&qword_1ED586B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BC0);
      sub_1D2D37830();
      v60 = v69;
      sub_1D2D9E22C();
      MEMORY[0x1D8247BF4](0, v59, v60, v58);
      _Block_release(v58);

      sub_1D2CDB760(v38, v78);
      swift_release();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v60, v8);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v59, v68);
    }
  }
}

uint64_t sub_1D2D35498(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t result;

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  v5 = sub_1D2D31880(a1, v4);
  result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    *v3 = a1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2D35524(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1D2D3203C(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_1D2D35590()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  v1[9] = swift_task_alloc();
  v2 = sub_1D2D9C648();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D35614()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  if (qword_1ED586A58 != -1)
    swift_once();
  v1 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED588698);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E04C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Clearing loaded translations then disk", v4, 2u);
    MEMORY[0x1D8248974](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);

  v9 = (_QWORD *)(v8 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *v9 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v10 = v8 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D3279C(v10, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_1D2CCADA4(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_1ED586240);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(v12, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v14 = swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v14;
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = v13;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v15;
    *v15 = v0;
    v15[1] = sub_1D2D35858;
    return sub_1D2D9E514();
  }
}

uint64_t sub_1D2D35858()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D358B4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D2D35900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v22 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1D2D9C60C();
  v10 = objc_msgSend(v8, sel_writingIntentWithURL_options_, v9, 4);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_initWithFilePresenter_, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D2DA3B40;
  *(_QWORD *)(v12 + 32) = v10;
  aBlock[0] = v12;
  sub_1D2D9DE78();
  sub_1D2CC63E8(0, &qword_1ED586C30);
  v13 = v10;
  v14 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a3 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, v4);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = (v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v16, v7, v4);
  *(_QWORD *)(v18 + v17) = v13;
  aBlock[4] = sub_1D2D38AB0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2CFD618;
  aBlock[3] = &block_descriptor_39;
  v19 = _Block_copy(aBlock);
  v20 = v13;
  swift_release();
  objc_msgSend(v11, sel_coordinateAccessWithIntents_queue_byAccessor_, v14, v15, v19);
  _Block_release(v19);

}

uint64_t sub_1D2D35B4C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = sub_1D2D9C648();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_1ED586A58 != -1)
      swift_once();
    v9 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED588698);
    v10 = a1;
    v11 = sub_1D2D9C8DC();
    v12 = sub_1D2D9E034();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v15 = sub_1D2D9C5F4();
      v25 = v15;
      sub_1D2D9E1B4();
      *v14 = v15;

      _os_log_impl(&dword_1D2CC0000, v11, v12, "Failed to remove translations from disk: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v14, -1, -1);
      MEMORY[0x1D8248974](v13, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    sub_1D2D9C558();
    swift_allocObject();
    sub_1D2D9C54C();
    v25 = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B90);
    sub_1D2D38B38(&qword_1ED586B98, &qword_1ED5868B0, (uint64_t)&protocol conformance descriptor for SharedTranslations.Translation, MEMORY[0x1E0DEAF10]);
    v16 = sub_1D2D9C540();
    v18 = v17;
    v19 = objc_msgSend(a3, sel_URL);
    sub_1D2D9C624();

    sub_1D2D9C66C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (qword_1ED586A58 != -1)
      swift_once();
    v21 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED588698);
    v11 = sub_1D2D9C8DC();
    v22 = sub_1D2D9E04C();
    if (os_log_type_enabled(v11, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D2CC0000, v11, v22, "Cleared shared translations from disk", v23, 2u);
      MEMORY[0x1D8248974](v23, -1, -1);
    }
    sub_1D2CDB760(v16, v18);
    swift_release();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE8);
  return sub_1D2D9DECC();
}

void sub_1D2D36030()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  NSObject *v13;
  id v14;
  id v15;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_initWithFilePresenter_, v0);
  v2 = (id)sub_1D2D9C60C();
  aBlock[4] = sub_1D2D365C0;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D2D365C4;
  aBlock[3] = &block_descriptor_55;
  v3 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v1, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v2, 0, aBlock, v3);
  _Block_release(v3);

  v4 = aBlock[0];
  v5 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (!v5)
    goto LABEL_8;
  v6 = qword_1ED586A58;
  v2 = v5;
  if (v6 != -1)
    goto LABEL_10;
LABEL_4:
  v7 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED588698);
  v8 = v2;
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E034();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v14 = v4;
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    aBlock[0] = v8;
    v15 = v1;
    v13 = v8;
    sub_1D2D9E1B4();
    *v12 = v14;

    _os_log_impl(&dword_1D2CC0000, v9, v10, "Failed to create empty SharedFavorites.json file: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v12, -1, -1);
    MEMORY[0x1D8248974](v11, -1, -1);
    v8 = v9;
    v9 = v13;
    v1 = v15;
  }
  else
  {

  }
LABEL_8:

}

uint64_t sub_1D2D362F8()
{
  return objectdestroyTm_7((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1D2D36304(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D334E0(a1, v4, v5, v6);
}

uint64_t sub_1D2D36370()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2D9C558();
  swift_allocObject();
  sub_1D2D9C54C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586B90);
  sub_1D2D38B38(&qword_1ED586B98, &qword_1ED5868B0, (uint64_t)&protocol conformance descriptor for SharedTranslations.Translation, MEMORY[0x1E0DEAF10]);
  v0 = sub_1D2D9C540();
  v2 = v1;
  sub_1D2D9C66C();
  sub_1D2CDB760(v0, v2);
  return swift_release();
}

uint64_t sub_1D2D365C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1D2D9C648();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1D2D9C624();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D2D36658()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED586A58 != -1)
    swift_once();
  v5 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED588698);
  v6 = sub_1D2D9C8DC();
  v7 = sub_1D2D9E01C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1D2CC0000, v6, v7, "File update detected", v8, 2u);
    MEMORY[0x1D8248974](v8, -1, -1);
  }

  v9 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  v11 = v1;
  sub_1D2D06D10((uint64_t)v4, (uint64_t)&unk_1EFCA7B48, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1D2D367CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[16] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  v4[17] = swift_task_alloc();
  v5 = sub_1D2D9C648();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D36850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (**v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1D2D3279C(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D2CCADA4(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1ED586240);
    v5 = (void (**)(uint64_t))(*(_QWORD *)(v0 + 128)
                                       + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
    swift_beginAccess();
    v6 = *v5;
    if (*v5)
    {
      v7 = swift_retain();
      v6(v7);
      sub_1D2CCCF1C((uint64_t)v6);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    return swift_task_switch();
  }
}

uint64_t sub_1D2D36974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[20];
  v2 = v0[16];
  v0[2] = v0;
  v0[3] = sub_1D2D369D4;
  v3 = swift_continuation_init();
  sub_1D2D33C2C(v3, v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1D2D369D4()
{
  return swift_task_switch();
}

uint64_t sub_1D2D36A20()
{
  uint64_t v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  v1 = (void (**)(uint64_t))(*(_QWORD *)(v0 + 128)
                                     + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    v3 = swift_retain();
    v2(v3);
    sub_1D2CCCF1C((uint64_t)v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id SharedTranslations.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharedTranslations.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t SharedTranslations.Translation.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SharedTranslations.Translation.sourceLocale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SharedTranslations.Translation.sourceLocale.modify())()
{
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 20);
  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SharedTranslations.Translation.targetLocale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 20);
  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*SharedTranslations.Translation.targetLocale.modify())(double, double)
{
  type metadata accessor for SharedTranslations.Translation(0);
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.sourceText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedTranslations.Translation.sourceText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*SharedTranslations.Translation.sourceText.modify())(double, double)
{
  type metadata accessor for SharedTranslations.Translation(0);
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.targetText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedTranslations.Translation.targetText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*SharedTranslations.Translation.targetText.modify())(double, double)
{
  type metadata accessor for SharedTranslations.Translation(0);
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.init(sourceLocale:targetLocale:sourceText:targetText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;

  v14 = sub_1D2D9C7EC();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(a7, a1, v14);
  v16 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(a7 + v16[5], a2, v14);
  v18 = (_QWORD *)(a7 + v16[6]);
  *v18 = a3;
  v18[1] = a4;
  v19 = (_QWORD *)(a7 + v16[7]);
  *v19 = a5;
  v19[1] = a6;
  return result;
}

uint64_t SharedTranslations.Translation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v34[2];
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v37 = a2;
  v3 = sub_1D2D9C7EC();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - v6;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7B50);
  v8 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D37AA8();
  v41 = v10;
  v14 = v42;
  sub_1D2D9E610();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v35 = v7;
  v15 = v8;
  v16 = (uint64_t)a1;
  v42 = v11;
  v46 = 2;
  v17 = v40;
  v18 = sub_1D2D9E430();
  v19 = v42;
  v20 = (uint64_t *)&v13[*(int *)(v42 + 24)];
  *v20 = v18;
  v20[1] = v21;
  v45 = 3;
  v22 = sub_1D2D9E430();
  v34[1] = v20;
  v23 = (uint64_t *)&v13[*(int *)(v19 + 28)];
  *v23 = v22;
  v23[1] = v24;
  v44 = 0;
  v25 = v41;
  sub_1D2D9E430();
  v26 = v35;
  sub_1D2D9C708();
  v27 = v13;
  v28 = v26;
  v29 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v30 = (uint64_t)v13;
  v31 = v39;
  v29(v27, v28, v39);
  v43 = 1;
  sub_1D2D9E430();
  v32 = v36;
  sub_1D2D9C708();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v17);
  v29((char *)(v30 + *(int *)(v42 + 20)), v32, v31);
  sub_1D2CDB6B4(v30, v37, type metadata accessor for SharedTranslations.Translation);
  __swift_destroy_boxed_opaque_existential_0(v16);
  return sub_1D2CD3734(v30, type metadata accessor for SharedTranslations.Translation);
}

uint64_t SharedTranslations.Translation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA7B60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D37AA8();
  sub_1D2D9E61C();
  sub_1D2D9C714();
  v8[15] = 0;
  sub_1D2D9E4A8();
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for SharedTranslations.Translation(0);
    sub_1D2D9C714();
    v8[14] = 1;
    sub_1D2D9E4A8();
    swift_bridgeObjectRelease();
    v8[13] = 2;
    sub_1D2D9E4A8();
    v8[12] = 3;
    sub_1D2D9E4A8();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_1D2D373D4(char *a1)
{
  sub_1D2D2C400(*a1);
}

void sub_1D2D373E0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D37434()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D3749C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D374E0()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D37534()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D37584()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D375EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D389C4();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D37618()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2D37650 + 4 * byte_1D2DA3B6C[*v0]))();
}

void sub_1D2D37650(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6F4C746567726174;
  a1[1] = v1;
}

void sub_1D2D37668(_QWORD *a1@<X8>)
{
  *a1 = 0x6554656372756F73;
  a1[1] = 0xEA00000000007478;
}

uint64_t sub_1D2D37698()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D376D0 + 4 * byte_1D2DA3B70[*v0]))(0x6F4C656372756F73, 0xEC000000656C6163);
}

uint64_t sub_1D2D376D0()
{
  return 0x6F4C746567726174;
}

uint64_t sub_1D2D376E4()
{
  return 0x6554656372756F73;
}

uint64_t sub_1D2D37710@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D389C4();
  *a1 = result;
  return result;
}

void sub_1D2D37734(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D2D37740()
{
  sub_1D2D37AA8();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D37768()
{
  sub_1D2D37AA8();
  return sub_1D2D9E634();
}

uint64_t sub_1D2D37794@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SharedTranslations.Translation.init(from:)(a1, a2);
}

uint64_t sub_1D2D377A8(_QWORD *a1)
{
  return SharedTranslations.Translation.encode(to:)(a1);
}

uint64_t sub_1D2D377C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D2D377E4()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(), sel_removeFilePresenter_, *(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_1D2D37830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED586BC8;
  if (!qword_1ED586BC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586BC0);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED586BC8);
  }
  return result;
}

uint64_t type metadata accessor for SharedTranslations.Translation(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1ED5868C0);
}

uint64_t sub_1D2D37890()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2D378B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = type metadata accessor for SharedTranslations.Translation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  v5 = v0 + v3;
  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v1 + 20), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D2D37990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedTranslations.Translation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2D379D4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SharedTranslations.Translation(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1D2D3481C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1D2D37A28(uint64_t a1)
{
  uint64_t v1;

  sub_1D2D35900(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D2D37A30()
{
  return objectdestroyTm_7((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1D2D37A3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D367CC(a1, v4, v5, v6);
}

unint64_t sub_1D2D37AA8()
{
  unint64_t result;

  result = qword_1EFCA7B58;
  if (!qword_1EFCA7B58)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3D84, &type metadata for SharedTranslations.Translation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA7B58);
  }
  return result;
}

uint64_t _s13TranslationUI18SharedTranslationsC0A0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;

  v4 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v38 - v20;
  v22 = MEMORY[0x1D82462A4](a1, a2, v19);
  sub_1D2CDB6B4(a1, (uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
  sub_1D2CDB6B4(a2, (uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
  if ((v22 & 1) == 0)
  {
    sub_1D2CD3734((uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a1, (uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a2, (uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    goto LABEL_10;
  }
  v23 = MEMORY[0x1D82462A4](&v21[v4[5]], &v17[v4[5]]);
  sub_1D2CD3734((uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
  sub_1D2CD3734((uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
  sub_1D2CDB6B4(a1, (uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
  sub_1D2CDB6B4(a2, (uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
  if ((v23 & 1) == 0)
  {
LABEL_10:
    sub_1D2CD3734((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    v30 = v39;
    sub_1D2CDB6B4(a2, v39, type metadata accessor for SharedTranslations.Translation);
    v31 = 0;
    goto LABEL_11;
  }
  v24 = v4[6];
  v25 = *(_QWORD *)&v14[v24];
  v26 = *(_QWORD *)&v14[v24 + 8];
  v27 = &v11[v24];
  if (v25 == *(_QWORD *)v27 && v26 == *((_QWORD *)v27 + 1))
  {
    sub_1D2CD3734((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    v30 = v39;
    sub_1D2CDB6B4(a2, v39, type metadata accessor for SharedTranslations.Translation);
  }
  else
  {
    v29 = sub_1D2D9E52C();
    sub_1D2CD3734((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CD3734((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1D2CDB6B4(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    v30 = v39;
    sub_1D2CDB6B4(a2, v39, type metadata accessor for SharedTranslations.Translation);
    v31 = 0;
    if ((v29 & 1) == 0)
      goto LABEL_11;
  }
  v33 = v4[7];
  v34 = *(_QWORD *)&v8[v33];
  v35 = *(_QWORD *)&v8[v33 + 8];
  v36 = (_QWORD *)(v30 + v33);
  if (v34 == *v36 && v35 == v36[1])
    v31 = 1;
  else
    v31 = sub_1D2D9E52C();
LABEL_11:
  sub_1D2CD3734((uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
  sub_1D2CD3734(v30, type metadata accessor for SharedTranslations.Translation);
  return v31 & 1;
}

id sub_1D2D37E24@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1D2D37E78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  return sub_1D2D3279C(v3, a2);
}

uint64_t sub_1D2D37ED0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2D37F30()
{
  return type metadata accessor for SharedTranslations(0);
}

void sub_1D2D37F38()
{
  unint64_t v0;

  sub_1D2D38270();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharedTranslations()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SharedTranslations.translations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SharedTranslations.translations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SharedTranslations.translations.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SharedTranslations.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SharedTranslations.unregister()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SharedTranslations.loadTranslations()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2CE16D4;
  return v5();
}

uint64_t dispatch thunk of SharedTranslations.addTranslation(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SharedTranslations.contains(translation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SharedTranslations.clear()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2CE1A58;
  return v5();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemDidChange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

void sub_1D2D38270()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED586250)
  {
    sub_1D2D9C648();
    v0 = sub_1D2D9E1A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED586250);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedTranslations.Translation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SharedTranslations.Translation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1D2D9C7EC();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D2D9C7EC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedTranslations.Translation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D386A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedTranslations.Translation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D38730(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D2D387AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C7EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedTranslations.Translation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D2D3886C + 4 * byte_1D2DA3B79[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D2D388A0 + 4 * byte_1D2DA3B74[v4]))();
}

uint64_t sub_1D2D388A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D388A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D388B0);
  return result;
}

uint64_t sub_1D2D388BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D388C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D2D388C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D388D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedTranslations.Translation.CodingKeys()
{
  return &type metadata for SharedTranslations.Translation.CodingKeys;
}

unint64_t sub_1D2D388F0()
{
  unint64_t result;

  result = qword_1EFCA7BE0;
  if (!qword_1EFCA7BE0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3D5C, &type metadata for SharedTranslations.Translation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA7BE0);
  }
  return result;
}

unint64_t sub_1D2D38938()
{
  unint64_t result;

  result = qword_1EFCA7BE8;
  if (!qword_1EFCA7BE8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3C94, &type metadata for SharedTranslations.Translation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA7BE8);
  }
  return result;
}

unint64_t sub_1D2D38980()
{
  unint64_t result;

  result = qword_1EFCA7BF0;
  if (!qword_1EFCA7BF0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3CBC, &type metadata for SharedTranslations.Translation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA7BF0);
  }
  return result;
}

uint64_t sub_1D2D389C4()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1D2D38A0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D38A30()
{
  uint64_t v0;

  return sub_1D2D30648(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D2D38A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1D2D38AB0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED586BE8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1D2D35B4C(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D2D38B04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D2D38B30()
{
  uint64_t v0;

  return sub_1D2D35498(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D2D38B38(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586B90);
    v10 = sub_1D2CC66E4(a2, type metadata accessor for SharedTranslations.Translation, a3);
    result = MEMORY[0x1D82488A8](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2D38BBC()
{
  return objectdestroyTm_7((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroyTm_7(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

void sub_1D2D38BF8(void *a1)
{
  uint64_t v1;

  sub_1D2D33E18(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

void SheetPanel.init(content:button:)(void (*a1)(void))
{
  a1();
  type metadata accessor for SheetPanel();
}

uint64_t sub_1D2D38C94()
{
  void (*v0)(void);

  v0();
  swift_release();
  return swift_release();
}

void type metadata accessor for SheetPanel()
{
  JUMPOUT(0x1D8248824);
}

void SheetPanel.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[3];

  v27 = a2;
  v19 = *(a1 - 1);
  v3 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](a1);
  v26 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v18[1] = (char *)v18 - v5;
  v25 = *(_QWORD *)(v6 + 16);
  v7 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C18);
  v8 = sub_1D2D9CD80();
  v24 = a1[4];
  v36[0] = v24;
  v36[1] = MEMORY[0x1E0CDA1F0];
  v9 = MEMORY[0x1E0CD9C20];
  v10 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v7, v36);
  v11 = sub_1D2D390A8();
  v35[0] = v10;
  v35[1] = v11;
  MEMORY[0x1D82488A8](v9, v8, v35);
  v12 = sub_1D2D9D950();
  v13 = sub_1D2D9CD80();
  v23 = v13;
  v28 = a1[3];
  v14 = sub_1D2D9CD80();
  v15 = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v12);
  v16 = MEMORY[0x1E0CD9758];
  v34[0] = v15;
  v34[1] = MEMORY[0x1E0CD9758];
  v17 = MEMORY[0x1D82488A8](v9, v13, v34);
  v21 = v17;
  v33[0] = a1[5];
  v33[1] = v16;
  v18[0] = v33[0];
  v22 = v14;
  v20 = MEMORY[0x1D82488A8](v9, v14, v33);
  v29 = v13;
  v30 = v14;
  v31 = v17;
  v32 = v20;
  type metadata accessor for BottomPanelContainer();
}

void sub_1D2D38EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, __n128);
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v12 - 240) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v12 - 296) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v12 - 288) = (char *)&a9 - v16;
  v17 = *(_QWORD *)(v12 - 280);
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v17 + 16);
  *(_QWORD *)(v12 - 304) = v18;
  v18(v9, *(_QWORD *)(v12 - 192), v11, v15);
  v19 = v17;
  v20 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = (char *)swift_allocObject();
  v22 = *(_QWORD *)(v12 - 232);
  v23 = *(_QWORD *)(v12 - 224);
  v24 = *(_QWORD *)(v12 - 200);
  *((_QWORD *)v21 + 2) = v23;
  *((_QWORD *)v21 + 3) = v24;
  *((_QWORD *)v21 + 4) = v22;
  *((_QWORD *)v21 + 5) = v10;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  v25(&v21[v20], *(_QWORD *)(v12 - 312), v11);
  v26 = *(_QWORD *)(v12 - 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 304))(v26, *(_QWORD *)(v12 - 192), v11);
  v27 = (char *)swift_allocObject();
  v28 = *(_QWORD *)(v12 - 200);
  *((_QWORD *)v27 + 2) = v23;
  *((_QWORD *)v27 + 3) = v28;
  v29 = *(_QWORD *)(v12 - 320);
  *((_QWORD *)v27 + 4) = v22;
  *((_QWORD *)v27 + 5) = v29;
  v25(&v27[v20], v26, v11);
  BottomPanelContainer.init(content:panel:)();
}

uint64_t sub_1D2D39020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  MEMORY[0x1D82488A8](&protocol conformance descriptor for BottomPanelContainer<A, B>, v1);
  v3 = *(_QWORD *)(v2 - 288);
  v4 = v0;
  sub_1D2CCAE64(v0, v1, v3);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8);
  v5(v4, v1);
  sub_1D2CC959C(v3, v1, *(_QWORD *)(v2 - 208));
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v1);
}

unint64_t sub_1D2D390A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA6C10;
  if (!qword_1EFCA6C10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C18);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA6C10);
  }
  return result;
}

uint64_t sub_1D2D390F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[10];
  _QWORD v20[2];
  _QWORD v21[2];

  v19[1] = a6;
  v11 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C18);
  v12 = sub_1D2D9CD80();
  v21[0] = a4;
  v21[1] = MEMORY[0x1E0CDA1F0];
  v13 = MEMORY[0x1E0CD9C20];
  v20[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v11, v21);
  v20[1] = sub_1D2D390A8();
  MEMORY[0x1D82488A8](v13, v12, v20);
  v14 = sub_1D2D9D950();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v19 - v16;
  v19[4] = a2;
  v19[5] = a3;
  v19[6] = a4;
  v19[7] = a5;
  v19[8] = a1;
  sub_1D2D9D110();
  sub_1D2D9D944();
  sub_1D2D9D410();
  MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v14);
  sub_1D2D9D728();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1D2D39280()
{
  sub_1D2D3958C();
}

uint64_t sub_1D2D3928C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD v22[2];

  v20 = a2;
  v3 = sub_1D2D9CD80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C18);
  v7 = sub_1D2D9CD80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  sub_1D2D9D770();
  v22[0] = a1;
  v22[1] = MEMORY[0x1E0CDA1F0];
  v14 = MEMORY[0x1E0CD9C20];
  v15 = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v3, v22);
  sub_1D2D9D6C8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = sub_1D2D390A8();
  v21[0] = v15;
  v21[1] = v16;
  MEMORY[0x1D82488A8](v14, v7, v21);
  sub_1D2CCAE64((uint64_t)v10, v7, (uint64_t)v13);
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  sub_1D2CC959C((uint64_t)v13, v7, v20);
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
}

void sub_1D2D39448()
{
  type metadata accessor for SheetPanel();
}

uint64_t sub_1D2D39484()
{
  sub_1D2D9D410();
  return sub_1D2D9D728();
}

void objectdestroyTm_8()
{
  type metadata accessor for SheetPanel();
}

uint64_t sub_1D2D39504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 52));
  return swift_deallocObject();
}

void sub_1D2D39580()
{
  sub_1D2D3958C();
}

void sub_1D2D3958C()
{
  type metadata accessor for SheetPanel();
}

uint64_t sub_1D2D395C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v8(v1 + ((v6 + 48) & ~v6), v2, v3, v4, v5);
}

uint64_t sub_1D2D3960C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D39644()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D2D3964C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D2D396D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1D2D397A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1D2D39800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D2D3986C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D2D398D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D2D39944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D2D399B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D2D39A8C + 4 * byte_1D2DA3DD8[v17 - 1]))();
}

void sub_1D2D39B08(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1D2D39D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = sub_1D2D9CD80();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA6C18);
  v4 = sub_1D2D9CD80();
  v12[0] = v1;
  v12[1] = MEMORY[0x1E0CDA1F0];
  v5 = MEMORY[0x1E0CD9C20];
  v11[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v3, v12);
  v11[1] = sub_1D2D390A8();
  MEMORY[0x1D82488A8](v5, v4, v11);
  v6 = sub_1D2D9D950();
  v7 = sub_1D2D9CD80();
  v8 = sub_1D2D9CD80();
  v10[0] = MEMORY[0x1D82488A8](MEMORY[0x1E0CDFCC0], v6);
  v10[1] = MEMORY[0x1E0CD9758];
  v9[0] = v2;
  v9[1] = MEMORY[0x1E0CD9758];
  MEMORY[0x1D82488A8](v5, v7, v10);
  MEMORY[0x1D82488A8](v5, v8, v9);
  type metadata accessor for BottomPanelContainer();
}

uint64_t sub_1D2D39E38(uint64_t a1)
{
  return MEMORY[0x1D82488A8](&protocol conformance descriptor for BottomPanelContainer<A, B>, a1);
}

uint64_t sub_1D2D39E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D3928C(*(_QWORD *)(v1 + 32), a1);
}

_QWORD *sub_1D2D39E70(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1D2D9C894();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D2D9C870();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D2D39F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t sub_1D2D39FA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  swift_retain();
  return a1;
}

uint64_t sub_1D2D3A040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D2D3A0EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_1D2D3A184(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D2D3A228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D3A234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D2D9C894();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D2D9C870();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_1D2D3A2E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D3A2F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D2D9C894();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D2D9C870();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result;

  result = qword_1ED5872F8;
  if (!qword_1ED5872F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D3A3D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D2D9C894();
  if (v1 <= 0x3F)
  {
    result = sub_1D2D9C870();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1D2D3A46C(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D2D9C870();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for Signpost() + 24)) = 0;
  __asm { BR              X10 }
}

uint64_t sub_1D2D3A540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  NSObject *v13;
  os_signpost_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D2D9C888();
  *(_BYTE *)(v0 + *(int *)(v1 + 28)) = v5;
  v9 = v0 + *(int *)(v1 + 20);
  sub_1D2D9C87C();
  result = sub_1D2D9C858();
  if ((v6 & 1) == 0)
  {
    v11 = sub_1D2D3AC34(v5);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v12(v4, v9, v2);
    v13 = sub_1D2D9C87C();
    v14 = sub_1D2D9E0D0();
    if ((sub_1D2D9E19C() & 1) != 0)
    {
      if (!v11)
      {
        __break(1u);
        JUMPOUT(0x1D2D3A748);
      }
      v12(v3, v4, v2);
      v15 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)(v8 - 96) = v7;
      v16 = (const char *)v11;
      v17 = v15;
      *(_WORD *)v15 = 0;
      v18 = sub_1D2D9C864();
      v19 = v16;
      v7 = *(_QWORD *)(v8 - 96);
      _os_signpost_emit_with_name_impl(&dword_1D2CC0000, v13, v14, v18, v19, "", v17, 2u);
      MEMORY[0x1D8248974](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
    }
    else
    {

    }
    v12(v3, v4, v2);
    sub_1D2D9C8C4();
    swift_allocObject();
    v20 = sub_1D2D9C8B8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v2);
    v21 = *(_QWORD *)(v8 - 88);
    result = swift_release();
    *(_QWORD *)(v0 + v21) = v20;
  }
  return result;
}

uint64_t sub_1D2D3A760(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v16;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[4];
  int v23;
  const char *v24;

  LODWORD(v24) = a1;
  v2 = sub_1D2D9C870();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-v7];
  v9 = sub_1D2D9C894();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v1, v9, v11);
  v14 = type metadata accessor for Signpost();
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16);
  v15(v8, (_BYTE *)(v1 + *(int *)(v14 + 20)), v2);
  v16 = sub_1D2D9C87C();
  v23 = sub_1D2D9E0DC();
  if ((sub_1D2D9E19C() & 1) != 0)
  {
    v17 = "failure";
    if ((v24 & 1) == 0)
      v17 = "success";
    v24 = v17;
    v15(v5, v8, v2);
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = sub_1D2D9C864();
    _os_signpost_emit_with_name_impl(&dword_1D2CC0000, v16, (os_signpost_type_t)v23, v19, v24, "", v18, 2u);
    MEMORY[0x1D8248974](v18, -1, -1);

    v20 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v20(v8, v2);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v5, v2);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_1D2D3A96C()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  const char *v16;
  NSObject *v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  void (*v25)(char *, uint64_t);
  const char *v26;
  int v27;
  const char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (const char *)sub_1D2D9C8A0();
  v2 = *((_QWORD *)v1 - 1);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C870();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v10 = sub_1D2D9C894();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Signpost();
  if (*(_QWORD *)(v0 + *(int *)(result + 24)))
  {
    v15 = result;
    v28 = v1;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v0, v10);
    v16 = (const char *)sub_1D2D3AC34(*(_BYTE *)(v0 + *(int *)(v15 + 28)));
    swift_retain();
    v17 = sub_1D2D9C87C();
    sub_1D2D9C8AC();
    v27 = sub_1D2D9E0C4();
    result = sub_1D2D9E19C();
    if ((result & 1) != 0)
    {
      if (v16)
      {
        v26 = v16;
        swift_retain();
        sub_1D2D9C8D0();
        swift_release();
        v18 = v28;
        if ((*(unsigned int (**)(char *, const char *))(v2 + 88))(v4, v28) == *MEMORY[0x1E0DF2190])
        {
          v19 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v2 + 8))(v4, v18);
          v19 = "";
        }
        v28 = v19;
        v21 = v29;
        v20 = v30;
        v22 = v31;
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v9, v31);
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        v24 = sub_1D2D9C864();
        _os_signpost_emit_with_name_impl(&dword_1D2CC0000, v17, (os_signpost_type_t)v27, v24, v26, v28, v23, 2u);
        MEMORY[0x1D8248974](v23, -1, -1);

        v25 = *(void (**)(char *, uint64_t))(v20 + 8);
        v25(v9, v22);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v25)(v21, v22);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D2D3AC34(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1D2D3AC60 + 4 * byte_1D2DA3E66[a1]))("lid_pass", 8);
}

const char *sub_1D2D3AC60()
{
  return "translate_pass";
}

const char *sub_1D2D3ACE0()
{
  return "download";
}

const char *sub_1D2D3AD08()
{
  return "passthrough_pair";
}

const char *sub_1D2D3AD1C()
{
  return "network_available";
}

uint64_t sub_1D2D3AD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  NSObject *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  const char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);

  v1 = v0;
  v2 = sub_1D2D9C870();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = sub_1D2D9C894();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Signpost();
  v14 = *(int *)(result + 24);
  if (!*(_QWORD *)(v0 + v14))
  {
    v15 = result;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v26 = v9;
    v16(v12, v1, v9);
    v25 = (const char *)sub_1D2D3AC34(*(_BYTE *)(v1 + *(int *)(v15 + 28)));
    v17 = v1 + *(int *)(v15 + 20);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v27(v8, v17, v2);
    v18 = sub_1D2D9C87C();
    v24 = sub_1D2D9E0D0();
    result = sub_1D2D9E19C();
    if ((result & 1) != 0)
    {
      v23 = v3;
      if (!v25)
      {
        __break(1u);
        return result;
      }
      v27(v5, (uint64_t)v8, v2);
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = sub_1D2D9C864();
      _os_signpost_emit_with_name_impl(&dword_1D2CC0000, v18, (os_signpost_type_t)v24, v20, v25, "", v19, 2u);
      MEMORY[0x1D8248974](v19, -1, -1);

      v3 = v23;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
    }
    else
    {

    }
    v27(v5, (uint64_t)v8, v2);
    sub_1D2D9C8C4();
    swift_allocObject();
    v21 = sub_1D2D9C8B8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
    result = swift_release();
    *(_QWORD *)(v1 + v14) = v21;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Signpost.Operation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Signpost.Operation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D2D3B060 + 4 * byte_1D2DA3E78[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D2D3B094 + 4 * byte_1D2DA3E73[v4]))();
}

uint64_t sub_1D2D3B094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D3B09C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D3B0A4);
  return result;
}

uint64_t sub_1D2D3B0B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D3B0B8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D2D3B0BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D3B0C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Signpost.Operation()
{
  return &type metadata for Signpost.Operation;
}

unint64_t sub_1D2D3B0E4()
{
  unint64_t result;

  result = qword_1EFCA7C88;
  if (!qword_1EFCA7C88)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA3F0C, &type metadata for Signpost.Operation);
    atomic_store(result, (unint64_t *)&qword_1EFCA7C88);
  }
  return result;
}

uint64_t SimpleExpandingText.init(_:isExpanded:_:buttonAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  v13 = (int *)type metadata accessor for SimpleExpandingText();
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_BYTE *)(a9 + 32) = 0;
  v14 = a9 + v13[6];
  v15 = sub_1D2D9C7EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (uint64_t *)(a9 + v13[7]);
  *v16 = 0;
  v16[1] = 0;
  v17 = a9 + v13[8];
  sub_1D2D9D8B4();
  *(_BYTE *)v17 = v28;
  *(_QWORD *)(v17 + 8) = v29;
  v18 = (_QWORD *)(a9 + v13[9]);
  sub_1D2D9D8B4();
  *v18 = v28;
  v18[1] = v29;
  v19 = a9 + v13[10];
  sub_1D2D9D8B4();
  *(_BYTE *)v19 = v28;
  *(_QWORD *)(v19 + 8) = v29;
  v20 = a9 + v13[11];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  v21 = (uint64_t *)(a9 + v13[12]);
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  swift_storeEnumTagMultiPayload();
  sub_1D2D9D578();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  sub_1D2CE46A0(*(_QWORD *)(a9 + 16), *(_QWORD *)(a9 + 24));
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  sub_1D2CE46D0(a6, v14);
  result = sub_1D2CCCF1C(*v16);
  *v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t type metadata accessor for SimpleExpandingText()
{
  uint64_t result;

  result = qword_1EFCA7CF0;
  if (!qword_1EFCA7CF0)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_1D2D3B340()
{
  uint64_t *v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char *v55;
  double v56;
  double v57;
  _BOOL8 v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  double v82;

  v1 = (int *)type metadata accessor for SimpleExpandingText();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v70 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64C0);
  MEMORY[0x1E0C80A78](v7);
  v79 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2D9D584();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v70 - v13;
  v15 = (uint64_t *)((char *)v0 + v1[9]);
  v16 = *v15;
  v17 = v15[1];
  v80 = *v15;
  v81 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  sub_1D2D9D8C0();
  if (v82 <= 0.0)
  {
    if (qword_1EFCA54B8 != -1)
      swift_once();
    v65 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v65, (uint64_t)qword_1EFCB2630);
    sub_1D2D3D584((uint64_t)v0, (uint64_t)v3);
    v61 = sub_1D2D9C8DC();
    v66 = sub_1D2D9E028();
    if (os_log_type_enabled(v61, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v67 = 134217984;
      v68 = sub_1D2D9DD7C();
      sub_1D2D3ECFC((uint64_t)v3);
      v80 = v68;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v61, v66, "Text of len %ld hard isMultiline due to: zero availableWidth", v67, 0xCu);
      MEMORY[0x1D8248974](v67, -1, -1);
    }
    else
    {
      sub_1D2D3ECFC((uint64_t)v3);
    }
    v58 = 1;
  }
  else
  {
    v75 = v6;
    v80 = v16;
    v81 = v17;
    sub_1D2D9D8C0();
    v73 = (char *)v0 + v1[13];
    v74 = v10;
    v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v76 = v9;
    v72 = v18;
    ((void (*)(char *))v18)(v14);
    sub_1D2D9D0A4();
    v19 = sub_1D2D9D5C0();
    v21 = v20;
    v23 = v22;
    v24 = (char *)v0 + v1[11];
    v25 = *(_QWORD *)v24;
    v71 = v24;
    v26 = v24[8];
    j__swift_retain();
    v27 = sub_1D2D7C324(v25, v26);
    j__swift_release();
    v77 = v0;
    if (!v27)
      sub_1D2D9D458();
    v28 = v23 & 1;
    v29 = sub_1D2D9D5B4();
    v31 = v30;
    v33 = v32 & 1;
    sub_1D2CCCAB4(v19, v21, v28);
    swift_release();
    swift_bridgeObjectRelease();
    v34 = sub_1D2D9D560();
    v35 = (uint64_t)v79;
    v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v70(v79, 1, 1, v34);
    sub_1D2D9D56C();
    v37 = v36;
    sub_1D2CCCAB4(v29, v31, v33);
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v35, &qword_1EFCA64C0);
    v38 = v76;
    v74 = *(_QWORD *)(v74 + 8);
    ((void (*)(char *, uint64_t))v74)(v14, v76);
    v72(v78, v73, v38);
    v39 = v77[1];
    v80 = *v77;
    v81 = v39;
    sub_1D2CD1430();
    swift_bridgeObjectRetain();
    v40 = sub_1D2D9D5CC();
    v42 = v41;
    v44 = v43;
    v45 = *(_QWORD *)v71;
    v46 = v71[8];
    j__swift_retain();
    v47 = sub_1D2D7C324(v45, v46);
    j__swift_release();
    if (!v47)
      sub_1D2D9D458();
    v48 = v44 & 1;
    v49 = sub_1D2D9D5B4();
    v51 = v50;
    v53 = v52 & 1;
    sub_1D2CCCAB4(v40, v42, v48);
    swift_release();
    swift_bridgeObjectRelease();
    v54 = (uint64_t)v79;
    v70(v79, 1, 1, v34);
    v55 = v78;
    sub_1D2D9D56C();
    v57 = v56;
    sub_1D2CCCAB4(v49, v51, v53);
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v54, &qword_1EFCA64C0);
    ((void (*)(char *, uint64_t))v74)(v55, v76);
    v58 = v37 < v57;
    if (qword_1EFCA54B8 != -1)
      swift_once();
    v59 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EFCB2630);
    v60 = (uint64_t)v75;
    sub_1D2D3D584((uint64_t)v77, (uint64_t)v75);
    v61 = sub_1D2D9C8DC();
    v62 = sub_1D2D9E028();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      *(_DWORD *)v63 = 67109376;
      LODWORD(v80) = v37 < v57;
      sub_1D2D9E1B4();
      *(_WORD *)(v63 + 8) = 2048;
      v64 = sub_1D2D9DD7C();
      sub_1D2D3ECFC(v60);
      v80 = v64;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v61, v62, "isMultiline: %{BOOL}d for text of %ld characters (approx)", (uint8_t *)v63, 0x12u);
      MEMORY[0x1D8248974](v63, -1, -1);
    }
    else
    {
      sub_1D2D3ECFC(v60);
    }
  }

  return v58;
}

uint64_t sub_1D2D3BA14@<X0>(char a1@<W0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  char v98;
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  char v102;
  char v103;
  int v104;
  __int16 v105;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6540);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6548);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6550);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v65 - v17;
  v19 = sub_1D2D9D80C();
  if ((a1 & 1) != 0)
  {
    sub_1D2D9D0A4();
    v20 = sub_1D2D9D5C0();
    v77 = a3;
    v21 = v20;
    v75 = v10;
    v23 = v22;
    v76 = a2;
    v72 = v8;
    v25 = v24 & 1;
    sub_1D2D9D458();
    v26 = sub_1D2D9D5B4();
    v78 = v12;
    v74 = v26;
    *(_QWORD *)&v71 = v27;
    v73 = v9;
    v29 = v28;
    v31 = v30;
    v70 = v30;
    swift_release();
    v32 = v29 & 1;
    sub_1D2CCCAB4(v21, v23, v25);
    swift_bridgeObjectRelease();
    v68 = sub_1D2D9D434();
    sub_1D2D9CAF8();
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v41 = sub_1D2D9D800();
    KeyPath = swift_getKeyPath();
    v69 = KeyPath;
    v43 = sub_1D2D9D434();
    sub_1D2D9CAF8();
    v98 = v32;
    v97 = 0;
    v96 = 0;
    v44 = v74;
    v79 = v74;
    v45 = v71;
    *(_QWORD *)&v80 = v71;
    BYTE8(v80) = v32;
    v81 = v31;
    LOBYTE(v82) = v68;
    v83 = v34;
    v84 = v36;
    v85 = v38;
    v86 = v40;
    LOBYTE(v87) = 0;
    *((_QWORD *)&v87 + 1) = KeyPath;
    v88 = v41;
    v89 = v43;
    v91 = v46;
    v92 = v47;
    v93 = v48;
    v94 = v49;
    v95 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6560);
    sub_1D2CCE538(&qword_1EFCA6568, &qword_1EFCA6560, (uint64_t (*)(void))sub_1D2CE65E8, MEMORY[0x1E0CD9758]);
    v50 = (uint64_t)v72;
    sub_1D2D9D6A4();
    sub_1D2CCCAB4(v44, v45, v32);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v51 = sub_1D2D9D038();
    sub_1D2D3C008((uint64_t)&v79);
    v52 = v79;
    v65 = v80;
    v53 = v81;
    v54 = v82;
    v55 = v83;
    LOBYTE(v44) = v84;
    v56 = v85;
    v74 = v19;
    v57 = v86;
    v71 = v87;
    v76 = v15;
    v70 = v88;
    LODWORD(v69) = v89;
    v68 = v90;
    v103 = 0;
    v102 = v84;
    v100 = v86;
    v67 = sub_1D2D9DA70();
    v66 = v58;
    v59 = (uint64_t)v78;
    sub_1D2CCAD60(v50, (uint64_t)v78, &qword_1EFCA6540);
    v60 = v73;
    v61 = v59 + *(int *)(v73 + 36);
    *(_QWORD *)v61 = v51;
    *(_QWORD *)(v61 + 8) = 0;
    *(_BYTE *)(v61 + 16) = 0;
    *(_DWORD *)(v61 + 17) = v79;
    *(_DWORD *)(v61 + 20) = *(_DWORD *)((char *)&v79 + 3);
    *(_QWORD *)(v61 + 24) = v52;
    *(_OWORD *)(v61 + 32) = v65;
    *(_QWORD *)(v61 + 48) = v53;
    *(_QWORD *)(v61 + 56) = v54;
    *(_QWORD *)(v61 + 64) = v55;
    *(_BYTE *)(v61 + 72) = v44;
    *(_DWORD *)(v61 + 73) = *(_DWORD *)v101;
    *(_DWORD *)(v61 + 76) = *(_DWORD *)&v101[3];
    *(_QWORD *)(v61 + 80) = v56;
    *(_BYTE *)(v61 + 88) = v57;
    v19 = v74;
    *(_DWORD *)(v61 + 92) = *(_DWORD *)&v99[3];
    *(_DWORD *)(v61 + 89) = *(_DWORD *)v99;
    *(_OWORD *)(v61 + 96) = v71;
    *(_QWORD *)(v61 + 112) = v70;
    v15 = v76;
    *(_BYTE *)(v61 + 120) = v69;
    *(_BYTE *)(v61 + 121) = v68;
    *(_WORD *)(v61 + 126) = v105;
    *(_DWORD *)(v61 + 122) = v104;
    a3 = v77;
    v62 = v66;
    *(_QWORD *)(v61 + 128) = v67;
    *(_QWORD *)(v61 + 136) = v62;
    sub_1D2CCADA4(v50, &qword_1EFCA6540);
    sub_1D2CD2018((uint64_t)v78, (uint64_t)v18, &qword_1EFCA6548);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v18, 0, 1, v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  }
  sub_1D2CCAD60((uint64_t)v18, (uint64_t)v15, &qword_1EFCA6550);
  *(_QWORD *)a3 = v19;
  *(_WORD *)(a3 + 8) = 256;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6558);
  sub_1D2CCAD60((uint64_t)v15, a3 + *(int *)(v63 + 48), &qword_1EFCA6550);
  swift_retain();
  sub_1D2CCADA4((uint64_t)v18, &qword_1EFCA6550);
  sub_1D2CCADA4((uint64_t)v15, &qword_1EFCA6550);
  return swift_release();
}

__n128 sub_1D2D3C008@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6590);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D2DA0CB0;
  sub_1D2D9D80C();
  sub_1D2D3C1A8();
  v3 = sub_1D2D9D818();
  swift_release();
  *(_QWORD *)(v2 + 32) = v3;
  sub_1D2D9D80C();
  sub_1D2D3C1A8();
  v4 = sub_1D2D9D818();
  swift_release();
  *(_QWORD *)(v2 + 40) = v4;
  sub_1D2D9DE78();
  sub_1D2D9DB0C();
  sub_1D2D9DB18();
  MEMORY[0x1D8247570](v2);
  sub_1D2D9CD14();
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v5 = sub_1D2D9D800();
  *(_QWORD *)a1 = v7;
  result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = 256;
  return result;
}

uint64_t sub_1D2D3C1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = sub_1D2D9CD68();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1D2D9C7D4();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SimpleExpandingText();
  sub_1D2CCAD60(v0 + *(int *)(v17 + 24), (uint64_t)v12, &qword_1ED587850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D2CCADA4((uint64_t)v12, &qword_1ED587850);
    sub_1D2D7C4EC((uint64_t)v6);
    v18 = v25;
    v19 = v26;
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0CD9A98], v26);
    v20 = sub_1D2D9CD5C();
    v21 = *(void (**)(char *, uint64_t))(v18 + 8);
    v21(v3, v19);
    v21(v6, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1D2D9C7E0();
    v20 = sub_1D2D9C7B0() == 2;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v20 & 1;
}

uint64_t SimpleExpandingText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  char v26;
  unsigned int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;

  v2 = v1;
  v52 = a1;
  v51 = sub_1D2D9CD68();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v47 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6368);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A48);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5A50);
  MEMORY[0x1E0C80A78](v8);
  v50 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SimpleExpandingText();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v48 = v12;
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D3D584(v1, (uint64_t)v13);
  sub_1D2D9DEFC();
  v14 = sub_1D2D9DEF0();
  v46 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v46 + 32) & ~v46;
  v44 = v46 | 7;
  v16 = swift_allocObject();
  v17 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v17;
  sub_1D2D3D5CC((uint64_t)v13, v16 + v15);
  sub_1D2D3D584(v1, (uint64_t)v13);
  v18 = sub_1D2D9DEF0();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v17;
  sub_1D2D3D5CC((uint64_t)v13, v19 + v15);
  sub_1D2D9D980();
  v21 = v53;
  v20 = v54;
  v22 = v55;
  *v6 = sub_1D2D9DA88();
  v6[1] = v23;
  v24 = (uint64_t)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6380) + 44);
  v42 = v2;
  sub_1D2D3CA2C(v2, v21, v20, v22, v24);
  KeyPath = swift_getKeyPath();
  v26 = sub_1D2D3C1A8();
  v27 = (unsigned int *)MEMORY[0x1E0CD9A98];
  v28 = v49;
  if ((v26 & 1) == 0)
    v27 = (unsigned int *)MEMORY[0x1E0CD9A90];
  v29 = v47;
  v30 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v47, *v27, v51);
  v31 = (uint64_t)v43;
  v32 = (uint64_t *)&v43[*(int *)(v45 + 36)];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6388);
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v32 + *(int *)(v33 + 28), v29, v30);
  *v32 = KeyPath;
  sub_1D2CCAD60((uint64_t)v6, v31, &qword_1EFCA6368);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  sub_1D2CCADA4((uint64_t)v6, &qword_1EFCA6368);
  v34 = sub_1D2D9DA70();
  v35 = v50;
  sub_1D2CCE16C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v50, 0.0, 1, 0.0, 1, v34, v36);
  swift_release();
  swift_release();
  sub_1D2CCADA4(v31, &qword_1EFCA5A48);
  sub_1D2D3D584(v42, (uint64_t)v13);
  v37 = (v46 + 16) & ~v46;
  v38 = swift_allocObject();
  sub_1D2D3D5CC((uint64_t)v13, v38 + v37);
  v39 = v52;
  sub_1D2CCAD60(v35, v52, &qword_1EFCA5A50);
  v40 = (_QWORD *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7C90) + 36));
  *v40 = sub_1D2D3D4DC;
  v40[1] = 0;
  v40[2] = sub_1D2D3D9DC;
  v40[3] = v38;
  return sub_1D2CCADA4(v35, &qword_1EFCA5A50);
}

uint64_t sub_1D2D3C838@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = type metadata accessor for SimpleExpandingText();
  MEMORY[0x1E0C80A78](v4);
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + 24);
  if (v8)
  {
    v9 = *(_BYTE *)(a1 + 32) & 1;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = v8;
    v19 = v9;
    swift_retain();
    swift_retain();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    MEMORY[0x1D82474B0](&v20, v10);
    swift_release();
    swift_release();
    v11 = v20;
    sub_1D2D3D584(a1, (uint64_t)v7);
  }
  else
  {
    sub_1D2D3D584(a1, (uint64_t)&v16 - v6);
    v12 = &v7[*(int *)(v4 + 32)];
    v13 = *v12;
    v14 = *((_QWORD *)v12 + 1);
    LOBYTE(v17) = v13;
    v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
    sub_1D2D9D8C0();
    v11 = v20;
  }
  result = sub_1D2D3ECFC((uint64_t)v7);
  *a2 = v11;
  return result;
}

uint64_t sub_1D2D3C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a4 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    sub_1D2D9D968();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for SimpleExpandingText();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
    return sub_1D2D9D8CC();
  }
}

uint64_t sub_1D2D3CA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char v51;
  char v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BOOL8 v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  _OWORD v138[9];
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v132 = a4;
  v130 = a3;
  v131 = a2;
  v123 = a5;
  v6 = sub_1D2D9CDBC();
  v113 = *(_QWORD *)(v6 - 8);
  v114 = v6;
  MEMORY[0x1E0C80A78](v6);
  v111 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64C8);
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v115 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64D0);
  v109 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v107 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64D8);
  v129 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v106 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64E0);
  MEMORY[0x1E0C80A78](v11);
  v122 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v121 = (char *)&v102 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64E8);
  MEMORY[0x1E0C80A78](v15);
  v118 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for SimpleExpandingText();
  v103 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v105 = (uint64_t)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v119 = (uint64_t)&v102 - v19;
  v104 = v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v102 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64F0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64F8);
  MEMORY[0x1E0C80A78](v117);
  v28 = (_OWORD *)((char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6500);
  MEMORY[0x1E0C80A78](v126);
  v127 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6508);
  MEMORY[0x1E0C80A78](v125);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v124 = (uint64_t)&v102 - v33;
  MEMORY[0x1E0C80A78](v34);
  v133 = (uint64_t)&v102 - v35;
  v36 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v139 = *(_QWORD *)a1;
  *((_QWORD *)&v139 + 1) = v36;
  sub_1D2CD1430();
  swift_bridgeObjectRetain();
  v37 = sub_1D2D9D5CC();
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = sub_1D2D9DA4C();
  sub_1D2CCDD10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v138, 0.0, 1, 0.0, 1, v44, v45, v37, v39, v43, v41);
  sub_1D2CCCAB4(v37, v39, v43);
  swift_bridgeObjectRelease();
  v145 = v138[6];
  v146 = v138[7];
  v147 = v138[8];
  v141 = v138[2];
  v142 = v138[3];
  v143 = v138[4];
  v144 = v138[5];
  v139 = v138[0];
  v140 = v138[1];
  v46 = sub_1D2D3B340();
  v128 = v31;
  if (v46)
  {
    v48 = v130;
    v47 = v131;
    v134 = v131;
    v135 = v130;
    v49 = v132 & 1;
    v136 = v132 & 1;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    MEMORY[0x1D82474B0](&v137, v50);
    v51 = v137;
    sub_1D2D3D584(a1, (uint64_t)v23);
    v132 = v49;
    if ((v51 & 1) != 0)
    {
      v52 = 0;
    }
    else
    {
      v53 = &v23[*(int *)(v116 + 40)];
      v54 = *v53;
      v55 = *((_QWORD *)v53 + 1);
      LOBYTE(v134) = v54;
      v135 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
      sub_1D2D9D8C0();
      v52 = v137;
    }
  }
  else
  {
    sub_1D2D3D584(a1, (uint64_t)v23);
    v52 = 0;
    v132 &= 1u;
    v48 = v130;
    v47 = v131;
  }
  v56 = v117;
  v57 = (uint64_t)v118;
  sub_1D2D3ECFC((uint64_t)v23);
  *(_QWORD *)v26 = sub_1D2D9D038();
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 0;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6510);
  sub_1D2D3BA14(v52, (char *)a1, (uint64_t)&v26[*(int *)(v58 + 44)]);
  sub_1D2CCAD60((uint64_t)v26, v57, &qword_1EFCA64F0);
  sub_1D2CCAD60(v57, (uint64_t)v28 + *(int *)(v56 + 36), &qword_1EFCA64E8);
  v59 = v146;
  v28[6] = v145;
  v28[7] = v59;
  v28[8] = v147;
  v60 = v142;
  v28[2] = v141;
  v28[3] = v60;
  v61 = v144;
  v28[4] = v143;
  v28[5] = v61;
  v62 = v140;
  *v28 = v139;
  v28[1] = v62;
  sub_1D2CE6300((uint64_t)&v139);
  sub_1D2CCADA4(v57, &qword_1EFCA64E8);
  sub_1D2CCADA4((uint64_t)v26, &qword_1EFCA64F0);
  sub_1D2CE633C((uint64_t)&v139);
  v134 = v47;
  v135 = v48;
  v136 = v132;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v137);
  v64 = v48;
  v65 = v137;
  v66 = (v137 & 1) == 0;
  KeyPath = swift_getKeyPath();
  v68 = v127;
  sub_1D2CCAD60((uint64_t)v28, v127, &qword_1EFCA64F8);
  v69 = v68 + *(int *)(v126 + 36);
  *(_QWORD *)v69 = KeyPath;
  *(_QWORD *)(v69 + 8) = v66;
  *(_BYTE *)(v69 + 16) = v65;
  sub_1D2CCADA4((uint64_t)v28, &qword_1EFCA64F8);
  v70 = v124;
  sub_1D2CCAD60(v68, v124, &qword_1EFCA6500);
  *(_BYTE *)(v70 + *(int *)(v125 + 36)) = 0;
  sub_1D2CCADA4(v68, &qword_1EFCA6500);
  sub_1D2CD2018(v70, v133, &qword_1EFCA6508);
  if (!sub_1D2D3B340())
  {
    v74 = v119;
    sub_1D2D3D584(a1, v119);
    goto LABEL_11;
  }
  v71 = v131;
  v134 = v131;
  v135 = v64;
  v72 = v132;
  v136 = v132;
  MEMORY[0x1D82474B0](&v137, v63);
  v73 = v137;
  v74 = v119;
  sub_1D2D3D584(a1, v119);
  if ((v73 & 1) != 0)
  {
LABEL_11:
    sub_1D2D3ECFC(v74);
    v97 = 1;
    v81 = (uint64_t)v122;
    v80 = v123;
    v83 = v120;
    v82 = (uint64_t)v121;
    goto LABEL_12;
  }
  v75 = a1;
  v76 = v74 + *(int *)(v116 + 40);
  v77 = *(_BYTE *)v76;
  v78 = *(_QWORD *)(v76 + 8);
  LOBYTE(v134) = v77;
  v135 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6520);
  sub_1D2D9D8C0();
  v79 = v137;
  sub_1D2D3ECFC(v74);
  v81 = (uint64_t)v122;
  v80 = v123;
  v83 = v120;
  v82 = (uint64_t)v121;
  if ((v79 & 1) != 0)
  {
    v102 = v75;
    v132 = v72;
    v84 = v105;
    sub_1D2D3D584(v75, v105);
    v85 = (*(unsigned __int8 *)(v103 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    v86 = swift_allocObject();
    *(_QWORD *)(v86 + 16) = v71;
    *(_QWORD *)(v86 + 24) = v130;
    *(_BYTE *)(v86 + 32) = v132;
    v87 = sub_1D2D3D5CC(v84, v86 + v85);
    MEMORY[0x1E0C80A78](v87);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6528);
    sub_1D2CE657C();
    sub_1D2D9D8FC();
    v88 = v111;
    sub_1D2D9CDB0();
    sub_1D2CC6C74(&qword_1EFCA6538, &qword_1EFCA64C8, MEMORY[0x1E0CDFA58]);
    sub_1D2CDD6DC();
    v89 = v107;
    v90 = v110;
    v91 = v114;
    v92 = v115;
    sub_1D2D9D614();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v88, v91);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v92, v90);
    v93 = sub_1D2D9D7E8();
    v94 = v109;
    v95 = (uint64_t)v106;
    v96 = v112;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v89, v112);
    *(_QWORD *)(v95 + *(int *)(v83 + 36)) = v93;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v96);
    sub_1D2CD2018(v95, v82, &qword_1EFCA64D8);
    v97 = 0;
  }
  else
  {
    v97 = 1;
  }
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v82, v97, 1, v83);
  v98 = v133;
  v99 = (uint64_t)v128;
  sub_1D2CCAD60(v133, (uint64_t)v128, &qword_1EFCA6508);
  sub_1D2CCAD60(v82, v81, &qword_1EFCA64E0);
  sub_1D2CCAD60(v99, v80, &qword_1EFCA6508);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6518);
  sub_1D2CCAD60(v81, v80 + *(int *)(v100 + 48), &qword_1EFCA64E0);
  sub_1D2CCADA4(v82, &qword_1EFCA64E0);
  sub_1D2CCADA4(v98, &qword_1EFCA6508);
  sub_1D2CCADA4(v81, &qword_1EFCA64E0);
  return sub_1D2CCADA4(v99, &qword_1EFCA6508);
}

uint64_t sub_1D2D3D418(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v13 = a1;
  v14 = a2;
  v15 = a3;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
  MEMORY[0x1D82474B0](&v12);
  sub_1D2D9D968();
  swift_release();
  swift_release();
  result = type metadata accessor for SimpleExpandingText();
  v11 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + *(int *)(result + 28));
  if (*v11)
    return (*v11)(result, v6, v7, v8, v9, v10);
  return result;
}

uint64_t sub_1D2D3D4DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D2D9CC54();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D3D504()
{
  type metadata accessor for SimpleExpandingText();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5778);
  return sub_1D2D9D8CC();
}

uint64_t sub_1D2D3D584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D3D5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D3D610@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SimpleExpandingText() - 8) + 80);
  return sub_1D2D3C838(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for SimpleExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[13];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2D3D7FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SimpleExpandingText() - 8) + 80);
  return sub_1D2D3C95C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1D2D3D83C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for SimpleExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[13];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2D3D9DC()
{
  type metadata accessor for SimpleExpandingText();
  return sub_1D2D3D504();
}

uint64_t sub_1D2D3DA18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SimpleExpandingText(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    v10 = a3[6];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = sub_1D2D9C7EC();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v16 = a3[7];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = a1 + v20;
    v23 = (uint64_t)a2 + v20;
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    v24 = (_QWORD *)(a1 + v21);
    v25 = (uint64_t *)((char *)a2 + v21);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[10];
    v28 = a3[11];
    v29 = a1 + v27;
    v30 = (uint64_t)a2 + v27;
    *(_BYTE *)v29 = *(_BYTE *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    v31 = a1 + v28;
    v32 = *(uint64_t *)((char *)a2 + v28);
    v33 = *((_BYTE *)a2 + v28 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(_QWORD *)v31 = v32;
    *(_BYTE *)(v31 + 8) = v33;
    v34 = a3[12];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_1D2D9CD68();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v38 = a3[13];
    v39 = a1 + v38;
    v40 = (uint64_t)a2 + v38;
    v41 = sub_1D2D9D584();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return a1;
}

uint64_t destroy for SimpleExpandingText(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = a1 + a2[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + a2[13];
  v10 = sub_1D2D9D584();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  if (*v16)
  {
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  v22 = (_QWORD *)(a1 + v19);
  v23 = (_QWORD *)(a2 + v19);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[10];
  v26 = a3[11];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  v29 = a1 + v26;
  v30 = *(_QWORD *)(a2 + v26);
  v31 = *(_BYTE *)(a2 + v26 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(_QWORD *)v29 = v30;
  *(_BYTE *)(v29 + 8) = v31;
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v35 = sub_1D2D9CD68();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  else
  {
    *v33 = *v34;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

uint64_t assignWithCopy for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    else
    {
      sub_1D2CCADA4(a1 + 16, &qword_1EFCA5D20);
      v9 = *(_BYTE *)(a2 + 32);
      *v6 = *v7;
      *(_BYTE *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    v10 = *v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *v6 = v10;
  }
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1D2D9C7EC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_13:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_14:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  v24 = *(_QWORD *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *(_QWORD *)(v22 + 8);
      *v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *(_QWORD *)(v22 + 8);
    *v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_21:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_retain();
  swift_release();
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_BYTE *)v34 = *(_BYTE *)v35;
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  swift_retain();
  swift_release();
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = (uint64_t *)(a2 + v36);
  v39 = *v38;
  v40 = *((_BYTE *)v38 + 8);
  j__swift_retain();
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v40;
  j__swift_release();
  if (a1 != a2)
  {
    v41 = a3[12];
    v42 = (_QWORD *)(a1 + v41);
    v43 = (_QWORD *)(a2 + v41);
    sub_1D2CCADA4(a1 + v41, &qword_1EFCA6358);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = sub_1D2D9CD68();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *v42 = *v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v45 = a3[13];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

uint64_t initializeWithTake for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[12];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_1D2D9CD68();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v27 = a3[13];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_release();
      *(_QWORD *)(a1 + 24) = v7;
      swift_release();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      goto LABEL_6;
    }
    sub_1D2CCADA4(a1 + 16, &qword_1EFCA5D20);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17);
  v21 = *(_QWORD *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *(_QWORD *)(v19 + 8);
      *v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *(_QWORD *)(v19 + 8);
    *v18 = v21;
    v18[1] = v23;
    goto LABEL_19;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_19:
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_release();
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  v30 = a3[10];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  swift_release();
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  LOBYTE(v35) = *((_BYTE *)v35 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = (_BYTE)v35;
  j__swift_release();
  if (a1 != a2)
  {
    v37 = a3[12];
    v38 = (void *)(a1 + v37);
    v39 = (const void *)(a2 + v37);
    sub_1D2CCADA4(a1 + v37, &qword_1EFCA6358);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_1D2D9CD68();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  v42 = a3[13];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleExpandingText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D3E91C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA63D0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[12];
      }
      else
      {
        v10 = sub_1D2D9D584();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SimpleExpandingText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D3E9F4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA63D0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[12];
      }
      else
      {
        v10 = sub_1D2D9D584();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D2D3EABC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2CE60DC(319, (unint64_t *)&qword_1ED5878C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1D2CE60DC(319, qword_1EFCA6440, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9AA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    if (v1 <= 0x3F)
    {
      sub_1D2D9D584();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1D2D3EBBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7D48;
  if (!qword_1EFCA7D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7C90);
    v2[0] = sub_1D2CCE538(&qword_1EFCA7D50, &qword_1EFCA5A50, (uint64_t (*)(void))sub_1D2D3EC60, MEMORY[0x1E0CDA228]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA7D60, &qword_1EFCA7D68, MEMORY[0x1E0CDC4E8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7D48);
  }
  return result;
}

unint64_t sub_1D2D3EC60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7D58;
  if (!qword_1EFCA7D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA5A48);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA63B8, &qword_1EFCA6368, MEMORY[0x1E0CDFCF8]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA63C8, &qword_1EFCA6388, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7D58);
  }
  return result;
}

uint64_t sub_1D2D3ECFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2D3ED40()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for SimpleExpandingText();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 33) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 24))
  {
    swift_release();
    swift_release();
  }
  v4 = v3 + v1[6];
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v3 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  v7 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CD68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + v1[13];
  v10 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D2D3EEF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SimpleExpandingText() - 8) + 80);
  return sub_1D2D3D418(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), v0 + ((v1 + 33) & ~v1));
}

NSAttributedString __swiftcall String.applyingAttributes(from:)(NSAttributedString from)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  NSAttributedString result;
  _QWORD v14[6];

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  v5 = -[objc_class length](from.super.isa, sel_length);
  v6 = objc_msgSend(v4, sel_length);
  if ((uint64_t)v6 >= (uint64_t)v5)
    v7 = v5;
  else
    v7 = v6;
  objc_msgSend(v4, sel_beginEditing);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1D2D3F210;
  *(_QWORD *)(v9 + 24) = v8;
  v14[4] = sub_1D2CF4170;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1D2D3F164;
  v14[3] = &block_descriptor_5;
  v10 = _Block_copy(v14);
  v11 = v4;
  swift_retain();
  swift_release();
  -[objc_class enumerateAttributesInRange:options:usingBlock:](from.super.isa, sel_enumerateAttributesInRange_options_usingBlock_, 0, v7, 0, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result.super.isa = (Class)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v11, sel_endEditing);
    swift_release();
    return (NSAttributedString)v11;
  }
  return result;
}

void sub_1D2D3F10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;

  v8 = a5;
  sub_1D2D3F288(a1, v8, a2, a3);

}

uint64_t sub_1D2D3F164(uint64_t a1)
{
  void (*v1)(void);

  v1 = *(void (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1D2D3F240();
  sub_1D2D9DC2C();
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D3F1EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D2D3F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1D2D3F10C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1D2D3F218()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1D2D3F240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5F70;
  if (!qword_1EFCA5F70)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1D82488A8](&unk_1D2D9F8A4, v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5F70);
  }
  return result;
}

uint64_t sub_1D2D3F288(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  _QWORD v22[4];
  _OWORD v23[2];
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v27 = a4;
  v18 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v19)
      return swift_release();
    v16 = *(_QWORD *)(v18 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v19)
        return swift_release();
      v16 = *(_QWORD *)(v18 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v19)
          return swift_release();
        v16 = *(_QWORD *)(v18 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v19)
            return swift_release();
          v16 = *(_QWORD *)(v18 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
    sub_1D2CC80A4(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v25 + 8);
    *(_QWORD *)&v25[0] = v12;
    v23[0] = v25[0];
    v23[1] = v25[1];
    v24 = v26;
    sub_1D2CC80A4((uint64_t)v23 + 8, (uint64_t)v22);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    v13 = v12;
    v14 = sub_1D2D9E520();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    objc_msgSend(a2, sel_addAttribute_value_range_, v12, v14, a3, v27);
    swift_unknownObjectRelease();
    result = sub_1D2D3F4D0((uint64_t)v23);
  }
  v17 = v15 + 4;
  if (v17 >= v19)
    return swift_release();
  v16 = *(_QWORD *)(v18 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v19)
      return swift_release();
    v16 = *(_QWORD *)(v18 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D2D3F4D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5F68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static String.TRANSLATION_LIMIT.getter()
{
  swift_beginAccess();
  return qword_1EFCA7D70;
}

uint64_t static String.TRANSLATION_LIMIT.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_1EFCA7D70 = a1;
  return result;
}

uint64_t (*static String.TRANSLATION_LIMIT.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::tuple_Bool_String __swiftcall String.truncated(limit:)(Swift::Int limit)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::Bool v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  Swift::tuple_Bool_String result;

  v3 = v2;
  v4 = v1;
  v6 = sub_1D2D9C588();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1D2D9DD7C() >= limit)
  {
    v33 = v6;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CCE180]), sel_initWithUnit_, 0);
    v12 = (void *)sub_1D2D9DCB0();
    objc_msgSend(v11, sel_setString_, v12);

    sub_1D2D9DD94();
    v13 = sub_1D2D9E010();
    v15 = v14;
    v36 = v13;
    v37 = v14;
    v34 = v4;
    v35 = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7D78);
    sub_1D2D3F834();
    sub_1D2CD1430();
    sub_1D2D9E190();
    if (v16 >= 21)
      v15 = sub_1D2D9DD94();
    v17 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v17 = v4 & 0xFFFFFFFFFFFFLL;
    v10 = v15 >> 14 < 4 * v17;
    swift_bridgeObjectRetain();
    sub_1D2D9DD88();
    v18 = sub_1D2D9DE00();
    v20 = v19;
    v22 = v21;
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1D8247894](v18, v20, v22, v24);
    v27 = v26;
    swift_bridgeObjectRelease();
    v36 = v25;
    v37 = v27;
    sub_1D2D9C570();
    v4 = sub_1D2D9E1D8();
    v3 = v28;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  v29 = v10;
  v30 = v4;
  v31 = (void *)v3;
  result._1._object = v31;
  result._1._countAndFlagsBits = v30;
  result._0 = v29;
  return result;
}

unint64_t sub_1D2D3F834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA7D80;
  if (!qword_1EFCA7D80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7D78);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA7D80);
  }
  return result;
}

Swift::tuple_Bool_NSAttributedString __swiftcall NSAttributedString.truncated(limit:)(Swift::Int limit)
{
  void *v1;
  id v3;
  Swift::Int v4;
  objc_class *v5;
  unsigned __int8 v6;
  id v7;
  uint64_t v8;
  Swift::Bool v9;
  Swift::tuple_Bool_NSAttributedString result;

  v3 = objc_msgSend(v1, sel_string);
  sub_1D2D9DCD4();

  v4 = sub_1D2D9DD7C();
  swift_bridgeObjectRelease();
  if (v4 >= limit)
  {
    v7 = objc_msgSend(v1, sel_string);
    sub_1D2D9DCD4();

    v6 = String.truncated(limit:)(limit);
    swift_bridgeObjectRelease();
    v8 = sub_1D2D9DDD0();
    swift_bridgeObjectRelease();
    v5 = (objc_class *)objc_msgSend(v1, sel_attributedSubstringFromRange_, 0, v8);
  }
  else
  {
    v5 = v1;
    v6 = 0;
  }
  v9 = v6 & 1;
  result._1.super.isa = v5;
  result._0 = v9;
  return result;
}

uint64_t destroy for SystemWideConsentPresentation(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 56))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = (_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  if (!v4)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v5;
      *(_QWORD *)(a1 + 64) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v6;
  if (!v5)
  {
    if (v4)
    {
      v8 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v4;
      *(_QWORD *)(a1 + 64) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemWideConsentPresentation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemWideConsentPresentation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemWideConsentPresentation()
{
  return &type metadata for SystemWideConsentPresentation;
}

uint64_t *sub_1D2D3FCA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = (int *)type metadata accessor for VisualTranslationModel(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      v15 = v11[5];
      v16 = &v9[v15];
      v17 = &v10[v15];
      v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
      v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      v23 = v11[6];
      v24 = &v9[v23];
      v25 = &v10[v23];
      v26 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *(_QWORD *)&v9[v11[7]] = *(_QWORD *)&v10[v11[7]];
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      v9[v11[9]] = v10[v11[9]];
      v9[v11[10]] = v10[v11[10]];
      v9[v11[11]] = v10[v11[11]];
      v27 = *(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      v27(v9, 0, 1, v11);
    }
    v28 = *(int *)(a3 + 20);
    v29 = *(int *)(a3 + 24);
    v30 = (_OWORD *)((char *)a1 + v28);
    v31 = (_OWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (uint64_t *)((char *)a1 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    if (*v34)
    {
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
  }
  return a1;
}

uint64_t sub_1D2D3FEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v5 = type metadata accessor for VisualTranslationModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    v8 = v4 + *(int *)(v5 + 24);
    v9 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    return swift_release();
  return result;
}

_QWORD *sub_1D2D3FFA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    v14 = v10[5];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
    v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    v22 = v10[6];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    v26 = *(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    v26(v8, 0, 1, v10);
  }
  v27 = *(int *)(a3 + 20);
  v28 = *(int *)(a3 + 24);
  v29 = (_OWORD *)((char *)a1 + v27);
  v30 = (_OWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)((char *)a1 + v28);
  v33 = (_QWORD *)((char *)a2 + v28);
  if (*v33)
  {
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  return a1;
}

_QWORD *sub_1D2D4017C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v9[5];
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = *((_QWORD *)v17 + 20);
      v20 = *((_OWORD *)v17 + 8);
      v19 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 7) = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 8) = v20;
      *((_OWORD *)v16 + 9) = v19;
      *((_QWORD *)v16 + 20) = v18;
      v22 = *((_OWORD *)v17 + 5);
      v21 = *((_OWORD *)v17 + 6);
      v23 = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 3) = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = v23;
      *((_OWORD *)v16 + 5) = v22;
      *((_OWORD *)v16 + 6) = v21;
      v25 = *((_OWORD *)v17 + 1);
      v24 = *((_OWORD *)v17 + 2);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v25;
      *((_OWORD *)v16 + 2) = v24;
      v26 = v9[6];
      v27 = &v7[v26];
      v28 = &v8[v26];
      v29 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
      *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      v30 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      v30(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1D2CD3734((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  v43 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v7, v8, v43);
  v44 = v9[5];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v47 = *(_QWORD *)v46;
  v45[8] = v46[8];
  *(_QWORD *)v45 = v47;
  *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
  *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
  *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
  *((_QWORD *)v45 + 5) = *((_QWORD *)v46 + 5);
  *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
  *((_QWORD *)v45 + 7) = *((_QWORD *)v46 + 7);
  *((_QWORD *)v45 + 8) = *((_QWORD *)v46 + 8);
  *((_QWORD *)v45 + 9) = *((_QWORD *)v46 + 9);
  *((_QWORD *)v45 + 10) = *((_QWORD *)v46 + 10);
  *((_QWORD *)v45 + 11) = *((_QWORD *)v46 + 11);
  *((_QWORD *)v45 + 12) = *((_QWORD *)v46 + 12);
  *((_QWORD *)v45 + 13) = *((_QWORD *)v46 + 13);
  *((_QWORD *)v45 + 14) = *((_QWORD *)v46 + 14);
  *((_QWORD *)v45 + 15) = *((_QWORD *)v46 + 15);
  *((_QWORD *)v45 + 16) = *((_QWORD *)v46 + 16);
  *((_QWORD *)v45 + 17) = *((_QWORD *)v46 + 17);
  *((_QWORD *)v45 + 18) = *((_QWORD *)v46 + 18);
  *((_QWORD *)v45 + 19) = *((_QWORD *)v46 + 19);
  *((_QWORD *)v45 + 20) = *((_QWORD *)v46 + 20);
  v48 = v9[6];
  v49 = &v7[v48];
  v50 = &v8[v48];
  v51 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  v32 = *(int *)(a3 + 20);
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  v35 = *(int *)(a3 + 24);
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v38 = *(_QWORD *)((char *)a1 + v35);
  v39 = *v37;
  if (!v38)
  {
    if (v39)
    {
      v41 = v37[1];
      *v36 = v39;
      v36[1] = v41;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    return a1;
  }
  if (!v39)
  {
    swift_release();
    goto LABEL_13;
  }
  v40 = v37[1];
  *v36 = v39;
  v36[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1D2D40544(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    v14 = v10[5];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
    v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    v22 = v10[6];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v26 = *(int *)(a3 + 20);
  v27 = *(int *)(a3 + 24);
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  v33 = *v32;
  if (*v32)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  return a1;
}

_QWORD *sub_1D2D4070C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = v9[5];
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
      v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      v23 = v9[6];
      v24 = &v7[v23];
      v25 = &v8[v23];
      v26 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
      *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1D2CD3734((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v39 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v7, v8, v39);
  v40 = v9[5];
  v41 = &v7[v40];
  v42 = &v8[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
  *((_OWORD *)v41 + 2) = v43;
  v44 = *((_OWORD *)v42 + 4);
  *((_OWORD *)v41 + 3) = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 4) = v44;
  v45 = *((_OWORD *)v42 + 6);
  *((_OWORD *)v41 + 5) = *((_OWORD *)v42 + 5);
  *((_OWORD *)v41 + 6) = v45;
  v46 = *((_OWORD *)v42 + 8);
  *((_OWORD *)v41 + 7) = *((_OWORD *)v42 + 7);
  *((_OWORD *)v41 + 8) = v46;
  *((_OWORD *)v41 + 9) = *((_OWORD *)v42 + 9);
  *((_QWORD *)v41 + 20) = *((_QWORD *)v42 + 20);
  v47 = v9[6];
  v48 = &v7[v47];
  v49 = &v8[v47];
  v50 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  v28 = *(int *)(a3 + 20);
  v29 = *(int *)(a3 + 24);
  v30 = (_OWORD *)((char *)a1 + v28);
  v31 = (_OWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = (_QWORD *)((char *)a1 + v29);
  v34 = (_QWORD *)((char *)a2 + v29);
  v35 = *v34;
  if (!*(_QWORD *)((char *)a1 + v29))
  {
    if (v35)
    {
      v37 = v34[1];
      *v33 = v35;
      v33[1] = v37;
      return a1;
    }
LABEL_13:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_13;
  }
  v36 = v34[1];
  *v33 = v35;
  v33[1] = v36;
  swift_release();
  return a1;
}

uint64_t sub_1D2D40A20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D40A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1D2D40AB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D40AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for SystemWidePresentation(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA7DE8);
}

void sub_1D2D40B54()
{
  unint64_t v0;

  sub_1D2D40BD0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D2D40BD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA7DF8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5872D8);
    v0 = sub_1D2D9D98C();
    if (!v1)
      atomic_store(v0, qword_1EFCA7DF8);
  }
}

uint64_t sub_1D2D40C28()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1D2D40C38(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  id v8;

  v3 = objc_msgSend((id)objc_opt_self(), sel__viewControllerForFullScreenPresentationFromView_, v1);
  v4 = v3;
  if (!a1)
    goto LABEL_7;
  if (v3)
  {
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v6 = v4;
    if (objc_msgSend(v6, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      v4 = objc_msgSend(v6, sel_presentingViewController);

LABEL_11:
    }
    else
    {

      do
      {
        v8 = objc_msgSend(v4, sel_presentedViewController);
        if (!v8)
          break;
        v6 = v8;
        if (a1 && objc_msgSend(v8, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
          goto LABEL_11;
        v7 = objc_msgSend(v6, sel_presentedViewController);

        v4 = v7;
LABEL_7:
        ;
      }
      while (v4);
    }
  }
  return v4;
}

void sub_1D2D40D58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t aBlock;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  void *v63;
  void (*v64)();
  uint64_t v65;
  uint64_t v66;

  v2 = v1;
  v58 = (_QWORD *)type metadata accessor for SystemWideConsentView(0);
  v56 = *(v58 - 1);
  v4 = *(_QWORD *)(v56 + 64);
  MEMORY[0x1E0C80A78](v58);
  v5 = sub_1D2D9CB4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v12 = (char *)&v55 - v11;
  v13 = objc_msgSend(a1, sel_view, v10);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1D2CC63E8(0, &qword_1EFCA7FF8);
    v16 = sub_1D2D40C38(v15);

    v57 = a1;
    if (!v16)
      v16 = a1;
    v17 = *(_QWORD *)v2;
    v18 = *(_QWORD *)(v2 + 8);
    v59 = v2;
    aBlock = v17;
    v19 = *(_BYTE *)(v2 + 16);
    v61 = v18;
    LOBYTE(v62) = v19;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5D20);
    MEMORY[0x1D82474B0](&v66);
    if (v66 == 1
      && (v21 = objc_msgSend(v16, sel_presentedViewController),
          v21,
          !v21))
    {
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC0918]), sel_initWithNibName_bundle_, 0, 0);
      objc_msgSend(v36, sel_setModalPresentationStyle_, 7);
      objc_msgSend(v36, sel_setConsentDisplayOnly_, 1);
      v37 = v36;
      sub_1D2D7CD84((uint64_t)v12);
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CD86D0], v5);
      v38 = sub_1D2D9CB40();
      v39 = *(void (**)(char *, uint64_t))(v6 + 8);
      v39(v8, v5);
      v39(v12, v5);
      if ((v38 & 1) != 0)
        v40 = 2;
      else
        v40 = 1;
      objc_msgSend(v37, sel_setOverrideUserInterfaceStyle_, v40);

      v41 = objc_msgSend(v37, sel_sheetPresentationController);
      if (v41)
      {
        v42 = v41;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1D2DA3B50;
        v44 = (void *)objc_opt_self();
        *(_QWORD *)(v43 + 32) = objc_msgSend(v44, sel_mediumDetent);
        *(_QWORD *)(v43 + 40) = objc_msgSend(v44, sel_largeDetent);
        aBlock = v43;
        sub_1D2D9DE78();
        sub_1D2CC63E8(0, &qword_1EFCA8000);
        v45 = (void *)sub_1D2D9DE48();
        swift_bridgeObjectRelease();
        objc_msgSend(v42, sel_setDetents_, v45);

      }
      v46 = objc_msgSend(v37, sel_popoverPresentationController);
      if (v46)
      {
        v47 = v46;
        v48 = objc_msgSend(v57, sel_view);
        objc_msgSend(v47, sel_setSourceView_, v48);

      }
      v49 = objc_msgSend(v37, sel_popoverPresentationController);
      v50 = v59;
      if (v49)
      {
        v51 = v49;
        objc_msgSend(v49, sel_setSourceRect_, *(double *)(v59 + 24), *(double *)(v59 + 32), *(double *)(v59 + 40), *(double *)(v59 + 48));

      }
      sub_1D2CDB6B4(v50, (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SystemWideConsentView);
      v52 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v53 = swift_allocObject();
      *(_QWORD *)(v53 + 16) = v37;
      sub_1D2CD1FD4((uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v53 + v52, type metadata accessor for SystemWideConsentView);
      v64 = sub_1D2D446A0;
      v65 = v53;
      aBlock = MEMORY[0x1E0C809B0];
      v61 = 1107296256;
      v62 = sub_1D2D32468;
      v63 = &block_descriptor_12;
      v54 = _Block_copy(&aBlock);
      v30 = v37;
      swift_release();
      objc_msgSend(v30, sel_setDismissCompletionHandler_, v54);
      _Block_release(v54);
      objc_msgSend(v16, sel_presentViewController_animated_completion_, v30, 1, 0);
    }
    else
    {
      v22 = objc_msgSend(v16, sel_presentedViewController);
      if (v22)
      {
        v23 = v22;
        objc_opt_self();
        v24 = swift_dynamicCastObjCClass();
        if (v24)
        {
          v25 = (void *)v24;
          v58 = v23;
          sub_1D2D7CD84((uint64_t)v12);
          (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CD86D0], v5);
          v26 = sub_1D2D9CB40();
          v27 = *(void (**)(char *, uint64_t))(v6 + 8);
          v27(v8, v5);
          v27(v12, v5);
          if ((v26 & 1) != 0)
            v28 = 2;
          else
            v28 = 1;
          objc_msgSend(v25, sel_setOverrideUserInterfaceStyle_, v28);

        }
      }
      v29 = objc_msgSend(v16, sel_presentedViewController);
      if (!v29)
        goto LABEL_31;
      v30 = v29;
      objc_opt_self();
      v31 = swift_dynamicCastObjCClass();
      if (!v31
        || (v32 = (void *)v31,
            v33 = *(_QWORD *)(v59 + 8),
            v34 = *(_BYTE *)(v59 + 16),
            aBlock = *(_QWORD *)v59,
            v61 = v33,
            LOBYTE(v62) = v34,
            MEMORY[0x1D82474B0](&v66, v20),
            (v66 & 1) != 0)
        || !objc_msgSend(v32, sel_consentDisplayOnly))
      {
        v35 = v30;
        v30 = v16;
LABEL_30:

        v16 = v30;
LABEL_31:

        return;
      }
      objc_msgSend(v57, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    v35 = v16;
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1D2D4138C(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(id);

  if (qword_1EFCA54A8 != -1)
    swift_once();
  v4 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EFCB2600);
  v5 = a1;
  v6 = sub_1D2D9C8DC();
  v7 = sub_1D2D9E04C();
  if (!os_log_type_enabled(v6, v7))
  {

    v9 = *(void (**)(id))(a2 + 56);
    if (!v9)
      return;
    goto LABEL_7;
  }
  v8 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)v8 = 67240192;
  objc_msgSend(v5, sel_userConsentConfirmed);
  sub_1D2D9E1B4();

  _os_log_impl(&dword_1D2CC0000, v6, v7, "System wide dismissed, consent: %{BOOL,public}d", v8, 8u);
  MEMORY[0x1D8248974](v8, -1, -1);

  v9 = *(void (**)(id))(a2 + 56);
  if (v9)
LABEL_7:
    v9(objc_msgSend(v5, sel_userConsentConfirmed));
}

uint64_t sub_1D2D41500()
{
  sub_1D2CC66E4(&qword_1EFCA8010, type metadata accessor for SystemWideConsentView, (uint64_t)&unk_1D2DA42C0);
  return sub_1D2D9D398();
}

uint64_t sub_1D2D41568()
{
  sub_1D2CC66E4(&qword_1EFCA8010, type metadata accessor for SystemWideConsentView, (uint64_t)&unk_1D2DA42C0);
  return sub_1D2D9D368();
}

void sub_1D2D415D0()
{
  sub_1D2CC66E4(&qword_1EFCA8010, type metadata accessor for SystemWideConsentView, (uint64_t)&unk_1D2DA42C0);
  sub_1D2D9D38C();
  __break(1u);
}

void sub_1D2D4160C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  _QWORD aBlock[6];

  v108 = type metadata accessor for SystemWideSheetView(0);
  v100 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v101 = v2;
  v102 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9CB4C();
  v106 = *(_QWORD *)(v3 - 8);
  v107 = v3;
  MEMORY[0x1E0C80A78](v3);
  v104 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v105 = (uint64_t)&v99 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v99 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v99 - v17;
  v19 = type metadata accessor for VisualTranslationModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)&v21 = MEMORY[0x1E0C80A78](v19).n128_u64[0];
  v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend(a1, sel_view, v21);
  if (!v24)
  {
    __break(1u);
    return;
  }
  v25 = v24;
  v26 = sub_1D2CC63E8(0, &qword_1EFCA7FF8);
  v27 = sub_1D2D40C38(v26);

  v110 = v27;
  v103 = a1;
  if (!v27)
    v110 = a1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  MEMORY[0x1D82474B0]();
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v29(v18, 1, v19) == 1)
  {
    sub_1D2CCADA4((uint64_t)v18, &qword_1ED5872D8);
LABEL_8:
    v33 = objc_msgSend(v110, sel_presentedViewController);
    if (v33)
    {
      v34 = v33;
      objc_opt_self();
      v35 = swift_dynamicCastObjCClass();
      if (v35)
      {
        v36 = (void *)v35;
        v102 = v34;
        v37 = v105;
        sub_1D2D7CD84(v105);
        v38 = *MEMORY[0x1E0CD86D0];
        v39 = v106;
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 104);
        v41 = v19;
        v42 = v104;
        v108 = (uint64_t)v29;
        v43 = v107;
        v40(v104, v38, v107);
        v44 = sub_1D2D9CB40();
        v45 = *(void (**)(char *, uint64_t))(v39 + 8);
        v46 = v42;
        v19 = v41;
        v45(v46, v43);
        v47 = v43;
        v29 = (uint64_t (*)(char *, uint64_t, uint64_t))v108;
        v45((char *)v37, v47);
        if ((v44 & 1) != 0)
          v48 = 2;
        else
          v48 = 1;
        objc_msgSend(v36, sel_setOverrideUserInterfaceStyle_, v48);

      }
    }
    MEMORY[0x1D82474B0](v28);
    v49 = v29(v15, 1, v19);
    sub_1D2CCADA4((uint64_t)v15, &qword_1ED5872D8);
    if (v49 == 1)
    {
      v50 = objc_msgSend(v110, sel_presentedViewController);

      if (v50)
        objc_msgSend(v103, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }

    return;
  }
  v30 = (uint64_t)v18;
  v31 = (uint64_t)v23;
  sub_1D2CD1FD4(v30, (uint64_t)v23, type metadata accessor for VisualTranslationModel);
  v32 = objc_msgSend(v110, sel_presentedViewController);

  if (v32)
  {
    sub_1D2CD3734((uint64_t)v23, type metadata accessor for VisualTranslationModel);
    goto LABEL_8;
  }
  v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC0918]), sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v51, sel_setModalPresentationStyle_, 7);
  v52 = *(int *)(v19 + 28);
  v53 = *(_QWORD *)(v31 + v52);
  v54 = swift_bridgeObjectRetain();
  Array<A>.sourceParagraph.getter(v54);
  swift_bridgeObjectRelease();
  v55 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v56 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(v55, sel_initWithString_, v56);

  objc_msgSend(v51, sel_setText_, v57);
  if (*(_QWORD *)(v53 + 16))
  {
    v58 = type metadata accessor for TextModel();
    v59 = *(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80);
    sub_1D2CCAD60(v53 + ((v59 + 32) & ~v59) + *(int *)(v58 + 28), (uint64_t)v12, &qword_1ED587850);
    v60 = sub_1D2D9C7EC();
    v61 = *(_QWORD *)(v60 - 8);
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v12, 1, v60);
    v63 = 0;
    v64 = v103;
    if (v62 != 1)
    {
      v63 = (void *)sub_1D2D9C744();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v60);
    }
  }
  else
  {
    v65 = sub_1D2D9C7EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v12, 1, 1, v65);
    v63 = 0;
    v64 = v103;
  }
  objc_msgSend(v51, sel_setSourceLocale_, v63);

  v66 = *(_QWORD *)(v31 + v52);
  if (*(_QWORD *)(v66 + 16))
  {
    v67 = type metadata accessor for TextModel();
    v68 = *(unsigned __int8 *)(*(_QWORD *)(v67 - 8) + 80);
    v69 = v66 + ((v68 + 32) & ~v68) + *(int *)(v67 + 36);
    v70 = sub_1D2D9C7EC();
    v71 = *(_QWORD *)(v70 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v9, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v9, 0, 1, v70);
    v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48))(v9, 1, v70);
    v73 = 0;
    v74 = v108;
    if (v72 != 1)
    {
      v73 = (void *)sub_1D2D9C744();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v70);
    }
  }
  else
  {
    v75 = sub_1D2D9C7EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v9, 1, 1, v75);
    v73 = 0;
    v74 = v108;
  }
  objc_msgSend(v51, sel_setTargetLocale_, v73);

  v76 = v51;
  v77 = v105;
  sub_1D2D7CD84(v105);
  v78 = v106;
  v79 = v107;
  v80 = v104;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v104, *MEMORY[0x1E0CD86D0], v107);
  v81 = sub_1D2D9CB40();
  v82 = *(void (**)(char *, uint64_t))(v78 + 8);
  v82(v80, v79);
  v82((char *)v77, v79);
  if ((v81 & 1) != 0)
    v83 = 2;
  else
    v83 = 1;
  objc_msgSend(v76, sel_setOverrideUserInterfaceStyle_, v83);

  v84 = objc_msgSend(v76, sel_sheetPresentationController);
  if (v84)
  {
    v85 = v84;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_1D2DA3B50;
    v87 = (void *)objc_opt_self();
    *(_QWORD *)(v86 + 32) = objc_msgSend(v87, sel_mediumDetent);
    *(_QWORD *)(v86 + 40) = objc_msgSend(v87, sel_largeDetent);
    aBlock[0] = v86;
    sub_1D2D9DE78();
    sub_1D2CC63E8(0, &qword_1EFCA8000);
    v88 = (void *)sub_1D2D9DE48();
    swift_bridgeObjectRelease();
    objc_msgSend(v85, sel_setDetents_, v88);

  }
  v89 = objc_msgSend(v76, sel_popoverPresentationController);
  if (v89)
  {
    v90 = v89;
    v91 = objc_msgSend(v64, sel_view);
    objc_msgSend(v90, sel_setSourceView_, v91);

  }
  v92 = objc_msgSend(v76, sel_popoverPresentationController);
  if (v92)
  {
    v93 = v92;
    objc_msgSend(v92, sel_setSourceRect_, *(double *)(v109 + *(int *)(v74 + 20)), *(double *)(v109 + *(int *)(v74 + 20) + 8), *(double *)(v109 + *(int *)(v74 + 20) + 16), *(double *)(v109 + *(int *)(v74 + 20) + 24));

  }
  v94 = (uint64_t)v102;
  sub_1D2CDB6B4(v109, (uint64_t)v102, type metadata accessor for SystemWideSheetView);
  v95 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  v96 = swift_allocObject();
  sub_1D2CD1FD4(v94, v96 + v95, type metadata accessor for SystemWideSheetView);
  aBlock[4] = sub_1D2D4458C;
  aBlock[5] = v96;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2D32468;
  aBlock[3] = &block_descriptor_6;
  v97 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v76, sel_setDismissCompletionHandler_, v97);
  _Block_release(v97);
  v98 = v110;
  objc_msgSend(v110, sel_presentViewController_animated_completion_, v76, 1, 0);

  sub_1D2CD3734(v31, type metadata accessor for VisualTranslationModel);
}

uint64_t sub_1D2D41FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t (**v10)(void);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  v8 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1D2CCAD60((uint64_t)v7, (uint64_t)v4, &qword_1ED5872D8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  sub_1D2D9D968();
  sub_1D2CCADA4((uint64_t)v7, &qword_1ED5872D8);
  result = type metadata accessor for SystemWideSheetView(0);
  v10 = (uint64_t (**)(void))(a1 + *(int *)(result + 24));
  if (*v10)
    return (*v10)();
  return result;
}

id sub_1D2D420B0()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F20]), sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1D2D420E0()
{
  sub_1D2CC66E4(&qword_1EFCA8008, type metadata accessor for SystemWideSheetView, (uint64_t)&unk_1D2DA4388);
  return sub_1D2D9D398();
}

uint64_t sub_1D2D42148()
{
  sub_1D2CC66E4(&qword_1EFCA8008, type metadata accessor for SystemWideSheetView, (uint64_t)&unk_1D2DA4388);
  return sub_1D2D9D368();
}

void sub_1D2D421B0()
{
  sub_1D2CC66E4(&qword_1EFCA8008, type metadata accessor for SystemWideSheetView, (uint64_t)&unk_1D2DA4388);
  sub_1D2D9D38C();
  __break(1u);
}

uint64_t sub_1D2D421EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a2;
  v38 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SystemWideSheetView(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E30);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CCAD60(v2, (uint64_t)v5, qword_1EFCA7D88);
  v15 = type metadata accessor for SystemWidePresentation(0);
  v16 = *(int *)(v15 + 24);
  v17 = v2 + *(int *)(v15 + 20);
  v36 = *(_OWORD *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 24);
  v20 = v2 + v16;
  v21 = *(_QWORD *)(v2 + v16);
  v22 = *(_QWORD *)(v20 + 8);
  v23 = (uint64_t *)&v8[v6[6]];
  *v23 = 0;
  v23[1] = 0;
  v24 = (uint64_t *)&v8[v6[7]];
  *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  swift_storeEnumTagMultiPayload();
  sub_1D2D42764((uint64_t)v5, (uint64_t)v8);
  v25 = &v8[v6[5]];
  *(_OWORD *)v25 = v36;
  *((_QWORD *)v25 + 2) = v18;
  *((_QWORD *)v25 + 3) = v19;
  v26 = *v23;
  sub_1D2CCCEF0(v21);
  sub_1D2CCCF1C(v26);
  *v23 = v21;
  v23[1] = v22;
  sub_1D2CD1FD4((uint64_t)v8, (uint64_t)v11, type metadata accessor for SystemWideSheetView);
  sub_1D2CDB6B4((uint64_t)v11, (uint64_t)v14, type metadata accessor for SystemWideSheetView);
  *(_QWORD *)&v14[*(int *)(v12 + 36)] = 0;
  sub_1D2CD3734((uint64_t)v11, type metadata accessor for SystemWideSheetView);
  v27 = sub_1D2D9DA70();
  v29 = v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E40);
  v31 = v37;
  v32 = v37 + *(int *)(v30 + 36);
  sub_1D2CCAD60((uint64_t)v14, v32, &qword_1EFCA7E30);
  v33 = (uint64_t *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E48) + 36));
  *v33 = v27;
  v33[1] = v29;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v38, v34);
  return sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA7E30);
}

uint64_t sub_1D2D4247C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v25 = a1;
  v3 = type metadata accessor for SystemWideConsentView(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E58);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[1];
  v11 = *((_BYTE *)v2 + 16);
  v26 = *v2;
  v9 = v26;
  v12 = v2[7];
  v13 = v2[8];
  *(_QWORD *)&v5[*(int *)(v3 + 28)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v5 = v9;
  *((_QWORD *)v5 + 1) = v10;
  v5[16] = v11;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v2 + 3);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 5);
  *((_QWORD *)v5 + 7) = v12;
  *((_QWORD *)v5 + 8) = v13;
  sub_1D2CDB6B4((uint64_t)v5, (uint64_t)v8, type metadata accessor for SystemWideConsentView);
  *(_QWORD *)&v8[*(int *)(v6 + 36)] = 0;
  sub_1D2D427C0((uint64_t)&v26);
  swift_retain();
  sub_1D2CCCEF0(v12);
  sub_1D2CD3734((uint64_t)v5, type metadata accessor for SystemWideConsentView);
  v14 = sub_1D2D9DA70();
  v16 = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E60);
  v18 = v24;
  v19 = v24 + *(int *)(v17 + 36);
  sub_1D2CCAD60((uint64_t)v8, v19, &qword_1EFCA7E58);
  v20 = (uint64_t *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E68) + 36));
  *v20 = v14;
  v20[1] = v16;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v25, v21);
  return sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA7E58);
}

uint64_t sub_1D2D42660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2D4247C(a1, a2);
}

uint64_t sub_1D2D426A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SystemWideSheetView(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA7ED8);
}

uint64_t sub_1D2D426C4()
{
  return sub_1D2D9CE58();
}

uint64_t sub_1D2D426E4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9CB4C();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1D2D9CE64();
}

uint64_t sub_1D2D42764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SystemWideConsentView(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA7F78);
}

uint64_t sub_1D2D427C0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t *sub_1D2D427E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = (int *)type metadata accessor for VisualTranslationModel(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      v15 = v11[5];
      v16 = &v9[v15];
      v17 = &v10[v15];
      v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
      v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      v23 = v11[6];
      v24 = &v9[v23];
      v25 = &v10[v23];
      v26 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *(_QWORD *)&v9[v11[7]] = *(_QWORD *)&v10[v11[7]];
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      v9[v11[9]] = v10[v11[9]];
      v9[v11[10]] = v10[v11[10]];
      v9[v11[11]] = v10[v11[11]];
      v27 = *(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      v27(v9, 0, 1, v11);
    }
    v28 = a3[5];
    v29 = a3[6];
    v30 = (_OWORD *)((char *)a1 + v28);
    v31 = (_OWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (uint64_t *)((char *)a1 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    if (*v34)
    {
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    v36 = a3[7];
    v37 = (uint64_t *)((char *)a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v39 = sub_1D2D9CB4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2D42A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    swift_release();
  v9 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_1D2D9CB4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_1D2D42BA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    v14 = v10[5];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
    v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    v22 = v10[6];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    v26 = *(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    v26(v8, 0, 1, v10);
  }
  v27 = a3[5];
  v28 = a3[6];
  v29 = (_OWORD *)((char *)a1 + v27);
  v30 = (_OWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)((char *)a1 + v28);
  v33 = (_QWORD *)((char *)a2 + v28);
  if (*v33)
  {
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  v35 = a3[7];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v38 = sub_1D2D9CB4C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  }
  else
  {
    *v36 = *v37;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D2D42DF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v9[5];
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = *((_QWORD *)v17 + 20);
      v20 = *((_OWORD *)v17 + 8);
      v19 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 7) = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 8) = v20;
      *((_OWORD *)v16 + 9) = v19;
      *((_QWORD *)v16 + 20) = v18;
      v22 = *((_OWORD *)v17 + 5);
      v21 = *((_OWORD *)v17 + 6);
      v23 = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 3) = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = v23;
      *((_OWORD *)v16 + 5) = v22;
      *((_OWORD *)v16 + 6) = v21;
      v25 = *((_OWORD *)v17 + 1);
      v24 = *((_OWORD *)v17 + 2);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v25;
      *((_OWORD *)v16 + 2) = v24;
      v26 = v9[6];
      v27 = &v7[v26];
      v28 = &v8[v26];
      v29 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
      *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      v30 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      v30(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1D2CD3734((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  v47 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v7, v8, v47);
  v48 = v9[5];
  v49 = &v7[v48];
  v50 = &v8[v48];
  v51 = *(_QWORD *)v50;
  v49[8] = v50[8];
  *(_QWORD *)v49 = v51;
  *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
  *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
  *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
  *((_QWORD *)v49 + 5) = *((_QWORD *)v50 + 5);
  *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
  *((_QWORD *)v49 + 7) = *((_QWORD *)v50 + 7);
  *((_QWORD *)v49 + 8) = *((_QWORD *)v50 + 8);
  *((_QWORD *)v49 + 9) = *((_QWORD *)v50 + 9);
  *((_QWORD *)v49 + 10) = *((_QWORD *)v50 + 10);
  *((_QWORD *)v49 + 11) = *((_QWORD *)v50 + 11);
  *((_QWORD *)v49 + 12) = *((_QWORD *)v50 + 12);
  *((_QWORD *)v49 + 13) = *((_QWORD *)v50 + 13);
  *((_QWORD *)v49 + 14) = *((_QWORD *)v50 + 14);
  *((_QWORD *)v49 + 15) = *((_QWORD *)v50 + 15);
  *((_QWORD *)v49 + 16) = *((_QWORD *)v50 + 16);
  *((_QWORD *)v49 + 17) = *((_QWORD *)v50 + 17);
  *((_QWORD *)v49 + 18) = *((_QWORD *)v50 + 18);
  *((_QWORD *)v49 + 19) = *((_QWORD *)v50 + 19);
  *((_QWORD *)v49 + 20) = *((_QWORD *)v50 + 20);
  v52 = v9[6];
  v53 = &v7[v52];
  v54 = &v8[v52];
  v55 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  v32 = a3[5];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  v35 = a3[6];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a1 + v35);
  v39 = *(_QWORD *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      v40 = *((_QWORD *)v37 + 1);
      *v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v39)
  {
    v41 = *((_QWORD *)v37 + 1);
    *v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_14:
  if (a1 != a2)
  {
    v42 = a3[7];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    sub_1D2CCADA4((uint64_t)a1 + v42, &qword_1EFCA7E38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v45 = sub_1D2D9CB4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    }
    else
    {
      *v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1D2D43248(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    v14 = v10[5];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
    v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    v22 = v10[6];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v26 = a3[5];
  v27 = a3[6];
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  v33 = *v32;
  if (*v32)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  v35 = a3[7];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = sub_1D2D9CB4C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1D2D43488(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = v9[5];
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
      v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      v23 = v9[6];
      v24 = &v7[v23];
      v25 = &v8[v23];
      v26 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
      *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1D2CD3734((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v44 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v7, v8, v44);
  v45 = v9[5];
  v46 = &v7[v45];
  v47 = &v8[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  v48 = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 1) = *((_OWORD *)v47 + 1);
  *((_OWORD *)v46 + 2) = v48;
  v49 = *((_OWORD *)v47 + 4);
  *((_OWORD *)v46 + 3) = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 4) = v49;
  v50 = *((_OWORD *)v47 + 6);
  *((_OWORD *)v46 + 5) = *((_OWORD *)v47 + 5);
  *((_OWORD *)v46 + 6) = v50;
  v51 = *((_OWORD *)v47 + 8);
  *((_OWORD *)v46 + 7) = *((_OWORD *)v47 + 7);
  *((_OWORD *)v46 + 8) = v51;
  *((_OWORD *)v46 + 9) = *((_OWORD *)v47 + 9);
  *((_QWORD *)v46 + 20) = *((_QWORD *)v47 + 20);
  v52 = v9[6];
  v53 = &v7[v52];
  v54 = &v8[v52];
  v55 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  v28 = a3[5];
  v29 = a3[6];
  v30 = (_OWORD *)((char *)a1 + v28);
  v31 = (_OWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = (_QWORD *)((char *)a1 + v29);
  v34 = (char *)a2 + v29;
  v35 = *(_QWORD *)((char *)a2 + v29);
  if (*(_QWORD *)((char *)a1 + v29))
  {
    if (v35)
    {
      v36 = *((_QWORD *)v34 + 1);
      *v33 = v35;
      v33[1] = v36;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v35)
  {
    v37 = *((_QWORD *)v34 + 1);
    *v33 = v35;
    v33[1] = v37;
    goto LABEL_14;
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
LABEL_14:
  if (a1 != a2)
  {
    v38 = a3[7];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    sub_1D2CCADA4((uint64_t)a1 + v38, &qword_1EFCA7E38);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_1D2D9CB4C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D2D4382C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D43838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7E78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t sub_1D2D438F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D43900(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7E78);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D2D439AC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2D40BD0();
  if (v0 <= 0x3F)
  {
    sub_1D2D43A44();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D2D43A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA7EE8[0])
  {
    sub_1D2D9CB4C();
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, qword_1EFCA7EE8);
  }
}

uint64_t sub_1D2D43A98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 7;
    v9 = a2[7];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = v10;
    swift_retain();
    swift_retain();
    if (v9)
    {
      v11 = a2[8];
      *(_QWORD *)(a1 + 56) = v9;
      *(_QWORD *)(a1 + 64) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *v8;
    }
    v12 = *(int *)(a3 + 28);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_1D2D9CB4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2D43BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 56))
    swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1D2D9CB4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D2D43C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = (_OWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_1D2D9CB4C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D2D43D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  if (v6)
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 64) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 28);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_1D2CCADA4(a1 + v10, &qword_1EFCA7E38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_1D2D9CB4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D2D43ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v4;
    *(_QWORD *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1D2D9CB4C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1D2D43FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  if (v7)
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v6;
      *(_QWORD *)(a1 + 64) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_1D2CCADA4(a1 + v11, &qword_1EFCA7E38);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_1D2D9CB4C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D2D440F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D44100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7E78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1D2D44180()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D4418C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7E78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1D2D44204()
{
  unint64_t v0;

  sub_1D2D43A44();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1D2D44290()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7FB8;
  if (!qword_1EFCA7FB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7E40);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA7FC0, &qword_1EFCA7E50, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA7FC8, &qword_1EFCA7E48, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7FB8);
  }
  return result;
}

unint64_t sub_1D2D44330()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA7FD0;
  if (!qword_1EFCA7FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA7E60);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA7FD8, &qword_1EFCA7E70, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA7FE0, &qword_1EFCA7E68, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA7FD0);
  }
  return result;
}

uint64_t sub_1D2D443CC()
{
  return sub_1D2CC66E4(&qword_1EFCA7FE8, type metadata accessor for SystemWideConsentView, (uint64_t)&unk_1D2DA4270);
}

uint64_t sub_1D2D443F8()
{
  return sub_1D2CC66E4(&qword_1EFCA7FF0, type metadata accessor for SystemWideSheetView, (uint64_t)&unk_1D2DA4338);
}

uint64_t sub_1D2D44424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for SystemWideSheetView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88) + 32);
  v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v3 + *(int *)(v1 + 24)))
    swift_release();
  v9 = v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1D2D9CB4C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D2D4458C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SystemWideSheetView(0) - 8) + 80);
  return sub_1D2D41FB8(v0 + ((v1 + 16) & ~v1));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1D2D445D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SystemWideConsentView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  swift_release();
  swift_release();
  if (*(_QWORD *)(v3 + 56))
    swift_release();
  v4 = v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7E38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_1D2D9CB4C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1D2D446A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SystemWideConsentView(0) - 8) + 80);
  sub_1D2D4138C(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

BOOL static TaskHint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TaskHint.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t TaskHint.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

unint64_t sub_1D2D44764()
{
  unint64_t result;

  result = qword_1EFCA8018;
  if (!qword_1EFCA8018)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TaskHint, &type metadata for TaskHint);
    atomic_store(result, (unint64_t *)&qword_1EFCA8018);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TaskHint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D447F4 + 4 * byte_1D2DA4405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D44828 + 4 * byte_1D2DA4400[v4]))();
}

uint64_t sub_1D2D44828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D44830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D44838);
  return result;
}

uint64_t sub_1D2D44844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D4484CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D44850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D44858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskHint()
{
  return &type metadata for TaskHint;
}

uint64_t getEnumTagSinglePayload for TextError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D2D44950 + 4 * byte_1D2DA4491[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D2D44984 + 4 * byte_1D2DA448C[v4]))();
}

uint64_t sub_1D2D44984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D4498C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D44994);
  return result;
}

uint64_t sub_1D2D449A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D449A8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D2D449AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D449B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextError()
{
  return &type metadata for TextError;
}

uint64_t sub_1D2D449D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D44A0C + 4 * byte_1D2DA4496[a1]))(0x7165527974706D65, 0xEC00000074736575);
}

uint64_t sub_1D2D44A0C()
{
  return 0x756C63784564696CLL;
}

uint64_t sub_1D2D44A2C()
{
  return 0x6E6F636E4964696CLL;
}

uint64_t sub_1D2D44A50()
{
  return 0x7365526F4E64696CLL;
}

uint64_t sub_1D2D44A70()
{
  return 0x6544746F4E64696CLL;
}

uint64_t sub_1D2D44A94()
{
  return 0x7075736E5564696CLL;
}

unint64_t sub_1D2D44AB8()
{
  return 0xD000000000000013;
}

unint64_t sub_1D2D44AE0()
{
  return 0xD000000000000017;
}

uint64_t sub_1D2D44B18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D44B54 + 4 * byte_1D2DA44A0[a1]))(0x7165527974706D65, 0xEC00000074736575);
}

uint64_t sub_1D2D44B54()
{
  return 0x756C63784564696CLL;
}

uint64_t sub_1D2D44B74()
{
  return 0x6E6F636E4964696CLL;
}

uint64_t sub_1D2D44B98()
{
  return 0x7365526F4E64696CLL;
}

uint64_t sub_1D2D44BB8()
{
  return 0x6544746F4E64696CLL;
}

uint64_t sub_1D2D44BDC()
{
  return 0x7075736E5564696CLL;
}

unint64_t sub_1D2D44C00()
{
  return 0xD000000000000013;
}

unint64_t sub_1D2D44C28()
{
  return 0xD000000000000017;
}

uint64_t sub_1D2D44C60()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  sub_1D2D44B18(v1);
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D44CC0()
{
  unsigned __int8 *v0;

  sub_1D2D44B18(*v0);
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D44D00()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  sub_1D2D44B18(v1);
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D44D5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D44EE8();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D44D88@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D2D44B18(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D2D44DB0()
{
  unsigned __int8 *v0;

  return sub_1D2D449D0(*v0);
}

void sub_1D2D44DB8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E9448308;
}

uint64_t sub_1D2D44DC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1D2D44B18(*a1);
  v5 = v4;
  if (v3 == sub_1D2D44B18(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1D2D44E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA8020;
  if (!qword_1EFCA8020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8028);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA8020);
  }
  return result;
}

unint64_t sub_1D2D44EA4()
{
  unint64_t result;

  result = qword_1EFCA8030;
  if (!qword_1EFCA8030)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA44B8, &type metadata for TextError);
    atomic_store(result, (unint64_t *)&qword_1EFCA8030);
  }
  return result;
}

uint64_t sub_1D2D44EE8()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t static LowConfidenceLID.maxLocalesToSuggest.getter()
{
  return 2;
}

uint64_t sub_1D2D44F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD *v53;
  void *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t aBlock[7];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330);
  v67 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v65 = v5;
  v66 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Signpost();
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v63 = v7;
  v64 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v68 = (uint64_t)&v59 - v9;
  v10 = type metadata accessor for TextModel();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v60 = a1;
    v61 = v4;
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v69 = v12;
    sub_1D2D03FCC(0, v15, 0);
    v16 = v69;
    v17 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v70 = *(_QWORD *)(v11 + 72);
    v18 = aBlock[0];
    v59 = v17;
    do
    {
      sub_1D2CDB6B4(v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v19 = &v14[v16[6]];
      v21 = *(_QWORD *)v19;
      v20 = *((_QWORD *)v19 + 1);
      swift_bridgeObjectRetain();
      sub_1D2CD3734((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03FCC(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v16 = v69;
        v18 = aBlock[0];
      }
      v23 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1D2D03FCC(v22 > 1, v23 + 1, 1);
        v16 = v69;
        v18 = aBlock[0];
      }
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v18 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v20;
      v17 += v70;
      --v15;
    }
    while (v15);
    v25 = *(_QWORD *)(v59 + v16[12]);
    goto LABEL_11;
  }
  v18 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
    v60 = a1;
    v61 = v4;
    v25 = 0;
LABEL_11:
    if (qword_1ED587118 != -1)
      swift_once();
    v26 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED5886C8);
    v27 = sub_1D2D9C8DC();
    v28 = sub_1D2D9E028();
    v29 = os_log_type_enabled(v27, v28);
    v70 = v25;
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v71 = v25;
      aBlock[0] = v31;
      *(_DWORD *)v30 = 136446210;
      type metadata accessor for _LTTextLanguageDetectorStrategy(0);
      v32 = sub_1D2D9DD28();
      v71 = sub_1D2CF78E0(v32, v33, aBlock);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2CC0000, v27, v28, "Text LID request strategy: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v31, -1, -1);
      MEMORY[0x1D8248974](v30, -1, -1);
    }

    v34 = v60;
    v35 = v68;
    sub_1D2D3A46C(2, v68);
    v69 = (int *)objc_opt_self();
    v60 = sub_1D2D9DE48();
    v36 = v35;
    v37 = v64;
    sub_1D2CDB6B4(v36, v64, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    v38 = v66;
    v39 = v67;
    v40 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v34, v61);
    v41 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    v42 = (v63 + *(unsigned __int8 *)(v39 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v43 = (v65 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    v44 = swift_allocObject();
    sub_1D2CD1FD4(v37, v44 + v41, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v44 + v42, v38, v40);
    *(_QWORD *)(v44 + v43) = v18;
    v45 = v70;
    *(_QWORD *)(v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8)) = v70;
    aBlock[4] = (uint64_t)sub_1D2D4778C;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D2CFD618;
    aBlock[3] = (uint64_t)&block_descriptor_7;
    v46 = _Block_copy(aBlock);
    swift_release();
    v47 = (void *)v60;
    objc_msgSend(v69, sel_languagesForText_usingModel_strategy_useDedicatedTextMachPort_completion_, v60, 1, v45, 1, v46);
    _Block_release(v46);

    return sub_1D2CD3734(v68, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  }
  swift_bridgeObjectRelease();
  if (qword_1ED587118 != -1)
    swift_once();
  v49 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v49, (uint64_t)qword_1ED5886C8);
  v50 = sub_1D2D9C8DC();
  v51 = sub_1D2D9E034();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v52 = 138412290;
    sub_1D2D47830();
    v54 = (void *)swift_allocError();
    *v55 = 0;
    v56 = sub_1D2D9C5F4();

    aBlock[0] = v56;
    sub_1D2D9E1B4();
    *v53 = v56;
    _os_log_impl(&dword_1D2CC0000, v50, v51, "Failed to do LID since text is empty: %@", v52, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v53, -1, -1);
    MEMORY[0x1D8248974](v52, -1, -1);
  }

  sub_1D2D47830();
  v57 = swift_allocError();
  *v58 = 0;
  aBlock[0] = v57;
  return sub_1D2D9DEC0();
}

uint64_t sub_1D2D455F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  void *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  void *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  os_log_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;

  v72 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  if (a1)
  {
    v73 = a1;
    v22 = objc_msgSend(v73, sel_dominantLocale);
    if (v22)
    {
      v23 = v22;
      sub_1D2D9C75C();

      v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v24(v11, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
      {
        v24(v21, v11, v12);
        if (qword_1ED587118 != -1)
          swift_once();
        v25 = sub_1D2D9C8F4();
        __swift_project_value_buffer(v25, (uint64_t)qword_1ED5886C8);
        v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
        v26(v15, v21, v12);
        swift_bridgeObjectRetain_n();
        v27 = sub_1D2D9C8DC();
        v28 = sub_1D2D9E028();
        v71 = v28;
        if (os_log_type_enabled(v27, v28))
        {
          v29 = swift_slowAlloc();
          v69 = a3;
          v30 = v29;
          v31 = swift_slowAlloc();
          v67 = v31;
          *(_DWORD *)v30 = 134349827;
          v74 = *(_QWORD *)(a4 + 16);
          v75 = v31;
          v68 = v26;
          sub_1D2D9E1B4();
          *(_WORD *)(v30 + 12) = 2082;
          v70 = a2;
          v66 = v27;
          v32 = sub_1D2D9C714();
          v74 = sub_1D2CF78E0(v32, v33, &v75);
          sub_1D2D9E1B4();
          swift_bridgeObjectRelease();
          v34 = *(void (**)(char *, uint64_t))(v13 + 8);
          v34(v15, v12);
          v35 = v34;
          *(_WORD *)(v30 + 22) = 2082;
          v74 = v72;
          type metadata accessor for _LTTextLanguageDetectorStrategy(0);
          v36 = sub_1D2D9DD28();
          v74 = sub_1D2CF78E0(v36, v37, &v75);
          sub_1D2D9E1B4();
          swift_bridgeObjectRelease();
          *(_WORD *)(v30 + 32) = 2085;
          v38 = swift_bridgeObjectRetain();
          v39 = MEMORY[0x1D82479C0](v38, MEMORY[0x1E0DEA968]);
          v41 = v40;
          swift_bridgeObjectRelease();
          v74 = sub_1D2CF78E0(v39, v41, &v75);
          v26 = v68;
          sub_1D2D9E1B4();
          swift_bridgeObjectRelease_n();
          v42 = v35;
          swift_bridgeObjectRelease();
          v43 = v66;
          _os_log_impl(&dword_1D2CC0000, v66, (os_log_type_t)v71, "Successfully identified text of length %{public}ld as %{public}s using strategy: %{public}s; text: %{sensitive}s",
            (uint8_t *)v30,
            0x2Au);
          v44 = v67;
          swift_arrayDestroy();
          MEMORY[0x1D8248974](v44, -1, -1);
          MEMORY[0x1D8248974](v30, -1, -1);

        }
        else
        {
          v42 = *(void (**)(char *, uint64_t))(v13 + 8);
          v42(v15, v12);

          swift_bridgeObjectRelease_n();
        }
        v26(v18, v21, v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330);
        sub_1D2D9DECC();

        v42(v21, v12);
        return sub_1D2D3A96C();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    }
    sub_1D2CCADA4((uint64_t)v11, &qword_1ED587850);
    if (qword_1ED587118 != -1)
      swift_once();
    v55 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v55, (uint64_t)qword_1ED5886C8);
    v56 = sub_1D2D9C8DC();
    v57 = sub_1D2D9E034();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v58 = 138412290;
      sub_1D2D47830();
      v60 = (void *)swift_allocError();
      *v61 = 2;
      v62 = sub_1D2D9C5F4();

      v75 = v62;
      sub_1D2D9E1B4();
      *v59 = v62;
      _os_log_impl(&dword_1D2CC0000, v56, v57, "Failed to get dominant result for text LID: %@", v58, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v59, -1, -1);
      MEMORY[0x1D8248974](v58, -1, -1);
    }

    sub_1D2D47830();
    v63 = swift_allocError();
    *v64 = 2;
    v75 = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330);
    sub_1D2D9DEC0();

  }
  else
  {
    if (qword_1ED587118 != -1)
      swift_once();
    v45 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED5886C8);
    v46 = sub_1D2D9C8DC();
    v47 = sub_1D2D9E034();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v48 = 138412290;
      sub_1D2D47830();
      v50 = (void *)swift_allocError();
      *v51 = 3;
      v52 = sub_1D2D9C5F4();

      v75 = v52;
      sub_1D2D9E1B4();
      *v49 = v52;
      _os_log_impl(&dword_1D2CC0000, v46, v47, "Faield to get result for text LID: %@", v48, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v49, -1, -1);
      MEMORY[0x1D8248974](v48, -1, -1);
    }

    sub_1D2D47830();
    v53 = swift_allocError();
    *v54 = 3;
    v75 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330);
    sub_1D2D9DEC0();
  }
  return sub_1D2D3A96C();
}

uint64_t static TextIdentificationService.identify(_:grouped:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[24];
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587078);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[16] = a2;
  v10 = a1;
  type metadata accessor for TextModel();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF07B8], v4);
  return sub_1D2D9DF50();
}

uint64_t sub_1D2D45EA4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_BYTE *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_bridgeObjectRetain();
  sub_1D2D06D10((uint64_t)v11, (uint64_t)&unk_1EFCA8048, v14);
  return swift_release();
}

uint64_t sub_1D2D45FFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D45EA4(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for LowConfidenceLID()
{
  return &type metadata for LowConfidenceLID;
}

ValueMetadata *type metadata accessor for TextIdentificationService()
{
  return &type metadata for TextIdentificationService;
}

uint64_t sub_1D2D46028(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 184) = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8050);
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  v8 = type metadata accessor for TextModel();
  *(_QWORD *)(v6 + 88) = v8;
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  v9 = sub_1D2D9C7EC();
  *(_QWORD *)(v6 + 120) = v9;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D46100()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v1 = *(unsigned __int8 *)(v0 + 184);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v2;
  if (v1 == 1)
  {
    *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + 48);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_1D2D46210;
    return sub_1D2D9E544();
  }
  else
  {
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v5;
    *v5 = v0;
    v5[1] = sub_1D2D46624;
    return sub_1D2D9E334();
  }
}

uint64_t sub_1D2D46210()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D4627C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  if (qword_1ED587118 != -1)
    swift_once();
  v1 = v0 + 6;
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0;
  v6 = v0[15];
  v5 = v0[16];
  v7 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED5886C8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v3, v2, v6);
  swift_bridgeObjectRetain();
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E028();
  v11 = os_log_type_enabled(v9, v10);
  v13 = v1[10];
  v12 = v1[11];
  v14 = v1[9];
  v15 = *v1;
  v41 = v8;
  v42 = v4;
  v36 = v1;
  if (v11)
  {
    v16 = v4 + 4;
    v17 = v4 + 5;
    v18 = v14;
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v44 = v20;
    *(_DWORD *)v19 = 134218242;
    *v16 = *(_QWORD *)(v15 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    v21 = sub_1D2D9C714();
    *v17 = sub_1D2CF78E0(v21, v22, &v44);
    v1 = v36;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v23(v12, v18);
    _os_log_impl(&dword_1D2CC0000, v9, v10, "Successfully identified %ld text models as: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v20, -1, -1);
    MEMORY[0x1D8248974](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v23(v12, v14);
  }

  v24 = *(_QWORD *)(*v1 + 16);
  v25 = v42;
  if (v24)
  {
    v26 = v42[12];
    v39 = v42[11];
    v40 = v42[16];
    v27 = *v1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v37 = *(_QWORD *)(v26 + 72);
    v38 = v42[9];
    swift_bridgeObjectRetain();
    do
    {
      v28 = v25[18];
      v30 = v25[14];
      v29 = v25[15];
      v31 = v25[13];
      v32 = v25[10];
      v43 = v25[8];
      sub_1D2CDB6B4(v27, v30, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v33 = v30 + *(int *)(v39 + 28);
      sub_1D2CCADA4(v33, &qword_1ED587850);
      v41(v33, v28, v29);
      v34 = v33;
      v25 = v42;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v29);
      sub_1D2CDB6B4(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
      sub_1D2D9DF20();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v32, v43);
      sub_1D2CD3734(v30, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v27 += v37;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  v23(v25[18], v25[15]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  sub_1D2D9DF2C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v25[1])();
}

uint64_t sub_1D2D46624()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D46684()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  sub_1D2D9DF2C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D46704()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  swift_task_dealloc();
  if (qword_1ED587118 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED5886C8);
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E034();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 48);
  if (v6)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 134218242;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v8 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v11 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 24) = v11;
    sub_1D2D9E1B4();
    *v10 = v11;

    _os_log_impl(&dword_1D2CC0000, v4, v5, "Failed to identify text in %ld models: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v10, -1, -1);
    MEMORY[0x1D8248974](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();

  }
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(void **)(v0 + 168);
  if (v13)
  {
    v15 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 88);
    v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v27 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v17 = *(void **)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 104);
      v18 = *(_QWORD *)(v0 + 112);
      v20 = *(_QWORD *)(v0 + 80);
      v30 = *(_QWORD *)(v0 + 64);
      sub_1D2CDB6B4(v16, v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v21 = *(int *)(v29 + 44);
      v22 = v14;
      v23 = *(void **)(v18 + v21);
      v24 = v17;
      v25 = v23;
      v14 = v22;

      *(_QWORD *)(v18 + v21) = v22;
      sub_1D2CDB6B4(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
      sub_1D2D9DF20();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v20, v30);
      sub_1D2CD3734(v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v16 += v27;
      --v13;
    }
    while (v13);
    v14 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  sub_1D2D9DF2C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D46A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 + 64);
  v4[15] = swift_task_alloc();
  v7 = *(_QWORD *)(type metadata accessor for TextModel() - 8);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 + 64);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D46AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 104);
    v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v5 = v1 + v4;
    v28 = v4;
    v26 = v4 + *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v3 + 72);
    v25 = *(_QWORD *)(v0 + 112) + 7;
    v6 = sub_1D2D9DF14();
    v23 = *(_QWORD *)(v6 - 8);
    v24 = v6;
    v22 = *(void (**)(void))(v23 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v30 = v2;
      v33 = *(_QWORD *)(v0 + 152);
      v8 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 96);
      v31 = *(_QWORD *)(v0 + 160);
      v32 = *(_QWORD *)(v0 + 80);
      v22();
      sub_1D2CDB6B4(v5, v8, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v9, v10, v11);
      v12 = (v26 + *(unsigned __int8 *)(v29 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = 0;
      sub_1D2CD1FD4(v8, v13 + v28, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v13 + v12, v9, v11);
      *(_QWORD *)(v13 + ((v25 + v12) & 0xFFFFFFFFFFFFFFF8)) = v32;
      sub_1D2D47C58(v31, v33);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v33, 1, v24);
      swift_bridgeObjectRetain();
      v14 = *(_QWORD *)(v0 + 152);
      if ((_DWORD)v8 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 152), (uint64_t *)&unk_1ED5878F0);
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v14, v24);
      }
      if (*(_QWORD *)(v13 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v15 = sub_1D2D9DEB4();
        v17 = v16;
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = **(_QWORD **)(v0 + 72);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = &unk_1EFCA8070;
      *(_QWORD *)(v19 + 24) = v13;
      v20 = v17 | v15;
      if (v17 | v15)
      {
        v20 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v15;
        *(_QWORD *)(v0 + 40) = v17;
      }
      v7 = *(_QWORD *)(v0 + 160);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      sub_1D2CCADA4(v7, (uint64_t *)&unk_1ED5878F0);
      v5 += v27;
      v2 = v30 - 1;
    }
    while (v30 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D46E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8050);
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v8 = type metadata accessor for TextModel();
  v6[11] = v8;
  v6[12] = *(_QWORD *)(v8 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v9 = sub_1D2D9C7EC();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D46F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587360);
  v3 = *(_DWORD *)(v1 + 80);
  *(_DWORD *)(v0 + 184) = v3;
  v4 = (v3 + 32) & ~(unint64_t)v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 152) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1D2DA0510;
  sub_1D2CDB6B4(v2, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v7;
  *v7 = v0;
  v7[1] = sub_1D2D4700C;
  return sub_1D2D9E544();
}

uint64_t sub_1D2D4700C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D470C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;

  if (qword_1ED587118 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED5886C8);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v30(v1, v2, v3);
  v6 = sub_1D2D9C8DC();
  v7 = sub_1D2D9E028();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 136);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 120);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v31 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_1D2D9C714();
    *(_QWORD *)(v0 + 32) = sub_1D2CF78E0(v13, v14, &v31);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    v15 = v28;
    v29 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v29(v9, v15);
    _os_log_impl(&dword_1D2CC0000, v6, v7, "Successfully identified text as: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v12, -1, -1);
    MEMORY[0x1D8248974](v11, -1, -1);
  }
  else
  {
    v29 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v29(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  }

  v16 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 64);
  sub_1D2CDB6B4(*(_QWORD *)(v0 + 40), v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v24 = v19 + *(int *)(v22 + 28);
  sub_1D2CCADA4(v24, &qword_1ED587850);
  v30(v24, v16, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v18);
  sub_1D2CDB6B4(v19, v20, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  sub_1D2D9DF20();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v27);
  v25 = *(_QWORD *)(v0 + 112);
  v29(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  sub_1D2CD3734(v25, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D47394()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_1ED587118 != -1)
    swift_once();
  v1 = *(void **)(v0 + 176);
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED5886C8);
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E034();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 134349314;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v8 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v11 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 24) = v11;
    sub_1D2D9E1B4();
    *v10 = v11;

    _os_log_impl(&dword_1D2CC0000, v4, v5, "Failed to identify language of %{public}ld models: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v10, -1, -1);
    MEMORY[0x1D8248974](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();

  }
  v12 = *(void **)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 72);
  sub_1D2CDB6B4(*(_QWORD *)(v0 + 40), v14, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v17 = *(int *)(v15 + 44);
  v18 = *(void **)(v14 + v17);
  v19 = v12;

  *(_QWORD *)(v14 + v17) = v12;
  sub_1D2CDB6B4(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  sub_1D2D9DF20();

  v20 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(v16 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  sub_1D2CD3734(v20, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D47678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Signpost();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  v9 = sub_1D2D9C894();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v8 + *(int *)(v1 + 20);
  v11 = sub_1D2D9C870();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2D4778C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(type metadata accessor for Signpost() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587330) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D2D455F4(a1, v1 + v4, v1 + v7, *(_QWORD *)(v1 + v8), *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_1D2D47830()
{
  unint64_t result;

  result = qword_1ED586230;
  if (!qword_1ED586230)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA45B8, &type metadata for TextError);
    atomic_store(result, (unint64_t *)&qword_1ED586230);
  }
  return result;
}

uint64_t sub_1D2D47874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D2D478F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1D2CE16D4;
  return sub_1D2D46028(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1D2D47994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D46A34(a1, a2, v7, v6);
}

uint64_t sub_1D2D47A00(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D44F38(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D2D47A08()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for TextModel();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v4 = *(_QWORD *)(v13 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  v6 = v0 + v3;
  v7 = sub_1D2D9C6FC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + v1[7];
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6 + v1[9], v9);

  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v12 + v5) & ~v5), v13);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2D47B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for TextModel() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1D2CE1A58;
  return sub_1D2D46E34(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_1D2D47C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D47CA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D47CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE16D4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA94E0 + dword_1EFCA94E0))(a1, v4);
}

uint64_t sub_1D2D47D38(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for TextModel();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D2D04068(0, v10, 0);
    v11 = v21;
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = a3 + v18;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D2D04068(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1D2D4B0B0((uint64_t)v9, v11 + v18 + v15 * v13);
      v12 += v13;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1D2D47E88(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(int *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t (*v12)(int *);
  int v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(int *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v12 = (uint64_t (*)(int *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_DWORD *)(a3 + 4 * v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1D2D0404C(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1D2D0404C(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_DWORD *)(v8 + 4 * v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t Array<A>.sourceParagraph.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = type metadata accessor for TextModel();
  v2 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1D2D03FCC(0, v5, 0);
    v7 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v8 = *(_QWORD *)(v2 + 72);
    v6 = v18;
    do
    {
      sub_1D2D4AFEC(v7, (uint64_t)v4);
      v9 = &v4[*(int *)(v17 + 24)];
      v11 = *(_QWORD *)v9;
      v10 = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      sub_1D2D4B030((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D03FCC(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v18;
      }
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1D2D03FCC(v12 > 1, v13 + 1, 1);
        v6 = v18;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  v18 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8080);
  sub_1D2CC6C74(&qword_1EFCA8088, &qword_1EFCA8080, MEMORY[0x1E0DEAF20]);
  v15 = sub_1D2D9DC74();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t type metadata accessor for TextModel()
{
  uint64_t result;

  result = qword_1ED587308;
  if (!qword_1ED587308)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Array<A>.sourceLocale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = type metadata accessor for TextModel();
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    return sub_1D2CF811C(a1 + *(int *)(v4 + 28) + ((v5 + 32) & ~v5), a2);
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

uint64_t Array<A>.targetLocale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = type metadata accessor for TextModel();
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    v6 = a1 + *(int *)(v4 + 36) + ((v5 + 32) & ~v5);
    v7 = sub_1D2D9C7EC();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v6, v7);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v10 = a2;
    v11 = 0;
    v12 = v7;
  }
  else
  {
    v12 = sub_1D2D9C7EC();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v10 = a2;
    v11 = 1;
  }
  return v9(v10, v11, 1, v12);
}

uint64_t TextModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TextModel.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextModel() + 20));
}

uint64_t TextModel.sourceString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextModel() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextModel.sourceString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextModel() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*TextModel.sourceString.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

uint64_t TextModel.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TextModel() + 28);
  return sub_1D2CF811C(v3, a1);
}

uint64_t TextModel.sourceLocale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TextModel() + 28);
  return sub_1D2CE46D0(a1, v3);
}

double (*TextModel.sourceLocale.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

uint64_t TextModel.targetString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextModel.targetString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextModel() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*TextModel.targetString.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

uint64_t TextModel.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TextModel() + 36);
  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TextModel.targetLocale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TextModel() + 36);
  v4 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*TextModel.targetLocale.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

double TextModel.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TextModel() + 40));
}

uint64_t TextModel.confidence.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextModel();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*TextModel.confidence.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

void *TextModel.error.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for TextModel() + 44));
  v2 = v1;
  return v1;
}

void TextModel.error.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for TextModel() + 44);

  *(_QWORD *)(v1 + v3) = a1;
}

double (*TextModel.error.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

void sub_1D2D486E0(char *a1)
{
  sub_1D2D2BEAC(*a1);
}

void sub_1D2D486EC()
{
  char *v0;

  sub_1D2D705C8(0, *v0);
}

void sub_1D2D486F8()
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D48728()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D487CC(uint64_t a1)
{
  char *v1;

  sub_1D2D705C8(a1, *v1);
}

uint64_t sub_1D2D487D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D4C710();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D48800()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2D48824 + 4 * byte_1D2DA4647[*v0]))();
}

void sub_1D2D48824(_QWORD *a1@<X8>)
{
  *a1 = 0x7865646E69;
  a1[1] = 0xE500000000000000;
}

void sub_1D2D4883C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "sourceString");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D2D4889C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E656469666E6F63;
  a1[1] = 0xEA00000000006563;
}

uint64_t sub_1D2D488BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D488E0 + 4 * byte_1D2DA464E[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1D2D488E0()
{
  return 0x7865646E69;
}

uint64_t sub_1D2D488F4()
{
  return 0x7453656372756F73;
}

uint64_t sub_1D2D48954()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1D2D48970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D4C710();
  *a1 = result;
  return result;
}

void sub_1D2D48994(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1D2D489A0()
{
  sub_1D2D4B06C();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D489C8()
{
  sub_1D2D4B06C();
  return sub_1D2D9E634();
}

uint64_t TextModel.init(id:index:sourceString:sourceLocale:targetLocale:useWeightedIdentification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41 = a6;
  v42 = a7;
  v43 = a5;
  v44 = a1;
  v46 = a3;
  v47 = a4;
  v45 = a2;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D2D9C6FC();
  v20 = *(_QWORD *)(v19 - 8);
  v39 = v19;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 16))(v23, a1, v21);
  sub_1D2CF811C(a5, (uint64_t)v18);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25 = v12;
  v38 = v12;
  v24(v15, a6, v12);
  v42 &= 1u;
  v26 = (int *)type metadata accessor for TextModel();
  v27 = a8 + v26[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v27, 1, 1, v25);
  v28 = (_QWORD *)(a8 + v26[8]);
  *v28 = 0;
  v28[1] = 0;
  v29 = v26[11];
  *(_QWORD *)(a8 + v29) = 0;
  v30 = v26[12];
  *(_QWORD *)(a8 + v30) = 0;
  v31 = v23;
  v32 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a8, v31, v39);
  *(_QWORD *)(a8 + v26[5]) = v45;
  v33 = (_QWORD *)(a8 + v26[6]);
  v34 = v47;
  *v33 = v46;
  v33[1] = v34;
  sub_1D2CE46D0((uint64_t)v18, v27);
  swift_bridgeObjectRelease();
  *v28 = 0;
  v28[1] = 0;
  v35 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a8 + v26[9], v40, v38);
  *(_QWORD *)(a8 + v26[10]) = 0;

  *(_QWORD *)(a8 + v29) = 0;
  v36 = v41;
  *(_QWORD *)(a8 + v30) = v42;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v36, v35);
  sub_1D2CCADA4(v43, &qword_1ED587850);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v44, v32);
}

BOOL TextModel.isTranslatable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  _BOOL8 v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for TextModel();
  if (*(_QWORD *)(v0 + v4[11]))
    return 0;
  v6 = (uint64_t *)(v0 + v4[6]);
  v8 = *v6;
  v7 = v6[1];
  v9 = v8 & 0xFFFFFFFFFFFFLL;
  if (!((v7 & 0x2000000000000000) != 0 ? HIBYTE(v7) & 0xF : v9))
    return 0;
  sub_1D2CF811C(v0 + v4[7], (uint64_t)v3);
  v11 = sub_1D2D9C7EC();
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11) != 1;
  sub_1D2CCADA4((uint64_t)v3, &qword_1ED587850);
  return v5;
}

uint64_t TextModel.isTranslated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  int *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for TextModel();
  if (*(_QWORD *)(v0 + v4[11]))
    return 0;
  v6 = v4;
  v7 = (uint64_t *)(v0 + v4[6]);
  v9 = *v7;
  v8 = v7[1];
  v10 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v8 & 0x2000000000000000) != 0 ? HIBYTE(v8) & 0xF : v10))
    return 0;
  sub_1D2CF811C(v0 + v4[7], (uint64_t)v3);
  v12 = sub_1D2D9C7EC();
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v3, 1, v12);
  sub_1D2CCADA4((uint64_t)v3, &qword_1ED587850);
  if (v13 == 1)
    return 0;
  v14 = (_QWORD *)(v0 + v6[8]);
  v15 = v14[1];
  if (!v15)
    return 0;
  v16 = *v14 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0 ? HIBYTE(v15) & 0xF : v16)
    return 1;
  else
    return 0;
}

uint64_t TextModel.hash(into:)()
{
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1D2D9DC50();
}

BOOL static TextModel.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextModel();
  return *(_QWORD *)(a1 + *(int *)(v4 + 20)) < *(_QWORD *)(a2 + *(int *)(v4 + 20));
}

BOOL static TextModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  v10 = sub_1D2D9C6D8();
  sub_1D2D4AFEC(a1, (uint64_t)v9);
  sub_1D2D4AFEC(a2, (uint64_t)v6);
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD *)&v9[*(int *)(v4 + 20)];
    sub_1D2D4B030((uint64_t)v9);
    v12 = *(_QWORD *)&v6[*(int *)(v4 + 20)];
    sub_1D2D4B030((uint64_t)v6);
    return v11 == v12;
  }
  else
  {
    sub_1D2D4B030((uint64_t)v6);
    sub_1D2D4B030((uint64_t)v9);
    return 0;
  }
}

uint64_t sub_1D2D48FB8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TextModel();
  sub_1D2CF811C(v2 + *(int *)(v7 + 28), (uint64_t)v6);
  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
    return 0;
  }
  sub_1D2D9C714();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v6, v8);
  sub_1D2D9E604();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  sub_1D2D9C714();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    sub_1D2D4C758(*(_QWORD *)(v2 + *(int *)(v7 + 24)), *(_QWORD *)(v2 + *(int *)(v7 + 24) + 8));
    if (!v11)
    {
      sub_1D2D9E5E0();
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1D2D9E5E0();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease_n();
LABEL_9:
  v19 = v14;
  v20 = v15;
  v21 = v16;
  v17 = *(_OWORD *)&v12[8];
  v18 = v13;
  return sub_1D2D9E5EC();
}

uint64_t sub_1D2D491B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  unint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  v9 = 0x646F6D2074786554;
  v10 = 0xEF203A6469206C65;
  sub_1D2D9C6FC();
  sub_1D2CC66E4((unint64_t *)&qword_1EFCA5D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  v4 = type metadata accessor for TextModel();
  v8[1] = *(_QWORD *)(v0 + *(int *)(v4 + 20));
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2CF811C(v0 + *(int *)(v4 + 28), (uint64_t)v3);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_1D2CCADA4((uint64_t)v3, &qword_1ED587850);
  }
  else
  {
    sub_1D2D9C714();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D9C714();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t TextModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8090);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D4B06C();
  sub_1D2D9E61C();
  v15 = 0;
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1EFCA5DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D2D9E4F0();
  if (!v1)
  {
    type metadata accessor for TextModel();
    v14 = 1;
    sub_1D2D9E4D8();
    v13 = 2;
    sub_1D2D9E4A8();
    v12 = 3;
    sub_1D2D9C7EC();
    sub_1D2CC66E4(&qword_1EFCA80A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E50]);
    sub_1D2D9E49C();
    v11 = 4;
    sub_1D2D9E490();
    v10 = 5;
    sub_1D2D9E4F0();
    v9 = 6;
    sub_1D2D9E4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TextModel.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1D2D9DC50();
  return sub_1D2D9E5F8();
}

void TextModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(__n128);
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v48 = a2;
  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA80A8);
  v11 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for TextModel();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v17[*(int *)(v18 + 28)];
  v53 = v4;
  v20 = *(void (**)(__n128))(v4 + 56);
  v57 = v3;
  v58 = v19;
  v20(v15);
  v21 = &v17[v14[8]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v60 = v21;
  v22 = v14[11];
  v54 = v14;
  v55 = v22;
  *(_QWORD *)&v17[v22] = 0;
  v23 = v17;
  *(_QWORD *)&v17[v14[12]] = 0;
  v24 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1D2D4B06C();
  v25 = v59;
  sub_1D2D9E610();
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
    v28 = v55;
    sub_1D2CCADA4(v58, &qword_1ED587850);
    swift_bridgeObjectRelease();

  }
  else
  {
    v26 = v11;
    v59 = v9;
    v67 = 0;
    sub_1D2CC66E4(&qword_1EFCA5DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v27 = v51;
    sub_1D2D9E46C();
    v29 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v23, v27, v8);
    v66 = 1;
    v51 = v13;
    v30 = sub_1D2D9E454();
    v31 = v57;
    v32 = v54;
    *(_QWORD *)&v23[v54[5]] = v30;
    v65 = 2;
    v33 = sub_1D2D9E430();
    v34 = v58;
    v35 = (uint64_t *)(v29 + v32[6]);
    *v35 = v33;
    v35[1] = v36;
    v64 = 3;
    v37 = sub_1D2CC66E4(&qword_1EFCA80B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E68]);
    v38 = (uint64_t)v50;
    sub_1D2D9E424();
    v47[0] = v37;
    v47[1] = v8;
    sub_1D2CE46D0(v38, v34);
    v63 = 4;
    v39 = v52;
    v50 = (char *)sub_1D2D9E418();
    v41 = v40;
    v42 = v60;
    swift_bridgeObjectRelease();
    *(_QWORD *)v42 = v50;
    *((_QWORD *)v42 + 1) = v41;
    v62 = 5;
    v43 = v49;
    sub_1D2D9E46C();
    v44 = v54;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v29 + v54[9], v43, v31);
    v61 = 6;
    sub_1D2D9E448();
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v51, v39);
    *(_QWORD *)(v29 + v44[10]) = v46;
    sub_1D2D4AFEC(v29, v48);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
    sub_1D2D4B030(v29);
  }
}

uint64_t sub_1D2D49C68()
{
  sub_1D2D9E5C8();
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1D2D9DC50();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D49CD4()
{
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1D2D9DC50();
}

uint64_t sub_1D2D49D2C()
{
  sub_1D2D9E5C8();
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1D2D9DC50();
  return sub_1D2D9E5F8();
}

BOOL sub_1D2D49D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a1 + *(int *)(a3 + 20)) < *(_QWORD *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_1D2D49DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a2 + *(int *)(a3 + 20)) >= *(_QWORD *)(a1 + *(int *)(a3 + 20));
}

BOOL sub_1D2D49DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a1 + *(int *)(a3 + 20)) >= *(_QWORD *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_1D2D49DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a2 + *(int *)(a3 + 20)) < *(_QWORD *)(a1 + *(int *)(a3 + 20));
}

void sub_1D2D49DF4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  TextModel.init(from:)(a1, a2);
}

uint64_t sub_1D2D49E08(_QWORD *a1)
{
  return TextModel.encode(to:)(a1);
}

BOOL sub_1D2D49E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - v9;
  v11 = sub_1D2D9C6D8();
  sub_1D2D4AFEC(a1, (uint64_t)v10);
  sub_1D2D4AFEC(a2, (uint64_t)v7);
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)&v10[*(int *)(a3 + 20)];
    sub_1D2D4B030((uint64_t)v10);
    v13 = *(_QWORD *)&v7[*(int *)(a3 + 20)];
    sub_1D2D4B030((uint64_t)v7);
    return v12 == v13;
  }
  else
  {
    sub_1D2D4B030((uint64_t)v7);
    sub_1D2D4B030((uint64_t)v10);
    return 0;
  }
}

uint64_t Array<A>.targetParagraph.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v2 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v8 = *(_QWORD *)(v3 + 72);
    v18[0] = a1;
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1D2D4AFEC(v7, (uint64_t)v5);
      v11 = &v5[*(int *)(v2 + 32)];
      v13 = *(_QWORD *)v11;
      v12 = *((_QWORD *)v11 + 1);
      swift_bridgeObjectRetain();
      sub_1D2D4B030((uint64_t)v5);
      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1D2D4AD34(0, v9[2] + 1, 1, v9);
        v15 = v9[2];
        v14 = v9[3];
        if (v15 >= v14 >> 1)
          v9 = sub_1D2D4AD34((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
        v9[2] = v15 + 1;
        v10 = &v9[2 * v15];
        v10[4] = v13;
        v10[5] = v12;
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8080);
  sub_1D2CC6C74(&qword_1EFCA8088, &qword_1EFCA8080, MEMORY[0x1E0DEAF20]);
  v16 = sub_1D2D9DC74();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1D2D4A0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = type metadata accessor for TextModel();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1D2D04068(0, v8, 0);
    v20 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v10 = a1 + v20;
    v11 = *(_QWORD *)(v2 + 72);
    v9 = v22;
    do
    {
      sub_1D2D4AFEC(v10, (uint64_t)v4);
      sub_1D2D4AFEC((uint64_t)v4, (uint64_t)v7);
      v12 = &v7[*(int *)(v21 + 24)];
      v14 = *(_QWORD *)v12;
      v13 = *((_QWORD *)v12 + 1);
      v15 = &v7[*(int *)(v21 + 32)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)v15 = v14;
      *((_QWORD *)v15 + 1) = v13;
      sub_1D2D4B030((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D04068(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v22;
      }
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D2D04068(v16 > 1, v17 + 1, 1);
        v9 = v22;
      }
      *(_QWORD *)(v9 + 16) = v17 + 1;
      sub_1D2D4B0B0((uint64_t)v7, v9 + v20 + v17 * v11);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1D2D4A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  sub_1D2D4AFEC(a1, a3);
  v5 = a3 + *(int *)(type metadata accessor for TextModel() + 36);
  v6 = sub_1D2D9C7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v5, a2, v6);
}

uint64_t Array<A>.updating(lines:useIndex:)(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v6);
  v51 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t)&v40 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587040);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TextModel();
  v46 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v44 = (uint64_t)&v40 - v18;
  v40 = a1;
  v19 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (v19)
    {
      v20 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v21 = v40 + v20;
      v10 = *(_QWORD *)(v46 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        v22 = *(_QWORD *)(v21 + *(int *)(v14 + 20));
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) != 0)
        {
          if ((v22 & 0x8000000000000000) != 0)
            goto LABEL_10;
        }
        else
        {
          result = sub_1D2D4B108(a3);
          a3 = result;
          if ((v22 & 0x8000000000000000) != 0)
          {
LABEL_10:
            __break(1u);
            goto LABEL_11;
          }
        }
        if (v22 >= *(_QWORD *)(a3 + 16))
          break;
        sub_1D2D4B13C(v21, a3 + v20 + v22 * v10);
        v21 += v10;
        if (!--v19)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          return a3;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
  }
  else
  {
LABEL_11:
    if (v19)
    {
      v45 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v43 = v40 + v45;
      v53 = *(_QWORD *)(v46 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = 0;
      v54 = v14;
      v50 = v10;
      v42 = v19;
      v41 = v13;
      while (1)
      {
        v25 = v43 + v53 * v24;
        v26 = *(_QWORD *)(a3 + 16);
        if (v26)
        {
          v47 = v24;
          v27 = a3 + v45;
          v28 = *(int *)(v14 + 28);
          v49 = v43 + v53 * v24;
          v52 = v25 + v28;
          v48 = a3;
          swift_bridgeObjectRetain_n();
          do
          {
            sub_1D2D4AFEC(v27, (uint64_t)v16);
            sub_1D2CF811C((uint64_t)&v16[*(int *)(v14 + 28)], v10);
            v29 = sub_1D2D9C7EC();
            v30 = *(_QWORD *)(v29 - 8);
            v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
            v32 = v31(v10, 1, v29);
            if (v32 == 1)
            {
              sub_1D2CCADA4(v10, &qword_1ED587850);
              v33 = 0;
            }
            else
            {
              sub_1D2D9C714();
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v10, v29);
              sub_1D2D9E604();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              sub_1D2D9C714();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              sub_1D2D9E5E0();
              swift_bridgeObjectRetain();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              v67 = v57;
              v68 = v58;
              v69 = v59;
              v65 = v55;
              v66 = v56;
              v33 = sub_1D2D9E5EC();
            }
            v34 = v51;
            sub_1D2CF811C(v52, v51);
            if (v31(v34, 1, v29) == 1)
            {
              sub_1D2CCADA4(v34, &qword_1ED587850);
              if (v32 == 1)
                goto LABEL_25;
            }
            else
            {
              sub_1D2D9C714();
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v29);
              sub_1D2D9E604();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              sub_1D2D9C714();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              sub_1D2D9E5E0();
              swift_bridgeObjectRetain();
              sub_1D2D9DD70();
              swift_bridgeObjectRelease();
              v62 = v57;
              v63 = v58;
              v64 = v59;
              v60 = v55;
              v61 = v56;
              v35 = sub_1D2D9E5EC();
              if (v32 != 1 && v33 == v35)
              {
LABEL_25:
                a3 = v48;
                swift_bridgeObjectRelease();
                v13 = v41;
                sub_1D2D4B0B0((uint64_t)v16, (uint64_t)v41);
                v36 = 0;
                v14 = v54;
                v19 = v42;
                v10 = v50;
                goto LABEL_28;
              }
            }
            sub_1D2D4B030((uint64_t)v16);
            v27 += v53;
            --v26;
            v14 = v54;
            v10 = v50;
          }
          while (v26);
          a3 = v48;
          swift_bridgeObjectRelease();
          v36 = 1;
          v19 = v42;
          v13 = v41;
LABEL_28:
          v24 = v47;
          v25 = v49;
        }
        else
        {
          swift_bridgeObjectRetain();
          v36 = 1;
        }
        v37 = v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v13, v36, 1, v14);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v14) == 1)
        {
          sub_1D2CCADA4((uint64_t)v13, &qword_1ED587040);
        }
        else
        {
          v38 = v44;
          sub_1D2D4B0B0((uint64_t)v13, v44);
          v39 = *(_QWORD *)(v38 + *(int *)(v14 + 20));
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) != 0)
          {
            if ((v39 & 0x8000000000000000) != 0)
              goto LABEL_35;
          }
          else
          {
            result = sub_1D2D4B108(a3);
            a3 = result;
            if ((v39 & 0x8000000000000000) != 0)
            {
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
          }
          if (v39 >= *(_QWORD *)(a3 + 16))
            goto LABEL_40;
          sub_1D2D4B13C(v25, a3 + v45 + v39 * v53);
          sub_1D2D4B030(v44);
        }
        if (++v24 == v19)
          goto LABEL_36;
      }
    }
  }
  swift_bridgeObjectRetain();
  return a3;
}

_QWORD *sub_1D2D4A9DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586C48);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2D4C61C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D4AB00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2D4AB28(a1, a2, a3, a4, &qword_1EFCA7228, (uint64_t (*)(_QWORD))type metadata accessor for LanguageOption);
}

uint64_t sub_1D2D4AB14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2D4AB28(a1, a2, a3, a4, &qword_1EFCA80F0, type metadata accessor for SharedTranslations.Translation);
}

uint64_t sub_1D2D4AB28(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1D2D9E388();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D2D4CAAC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1D2D4AD34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2D4C9BC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D4AE40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2D4AB28(a1, a2, a3, a4, &qword_1ED587360, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
}

uint64_t sub_1D2D4AE54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2D4AB28(a1, a2, a3, a4, &qword_1ED587358, type metadata accessor for VisualTranslationModel);
}

_QWORD *sub_1D2D4AE68(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA80D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2D4CBC4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D4AF74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1D2D9DDDC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D8247918](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1D2D4AFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D4B030(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D2D4B06C()
{
  unint64_t result;

  result = qword_1EFCA8098;
  if (!qword_1EFCA8098)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA48FC, &type metadata for TextModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8098);
  }
  return result;
}

uint64_t sub_1D2D4B0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1D2D4B0F4(_QWORD *a1)
{
  return sub_1D2D4A9DC(0, a1[2], 0, a1);
}

uint64_t sub_1D2D4B108(unint64_t a1)
{
  return sub_1D2D4AB28(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_1ED587360, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
}

uint64_t sub_1D2D4B13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D4B180()
{
  return sub_1D2CC66E4(&qword_1EFCA80B8, (uint64_t (*)(uint64_t))type metadata accessor for TextModel, (uint64_t)&protocol conformance descriptor for TextModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TextModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  id v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1D2D9C7EC();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v15);
    v28 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v29 = *(void **)((char *)a2 + v28);
    v30 = v29;
    *(uint64_t *)((char *)a1 + v28) = (uint64_t)v29;
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  }
  return a1;
}

void destroy for TextModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[7];
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1 + a2[9], v6);

}

uint64_t initializeWithCopy for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  id v28;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_1D2D9C7EC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a1 + v19;
  v24 = a2 + v19;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v14);
  v26 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v27 = *(void **)(a2 + v26);
  v28 = v27;
  *(_QWORD *)(a1 + v26) = v27;
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithCopy for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1D2D9C7EC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1 + a3[9], a2 + a3[9], v13);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v22 = a3[11];
  v23 = *(void **)(a1 + v22);
  v24 = *(void **)(a2 + v22);
  v25 = v24;
  *(_QWORD *)(a1 + v22) = v24;

  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1D2D9C7EC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v14 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    v14 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v14(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v14((void *)(a1 + v15), (const void *)(a2 + v15), v11);
  v16 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1D2D9C7EC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(a1 + a3[9], a2 + a3[9], v15);
  v26 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D4BA50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v8 = sub_1D2D9C7EC();
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for TextModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D4BB30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = sub_1D2D9C7EC();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D2D4BC00()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2D9C6FC();
  if (v0 <= 0x3F)
  {
    sub_1D2D4BCD0();
    if (v1 <= 0x3F)
    {
      sub_1D2D9C7EC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1D2D4BCD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5878C0)
  {
    sub_1D2D9C7EC();
    v0 = sub_1D2D9E1A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5878C0);
  }
}

uint64_t storeEnumTagSinglePayload for TextModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D2D4BD70 + 4 * byte_1D2DA465A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D2D4BDA4 + 4 * byte_1D2DA4655[v4]))();
}

uint64_t sub_1D2D4BDA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D4BDAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D4BDB4);
  return result;
}

uint64_t sub_1D2D4BDC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D4BDC8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D2D4BDCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D4BDD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextModel.CodingKeys()
{
  return &type metadata for TextModel.CodingKeys;
}

unint64_t sub_1D2D4BDF4()
{
  unint64_t result;

  result = qword_1EFCA80C0;
  if (!qword_1EFCA80C0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA48D4, &type metadata for TextModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA80C0);
  }
  return result;
}

unint64_t sub_1D2D4BE3C()
{
  unint64_t result;

  result = qword_1EFCA80C8;
  if (!qword_1EFCA80C8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA480C, &type metadata for TextModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA80C8);
  }
  return result;
}

unint64_t sub_1D2D4BE84()
{
  unint64_t result;

  result = qword_1EFCA80D0;
  if (!qword_1EFCA80D0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4834, &type metadata for TextModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA80D0);
  }
  return result;
}

uint64_t sub_1D2D4BEC8(unint64_t a1)
{
  return sub_1D2D4AB28(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_1ED587358, type metadata accessor for VisualTranslationModel);
}

unint64_t sub_1D2D4BEFC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1D2D9E328();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1D2D9E2D4();
  }
  return result;
}

unint64_t sub_1D2D4C00C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1D2D4C0A8(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1D2D4BEFC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1D2D4C0A8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1D2D4AF74(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1D2D4C114(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = v5 | (v4 << 16);
  v7 = sub_1D2D4C00C(0xFuLL, a1, a2);
  result = sub_1D2D4C00C(v6, a1, a2);
  v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_1D2D9DD4C();
        v7 = result;
      }
      else
      {
        v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_1D2D9E328();
          v13 = *(unsigned __int8 *)(result + v12);
        }
        v14 = (char)v13;
        v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0)
          LOBYTE(v15) = 1;
        v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14)
        return v11;
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_1D2D9DD58();
        v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            v20 = 0;
            do
              v21 = *((_BYTE *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            v19 = 1 - v20;
          }
          else
          {
            v19 = 1;
          }
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_1D2D9E328();
          v17 = 0;
          do
            v18 = *(_BYTE *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          v19 = -v17;
        }
        v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14)
        return v11;
    }
    goto LABEL_40;
  }
  return 0;
}

uint64_t sub_1D2D4C350(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v20[2];

  if ((a5 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a5) & 0xF;
  else
    v8 = a4 & 0xFFFFFFFFFFFFLL;
  if (a2)
  {
    v9 = a3;
    if (a3)
    {
      if (a3 < 0)
      {
        __break(1u);
        JUMPOUT(0x1D2D4C588);
      }
      v11 = 0;
      v12 = 0;
      while (v12 < v8)
      {
        if ((a5 & 0x1000000000000000) != 0)
        {
          v18 = a1;
          v13 = sub_1D2D9E2E0();
          a1 = v18;
        }
        else
        {
          if ((a5 & 0x2000000000000000) != 0)
          {
            v20[0] = a4;
            v20[1] = a5 & 0xFFFFFFFFFFFFFFLL;
            v13 = *((unsigned __int8 *)v20 + v12);
            if (*((char *)v20 + v12) < 0)
              __asm { BR              X9 }
          }
          else
          {
            v15 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a4 & 0x1000000000000000) == 0)
            {
              v19 = a1;
              v16 = sub_1D2D9E328();
              a1 = v19;
              v15 = v16;
            }
            v13 = *(unsigned __int8 *)(v15 + v12);
            if (*(char *)(v15 + v12) < 0)
              __asm { BR              X10 }
          }
          v14 = 1;
        }
        *(_DWORD *)(a2 + 4 * v11) = v13;
        v12 += v14;
        if (v9 == ++v11)
          goto LABEL_22;
      }
      v9 = v11;
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v9 = 0;
  }
LABEL_22:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = v12;
  a1[3] = v8;
  return v9;
}

_QWORD *sub_1D2D4C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7200);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 29;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 2);
  return v4;
}

uint64_t sub_1D2D4C61C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D4C710()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1D2D4C758(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;

  v4 = sub_1D2D9C588();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - v9;
  v28 = a1;
  v29 = a2;
  sub_1D2D9C570();
  sub_1D2CD1430();
  v11 = sub_1D2D9E1D8();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  v28 = v11;
  v29 = v13;
  v15 = sub_1D2D9E1FC();
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = sub_1D2D4C114(v15, v17);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1D2D4C5A8(v18, 0);
    v21 = sub_1D2D4C350(&v28, (uint64_t)(v20 + 4), v19, v15, v17);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    if (v21 != v19)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v23 = sub_1D2D9C564();
  MEMORY[0x1E0C80A78](v23);
  v27[-2] = v7;
  v24 = sub_1D2D47E88((uint64_t)sub_1D2D4CCCC, (uint64_t)&v27[-4], (uint64_t)v20);
  v28 = 0;
  v29 = 0xE000000000000000;
  v27[0] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA80E0);
  sub_1D2CC6C74(&qword_1EFCA80E8, &qword_1EFCA80E0, MEMORY[0x1E0DEAF38]);
  sub_1D2D9DD64();
  swift_bridgeObjectRelease();
  v25 = v28;
  if ((v29 & 0x2000000000000000) != 0)
    v26 = HIBYTE(v29) & 0xF;
  else
    v26 = v28 & 0xFFFFFFFFFFFFLL;
  v14(v7, v4);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v25;
}

uint64_t sub_1D2D4C9BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D4CAAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

uint64_t sub_1D2D4CBC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587378);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D2D9E3DC();
  __break(1u);
  return result;
}

BOOL sub_1D2D4CCCC()
{
  return (sub_1D2D9C57C() & 1) == 0;
}

uint64_t sub_1D2D4CD00()
{
  uint64_t v0;

  sub_1D2D4B030(v0 + OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2D4CD30()
{
  return type metadata accessor for TextModelContainer();
}

uint64_t type metadata accessor for TextModelContainer()
{
  uint64_t result;

  result = qword_1EFCA8120;
  if (!qword_1EFCA8120)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D4CD74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TextModel();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D2D4CDE0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  int *v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  id v40;
  void *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  double v104;
  uint8_t *v105;
  NSObject *v106;
  os_log_type_t v107;
  int v108;
  uint64_t v109;
  int *v110;
  uint8_t *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  id v119;
  void *v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char v130;
  uint64_t v131[2];
  uint64_t v132;
  os_log_t v133;
  unint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  int v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _OWORD v151[4];
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;

  v145 = a2;
  v5 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v5);
  v140 = (uint64_t)v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v131 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t)v131 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v131 - v14;
  MEMORY[0x1E0C80A78](v16);
  v144 = (char *)v131 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v131 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v21);
  v149 = (uint64_t)v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v148 = (uint64_t)v131 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v131 - v26;
  v28 = *(_QWORD *)(v2 + 112);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
    goto LABEL_83;
  }
  v142 = v20;
  v146 = v15;
  v147 = v12;
  *(_QWORD *)(v2 + 112) = v30;
  v31 = a1 + *(int *)(v5 + 28);
  sub_1D2CF811C(v31, (uint64_t)v131 - v26);
  v32 = sub_1D2D9C7EC();
  v33 = v2;
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v35(v27, 1, v32) == 1)
  {
    sub_1D2CFCC18((uint64_t)v27);
    return 0;
  }
  v138 = v9;
  sub_1D2D9C714();
  v141 = v31;
  v139 = *(void (**)(char *, uint64_t))(v34 + 8);
  v139(v27, v32);
  sub_1D2D9E604();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  sub_1D2D9C714();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  v36 = (int *)v5;
  v143 = a1;
  sub_1D2D9E5E0();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  v155 = v151[2];
  v156 = v151[3];
  v157 = v152;
  v153 = v151[0];
  v154 = v151[1];
  v37 = sub_1D2D9E5EC();
  v38 = *(void **)(v2 + 136);
  v39 = sub_1D2D06078();
  v40 = v38;
  v41 = (void *)sub_1D2D9E13C();
  v42 = (char *)objc_msgSend(v40, sel_objectForKey_, v41);

  v43 = v141;
  v44 = v42;
  v45 = v33;
  v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
  if (!v42)
  {
    v137 = v37;
    if ((v145 & 1) != 0)
    {
      v135 = v45;
      v134 = v39;
      if (qword_1ED587858 != -1)
        swift_once();
      v52 = sub_1D2D9C8F4();
      v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1ED5886E8);
      v54 = (uint64_t)v142;
      sub_1D2D4AFEC(v143, (uint64_t)v142);
      v55 = sub_1D2D9C8DC();
      v56 = sub_1D2D9E028();
      v57 = v56;
      v58 = os_log_type_enabled(v55, v56);
      v136 = v36;
      v59 = (uint64_t)v144;
      if (v58)
      {
        v133 = v55;
        v60 = v54;
        v61 = swift_slowAlloc();
        LODWORD(v132) = v57;
        v62 = (uint8_t *)v61;
        v63 = swift_slowAlloc();
        *(_DWORD *)v62 = 136642819;
        *(_QWORD *)&v151[0] = v63;
        v64 = v63;
        v131[1] = (uint64_t)(v62 + 4);
        v65 = (uint64_t *)(v54 + v136[6]);
        v66 = v65[1];
        v131[0] = *v65;
        swift_bridgeObjectRetain();
        v150 = sub_1D2CF78E0(v131[0], v66, (uint64_t *)v151);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        sub_1D2D4B030(v60);
        v67 = v133;
        _os_log_impl(&dword_1D2CC0000, v133, (os_log_type_t)v132, "TextTranslationCache sourceString:\t%{sensitive}s", v62, 0xCu);
        swift_arrayDestroy();
        v68 = v64;
        v59 = (uint64_t)v144;
        MEMORY[0x1D8248974](v68, -1, -1);
        MEMORY[0x1D8248974](v62, -1, -1);

      }
      else
      {
        sub_1D2D4B030(v54);

      }
      sub_1D2D4AFEC(v143, v59);
      v142 = (char *)v53;
      v106 = sub_1D2D9C8DC();
      v107 = sub_1D2D9E028();
      v108 = v107;
      if (os_log_type_enabled(v106, v107))
      {
        LODWORD(v133) = v108;
        v109 = swift_slowAlloc();
        v110 = v136;
        v111 = (uint8_t *)v109;
        v132 = swift_slowAlloc();
        *(_QWORD *)&v151[0] = v132;
        *(_DWORD *)v111 = 136642819;
        v112 = sub_1D2D4C758(*(_QWORD *)(v59 + v110[6]), *(_QWORD *)(v59 + v110[6] + 8));
        if (v113)
        {
          v114 = v113;
        }
        else
        {
          v112 = 6369134;
          v114 = 0xE300000000000000;
        }
        v150 = sub_1D2CF78E0(v112, v114, (uint64_t *)v151);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        sub_1D2D4B030(v59);
        _os_log_impl(&dword_1D2CC0000, v106, (os_log_type_t)v133, "TextTranslationCache sourceFuzzy:\t%{sensitive}s", v111, 0xCu);
        v115 = v132;
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v115, -1, -1);
        MEMORY[0x1D8248974](v111, -1, -1);
      }
      else
      {
        sub_1D2D4B030(v59);
      }

      v43 = v141;
      v116 = v137;
      v117 = sub_1D2D48FB8(1);
      if ((v118 & 1) != 0 || v116 == v117)
      {
        v80 = sub_1D2D9C8DC();
        v81 = sub_1D2D9E028();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v82 = 0;
          v83 = "TextTranslationCache fuzzy key collision";
          goto LABEL_63;
        }
LABEL_64:

        return 0;
      }
      v119 = *(id *)(v135 + 136);
      v120 = (void *)sub_1D2D9E13C();
      v44 = (char *)objc_msgSend(v119, sel_objectForKey_, v120);

      if (v44)
      {
        swift_retain();
        v45 = v135;
        goto LABEL_5;
      }
    }
    else
    {
      if (qword_1ED587858 != -1)
        swift_once();
      v79 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v79, (uint64_t)qword_1ED5886E8);
    }
    v80 = sub_1D2D9C8DC();
    v81 = sub_1D2D9E028();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v82 = 0;
      v83 = "TextTranslationCache cache miss";
LABEL_63:
      _os_log_impl(&dword_1D2CC0000, v80, v81, v83, v82, 2u);
      MEMORY[0x1D8248974](v82, -1, -1);
      goto LABEL_64;
    }
    goto LABEL_64;
  }
LABEL_5:
  v47 = v45;
  v48 = v148;
  sub_1D2CF811C(v43, v148);
  v49 = v46(v48, 1, v32);
  swift_retain();
  if (v49 == 1)
  {
    sub_1D2CFCC18(v48);
    v50 = 0;
    v51 = 0;
  }
  else
  {
    v50 = sub_1D2D9C714();
    v51 = v69;
    v139((char *)v48, v32);
  }
  v70 = v149;
  v71 = &v44[OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel];
  sub_1D2CF811C((uint64_t)&v44[OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel + v36[7]], v149);
  v72 = v46(v70, 1, v32);
  v144 = v44;
  if (v72 == 1)
  {
    sub_1D2CFCC18(v70);
    v73 = v147;
    v74 = v143;
    if (!v51)
      goto LABEL_32;
    goto LABEL_28;
  }
  v75 = v70;
  v76 = sub_1D2D9C714();
  v78 = v77;
  v139((char *)v75, v32);
  if (!v51)
  {
    v73 = v147;
    v74 = v143;
    if (!v78)
      goto LABEL_32;
LABEL_28:
    swift_bridgeObjectRelease();
    v84 = (uint64_t)v146;
    sub_1D2D4AFEC(v74, (uint64_t)v146);
    goto LABEL_29;
  }
  v73 = v147;
  v74 = v143;
  if (!v78)
    goto LABEL_28;
  if (v50 != v76 || v51 != v78)
  {
    v121 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v84 = (uint64_t)v146;
    sub_1D2D4AFEC(v74, (uint64_t)v146);
    if ((v121 & 1) != 0)
      goto LABEL_33;
LABEL_29:
    sub_1D2D4B030(v84);
    sub_1D2D4AFEC(v74, v73);
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_32:
  v84 = (uint64_t)v146;
  sub_1D2D4AFEC(v74, (uint64_t)v146);
LABEL_33:
  v85 = sub_1D2D9C714();
  v87 = v86;
  if (v85 != sub_1D2D9C714() || v87 != v88)
  {
    v89 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2D4B030(v84);
    sub_1D2D4AFEC(v74, v73);
    if ((v89 & 1) != 0)
      goto LABEL_37;
LABEL_30:
    sub_1D2D4B030(v73);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease_n();
  sub_1D2D4B030(v84);
  sub_1D2D4AFEC(v74, v73);
LABEL_37:
  v90 = v36[6];
  v91 = *(_QWORD *)(v73 + v90);
  v92 = *(_QWORD *)(v73 + v90 + 8);
  v93 = (uint64_t *)&v71[v90];
  v94 = *v93;
  v95 = v93[1];
  if (v91 == *v93 && v92 == v95)
  {
    v96 = (uint64_t)v138;
    sub_1D2D4AFEC(v73, (uint64_t)v138);
LABEL_41:
    sub_1D2D4B030(v96);
    result = sub_1D2D4B030(v73);
    goto LABEL_42;
  }
  v97 = sub_1D2D9E52C();
  v96 = (uint64_t)v138;
  sub_1D2D4AFEC(v73, (uint64_t)v138);
  if ((v97 & 1) != 0)
    goto LABEL_41;
  v122 = v140;
  sub_1D2D4AFEC(v96, v140);
  if ((v145 & 1) == 0)
  {
    sub_1D2D4B030(v122);
    sub_1D2D4B030(v96);
    goto LABEL_30;
  }
  v123 = v47;
  v124 = sub_1D2D4C758(*(_QWORD *)(v122 + v36[6]), *(_QWORD *)(v122 + v36[6] + 8));
  v125 = v122;
  v127 = v126;
  v128 = sub_1D2D4C758(v94, v95);
  v20 = v129;
  if (!v127)
  {
    sub_1D2D4B030(v125);
    sub_1D2D4B030((uint64_t)v138);
    result = sub_1D2D4B030(v73);
    v47 = v123;
    if (!v20)
      goto LABEL_42;
    swift_bridgeObjectRelease();
LABEL_31:
    v20 = 0;
    goto LABEL_44;
  }
  if (!v129)
  {
    swift_bridgeObjectRetain();
    sub_1D2D4B030(v140);
    sub_1D2D4B030((uint64_t)v138);
    sub_1D2D4B030(v73);
    swift_bridgeObjectRelease_n();
    v47 = v123;
LABEL_44:
    v12 = *(_QWORD *)(v47 + 112);
    if (__ROR8__(0x8F5C28F5C28F5C29 * v12 + 0x51EB851EB851EB8, 2) > 0x28F5C28F5C28F5CuLL)
      goto LABEL_49;
    v3 = *(_QWORD *)(v47 + 120);
    if (qword_1ED587858 == -1)
    {
LABEL_46:
      v101 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v101, (uint64_t)qword_1ED5886E8);
      v102 = sub_1D2D9C8DC();
      v103 = sub_1D2D9E028();
      if (os_log_type_enabled(v102, v103))
      {
        v104 = (double)v3 / (double)v12;
        v105 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v105 = 134349056;
        *(double *)v151 = v104;
        sub_1D2D9E1B4();
        _os_log_impl(&dword_1D2CC0000, v102, v103, "TextTranslationCache cache stats: %{public}f", v105, 0xCu);
        MEMORY[0x1D8248974](v105, -1, -1);
        swift_release_n();

        return (uint64_t)v20;
      }

LABEL_49:
      swift_release_n();
      return (uint64_t)v20;
    }
LABEL_83:
    swift_once();
    goto LABEL_46;
  }
  if (v124 == v128 && v127 == v129)
  {
    swift_bridgeObjectRelease();
    sub_1D2D4B030(v140);
    sub_1D2D4B030((uint64_t)v138);
    sub_1D2D4B030(v73);
    result = swift_bridgeObjectRelease();
    v47 = v123;
    goto LABEL_42;
  }
  v130 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  sub_1D2D4B030(v140);
  sub_1D2D4B030((uint64_t)v138);
  sub_1D2D4B030(v73);
  result = swift_bridgeObjectRelease();
  v47 = v123;
  if ((v130 & 1) == 0)
    goto LABEL_31;
LABEL_42:
  v99 = *(_QWORD *)(v47 + 120);
  v29 = __OFADD__(v99, 1);
  v100 = v99 + 1;
  if (!v29)
  {
    *(_QWORD *)(v47 + 120) = v100;
    v20 = *(char **)&v71[v36[8]];
    swift_bridgeObjectRetain();
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D4DC64()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for TextTranslationCache()
{
  return objc_opt_self();
}

uint64_t sub_1D2D4DCA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D2D4DCB4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for TextModel() - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v11 = a1(&v12, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1D8247990](v11);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D2D9DE84();
        sub_1D2D9DE9C();
        sub_1D2D9DE78();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1D2D4DDEC(void *a1, void *a2, void *a3, uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _BYTE *v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  id v46;
  void *v47;
  _QWORD v48[3];
  void (*v49)(_QWORD *);
  id v50;
  uint64_t v51;
  uint64_t aBlock;
  uint64_t v53;
  void (*v54)(uint64_t, void *, void *);
  void *v55;
  double (*v56)(double, double);
  uint64_t v57;

  v49 = a5;
  v50 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81F8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v19 = (char *)v48 - v18;
  if (!a1)
  {
LABEL_10:
    if (a2)
    {
      v33 = a2;
    }
    else
    {
      sub_1D2D47830();
      v33 = (void *)swift_allocError();
      *v34 = 6;
    }
    v35 = a2;
    if (qword_1ED587858 != -1)
      swift_once();
    v36 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED5886E8);
    sub_1D2CDB6B4(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v37 = sub_1D2D9C8DC();
    v38 = sub_1D2D9E04C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v48[0] = v33;
      v48[1] = v10;
      v40 = (uint8_t *)v39;
      v41 = swift_slowAlloc();
      v48[2] = a6;
      v42 = v41;
      aBlock = v41;
      *(_DWORD *)v40 = 136446210;
      sub_1D2D9C6FC();
      sub_1D2D54DE8();
      v43 = sub_1D2D9E508();
      v51 = sub_1D2CF78E0(v43, v44, &aBlock);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      _os_log_impl(&dword_1D2CC0000, v37, v38, "Requested translating model ID %{public}s of length ", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v42, -1, -1);
      v45 = v40;
      v33 = (void *)v48[0];
      MEMORY[0x1D8248974](v45, -1, -1);
    }
    else
    {
      sub_1D2CD3734((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    }

    *v12 = v33;
    swift_storeEnumTagMultiPayload();
    v46 = v33;
    v49(v12);

    sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA81F8);
    v56 = CGPointMake;
    v57 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v53 = 1107296256;
    v31 = &block_descriptor_20;
    goto LABEL_19;
  }
  v20 = a6;
  v21 = objc_msgSend(a1, sel_translations, v17);
  sub_1D2CC63E8(0, &qword_1EFCA8200);
  v22 = sub_1D2D9DE60();

  if (!(v22 >> 62))
  {
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v32 = sub_1D2D9E3AC();
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    a6 = v20;
    goto LABEL_10;
  }
LABEL_4:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v23 = (id)MEMORY[0x1D8247E58](0, v22);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v22 + 32);
LABEL_7:
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1D2CDB6B4(a4, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v25 = objc_msgSend(v24, sel_formattedString);
    v26 = sub_1D2D9DCD4();
    v28 = v27;

    v29 = (uint64_t *)&v19[*(int *)(v13 + 32)];
    swift_bridgeObjectRelease();
    *v29 = v26;
    v29[1] = v28;
    objc_msgSend(v24, sel_confidence);
    *(_QWORD *)&v19[*(int *)(v13 + 40)] = v30;
    sub_1D2CDB6B4((uint64_t)v19, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    swift_storeEnumTagMultiPayload();
    v49(v12);

    sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA81F8);
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v56 = CGPointMake;
    v57 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v53 = 1107296256;
    v31 = &block_descriptor_23_0;
LABEL_19:
    v54 = sub_1D2D4E318;
    v55 = v31;
    v47 = _Block_copy(&aBlock);
    objc_msgSend(v50, sel_setCompletionHandler_, v47);
    _Block_release(v47);
    return;
  }
  __break(1u);
}

void sub_1D2D4E318(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t static TextTranslationService.translate(_:strictLocales:taskHint:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned __int8 v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v17;
  unsigned __int8 v18;

  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a3;
  sub_1D2D9C6F0();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CE9990]), sel_init);
  v14 = (void *)sub_1D2D9C6CC();
  v15 = objc_msgSend(v13, sel_startTranslationSessionWithSELFLoggingInvocationId_, v14);

  v18 = v12;
  sub_1D2D4E54C(a1, a2, (uint64_t)v15, &v18, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static TextTranslationService.translate(_:strictLocales:taskHint:selfLoggingInvocationId:)(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7;
  id v8;
  void *v9;
  id v10;
  unsigned __int8 v11;

  v7 = *a3;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CE9990]), sel_init);
  v9 = (void *)sub_1D2D9C6CC();
  v10 = objc_msgSend(v8, sel_startTranslationSessionWithSELFLoggingInvocationId_, v9);

  v11 = v7;
  sub_1D2D4E54C(a1, a2, (uint64_t)v10, &v11, a4);

}

uint64_t sub_1D2D4E54C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint8_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  __n128 v34;
  _QWORD v36[3];
  uint64_t v37;
  uint8_t *v38;
  os_log_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v43 = a3;
  LODWORD(v6) = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587078);
  v46 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TextModel();
  v11 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D2D9C6FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *a4;
  if (qword_1ED587858 != -1)
    swift_once();
  v18 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED5886E8);
  swift_bridgeObjectRetain_n();
  v19 = sub_1D2D9C8DC();
  v42 = sub_1D2D9E01C();
  if (os_log_type_enabled(v19, (os_log_type_t)v42))
  {
    v39 = v19;
    v41 = (int)v6;
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v37 = v21;
    *(_DWORD *)v20 = 134349314;
    v49 = *(_QWORD *)(a1 + 16);
    v22 = v49;
    v50 = v21;
    v36[2] = &v50;
    sub_1D2D9E1B4();
    v38 = (uint8_t *)v20;
    *(_WORD *)(v20 + 12) = 2082;
    v23 = MEMORY[0x1E0DEE9D8];
    v40 = a1;
    if (v22)
    {
      v36[0] = v9;
      v36[1] = a5;
      v49 = MEMORY[0x1E0DEE9D8];
      sub_1D2D04094(0, v22, 0);
      v24 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v48 = *(_QWORD *)(v11 + 72);
      do
      {
        sub_1D2CDB6B4(v24, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v13, v14);
        sub_1D2CD3734((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v23 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D04094(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v49;
        }
        v26 = *(_QWORD *)(v23 + 16);
        v25 = *(_QWORD *)(v23 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1D2D04094(v25 > 1, v26 + 1, 1);
          v23 = v49;
        }
        *(_QWORD *)(v23 + 16) = v26 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v26, v17, v14);
        v49 = v23;
        v24 += v48;
        --v22;
      }
      while (v22);
      v9 = v36[0];
    }
    v28 = v43;
    v6 = v38;
    v29 = MEMORY[0x1D82479C0](v23, v14);
    v31 = v30;
    swift_bridgeObjectRelease();
    v49 = sub_1D2CF78E0(v29, v31, &v50);
    sub_1D2D9E1B4();
    a1 = v40;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v32 = v39;
    _os_log_impl(&dword_1D2CC0000, v39, (os_log_type_t)v42, "Requested translating %{public}ld models: %{public}s", v6, 0x16u);
    v33 = v37;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v33, -1, -1);
    MEMORY[0x1D8248974](v6, -1, -1);

    LOBYTE(v6) = v41;
  }
  else
  {

    v27 = swift_bridgeObjectRelease_n();
    v28 = v43;
  }
  v34 = MEMORY[0x1E0C80A78](v27);
  v36[-4] = a1;
  LOBYTE(v36[-3]) = v6 & 1;
  BYTE1(v36[-3]) = v44;
  v36[-2] = v28;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v46 + 104))(v47, *MEMORY[0x1E0DF07B8], v9, v34);
  return sub_1D2D9DF50();
}

uint64_t sub_1D2D4E9BC(uint64_t a1, uint64_t a2, int a3, char a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  int v22;
  int v23;

  v22 = a3;
  v23 = a4 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = v16 + v10;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
  *(_BYTE *)(v18 + v17) = v23;
  *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + v18 + 8) = a5;
  swift_bridgeObjectRetain();
  v19 = a5;
  sub_1D2D06D10((uint64_t)v14, (uint64_t)&unk_1EFCA81E8, v18);
  return swift_release();
}

uint64_t sub_1D2D4EB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 696) = a8;
  *(_BYTE *)(v8 + 970) = a7;
  *(_QWORD *)(v8 + 688) = a6;
  *(_BYTE *)(v8 + 969) = a5;
  *(_QWORD *)(v8 + 680) = a4;
  *(_QWORD *)(v8 + 704) = type metadata accessor for Signpost();
  *(_QWORD *)(v8 + 712) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8050);
  *(_QWORD *)(v8 + 720) = v9;
  *(_QWORD *)(v8 + 728) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 736) = swift_task_alloc();
  v10 = type metadata accessor for TextModel();
  *(_QWORD *)(v8 + 744) = v10;
  *(_QWORD *)(v8 + 752) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 760) = swift_task_alloc();
  *(_QWORD *)(v8 + 768) = swift_task_alloc();
  *(_QWORD *)(v8 + 776) = swift_task_alloc();
  *(_QWORD *)(v8 + 784) = swift_task_alloc();
  *(_QWORD *)(v8 + 792) = swift_task_alloc();
  *(_QWORD *)(v8 + 800) = swift_task_alloc();
  *(_QWORD *)(v8 + 808) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  *(_QWORD *)(v8 + 816) = swift_task_alloc();
  *(_QWORD *)(v8 + 824) = swift_task_alloc();
  *(_QWORD *)(v8 + 832) = swift_task_alloc();
  *(_QWORD *)(v8 + 840) = swift_task_alloc();
  *(_QWORD *)(v8 + 848) = swift_task_alloc();
  *(_QWORD *)(v8 + 856) = swift_task_alloc();
  *(_QWORD *)(v8 + 864) = swift_task_alloc();
  *(_QWORD *)(v8 + 872) = swift_task_alloc();
  *(_QWORD *)(v8 + 880) = swift_task_alloc();
  *(_QWORD *)(v8 + 888) = swift_task_alloc();
  *(_QWORD *)(v8 + 896) = swift_task_alloc();
  return swift_task_switch();
}

