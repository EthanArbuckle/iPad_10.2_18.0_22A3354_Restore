uint64_t sub_1D2D4ECEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  unsigned int v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  _QWORD *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  void *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  unsigned int (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(_QWORD);
  uint64_t v167;
  uint64_t v168;

  v1 = *(_QWORD *)(v0 + 680);
  *(_QWORD *)(v0 + 624) = v1;
  v2 = *(_QWORD *)(v0 + 896);
  if (!*(_QWORD *)(v1 + 16))
  {
    v21 = sub_1D2D9C7EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
LABEL_10:
    v22 = *(_QWORD *)(v0 + 896);
    swift_bridgeObjectRetain();
    sub_1D2CCADA4(v22, &qword_1ED587850);
    if (qword_1ED587858 != -1)
      goto LABEL_122;
    goto LABEL_11;
  }
  v3 = *(_QWORD *)(v0 + 744);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
  v5 = (v4 + 32) & ~v4;
  sub_1D2CCAD60(v1 + *(int *)(v3 + 28) + v5, *(_QWORD *)(v0 + 896), &qword_1ED587850);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v157 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v157(v2, 1, v6) == 1)
    goto LABEL_10;
  v153 = v7;
  v8 = *(_QWORD *)(v0 + 896);
  swift_bridgeObjectRetain();
  sub_1D2CCADA4(v8, &qword_1ED587850);
  if (qword_1ED587858 != -1)
    swift_once();
  v9 = (uint64_t *)(v0 + 656);
  v165 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v165, (uint64_t)qword_1ED5886E8);
  v10 = sub_1D2D9C8DC();
  v11 = sub_1D2D9E01C();
  v155 = (uint64_t *)(v0 + 624);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v160 = swift_slowAlloc();
    v168 = v160;
    *(_DWORD *)v12 = 136446210;
    swift_beginAccess();
    v13 = *(_QWORD *)(v0 + 624);
    v14 = *(_QWORD *)(v0 + 880);
    if (*(_QWORD *)(v13 + 16))
    {
      sub_1D2CCAD60(v13 + v5 + *(int *)(v3 + 28), *(_QWORD *)(v0 + 880), &qword_1ED587850);
      if (v157(v14, 1, v6) != 1)
      {
        v15 = *(_QWORD *)(v0 + 880);
        *(_QWORD *)(v0 + 344) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 352) = v16;
        *(_QWORD *)(v0 + 328) = 45;
        *(_QWORD *)(v0 + 336) = 0xE100000000000000;
        *(_QWORD *)(v0 + 312) = 95;
        *(_QWORD *)(v0 + 320) = 0xE100000000000000;
        sub_1D2CD1430();
        v17 = sub_1D2D9E1E4();
        v19 = v18;
        swift_bridgeObjectRelease();
        v20 = v15;
        v9 = (uint64_t *)(v0 + 656);
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v20, v6);
LABEL_16:
        *v9 = sub_1D2CF78E0(v17, v19, &v168);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2CC0000, v10, v11, "Source Locale already set to %{public}s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v160, -1, -1);
        MEMORY[0x1D8248974](v12, -1, -1);
        goto LABEL_17;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(_QWORD *)(v0 + 880), 1, 1, v6);
    }
    v17 = 7104878;
    sub_1D2CCADA4(*(_QWORD *)(v0 + 880), &qword_1ED587850);
    v19 = 0xE300000000000000;
    goto LABEL_16;
  }
LABEL_17:

  if ((*(_BYTE *)(v0 + 969) & 1) == 0)
  {
    if (qword_1ED587858 != -1)
      swift_once();
    *(_QWORD *)(v0 + 928) = __swift_project_value_buffer(v165, (uint64_t)qword_1ED5886E8);
    v41 = sub_1D2D9C8DC();
    v42 = sub_1D2D9E028();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1D2CC0000, v41, v42, "Validating target locale due to non-strict", v43, 2u);
      MEMORY[0x1D8248974](v43, -1, -1);
    }

    swift_beginAccess();
    v44 = *(_QWORD *)(v0 + 624);
    *(_QWORD *)(v0 + 936) = v44;
    swift_bridgeObjectRetain();
    v45 = swift_task_alloc();
    *(_QWORD *)(v0 + 944) = v45;
    *(_QWORD *)(v45 + 16) = v44;
    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 952) = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C0);
    *v46 = v0;
    v46[1] = sub_1D2D5150C;
    return sub_1D2D9E514();
  }
  if (qword_1ED587858 != -1)
    swift_once();
  __swift_project_value_buffer(v165, (uint64_t)qword_1ED5886E8);
  v29 = sub_1D2D9C8DC();
  v30 = sub_1D2D9E01C();
  v156 = v6;
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v168 = v32;
    *(_DWORD *)v31 = 136446210;
    swift_beginAccess();
    v33 = *(_QWORD *)(v0 + 624);
    v34 = *(_QWORD *)(v0 + 864);
    if (*(_QWORD *)(v33 + 16))
    {
      v35 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v153 + 16))(*(_QWORD *)(v0 + 864), v33 + *(int *)(*(_QWORD *)(v0 + 744) + 36) + ((v35 + 32) & ~v35), v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v153 + 56))(v34, 0, 1, v6);
      if (v157(v34, 1, v6) != 1)
      {
        v36 = *(_QWORD *)(v0 + 864);
        *(_QWORD *)(v0 + 568) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 576) = v37;
        *(_QWORD *)(v0 + 584) = 45;
        *(_QWORD *)(v0 + 592) = 0xE100000000000000;
        *(_QWORD *)(v0 + 552) = 95;
        *(_QWORD *)(v0 + 560) = 0xE100000000000000;
        sub_1D2CD1430();
        v38 = sub_1D2D9E1E4();
        v40 = v39;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v36, v6);
LABEL_31:
        *(_QWORD *)(v0 + 600) = sub_1D2CF78E0(v38, v40, &v168);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2CC0000, v29, v30, "Using strict locales, treating target as %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v32, -1, -1);
        MEMORY[0x1D8248974](v31, -1, -1);
        goto LABEL_32;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(_QWORD *)(v0 + 864), 1, 1, v6);
    }
    v38 = 7104878;
    sub_1D2CCADA4(*(_QWORD *)(v0 + 864), &qword_1ED587850);
    v40 = 0xE300000000000000;
    goto LABEL_31;
  }
LABEL_32:

  swift_beginAccess();
  v47 = *v155;
  v48 = MEMORY[0x1E0DEE9D8];
  v168 = MEMORY[0x1E0DEE9D8];
  v49 = *(_QWORD *)(v47 + 16);
  swift_bridgeObjectRetain();
  v161 = v49;
  if (!v49)
  {
LABEL_63:
    swift_bridgeObjectRelease();
    v84 = *(_QWORD *)(v48 + 16);
    if (v84)
    {
      v85 = *(_QWORD *)(v0 + 752);
      v86 = v48 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
      v87 = qword_1ED587858;
      swift_retain();
      if (v87 != -1)
      {
        swift_once();
        v85 = *(_QWORD *)(v0 + 752);
      }
      v162 = *(_QWORD *)(v0 + 728);
      v88 = *(_QWORD *)(v85 + 72);
      do
      {
        __swift_project_value_buffer(v165, (uint64_t)qword_1ED5886E8);
        v92 = sub_1D2D9C8DC();
        v93 = sub_1D2D9E028();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v94 = 0;
          _os_log_impl(&dword_1D2CC0000, v92, v93, "Yield untranslatable or already translated)", v94, 2u);
          MEMORY[0x1D8248974](v94, -1, -1);
        }
        v89 = *(_QWORD *)(v0 + 800);
        v90 = *(_QWORD *)(v0 + 736);
        v91 = *(_QWORD *)(v0 + 720);

        sub_1D2CDB6B4(v86, v89, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
        sub_1D2D9DF20();
        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v90, v91);
        v86 += v88;
        --v84;
      }
      while (v84);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    v95 = *v155;
    v96 = MEMORY[0x1E0DEE9D8];
    v168 = MEMORY[0x1E0DEE9D8];
    v97 = *(_QWORD *)(v95 + 16);
    swift_bridgeObjectRetain();
    if (v97)
    {
      v98 = 0;
      v99 = *(_QWORD *)(v0 + 752);
      v100 = *(int **)(v0 + 744);
      v163 = MEMORY[0x1E0DEE9D8];
      v154 = v97;
      v159 = v99;
      while (1)
      {
        if (v98 >= *(_QWORD *)(v95 + 16))
          goto LABEL_121;
        v103 = *(_QWORD *)(v0 + 776);
        v104 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
        v105 = *(_QWORD *)(v99 + 72);
        sub_1D2CDB6B4(v95 + v104 + v105 * v98, v103, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v106 = *(_QWORD *)(v0 + 776);
        if (*(_QWORD *)(v103 + v100[11]))
          goto LABEL_75;
        v107 = (uint64_t *)(v106 + v100[6]);
        v109 = *v107;
        v108 = v107[1];
        v110 = v109 & 0xFFFFFFFFFFFFLL;
        if (!((v108 & 0x2000000000000000) != 0 ? HIBYTE(v108) & 0xF : v110))
          goto LABEL_75;
        v112 = *(_QWORD *)(v0 + 840);
        sub_1D2CCAD60(v106 + v100[7], v112, &qword_1ED587850);
        v113 = v157(v112, 1, v156);
        sub_1D2CCADA4(v112, &qword_1ED587850);
        v106 = *(_QWORD *)(v0 + 776);
        if (v113 == 1)
          break;
        v114 = *(_QWORD *)(v0 + 768);
        sub_1D2CDB6B4(v106, v114, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v101 = *(_QWORD *)(v0 + 768);
        if (*(_QWORD *)(v114 + v100[11]))
          goto LABEL_86;
        v122 = (uint64_t *)(v101 + v100[6]);
        v124 = *v122;
        v123 = v122[1];
        v125 = v124 & 0xFFFFFFFFFFFFLL;
        if ((v123 & 0x2000000000000000) != 0)
          v126 = HIBYTE(v123) & 0xF;
        else
          v126 = v125;
        v99 = v159;
        if (!v126)
          goto LABEL_87;
        v127 = *(_QWORD *)(v0 + 832);
        sub_1D2CCAD60(v101 + v100[7], v127, &qword_1ED587850);
        v128 = v157(v127, 1, v156);
        sub_1D2CCADA4(v127, &qword_1ED587850);
        v101 = *(_QWORD *)(v0 + 768);
        if (v128 == 1 || (v129 = (_QWORD *)(v101 + v100[8]), (v130 = v129[1]) == 0))
        {
LABEL_86:
          v99 = v159;
LABEL_87:
          v115 = *(_QWORD *)(v0 + 776);
          v116 = *(_QWORD *)(v0 + 760);
          sub_1D2CD3734(v101, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          sub_1D2CD1FD4(v115, v116, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          v117 = v163;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D2D04068(0, *(_QWORD *)(v163 + 16) + 1, 1);
            v117 = v168;
          }
          v119 = *(_QWORD *)(v117 + 16);
          v118 = *(_QWORD *)(v117 + 24);
          v120 = v119 + 1;
          if (v119 >= v118 >> 1)
          {
            sub_1D2D04068(v118 > 1, v119 + 1, 1);
            v120 = v119 + 1;
            v117 = v168;
          }
          v121 = *(_QWORD *)(v0 + 760);
          *(_QWORD *)(v117 + 16) = v120;
          v163 = v117;
          sub_1D2CD1FD4(v121, v117 + v104 + v119 * v105, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          v97 = v154;
          goto LABEL_77;
        }
        v131 = *v129 & 0xFFFFFFFFFFFFLL;
        if ((v130 & 0x2000000000000000) != 0)
          v132 = HIBYTE(v130) & 0xF;
        else
          v132 = v131;
        v97 = v154;
        v99 = v159;
        if (!v132)
          goto LABEL_87;
LABEL_76:
        v102 = *(_QWORD *)(v0 + 776);
        sub_1D2CD3734(v101, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2CD3734(v102, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_77:
        if (v97 == ++v98)
          goto LABEL_104;
      }
      v97 = v154;
      v99 = v159;
LABEL_75:
      sub_1D2CDB6B4(v106, *(_QWORD *)(v0 + 768), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v101 = *(_QWORD *)(v0 + 768);
      goto LABEL_76;
    }
    v163 = v96;
LABEL_104:
    swift_bridgeObjectRelease();
    *v155 = v163;
    swift_bridgeObjectRelease();
    if (qword_1ED587858 != -1)
      swift_once();
    *(_QWORD *)(v0 + 960) = __swift_project_value_buffer(v165, (uint64_t)qword_1ED5886E8);
    v133 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRetain_n();
    v134 = sub_1D2D9C8DC();
    v135 = sub_1D2D9E01C();
    if (!os_log_type_enabled(v134, v135))
    {
      swift_bridgeObjectRelease_n();
LABEL_119:

      v150 = (void *)objc_opt_self();
      *(_QWORD *)(v0 + 56) = v0 + 968;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1D2D52464;
      v151 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      v152 = (_QWORD *)(v0 + 80);
      v152[1] = 0x40000000;
      v152[2] = sub_1D2D87560;
      v152[3] = &block_descriptor_8;
      v152[4] = v151;
      objc_msgSend(v150, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v152);
      return swift_continuation_await();
    }
    v167 = 7104878;
    v136 = swift_slowAlloc();
    v164 = swift_slowAlloc();
    v168 = v164;
    *(_DWORD *)v136 = 134218498;
    *(_QWORD *)(v0 + 672) = *(_QWORD *)(v133 + 16);
    sub_1D2D9E1B4();
    *(_WORD *)(v136 + 12) = 2082;
    v137 = *(_QWORD *)(v0 + 824);
    if (*(_QWORD *)(v133 + 16))
    {
      v138 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
      sub_1D2CCAD60(v133 + *(int *)(*(_QWORD *)(v0 + 744) + 28) + ((v138 + 32) & ~v138), *(_QWORD *)(v0 + 824), &qword_1ED587850);
      if (v157(v137, 1, v156) != 1)
      {
        v139 = *(_QWORD *)(v0 + 824);
        *(_QWORD *)(v0 + 424) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 432) = v140;
        *(_QWORD *)(v0 + 440) = 45;
        *(_QWORD *)(v0 + 448) = 0xE100000000000000;
        *(_QWORD *)(v0 + 360) = 95;
        *(_QWORD *)(v0 + 368) = 0xE100000000000000;
        sub_1D2CD1430();
        v141 = sub_1D2D9E1E4();
        v143 = v142;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v139, v156);
        goto LABEL_113;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(_QWORD *)(v0 + 824), 1, 1, v156);
    }
    sub_1D2CCADA4(*(_QWORD *)(v0 + 824), &qword_1ED587850);
    v143 = 0xE300000000000000;
    v141 = 7104878;
LABEL_113:
    *(_QWORD *)(v0 + 664) = sub_1D2CF78E0(v141, v143, &v168);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v136 + 22) = 2082;
    v144 = *(_QWORD *)(v0 + 816);
    if (*(_QWORD *)(v133 + 16))
    {
      v145 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v153 + 16))(*(_QWORD *)(v0 + 816), v133 + *(int *)(*(_QWORD *)(v0 + 744) + 36) + ((v145 + 32) & ~v145), v156);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v153 + 56))(v144, 0, 1, v156);
      if (v157(v144, 1, v156) != 1)
      {
        v146 = *(_QWORD *)(v0 + 816);
        *(_QWORD *)(v0 + 376) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 384) = v147;
        *(_QWORD *)(v0 + 392) = 45;
        *(_QWORD *)(v0 + 400) = 0xE100000000000000;
        *(_QWORD *)(v0 + 408) = 95;
        *(_QWORD *)(v0 + 416) = 0xE100000000000000;
        sub_1D2CD1430();
        v167 = sub_1D2D9E1E4();
        v149 = v148;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v146, v156);
LABEL_118:
        *(_QWORD *)(v0 + 648) = sub_1D2CF78E0(v167, v149, &v168);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D2CC0000, v134, v135, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v136, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v164, -1, -1);
        MEMORY[0x1D8248974](v136, -1, -1);
        goto LABEL_119;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(_QWORD *)(v0 + 816), 1, 1, v156);
    }
    sub_1D2CCADA4(*(_QWORD *)(v0 + 816), &qword_1ED587850);
    v149 = 0xE300000000000000;
    goto LABEL_118;
  }
  v50 = 0;
  v158 = *(_QWORD *)(v0 + 752);
  v51 = *(int **)(v0 + 744);
  while (v50 < *(_QWORD *)(v47 + 16))
  {
    v55 = *(_QWORD *)(v0 + 808);
    v56 = (*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80);
    v57 = *(_QWORD *)(v158 + 72);
    sub_1D2CDB6B4(v47 + v56 + v57 * v50, v55, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v58 = *(_QWORD *)(v0 + 808);
    if (*(_QWORD *)(v55 + v51[11]))
      goto LABEL_39;
    v66 = (uint64_t *)(v58 + v51[6]);
    v68 = *v66;
    v67 = v66[1];
    v69 = v68 & 0xFFFFFFFFFFFFLL;
    v70 = (v67 & 0x2000000000000000) != 0 ? HIBYTE(v67) & 0xF : v69;
    if (!v70
      || (v71 = *(_QWORD *)(v0 + 856),
          sub_1D2CCAD60(v58 + v51[7], v71, &qword_1ED587850),
          v72 = v157(v71, 1, v156),
          sub_1D2CCADA4(v71, &qword_1ED587850),
          v58 = *(_QWORD *)(v0 + 808),
          v72 == 1))
    {
LABEL_39:
      sub_1D2CDB6B4(v58, *(_QWORD *)(v0 + 792), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v53 = *(_QWORD *)(v0 + 792);
LABEL_40:
      v59 = v47;
      v60 = v51;
      v61 = *(_QWORD *)(v0 + 808);
      v62 = *(_QWORD *)(v0 + 784);
      sub_1D2CD3734(v53, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD1FD4(v61, v62, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D04068(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v48 = v168;
      }
      v64 = *(_QWORD *)(v48 + 16);
      v63 = *(_QWORD *)(v48 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_1D2D04068(v63 > 1, v64 + 1, 1);
        v48 = v168;
      }
      v65 = *(_QWORD *)(v0 + 784);
      *(_QWORD *)(v48 + 16) = v64 + 1;
      sub_1D2CD1FD4(v65, v48 + v56 + v64 * v57, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v51 = v60;
      v47 = v59;
      goto LABEL_36;
    }
    v52 = *(_QWORD *)(v0 + 792);
    sub_1D2CDB6B4(v58, v52, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v53 = *(_QWORD *)(v0 + 792);
    if (!*(_QWORD *)(v52 + v51[11]))
    {
      v73 = (uint64_t *)(v53 + v51[6]);
      v75 = *v73;
      v74 = v73[1];
      v76 = v75 & 0xFFFFFFFFFFFFLL;
      if ((v74 & 0x2000000000000000) != 0 ? HIBYTE(v74) & 0xF : v76)
      {
        v78 = *(_QWORD *)(v0 + 848);
        sub_1D2CCAD60(v53 + v51[7], v78, &qword_1ED587850);
        v79 = v157(v78, 1, v156);
        sub_1D2CCADA4(v78, &qword_1ED587850);
        v53 = *(_QWORD *)(v0 + 792);
        if (v79 != 1)
        {
          v80 = (_QWORD *)(v53 + v51[8]);
          v81 = v80[1];
          if (v81)
          {
            v82 = *v80 & 0xFFFFFFFFFFFFLL;
            if ((v81 & 0x2000000000000000) != 0 ? HIBYTE(v81) & 0xF : v82)
              goto LABEL_40;
          }
        }
      }
    }
    v54 = *(_QWORD *)(v0 + 808);
    sub_1D2CD3734(v53, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734(v54, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_36:
    if (v161 == ++v50)
      goto LABEL_63;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  swift_once();
LABEL_11:
  v23 = sub_1D2D9C8F4();
  *(_QWORD *)(v0 + 904) = __swift_project_value_buffer(v23, (uint64_t)qword_1ED5886E8);
  v24 = sub_1D2D9C8DC();
  v25 = sub_1D2D9E028();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1D2CC0000, v24, v25, "Performing source LID since sourceLocale is nil", v26, 2u);
    MEMORY[0x1D8248974](v26, -1, -1);
  }

  v166 = (uint64_t (*)(_QWORD))((char *)&dword_1EFCA81B0 + dword_1EFCA81B0);
  swift_bridgeObjectRetain();
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 912) = v27;
  *v27 = v0;
  v27[1] = sub_1D2D50198;
  return v166(*(_QWORD *)(v0 + 680));
}

uint64_t sub_1D2D50198(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 920) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D50200()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  int v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  int v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  int *v122;
  uint64_t v123;
  int v124;
  _QWORD *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  _QWORD *v155;
  int *v156;
  uint64_t *v157;
  uint64_t (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  os_log_type_t v173;
  uint64_t v174;

  v1 = (uint64_t *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 920);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 624) = v2;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E01C();
  if (!os_log_type_enabled(v3, v4))
    goto LABEL_8;
  v5 = (uint8_t *)swift_slowAlloc();
  v6 = swift_slowAlloc();
  v174 = v6;
  *(_DWORD *)v5 = 136446210;
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 624);
  v8 = *(_QWORD *)(v0 + 888);
  if (!*(_QWORD *)(v7 + 16))
  {
    v16 = sub_1D2D9C7EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    goto LABEL_6;
  }
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
  sub_1D2CCAD60(v7 + *(int *)(*(_QWORD *)(v0 + 744) + 28) + ((v9 + 32) & ~v9), *(_QWORD *)(v0 + 888), &qword_1ED587850);
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
LABEL_6:
    v13 = 7104878;
    sub_1D2CCADA4(*(_QWORD *)(v0 + 888), &qword_1ED587850);
    v15 = 0xE300000000000000;
    goto LABEL_7;
  }
  v167 = *(_QWORD *)(v0 + 888);
  *(_QWORD *)(v0 + 536) = sub_1D2D9C714();
  *(_QWORD *)(v0 + 544) = v12;
  *(_QWORD *)(v0 + 472) = 45;
  *(_QWORD *)(v0 + 480) = 0xE100000000000000;
  *(_QWORD *)(v0 + 456) = 95;
  *(_QWORD *)(v0 + 464) = 0xE100000000000000;
  sub_1D2CD1430();
  v13 = sub_1D2D9E1E4();
  v15 = v14;
  v1 = (uint64_t *)(v0 + 624);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v167, v10);
LABEL_7:
  *(_QWORD *)(v0 + 616) = sub_1D2CF78E0(v13, v15, &v174);
  sub_1D2D9E1B4();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1D2CC0000, v3, v4, "Source LID result: %{public}s", v5, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D8248974](v6, -1, -1);
  MEMORY[0x1D8248974](v5, -1, -1);
LABEL_8:

  if ((*(_BYTE *)(v0 + 969) & 1) == 0)
  {
    if (qword_1ED587858 != -1)
      swift_once();
    v31 = sub_1D2D9C8F4();
    *(_QWORD *)(v0 + 928) = __swift_project_value_buffer(v31, (uint64_t)qword_1ED5886E8);
    v32 = sub_1D2D9C8DC();
    v33 = sub_1D2D9E028();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1D2CC0000, v32, v33, "Validating target locale due to non-strict", v34, 2u);
      MEMORY[0x1D8248974](v34, -1, -1);
    }

    swift_beginAccess();
    v35 = *(_QWORD *)(v0 + 624);
    *(_QWORD *)(v0 + 936) = v35;
    swift_bridgeObjectRetain();
    v36 = swift_task_alloc();
    *(_QWORD *)(v0 + 944) = v36;
    *(_QWORD *)(v36 + 16) = v35;
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 952) = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C0);
    *v37 = v0;
    v37[1] = sub_1D2D5150C;
    return sub_1D2D9E514();
  }
  if (qword_1ED587858 != -1)
    goto LABEL_112;
  while (1)
  {
    v172 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v172, (uint64_t)qword_1ED5886E8);
    v17 = sub_1D2D9C8DC();
    v18 = sub_1D2D9E01C();
    v157 = v1;
    if (!os_log_type_enabled(v17, v18))
    {

      goto LABEL_23;
    }
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v174 = v20;
    *(_DWORD *)v19 = 136446210;
    swift_beginAccess();
    v21 = *(_QWORD *)(v0 + 624);
    v22 = *(_QWORD *)(v0 + 864);
    if (!*(_QWORD *)(v21 + 16))
    {
      v39 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v22, 1, 1, v39);
LABEL_21:
      v28 = 7104878;
      sub_1D2CCADA4(*(_QWORD *)(v0 + 864), &qword_1ED587850);
      v30 = 0xE300000000000000;
      goto LABEL_22;
    }
    v23 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
    v24 = v21 + *(int *)(*(_QWORD *)(v0 + 744) + 36) + ((v23 + 32) & ~v23);
    v25 = sub_1D2D9C7EC();
    v26 = *(_QWORD *)(v25 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v22, v24, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25) == 1)
      goto LABEL_21;
    v162 = *(_QWORD *)(v0 + 864);
    *(_QWORD *)(v0 + 568) = sub_1D2D9C714();
    *(_QWORD *)(v0 + 576) = v27;
    *(_QWORD *)(v0 + 584) = 45;
    *(_QWORD *)(v0 + 592) = 0xE100000000000000;
    *(_QWORD *)(v0 + 552) = 95;
    *(_QWORD *)(v0 + 560) = 0xE100000000000000;
    sub_1D2CD1430();
    v28 = sub_1D2D9E1E4();
    v30 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v162, v25);
LABEL_22:
    *(_QWORD *)(v0 + 600) = sub_1D2CF78E0(v28, v30, &v174);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v17, v18, "Using strict locales, treating target as %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v20, -1, -1);
    MEMORY[0x1D8248974](v19, -1, -1);

    v1 = v157;
LABEL_23:
    swift_beginAccess();
    v40 = *v1;
    v41 = MEMORY[0x1E0DEE9D8];
    v174 = MEMORY[0x1E0DEE9D8];
    v42 = *(uint64_t **)(v40 + 16);
    v168 = v40;
    swift_bridgeObjectRetain();
    v165 = v42;
    if (!v42)
      break;
    v1 = 0;
    v163 = *(_QWORD *)(v0 + 752);
    v43 = *(int **)(v0 + 744);
    v44 = v168;
    while ((unint64_t)v1 < *(_QWORD *)(v44 + 16))
    {
      v48 = *(_QWORD *)(v0 + 808);
      v49 = (*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80);
      v50 = *(_QWORD *)(v163 + 72);
      sub_1D2CDB6B4(v44 + v49 + v50 * (_QWORD)v1, v48, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v51 = *(_QWORD *)(v0 + 808);
      if (*(_QWORD *)(v48 + v43[11]))
        goto LABEL_30;
      v58 = (uint64_t *)(v51 + v43[6]);
      v60 = *v58;
      v59 = v58[1];
      v61 = v60 & 0xFFFFFFFFFFFFLL;
      if (!((v59 & 0x2000000000000000) != 0 ? HIBYTE(v59) & 0xF : v61))
        goto LABEL_30;
      v63 = *(_QWORD *)(v0 + 856);
      sub_1D2CCAD60(v51 + v43[7], v63, &qword_1ED587850);
      v64 = sub_1D2D9C7EC();
      v159 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48);
      v65 = v43;
      v66 = v159(v63, 1, v64);
      sub_1D2CCADA4(v63, &qword_1ED587850);
      v51 = *(_QWORD *)(v0 + 808);
      if (v66 == 1)
      {
        v43 = v65;
LABEL_30:
        sub_1D2CDB6B4(v51, *(_QWORD *)(v0 + 792), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v46 = *(_QWORD *)(v0 + 792);
LABEL_31:
        v52 = v43;
        v53 = *(_QWORD *)(v0 + 808);
        v54 = *(_QWORD *)(v0 + 784);
        sub_1D2CD3734(v46, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2CD1FD4(v53, v54, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D04068(0, *(_QWORD *)(v41 + 16) + 1, 1);
          v41 = v174;
        }
        v56 = *(_QWORD *)(v41 + 16);
        v55 = *(_QWORD *)(v41 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_1D2D04068(v55 > 1, v56 + 1, 1);
          v41 = v174;
        }
        v57 = *(_QWORD *)(v0 + 784);
        *(_QWORD *)(v41 + 16) = v56 + 1;
        sub_1D2CD1FD4(v57, v41 + v49 + v56 * v50, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v43 = v52;
        goto LABEL_27;
      }
      v45 = *(_QWORD *)(v0 + 792);
      sub_1D2CDB6B4(v51, v45, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v46 = *(_QWORD *)(v0 + 792);
      v43 = v65;
      if (!*(_QWORD *)(v45 + v65[11]))
      {
        v67 = (uint64_t *)(v46 + v65[6]);
        v69 = *v67;
        v68 = v67[1];
        v70 = v69 & 0xFFFFFFFFFFFFLL;
        if ((v68 & 0x2000000000000000) != 0 ? HIBYTE(v68) & 0xF : v70)
        {
          v72 = *(_QWORD *)(v0 + 848);
          sub_1D2CCAD60(v46 + v65[7], v72, &qword_1ED587850);
          v73 = v159(v72, 1, v64);
          sub_1D2CCADA4(v72, &qword_1ED587850);
          v46 = *(_QWORD *)(v0 + 792);
          if (v73 != 1)
          {
            v74 = (_QWORD *)(v46 + v65[8]);
            v75 = v74[1];
            if (v75)
            {
              v76 = *v74 & 0xFFFFFFFFFFFFLL;
              if ((v75 & 0x2000000000000000) != 0 ? HIBYTE(v75) & 0xF : v76)
                goto LABEL_31;
            }
          }
        }
      }
      v47 = *(_QWORD *)(v0 + 808);
      sub_1D2CD3734(v46, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734(v47, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_27:
      v1 = (uint64_t *)((char *)v1 + 1);
      v44 = v168;
      if (v165 == v1)
        goto LABEL_53;
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    swift_once();
  }
LABEL_53:
  swift_bridgeObjectRelease();
  v78 = *(_QWORD *)(v41 + 16);
  if (v78)
  {
    v79 = *(_QWORD *)(v0 + 752);
    v80 = v41 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
    v81 = qword_1ED587858;
    swift_retain();
    if (v81 != -1)
    {
      swift_once();
      v79 = *(_QWORD *)(v0 + 752);
    }
    v169 = *(_QWORD *)(v0 + 728);
    v82 = *(_QWORD *)(v79 + 72);
    do
    {
      __swift_project_value_buffer(v172, (uint64_t)qword_1ED5886E8);
      v86 = sub_1D2D9C8DC();
      v87 = sub_1D2D9E028();
      if (os_log_type_enabled(v86, v87))
      {
        v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v88 = 0;
        _os_log_impl(&dword_1D2CC0000, v86, v87, "Yield untranslatable or already translated)", v88, 2u);
        MEMORY[0x1D8248974](v88, -1, -1);
      }
      v83 = *(_QWORD *)(v0 + 800);
      v84 = *(_QWORD *)(v0 + 736);
      v85 = *(_QWORD *)(v0 + 720);

      sub_1D2CDB6B4(v80, v83, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
      sub_1D2D9DF20();
      (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v84, v85);
      v80 += v82;
      --v78;
    }
    while (v78);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  v89 = *v157;
  v90 = MEMORY[0x1E0DEE9D8];
  v174 = MEMORY[0x1E0DEE9D8];
  v91 = *(_QWORD *)(v89 + 16);
  swift_bridgeObjectRetain();
  if (v91)
  {
    v92 = 0;
    v1 = *(uint64_t **)(v0 + 752);
    v93 = *(int **)(v0 + 744);
    v166 = MEMORY[0x1E0DEE9D8];
    v170 = v91;
    v156 = v93;
    v160 = v89;
    v164 = v1;
    while (1)
    {
      if (v92 >= *(_QWORD *)(v89 + 16))
        goto LABEL_111;
      v96 = *(_QWORD *)(v0 + 776);
      v97 = (*((unsigned __int8 *)v1 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v1 + 80);
      v98 = v1[9];
      sub_1D2CDB6B4(v89 + v97 + v98 * v92, v96, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v99 = *(_QWORD *)(v0 + 776);
      if (*(_QWORD *)(v96 + v93[11]))
        goto LABEL_65;
      v100 = (uint64_t *)(v99 + v93[6]);
      v102 = *v100;
      v101 = v100[1];
      v103 = v102 & 0xFFFFFFFFFFFFLL;
      if (!((v101 & 0x2000000000000000) != 0 ? HIBYTE(v101) & 0xF : v103))
        goto LABEL_65;
      v105 = v93;
      v106 = *(_QWORD *)(v0 + 840);
      sub_1D2CCAD60(v99 + v105[7], v106, &qword_1ED587850);
      v107 = sub_1D2D9C7EC();
      v158 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48);
      v108 = v158(v106, 1, v107);
      sub_1D2CCADA4(v106, &qword_1ED587850);
      v99 = *(_QWORD *)(v0 + 776);
      if (v108 == 1)
        break;
      v109 = *(_QWORD *)(v0 + 768);
      sub_1D2CDB6B4(v99, v109, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v94 = *(_QWORD *)(v0 + 768);
      v91 = v170;
      if (*(_QWORD *)(v109 + v105[11]))
        goto LABEL_76;
      v116 = (uint64_t *)(v94 + v105[6]);
      v118 = *v116;
      v117 = v116[1];
      v119 = v118 & 0xFFFFFFFFFFFFLL;
      if ((v117 & 0x2000000000000000) != 0)
        v120 = HIBYTE(v117) & 0xF;
      else
        v120 = v119;
      v121 = v105;
      v89 = v160;
      v1 = v164;
      if (!v120)
        goto LABEL_77;
      v122 = v121;
      v123 = *(_QWORD *)(v0 + 832);
      sub_1D2CCAD60(v94 + v122[7], v123, &qword_1ED587850);
      v124 = v158(v123, 1, v107);
      sub_1D2CCADA4(v123, &qword_1ED587850);
      v94 = *(_QWORD *)(v0 + 768);
      if (v124 == 1 || (v125 = (_QWORD *)(v94 + v122[8]), (v126 = v125[1]) == 0))
      {
LABEL_76:
        v89 = v160;
        v1 = v164;
LABEL_77:
        v110 = *(_QWORD *)(v0 + 776);
        v111 = *(_QWORD *)(v0 + 760);
        sub_1D2CD3734(v94, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2CD1FD4(v110, v111, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v112 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D04068(0, *(_QWORD *)(v166 + 16) + 1, 1);
          v112 = v174;
        }
        v114 = *(_QWORD *)(v112 + 16);
        v113 = *(_QWORD *)(v112 + 24);
        if (v114 >= v113 >> 1)
        {
          sub_1D2D04068(v113 > 1, v114 + 1, 1);
          v112 = v174;
        }
        v115 = *(_QWORD *)(v0 + 760);
        *(_QWORD *)(v112 + 16) = v114 + 1;
        v166 = v112;
        sub_1D2CD1FD4(v115, v112 + v97 + v114 * v98, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v91 = v170;
        v93 = v156;
        goto LABEL_67;
      }
      v93 = v122;
      v127 = *v125 & 0xFFFFFFFFFFFFLL;
      if ((v126 & 0x2000000000000000) != 0)
        v128 = HIBYTE(v126) & 0xF;
      else
        v128 = v127;
      v89 = v160;
      v1 = v164;
      if (!v128)
        goto LABEL_77;
LABEL_66:
      v95 = *(_QWORD *)(v0 + 776);
      sub_1D2CD3734(v94, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734(v95, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_67:
      if (v91 == ++v92)
        goto LABEL_94;
    }
    v91 = v170;
    v93 = v105;
    v89 = v160;
    v1 = v164;
LABEL_65:
    sub_1D2CDB6B4(v99, *(_QWORD *)(v0 + 768), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v94 = *(_QWORD *)(v0 + 768);
    goto LABEL_66;
  }
  v166 = v90;
LABEL_94:
  swift_bridgeObjectRelease();
  *v157 = v166;
  swift_bridgeObjectRelease();
  if (qword_1ED587858 != -1)
    swift_once();
  *(_QWORD *)(v0 + 960) = __swift_project_value_buffer(v172, (uint64_t)qword_1ED5886E8);
  v129 = *(_QWORD *)(v0 + 624);
  swift_bridgeObjectRetain_n();
  v130 = sub_1D2D9C8DC();
  v131 = sub_1D2D9E01C();
  if (os_log_type_enabled(v130, v131))
  {
    v173 = v131;
    v132 = swift_slowAlloc();
    v171 = swift_slowAlloc();
    v174 = v171;
    *(_DWORD *)v132 = 134218498;
    *(_QWORD *)(v0 + 672) = *(_QWORD *)(v129 + 16);
    sub_1D2D9E1B4();
    *(_WORD *)(v132 + 12) = 2082;
    v133 = *(_QWORD *)(v0 + 824);
    if (*(_QWORD *)(v129 + 16))
    {
      v134 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
      sub_1D2CCAD60(v129 + *(int *)(*(_QWORD *)(v0 + 744) + 28) + ((v134 + 32) & ~v134), *(_QWORD *)(v0 + 824), &qword_1ED587850);
      v135 = sub_1D2D9C7EC();
      v136 = *(_QWORD *)(v135 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135) != 1)
      {
        v161 = *(_QWORD *)(v0 + 824);
        *(_QWORD *)(v0 + 424) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 432) = v137;
        *(_QWORD *)(v0 + 440) = 45;
        *(_QWORD *)(v0 + 448) = 0xE100000000000000;
        *(_QWORD *)(v0 + 360) = 95;
        *(_QWORD *)(v0 + 368) = 0xE100000000000000;
        sub_1D2CD1430();
        v138 = sub_1D2D9E1E4();
        v140 = v139;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v161, v135);
        goto LABEL_103;
      }
    }
    else
    {
      v141 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v133, 1, 1, v141);
    }
    sub_1D2CCADA4(*(_QWORD *)(v0 + 824), &qword_1ED587850);
    v140 = 0xE300000000000000;
    v138 = 7104878;
LABEL_103:
    *(_QWORD *)(v0 + 664) = sub_1D2CF78E0(v138, v140, &v174);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v132 + 22) = 2082;
    v142 = *(_QWORD *)(v0 + 816);
    if (*(_QWORD *)(v129 + 16))
    {
      v143 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 752) + 80);
      v144 = v129 + *(int *)(*(_QWORD *)(v0 + 744) + 36) + ((v143 + 32) & ~v143);
      v145 = sub_1D2D9C7EC();
      v146 = *(_QWORD *)(v145 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v142, v144, v145);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v146 + 56))(v142, 0, 1, v145);
      v147 = 7104878;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v142, 1, v145) != 1)
      {
        v148 = *(_QWORD *)(v0 + 816);
        *(_QWORD *)(v0 + 376) = sub_1D2D9C714();
        *(_QWORD *)(v0 + 384) = v149;
        *(_QWORD *)(v0 + 392) = 45;
        *(_QWORD *)(v0 + 400) = 0xE100000000000000;
        *(_QWORD *)(v0 + 408) = 95;
        *(_QWORD *)(v0 + 416) = 0xE100000000000000;
        sub_1D2CD1430();
        v147 = sub_1D2D9E1E4();
        v151 = v150;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v148, v145);
        goto LABEL_108;
      }
    }
    else
    {
      v152 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v142, 1, 1, v152);
      v147 = 7104878;
    }
    sub_1D2CCADA4(*(_QWORD *)(v0 + 816), &qword_1ED587850);
    v151 = 0xE300000000000000;
LABEL_108:
    *(_QWORD *)(v0 + 648) = sub_1D2CF78E0(v147, v151, &v174);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2CC0000, v130, v173, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v132, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v171, -1, -1);
    MEMORY[0x1D8248974](v132, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v153 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 56) = v0 + 968;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1D2D52464;
  v154 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v155 = (_QWORD *)(v0 + 80);
  v155[1] = 0x40000000;
  v155[2] = sub_1D2D87560;
  v155[3] = &block_descriptor_8;
  v155[4] = v154;
  objc_msgSend(v153, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v155);
  return swift_continuation_await();
}

uint64_t sub_1D2D5150C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D5156C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  int v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  int v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  int *v100;
  uint64_t v101;
  int v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  _QWORD *v134;
  int *v136;
  uint64_t *v137;
  uint64_t (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  os_log_type_t v152;
  uint64_t v153;

  v137 = v0 + 78;
  swift_bridgeObjectRelease();
  v0[78] = v0[76];
  swift_bridgeObjectRelease();
  v1 = sub_1D2D9C8DC();
  v2 = sub_1D2D9E01C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v153 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = v0[78];
    v6 = v0[109];
    if (*(_QWORD *)(v5 + 16))
    {
      v7 = *(unsigned __int8 *)(v0[94] + 80);
      v8 = v5 + *(int *)(v0[93] + 36) + ((v7 + 32) & ~v7);
      v9 = sub_1D2D9C7EC();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
      {
        v142 = v0[109];
        v0[61] = sub_1D2D9C714();
        v0[62] = v11;
        v0[63] = 45;
        v0[64] = 0xE100000000000000;
        v0[65] = 95;
        v0[66] = 0xE100000000000000;
        sub_1D2CD1430();
        v12 = sub_1D2D9E1E4();
        v14 = v13;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v142, v9);
LABEL_7:
        v0[79] = sub_1D2CF78E0(v12, v14, &v153);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2CC0000, v1, v2, "Validated targetLocale to %{public}s", v3, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v4, -1, -1);
        MEMORY[0x1D8248974](v3, -1, -1);
        goto LABEL_8;
      }
    }
    else
    {
      v15 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    v12 = 7104878;
    sub_1D2CCADA4(v0[109], &qword_1ED587850);
    v14 = 0xE300000000000000;
    goto LABEL_7;
  }
LABEL_8:

  swift_beginAccess();
  v16 = *v137;
  v17 = MEMORY[0x1E0DEE9D8];
  v153 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(v16 + 16);
  v149 = v16;
  swift_bridgeObjectRetain();
  v145 = v18;
  if (!v18)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(v17 + 16);
    if (v55)
    {
      v56 = v0[94];
      v57 = v17 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
      v58 = qword_1ED587858;
      swift_retain();
      if (v58 != -1)
      {
        swift_once();
        v56 = v0[94];
      }
      v146 = *(_QWORD *)(v56 + 72);
      v150 = v0[91];
      v59 = sub_1D2D9C8F4();
      do
      {
        __swift_project_value_buffer(v59, (uint64_t)qword_1ED5886E8);
        v63 = sub_1D2D9C8DC();
        v64 = sub_1D2D9E028();
        if (os_log_type_enabled(v63, v64))
        {
          v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v65 = 0;
          _os_log_impl(&dword_1D2CC0000, v63, v64, "Yield untranslatable or already translated)", v65, 2u);
          MEMORY[0x1D8248974](v65, -1, -1);
        }
        v60 = v0[100];
        v61 = v0[92];
        v62 = v0[90];

        sub_1D2CDB6B4(v57, v60, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
        sub_1D2D9DF20();
        (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v61, v62);
        v57 += v146;
        --v55;
      }
      while (v55);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    v66 = *v137;
    v67 = MEMORY[0x1E0DEE9D8];
    v153 = MEMORY[0x1E0DEE9D8];
    v68 = *(_QWORD *)(v66 + 16);
    swift_bridgeObjectRetain();
    if (!v68)
    {
      v147 = v67;
LABEL_79:
      swift_bridgeObjectRelease();
      *v137 = v147;
      swift_bridgeObjectRelease();
      if (qword_1ED587858 != -1)
        goto LABEL_96;
      goto LABEL_80;
    }
    v69 = 0;
    v70 = v0[94];
    v71 = (int *)v0[93];
    v147 = MEMORY[0x1E0DEE9D8];
    v151 = v68;
    v136 = v71;
    v141 = v66;
    v144 = v70;
    while (1)
    {
      if (v69 >= *(_QWORD *)(v66 + 16))
        goto LABEL_95;
      v74 = v0[97];
      v75 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      v76 = *(_QWORD *)(v70 + 72);
      sub_1D2CDB6B4(v66 + v75 + v76 * v69, v74, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v77 = v0[97];
      if (*(_QWORD *)(v74 + v71[11]))
        goto LABEL_50;
      v78 = (uint64_t *)(v77 + v71[6]);
      v80 = *v78;
      v79 = v78[1];
      v81 = v80 & 0xFFFFFFFFFFFFLL;
      if (!((v79 & 0x2000000000000000) != 0 ? HIBYTE(v79) & 0xF : v81))
        goto LABEL_50;
      v83 = v71;
      v84 = v0[105];
      sub_1D2CCAD60(v77 + v83[7], v84, &qword_1ED587850);
      v85 = sub_1D2D9C7EC();
      v138 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48);
      v86 = v138(v84, 1, v85);
      sub_1D2CCADA4(v84, &qword_1ED587850);
      v77 = v0[97];
      if (v86 == 1)
        break;
      v87 = v0[96];
      sub_1D2CDB6B4(v77, v87, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v72 = v0[96];
      v68 = v151;
      if (*(_QWORD *)(v87 + v83[11]))
        goto LABEL_61;
      v94 = (uint64_t *)(v72 + v83[6]);
      v96 = *v94;
      v95 = v94[1];
      v97 = v96 & 0xFFFFFFFFFFFFLL;
      if ((v95 & 0x2000000000000000) != 0)
        v98 = HIBYTE(v95) & 0xF;
      else
        v98 = v97;
      v99 = v83;
      v66 = v141;
      v70 = v144;
      if (!v98)
        goto LABEL_62;
      v100 = v99;
      v101 = v0[104];
      sub_1D2CCAD60(v72 + v100[7], v101, &qword_1ED587850);
      v102 = v138(v101, 1, v85);
      sub_1D2CCADA4(v101, &qword_1ED587850);
      v72 = v0[96];
      if (v102 == 1 || (v103 = (_QWORD *)(v72 + v100[8]), (v104 = v103[1]) == 0))
      {
LABEL_61:
        v66 = v141;
        v70 = v144;
LABEL_62:
        v88 = v0[97];
        v89 = v0[95];
        sub_1D2CD3734(v72, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2CD1FD4(v88, v89, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v90 = v147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D04068(0, *(_QWORD *)(v147 + 16) + 1, 1);
          v90 = v153;
        }
        v92 = *(_QWORD *)(v90 + 16);
        v91 = *(_QWORD *)(v90 + 24);
        if (v92 >= v91 >> 1)
        {
          sub_1D2D04068(v91 > 1, v92 + 1, 1);
          v90 = v153;
        }
        v93 = v0[95];
        *(_QWORD *)(v90 + 16) = v92 + 1;
        v147 = v90;
        sub_1D2CD1FD4(v93, v90 + v75 + v92 * v76, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v68 = v151;
        v71 = v136;
        goto LABEL_52;
      }
      v71 = v100;
      v105 = *v103 & 0xFFFFFFFFFFFFLL;
      if ((v104 & 0x2000000000000000) != 0)
        v106 = HIBYTE(v104) & 0xF;
      else
        v106 = v105;
      v66 = v141;
      v70 = v144;
      if (!v106)
        goto LABEL_62;
LABEL_51:
      v73 = v0[97];
      sub_1D2CD3734(v72, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734(v73, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_52:
      if (v68 == ++v69)
        goto LABEL_79;
    }
    v68 = v151;
    v71 = v83;
    v66 = v141;
    v70 = v144;
LABEL_50:
    sub_1D2CDB6B4(v77, v0[96], (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v72 = v0[96];
    goto LABEL_51;
  }
  v19 = 0;
  v143 = v0[94];
  v20 = (int *)v0[93];
  v21 = v149;
  while (v19 < *(_QWORD *)(v21 + 16))
  {
    v25 = v0[101];
    v26 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    v27 = *(_QWORD *)(v143 + 72);
    sub_1D2CDB6B4(v21 + v26 + v27 * v19, v25, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v28 = v0[101];
    if (*(_QWORD *)(v25 + v20[11]))
      goto LABEL_15;
    v35 = (uint64_t *)(v28 + v20[6]);
    v37 = *v35;
    v36 = v35[1];
    v38 = v37 & 0xFFFFFFFFFFFFLL;
    if (!((v36 & 0x2000000000000000) != 0 ? HIBYTE(v36) & 0xF : v38))
      goto LABEL_15;
    v40 = v0[107];
    sub_1D2CCAD60(v28 + v20[7], v40, &qword_1ED587850);
    v41 = sub_1D2D9C7EC();
    v140 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48);
    v42 = v20;
    v43 = v140(v40, 1, v41);
    sub_1D2CCADA4(v40, &qword_1ED587850);
    v28 = v0[101];
    if (v43 == 1)
    {
      v20 = v42;
LABEL_15:
      sub_1D2CDB6B4(v28, v0[99], (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v23 = v0[99];
LABEL_16:
      v29 = v20;
      v30 = v0[101];
      v31 = v0[98];
      sub_1D2CD3734(v23, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD1FD4(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D04068(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v153;
      }
      v33 = *(_QWORD *)(v17 + 16);
      v32 = *(_QWORD *)(v17 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1D2D04068(v32 > 1, v33 + 1, 1);
        v17 = v153;
      }
      v34 = v0[98];
      *(_QWORD *)(v17 + 16) = v33 + 1;
      sub_1D2CD1FD4(v34, v17 + v26 + v33 * v27, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v20 = v29;
      goto LABEL_12;
    }
    v22 = v0[99];
    sub_1D2CDB6B4(v28, v22, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v23 = v0[99];
    v20 = v42;
    if (!*(_QWORD *)(v22 + v42[11]))
    {
      v44 = (uint64_t *)(v23 + v42[6]);
      v46 = *v44;
      v45 = v44[1];
      v47 = v46 & 0xFFFFFFFFFFFFLL;
      if ((v45 & 0x2000000000000000) != 0 ? HIBYTE(v45) & 0xF : v47)
      {
        v49 = v0[106];
        sub_1D2CCAD60(v23 + v42[7], v49, &qword_1ED587850);
        v50 = v140(v49, 1, v41);
        sub_1D2CCADA4(v49, &qword_1ED587850);
        v23 = v0[99];
        if (v50 != 1)
        {
          v51 = (_QWORD *)(v23 + v42[8]);
          v52 = v51[1];
          if (v52)
          {
            v53 = *v51 & 0xFFFFFFFFFFFFLL;
            if ((v52 & 0x2000000000000000) != 0 ? HIBYTE(v52) & 0xF : v53)
              goto LABEL_16;
          }
        }
      }
    }
    v24 = v0[101];
    sub_1D2CD3734(v23, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734(v24, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_12:
    ++v19;
    v21 = v149;
    if (v145 == v19)
      goto LABEL_38;
  }
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  swift_once();
LABEL_80:
  v107 = sub_1D2D9C8F4();
  v0[120] = __swift_project_value_buffer(v107, (uint64_t)qword_1ED5886E8);
  v108 = v0[78];
  swift_bridgeObjectRetain_n();
  v109 = sub_1D2D9C8DC();
  v110 = sub_1D2D9E01C();
  if (os_log_type_enabled(v109, v110))
  {
    v152 = v110;
    v111 = swift_slowAlloc();
    v148 = swift_slowAlloc();
    v153 = v148;
    *(_DWORD *)v111 = 134218498;
    v0[84] = *(_QWORD *)(v108 + 16);
    sub_1D2D9E1B4();
    *(_WORD *)(v111 + 12) = 2082;
    v112 = v0[103];
    if (*(_QWORD *)(v108 + 16))
    {
      v113 = *(unsigned __int8 *)(v0[94] + 80);
      sub_1D2CCAD60(v108 + *(int *)(v0[93] + 28) + ((v113 + 32) & ~v113), v0[103], &qword_1ED587850);
      v114 = sub_1D2D9C7EC();
      v115 = *(_QWORD *)(v114 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v112, 1, v114) != 1)
      {
        v139 = v0[103];
        v0[53] = sub_1D2D9C714();
        v0[54] = v116;
        v0[55] = 45;
        v0[56] = 0xE100000000000000;
        v0[45] = 95;
        v0[46] = 0xE100000000000000;
        sub_1D2CD1430();
        v117 = sub_1D2D9E1E4();
        v119 = v118;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v139, v114);
        goto LABEL_87;
      }
    }
    else
    {
      v120 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v112, 1, 1, v120);
    }
    sub_1D2CCADA4(v0[103], &qword_1ED587850);
    v119 = 0xE300000000000000;
    v117 = 7104878;
LABEL_87:
    v0[83] = sub_1D2CF78E0(v117, v119, &v153);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v111 + 22) = 2082;
    v121 = v0[102];
    if (*(_QWORD *)(v108 + 16))
    {
      v122 = *(unsigned __int8 *)(v0[94] + 80);
      v123 = v108 + *(int *)(v0[93] + 36) + ((v122 + 32) & ~v122);
      v124 = sub_1D2D9C7EC();
      v125 = *(_QWORD *)(v124 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v121, v123, v124);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v125 + 56))(v121, 0, 1, v124);
      v126 = 7104878;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v121, 1, v124) != 1)
      {
        v127 = v0[102];
        v0[47] = sub_1D2D9C714();
        v0[48] = v128;
        v0[49] = 45;
        v0[50] = 0xE100000000000000;
        v0[51] = 95;
        v0[52] = 0xE100000000000000;
        sub_1D2CD1430();
        v126 = sub_1D2D9E1E4();
        v130 = v129;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v127, v124);
        goto LABEL_92;
      }
    }
    else
    {
      v131 = sub_1D2D9C7EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v121, 1, 1, v131);
      v126 = 7104878;
    }
    sub_1D2CCADA4(v0[102], &qword_1ED587850);
    v130 = 0xE300000000000000;
LABEL_92:
    v0[81] = sub_1D2CF78E0(v126, v130, &v153);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2CC0000, v109, v152, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v111, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v148, -1, -1);
    MEMORY[0x1D8248974](v111, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v132 = (void *)objc_opt_self();
  v0[7] = v0 + 121;
  v0[2] = v0;
  v0[3] = sub_1D2D52464;
  v133 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v134 = v0 + 10;
  v134[1] = 0x40000000;
  v134[2] = sub_1D2D87560;
  v134[3] = &block_descriptor_8;
  v134[4] = v133;
  objc_msgSend(v132, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v134);
  return swift_continuation_await();
}

uint64_t sub_1D2D52464()
{
  return swift_task_switch();
}

uint64_t sub_1D2D524B0()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(unsigned __int8 *)(v0 + 968);
  v2 = sub_1D2D9C8DC();
  v3 = sub_1D2D9E01C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136446210;
    v28 = v5;
    if (v1)
      v6 = 0x63697665642D6E6FLL;
    else
      v6 = 0x6B726F7774656ELL;
    if (v1)
      v7 = 0xE900000000000065;
    else
      v7 = 0xE700000000000000;
    *(_QWORD *)(v0 + 640) = sub_1D2CF78E0(v6, v7, &v28);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v2, v3, "Translate path: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v5, -1, -1);
    MEMORY[0x1D8248974](v4, -1, -1);
  }

  v8 = *(_QWORD *)(v0 + 712);
  v9 = *(_QWORD *)(v0 + 704);
  v10 = *(_QWORD *)(v0 + 688);
  v11 = *(_BYTE *)(v0 + 970) & 1;
  v12 = v1;
  if (v1)
    v13 = 3;
  else
    v13 = 2;
  v14 = swift_allocBox();
  v16 = v15;
  *(_QWORD *)(v8 + *(int *)(v9 + 24)) = 0;
  sub_1D2D9C888();
  *(_BYTE *)(v8 + *(int *)(v9 + 28)) = v13;
  sub_1D2D9C87C();
  sub_1D2D9C858();
  v27 = v16;
  sub_1D2CD1FD4(v8, v16, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v18 = *(_QWORD *)(v0 + 624);
  v19 = swift_task_alloc();
  *(_QWORD *)(v19 + 16) = v10;
  *(_BYTE *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 25) = v11;
  *(_QWORD *)(v19 + 32) = v17;
  *(_QWORD *)(v19 + 40) = v14;
  swift_bridgeObjectRetain();
  v20 = sub_1D2D4DCB4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1D2D54A34, v19, v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v24)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1D2D9E3AC();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
LABEL_17:
    v25 = *(_QWORD *)(v0 + 712);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1D2CDB6B4(v27, v25, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    sub_1D2D3A96C();
    sub_1D2CD3734(v25, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
    sub_1D2D9DF2C();
    goto LABEL_18;
  }
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v21)
    goto LABEL_17;
LABEL_14:
  v22 = *(void **)(v0 + 696);
  swift_beginAccess();
  *(_QWORD *)(v17 + 16) = v21;
  swift_beginAccess();
  sub_1D2D3AD30();
  swift_endAccess();
  sub_1D2CC63E8(0, &qword_1EFCA81F0);
  v23 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_translate_useDedicatedTextMachPort_, v23, 1);

LABEL_18:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static TextTranslationService.detectSourceLocale(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA81B0 + dword_1EFCA81B0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2D12BA0;
  return v5(a1);
}

uint64_t static TextTranslationService.validateTargetLocale(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1D2D52A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C0);
  *v3 = v0;
  v3[1] = sub_1D2D52AEC;
  return sub_1D2D9E514();
}

uint64_t sub_1D2D52AEC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D52B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, NSObject **a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _BYTE *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE *v46;
  uint64_t result;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  id v69;
  uint8_t *v70;
  _QWORD *v71;
  uint64_t v72;
  NSObject *v73;
  _BYTE *v74;
  _BYTE *v75;
  _BYTE v76[12];
  int v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject **v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;

  v84 = a5;
  v85 = a6;
  v86 = a3;
  v94 = a2;
  v92 = a7;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v83 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v81 = v9;
  v82 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8050);
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  MEMORY[0x1E0C80A78](v10);
  v89 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TextModel();
  v79 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v79 + 64);
  MEMORY[0x1E0C80A78](v12);
  v87 = &v76[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v80 = &v76[-v15];
  MEMORY[0x1E0C80A78](v16);
  v78 = &v76[-v17];
  MEMORY[0x1E0C80A78](v18);
  v88 = &v76[-v19];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v20);
  v22 = &v76[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = a1;
  v96 = (int *)v12;
  sub_1D2CCAD60(a1 + *(int *)(v12 + 28), (uint64_t)v22, &qword_1ED587850);
  v23 = sub_1D2D9C7EC();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1D2CCADA4((uint64_t)v22, &qword_1ED587850);
    v25 = 0;
    v26 = 0;
  }
  else
  {
    v27 = sub_1D2D9C714();
    v77 = a4;
    v101 = v27;
    v102 = v28;
    v99 = 45;
    v100 = 0xE100000000000000;
    v97 = 95;
    v98 = 0xE100000000000000;
    sub_1D2CD1430();
    v25 = sub_1D2D9E1E4();
    v26 = v29;
    LOBYTE(a4) = v77;
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v22, v23);
  }
  v30 = v95;
  v101 = sub_1D2D9C714();
  v102 = v31;
  v99 = 45;
  v100 = 0xE100000000000000;
  v97 = 95;
  v98 = 0xE100000000000000;
  sub_1D2CD1430();
  v32 = sub_1D2D9E1E4();
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = v94;
  if (v26)
  {
    if (v25 == v32 && v26 == v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      if (qword_1ED587858 != -1)
        swift_once();
      v37 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED5886E8);
      v38 = sub_1D2D9C8DC();
      v39 = sub_1D2D9E028();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_1D2CC0000, v38, v39, "Passthrough text model, no translation needed", v40, 2u);
        MEMORY[0x1D8248974](v40, -1, -1);
      }

      v41 = v88;
      sub_1D2CDB6B4(v30, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v42 = (uint64_t *)(v30 + v96[6]);
      v44 = *v42;
      v43 = v42[1];
      v45 = &v41[v96[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v45 = v44;
      v45[1] = v43;
      sub_1D2CDB6B4((uint64_t)v41, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v46 = v89;
      sub_1D2D9DF20();
      (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v46, v91);
      *v92 = 0;
      return sub_1D2CD3734((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    }
    v36 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v101) = a4 & 1;
  v48 = v82;
  v49 = v83;
  v50 = v93;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v83 + 16))(v82, v35, v93);
  v51 = v80;
  sub_1D2CDB6B4(v30, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v52 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v53 = (v81 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = (*(unsigned __int8 *)(v79 + 80) + v53 + 8) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v84;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(v55 + v52, v48, v50);
  *(_QWORD *)(v55 + v53) = v85;
  v56 = v95;
  sub_1D2CD1FD4((uint64_t)v51, v55 + v54, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  swift_retain();
  swift_retain();
  v57 = v103;
  v58 = sub_1D2D53BF8(v56, v86 & 1, (unsigned __int8 *)&v101, (uint64_t)sub_1D2D54BBC, v55);
  v103 = v57;
  if (v57)
  {
    swift_release();
    v59 = v56;
    v60 = v87;
    sub_1D2CDB6B4(v59, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v61 = v96[11];
    v62 = *(void **)&v60[v61];
    v63 = v103;
    v64 = v103;

    *(_QWORD *)&v60[v61] = v63;
    if (qword_1ED587858 != -1)
      swift_once();
    v65 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v65, (uint64_t)qword_1ED5886E8);
    v66 = v103;
    v67 = sub_1D2D9C8DC();
    v68 = sub_1D2D9E034();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = v103;
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v70 = 138412290;
      v72 = sub_1D2D9C5F4();
      v101 = v72;
      sub_1D2D9E1B4();
      *v71 = v72;

      _os_log_impl(&dword_1D2CC0000, v67, v68, "Caught error during translation: %@", v70, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v71, -1, -1);
      MEMORY[0x1D8248974](v70, -1, -1);
    }
    else
    {

    }
    v74 = v87;
    sub_1D2CDB6B4((uint64_t)v87, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v75 = v89;
    sub_1D2D9DF20();

    (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v75, v91);
    *v92 = 0;
    return sub_1D2CD3734((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  }
  else
  {
    v73 = v58;
    result = swift_release();
    *v92 = v73;
  }
  return result;
}

uint64_t sub_1D2D53360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];

  v53 = (char *)a5;
  v58 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8050);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v51);
  v52 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v50 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v50 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81F8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char **)((char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = (uint64_t *)(a2 + 16);
  v25 = swift_projectBox();
  sub_1D2CCAD60(a1, (uint64_t)v24, &qword_1EFCA81F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v50 = v25;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1D2CD1FD4((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    swift_beginAccess();
    sub_1D2CDB6B4(v25, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    sub_1D2D3A760(0);
    sub_1D2CD3734((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    v27 = (uint64_t)v11;
    if (qword_1ED587858 != -1)
      swift_once();
    v35 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED5886E8);
    sub_1D2CDB6B4((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v36 = sub_1D2D9C8DC();
    v37 = sub_1D2D9E028();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v60[0] = v39;
      *(_DWORD *)v38 = 136446210;
      v53 = v11;
      v40 = sub_1D2D491B0();
      v59 = sub_1D2CF78E0(v40, v41, v60);
      v27 = (uint64_t)v53;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      sub_1D2CD3734((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      _os_log_impl(&dword_1D2CC0000, v36, v37, "Text translation success: %{public}s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v39, -1, -1);
      MEMORY[0x1D8248974](v38, -1, -1);
    }
    else
    {
      sub_1D2CD3734((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    }

    sub_1D2CDB6B4((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
    v42 = v55;
    sub_1D2D9DF20();
    goto LABEL_13;
  }
  v21 = *v24;
  swift_beginAccess();
  sub_1D2CDB6B4(v25, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  sub_1D2D3A760(1);
  sub_1D2CD3734((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  v27 = (uint64_t)v11;
  if (qword_1ED587858 != -1)
    goto LABEL_18;
  while (1)
  {
    v28 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED5886E8);
    v29 = v21;
    v30 = sub_1D2D9C8DC();
    v31 = sub_1D2D9E034();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138412290;
      v34 = sub_1D2D9C5F4();
      v60[0] = v34;
      sub_1D2D9E1B4();
      *v33 = v34;

      _os_log_impl(&dword_1D2CC0000, v30, v31, "Text translation failure: %@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v33, -1, -1);
      MEMORY[0x1D8248974](v32, -1, -1);
    }
    else
    {

    }
    v42 = v55;

    sub_1D2CDB6B4((uint64_t)v53, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v43 = *(int *)(v51 + 44);
    v44 = *(void **)&v15[v43];
    v45 = v21;

    *(_QWORD *)&v15[v43] = v21;
    sub_1D2CDB6B4((uint64_t)v15, v52, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
    sub_1D2D9DF20();

    v21 = v15;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
    sub_1D2CD3734((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v46 = v54;
    result = swift_beginAccess();
    v48 = *v46 - 1;
    if (!__OFSUB__(*v46, 1))
      break;
    __break(1u);
LABEL_18:
    swift_once();
  }
  *v46 = v48;
  if (!v48)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
    sub_1D2D9DF2C();
    v49 = v50;
    swift_beginAccess();
    sub_1D2CDB6B4(v49, v27, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    sub_1D2D3A96C();
    return sub_1D2CD3734(v27, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  }
  return result;
}

uint64_t sub_1D2D539F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  _QWORD v19[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v11);
    goto LABEL_5;
  }
  v14 = type metadata accessor for TextModel();
  v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2 + *(int *)(v14 + 36) + ((v15 + 32) & ~v15), v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1D2CCADA4((uint64_t)v5, &qword_1ED587850);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
LABEL_6:
  static LocaleService.supportedTargetLocaleSync(_:)((uint64_t)v9, (unint64_t)v13);
  v16 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  v17 = v16(v9, v6);
  MEMORY[0x1E0C80A78](v17);
  v19[-2] = v13;
  v19[1] = sub_1D2D47D38((void (*)(uint64_t))sub_1D2D54890, (uint64_t)&v19[-4], a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C8);
  sub_1D2D9DECC();
  return v16(v13, v6);
}

NSObject *sub_1D2D53BF8(uint64_t a1, int a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  id v37;
  char *v38;
  void *v39;
  void *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint8_t *v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t aBlock[7];
  uint64_t v75;

  v70 = a4;
  v71 = a5;
  v66 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D2D9C7EC();
  v64 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v63 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for TextModel();
  v67 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v69 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - v14;
  v68 = v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v58 - v18;
  v65 = *a3;
  if (qword_1ED587858 != -1)
    swift_once();
  v20 = sub_1D2D9C8F4();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED5886E8);
  sub_1D2CDB6B4(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  sub_1D2CDB6B4(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v62 = v21;
  v22 = sub_1D2D9C8DC();
  v23 = sub_1D2D9E01C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v60 = v10;
    v25 = v24;
    v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)v25 = 134218242;
    v26 = sub_1D2D9DD7C();
    v61 = v5;
    v27 = v26;
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v75 = v27;
    sub_1D2D9E1B4();
    *(_WORD *)(v25 + 12) = 2082;
    sub_1D2D9C6FC();
    sub_1D2D54DE8();
    v28 = sub_1D2D9E508();
    v75 = sub_1D2CF78E0(v28, v29, aBlock);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CD3734((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    _os_log_impl(&dword_1D2CC0000, v22, v23, "Requested translating text of length %ld with ID %{public}s", (uint8_t *)v25, 0x16u);
    v30 = v59;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v30, -1, -1);
    v31 = v25;
    v10 = v60;
    MEMORY[0x1D8248974](v31, -1, -1);
  }
  else
  {
    sub_1D2CD3734((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  }

  v32 = TextModel.isTranslatable.getter();
  v33 = v72;
  if (v32)
  {
    sub_1D2CCAD60(a1 + *(int *)(v73 + 28), (uint64_t)v10, &qword_1ED587850);
    v34 = v64;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v10, 1, v33) == 1)
    {
      v35 = v63;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      sub_1D2CCADA4((uint64_t)v10, &qword_1ED587850);
    }
    else
    {
      v35 = v63;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v63, v10, v33);
    }
    v37 = objc_allocWithZone(MEMORY[0x1E0CE9948]);
    v38 = v35;
    v39 = (void *)sub_1D2D9C744();
    v40 = (void *)sub_1D2D9C744();
    v41 = objc_msgSend(v37, sel_initWithSourceLocale_targetLocale_, v39, v40);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
    objc_msgSend(v41, sel_setForcedOfflineTranslation_, v66 & 1);
    objc_msgSend(v41, sel_setSourceOrigin_, 1);
    v42 = sub_1D2D9C8DC();
    v43 = sub_1D2D9E01C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = a1;
      v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v45 = 134217984;
      if (v65)
        v46 = 5;
      else
        v46 = 1;
      aBlock[0] = v46;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v42, v43, "Requested translating taskHint %ld", v45, 0xCu);
      v47 = v45;
      a1 = v44;
      MEMORY[0x1D8248974](v47, -1, -1);

    }
    else
    {

      if (v65)
        v46 = 5;
      else
        v46 = 1;
    }
    objc_msgSend(v41, sel_setTaskHint_, v46);
    v48 = v41;
    v49 = (void *)sub_1D2D9DCB0();
    objc_msgSend(v48, sel_setText_, v49);

    v50 = v69;
    sub_1D2CDB6B4(a1, v69, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v51 = (*(unsigned __int8 *)(v67 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v52 = (v68 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v48;
    sub_1D2CD1FD4(v50, v53 + v51, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v54 = (_QWORD *)(v53 + v52);
    v55 = v71;
    *v54 = v70;
    v54[1] = v55;
    aBlock[4] = (uint64_t)sub_1D2D54D68;
    aBlock[5] = v53;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D2D4E318;
    aBlock[3] = (uint64_t)&block_descriptor_17_0;
    v56 = _Block_copy(aBlock);
    v22 = v48;
    swift_retain();
    swift_release();
    -[NSObject setCompletionHandler:](v22, sel_setCompletionHandler_, v56);
    _Block_release(v56);

  }
  else
  {
    sub_1D2D47830();
    swift_allocError();
    *v36 = 9;
    swift_willThrow();
  }
  return v22;
}

uint64_t sub_1D2D542C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587040);
  v1[3] = swift_task_alloc();
  v2 = type metadata accessor for TextModel();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587080);
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587078);
  v1[11] = v4;
  v1[12] = *(_QWORD *)(v4 - 8);
  v1[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587088);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D543EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[14];
  v5 = v0[12];
  v4 = v0[13];
  v6 = v0[11];
  v11 = v0[15];
  v7 = v0[2];
  v8 = swift_task_alloc();
  *(_BYTE *)(v8 + 16) = 1;
  *(_QWORD *)(v8 + 24) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x1E0DF07B8], v6);
  sub_1D2D9DF50();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v2, v3);
  sub_1D2CC6C74(&qword_1EFCA81D0, &qword_1ED587088, MEMORY[0x1E0DF0848]);
  sub_1D2D9DF68();
  v0[18] = sub_1D2CC6C74(&qword_1EFCA81D8, &qword_1ED587080, MEMORY[0x1E0DF0830]);
  v9 = (_QWORD *)swift_task_alloc();
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_1D2D54548;
  return sub_1D2D9DEE4();
}

uint64_t sub_1D2D54548()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[9];
    v3 = v2[10];
    v5 = v2[8];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[20] = MEMORY[0x1E0DEE9D8];
  }
  return swift_task_switch();
}

uint64_t sub_1D2D545E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 48))(v1, 1, *(_QWORD *)(v0 + 32)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 136);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    sub_1D2CCADA4(v1, &qword_1ED587040);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    sub_1D2CD1FD4(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CDB6B4(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *(_QWORD *)(v0 + 160);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v9 = sub_1D2D4AE40(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    v11 = *(_QWORD *)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    if (v11 >= v10 >> 1)
      v9 = sub_1D2D4AE40(v10 > 1, v11 + 1, 1, v9);
    *(_QWORD *)(v0 + 168) = v9;
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v9 + 16) = v11 + 1;
    sub_1D2CD1FD4(v12, v9+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v11, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734(v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v15;
    *v15 = v0;
    v15[1] = sub_1D2D547EC;
    return sub_1D2D9DEE4();
  }
}

uint64_t sub_1D2D547EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[9];
    v3 = v2[10];
    v5 = v2[8];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[20] = v2[21];
  }
  return swift_task_switch();
}

uint64_t sub_1D2D54878(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D539F0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for TextTranslationService()
{
  return &type metadata for TextTranslationService;
}

uint64_t sub_1D2D54890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D2D4A274(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D2D548AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D4E9BC(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_BYTE *)(v1 + 25), *(void **)(v1 + 32));
}

uint64_t sub_1D2D548C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1D2D5495C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = (v6 & 0xFFFFFFFFFFFFF8) + v1;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v11 = *(_BYTE *)(v1 + 40);
  v12 = v1 + v5;
  v13 = *(_BYTE *)(v1 + v6);
  v14 = *(_QWORD *)(v7 + 8);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1D2CE16D4;
  return sub_1D2D4EB40(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1D2D54A24()
{
  return swift_deallocObject();
}

uint64_t sub_1D2D54A34@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v2;

  return sub_1D2D52B48(a1, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unsigned __int8 *)(v2 + 25), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1D2D54A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for TextModel();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v7 = v0 + ((v4 + v6 + 8) & ~v6);
  v8 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = v7 + v5[7];
  v10 = sub_1D2D9C7EC();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7 + v5[9], v10);

  return swift_deallocObject();
}

uint64_t sub_1D2D54BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8038) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TextModel() - 8) + 80);
  return sub_1D2D53360(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

uint64_t sub_1D2D54C3C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for TextModel();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = v0 + v2;
  v4 = sub_1D2D9C6FC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  v5 = v0 + v2 + v1[7];
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3 + v1[9], v6);

  swift_release();
  return swift_deallocObject();
}

void sub_1D2D54D68(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for TextModel() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1D2D4DDEC(a1, a2, *(void **)(v2 + 16), v2 + v6, *(void (**)(_QWORD *))v7, *(_QWORD *)(v7 + 8));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1D2D54DE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA5D90;
  if (!qword_1EFCA5D90)
  {
    v1 = sub_1D2D9C6FC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA5D90);
  }
  return result;
}

uint64_t sub_1D2D54E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _OWORD v11[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82A8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = xmmword_1D2DA4A00;
  v11[1] = xmmword_1D2DA4A10;
  v11[2] = xmmword_1D2DA4A20;
  v11[3] = xmmword_1D2DA4A30;
  v11[4] = xmmword_1D2DA4A40;
  sub_1D2D9D638();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v9 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82B0) + 36)];
  *(_QWORD *)v9 = 0x4044000000000000;
  v9[8] = 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1D2CCAD60((uint64_t)v8, a1, &qword_1EFCA82A8);
  return sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA82A8);
}

void sub_1D2D54FA4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtC13TranslationUIP33_CF4489C12E47B589A5779A16E606AB3135TranslationBackdropVibrantBlurLayer_backdropLayer), sel_setCaptureOnly_, 1);
  sub_1D2D54FE4(0.0);
}

void sub_1D2D54FE4(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  _OWORD v29[5];

  v2 = v1;
  v4 = OBJC_IVAR____TtC13TranslationUIP33_CF4489C12E47B589A5779A16E606AB3135TranslationBackdropVibrantBlurLayer_backdropLayer;
  v5 = *(id *)&v1[OBJC_IVAR____TtC13TranslationUIP33_CF4489C12E47B589A5779A16E606AB3135TranslationBackdropVibrantBlurLayer_backdropLayer];
  v6 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v5, sel_setName_, v6);

  objc_msgSend(*(id *)&v2[v4], sel_setScale_, 0.25);
  v7 = *(id *)&v2[v4];
  v8 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v7, sel_setGroupName_, v8);

  if (a1 > 0.0)
    objc_msgSend(*(id *)&v2[v4], sel_setCornerRadius_, a1);
  sub_1D2D9DCD4();
  v9 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v10 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithType_, v10);

  v29[0] = xmmword_1D2DA4A00;
  v29[1] = xmmword_1D2DA4A10;
  v29[2] = xmmword_1D2DA4A20;
  v29[3] = xmmword_1D2DA4A30;
  v29[4] = xmmword_1D2DA4A40;
  v12 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v29);
  objc_msgSend(v11, sel_setValue_forKey_, v12, *MEMORY[0x1E0CD2D20]);

  sub_1D2D9DCD4();
  v13 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v14 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithType_, v14);

  sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5F48);
  v16 = (void *)sub_1D2D9E130();
  objc_msgSend(v15, sel_setValue_forKey_, v16, *MEMORY[0x1E0CD2D90]);

  v17 = (void *)sub_1D2D9DEA8();
  objc_msgSend(v15, sel_setValue_forKey_, v17, *MEMORY[0x1E0CD2D70]);

  v18 = *(void **)&v2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7208);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D2DA0CB0;
  v20 = sub_1D2CC63E8(0, &qword_1EFCA8240);
  *(_QWORD *)(v19 + 32) = v11;
  *(_QWORD *)(v19 + 88) = v20;
  *(_QWORD *)(v19 + 56) = v20;
  *(_QWORD *)(v19 + 64) = v15;
  v21 = v18;
  v22 = v11;
  v23 = v15;
  v24 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setFilters_, v24);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1D2DA3B40;
  v26 = *(void **)&v2[v4];
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)&v29[0] = v25;
  sub_1D2D9DE78();
  sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA8248);
  v27 = v26;
  v28 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSublayers_, v28);

}

uint64_t sub_1D2D553D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 9);
  sub_1D2CF2AB8(*(_QWORD *)v1, v4);
  v6 = sub_1D2D7C784(v3, v4);
  sub_1D2CF2B30(v3, v4);
  if ((v6 & 1) != 0 || v5)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8238);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  else
  {
    type metadata accessor for TranslationBackdropVibrantBlurLayer();
    sub_1D2D9CBDC();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8238);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_1D2D554A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t v17;
  _QWORD v18[2];

  v7 = a2 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8238);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82B8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2CF2AB8(a1, v7);
  v15 = sub_1D2D7C784(a1, v7);
  sub_1D2CF2B30(a1, v7);
  if ((v15 & 1) != 0)
  {
    *v14 = sub_1D2D9D80C();
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA8260, &qword_1EFCA8238, MEMORY[0x1E0CD8D48]);
    return sub_1D2D9D1E8();
  }
  else
  {
    v18[1] = a3;
    type metadata accessor for TranslationBackdropVibrantBlurLayer();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_BYTE *)(v17 + 24) = v7 != 0;
    *(double *)(v17 + 32) = a4;
    sub_1D2CF2AB8(a1, v7);
    sub_1D2D9CBDC();
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC6C74(&qword_1EFCA8260, &qword_1EFCA8238, MEMORY[0x1E0CD8D48]);
    sub_1D2D9D1E8();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1D2D556D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D554A8(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1, *(double *)(v1 + 16));
}

id sub_1D2D559B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TranslationBackdropVibrantBlurLayer()
{
  return objc_opt_self();
}

uint64_t destroy for TranslationBackdropCaptureSource(uint64_t a1)
{
  return sub_1D2CF2B30(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s13TranslationUI32TranslationBackdropCaptureSourceVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1D2CF2AB8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for TranslationBackdropCaptureSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1D2CF2AB8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1D2CF2B30(v6, v7);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for TranslationBackdropCaptureSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1D2CF2B30(v6, v7);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationBackdropCaptureSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationBackdropCaptureSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationBackdropCaptureSource()
{
  return &type metadata for TranslationBackdropCaptureSource;
}

uint64_t sub_1D2D55BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D55BE4@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[1] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8268);
  MEMORY[0x1E0C80A78](v5);
  v7 = (double *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6070);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9CDF8();
  MEMORY[0x1E0C80A78](v11);
  v13 = (double *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8270);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v24 - v18;
  if ((a1 & 1) != 0)
  {
    v20 = (char *)v13 + *(int *)(v11 + 20);
    v21 = *MEMORY[0x1E0CDB0C0];
    v22 = sub_1D2D9D0EC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    *v13 = a3;
    v13[1] = a3;
    sub_1D2CDCC78((uint64_t)v13, (uint64_t)v10);
    *(_WORD *)&v10[*(int *)(v8 + 36)] = 256;
    sub_1D2CCAD60((uint64_t)v10, (uint64_t)v16, &qword_1EFCA6070);
    sub_1D2CCADA4((uint64_t)v10, &qword_1EFCA6070);
    sub_1D2CDCCBC((uint64_t)v13);
    sub_1D2D560D4((uint64_t)v16, (uint64_t)v19);
    sub_1D2CCAD60((uint64_t)v19, (uint64_t)v7, &qword_1EFCA8270);
    swift_storeEnumTagMultiPayload();
    sub_1D2D55FC8();
    sub_1D2D56090();
    sub_1D2D9D1E8();
    return sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA8270);
  }
  else
  {
    *(_QWORD *)v7 = swift_getKeyPath();
    *((_BYTE *)v7 + 8) = 0;
    v7[2] = a3;
    swift_storeEnumTagMultiPayload();
    sub_1D2D55FC8();
    sub_1D2D56090();
    return sub_1D2D9D1E8();
  }
}

uint64_t sub_1D2D55E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2D55BE4(*(_BYTE *)v1, a1, *(double *)(v1 + 8));
}

uint64_t getEnumTagSinglePayload for TranslationOverlayBackground(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationOverlayBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationOverlayBackground()
{
  return &type metadata for TranslationOverlayBackground;
}

unint64_t sub_1D2D55F38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFCA8250;
  if (!qword_1EFCA8250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8258);
    v2 = sub_1D2CC6C74(&qword_1EFCA8260, &qword_1EFCA8238, MEMORY[0x1E0CD8D48]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8250);
  }
  return result;
}

uint64_t sub_1D2D55FB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D2D55FC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8278;
  if (!qword_1EFCA8278)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8270);
    v2[0] = sub_1D2D5604C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA60A0, &qword_1EFCA6070, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8278);
  }
  return result;
}

unint64_t sub_1D2D5604C()
{
  unint64_t result;

  result = qword_1EFCA8280;
  if (!qword_1EFCA8280)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4C3C, &type metadata for TranslationBackdropForBackgroundRendering);
    atomic_store(result, (unint64_t *)&qword_1EFCA8280);
  }
  return result;
}

unint64_t sub_1D2D56090()
{
  unint64_t result;

  result = qword_1EFCA8288;
  if (!qword_1EFCA8288)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4BEC, &type metadata for TranslationBackdrop);
    atomic_store(result, (unint64_t *)&qword_1EFCA8288);
  }
  return result;
}

uint64_t sub_1D2D560D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D56120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1D2CF2AB8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for TranslationBackdrop(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1D2CF2AB8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1D2CF2B30(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TranslationBackdrop(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1D2CF2B30(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationBackdrop(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationBackdrop(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationBackdrop()
{
  return &type metadata for TranslationBackdrop;
}

ValueMetadata *type metadata accessor for TranslationBackdropForBackgroundRendering()
{
  return &type metadata for TranslationBackdropForBackgroundRendering;
}

unint64_t sub_1D2D562C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8290;
  if (!qword_1EFCA8290)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8298);
    v2[0] = sub_1D2D55FC8();
    v2[1] = sub_1D2D56090();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8290);
  }
  return result;
}

uint64_t sub_1D2D56330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D56340()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D56350()
{
  uint64_t v0;

  sub_1D2CF2B30(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocObject();
}

void sub_1D2D56378()
{
  uint64_t v0;

  sub_1D2D54FE4(*(double *)(v0 + 32));
}

unint64_t sub_1D2D563A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA82C0;
  if (!qword_1EFCA82C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA82C8);
    v2[0] = sub_1D2D56424();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA82D8, &qword_1EFCA82A8, MEMORY[0x1E0CD9D60]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA82C0);
  }
  return result;
}

unint64_t sub_1D2D56424()
{
  unint64_t result;

  result = qword_1EFCA82D0;
  if (!qword_1EFCA82D0)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CE0558], MEMORY[0x1E0CE0580]);
    atomic_store(result, (unint64_t *)&qword_1EFCA82D0);
  }
  return result;
}

unint64_t sub_1D2D5646C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA82E0;
  if (!qword_1EFCA82E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA82E8);
    v2 = sub_1D2CC6C74(&qword_1EFCA8260, &qword_1EFCA8238, MEMORY[0x1E0CD8D48]);
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA82E0);
  }
  return result;
}

uint64_t sub_1D2D564F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v23 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = *((_OWORD *)a2 + 3);
    *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
    v10 = a3[11];
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_OWORD *)(a1 + 48) = v9;
    v13 = sub_1D2D9D584();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[12];
    v16 = v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v8) = *(_BYTE *)(v17 + 8);
    sub_1D2CF2AB8(*(_QWORD *)v17, v8);
    *(_QWORD *)v16 = v18;
    *(_BYTE *)(v16 + 8) = v8;
    v19 = a3[13];
    v20 = (_QWORD *)(v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_1D2D9CD50();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = a3[14];
    v25 = (_QWORD *)(v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_1D2D9CDA4();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v30 = a3[15];
    v31 = v4 + v30;
    v32 = (uint64_t)a2 + v30;
    v33 = *(_QWORD *)v32;
    v34 = *(_BYTE *)(v32 + 8);
    sub_1D2CF2AB8(*(_QWORD *)v32, v34);
    *(_QWORD *)v31 = v33;
    *(_BYTE *)(v31 + 8) = v34;
    v35 = a3[16];
    v36 = v4 + v35;
    v37 = (uint64_t)a2 + v35;
    v38 = *(uint64_t *)((char *)a2 + v35 + 8);
    *(_QWORD *)v36 = *(uint64_t *)((char *)a2 + v35);
    *(_QWORD *)(v36 + 8) = v38;
    *(_OWORD *)(v36 + 16) = *(_OWORD *)((char *)a2 + v35 + 16);
    *(_BYTE *)(v36 + 32) = *((_BYTE *)a2 + v35 + 32);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)((char *)a2 + v35 + 40);
    *(_OWORD *)(v36 + 56) = *(_OWORD *)((char *)a2 + v35 + 56);
    *(_BYTE *)(v36 + 72) = *((_BYTE *)a2 + v35 + 72);
    v39 = *(_OWORD *)((char *)a2 + v35 + 80);
    v40 = *(_OWORD *)((char *)a2 + v35 + 96);
    *(_BYTE *)(v36 + 112) = *((_BYTE *)a2 + v35 + 112);
    *(_OWORD *)(v36 + 80) = v39;
    *(_OWORD *)(v36 + 96) = v40;
    v41 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
    v42 = v36 + v41;
    v43 = v37 + v41;
    v44 = sub_1D2D9C6C0();
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    v45(v42, v43, v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
    *(_QWORD *)(v36 + *(int *)(v46 + 28)) = *(_QWORD *)(v37 + *(int *)(v46 + 28));
    *(_QWORD *)(v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for TranslationOverlay.LockedMetrics(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA8450);
}

uint64_t sub_1D2D56834(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[11];
  v5 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_1D2CF2B30(*(_QWORD *)(a1 + a2[12]), *(_BYTE *)(a1 + a2[12] + 8));
  v6 = a1 + a2[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1D2D9CD50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1D2D9CDA4();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  sub_1D2CF2B30(*(_QWORD *)(a1 + a2[15]), *(_BYTE *)(a1 + a2[15] + 8));
  v11 = a1 + a2[16];
  swift_bridgeObjectRelease();
  v12 = v11 + *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v13 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D569D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v9 = a3[11];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 48) = v8;
  v12 = sub_1D2D9D584();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  LOBYTE(v7) = *(_BYTE *)(v16 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v16, v7);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v7;
  v18 = a3[13];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_1D2D9CD50();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[14];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_1D2D9CDA4();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  else
  {
    *v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v28 = a3[15];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)v30;
  v32 = *(_BYTE *)(v30 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v30, v32);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v32;
  v33 = a3[16];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = v36;
  *(_OWORD *)(v34 + 16) = *(_OWORD *)(a2 + v33 + 16);
  *(_BYTE *)(v34 + 32) = *(_BYTE *)(a2 + v33 + 32);
  *(_OWORD *)(v34 + 40) = *(_OWORD *)(a2 + v33 + 40);
  *(_OWORD *)(v34 + 56) = *(_OWORD *)(a2 + v33 + 56);
  *(_BYTE *)(v34 + 72) = *(_BYTE *)(a2 + v33 + 72);
  v37 = *(_OWORD *)(a2 + v33 + 80);
  v38 = *(_OWORD *)(a2 + v33 + 96);
  *(_BYTE *)(v34 + 112) = *(_BYTE *)(a2 + v33 + 112);
  *(_OWORD *)(v34 + 80) = v37;
  *(_OWORD *)(v34 + 96) = v38;
  v39 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v40 = v34 + v39;
  v41 = v35 + v39;
  v42 = sub_1D2D9C6C0();
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  *(_QWORD *)(v34 + *(int *)(v44 + 28)) = *(_QWORD *)(v35 + *(int *)(v44 + 28));
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2D56CDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v6 = a3[11];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[12];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)v12;
  LOBYTE(v8) = *(_BYTE *)(v12 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v12, v8);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v8;
  sub_1D2CF2B30(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[13];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_1D2CCADA4(a1 + v16, &qword_1EFCA82F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_1D2D9CD50();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[14];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    sub_1D2CCADA4(a1 + v20, &qword_1EFCA82F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_1D2D9CDA4();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v26 = a3[15];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *(_BYTE *)(v28 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v28, v30);
  v31 = *(_QWORD *)v27;
  v32 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v30;
  sub_1D2CF2B30(v31, v32);
  v33 = a3[16];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(a2 + v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
  *(_BYTE *)(v34 + 32) = *(_BYTE *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
  *(_QWORD *)(v34 + 56) = *(_QWORD *)(v35 + 56);
  *(_QWORD *)(v34 + 64) = *(_QWORD *)(v35 + 64);
  *(_BYTE *)(v34 + 72) = *(_BYTE *)(v35 + 72);
  *(_QWORD *)(v34 + 80) = *(_QWORD *)(v35 + 80);
  *(_QWORD *)(v34 + 88) = *(_QWORD *)(v35 + 88);
  *(_QWORD *)(v34 + 96) = *(_QWORD *)(v35 + 96);
  *(_QWORD *)(v34 + 104) = *(_QWORD *)(v35 + 104);
  *(_BYTE *)(v34 + 112) = *(_BYTE *)(v35 + 112);
  v36 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v37 = v34 + v36;
  v38 = v35 + v36;
  v39 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  *(_QWORD *)(v34 + *(int *)(v40 + 28)) = *(_QWORD *)(v35 + *(int *)(v40 + 28));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2D5709C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v8 = a3[11];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[12];
  v13 = a3[13];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (void *)(a1 + v13);
  v17 = (const void *)(a2 + v13);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_1D2D9CD50();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[14];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_1D2D9CDA4();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v21, v22, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v27 = a3[15];
  v28 = a3[16];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a1 + v28;
  v32 = a2 + v28;
  v33 = *(_OWORD *)(a2 + v28 + 16);
  *(_OWORD *)v31 = *(_OWORD *)(a2 + v28);
  *(_OWORD *)(v31 + 16) = v33;
  *(_BYTE *)(v31 + 32) = *(_BYTE *)(a2 + v28 + 32);
  *(_OWORD *)(v31 + 40) = *(_OWORD *)(a2 + v28 + 40);
  *(_OWORD *)(v31 + 56) = *(_OWORD *)(a2 + v28 + 56);
  *(_BYTE *)(v31 + 72) = *(_BYTE *)(a2 + v28 + 72);
  v34 = *(_OWORD *)(a2 + v28 + 80);
  v35 = *(_OWORD *)(a2 + v28 + 96);
  *(_BYTE *)(v31 + 112) = *(_BYTE *)(a2 + v28 + 112);
  *(_OWORD *)(v31 + 80) = v34;
  *(_OWORD *)(v31 + 96) = v35;
  v36 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v37 = v31 + v36;
  v38 = v32 + v36;
  v39 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  *(_QWORD *)(v31 + *(int *)(v40 + 28)) = *(_QWORD *)(v32 + *(int *)(v40 + 28));
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_1D2D57334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v8 = a3[11];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[12];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = (_BYTE)v14;
  sub_1D2CF2B30(v16, v17);
  if (a1 != a2)
  {
    v18 = a3[13];
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    sub_1D2CCADA4(a1 + v18, &qword_1EFCA82F0);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_1D2D9CD50();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v23 = a3[14];
    v24 = (void *)(a1 + v23);
    v25 = (const void *)(a2 + v23);
    sub_1D2CCADA4(a1 + v23, &qword_1EFCA82F8);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_1D2D9CDA4();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v24, v25, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  v30 = a3[15];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  v34 = *(_QWORD *)v31;
  v35 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = (_BYTE)v32;
  sub_1D2CF2B30(v34, v35);
  v36 = a3[16];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v37 + 16) = *(_OWORD *)(v38 + 16);
  *(_BYTE *)(v37 + 32) = *(_BYTE *)(v38 + 32);
  *(_OWORD *)(v37 + 40) = *(_OWORD *)(v38 + 40);
  *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
  *(_BYTE *)(v37 + 72) = *(_BYTE *)(v38 + 72);
  v40 = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 80) = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 96) = v40;
  *(_BYTE *)(v37 + 112) = *(_BYTE *)(v38 + 112);
  v41 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v42 = v37 + v41;
  v43 = v38 + v41;
  v44 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  *(_QWORD *)(v37 + *(int *)(v45 + 28)) = *(_QWORD *)(v38 + *(int *)(v45 + 28));
  swift_release();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_release();
  return a1;
}

uint64_t sub_1D2D57664()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D57670(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D2D9D584();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8310);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA8318);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[14];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[16];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D2D57764()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D57770(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D2D9D584();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8310);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA8318);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[14];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[16];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for TranslationOverlay(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA8378);
}

void sub_1D2D57874()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D2D9D584();
  if (v0 <= 0x3F)
  {
    sub_1D2CE60DC(319, &qword_1EFCA8388, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    if (v1 <= 0x3F)
    {
      sub_1D2D579B0();
      if (v2 <= 0x3F)
      {
        sub_1D2CE60DC(319, qword_1EFCA8398, type metadata accessor for TranslationOverlay.LockedMetrics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1D2D579B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA8390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8300);
    v0 = sub_1D2D9CB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA8390);
  }
}

_QWORD *sub_1D2D57A08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    v6 = *((_OWORD *)a2 + 6);
    v7 = *(int *)(a3 + 40);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v6;
    v10 = sub_1D2D9C6C0();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1D2D57ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1D2D9C6C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D2D57B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 96);
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v9 = sub_1D2D9C6C0();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1D2D57BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1D2D57CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(int *)(a3 + 40);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_1D2D57D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  v8 = *(_BYTE *)(a2 + 112);
  v9 = *(int *)(a3 + 40);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_BYTE *)(a1 + 112) = v8;
  v12 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v11, v10, v12);
  return a1;
}

uint64_t sub_1D2D57DE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D57DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D2D9C6C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_1D2D57E68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D57E74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D2D9C6C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D2D57EE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C6C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D2D57F80(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D2D57F88()
{
  return sub_1D2D9CCD8();
}

uint64_t sub_1D2D57F94()
{
  return sub_1D2D57FBC((void (*)(void))sub_1D2D5AFBC);
}

uint64_t sub_1D2D57FA8()
{
  return sub_1D2D57FBC((void (*)(void))sub_1D2D5B000);
}

uint64_t sub_1D2D57FBC(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_1D2D9CFFC();
  return v2;
}

uint64_t sub_1D2D57FFC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[3];
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8648);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8650);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8658);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v13 = sub_1D2D9D7F4();
    KeyPath = swift_getKeyPath();
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8660);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, a1, v15);
    v16 = (uint64_t *)&v12[*(int *)(v10 + 36)];
    *v16 = KeyPath;
    v16[1] = v13;
    sub_1D2CCAD60((uint64_t)v12, (uint64_t)v9, &qword_1EFCA8658);
    swift_storeEnumTagMultiPayload();
    sub_1D2D5B530();
    sub_1D2D5B5CC();
    sub_1D2D9D1E8();
    v17 = (uint64_t)v12;
    v18 = &qword_1EFCA8658;
  }
  else
  {
    v19 = sub_1D2D9D80C();
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8660);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v6, a1, v20);
    *(_QWORD *)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8668) + 36)] = v19;
    v22[0] = xmmword_1D2DA4C90;
    v22[1] = xmmword_1D2DA4CA0;
    v22[2] = xmmword_1D2DA4CB0;
    v23 = 1068792545;
    v25 = 0;
    v24 = 0;
    v26 = 0;
    v27 = 1065353216;
    sub_1D2D9D638();
    sub_1D2CCAD60((uint64_t)v6, (uint64_t)v9, &qword_1EFCA8648);
    swift_storeEnumTagMultiPayload();
    sub_1D2D5B530();
    sub_1D2D5B5CC();
    sub_1D2D9D1E8();
    v17 = (uint64_t)v6;
    v18 = &qword_1EFCA8648;
  }
  return sub_1D2CCADA4(v17, v18);
}

uint64_t sub_1D2D582A4(uint64_t a1)
{
  char *v1;

  return sub_1D2D57FFC(a1, *v1);
}

double sub_1D2D582AC()
{
  uint64_t v0;
  double v1;
  char v2;
  double v3;
  double v4;
  double v5;
  double result;
  double v7;

  v1 = *(double *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  if (v1 <= 0.0)
    return *(double *)(v0 + (~(8 * v2) & 8)) / 5.0;
  v3 = *(double *)(v0 + 8 * ((v2 & 1) == 0));
  v4 = v1 / 5.0 + (v3 - v1) / 50.0;
  v5 = *(double *)(v0 + 8 * (v2 & 1));
  if (v3 < v5)
    return v1 / 5.0 + (v3 - v1) / 50.0;
  v7 = v1 * 0.5;
  result = v1 / 5.0 + (v5 - v1) / 50.0;
  if (v7 > result)
    result = v7;
  if (v4 < result)
    return v4;
  return result;
}

double sub_1D2D5834C()
{
  uint64_t v0;
  unsigned __int8 v1;
  BOOL v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(double *)(v0 + 8 * ((v1 & 1) == 0)) / *(double *)(v0 + 8 * (v1 & 1)) > 2.0;
  v3 = *(double *)v0;
  v4 = sub_1D2D582AC();
  v5 = v4 + v4;
  v6 = v5 + v5;
  if (((v1 | v2) & 1) != 0)
    v6 = v5;
  return v3 - v6;
}

uint64_t sub_1D2D583D4()
{
  sub_1D2D9E2EC();
  sub_1D2D9DDA0();
  type metadata accessor for CGSize(0);
  sub_1D2D9E37C();
  sub_1D2D9DDA0();
  sub_1D2D9DFB0();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D582AC();
  sub_1D2D9DFB0();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  sub_1D2D5834C();
  sub_1D2D9E37C();
  return 0;
}

uint64_t sub_1D2D5855C(uint64_t a1, uint64_t a2)
{
  int v5;
  int v6;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if ((sub_1D2D9D488() & 1) != 0)
    return v5 ^ v6 ^ 1u;
  else
    return 0;
}

uint64_t sub_1D2D585C4()
{
  uint64_t locked;
  uint64_t v1;
  uint64_t v2;

  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  __swift_allocate_value_buffer(locked, qword_1EFCB2650);
  v1 = __swift_project_value_buffer(locked, (uint64_t)qword_1EFCB2650);
  if (qword_1EFCA54D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(locked, (uint64_t)qword_1EFCB2668);
  return sub_1D2CDB6B4(v2, v1, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1D2D58650@<X0>(uint64_t a1@<X8>)
{
  uint64_t locked;
  uint64_t v3;

  if (qword_1EFCA54C8 != -1)
    swift_once();
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  v3 = __swift_project_value_buffer(locked, (uint64_t)qword_1EFCB2650);
  return sub_1D2CDB6B4(v3, a1, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1D2D586BC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1D2CD3734(a1, type metadata accessor for TranslationOverlay.LockedMetrics);
  return a2(v3);
}

double sub_1D2D586FC()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double result;
  double v5;
  double v6;

  v1 = *(double *)(v0 + 80);
  v2 = *(double *)(v0 + 96);
  if (*(_BYTE *)(v0 + 112))
    v3 = *(double *)(v0 + 80);
  else
    v3 = *(double *)(v0 + 88);
  if (v2 <= 0.0)
    return v3 / 5.0;
  result = v2 / 5.0 + (v3 - v2) / 50.0;
  if (*(_BYTE *)(v0 + 112))
    v1 = *(double *)(v0 + 88);
  if (v3 >= v1)
  {
    v5 = v2 * 0.5;
    v6 = v2 / 5.0 + (v1 - v2) / 50.0;
    if (v5 > v6)
      v6 = v5;
    if (result >= v6)
      return v6;
  }
  return result;
}

uint64_t sub_1D2D58780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t locked;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_1D2D9C6C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  __swift_allocate_value_buffer(locked, qword_1EFCB2668);
  v5 = __swift_project_value_buffer(locked, (uint64_t)qword_1EFCB2668);
  sub_1D2D9D4AC();
  v7 = v6;
  sub_1D2D9D4AC();
  v9 = v8;
  sub_1D2D9D4AC();
  v11 = v10;
  sub_1D2D9C678();
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0xE000000000000000;
  *(_QWORD *)(v5 + 16) = 0x4031000000000000;
  *(_QWORD *)(v5 + 24) = v7;
  *(_BYTE *)(v5 + 32) = 1;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 64) = v9;
  *(_BYTE *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 104) = v11;
  *(_BYTE *)(v5 + 112) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(int *)(locked + 40), v3, v0);
}

uint64_t sub_1D2D58898()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D588A8@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char v35;
  double v36;
  double v37;
  char v38;
  uint64_t result;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double v44;
  double v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  double v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  double v84;
  double v85;
  double v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  char v93;
  void (*v94)(char *, uint64_t, uint64_t, uint64_t);
  double v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  char *v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  __int128 v109;
  __int128 v110;
  char v111;
  double v112;
  char v113;
  uint64_t v114;
  double v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t locked;
  _QWORD *v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  char v132;

  v119 = a1;
  v122 = sub_1D2D9D584();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA64C0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8510);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1D2D9C6C0();
  v118 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v117 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v116 = (char *)&v114 - v17;
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1E0C80A78](locked);
  v19 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v114 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (double *)((char *)&v114 - v24);
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)((char *)&v114 - v27);
  v29 = v4[2];
  v30 = v4[3];
  v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v31 = v29 & 0xFFFFFFFFFFFFLL;
  v129 = v4[2];
  if (!v31)
    v129 = v4[4];
  swift_bridgeObjectRetain();
  v127 = type metadata accessor for TranslationOverlay(0);
  v32 = *(int *)(v127 + 64);
  v124 = v4;
  v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v4 + v32);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  v126 = v33;
  sub_1D2D9D8C0();
  if (*v28 == v29 && v28[1] == v30)
  {
    sub_1D2CD3734((uint64_t)v28, type metadata accessor for TranslationOverlay.LockedMetrics);
  }
  else
  {
    v35 = sub_1D2D9E52C();
    sub_1D2CD3734((uint64_t)v28, type metadata accessor for TranslationOverlay.LockedMetrics);
    if ((v35 & 1) == 0)
      goto LABEL_21;
  }
  sub_1D2D9D8C0();
  v37 = v25[5];
  v36 = v25[6];
  sub_1D2CDB6B4((uint64_t)v25, (uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
  if (v37 == a2 && v36 == a3)
  {
    v38 = sub_1D2D9D488();
    sub_1D2CD3734((uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
    sub_1D2CD3734((uint64_t)v25, type metadata accessor for TranslationOverlay.LockedMetrics);
    if ((v38 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return sub_1D2D9D8C0();
    }
  }
  else
  {
    sub_1D2CD3734((uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
    sub_1D2CD3734((uint64_t)v25, type metadata accessor for TranslationOverlay.LockedMetrics);
  }
  v40 = v116;
  sub_1D2D9C6B4();
  sub_1D2D9D8C0();
  v41 = v118;
  v42 = v117;
  v43 = v125;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, &v19[*(int *)(locked + 40)], v125);
  sub_1D2CD3734((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1D2D9C684();
  v45 = v44;
  v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  v46(v42, v43);
  v46(v40, v43);
  sub_1D2D9CABC();
  if (v45 < *(double *)&v130)
  {
    swift_bridgeObjectRelease();
    sub_1D2D9D8C0();
    v47 = *((_QWORD *)v19 + 5);
    v49 = *((double *)v19 + 6);
    v48 = *((double *)v19 + 7);
    sub_1D2CD3734((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
    v50 = 0.0;
    if ((v47 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      v51 = v119;
      v52 = v124;
      if ((*(_QWORD *)&v49 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v50 = a3 / v49;
    }
    else
    {
      v51 = v119;
      v52 = v124;
    }
    v112 = v48 * v50;
    v113 = *((_BYTE *)v52 + 64);
    sub_1D2D9D8C0();
    sub_1D2CDB6B4((uint64_t)v19, v51, type metadata accessor for TranslationOverlay.LockedMetrics);
    *(double *)(v51 + 80) = a2;
    *(double *)(v51 + 88) = a3;
    *(double *)(v51 + 96) = v112;
    *(double *)(v51 + 104) = a4;
    *(_BYTE *)(v51 + 112) = v113;
    return sub_1D2CD3734((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
  }
LABEL_21:
  v53 = v124;
  v54 = v124[6];
  v55 = *((_BYTE *)v124 + 64);
  v56 = 0.0;
  if (v55)
    v57 = a2;
  else
    v57 = a3;
  v58 = v57 / (double)v54;
  *(double *)&v130 = a2;
  *((double *)&v130 + 1) = a3;
  if (v54)
    v56 = v58;
  *(double *)&v131 = v56;
  *((double *)&v131 + 1) = a4;
  v132 = v55;
  v59 = sub_1D2D5834C();
  v61 = v60;
  v128 = (uint64_t)v53 + *(int *)(v127 + 44);
  sub_1D2D59418();
  v125 = v62;
  v127 = sub_1D2D9D47C();
  v126 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56);
  v115 = a4;
  v63 = 4.0;
  v64 = 256.0;
  if ((v55 & 1) != 0)
  {
    while (1)
    {
      v65 = floor(v63 + (v64 - v63) * 0.5);
      v126(v14, 1, 1, v127);
      sub_1D2D9D4C4();
      sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA8510);
      swift_bridgeObjectRetain();
      swift_retain();
      v66 = sub_1D2D9D5B4();
      v68 = v67;
      v70 = v69;
      swift_bridgeObjectRelease();
      swift_release();
      v71 = v70 & 1;
      v72 = sub_1D2D9D560();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v11, 1, 1, v72);
      sub_1D2D9D56C();
      v74 = v73;
      sub_1D2CCCAB4(v66, v68, v71);
      swift_bridgeObjectRelease();
      sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA64C0);
      swift_release();
      v75 = v59 - v74;
      v76 = vabdd_f64(v64, v65);
      if (vabdd_f64(v65, v63) < 1.0 || v76 < 1.0)
        break;
      if (v75 < 0.0)
      {
        v64 = v65 + -1.0;
      }
      else
      {
        if (v75 <= 0.0)
          goto LABEL_49;
        v63 = v65 + 1.0;
      }
      if (v63 > v64)
        goto LABEL_49;
    }
  }
  else
  {
    while (1)
    {
      v65 = floor(v63 + (v64 - v63) * 0.5);
      v126(v14, 1, 1, v127);
      sub_1D2D9D4C4();
      sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA8510);
      swift_bridgeObjectRetain();
      swift_retain();
      v78 = sub_1D2D9D5B4();
      v80 = v79;
      v82 = v81;
      swift_bridgeObjectRelease();
      swift_release();
      v83 = v82 & 1;
      v72 = sub_1D2D9D560();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v11, 1, 1, v72);
      sub_1D2D9D56C();
      v85 = v84;
      sub_1D2CCCAB4(v78, v80, v83);
      swift_bridgeObjectRelease();
      sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA64C0);
      swift_release();
      v75 = v61 - v85;
      v86 = vabdd_f64(v64, v65);
      if (vabdd_f64(v65, v63) < 1.0 || v86 < 1.0)
        break;
      if (v75 < 0.0)
      {
        v64 = v65 + -1.0;
        if (v63 > v65 + -1.0)
          goto LABEL_49;
      }
      else
      {
        if (v75 <= 0.0)
          goto LABEL_49;
        v63 = v65 + 1.0;
        if (v65 + 1.0 > v64)
          goto LABEL_49;
      }
    }
  }
  if (v75 < 0.0)
    v65 = v65 + -1.0;
LABEL_49:
  sub_1D2D59418();
  v126(v14, 1, 1, v127);
  v127 = sub_1D2D9D4C4();
  sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA8510);
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v128, v122);
  swift_bridgeObjectRetain();
  v88 = sub_1D2D9D5B4();
  v90 = v89;
  v92 = v91;
  swift_bridgeObjectRelease();
  v93 = v92 & 1;
  sub_1D2D9D560();
  v94 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v94(v11, 1, 1, v72);
  sub_1D2D9D56C();
  v96 = v95;
  sub_1D2CCCAB4(v88, v90, v93);
  swift_bridgeObjectRelease();
  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA64C0);
  v97 = sub_1D2D9D5B4();
  v99 = v98;
  v101 = v100 & 1;
  v94(v11, 1, 1, v72);
  v102 = v120;
  sub_1D2D9D56C();
  v104 = v103;
  sub_1D2CCCAB4(v97, v99, v101);
  swift_bridgeObjectRelease();
  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA64C0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v102, v122);
  v106 = v124[2];
  v105 = v124[3];
  v107 = v119;
  swift_bridgeObjectRetain();
  sub_1D2D9C6B4();
  result = swift_release();
  *(_QWORD *)v107 = v106;
  *(_QWORD *)(v107 + 8) = v105;
  v108 = v115;
  *(double *)(v107 + 16) = v65;
  *(double *)(v107 + 24) = v108;
  *(_BYTE *)(v107 + 32) = v96 <= v104;
  v109 = v130;
  v110 = v131;
  *(_OWORD *)(v107 + 40) = v130;
  *(_OWORD *)(v107 + 56) = v110;
  v111 = v132;
  *(_BYTE *)(v107 + 72) = v132;
  *(_OWORD *)(v107 + 80) = v109;
  *(_OWORD *)(v107 + 96) = v110;
  *(_BYTE *)(v107 + 112) = v111;
  return result;
}

uint64_t sub_1D2D59418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = sub_1D2D9CDA4();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA85B0);
  MEMORY[0x1E0C80A78](v42);
  v43 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v38 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  v12 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D2D9CD50();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958];
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v38 - v21;
  sub_1D2D7CDB4((uint64_t)&v38 - v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0CD98D0], v15);
  sub_1D2CC66E4(&qword_1EFCA85B8, v16, MEMORY[0x1E0CD9980]);
  v23 = sub_1D2D9DC80();
  v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  v25 = (uint64_t)v14;
  v24(v19, v15);
  v24(v22, v15);
  sub_1D2CDB6B4(v1, (uint64_t)v14, type metadata accessor for TranslationOverlay);
  if ((v23 & 1) == 0)
  {
    sub_1D2CD3734((uint64_t)v14, type metadata accessor for TranslationOverlay);
    return sub_1D2D9D494();
  }
  v26 = (uint64_t)v40;
  sub_1D2D7CDE8((uint64_t)v11);
  v28 = v44;
  v27 = v45;
  v29 = (uint64_t)v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v41, *MEMORY[0x1E0CD9EE8], v45);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v29, 0, 1, v27);
  v30 = v43;
  v31 = v43 + *(int *)(v42 + 48);
  sub_1D2CCAD60((uint64_t)v11, v43, &qword_1EFCA8300);
  sub_1D2CCAD60(v29, v31, &qword_1EFCA8300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v32(v30, 1, v27) == 1)
  {
    sub_1D2CCADA4(v29, &qword_1EFCA8300);
    sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA8300);
    sub_1D2CD3734(v25, type metadata accessor for TranslationOverlay);
    if (v32(v31, 1, v27) == 1)
    {
      sub_1D2CCADA4(v30, &qword_1EFCA8300);
      return sub_1D2D9D494();
    }
    goto LABEL_9;
  }
  v42 = v25;
  v34 = v26;
  sub_1D2CCAD60(v30, v26, &qword_1EFCA8300);
  if (v32(v31, 1, v27) == 1)
  {
    sub_1D2CCADA4(v29, &qword_1EFCA8300);
    sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA8300);
    sub_1D2CD3734(v42, type metadata accessor for TranslationOverlay);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
LABEL_9:
    sub_1D2CCADA4(v30, &qword_1EFCA85B0);
    return sub_1D2D9D4AC();
  }
  v35 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v39, v31, v27);
  sub_1D2CC66E4(&qword_1EFCA85C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9EF8], MEMORY[0x1E0CD9F08]);
  v36 = sub_1D2D9DC8C();
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v35, v27);
  sub_1D2CCADA4(v29, &qword_1EFCA8300);
  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA8300);
  sub_1D2CD3734(v42, type metadata accessor for TranslationOverlay);
  v37((char *)v34, v27);
  sub_1D2CCADA4(v30, &qword_1EFCA8300);
  if ((v36 & 1) != 0)
    return sub_1D2D9D494();
  return sub_1D2D9D4AC();
}

uint64_t sub_1D2D598B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t locked;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)(uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v2 = type metadata accessor for TranslationOverlay(0);
  v40 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v41 = v3;
  v43 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1E0C80A78](locked);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84A0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84B0);
  MEMORY[0x1E0C80A78](v37);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84B8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D59CD0(v1, (uint64_t)v9);
  sub_1D2CCAD60((uint64_t)v9, (uint64_t)v12, &qword_1EFCA84A0);
  *(_WORD *)&v12[*(int *)(v10 + 36)] = 0;
  sub_1D2CCADA4((uint64_t)v9, &qword_1EFCA84A0);
  v16 = v1 + *(int *)(v2 + 60);
  v17 = *(_QWORD *)v16;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v16, v10);
  v18 = sub_1D2D7C784(v17, v10);
  sub_1D2CF2B30(v17, v10);
  v42 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  sub_1D2D9D8C0();
  v19 = sub_1D2D586FC();
  sub_1D2CD3734((uint64_t)v6, type metadata accessor for TranslationOverlay.LockedMetrics);
  v20 = sub_1D2D9DA70();
  v22 = v21;
  sub_1D2CCAD60((uint64_t)v12, (uint64_t)v14, &qword_1EFCA84A8);
  v23 = &v14[*(int *)(v37 + 36)];
  *v23 = v18 & 1;
  *((double *)v23 + 1) = v19;
  *((_QWORD *)v23 + 2) = v20;
  *((_QWORD *)v23 + 3) = v22;
  sub_1D2CCADA4((uint64_t)v12, &qword_1EFCA84A8);
  v24 = *(_QWORD *)v16;
  LOBYTE(v20) = *(_BYTE *)(v16 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v16, v20);
  LOBYTE(v22) = sub_1D2D7C784(v24, v20);
  sub_1D2CF2B30(v24, v20);
  v25 = (uint64_t)v38;
  sub_1D2D9D8C0();
  v26 = sub_1D2D586FC();
  sub_1D2CD3734((uint64_t)v6, type metadata accessor for TranslationOverlay.LockedMetrics);
  v27 = sub_1D2D9DA70();
  v29 = v28;
  sub_1D2CCAD60((uint64_t)v14, v25, &qword_1EFCA84B0);
  v30 = v25 + *(int *)(v39 + 36);
  *(_BYTE *)v30 = v22 & 1;
  *(double *)(v30 + 8) = v26;
  *(_QWORD *)(v30 + 16) = v27;
  *(_QWORD *)(v30 + 24) = v29;
  sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA84B0);
  if (qword_1EFCA54D0 != -1)
    swift_once();
  v31 = v43;
  sub_1D2CDB6B4(v42, v43, type metadata accessor for TranslationOverlay);
  v32 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v33 = swift_allocObject();
  sub_1D2D5AA7C(v31, v33 + v32);
  v34 = v44;
  sub_1D2CCAD60(v25, v44, &qword_1EFCA84B8);
  v35 = (uint64_t (**)(uint64_t))(v34
                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84C0) + 36));
  *v35 = sub_1D2D5AAC0;
  v35[1] = (uint64_t (*)(uint64_t))v33;
  return sub_1D2CCADA4(v25, &qword_1EFCA84B8);
}

uint64_t sub_1D2D59CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t locked;
  uint64_t v26;
  _BYTE *v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t KeyPath;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  double v50;
  _BYTE *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  _OWORD *v74;
  __int128 v75;
  unint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE v91[4];
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;

  v120 = a2;
  v3 = sub_1D2D9CDEC();
  v118 = *(_QWORD *)(v3 - 8);
  v119 = v3;
  MEMORY[0x1E0C80A78](v3);
  v117 = &v91[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v97 = sub_1D2D9D560();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = &v91[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84C8);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v102 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84D0);
  MEMORY[0x1E0C80A78](v98);
  v8 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84D8);
  MEMORY[0x1E0C80A78](v99);
  v106 = &v91[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84E0);
  MEMORY[0x1E0C80A78](v100);
  v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84E8);
  MEMORY[0x1E0C80A78](v105);
  v13 = &v91[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84F0);
  MEMORY[0x1E0C80A78](v108);
  v109 = &v91[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA84F8);
  MEMORY[0x1E0C80A78](v110);
  v111 = &v91[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8500);
  v115 = *(_QWORD *)(v16 - 8);
  v116 = v16;
  MEMORY[0x1E0C80A78](v16);
  v114 = &v91[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8508);
  MEMORY[0x1E0C80A78](v112);
  v113 = &v91[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = &v91[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8510);
  MEMORY[0x1E0C80A78](v22);
  v24 = &v91[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1E0C80A78](locked);
  v27 = &v91[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = *(double *)a1;
  v29 = *(double *)(a1 + 8);
  sub_1D2D59418();
  sub_1D2D588A8((uint64_t)v27, v28, v29, v30);
  sub_1D2D59418();
  v31 = sub_1D2D9D47C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v24, 1, 1, v31);
  v107 = sub_1D2D9D4C4();
  sub_1D2CCADA4((uint64_t)v24, &qword_1EFCA8510);
  v101 = (double *)(v27 + 40);
  sub_1D2D5834C();
  if ((v27[32] & 1) != 0)
  {
    sub_1D2CDB6B4(a1, (uint64_t)v21, type metadata accessor for TranslationOverlay);
    sub_1D2CD3734((uint64_t)v21, type metadata accessor for TranslationOverlay);
    v92 = 1;
    v32 = sub_1D2D9DA70();
  }
  else
  {
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
      v92 = 0;
    else
      v92 = 0x20001u >> (8 * *(_BYTE *)(a1 + 65));
    sub_1D2CDB6B4(a1, (uint64_t)v21, type metadata accessor for TranslationOverlay);
    v34 = v21[64];
    sub_1D2CD3734((uint64_t)v21, type metadata accessor for TranslationOverlay);
    if (v34 == 1 || !*(_BYTE *)(a1 + 65))
    {
      v32 = sub_1D2D9DA70();
    }
    else if (*(_BYTE *)(a1 + 65) == 1)
    {
      v32 = sub_1D2D9DA7C();
    }
    else
    {
      v32 = sub_1D2D9DA88();
    }
  }
  v94 = v32;
  v93 = v33;
  v36 = *(_QWORD *)v27;
  v35 = *((_QWORD *)v27 + 1);
  v37 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v37 = *(_QWORD *)v27 & 0xFFFFFFFFFFFFLL;
  if (!v37)
  {
    v36 = *(_QWORD *)(a1 + 32);
    v35 = *(_QWORD *)(a1 + 40);
  }
  swift_bridgeObjectRetain();
  v38 = a1 + *(int *)(v19 + 48);
  v39 = *(_QWORD *)v38;
  v40 = *(_BYTE *)(v38 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v38, v40);
  v41 = sub_1D2D7C784(v39, v40);
  sub_1D2CF2B30(v39, v40);
  LOBYTE(v39) = *(_BYTE *)(a1 + 64);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v122 = v36;
  *((_QWORD *)&v122 + 1) = v35;
  LOBYTE(v123) = 0;
  *((_QWORD *)&v123 + 1) = MEMORY[0x1E0DEE9D8];
  LOBYTE(v124) = v41 & 1;
  BYTE1(v124) = v39;
  BYTE2(v124) = v39 ^ 1;
  *((_QWORD *)&v124 + 1) = KeyPath;
  v125 = v107;
  v43 = *(unsigned __int8 *)(a1 + 64);
  swift_retain();
  v44 = v95;
  if (v43 == 1)
    sub_1D2D9D548();
  else
    sub_1D2D9D554();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8518);
  sub_1D2D5AB04();
  v45 = v102;
  sub_1D2D9D62C();
  (*(void (**)(_BYTE *, uint64_t))(v96 + 8))(v44, v97);
  sub_1D2CCCAB4(v122, *((uint64_t *)&v122 + 1), v123);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v46 = swift_getKeyPath();
  v47 = v103;
  v48 = v104;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 16))(v8, v45, v104);
  v49 = &v8[*(int *)(v98 + 36)];
  *(_QWORD *)v49 = v46;
  v49[8] = v92;
  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v45, v48);
  v50 = 1.0 / *(double *)(a1 + 56);
  v51 = v106;
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v106, &qword_1EFCA84D0);
  *(double *)&v51[*(int *)(v99 + 36)] = v50;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA84D0);
  if (qword_1EFCA54D0 != -1)
    swift_once();
  sub_1D2CDB6B4((uint64_t)v27, (uint64_t)&v11[*(int *)(v100 + 36)], type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1D2CD2018((uint64_t)v51, (uint64_t)v11, &qword_1EFCA84D8);
  v52 = sub_1D2D9D440();
  sub_1D2D9CAF8();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  sub_1D2CCAD60((uint64_t)v11, (uint64_t)v13, &qword_1EFCA84E0);
  v61 = &v13[*(int *)(v105 + 36)];
  *v61 = v52;
  *((_QWORD *)v61 + 1) = v54;
  *((_QWORD *)v61 + 2) = v56;
  *((_QWORD *)v61 + 3) = v58;
  *((_QWORD *)v61 + 4) = v60;
  v61[40] = 0;
  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA84E0);
  v62 = sub_1D2D9D404();
  sub_1D2D9CAF8();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v71 = v109;
  sub_1D2CCAD60((uint64_t)v13, (uint64_t)v109, &qword_1EFCA84E8);
  v72 = &v71[*(int *)(v108 + 36)];
  *v72 = v62;
  *((_QWORD *)v72 + 1) = v64;
  *((_QWORD *)v72 + 2) = v66;
  *((_QWORD *)v72 + 3) = v68;
  *((_QWORD *)v72 + 4) = v70;
  v72[40] = 0;
  sub_1D2CCADA4((uint64_t)v13, &qword_1EFCA84E8);
  sub_1D2D9CBE8();
  v73 = v111;
  sub_1D2CCAD60((uint64_t)v71, (uint64_t)v111, &qword_1EFCA84F0);
  v74 = &v73[*(int *)(v110 + 36)];
  v75 = v123;
  *v74 = v122;
  v74[1] = v75;
  v74[2] = v124;
  sub_1D2CCADA4((uint64_t)v71, &qword_1EFCA84F0);
  v76 = *((_QWORD *)v27 + 1);
  v77 = *(_QWORD *)v27 & 0xFFFFFFFFFFFFLL;
  if ((v76 & 0x2000000000000000) != 0)
    v77 = HIBYTE(v76) & 0xF;
  v78 = v117;
  if (v77)
  {
    v121 = MEMORY[0x1E0DEE9D8];
    sub_1D2CC66E4(&qword_1EFCA8550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8558);
    sub_1D2CC6C74(&qword_1EFCA8560, &qword_1EFCA8558, MEMORY[0x1E0DEAF38]);
    v79 = v119;
    sub_1D2D9E22C();
  }
  else
  {
    sub_1D2D9CDE0();
    v79 = v119;
  }
  v80 = v114;
  sub_1D2CCE538(&qword_1EFCA8568, &qword_1EFCA84F8, sub_1D2D5AC60, MEMORY[0x1E0CD8D70]);
  sub_1D2D9D764();
  (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v78, v79);
  sub_1D2CCADA4((uint64_t)v73, &qword_1EFCA84F8);
  if ((*(_QWORD *)v101 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    if ((*((_QWORD *)v27 + 6) & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v81 = *((double *)v27 + 10) / *v101;
    else
      v81 = 0.0;
  }
  else
  {
    v81 = 0.0;
  }
  sub_1D2D9DB00();
  v83 = v82;
  v85 = v84;
  swift_release();
  v87 = v115;
  v86 = v116;
  v88 = (uint64_t)v113;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v115 + 16))(v113, v80, v116);
  v89 = v88 + *(int *)(v112 + 36);
  *(double *)v89 = v81;
  *(double *)(v89 + 8) = v81;
  *(_QWORD *)(v89 + 16) = v83;
  *(_QWORD *)(v89 + 24) = v85;
  (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v80, v86);
  sub_1D2CD3734((uint64_t)v27, type metadata accessor for TranslationOverlay.LockedMetrics);
  return sub_1D2CD2018(v88, v120, &qword_1EFCA8508);
}

uint64_t sub_1D2D5A7B0(uint64_t a1)
{
  uint64_t locked;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1E0C80A78](locked);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1D2CDB6B4(a1, (uint64_t)&v9 - v6, type metadata accessor for TranslationOverlay.LockedMetrics);
  type metadata accessor for TranslationOverlay(0);
  sub_1D2CDB6B4((uint64_t)v7, (uint64_t)v4, type metadata accessor for TranslationOverlay.LockedMetrics);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  sub_1D2D9D8CC();
  return sub_1D2CD3734((uint64_t)v7, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1D2D5A894()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for TranslationOverlay(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + v1[11];
  v4 = sub_1D2D9D584();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1D2CF2B30(*(_QWORD *)(v2 + v1[12]), *(_BYTE *)(v2 + v1[12] + 8));
  v5 = v2 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1D2D9CD50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = v2 + v1[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D2D9CDA4();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_1D2CF2B30(*(_QWORD *)(v2 + v1[15]), *(_BYTE *)(v2 + v1[15] + 8));
  v10 = v2 + v1[16];
  swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  v12 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8308);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D5AA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranslationOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D5AAC0(uint64_t a1)
{
  type metadata accessor for TranslationOverlay(0);
  return sub_1D2D5A7B0(a1);
}

unint64_t sub_1D2D5AB04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8520;
  if (!qword_1EFCA8520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8518);
    v2[0] = sub_1D2CCE538(&qword_1EFCA8528, &qword_1EFCA8530, (uint64_t (*)(void))sub_1D2D5ABA8, MEMORY[0x1E0CDA1F0]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8520);
  }
  return result;
}

unint64_t sub_1D2D5ABA8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA8538;
  if (!qword_1EFCA8538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8540);
    v2 = sub_1D2D5AC14();
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA8538);
  }
  return result;
}

unint64_t sub_1D2D5AC14()
{
  unint64_t result;

  result = qword_1EFCA8548;
  if (!qword_1EFCA8548)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5000, &type metadata for AccessibleTextVibrancy);
    atomic_store(result, (unint64_t *)&qword_1EFCA8548);
  }
  return result;
}

uint64_t sub_1D2D5AC60()
{
  return sub_1D2CCE538(&qword_1EFCA8570, &qword_1EFCA84F0, sub_1D2D5AC84, MEMORY[0x1E0CD9758]);
}

uint64_t sub_1D2D5AC84()
{
  return sub_1D2CCE538(&qword_1EFCA8578, &qword_1EFCA84E8, (uint64_t (*)(void))sub_1D2D5ACA8, MEMORY[0x1E0CD9758]);
}

unint64_t sub_1D2D5ACA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8580;
  if (!qword_1EFCA8580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84E0);
    v2[0] = sub_1D2D5AD2C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA85A0, &qword_1EFCA85A8, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8580);
  }
  return result;
}

unint64_t sub_1D2D5AD2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8588;
  if (!qword_1EFCA8588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84D8);
    v2[0] = sub_1D2D5AD98();
    v2[1] = sub_1D2D5AE44();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8588);
  }
  return result;
}

unint64_t sub_1D2D5AD98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EFCA8590;
  if (!qword_1EFCA8590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84D0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8518);
    v2[3] = sub_1D2D5AB04();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2CC6C74((unint64_t *)&qword_1EFCA6C10, &qword_1EFCA6C18, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8590);
  }
  return result;
}

unint64_t sub_1D2D5AE44()
{
  unint64_t result;

  result = qword_1EFCA8598;
  if (!qword_1EFCA8598)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDBBF0], MEMORY[0x1E0CDBC00]);
    atomic_store(result, (unint64_t *)&qword_1EFCA8598);
  }
  return result;
}

uint64_t sub_1D2D5AE88(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  int v7;
  int v8;
  int v9;
  int v10;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_1D2D9E52C() & 1) == 0)
    return 0;
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16)
    || (sub_1D2D9D488() & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
  {
    return 0;
  }
  v5 = *(double *)(a1 + 40) == *(double *)(a2 + 40) && *(double *)(a1 + 48) == *(double *)(a2 + 48);
  if (!v5 || *(double *)(a1 + 56) != *(double *)(a2 + 56))
    return 0;
  v7 = *(unsigned __int8 *)(a2 + 72);
  v8 = *(unsigned __int8 *)(a1 + 72);
  if ((sub_1D2D9D488() & 1) == 0)
    return 0;
  if (((v7 ^ v8) & 1) != 0)
    return 0;
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
    return 0;
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88))
    return 0;
  if (*(double *)(a1 + 96) != *(double *)(a2 + 96))
    return 0;
  v9 = *(unsigned __int8 *)(a2 + 112);
  v10 = *(unsigned __int8 *)(a1 + 112);
  if ((sub_1D2D9D488() & 1) == 0 || ((v9 ^ v10) & 1) != 0)
    return 0;
  type metadata accessor for TranslationOverlay.LockedMetrics(0);
  return sub_1D2D9C690();
}

unint64_t sub_1D2D5AFBC()
{
  unint64_t result;

  result = qword_1EFCA85C8;
  if (!qword_1EFCA85C8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4FC8, &type metadata for ExtendedExperienceOptimizations);
    atomic_store(result, (unint64_t *)&qword_1EFCA85C8);
  }
  return result;
}

unint64_t sub_1D2D5B000()
{
  unint64_t result;

  result = qword_1EFCA85D0;
  if (!qword_1EFCA85D0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4F90, &type metadata for BackgroundRendering);
    atomic_store(result, (unint64_t *)&qword_1EFCA85D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundRendering()
{
  return &type metadata for BackgroundRendering;
}

ValueMetadata *type metadata accessor for ExtendedExperienceOptimizations()
{
  return &type metadata for ExtendedExperienceOptimizations;
}

ValueMetadata *type metadata accessor for TranslationOverlay.LockedMetrics.LockedMetricsPrefKey()
{
  return &type metadata for TranslationOverlay.LockedMetrics.LockedMetricsPrefKey;
}

uint64_t storeEnumTagSinglePayload for AccessibleTextVibrancy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D5B0C0 + 4 * byte_1D2DA4CD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D5B0F4 + 4 * byte_1D2DA4CD0[v4]))();
}

uint64_t sub_1D2D5B0F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5B0FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D5B104);
  return result;
}

uint64_t sub_1D2D5B110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D5B118);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D5B11C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5B124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibleTextVibrancy()
{
  return &type metadata for AccessibleTextVibrancy;
}

uint64_t getEnumTagSinglePayload for TranslationOverlay.OverlayMetrics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationOverlay.OverlayMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationOverlay.OverlayMetrics()
{
  return &type metadata for TranslationOverlay.OverlayMetrics;
}

unint64_t sub_1D2D5B1F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA85D8;
  if (!qword_1EFCA85D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84C0);
    v2[0] = sub_1D2D5B274();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8638, &qword_1EFCA8640, MEMORY[0x1E0CDC940]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA85D8);
  }
  return result;
}

unint64_t sub_1D2D5B274()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA85E0;
  if (!qword_1EFCA85E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84B8);
    v2[0] = sub_1D2D5B2F8();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8628, &qword_1EFCA8630, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA85E0);
  }
  return result;
}

unint64_t sub_1D2D5B2F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA85E8;
  if (!qword_1EFCA85E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84B0);
    v2[0] = sub_1D2D5B37C();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8618, &qword_1EFCA8620, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA85E8);
  }
  return result;
}

unint64_t sub_1D2D5B37C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA85F0;
  if (!qword_1EFCA85F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84A8);
    v2[0] = sub_1D2D5B400();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8608, &qword_1EFCA8610, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA85F0);
  }
  return result;
}

unint64_t sub_1D2D5B400()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFCA85F8;
  if (!qword_1EFCA85F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84A0);
    v2 = sub_1D2D5B464();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA85F8);
  }
  return result;
}

unint64_t sub_1D2D5B464()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EFCA8600;
  if (!qword_1EFCA8600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8508);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA84F8);
    v2[3] = sub_1D2CCE538(&qword_1EFCA8568, &qword_1EFCA84F8, sub_1D2D5AC60, MEMORY[0x1E0CD8D70]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x1E0CD8DA8];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8600);
  }
  return result;
}

uint64_t sub_1D2D5B520()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D2D5B530()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8670;
  if (!qword_1EFCA8670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8658);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA8678, &qword_1EFCA8660, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA6580, &qword_1EFCA6588, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8670);
  }
  return result;
}

unint64_t sub_1D2D5B5CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8680;
  if (!qword_1EFCA8680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8648);
    v2[0] = sub_1D2D5B650();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8690, &qword_1EFCA8698, MEMORY[0x1E0CD9D60]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8680);
  }
  return result;
}

unint64_t sub_1D2D5B650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8688;
  if (!qword_1EFCA8688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8668);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA8678, &qword_1EFCA8660, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA5AA8, &qword_1EFCA5AB0, MEMORY[0x1E0CDC718]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8688);
  }
  return result;
}

unint64_t sub_1D2D5B6F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA86A0;
  if (!qword_1EFCA86A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA86A8);
    v2[0] = sub_1D2D5B530();
    v2[1] = sub_1D2D5B5CC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA86A0);
  }
  return result;
}

uint64_t sub_1D2D5B764@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v46 = a1;
  v50 = a2;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA86E0);
  v42 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA86E8);
  MEMORY[0x1E0C80A78](v48);
  v49 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9DAB8();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D2D9CDF8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (double *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA86F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA86F8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8700);
  MEMORY[0x1E0C80A78](v41);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8708);
  MEMORY[0x1E0C80A78](v47);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v40 - v23;
  if ((v46 & 1) != 0)
  {
    v25 = (char *)v11 + *(int *)(v9 + 20);
    v26 = *MEMORY[0x1E0CDB0C0];
    v27 = sub_1D2D9D0EC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
    *v11 = a3;
    v11[1] = a3;
    v28 = sub_1D2D9D80C();
    sub_1D2CDCC78((uint64_t)v11, (uint64_t)v14);
    *(_QWORD *)&v14[*(int *)(v12 + 52)] = v28;
    *(_WORD *)&v14[*(int *)(v12 + 56)] = 256;
    sub_1D2CDCCBC((uint64_t)v11);
    sub_1D2D9D7F4();
    v29 = sub_1D2D9D818();
    swift_release();
    sub_1D2CCAD60((uint64_t)v14, (uint64_t)v17, &qword_1EFCA86F0);
    v30 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v30 = v29;
    *(_OWORD *)(v30 + 8) = xmmword_1D2DA5080;
    *((_QWORD *)v30 + 3) = 0x4014000000000000;
    sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA86F0);
    sub_1D2D9D7F4();
    v31 = sub_1D2D9D818();
    swift_release();
    sub_1D2CCAD60((uint64_t)v17, (uint64_t)v19, &qword_1EFCA86F8);
    v32 = &v19[*(int *)(v41 + 36)];
    *(_QWORD *)v32 = v31;
    *(_OWORD *)(v32 + 8) = xmmword_1D2DA5090;
    *((_QWORD *)v32 + 3) = 0x3FF0000000000000;
    sub_1D2CCADA4((uint64_t)v17, &qword_1EFCA86F8);
    v34 = v43;
    v33 = v44;
    v35 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E0CE03C0], v45);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(&v21[*(int *)(v47 + 36)], v34, v35);
    sub_1D2CCAD60((uint64_t)v19, (uint64_t)v21, &qword_1EFCA8700);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    sub_1D2CCADA4((uint64_t)v19, &qword_1EFCA8700);
    sub_1D2D5C318((uint64_t)v21, (uint64_t)v24);
    sub_1D2CCAD60((uint64_t)v24, v49, &qword_1EFCA8708);
    swift_storeEnumTagMultiPayload();
    sub_1D2CCE538(&qword_1EFCA8710, &qword_1EFCA8708, sub_1D2D5C270, MEMORY[0x1E0CDA1C0]);
    sub_1D2CC6C74(&qword_1EFCA8730, &qword_1EFCA86E0, MEMORY[0x1E0CD8D48]);
    sub_1D2D9D1E8();
    return sub_1D2CCADA4((uint64_t)v24, &qword_1EFCA8708);
  }
  else
  {
    type metadata accessor for TranslationOverlayShadowLayer();
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 0;
    *(double *)(v37 + 24) = a3;
    sub_1D2D9CBDC();
    v38 = v42;
    v39 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v49, v5, v51);
    swift_storeEnumTagMultiPayload();
    sub_1D2CCE538(&qword_1EFCA8710, &qword_1EFCA8708, sub_1D2D5C270, MEMORY[0x1E0CDA1C0]);
    sub_1D2CC6C74(&qword_1EFCA8730, &qword_1EFCA86E0, MEMORY[0x1E0CD8D48]);
    sub_1D2D9D1E8();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v5, v39);
  }
}

void sub_1D2D5BCEC(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  CGColorRef GenericGray;
  double v7;
  uint64_t v8;
  id v9;
  CGColorRef v10;
  double v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v2 = v1;
  if (a1 > 0.0)
  {
    objc_msgSend(v1, sel_setCornerRadius_);
    v4 = *MEMORY[0x1E0CD2A68];
    objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);
    v5 = OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer], sel_setCornerRadius_, a1);
    objc_msgSend(*(id *)&v2[v5], sel_setCornerCurve_, v4);
  }
  objc_msgSend(v2, sel_setShadowPathIsBounds_, 1);
  GenericGray = CGColorCreateGenericGray(0.0, 0.1);
  objc_msgSend(v2, sel_setShadowColor_, GenericGray);

  objc_msgSend(v2, sel_setShadowOffset_, 0.0, 5.0);
  objc_msgSend(v2, sel_setShadowRadius_, 10.0);
  LODWORD(v7) = 1.0;
  objc_msgSend(v2, sel_setShadowOpacity_, v7);
  v8 = OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer], sel_setShadowPathIsBounds_, 1);
  v9 = *(id *)&v2[v8];
  v10 = CGColorCreateGenericGray(0.0, 0.1);
  objc_msgSend(v9, sel_setShadowColor_, v10);

  objc_msgSend(*(id *)&v2[v8], sel_setShadowOffset_, 0.0, 1.0);
  objc_msgSend(*(id *)&v2[v8], sel_setShadowRadius_, 2.0);
  LODWORD(v11) = 1.0;
  objc_msgSend(*(id *)&v2[v8], sel_setShadowOpacity_, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D2DA3B40;
  v13 = *(void **)&v2[v8];
  *(_QWORD *)(v12 + 32) = v13;
  sub_1D2D9DE78();
  sub_1D2D5C360();
  v14 = v13;
  v15 = (id)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSublayers_, v15);

}

uint64_t sub_1D2D5BF18@<X0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_1D2D5B764(*(unsigned __int8 *)v1, a1, v1[1]);
}

uint64_t type metadata accessor for TranslationOverlayShadowLayer()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TranslationOverlayShadow()
{
  return &type metadata for TranslationOverlayShadow;
}

uint64_t sub_1D2D5C22C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D5C23C()
{
  return swift_deallocObject();
}

void sub_1D2D5C24C()
{
  uint64_t v0;

  sub_1D2D5BCEC(*(double *)(v0 + 24));
}

uint64_t sub_1D2D5C270()
{
  return sub_1D2CCE538(&qword_1EFCA8718, &qword_1EFCA8700, (uint64_t (*)(void))sub_1D2D5C294, MEMORY[0x1E0CD9100]);
}

unint64_t sub_1D2D5C294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8720;
  if (!qword_1EFCA8720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA86F8);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA8728, &qword_1EFCA86F0, MEMORY[0x1E0CD8668]);
    v2[1] = MEMORY[0x1E0CD9100];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8720);
  }
  return result;
}

uint64_t sub_1D2D5C318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2D5C360()
{
  unint64_t result;

  result = qword_1EFCA8248;
  if (!qword_1EFCA8248)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA8248);
  }
  return result;
}

unint64_t sub_1D2D5C3A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8738;
  if (!qword_1EFCA8738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8740);
    v2[0] = sub_1D2CCE538(&qword_1EFCA8710, &qword_1EFCA8708, sub_1D2D5C270, MEMORY[0x1E0CDA1C0]);
    v2[1] = sub_1D2CC6C74(&qword_1EFCA8730, &qword_1EFCA86E0, MEMORY[0x1E0CD8D48]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8738);
  }
  return result;
}

uint64_t TranslationUIErrorCodes.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "error code: ");
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t TranslationUIErrorCodes.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

TranslationUI::TranslationUIErrorCodes_optional __swiftcall TranslationUIErrorCodes.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 0xC)
    v2 = 12;
  *v1 = v2;
  return (TranslationUI::TranslationUIErrorCodes_optional)rawValue;
}

void *static TranslationUIErrorCodes.allCases.getter()
{
  return &unk_1E9448400;
}

uint64_t sub_1D2D5C4F0()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D5C534()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2D5C560()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

TranslationUI::TranslationUIErrorCodes_optional sub_1D2D5C5A0(Swift::Int *a1)
{
  return TranslationUIErrorCodes.init(rawValue:)(*a1);
}

void sub_1D2D5C5A8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_1D2D5C5B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E9448400;
}

uint64_t sub_1D2D5C5C8()
{
  _QWORD v1[2];

  strcpy((char *)v1, "error code: ");
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t TranslationUIErrorInfoKey.string.getter()
{
  return 0xD000000000000018;
}

unint64_t TranslationUIErrorInfoKey.rawValue.getter()
{
  return 0xD000000000000018;
}

unint64_t TranslationUIErrorInfoKey.description.getter()
{
  return 0xD000000000000018;
}

TranslationUI::TranslationUIErrorInfoKey_optional __swiftcall TranslationUIErrorInfoKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  TranslationUI::TranslationUIErrorInfoKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D2D9E3F4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static TranslationUIErrorInfoKey.allCases.getter()
{
  return &unk_1E9448480;
}

uint64_t sub_1D2D5C740(char *a1, char *a2)
{
  return sub_1D2D2CC68(*a1, *a2);
}

uint64_t sub_1D2D5C74C()
{
  return sub_1D2D692C8();
}

uint64_t sub_1D2D5C754()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D5C7AC()
{
  return sub_1D2D701AC();
}

TranslationUI::TranslationUIErrorInfoKey_optional sub_1D2D5C7B4(Swift::String *a1)
{
  return TranslationUIErrorInfoKey.init(rawValue:)(*a1);
}

void sub_1D2D5C7C0(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000001D2DA7880;
  if (*v1)
    v2 = 0x80000001D2DA78A0;
  *a1 = 0xD000000000000018;
  a1[1] = v2;
}

void sub_1D2D5C7FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E94484A8;
}

unint64_t sub_1D2D5C80C()
{
  return 0xD000000000000018;
}

void sub_1D2D5C83C(char *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  char *v51;
  const char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint32_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  char *v71;
  const char *v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(_QWORD, _QWORD, _QWORD);
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  int v91;
  uint64_t v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char v107;
  void (*v108)(_QWORD, _QWORD);
  char v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  id v115;
  char *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char isUniquelyReferenced_nonNull_native;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  NSObject *v130;
  os_log_type_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  id v136;
  void *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  id v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t *v146;
  os_log_type_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  unint64_t *v165;
  uint64_t v166;
  _OWORD v167[2];
  __int128 v168;
  unint64_t v169;

  v165 = a2;
  v3 = sub_1D2D9C810();
  v159 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v156 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_1EFCA8830);
  MEMORY[0x1E0C80A78](v158);
  v6 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_1EFCA8838);
  MEMORY[0x1E0C80A78](v7);
  v162 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8840);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v154 - v13;
  MEMORY[0x1E0C80A78](v15);
  v164 = (char *)&v154 - v16;
  v17 = sub_1D2CCF4A8(MEMORY[0x1E0DEE9D8]);
  if (qword_1EFCA54B8 != -1)
    swift_once();
  v18 = sub_1D2D9C8F4();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EFCB2630);
  v20 = a1;
  v21 = sub_1D2D9C8DC();
  v22 = sub_1D2D9E04C();
  v23 = os_log_type_enabled(v21, v22);
  v160 = v6;
  v161 = v3;
  v157 = v11;
  v163 = v14;
  if (v23)
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = v17;
    v26 = v19;
    v27 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v24 = 138412290;
    v28 = sub_1D2D9C5F4();
    *(_QWORD *)&v168 = v28;
    sub_1D2D9E1B4();
    *v27 = v28;

    _os_log_impl(&dword_1D2CC0000, v21, v22, "Showing TranslationUIError for error: %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    v29 = v27;
    v19 = v26;
    v17 = v25;
    MEMORY[0x1D8248974](v29, -1, -1);
    MEMORY[0x1D8248974](v24, -1, -1);
  }
  else
  {

  }
  v30 = (char *)sub_1D2D9C5F4();
  v31 = objc_msgSend(v30, sel_domain);
  v32 = sub_1D2D9DCD4();
  v34 = v33;

  if (v32 == 0xD000000000000017 && v34 == 0x80000001D2DA9980 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v167[0] = a1;
    v35 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587378);
    if ((swift_dynamicCast() & 1) != 0)
    {

      LOBYTE(v36) = v168;
      v37 = BYTE1(v168);
      v38 = *((_QWORD *)&v168 + 1);
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    v155 = v17;
    v164 = v30;
    v39 = v30;
    v40 = sub_1D2D9C8DC();
    v41 = sub_1D2D9E034();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v162 = (char *)v19;
      v44 = (_QWORD *)v43;
      v45 = swift_slowAlloc();
      *(_QWORD *)&v168 = v45;
      *(_DWORD *)v42 = 136446722;
      v46 = objc_msgSend(v39, sel_domain);
      v47 = sub_1D2D9DCD4();
      v163 = a1;
      v49 = v48;

      *(_QWORD *)&v167[0] = sub_1D2CF78E0(v47, v49, (uint64_t *)&v168);
      sub_1D2D9E1B4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      v50 = objc_msgSend(v39, sel_code);

      *(_QWORD *)&v167[0] = v50;
      sub_1D2D9E1B4();

      *(_WORD *)(v42 + 22) = 2112;
      *(_QWORD *)&v167[0] = v39;
      v51 = v39;
      sub_1D2D9E1B4();
      *v44 = v39;

      a1 = v163;
      v52 = "Trying to show a mismatched error domain domain: %{public}s code: %ld; error: %@";
      v53 = v40;
      v54 = v41;
      v55 = (uint8_t *)v42;
      v56 = 32;
LABEL_13:
      _os_log_impl(&dword_1D2CC0000, v53, v54, v52, v55, v56);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v44, -1, -1);
      swift_arrayDestroy();
      v57 = v45;
LABEL_14:
      MEMORY[0x1D8248974](v57, -1, -1);
      MEMORY[0x1D8248974](v42, -1, -1);

LABEL_61:
      v36 = 11;
LABEL_62:
      v30 = v164;
      goto LABEL_63;
    }
    goto LABEL_59;
  }
  if (sub_1D2D9DCD4() == v32 && v58 == v34)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v59 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  if ((v59 & 1) != 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v36 = 3;
    switch((unint64_t)objc_msgSend(v30, sel_code))
    {
      case 5uLL:
      case 0x10uLL:
        goto LABEL_63;
      case 0xAuLL:
        v36 = 10;
        break;
      case 0xEuLL:
        v36 = 9;
        break;
      default:
        v155 = v17;
        v164 = v30;
        v39 = v30;
        v40 = sub_1D2D9C8DC();
        v63 = sub_1D2D9E034();
        if (!os_log_type_enabled(v40, v63))
          goto LABEL_59;
        v42 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        v162 = (char *)v19;
        v65 = (_QWORD *)v64;
        v161 = swift_slowAlloc();
        *(_QWORD *)&v168 = v161;
        *(_DWORD *)v42 = 136446722;
        v66 = objc_msgSend(v39, sel_domain);
        v67 = sub_1D2D9DCD4();
        v163 = a1;
        v69 = v68;

        *(_QWORD *)&v167[0] = sub_1D2CF78E0(v67, v69, (uint64_t *)&v168);
        sub_1D2D9E1B4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2048;
        v70 = objc_msgSend(v39, sel_code);

        *(_QWORD *)&v167[0] = v70;
        sub_1D2D9E1B4();

        *(_WORD *)(v42 + 22) = 2112;
        *(_QWORD *)&v167[0] = v39;
        v71 = v39;
        sub_1D2D9E1B4();
        *v65 = v39;

        a1 = v163;
        v72 = "Got an unhandled error domain to show: %{public}s code: %ld; error: %@";
        goto LABEL_26;
    }
    goto LABEL_63;
  }
  v60 = sub_1D2D9DCD4();
  v155 = v17;
  if (v60 == v32 && v61 == v34)
  {
    swift_bridgeObjectRelease();
    v62 = (uint64_t)v162;
    goto LABEL_29;
  }
  v74 = sub_1D2D9E52C();
  swift_bridgeObjectRelease();
  v62 = (uint64_t)v162;
  if ((v74 & 1) != 0)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v168 = a1;
    v75 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587378);
    v76 = sub_1D2D9C828();
    v77 = swift_dynamicCast();
    v78 = *(_QWORD *)(v76 - 8);
    v79 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v78 + 56);
    if ((v77 & 1) != 0)
    {
      v79(v62, 0, 1, v76);
      v80 = (uint64_t)v164;
      sub_1D2D9C81C();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v62, v76);
      v81 = v161;
      v82 = v159;
    }
    else
    {
      v79(v62, 1, 1, v76);
      sub_1D2CCADA4(v62, (uint64_t *)&qword_1EFCA8838);
      v82 = v159;
      v80 = (uint64_t)v164;
      v81 = v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v164, 1, 1, v161);
    }
    v83 = (uint64_t)v163;
    (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v163, *MEMORY[0x1E0CB14B0], v81);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v83, 0, 1, v81);
    v84 = (uint64_t)v160;
    v85 = (uint64_t)&v160[*(int *)(v158 + 48)];
    sub_1D2D5EF24(v80, (uint64_t)v160);
    sub_1D2D5EF24(v83, v85);
    v86 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v82 + 48);
    if (v86(v84, 1, v81) == 1)
    {
      sub_1D2CCADA4(v83, &qword_1EFCA8840);
      sub_1D2CCADA4(v80, &qword_1EFCA8840);
      v87 = v84;
      if (v86(v85, 1, v81) == 1)
      {
        sub_1D2CCADA4(v84, &qword_1EFCA8840);
        v36 = 4;
        goto LABEL_63;
      }
    }
    else
    {
      v88 = (uint64_t)v157;
      sub_1D2D5EF24(v84, (uint64_t)v157);
      v87 = v84;
      if (v86(v85, 1, v81) != 1)
      {
        v106 = v156;
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v156, v85, v81);
        sub_1D2CC66E4((unint64_t *)&qword_1EFCA8850, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB14B8], MEMORY[0x1E0CB14C8]);
        v107 = sub_1D2D9DC8C();
        v108 = *(void (**)(_QWORD, _QWORD))(v82 + 8);
        v108(v106, v81);
        sub_1D2CCADA4((uint64_t)v163, &qword_1EFCA8840);
        sub_1D2CCADA4((uint64_t)v164, &qword_1EFCA8840);
        v108(v88, v81);
        sub_1D2CCADA4(v87, &qword_1EFCA8840);
        if ((v107 & 1) != 0)
        {
          v36 = 4;
          goto LABEL_63;
        }
LABEL_38:
        if (objc_msgSend(v30, sel_code) == (id)-1009)
        {
          v89 = sub_1D2CC74AC();
          if (v89 == 2)
          {
            v90 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFA9B8]), sel_init);
            v91 = objc_msgSend(v90, sel_airplaneMode);

          }
          else
          {
            v91 = v89 & 1;
          }
          if (v91)
            v36 = 5;
          else
            v36 = 6;
          goto LABEL_63;
        }
        v164 = v30;
        v93 = v30;
        v94 = sub_1D2D9C8DC();
        v95 = sub_1D2D9E034();
        if (os_log_type_enabled(v94, v95))
        {
          v96 = swift_slowAlloc();
          v97 = swift_slowAlloc();
          v162 = (char *)v19;
          v98 = (_QWORD *)v97;
          v161 = swift_slowAlloc();
          *(_QWORD *)&v168 = v161;
          *(_DWORD *)v96 = 136446722;
          v99 = objc_msgSend(v93, sel_domain);
          v100 = sub_1D2D9DCD4();
          v163 = a1;
          v102 = v101;

          *(_QWORD *)&v167[0] = sub_1D2CF78E0(v100, v102, (uint64_t *)&v168);
          sub_1D2D9E1B4();

          swift_bridgeObjectRelease();
          *(_WORD *)(v96 + 12) = 2048;
          v103 = objc_msgSend(v93, sel_code);

          *(_QWORD *)&v167[0] = v103;
          sub_1D2D9E1B4();

          *(_WORD *)(v96 + 22) = 2112;
          *(_QWORD *)&v167[0] = v93;
          v104 = v93;
          sub_1D2D9E1B4();
          *v98 = v93;

          a1 = v163;
          _os_log_impl(&dword_1D2CC0000, v94, v95, "Trying to show an unhandled network error domain: %{public}s code: %ld; error: %@",
            (uint8_t *)v96,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
          swift_arrayDestroy();
          MEMORY[0x1D8248974](v98, -1, -1);
          v105 = v161;
          swift_arrayDestroy();
          MEMORY[0x1D8248974](v105, -1, -1);
          MEMORY[0x1D8248974](v96, -1, -1);

        }
        else
        {

        }
        v36 = 7;
        goto LABEL_62;
      }
      sub_1D2CCADA4((uint64_t)v163, &qword_1EFCA8840);
      sub_1D2CCADA4((uint64_t)v164, &qword_1EFCA8840);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v88, v81);
    }
    sub_1D2CCADA4(v87, (uint64_t *)&qword_1EFCA8830);
    goto LABEL_38;
  }
  if (sub_1D2D9DCD4() == v32 && v92 == v34)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v109 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v109 & 1) == 0)
    {
      v164 = v30;
      v39 = v30;
      v40 = sub_1D2D9C8DC();
      v147 = sub_1D2D9E034();
      if (os_log_type_enabled(v40, v147))
      {
        v42 = swift_slowAlloc();
        v148 = swift_slowAlloc();
        v162 = (char *)v19;
        v44 = (_QWORD *)v148;
        v45 = swift_slowAlloc();
        *(_QWORD *)&v168 = v45;
        *(_DWORD *)v42 = 136446466;
        v149 = objc_msgSend(v39, sel_domain);
        v150 = sub_1D2D9DCD4();
        v163 = a1;
        v152 = v151;

        *(_QWORD *)&v167[0] = sub_1D2CF78E0(v150, v152, (uint64_t *)&v168);
        sub_1D2D9E1B4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2112;
        *(_QWORD *)&v167[0] = v39;
        v153 = v39;
        sub_1D2D9E1B4();
        *v44 = v39;

        a1 = v163;
        v52 = "Trying to show an unhandled error domain %{public}s; error: %@";
        v53 = v40;
        v54 = v147;
        v55 = (uint8_t *)v42;
        v56 = 22;
        goto LABEL_13;
      }

LABEL_60:
      goto LABEL_61;
    }
  }
  if (objc_msgSend(v30, sel_code) != (id)561017449)
  {
    v164 = v30;
    v39 = v30;
    v40 = sub_1D2D9C8DC();
    v63 = sub_1D2D9E034();
    if (os_log_type_enabled(v40, v63))
    {
      v42 = swift_slowAlloc();
      v110 = swift_slowAlloc();
      v162 = (char *)v19;
      v65 = (_QWORD *)v110;
      v161 = swift_slowAlloc();
      *(_QWORD *)&v168 = v161;
      *(_DWORD *)v42 = 136446722;
      v111 = objc_msgSend(v39, sel_domain);
      v112 = sub_1D2D9DCD4();
      v163 = a1;
      v114 = v113;

      *(_QWORD *)&v167[0] = sub_1D2CF78E0(v112, v114, (uint64_t *)&v168);
      sub_1D2D9E1B4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      v115 = objc_msgSend(v39, sel_code);

      *(_QWORD *)&v167[0] = v115;
      sub_1D2D9E1B4();

      *(_WORD *)(v42 + 22) = 2112;
      *(_QWORD *)&v167[0] = v39;
      v116 = v39;
      sub_1D2D9E1B4();
      *v65 = v39;

      a1 = v163;
      v72 = "Trying to show an unhandled OS Status error: %{public}s code: %ld; error: %@";
LABEL_26:
      _os_log_impl(&dword_1D2CC0000, v40, v63, v72, (uint8_t *)v42, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v65, -1, -1);
      v73 = v161;
      swift_arrayDestroy();
      v57 = v73;
      goto LABEL_14;
    }
LABEL_59:

    goto LABEL_60;
  }
  v36 = 8;
LABEL_63:
  v117 = objc_msgSend(v30, sel_userInfo);
  v118 = MEMORY[0x1E0DEE9B8] + 8;
  v119 = sub_1D2D9DC2C();
  swift_bridgeObjectRelease();

  v120 = sub_1D2D9DCD4();
  v122 = v121;
  v169 = sub_1D2D5EEE8();
  *(_QWORD *)&v168 = v30;
  sub_1D2CD1FA4(&v168, v167);
  v123 = v30;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v166 = v119;
  sub_1D2D94218(v167, v120, v122, isUniquelyReferenced_nonNull_native);
  v38 = v166;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v125 = v123;
  v126 = a1;
  v127 = v125;
  v128 = a1;
  v129 = v127;
  v130 = sub_1D2D9C8DC();
  v131 = sub_1D2D9E04C();
  v132 = v131;
  if (os_log_type_enabled(v130, v131))
  {
    v133 = swift_slowAlloc();
    v134 = swift_slowAlloc();
    v164 = (char *)v36;
    v36 = v134;
    v162 = (char *)swift_slowAlloc();
    *(_QWORD *)&v167[0] = v162;
    *(_DWORD *)v133 = 136447234;
    LODWORD(v160) = v132;
    v135 = objc_msgSend(v129, sel_domain);
    v163 = (char *)v38;
    v136 = v135;
    v137 = a1;
    v138 = sub_1D2D9DCD4();
    v161 = v118;
    v140 = v139;

    *(_QWORD *)&v168 = sub_1D2CF78E0(v138, v140, (uint64_t *)v167);
    sub_1D2D9E1B4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v133 + 12) = 2048;
    v141 = objc_msgSend(v129, sel_code);

    *(_QWORD *)&v168 = v141;
    sub_1D2D9E1B4();

    *(_WORD *)(v133 + 22) = 2080;
    strcpy((char *)&v168, "error code: ");
    BYTE13(v168) = 0;
    HIWORD(v168) = -5120;
    v166 = ((_BYTE)v164 + 1);
    sub_1D2D9E508();
    sub_1D2D9DDA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v168 = sub_1D2CF78E0(v168, *((unint64_t *)&v168 + 1), (uint64_t *)v167);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v133 + 32) = 2112;
    *(_QWORD *)&v168 = v129;
    v142 = v129;
    sub_1D2D9E1B4();
    *(_QWORD *)v36 = v129;

    *(_WORD *)(v133 + 42) = 2112;
    v143 = sub_1D2D9C5F4();
    *(_QWORD *)&v168 = v143;
    v38 = (uint64_t)v163;
    sub_1D2D9E1B4();
    *(_QWORD *)(v36 + 8) = v143;

    _os_log_impl(&dword_1D2CC0000, v130, (os_log_type_t)v160, "Showing error UI for bridged error domain %{public}s code %ld to %s; NSError: %@; input error: %@",
      (uint8_t *)v133,
      0x34u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    v144 = v36;
    LOBYTE(v36) = (_BYTE)v164;
    MEMORY[0x1D8248974](v144, -1, -1);
    v145 = v162;
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v145, -1, -1);
    MEMORY[0x1D8248974](v133, -1, -1);

  }
  else
  {

  }
  v37 = v36;
LABEL_67:
  v146 = v165;
  *v165 = v36 | ((unint64_t)v37 << 8);
  v146[1] = v38;
}

uint64_t sub_1D2D5DE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = *(_QWORD *)(v0 + 8);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_1D2D9DDA0();
  sub_1D2D9DDA0();
  strcpy((char *)&v14, "error code: ");
  BYTE13(v14) = 0;
  HIWORD(v14) = -5120;
  *(_QWORD *)&v12 = v1 + 1;
  sub_1D2D9E508();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  v3 = sub_1D2D9DCD4();
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_1D2D64F2C(v3, v4), (v6 & 1) != 0))
  {
    sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v13 + 1))
  {
    sub_1D2CD1FA4(&v12, &v14);
  }
  else
  {
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v14 = 6369134;
    *((_QWORD *)&v14 + 1) = 0xE300000000000000;
    sub_1D2CCADA4((uint64_t)&v12, &qword_1ED5870C8);
  }
  sub_1D2D9E37C();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  sub_1D2D9DDA0();
  v7 = sub_1D2D9DCD4();
  if (*(_QWORD *)(v2 + 16) && (v9 = sub_1D2D64F2C(v7, v8), (v10 & 1) != 0))
  {
    sub_1D2CC80A4(*(_QWORD *)(v2 + 56) + 32 * v9, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v13 + 1))
  {
    sub_1D2CD1FA4(&v12, &v14);
  }
  else
  {
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v14 = 6369134;
    *((_QWORD *)&v14 + 1) = 0xE300000000000000;
    sub_1D2CCADA4((uint64_t)&v12, &qword_1ED5870C8);
  }
  sub_1D2D9E37C();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  sub_1D2D9DDA0();
  return v16;
}

uint64_t sub_1D2D5E0EC()
{
  sub_1D2D5F150();
  return sub_1D2D9E580();
}

uint64_t sub_1D2D5E114()
{
  sub_1D2D5F150();
  return sub_1D2D9E574();
}

void sub_1D2D5E13C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_1D2D5E148()
{
  return 0xD000000000000017;
}

uint64_t sub_1D2D5E168()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranslationUIErrorView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  v1 = type metadata accessor for TranslationUnavailableView(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8748);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranslationUnavailableViewPhone(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for TranslationUIErrorView() + 20)) == 1)
  {
    sub_1D2CDB6B4(v0, (uint64_t)v9, type metadata accessor for TranslationUnavailableModel);
    sub_1D2CDB6B4((uint64_t)v9, (uint64_t)v6, type metadata accessor for TranslationUnavailableViewPhone);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC66E4(&qword_1EFCA8750, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA5794);
    sub_1D2CC66E4(&qword_1EFCA8758, type metadata accessor for TranslationUnavailableView, (uint64_t)&unk_1D2DA5744);
    sub_1D2D9D1E8();
    v10 = (uint64_t)v9;
    v11 = type metadata accessor for TranslationUnavailableViewPhone;
  }
  else
  {
    sub_1D2CDB6B4(v0, (uint64_t)v3, type metadata accessor for TranslationUnavailableModel);
    sub_1D2CDB6B4((uint64_t)v3, (uint64_t)v6, type metadata accessor for TranslationUnavailableView);
    swift_storeEnumTagMultiPayload();
    sub_1D2CC66E4(&qword_1EFCA8750, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA5794);
    sub_1D2CC66E4(&qword_1EFCA8758, type metadata accessor for TranslationUnavailableView, (uint64_t)&unk_1D2DA5744);
    sub_1D2D9D1E8();
    v10 = (uint64_t)v3;
    v11 = type metadata accessor for TranslationUnavailableView;
  }
  return sub_1D2CD3734(v10, v11);
}

uint64_t type metadata accessor for TranslationUIErrorView()
{
  uint64_t result;

  result = qword_1EFCA87E8;
  if (!qword_1EFCA87E8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1D2D5E3E0()
{
  unint64_t result;

  result = qword_1EFCA8760;
  if (!qword_1EFCA8760)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslationUIErrorCodes, &type metadata for TranslationUIErrorCodes);
    atomic_store(result, (unint64_t *)&qword_1EFCA8760);
  }
  return result;
}

uint64_t sub_1D2D5E424()
{
  return sub_1D2D5E4B4(&qword_1EFCA8768, &qword_1EFCA8770);
}

unint64_t sub_1D2D5E44C()
{
  unint64_t result;

  result = qword_1EFCA8778;
  if (!qword_1EFCA8778)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslationUIErrorInfoKey, &type metadata for TranslationUIErrorInfoKey);
    atomic_store(result, (unint64_t *)&qword_1EFCA8778);
  }
  return result;
}

uint64_t sub_1D2D5E490()
{
  return sub_1D2D5E4B4(&qword_1EFCA8780, &qword_1EFCA8788);
}

uint64_t sub_1D2D5E4B4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2D5E4F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for TranslationUIErrorCodes(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationUIErrorCodes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D2D5E5E4 + 4 * byte_1D2DA5145[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D2D5E618 + 4 * byte_1D2DA5140[v4]))();
}

uint64_t sub_1D2D5E618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5E620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D5E628);
  return result;
}

uint64_t sub_1D2D5E634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D5E63CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D2D5E640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5E648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIErrorCodes()
{
  return &type metadata for TranslationUIErrorCodes;
}

uint64_t storeEnumTagSinglePayload for TranslationUIErrorInfoKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D5E6B0 + 4 * byte_1D2DA514F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D5E6E4 + 4 * byte_1D2DA514A[v4]))();
}

uint64_t sub_1D2D5E6E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5E6EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D5E6F4);
  return result;
}

uint64_t sub_1D2D5E700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D5E708);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D5E70C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D5E714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIErrorInfoKey()
{
  return &type metadata for TranslationUIErrorInfoKey;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranslationUIErrorView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for TranslationUnavailableModel(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = v8[6];
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[7];
    v19 = (_QWORD *)((char *)v4 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v8[8];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v8[9];
    v27 = (_QWORD *)((char *)v4 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TranslationUIErrorView(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v7[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v7[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v7[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v7[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v7[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v7[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  swift_release();
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationUIErrorView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D5ECC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TranslationUnavailableModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranslationUIErrorView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D5ED60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TranslationUnavailableModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1D2D5EDD8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranslationUnavailableModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1D2D5EE4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8820;
  if (!qword_1EFCA8820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8828);
    v2[0] = sub_1D2CC66E4(&qword_1EFCA8750, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA5794);
    v2[1] = sub_1D2CC66E4(&qword_1EFCA8758, type metadata accessor for TranslationUnavailableView, (uint64_t)&unk_1D2DA5744);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8820);
  }
  return result;
}

unint64_t sub_1D2D5EEE8()
{
  unint64_t result;

  result = qword_1EFCA8848;
  if (!qword_1EFCA8848)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA8848);
  }
  return result;
}

uint64_t sub_1D2D5EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for TranslationUIError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13TranslationUI18TranslationUIErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranslationUIError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranslationUIError(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationUIError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationUIError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIError()
{
  return &type metadata for TranslationUIError;
}

unint64_t sub_1D2D5F0C4()
{
  unint64_t result;

  result = qword_1EFCA8858;
  if (!qword_1EFCA8858)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA553C, &type metadata for TranslationUIError);
    atomic_store(result, (unint64_t *)&qword_1EFCA8858);
  }
  return result;
}

unint64_t sub_1D2D5F10C()
{
  unint64_t result;

  result = qword_1EFCA8860;
  if (!qword_1EFCA8860)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for TranslationUIErrorCodes, &type metadata for TranslationUIErrorCodes);
    atomic_store(result, (unint64_t *)&qword_1EFCA8860);
  }
  return result;
}

unint64_t sub_1D2D5F150()
{
  unint64_t result;

  result = qword_1EFCA8868;
  if (!qword_1EFCA8868)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA549C, &type metadata for TranslationUIError);
    atomic_store(result, (unint64_t *)&qword_1EFCA8868);
  }
  return result;
}

void sub_1D2D5F194(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t inited;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v23[9];
  uint64_t v24;

  v2 = 0xD000000000000042;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9C648();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C63C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2CCADA4((uint64_t)v5, (uint64_t *)&unk_1ED586240);
    if (qword_1ED587858 != -1)
      swift_once();
    v10 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED5886E8);
    v11 = sub_1D2D9C8DC();
    v12 = sub_1D2D9E040();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v24 = v14;
      *(_DWORD *)v13 = 136315138;
      if (a1)
      {
        if (a1 == 1)
        {
          v15 = 0x80000001D2DA8810;
        }
        else
        {
          v2 = 0xD000000000000028;
          v15 = 0x80000001D2DA9BC0;
        }
      }
      else
      {
        v15 = 0x80000001D2DA9BF0;
      }
      v23[8] = sub_1D2CF78E0(v2, v15, &v24);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2CC0000, v11, v12, "Failed to create URL for launching: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v14, -1, -1);
      MEMORY[0x1D8248974](v13, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA8B18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
    *(_QWORD *)(inited + 32) = sub_1D2D9DCD4();
    *(_QWORD *)(inited + 40) = v17;
    *(_BYTE *)(inited + 48) = 1;
    v18 = sub_1D2CCF708(inited);
    v19 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v19)
    {
      v20 = v19;
      v21 = (void *)sub_1D2D9C60C();
      sub_1D2D63E64(v18);
      swift_bridgeObjectRelease();
      v22 = (void *)sub_1D2D9DC20();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, v22);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1D2D5F554(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[8];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v4 = sub_1D2D9C7EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28[4] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v28[6] = (char *)v28 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  v29 = type metadata accessor for TranslationUnavailableState(0);
  MEMORY[0x1E0C80A78](v29);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v30 = a1[1];
  v15 = *((_QWORD *)a1 + 1);
  if (qword_1ED587858 != -1)
    swift_once();
  v16 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED5886E8);
  swift_bridgeObjectRetain_n();
  v17 = sub_1D2D9C8DC();
  v18 = v15;
  v19 = sub_1D2D9E01C();
  v20 = os_log_type_enabled(v17, v19);
  v28[7] = v11;
  v28[5] = v5;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v28[3] = a2;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v28[2] = v13;
    v24 = (_QWORD *)v23;
    v28[1] = v4;
    *(_DWORD *)v22 = 138412290;
    sub_1D2D5F0C4();
    v25 = (void *)swift_allocError();
    *(_BYTE *)v26 = v14;
    *(_BYTE *)(v26 + 1) = v30;
    *(_QWORD *)(v26 + 8) = v18;
    swift_bridgeObjectRetain();
    v27 = sub_1D2D9C5F4();

    *(_QWORD *)&v31 = v27;
    sub_1D2D9E1B4();
    *v24 = v27;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2CC0000, v17, v19, "Create unavailable state for error %@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v24, -1, -1);
    MEMORY[0x1D8248974](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  __asm { BR              X9 }
}

void sub_1D2D5FC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = sub_1D2D9C7EC();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for LocalePair();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for TranslationUnavailableState(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CDB6B4(v0, (uint64_t)v5, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v8 = (char *)&loc_1D2D5FD34
     + dword_1D2D60744[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 4, v7)];
  __asm { BR              X10 }
}

uint64_t sub_1D2D5FD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  _QWORD *v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t *v33;
  void (**v34)();

  sub_1D2CD1FD4(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v7 = Locale.sqDisplayName(context:in:)(3, v3);
  v9 = v8;
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v3, v2);
  if (v9)
    v11 = v7;
  else
    v11 = 0x45474155474E414CLL;
  *(_QWORD *)(v6 - 104) = v11;
  if (!v9)
    v9 = 0xE800000000000000;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v12 = Locale.sqDisplayName(context:in:)(3, v3);
  v14 = v13;
  v10(v3, v2);
  if (v14)
    v15 = v12;
  else
    v15 = 0x45474155474E414CLL;
  if (!v14)
    v14 = 0xE800000000000000;
  if (qword_1EFCA54E0 != -1)
    swift_once();
  sub_1D2D9C5E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6238);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D2DA0CB0;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1D2CE007C();
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v6 - 104);
  *(_QWORD *)(v16 + 40) = v9;
  *(_QWORD *)(v16 + 96) = v17;
  *(_QWORD *)(v16 + 104) = v18;
  *(_QWORD *)(v16 + 64) = v18;
  *(_QWORD *)(v16 + 72) = v15;
  *(_QWORD *)(v16 + 80) = v14;
  *(_QWORD *)(v6 - 104) = sub_1D2D9DCF8();
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = sub_1D2D9C5E8();
  v23 = v22;
  v24 = (void *)sub_1D2D9DCB0();
  v25 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1D2D9DCD4();
  v26 = sub_1D2D9C5E8();
  v28 = v27;
  swift_bridgeObjectRelease();
  sub_1D2D9C6F0();
  v29 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v30 = (_QWORD *)(v0 + v29[5]);
  *v30 = 0xD000000000000014;
  v30[1] = 0x80000001D2DA9B60;
  v31 = (uint64_t *)(v0 + v29[6]);
  *v31 = v21;
  v31[1] = v23;
  v32 = (_QWORD *)(v0 + v29[7]);
  *v32 = *(_QWORD *)(v6 - 104);
  v32[1] = v20;
  v33 = (uint64_t *)(v0 + v29[8]);
  *v33 = v26;
  v33[1] = v28;
  v34 = (void (**)())(v0 + v29[9]);
  *v34 = sub_1D2D60768;
  v34[1] = 0;
  return sub_1D2CD3734(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
}

void sub_1D2D60758()
{
  sub_1D2D5F194(0);
}

void sub_1D2D60760()
{
  sub_1D2D5F194(1);
}

void sub_1D2D60768()
{
  sub_1D2D5F194(2);
}

uint64_t sub_1D2D60774()
{
  sub_1D2D9E2EC();
  swift_bridgeObjectRelease();
  type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  swift_bridgeObjectRetain();
  sub_1D2D9DDA0();
  swift_bridgeObjectRelease();
  sub_1D2D9DDA0();
  return 91;
}

uint64_t sub_1D2D608D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id sub_1D2D6090C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for TranslationUnavailableResource();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EFCA8870 = (uint64_t)result;
  return result;
}

uint64_t sub_1D2D60960()
{
  return swift_deallocClassInstance();
}

id sub_1D2D60970(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12[5];
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for SecureContentUnavailableViewController();
  v3 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v5 = v3;
  v6 = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setView_, v6);

  result = objc_msgSend(v5, sel_view);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    v9 = sub_1D2D9C954();
    v12[3] = v9;
    v12[4] = MEMORY[0x1E0DC26F0];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    v11 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_1, a1, v9);
    sub_1D2D9E058();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v9);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SecureContentUnavailableViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureContentUnavailableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SecureContentUnavailableViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TranslationUnavailableResource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SecureContentUnavailableViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1D2D60BD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)v4 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D2D60CD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D2D60D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2D60E34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2D60F58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1D2D60FDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_1D2D610B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D610C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D2D61140()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D6114C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TranslationUnavailableModel(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1ED586400);
}

uint64_t sub_1D2D611DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C6FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2D61278()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D61288()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranslationUnavailableViewPhone(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA8998);
}

_QWORD *sub_1D2D612B0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for TranslationUnavailableModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = v28;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1D2D9C6FC();
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v6[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v6[7];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[8];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v6[9];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D2D613C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  v11 = v5[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v5[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v5[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v5[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2D614A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = v5[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v5[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v5[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = v5[9];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2D615D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1D2D6165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v11 = v5[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = v5[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v5[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  swift_release();
  return a1;
}

uint64_t sub_1D2D6173C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranslationUnavailableModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D2D61788()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranslationUnavailableModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TranslationUnavailableView(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1EFCA8A28);
}

uint64_t sub_1D2D617EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranslationUnavailableModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2D61854()
{
  return sub_1D2CC66E4(&qword_1EFCA8750, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA5794);
}

void sub_1D2D61880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t ObjCClassFromMetadata;
  id v21;
  void *v22;
  id v23;
  void (*v24)(_BYTE *, _QWORD);
  unint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _QWORD);
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[32];

  v1 = v0;
  v2 = type metadata accessor for TranslationUnavailableViewPhone(0);
  v30 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C954();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1D2D9C930();
  v12 = type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_, v13);

  sub_1D2D9C93C();
  swift_bridgeObjectRetain();
  sub_1D2D9C924();
  swift_bridgeObjectRetain();
  sub_1D2D9C900();
  v15 = (uint64_t *)(v1 + *(int *)(v12 + 32));
  v16 = *v15;
  v17 = v15[1];
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v18)
    goto LABEL_6;
  v29 = v5;
  swift_bridgeObjectRetain();
  v19 = (void (*)(_BYTE *, _QWORD))sub_1D2D9C948();
  sub_1D2D9E178();
  v19(v31, 0);
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = (void *)sub_1D2D9DCB0();
  v23 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v22, v21, 0);

  if (v23)
  {
    v24 = (void (*)(_BYTE *, _QWORD))sub_1D2D9C948();
    sub_1D2D9E16C();
    v24(v31, 0);
    sub_1D2D6322C();
    sub_1D2CDB6B4(v1, (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranslationUnavailableViewPhone);
    v25 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v26 = swift_allocObject();
    sub_1D2CD1FD4((uint64_t)v4, v26 + v25, type metadata accessor for TranslationUnavailableViewPhone);
    sub_1D2D9E160();
    v27 = (void (*)(_BYTE *, _QWORD))sub_1D2D9C918();
    sub_1D2D9C90C();
    v27(v31, 0);
    v5 = v29;
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    v28 = objc_allocWithZone((Class)type metadata accessor for SecureContentUnavailableViewController());
    sub_1D2D60970((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return;
  }
  __break(1u);
}

uint64_t sub_1D2D61C34()
{
  return sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_1D2D61C60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D61C70()
{
  sub_1D2CC66E4(&qword_1EFCA8A60, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA566C);
  return sub_1D2D9D398();
}

uint64_t sub_1D2D61CD8()
{
  sub_1D2CC66E4(&qword_1EFCA8A60, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA566C);
  return sub_1D2D9D368();
}

void sub_1D2D61D40()
{
  sub_1D2CC66E4(&qword_1EFCA8A60, type metadata accessor for TranslationUnavailableViewPhone, (uint64_t)&unk_1D2DA566C);
  sub_1D2D9D38C();
  __break(1u);
}

uint64_t sub_1D2D61D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v38[7];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A68);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A78);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_1D2D9D110();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A80);
  sub_1D2D62008(v1, (uint64_t *)&v5[*(int *)(v12 + 44)]);
  sub_1D2D9DA70();
  sub_1D2D9CE10();
  sub_1D2CCAD60((uint64_t)v5, (uint64_t)v8, &qword_1EFCA8A68);
  v13 = &v8[*(int *)(v6 + 36)];
  v14 = v38[5];
  *((_OWORD *)v13 + 4) = v38[4];
  *((_OWORD *)v13 + 5) = v14;
  *((_OWORD *)v13 + 6) = v38[6];
  v15 = v38[1];
  *(_OWORD *)v13 = v38[0];
  *((_OWORD *)v13 + 1) = v15;
  v16 = v38[3];
  *((_OWORD *)v13 + 2) = v38[2];
  *((_OWORD *)v13 + 3) = v16;
  sub_1D2CCADA4((uint64_t)v5, &qword_1EFCA8A68);
  v17 = sub_1D2D9D440();
  sub_1D2D9CAF8();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_1D2CCAD60((uint64_t)v8, (uint64_t)v11, &qword_1EFCA8A70);
  v26 = &v11[*(int *)(v9 + 36)];
  *v26 = v17;
  *((_QWORD *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA8A70);
  v27 = sub_1D2D9D410();
  sub_1D2D9CAF8();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_1D2CCAD60((uint64_t)v11, a1, &qword_1EFCA8A78);
  v36 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A88) + 36);
  *(_BYTE *)v36 = v27;
  *(_QWORD *)(v36 + 8) = v29;
  *(_QWORD *)(v36 + 16) = v31;
  *(_QWORD *)(v36 + 24) = v33;
  *(_QWORD *)(v36 + 32) = v35;
  *(_BYTE *)(v36 + 40) = 0;
  return sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA8A78);
}

uint64_t sub_1D2D62008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t ObjCClassFromMetadata;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned __int8 v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  char *v133;
  uint64_t v134;
  char v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t KeyPath;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  void (*v180)(char *, uint64_t);
  void (*v181)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  void (*v183)(char *, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  _BYTE v209[7];
  uint64_t v210;
  __int16 v211;
  int v212;
  __int16 v213;
  uint64_t v214;
  char v215;
  _BYTE v216[7];
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char v221;
  _BYTE v222[7];
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  unsigned __int8 v229;
  uint64_t v230;
  unsigned __int8 v231;
  uint64_t v232;
  uint64_t v233;
  unsigned __int8 v234;
  _BYTE v235[7];
  _BYTE v236[7];
  int v237;
  __int16 v238;
  _BYTE v239[7];
  unsigned __int8 v240;

  v179 = a2;
  v3 = sub_1D2D9D248();
  v153 = *(_QWORD *)(v3 - 8);
  v154 = v3;
  MEMORY[0x1E0C80A78](v3);
  v152 = (char *)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5878);
  v147 = *(_QWORD *)(v5 - 8);
  v148 = v5;
  MEMORY[0x1E0C80A78](v5);
  v146 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A90);
  MEMORY[0x1E0C80A78](v149);
  v150 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8A98);
  v156 = *(_QWORD *)(v8 - 8);
  v157 = v8;
  MEMORY[0x1E0C80A78](v8);
  v155 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AA0);
  MEMORY[0x1E0C80A78](v151);
  v159 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AA8);
  MEMORY[0x1E0C80A78](v158);
  v161 = (uint64_t)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AB0);
  v13 = *(_QWORD *)(v12 - 8);
  v176 = v12;
  v177 = v13;
  MEMORY[0x1E0C80A78](v12);
  v160 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AB8);
  MEMORY[0x1E0C80A78](v15);
  v193 = (uint64_t)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v173 = (uint64_t)&v145 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8510);
  MEMORY[0x1E0C80A78](v19);
  v194 = (char *)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_1D2D9D500();
  v21 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v23 = (char *)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AC0);
  v189 = *(_QWORD *)(v191 - 8);
  MEMORY[0x1E0C80A78](v191);
  v186 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AC8);
  MEMORY[0x1E0C80A78](v188);
  v187 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AD0);
  MEMORY[0x1E0C80A78](v190);
  v196 = (uint64_t)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v195 = (uint64_t)&v145 - v28;
  v29 = sub_1D2D9D860();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TranslationUnavailableModel(0);
  v164 = v33;
  v165 = a1;
  swift_bridgeObjectRetain();
  sub_1D2D9D86C();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0CDF6F8], v29);
  v178 = sub_1D2D9D884();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v172 = v228;
  v171 = v229;
  v170 = v230;
  v169 = v231;
  v167 = v233;
  v168 = v232;
  v175 = sub_1D2D9D830();
  KeyPath = swift_getKeyPath();
  v34 = (uint64_t *)(a1 + *(int *)(v33 + 24));
  v35 = v34[1];
  v206 = *v34;
  v207 = v35;
  v162 = sub_1D2CD1430();
  swift_bridgeObjectRetain();
  v36 = sub_1D2D9D5CC();
  v185 = v37;
  v192 = v38;
  LOBYTE(a1) = v39 & 1;
  v40 = swift_getKeyPath();
  v41 = *MEMORY[0x1E0CDD7B0];
  v42 = v21;
  v183 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  v43 = v23;
  v44 = v184;
  v183(v23, v41, v184);
  v45 = sub_1D2D9D47C();
  v181 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v182 = v45;
  v46 = (uint64_t)v194;
  v181(v194, 1, 1, v45);
  v163 = v43;
  v47 = sub_1D2D9D4D0();
  sub_1D2CCADA4(v46, &qword_1EFCA8510);
  v180 = *(void (**)(char *, uint64_t))(v42 + 8);
  v180(v43, v44);
  v48 = swift_getKeyPath();
  v206 = v36;
  v49 = v185;
  v207 = v185;
  v208 = a1;
  v210 = v192;
  v211 = 256;
  v214 = v40;
  v215 = 1;
  v217 = v48;
  v218 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8AD8);
  sub_1D2D62F78();
  v50 = v186;
  sub_1D2D9D6EC();
  sub_1D2CCCAB4(v36, v49, a1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v51 = sub_1D2D9D824();
  v52 = swift_getKeyPath();
  v53 = v189;
  v54 = (uint64_t)v187;
  v55 = v191;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v187, v50, v191);
  v56 = (uint64_t *)(v54 + *(int *)(v188 + 36));
  *v56 = v52;
  v56[1] = v51;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v55);
  LOBYTE(v51) = sub_1D2D9D404();
  sub_1D2D9CAF8();
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v65 = v196;
  sub_1D2CCAD60(v54, v196, &qword_1EFCA8AC8);
  v66 = v65 + *(int *)(v190 + 36);
  *(_BYTE *)v66 = v51;
  *(_QWORD *)(v66 + 8) = v58;
  *(_QWORD *)(v66 + 16) = v60;
  *(_QWORD *)(v66 + 24) = v62;
  *(_QWORD *)(v66 + 32) = v64;
  *(_BYTE *)(v66 + 40) = 0;
  sub_1D2CCADA4(v54, &qword_1EFCA8AC8);
  sub_1D2CD2018(v65, v195, &qword_1EFCA8AD0);
  v68 = v164;
  v67 = v165;
  v69 = (uint64_t *)(v165 + *(int *)(v164 + 28));
  v70 = v69[1];
  v206 = *v69;
  v207 = v70;
  swift_bridgeObjectRetain();
  v71 = sub_1D2D9D5CC();
  v190 = v72;
  v191 = v71;
  LOBYTE(v51) = v73;
  v166 = v74;
  v192 = swift_getKeyPath();
  v75 = *MEMORY[0x1E0CDD790];
  v76 = v163;
  v77 = v184;
  v183(v163, v75, v184);
  v78 = (uint64_t)v194;
  v181(v194, 1, 1, v182);
  v189 = sub_1D2D9D4D0();
  sub_1D2CCADA4(v78, &qword_1EFCA8510);
  v180(v76, v77);
  v188 = swift_getKeyPath();
  v187 = (char *)sub_1D2D9D830();
  v186 = (char *)swift_getKeyPath();
  LODWORD(v185) = sub_1D2D9D404();
  sub_1D2D9CAF8();
  v80 = v79;
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v240 = v51 & 1;
  v234 = 0;
  v87 = (uint64_t *)(v67 + *(int *)(v68 + 32));
  v89 = *v87;
  v88 = v87[1];
  v90 = HIBYTE(v88) & 0xF;
  if ((v88 & 0x2000000000000000) == 0)
    v90 = v89 & 0xFFFFFFFFFFFFLL;
  if (v90)
  {
    v206 = v89;
    v207 = v88;
    swift_bridgeObjectRetain();
    swift_retain();
    v91 = v146;
    sub_1D2D9D908();
    v92 = swift_getKeyPath();
    v94 = v147;
    v93 = v148;
    v95 = (uint64_t)v150;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v150, v91, v148);
    v96 = v95 + *(int *)(v149 + 36);
    *(_QWORD *)v96 = v92;
    *(_BYTE *)(v96 + 8) = 1;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v93);
    v97 = v152;
    sub_1D2D9D23C();
    sub_1D2D63080();
    sub_1D2CC66E4(&qword_1EFCA8B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBC90], MEMORY[0x1E0CDBC70]);
    v98 = v155;
    v99 = v154;
    sub_1D2D9D614();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v97, v99);
    sub_1D2CCADA4(v95, &qword_1EFCA8A90);
    v183(v76, v75, v77);
    v100 = (uint64_t)v194;
    v181(v194, 1, 1, v182);
    v101 = sub_1D2D9D4D0();
    sub_1D2CCADA4(v100, &qword_1EFCA8510);
    v180(v76, v77);
    v102 = swift_getKeyPath();
    v104 = v156;
    v103 = v157;
    v105 = (uint64_t)v159;
    (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v159, v98, v157);
    v106 = (uint64_t *)(v105 + *(int *)(v151 + 36));
    *v106 = v102;
    v106[1] = v101;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v98, v103);
    type metadata accessor for _BundleObject();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v108 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v109 = sub_1D2D9D83C();
    v110 = swift_getKeyPath();
    v111 = v161;
    sub_1D2CCAD60(v105, v161, &qword_1EFCA8AA0);
    v112 = (uint64_t *)(v111 + *(int *)(v158 + 36));
    *v112 = v110;
    v112[1] = v109;
    sub_1D2CCADA4(v105, &qword_1EFCA8AA0);
    LOBYTE(v109) = sub_1D2D9D41C();
    sub_1D2D9CAF8();
    v114 = v113;
    v116 = v115;
    v118 = v117;
    v120 = v119;
    v121 = v160;
    sub_1D2CCAD60(v111, v160, &qword_1EFCA8AA8);
    v122 = v176;
    v123 = v121 + *(int *)(v176 + 36);
    *(_BYTE *)v123 = v109;
    *(_QWORD *)(v123 + 8) = v114;
    *(_QWORD *)(v123 + 16) = v116;
    *(_QWORD *)(v123 + 24) = v118;
    *(_QWORD *)(v123 + 32) = v120;
    *(_BYTE *)(v123 + 40) = 0;
    sub_1D2CCADA4(v111, &qword_1EFCA8AA8);
    v124 = v173;
    sub_1D2CD2018(v121, v173, &qword_1EFCA8AB0);
    v125 = 0;
    v126 = v122;
  }
  else
  {
    v125 = 1;
    v124 = v173;
    v126 = v176;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v124, v125, 1, v126);
  v127 = v196;
  sub_1D2CCAD60(v195, v196, &qword_1EFCA8AD0);
  v128 = v240;
  LODWORD(v184) = v240;
  LODWORD(v194) = v234;
  sub_1D2CCAD60(v124, v193, &qword_1EFCA8AB8);
  v129 = v179;
  *v179 = v178;
  v129[1] = 0;
  *((_WORD *)v129 + 8) = 1;
  v129[3] = v172;
  *((_BYTE *)v129 + 32) = v171;
  v129[5] = v170;
  *((_BYTE *)v129 + 48) = v169;
  v130 = v167;
  v129[7] = v168;
  v129[8] = v130;
  v131 = v175;
  v129[9] = KeyPath;
  v129[10] = v131;
  v132 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B08);
  sub_1D2CCAD60(v127, (uint64_t)v129 + v132[12], &qword_1EFCA8AD0);
  v133 = (char *)v129 + v132[16];
  *(_QWORD *)&v197 = v191;
  *((_QWORD *)&v197 + 1) = v190;
  LOBYTE(v198) = v128;
  *(_DWORD *)((char *)&v198 + 1) = *(_DWORD *)v239;
  DWORD1(v198) = *(_DWORD *)&v239[3];
  v134 = v166;
  *((_QWORD *)&v198 + 1) = v166;
  LOWORD(v199) = 256;
  *(_DWORD *)((char *)&v199 + 2) = v237;
  WORD3(v199) = v238;
  *((_QWORD *)&v199 + 1) = v192;
  LOBYTE(v200) = 1;
  DWORD1(v200) = *(_DWORD *)&v236[3];
  *(_DWORD *)((char *)&v200 + 1) = *(_DWORD *)v236;
  *((_QWORD *)&v200 + 1) = v188;
  *(_QWORD *)&v201 = v189;
  *((_QWORD *)&v201 + 1) = v186;
  *(_QWORD *)&v202 = v187;
  BYTE8(v202) = v185;
  *(_DWORD *)((char *)&v202 + 9) = *(_DWORD *)v235;
  HIDWORD(v202) = *(_DWORD *)&v235[3];
  *(_QWORD *)&v203 = v80;
  *((_QWORD *)&v203 + 1) = v82;
  *(_QWORD *)&v204 = v84;
  *((_QWORD *)&v204 + 1) = v86;
  v135 = (char)v194;
  v205 = (char)v194;
  v136 = v197;
  v137 = v198;
  v138 = v200;
  *((_OWORD *)v133 + 2) = v199;
  *((_OWORD *)v133 + 3) = v138;
  *(_OWORD *)v133 = v136;
  *((_OWORD *)v133 + 1) = v137;
  v139 = v201;
  v140 = v202;
  v141 = v203;
  v142 = v204;
  v133[128] = v135;
  *((_OWORD *)v133 + 6) = v141;
  *((_OWORD *)v133 + 7) = v142;
  *((_OWORD *)v133 + 4) = v139;
  *((_OWORD *)v133 + 5) = v140;
  v143 = v193;
  sub_1D2CCAD60(v193, (uint64_t)v129 + v132[20], &qword_1EFCA8AB8);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D2D6311C((uint64_t)&v197);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D2CCADA4(v124, &qword_1EFCA8AB8);
  sub_1D2CCADA4(v195, &qword_1EFCA8AD0);
  swift_release();
  swift_release();
  swift_release();
  sub_1D2CCADA4(v143, &qword_1EFCA8AB8);
  v206 = v191;
  v207 = v190;
  v208 = v184;
  *(_DWORD *)v209 = *(_DWORD *)v239;
  *(_DWORD *)&v209[3] = *(_DWORD *)&v239[3];
  v210 = v134;
  v211 = 256;
  v212 = v237;
  v213 = v238;
  v214 = v192;
  v215 = 1;
  *(_DWORD *)&v216[3] = *(_DWORD *)&v236[3];
  *(_DWORD *)v216 = *(_DWORD *)v236;
  v217 = v188;
  v218 = v189;
  v219 = v186;
  v220 = v187;
  v221 = v185;
  *(_DWORD *)&v222[3] = *(_DWORD *)&v235[3];
  *(_DWORD *)v222 = *(_DWORD *)v235;
  v223 = v80;
  v224 = v82;
  v225 = v84;
  v226 = v86;
  v227 = (char)v194;
  sub_1D2D631A4((uint64_t)&v206);
  sub_1D2CCADA4(v196, &qword_1EFCA8AD0);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D62ED8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF30();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D62F00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF30();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D62F28()
{
  return sub_1D2D9CF3C();
}

uint64_t sub_1D2D62F4C()
{
  return sub_1D2D9CF3C();
}

unint64_t sub_1D2D62F78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8AE0;
  if (!qword_1EFCA8AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8AD8);
    v2[0] = sub_1D2D62FFC();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA61B0, &qword_1EFCA61B8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8AE0);
  }
  return result;
}

unint64_t sub_1D2D62FFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8AE8;
  if (!qword_1EFCA8AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8AF0);
    v2[0] = sub_1D2CF4250();
    v2[1] = sub_1D2CC6C74((unint64_t *)&qword_1EFCA6C10, &qword_1EFCA6C18, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8AE8);
  }
  return result;
}

unint64_t sub_1D2D63080()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8AF8;
  if (!qword_1EFCA8AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8A90);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA5880, &qword_1EFCA5878, MEMORY[0x1E0CDFA58]);
    v2[1] = sub_1D2CC6C74((unint64_t *)&qword_1EFCA6C10, &qword_1EFCA6C18, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8AF8);
  }
  return result;
}

uint64_t sub_1D2D6311C(uint64_t a1)
{
  sub_1D2CCCB0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2D631A4(uint64_t a1)
{
  sub_1D2CCCAB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1D2D6322C()
{
  unint64_t result;

  result = qword_1EFCA5520;
  if (!qword_1EFCA5520)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA5520);
  }
  return result;
}

uint64_t sub_1D2D63268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TranslationUnavailableViewPhone(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D6333C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TranslationUnavailableViewPhone(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = type metadata accessor for TranslationUnavailableModel(0);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v3 + 36) + v2))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for TranslationUnavailableState(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA8B90);
}

void sub_1D2D633D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = type metadata accessor for TranslationUnavailableState(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8BC0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v7[*(int *)(v8 + 48)];
  sub_1D2CDB6B4(a1, (uint64_t)v7, type metadata accessor for TranslationUnavailableState);
  sub_1D2CDB6B4(a2, v9, type metadata accessor for TranslationUnavailableState);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v11 = (char *)sub_1D2D634D4
      + 4
      * byte_1D2DA5580[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 4, v10)];
  __asm { BR              X10 }
}

uint64_t sub_1D2D634D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);

  sub_1D2CDB6B4(v0, v1, type metadata accessor for TranslationUnavailableState);
  if (v4(v2, 4, v3))
  {
    sub_1D2CD3734(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    sub_1D2CCADA4(v0, &qword_1EFCA8BC0);
    return 0;
  }
  else
  {
    sub_1D2CD3734(v2, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    sub_1D2CD3734(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
    sub_1D2CD3734(v0, type metadata accessor for TranslationUnavailableState);
    return 1;
  }
}

uint64_t *sub_1D2D635C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1D2D9C7EC();
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v12 = type metadata accessor for LocalePair();
      v11((uint64_t *)((char *)a1 + *(int *)(v12 + 20)), (uint64_t *)((char *)a2 + *(int *)(v12 + 20)), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1D2D636BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1D2D9C7EC();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v6(a1, v4);
    v5 = a1 + *(int *)(type metadata accessor for LocalePair() + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v4);
  }
  return result;
}

char *sub_1D2D63758(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D2D9C7EC();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v10 = type metadata accessor for LocalePair();
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

char *sub_1D2D6382C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = sub_1D2D9C7EC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
      v16(a1, a2, v15);
      v17 = type metadata accessor for LocalePair();
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      return a1;
    }
    sub_1D2CCADA4((uint64_t)a1, &qword_1EFCA8B10);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D2D9C7EC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  v13 = type metadata accessor for LocalePair();
  v12(&a1[*(int *)(v13 + 20)], &a2[*(int *)(v13 + 20)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

char *sub_1D2D63978(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D2D9C7EC();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v10 = type metadata accessor for LocalePair();
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

char *sub_1D2D63A4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = sub_1D2D9C7EC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
      v16(a1, a2, v15);
      v17 = type metadata accessor for LocalePair();
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      return a1;
    }
    sub_1D2CCADA4((uint64_t)a1, &qword_1EFCA8B10);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D2D9C7EC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  v13 = type metadata accessor for LocalePair();
  v12(&a1[*(int *)(v13 + 20)], &a2[*(int *)(v13 + 20)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1D2D63B98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D63BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_1D2D63BF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D63C00(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D2D63C58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_1D2D63C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8B10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t sub_1D2D63CD8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LocalePair();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D2D63D2C()
{
  return sub_1D2D63D74(&qword_1EFCA8BA0, &qword_1EFCA8A88, sub_1D2D63D58);
}

uint64_t sub_1D2D63D58()
{
  return sub_1D2D63D74(&qword_1EFCA8BA8, &qword_1EFCA8A78, (uint64_t (*)(void))sub_1D2D63DE0);
}

uint64_t sub_1D2D63D74(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2D63DE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA8BB0;
  if (!qword_1EFCA8BB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8A70);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA8BB8, &qword_1EFCA8A68, MEMORY[0x1E0CDFCC0]);
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA8BB0);
  }
  return result;
}

unint64_t sub_1D2D63E64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B8);
    v2 = (_QWORD *)sub_1D2D9E3D0();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  v11 = MEMORY[0x1E0DEAFA0];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1D2CDB67C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D2CD1FA4(v6, v7);
    sub_1D2CD1FA4(v7, v40);
    sub_1D2CD1FA4(v40, &v38);
    result = sub_1D2D64F2C(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_1D2CD1FA4(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1D2CD1FA4(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D2D641BC()
{
  uint64_t v0;

  v0 = sub_1D2D9CC9C();
  __swift_allocate_value_buffer(v0, qword_1EFCB2680);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFCB2680);
  return sub_1D2D9CC90();
}

void sub_1D2D64214(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t inited;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38[9];

  v38[8] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1D2D9C648();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFCA54B8 != -1)
    swift_once();
  v8 = sub_1D2D9C8F4();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFCB2630);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v36 = v9;
  v10 = sub_1D2D9C8DC();
  v11 = sub_1D2D9E01C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (void *)swift_slowAlloc();
    v35 = a1;
    v14 = v13;
    v38[0] = v13;
    v34 = a2;
    *(_DWORD *)v12 = 136642819;
    sub_1D2CC66E4(&qword_1EFCA8BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v15 = sub_1D2D9E508();
    v37 = sub_1D2CF78E0(v15, v16, (uint64_t *)v38);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1D2CC0000, v10, v11, "Opening URL with LaunchServices: %{sensitive}s", v12, 0xCu);
    swift_arrayDestroy();
    v17 = v14;
    a1 = v35;
    MEMORY[0x1D8248974](v17, -1, -1);
    MEMORY[0x1D8248974](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  LOBYTE(v37) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA8B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
  *(_QWORD *)(inited + 32) = sub_1D2D9DCD4();
  *(_QWORD *)(inited + 40) = v19;
  *(_BYTE *)(inited + 48) = 1;
  v20 = sub_1D2CCF708(inited);
  v21 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v22 = (void *)sub_1D2D9C60C();
  sub_1D2D63E64(v20);
  swift_bridgeObjectRelease();
  v23 = (void *)sub_1D2D9DC20();
  swift_bridgeObjectRelease();
  v38[0] = 0;
  v24 = objc_msgSend(v21, sel_openSensitiveURL_withOptions_error_, v22, v23, v38);

  if ((v24 & 1) != 0)
  {
    v25 = v38[0];
LABEL_10:
    LOBYTE(v37) = v21 != 0;
    goto LABEL_11;
  }
  v26 = v38[0];
  v27 = (void *)sub_1D2D9C600();

  swift_willThrow();
  v28 = v27;
  v29 = sub_1D2D9C8DC();
  v30 = sub_1D2D9E034();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v31 = 138412290;
    v33 = (void *)sub_1D2D9C5F4();
    v38[0] = v33;
    sub_1D2D9E1B4();
    *v32 = v33;

    _os_log_impl(&dword_1D2CC0000, v29, v30, "Failed to open URL with LaunchServices: %@", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v32, -1, -1);
    MEMORY[0x1D8248974](v31, -1, -1);

  }
  else
  {

  }
LABEL_11:
  sub_1D2D9CC84();
  sub_1D2D646E4(&v37, a1);
}

void sub_1D2D646E4(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1D2D9C648();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  if (*a1 == 1)
  {
    if (qword_1EFCA54B8 != -1)
      swift_once();
    v11 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EFCB2630);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    v12 = sub_1D2D9C8DC();
    v13 = sub_1D2D9E01C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136642819;
      sub_1D2CC66E4(&qword_1EFCA8BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v16 = sub_1D2D9E508();
      v25 = sub_1D2CF78E0(v16, v17, &v26);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      _os_log_impl(&dword_1D2CC0000, v12, v13, "Successfully opened URL with LaunchServices: %{sensitive}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v15, -1, -1);
      MEMORY[0x1D8248974](v14, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }

  }
  else
  {
    if (qword_1EFCA54B8 != -1)
      swift_once();
    v18 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EFCB2630);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v19 = sub_1D2D9C8DC();
    v20 = sub_1D2D9E01C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136642819;
      sub_1D2CC66E4(&qword_1EFCA8BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v23 = sub_1D2D9E508();
      v25 = sub_1D2CF78E0(v23, v24, &v26);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_1D2CC0000, v19, v20, "Failed to open URL with LaunchServices: %{sensitive}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v22, -1, -1);
      MEMORY[0x1D8248974](v21, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

  }
}

uint64_t sub_1D2D64AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFCA54E8 != -1)
    swift_once();
  v2 = sub_1D2D9CC9C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFCB2680);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t EnvironmentValues.unlockAndOpenURL.getter()
{
  sub_1D2D64B58();
  return sub_1D2D9CFFC();
}

unint64_t sub_1D2D64B58()
{
  unint64_t result;

  result = qword_1EFCA8BC8;
  if (!qword_1EFCA8BC8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA58EC, &type metadata for UnlockAndOpenURLActionKey);
    atomic_store(result, (unint64_t *)&qword_1EFCA8BC8);
  }
  return result;
}

uint64_t sub_1D2D64B9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = sub_1D2D9CC9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1D2D64B58();
  sub_1D2D9D008();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t EnvironmentValues.unlockAndOpenURL.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D2D9CC9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1D2D64B58();
  sub_1D2D9D008();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*EnvironmentValues.unlockAndOpenURL.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1D2D9CC9C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_1D2D64B58();
  sub_1D2D9CFFC();
  return sub_1D2D64DC8;
}

void sub_1D2D64DC8(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 32), v3[5], v3[1]);
  v5 = (void *)v3[5];
  v6 = (void *)v3[3];
  v7 = (void *)v3[4];
  v8 = v3[1];
  v9 = v3[2];
  if ((a2 & 1) != 0)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_1D2D9D008();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
  }
  else
  {
    sub_1D2D9D008();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
  }
  v10(v5, v8);
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_1D2D64EAC()
{
  sub_1D2D64B58();
  return sub_1D2D9CFFC();
}

ValueMetadata *type metadata accessor for UnlockAndOpenURLActionKey()
{
  return &type metadata for UnlockAndOpenURLActionKey;
}

unint64_t sub_1D2D64EFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D2D9E280();
  return sub_1D2D65104(a1, v2);
}

unint64_t sub_1D2D64F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  v4 = sub_1D2D9E5F8();
  return sub_1D2D651C8(a1, a2, v4);
}

unint64_t sub_1D2D64F90(uint64_t a1)
{
  uint64_t v2;

  sub_1D2D9DCD4();
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  v2 = sub_1D2D9E5F8();
  swift_bridgeObjectRelease();
  return sub_1D2D652A8(a1, v2);
}

unint64_t sub_1D2D65010(uint64_t a1)
{
  uint64_t v2;

  sub_1D2D9E5C8();
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1D2D9DC50();
  v2 = sub_1D2D9E5F8();
  return sub_1D2D6541C(a1, v2);
}

unint64_t sub_1D2D65098(uint64_t a1)
{
  uint64_t v2;

  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v2 = sub_1D2D9DC44();
  return sub_1D2D655DC(a1, v2);
}

unint64_t sub_1D2D65104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D2D6571C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D8247DE0](v9, a1);
      sub_1D2CC8030((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D2D651C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D2D9E52C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D2D9E52C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D2D652A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D2D9DCD4();
    v8 = v7;
    if (v6 == sub_1D2D9DCD4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D2D9DCD4();
          v15 = v14;
          if (v13 == sub_1D2D9DCD4() && v15 == v16)
            break;
          v18 = sub_1D2D9E52C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D2D6541C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;

  v29 = type metadata accessor for TextModel();
  MEMORY[0x1E0C80A78](v29);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - v12;
  v14 = v2 + 64;
  v15 = -1 << *(_BYTE *)(v2 + 32);
  v16 = a2 & ~v15;
  if (((*(_QWORD *)(v2 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v11 + 72);
    v28 = a1;
    do
    {
      sub_1D2D4AFEC(*(_QWORD *)(v2 + 48) + v18 * v16, (uint64_t)v13);
      v19 = sub_1D2D9C6D8();
      sub_1D2D4AFEC((uint64_t)v13, (uint64_t)v9);
      sub_1D2D4AFEC(a1, (uint64_t)v6);
      if ((v19 & 1) != 0)
      {
        v20 = v18;
        v21 = v17;
        v22 = v14;
        v23 = v29;
        v24 = *(_QWORD *)&v9[*(int *)(v29 + 20)];
        sub_1D2D4B030((uint64_t)v9);
        v25 = *(_QWORD *)&v6[*(int *)(v23 + 20)];
        sub_1D2D4B030((uint64_t)v6);
        sub_1D2D4B030((uint64_t)v13);
        v26 = v24 == v25;
        v14 = v22;
        v17 = v21;
        v18 = v20;
        a1 = v28;
        if (v26)
          return v16;
      }
      else
      {
        sub_1D2D4B030((uint64_t)v6);
        sub_1D2D4B030((uint64_t)v9);
        sub_1D2D4B030((uint64_t)v13);
      }
      v16 = (v16 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  return v16;
}

unint64_t sub_1D2D655DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_1D2D9C6FC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v15 = sub_1D2D9DC8C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_1D2D6571C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t static URL.downloadLanguagesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D657AC(a1);
}

uint64_t static URL.translateSettingsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D657AC(a1);
}

uint64_t static URL.topLevelSettingsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D657AC(a1);
}

uint64_t sub_1D2D657AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C63C();
  v5 = sub_1D2D9C648();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

uint64_t static URL.translateAppURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C5DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C5D0();
  sub_1D2D9C5C4();
  sub_1D2D9C5B8();
  v9 = sub_1D2D9C648();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

uint64_t static URL.translateAppURL(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C5DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C5D0();
  sub_1D2D9C5C4();
  swift_bridgeObjectRetain();
  sub_1D2D9C5AC();
  sub_1D2D9C5B8();
  v9 = sub_1D2D9C648();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

uint64_t static String.localizedSettingsAppName.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1D2D9C5E8();

  return v2;
}

id NSUserDefaults.onDeviceOnly.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  unsigned int v5;

  v1 = (void *)sub_1D2D9DCB0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_isOnDeviceOnlyTranslationForced);

    return (id)(v5 | v2);
  }
  return v2;
}

uint64_t NSUserDefaults.lastUsedLocaleIdentifier.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)sub_1D2D9DCB0();
  v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2)
    return 0;
  v3 = sub_1D2D9DCD4();

  return v3;
}

uint64_t static NSUserDefaults.Constants.onDeviceOnlyKey.getter()
{
  return 0x6563697665446E4FLL;
}

uint64_t static NSUserDefaults.Constants.firstUseConsentKey.getter()
{
  return 0x6573557473726946;
}

unint64_t static NSUserDefaults.Constants.lastUsedLocaleIdentifierKey.getter()
{
  return 0xD000000000000014;
}

unint64_t static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static NSUserDefaults.Constants.debugAPIShowLanguageStatus.getter()
{
  return 0xD00000000000001ALL;
}

void static NSUserDefaults.ltuiRegisterDefaults()()
{
  void *v0;
  void *v1;
  uint64_t inited;
  void *v3;

  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D2DA0510;
  *(_QWORD *)(inited + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 40) = 0x80000001D2DA9C40;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = 1;
  sub_1D2CCF4A8(inited);
  v3 = (void *)sub_1D2D9DC20();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_registerDefaults_, v3);

}

void sub_1D2D65E14(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *a1;
  v4 = (void *)sub_1D2D9DCB0();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_isOnDeviceOnlyTranslationForced);

    v5 |= v8;
  }
  *a2 = v5;
}

void NSUserDefaults.onDeviceOnly.setter(char a1)
{
  sub_1D2D66724(a1);
}

void (*NSUserDefaults.onDeviceOnly.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  unsigned __int8 *v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  void *v6;
  unsigned __int8 v7;

  *a1 = v1;
  v2 = (unsigned __int8 *)(a1 + 1);
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_isOnDeviceOnlyTranslationForced);

    v4 |= v7;
  }
  *v2 = v4;
  return sub_1D2D65F98;
}

void sub_1D2D65F98(uint64_t a1)
{
  sub_1D2D66804(a1);
}

id NSUserDefaults.firstUseConsent.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1D2D9DCB0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void NSUserDefaults.firstUseConsent.setter(char a1)
{
  sub_1D2D66724(a1);
}

void (*NSUserDefaults.firstUseConsent.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1D2D660B8;
}

void sub_1D2D660B8(uint64_t a1)
{
  sub_1D2D66804(a1);
}

void sub_1D2D660DC(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = (void *)sub_1D2D9DCB0();
  v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (v5)
  {
    v6 = sub_1D2D9DCD4();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_1D2D66170(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)sub_1D2D9DCB0();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

}

void NSUserDefaults.lastUsedLocaleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  if (a2)
  {
    v3 = sub_1D2D9DCB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)sub_1D2D9DCB0();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

}

uint64_t (*NSUserDefaults.lastUsedLocaleIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend(v1, sel_stringForKey_, v3);

  if (v4)
  {
    v5 = sub_1D2D9DCD4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D2D66340;
}

uint64_t sub_1D2D66340(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1D2D9DCB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    v6 = *(void **)(a1 + 16);
    v7 = (void *)sub_1D2D9DCB0();
    objc_msgSend(v6, sel_setObject_forKey_, v4, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      v5 = sub_1D2D9DCB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    v8 = *(void **)(a1 + 16);
    v7 = (void *)sub_1D2D9DCB0();
    objc_msgSend(v8, sel_setObject_forKey_, v5, v7);
  }

  return swift_unknownObjectRelease();
}

id NSUserDefaults.genderDisambiguationEnabled.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1D2D9DCB0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1D2D664A4(_BYTE *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1 == 2)
    v3 = 0;
  else
    v3 = sub_1D2D9DEA8();
  v4 = (id)sub_1D2D9DCB0();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

}

void NSUserDefaults.genderDisambiguationEnabled.setter(char a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  if (a1 == 2)
    v2 = 0;
  else
    v2 = sub_1D2D9DEA8();
  v3 = (id)sub_1D2D9DCB0();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();

}

uint64_t (*NSUserDefaults.genderDisambiguationEnabled.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1D2D66624;
}

uint64_t sub_1D2D66624(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  if (*(_BYTE *)(a1 + 8) == 2)
    v2 = 0;
  else
    v2 = sub_1D2D9DEA8();
  v3 = *(void **)a1;
  v4 = (void *)sub_1D2D9DCB0();
  objc_msgSend(v3, sel_setObject_forKey_, v2, v4);

  return swift_unknownObjectRelease();
}

id NSUserDefaults.debugAPIShowLanguageStatus.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1D2D9DCB0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void NSUserDefaults.debugAPIShowLanguageStatus.setter(char a1)
{
  sub_1D2D66724(a1);
}

void sub_1D2D66724(char a1)
{
  void *v1;
  id v3;

  v3 = (id)sub_1D2D9DCB0();
  objc_msgSend(v1, sel_setBool_forKey_, a1 & 1, v3);

}

void (*NSUserDefaults.debugAPIShowLanguageStatus.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = (void *)sub_1D2D9DCB0();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1D2D667E8;
}

void sub_1D2D667E8(uint64_t a1)
{
  sub_1D2D66804(a1);
}

void sub_1D2D66804(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = (id)sub_1D2D9DCB0();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);

}

void _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v10 = (void *)sub_1D2D9DCB0();
  v11 = objc_msgSend(v9, sel_containerURLForSecurityApplicationGroupIdentifier_, v10);

  if (v11)
  {
    sub_1D2D9C624();

    v12 = sub_1D2D9C648();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  }
  else
  {
    v12 = sub_1D2D9C648();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  }
  sub_1D2D330A8((uint64_t)v5, (uint64_t)v8);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99EA0]), sel_init);
  v14 = (void *)sub_1D2D9DCB0();
  sub_1D2D3279C((uint64_t)v8, (uint64_t)v2);
  sub_1D2D9C648();
  v15 = *(_QWORD *)(v12 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v2, 1, v12) != 1)
  {
    v16 = (void *)sub_1D2D9C60C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v12);
  }
  v17 = objc_msgSend(v13, sel__initWithSuiteName_container_, v14, v16);

  if (v17)
    sub_1D2D66C5C((uint64_t)v8);
  else
    __break(1u);
}

void sub_1D2D66A8C(unsigned __int8 *a1, void **a2)
{
  keypath_setTm(a1, a2);
}

void sub_1D2D66AAC(void **a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_1Tm(a1, a2);
}

void sub_1D2D66AD0(unsigned __int8 *a1, void **a2)
{
  keypath_setTm(a1, a2);
}

void sub_1D2D66AFC(void **a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  void *v4;

  v3 = *a1;
  v4 = (void *)sub_1D2D9DCB0();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)v3;
}

void sub_1D2D66B68(void **a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_1Tm(a1, a2);
}

void keypath_get_1Tm(void **a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  void *v4;

  v3 = *a1;
  v4 = (void *)sub_1D2D9DCB0();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)v3;
}

void sub_1D2D66BDC(unsigned __int8 *a1, void **a2)
{
  keypath_setTm(a1, a2);
}

void keypath_setTm(unsigned __int8 *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *a2;
  v4 = (id)sub_1D2D9DCB0();
  objc_msgSend(v3, sel_setBool_forKey_, v2, v4);

}

ValueMetadata *type metadata accessor for NSUserDefaults.Constants()
{
  return &type metadata for NSUserDefaults.Constants;
}

uint64_t sub_1D2D66C5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED586240);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2D66C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;
  int64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t i;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int *v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v2);
  v99 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TextModel();
  v5 = *(_QWORD *)(v4 - 8);
  v87 = (int *)v4;
  v88 = v5;
  MEMORY[0x1E0C80A78](v4);
  v100 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v79 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VisualTranslationModel(0);
  v94 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v81 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v80 = (uint64_t)&v79 - v16;
  v17 = &qword_1EFCA5C38;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v91 = *(_QWORD *)(v18 - 8);
  v92 = v18;
  MEMORY[0x1E0C80A78](v18);
  v83 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v96 = (uint64_t)&v79 - v21;
  MEMORY[0x1E0C80A78](v22);
  v95 = (uint64_t)&v79 - v23;
  MEMORY[0x1E0C80A78](v24);
  v90 = (uint64_t)&v79 - v25;
  v26 = *(_QWORD *)(a1 + 64);
  v84 = a1 + 64;
  v27 = 1 << *(_BYTE *)(a1 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v26;
  v89 = (unint64_t)(v27 + 63) >> 6;
  v93 = a1;
  result = swift_bridgeObjectRetain();
  v31 = 0;
  v82 = MEMORY[0x1E0DEE9D8];
  v32 = type metadata accessor for VisualTranslationModel;
  v85 = v13;
  v86 = v12;
  if (v29)
    goto LABEL_8;
LABEL_14:
  v49 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    if (v49 < v89)
    {
      v50 = *(_QWORD *)(v84 + 8 * v49);
      i = v31 + 1;
      v38 = v17;
      v39 = (uint64_t)v12;
      v40 = v13;
      v41 = v96;
      if (v50)
        goto LABEL_28;
      i = v31 + 2;
      if (v31 + 2 < v89)
      {
        v50 = *(_QWORD *)(v84 + 8 * i);
        if (v50)
          goto LABEL_28;
        i = v31 + 3;
        if (v31 + 3 < v89)
        {
          v50 = *(_QWORD *)(v84 + 8 * i);
          if (v50)
            goto LABEL_28;
          i = v31 + 4;
          if (v31 + 4 < v89)
          {
            v50 = *(_QWORD *)(v84 + 8 * i);
            if (v50)
              goto LABEL_28;
            v52 = v31 + 5;
            if (v31 + 5 < v89)
            {
              v50 = *(_QWORD *)(v84 + 8 * v52);
              for (i = v31 + 5; !v50; ++v52)
              {
                i = v52 + 1;
                if (__OFADD__(v52, 1))
                  goto LABEL_49;
                if (i >= v89)
                  goto LABEL_47;
                v50 = *(_QWORD *)(v84 + 8 * i);
              }
LABEL_28:
              v97 = i;
              v98 = (v50 - 1) & v50;
              v37 = __clz(__rbit64(v50)) + (i << 6);
              while (1)
              {
                v53 = v90;
                v54 = v38;
                sub_1D2CCAD60(*(_QWORD *)(v93 + 56) + *(_QWORD *)(v91 + 72) * v37, v90, v38);
                v55 = v95;
                sub_1D2D690DC(v53, v95);
                v56 = *(int *)(v92 + 48);
                sub_1D2CDB6B4(v55, v41, v32);
                *(_QWORD *)(v41 + v56) = *(_QWORD *)(v55 + v56);
                v57 = *(_QWORD *)(v41 + *(int *)(v40 + 28));
                v58 = v32;
                v59 = *(_QWORD *)(v57 + 16);
                if (v59)
                {
                  v60 = v88;
                  v61 = v57
                      + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
                  swift_bridgeObjectRetain();
                  v62 = *(_QWORD *)(v60 + 72);
                  v63 = v87;
                  while (1)
                  {
                    sub_1D2CDB6B4(v61, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                    if (*(_QWORD *)&v9[v63[11]])
                      break;
                    v64 = &v9[v63[6]];
                    v66 = *(_QWORD *)v64;
                    v65 = *((_QWORD *)v64 + 1);
                    v67 = v66 & 0xFFFFFFFFFFFFLL;
                    if (!((v65 & 0x2000000000000000) != 0 ? HIBYTE(v65) & 0xF : v67))
                      break;
                    v69 = v99;
                    sub_1D2CCAD60((uint64_t)&v9[v63[7]], v99, &qword_1ED587850);
                    v70 = sub_1D2D9C7EC();
                    v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v69, 1, v70);
                    sub_1D2CCADA4(v69, &qword_1ED587850);
                    if (v71 == 1)
                      break;
                    v72 = &v9[v63[8]];
                    v73 = *((_QWORD *)v72 + 1);
                    if (!v73)
                      break;
                    v74 = *(_QWORD *)v72 & 0xFFFFFFFFFFFFLL;
                    if (!((v73 & 0x2000000000000000) != 0 ? HIBYTE(v73) & 0xF : v74))
                      break;
                    v76 = v100;
                    sub_1D2CDB6B4((uint64_t)v9, v100, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                    v77 = *(_QWORD *)(v76 + v63[11]);
                    sub_1D2CD3734(v76, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                    sub_1D2CD3734((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                    if (v77)
                      goto LABEL_46;
                    v61 += v62;
                    if (!--v59)
                    {
                      swift_bridgeObjectRelease();
                      v40 = v85;
                      v39 = (uint64_t)v86;
                      v54 = &qword_1EFCA5C38;
                      v55 = v95;
                      v41 = v96;
                      v58 = type metadata accessor for VisualTranslationModel;
                      goto LABEL_5;
                    }
                  }
                  v78 = v100;
                  sub_1D2CDB6B4((uint64_t)v9, v100, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                  sub_1D2CD3734(v78, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                  sub_1D2CD3734((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_46:
                  swift_bridgeObjectRelease();
                  v32 = type metadata accessor for VisualTranslationModel;
                  sub_1D2CD3734(v96, type metadata accessor for VisualTranslationModel);
                  v34 = 1;
                  v40 = v85;
                  v39 = (uint64_t)v86;
                  v54 = &qword_1EFCA5C38;
                  v55 = v95;
                }
                else
                {
LABEL_5:
                  sub_1D2CD3734(v41, v58);
                  v33 = v83;
                  sub_1D2CDB6B4(v55, v83, v58);
                  sub_1D2CD1FD4(v33, v39, v58);
                  v34 = 0;
                  v32 = v58;
                }
                v31 = v97;
                v35 = v94;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v39, v34, 1, v40);
                v17 = v54;
                sub_1D2CCADA4(v55, v54);
                v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
                v13 = v40;
                v12 = (char *)v39;
                if (v36(v39, 1, v40) == 1)
                {
                  result = sub_1D2CCADA4(v39, &qword_1ED5872D8);
                  v29 = v98;
                  if (!v98)
                    goto LABEL_14;
                }
                else
                {
                  v42 = v39;
                  v43 = v80;
                  sub_1D2CD1FD4(v42, v80, v32);
                  sub_1D2CD1FD4(v43, v81, v32);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v82 = sub_1D2D4AE54(0, *(_QWORD *)(v82 + 16) + 1, 1, v82);
                  v45 = *(_QWORD *)(v82 + 16);
                  v44 = *(_QWORD *)(v82 + 24);
                  if (v45 >= v44 >> 1)
                    v82 = sub_1D2D4AE54(v44 > 1, v45 + 1, 1, v82);
                  v46 = v81;
                  v47 = v82;
                  *(_QWORD *)(v82 + 16) = v45 + 1;
                  v48 = v47
                      + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))
                      + *(_QWORD *)(v94 + 72) * v45;
                  v32 = type metadata accessor for VisualTranslationModel;
                  result = sub_1D2CD1FD4(v46, v48, type metadata accessor for VisualTranslationModel);
                  v29 = v98;
                  if (!v98)
                    goto LABEL_14;
                }
LABEL_8:
                v97 = v31;
                v98 = (v29 - 1) & v29;
                v37 = __clz(__rbit64(v29)) | (v31 << 6);
                v38 = v17;
                v39 = (uint64_t)v12;
                v40 = v13;
                v41 = v96;
              }
            }
          }
        }
      }
    }
LABEL_47:
    swift_release();
    return v82;
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1D2D673C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v38;
  char v39;
  char v40;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  int v44;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  MEMORY[0x1E0C80A78](v5);
  v64 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v67 = (char *)&v59 - v8;
  v60 = type metadata accessor for TextModel();
  v9 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v69 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8C80);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D2D9C6FC();
  MEMORY[0x1E0C80A78](v14);
  v65 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v59 - v18;
  v71 = v20;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v68 = v22;
  v66 = v21;
  ((void (*)(char *, uint64_t, __n128))v21)((char *)&v59 - v18, a1, v17);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v24 = *(int *)(v23 + 48);
  sub_1D2CDB6B4(a1, (uint64_t)v13, type metadata accessor for VisualTranslationModel);
  v25 = a1;
  v26 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 28));
  *(_QWORD *)&v13[v24] = *(_QWORD *)(v26 + 16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
  swift_beginAccess();
  sub_1D2D8725C((uint64_t)v13, (uint64_t)v19);
  result = swift_endAccess();
  v28 = *(_QWORD *)(v26 + 16);
  if (!v28)
    return result;
  v62 = v2;
  v29 = v26 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v30 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  v70 = *(_QWORD *)(v9 + 72);
  v61 = v26;
  swift_bridgeObjectRetain();
  v31 = (uint64_t)v67;
  v32 = v68;
  v33 = v69;
  v34 = v71;
  v63 = v25;
  while (1)
  {
    sub_1D2CDB6B4(v29, v33, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v66(v31, v25, v32);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
    v37(v31, 0, 1, v32);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v32) == 1)
    {
      sub_1D2CCADA4(v31, &qword_1EFCA71F0);
      swift_bridgeObjectRetain();
      v38 = sub_1D2D65010(v33);
      v40 = v39;
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v42 = *v30;
        v72 = (_QWORD *)*v30;
        *v30 = 0x8000000000000000;
        v36 = (uint64_t)v64;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1D2CD9328();
          v42 = (uint64_t)v72;
        }
        sub_1D2CD3734(*(_QWORD *)(v42 + 48) + v38 * v70, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v32 = v68;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v71 + 32))(v36, *(_QWORD *)(v42 + 56) + *(_QWORD *)(v71 + 72) * v38, v68);
        sub_1D2D93B44(v38, v42);
        *v30 = v42;
        swift_bridgeObjectRelease();
        v35 = 0;
      }
      else
      {
        v35 = 1;
        v32 = v68;
        v36 = (uint64_t)v64;
      }
      v37(v36, v35, 1, v32);
      v33 = v69;
      sub_1D2CD3734(v69, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CCADA4(v36, &qword_1EFCA71F0);
      v31 = (uint64_t)v67;
      v34 = v71;
      v25 = v63;
      goto LABEL_5;
    }
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
    v43(v65, v31, v32);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v72 = (_QWORD *)*v30;
    v45 = v72;
    *v30 = 0x8000000000000000;
    v47 = sub_1D2D65010(v33);
    v48 = v45[2];
    v49 = (v46 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
      break;
    v51 = v46;
    if (v45[3] >= v50)
    {
      if ((v44 & 1) == 0)
        sub_1D2CD9328();
    }
    else
    {
      sub_1D2CD7F3C(v50, v44);
      v52 = sub_1D2D65010(v69);
      if ((v51 & 1) != (v53 & 1))
        goto LABEL_26;
      v47 = v52;
    }
    v32 = v68;
    v54 = v72;
    if ((v51 & 1) != 0)
    {
      v55 = v72[7] + *(_QWORD *)(v71 + 72) * v47;
      v34 = v71;
      (*(void (**)(unint64_t, char *, uint64_t))(v71 + 40))(v55, v65, v68);
      v33 = v69;
    }
    else
    {
      v72[(v47 >> 6) + 8] |= 1 << v47;
      v33 = v69;
      sub_1D2CDB6B4(v69, v54[6] + v47 * v70, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v43((char *)(v54[7] + *(_QWORD *)(v71 + 72) * v47), (uint64_t)v65, v32);
      v56 = v54[2];
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (v57)
        goto LABEL_25;
      v54[2] = v58;
      v34 = v71;
    }
    *v30 = (uint64_t)v72;
    swift_bridgeObjectRelease();
    sub_1D2CD3734(v33, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v31 = (uint64_t)v67;
LABEL_5:
    v29 += v70;
    if (!--v28)
    {
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1D2D9E568();
  __break(1u);
  return result;
}

uint64_t sub_1D2D67968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;

  v1 = type metadata accessor for VisualTranslationModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D2D9C6FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1D2D66C9C(v9);
  v31 = 0;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v28 = v0;
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1D2D04094(0, v11, 0);
    v13 = v11;
    v14 = v10 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v15 = *(_QWORD *)(v2 + 72);
    v29 = v13;
    v30 = v10;
    v16 = v13;
    v32 = v15;
    do
    {
      sub_1D2CDB6B4(v14, (uint64_t)v4, type metadata accessor for VisualTranslationModel);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v4, v5);
      sub_1D2CD3734((uint64_t)v4, type metadata accessor for VisualTranslationModel);
      v12 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2D04094(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v15 = v32;
        v12 = v34;
      }
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D2D04094(v17 > 1, v18 + 1, 1);
        v15 = v32;
        v12 = v34;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, v8, v5);
      v34 = v12;
      v14 += v15;
      --v16;
    }
    while (v16);
    v11 = v29;
    v10 = v30;
    v0 = v28;
  }
  v19 = sub_1D2D05500(v12);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1D2D68EE8(v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v0 + 24) = v21;
  swift_bridgeObjectRelease();
  if (qword_1ED587858 != -1)
    swift_once();
  v22 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED5886E8);
  swift_bridgeObjectRetain();
  v23 = sub_1D2D9C8DC();
  v24 = sub_1D2D9E028();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v25 = 134217984;
    v33 = v11;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2CC0000, v23, v24, "Prune visual models: %ld", v25, 0xCu);
    MEMORY[0x1D8248974](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v10;
}

size_t sub_1D2D67CE4()
{
  uint64_t v0;
  size_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1D2D931F0(v0);
  swift_bridgeObjectRelease();
  if (qword_1ED587858 != -1)
    swift_once();
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED5886E8);
  swift_retain();
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E028();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    sub_1D2D9E1B4();
    swift_release();
    _os_log_impl(&dword_1D2CC0000, v3, v4, "Mux text models: %ld", v5, 0xCu);
    MEMORY[0x1D8248974](v5, -1, -1);

  }
  else
  {

    swift_release();
  }
  return v1;
}

uint64_t sub_1D2D67E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t result;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, unint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v3 = v2;
  v92 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8C80);
  MEMORY[0x1E0C80A78](v5);
  v86 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  v91 = *((_QWORD *)v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v88 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v89 = (char *)&v78 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D2D9C6FC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v90 = (char *)&v78 - v22;
  swift_beginAccess();
  v23 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v23 + 16) || (v24 = sub_1D2D65010(a1), (v25 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_14;
  }
  v26 = *(_QWORD *)(v23 + 56) + *(_QWORD *)(v18 + 72) * v24;
  v27 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
  v27(v16, v26, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_14:
    sub_1D2CCADA4((uint64_t)v16, &qword_1EFCA71F0);
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v91 + 56))(v92, 1, 1, v7);
  }
  v85 = v27;
  v28 = (uint64_t)v90;
  (*(void (**)(void))(v18 + 32))();
  swift_endAccess();
  v84 = v3 + 16;
  swift_beginAccess();
  v29 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v29 + 16) || (v30 = sub_1D2D65098(v28), (v31 & 1) == 0))
  {
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v91 + 56))(v92, 1, 1, v7);
  }
  v32 = *(int *)(v9 + 48);
  sub_1D2CCAD60(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v88 + 72) * v30, (uint64_t)v11, &qword_1EFCA5C38);
  v33 = *(int *)(v9 + 48);
  v34 = (uint64_t)v89;
  sub_1D2CD1FD4((uint64_t)v11, (uint64_t)v89, type metadata accessor for VisualTranslationModel);
  v35 = *(_QWORD *)&v11[v33];
  swift_endAccess();
  if (!__OFSUB__(v35, 1))
  {
    v81 = v35 - 1;
    *(_QWORD *)(v34 + v32) = v35 - 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587360);
    v36 = type metadata accessor for TextModel();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v80 = *(_QWORD *)(v37 + 72);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1D2DA0510;
    v79 = v38;
    v40 = v39 + v38;
    sub_1D2CDB6B4(a1, v40, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v41 = *(_QWORD *)(v34 + v7[7]);
    v82 = v36;
    v42 = *(int *)(v36 + 20);
    v83 = v40;
    v43 = *(_QWORD *)(v40 + v42);
    if ((v43 & 0x8000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v44 = *(_QWORD *)(v41 + 16);
      swift_bridgeObjectRetain();
      if ((uint64_t)v43 < v44)
      {
        swift_bridgeObjectRetain();
        result = swift_isUniquelyReferenced_nonNull_native();
        v46 = (void (*)(char *, char *, uint64_t))v85;
        if ((result & 1) == 0)
        {
          result = sub_1D2D4B108(v41);
          v41 = result;
        }
        if (v43 >= *(_QWORD *)(v41 + 16))
        {
          __break(1u);
          return result;
        }
        sub_1D2D4B13C(v83, v41 + v79 + v43 * v80);
        swift_bridgeObjectRelease();
LABEL_19:
        v80 = v41;
        v47 = v87;
        v11 = v89;
        v46(v87, v89, v17);
        v48 = &v11[v7[5]];
        v49 = *((_OWORD *)v48 + 8);
        v50 = *((_OWORD *)v48 + 9);
        v51 = *((_OWORD *)v48 + 6);
        v100 = *((_OWORD *)v48 + 7);
        v101 = v49;
        v102 = v50;
        v103 = *((_QWORD *)v48 + 20);
        v52 = *((_OWORD *)v48 + 5);
        v97 = *((_OWORD *)v48 + 4);
        v98 = v52;
        v99 = v51;
        v53 = *((_OWORD *)v48 + 3);
        v95 = *((_OWORD *)v48 + 2);
        v96 = v53;
        v54 = *(_OWORD *)v48;
        v94 = *((_OWORD *)v48 + 1);
        v93 = v54;
        v55 = v7[6];
        v56 = &v11[v55];
        v57 = &v47[v55];
        v58 = sub_1D2D9C6C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v57, v56, v58);
        swift_setDeallocating();
        v34 = (uint64_t)v47;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v59 = *(_QWORD *)&v11[v7[8]];
        v60 = v11[v7[9]];
        v61 = v11[v7[10]];
        v62 = &v47[v7[5]];
        v63 = v100;
        v64 = v102;
        *((_OWORD *)v62 + 8) = v101;
        *((_OWORD *)v62 + 9) = v64;
        *((_QWORD *)v62 + 20) = v103;
        v65 = v98;
        *((_OWORD *)v62 + 4) = v97;
        *((_OWORD *)v62 + 5) = v65;
        *((_OWORD *)v62 + 6) = v99;
        *((_OWORD *)v62 + 7) = v63;
        v66 = v94;
        *(_OWORD *)v62 = v93;
        *((_OWORD *)v62 + 1) = v66;
        v67 = v96;
        *((_OWORD *)v62 + 2) = v95;
        *((_OWORD *)v62 + 3) = v67;
        *(_QWORD *)&v47[v7[7]] = v80;
        *(_QWORD *)&v47[v7[8]] = v59;
        v47[v7[9]] = v60;
        v47[v7[10]] = v61;
        v47[v7[11]] = 0;
        if (v81 > 0)
        {
          v68 = v90;
          v69 = v81;
          v85(v20, (unint64_t)v90, v17);
          v70 = *(int *)(v9 + 48);
          v71 = (uint64_t)v47;
          v72 = v86;
          sub_1D2CDB6B4(v71, v86, type metadata accessor for VisualTranslationModel);
          *(_QWORD *)(v72 + v70) = v69;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v72, 0, 1, v9);
          swift_beginAccess();
          sub_1D2D8725C(v72, (uint64_t)v20);
          swift_endAccess();
          sub_1D2CD3734(v34, type metadata accessor for VisualTranslationModel);
          sub_1D2CCADA4((uint64_t)v89, &qword_1EFCA5C38);
          (*(void (**)(char *, uint64_t))(v18 + 8))(v68, v17);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v91 + 56))(v92, 1, 1, v7);
        }
        if (qword_1ED587858 == -1)
          goto LABEL_22;
        goto LABEL_26;
      }
    }
    v46 = (void (*)(char *, char *, uint64_t))v85;
    goto LABEL_19;
  }
  __break(1u);
LABEL_26:
  swift_once();
LABEL_22:
  v73 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v73, (uint64_t)qword_1ED5886E8);
  v74 = sub_1D2D9C8DC();
  v75 = sub_1D2D9E028();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_1D2CC0000, v74, v75, "Demuxed visual model", v76, 2u);
    MEMORY[0x1D8248974](v76, -1, -1);
  }

  sub_1D2CCADA4((uint64_t)v11, &qword_1EFCA5C38);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v90, v17);
  v77 = v92;
  sub_1D2CD1FD4(v34, v92, type metadata accessor for VisualTranslationModel);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v91 + 56))(v77, 0, 1, v7);
}

uint64_t sub_1D2D68630()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisualTranslationBatch()
{
  return objc_opt_self();
}

uint64_t sub_1D2D6867C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  unint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v54 = sub_1D2D9C6FC();
  v49 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v43 - v10;
  v11 = type metadata accessor for TextModel();
  v47 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v52 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v46 = (uint64_t)&v43 - v14;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C28);
  result = sub_1D2D9E3D0();
  v16 = result;
  v43 = a1;
  v44 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v45 = a4;
  v20 = v54;
  while (1)
  {
    if (v17)
    {
      v50 = (v17 - 1) & v17;
      v51 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v44)
        return v16;
      v23 = v43[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v44)
          return v16;
        v23 = v43[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v44)
            return v16;
          v23 = v43[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v44)
              return v16;
            v23 = v43[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v44)
                  return v16;
                v23 = v43[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v50 = (v23 - 1) & v23;
      v51 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v46;
    v27 = *(_QWORD *)(v47 + 72);
    sub_1D2CDB6B4(a4[6] + v27 * v21, v46, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v28 = a4[7];
    v29 = v49;
    v30 = *(_QWORD *)(v49 + 72);
    v31 = v28 + v30 * v21;
    v32 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v31, v20);
    sub_1D2CD1FD4(v26, v52, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v33 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v33(v53, v32, v20);
    sub_1D2D9E5C8();
    sub_1D2D6909C(&qword_1ED586CD8, MEMORY[0x1E0CB09C8]);
    sub_1D2D9DC50();
    result = sub_1D2D9E5F8();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    sub_1D2CD1FD4(v52, *(_QWORD *)(v16 + 48) + v37 * v27, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v16 + 56) + v37 * v30, v53, v54);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v45;
    v17 = v50;
    v18 = v51;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1D2D68A64(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  _QWORD *v45;
  int64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v43 = a2;
  v44 = a1;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8C88);
  MEMORY[0x1E0C80A78](v51);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9C6FC();
  v58 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = type metadata accessor for TextModel();
  v50 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a3;
  v53 = 0;
  v17 = 0;
  v20 = a3[8];
  v19 = a3 + 8;
  v18 = v20;
  v21 = 1 << *((_BYTE *)v19 - 32);
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  v45 = v19;
  v46 = (unint64_t)(v21 + 63) >> 6;
  v59 = a4;
  v57 = a4 + 56;
  v48 = v13;
  v49 = v7;
  v47 = v16;
  while (1)
  {
    if (v23)
    {
      v55 = (v23 - 1) & v23;
      v56 = v17;
      v24 = __clz(__rbit64(v23)) | (v17 << 6);
      goto LABEL_22;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v25 >= v46)
      goto LABEL_30;
    v26 = v45[v25];
    v27 = v17 + 1;
    if (!v26)
    {
      v27 = v17 + 2;
      if (v17 + 2 >= v46)
        goto LABEL_30;
      v26 = v45[v27];
      if (!v26)
      {
        v27 = v17 + 3;
        if (v17 + 3 >= v46)
          goto LABEL_30;
        v26 = v45[v27];
        if (!v26)
          break;
      }
    }
LABEL_21:
    v55 = (v26 - 1) & v26;
    v56 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_22:
    v29 = v52;
    sub_1D2CDB6B4(v52[6] + *(_QWORD *)(v50 + 72) * v24, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v30 = v29[7];
    v31 = v58[9];
    v54 = v24;
    v32 = v30 + v31 * v24;
    v33 = (void (*)(char *, uint64_t, uint64_t))v58[2];
    v33(v13, v32, v8);
    sub_1D2CDB6B4((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v33(&v7[*(int *)(v51 + 48)], (uint64_t)v13, v8);
    if (*(_QWORD *)(v59 + 16)
      && (v34 = v59,
          sub_1D2D6909C(&qword_1ED586CD8, MEMORY[0x1E0CB09C8]),
          v35 = sub_1D2D9DC44(),
          v36 = -1 << *(_BYTE *)(v34 + 32),
          v37 = v35 & ~v36,
          ((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0))
    {
      v38 = ~v36;
      while (1)
      {
        v33(v10, *(_QWORD *)(v59 + 48) + v37 * v31, v8);
        sub_1D2D6909C(&qword_1EFCA79A8, MEMORY[0x1E0CB09D0]);
        v39 = sub_1D2D9DC8C();
        v40 = (void (*)(char *, uint64_t))v58[1];
        v40(v10, v8);
        if ((v39 & 1) != 0)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_27;
      }
      v7 = v49;
      sub_1D2CCADA4((uint64_t)v49, &qword_1EFCA8C88);
      v13 = v48;
      v40(v48, v8);
      v16 = v47;
      sub_1D2CD3734((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v23 = v55;
      v17 = v56;
    }
    else
    {
LABEL_27:
      v7 = v49;
      sub_1D2CCADA4((uint64_t)v49, &qword_1EFCA8C88);
      v13 = v48;
      ((void (*)(char *, uint64_t))v58[1])(v48, v8);
      v16 = v47;
      sub_1D2CD3734((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      *(unint64_t *)((char *)v44 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      v41 = __OFADD__(v53++, 1);
      v23 = v55;
      v17 = v56;
      if (v41)
      {
        __break(1u);
LABEL_30:
        sub_1D2D6867C(v44, v43, v53, v52);
        return;
      }
    }
  }
  v28 = v17 + 4;
  if (v17 + 4 >= v46)
    goto LABEL_30;
  v26 = v45[v28];
  if (v26)
  {
    v27 = v17 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v46)
      goto LABEL_30;
    v26 = v45[v27];
    ++v28;
    if (v26)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1D2D68EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1D2D68A64((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, (_QWORD *)a1, a2);
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1D2D68A64((unint64_t *)v12, v7, (_QWORD *)a1, a2);
    v11 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1D8248974](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1D2D6909C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D2D9C6FC();
    result = MEMORY[0x1D82488A8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2D690DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D69124()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D691A8(char a1)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D691FC()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D692C8()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D69344(char a1)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D693A0()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D69418(char *a1)
{
  sub_1D2D2D03C(*a1);
}

void sub_1D2D69424()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D69470()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D694EC()
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D69528()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D69590()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D2D9E5C8();
  __asm { BR              X9 }
}

uint64_t sub_1D2D695D8()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D69654@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D6B8D8();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D69688()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2D696B8 + 4 * byte_1D2DA5976[*v0]))();
}

void sub_1D2D696B8(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676952706F74;
  a1[1] = 0xE800000000000000;
}

void sub_1D2D696D4(_QWORD *a1@<X8>)
{
  *a1 = 0x654C6D6F74746F62;
  a1[1] = 0xEA00000000007466;
}

void sub_1D2D696F4(_QWORD *a1@<X8>)
{
  *a1 = 0x69526D6F74746F62;
  a1[1] = 0xEB00000000746867;
}

uint64_t sub_1D2D69718()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D69748 + 4 * byte_1D2DA597A[*v0]))(0x7466654C706F74, 0xE700000000000000);
}

uint64_t sub_1D2D69748()
{
  return 0x7468676952706F74;
}

uint64_t sub_1D2D69760()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1D2D6977C()
{
  return 0x69526D6F74746F62;
}

uint64_t sub_1D2D6979C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D6B8D8();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D697C8()
{
  sub_1D2D6B91C();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D697F0()
{
  sub_1D2D6B91C();
  return sub_1D2D9E634();
}

double sub_1D2D69818()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v20;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *v0;
  v4 = v0[1];
  v5 = CGPointMake(v1 - *v0, v2 - v4);
  v7 = v6;
  v8 = v0[4];
  v9 = v0[5];
  v10 = CGPointMake(v8 - v3, v9 - v4);
  v20 = vabdd_f64(v5 * v11, v7 * v10) * 0.5;
  v12 = v0[6];
  v13 = v0[7];
  v14 = CGPointMake(v1 - v12, v2 - v13);
  v16 = v15;
  v17 = CGPointMake(v8 - v12, v9 - v13);
  return v20 + vabdd_f64(v14 * v18, v16 * v17) * 0.5;
}

uint64_t sub_1D2D698D4()
{
  double *v0;
  double v1;
  double v3;
  double v5;
  double v7;
  double v9;
  double v11;
  double v13;
  double v14;
  _BOOL4 v15;

  v1 = 1.0;
  if (*v0 >= -1.0 && *v0 <= 1.0)
  {
    v3 = v0[1];
    if (v3 >= -1.0 && v3 <= 1.0)
      return 1;
  }
  v5 = v0[2];
  if (v5 >= -1.0 && v5 <= 1.0)
  {
    v7 = v0[3];
    v1 = 1.0;
    if (v7 >= -1.0 && v7 <= 1.0)
      return 1;
  }
  v9 = v0[4];
  if (v9 >= -1.0 && v9 <= v1)
  {
    v11 = v0[5];
    if (v11 >= -1.0 && v11 <= v1)
      return 1;
  }
  v13 = v0[6];
  v14 = v0[7];
  v15 = v13 >= -1.0;
  if (v13 > v1)
    v15 = 0;
  if (v14 < -1.0)
    v15 = 0;
  return v14 <= v1 && v15;
}

void sub_1D2D69978(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;

  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v14 = *v3 < -1.0 || v4 > 1.0 || v5 < -1.0 || v5 > 1.0;
  if (!v14
    || (v6 >= -1.0 ? (v15 = v6 > 1.0) : (v15 = 1),
        !v15 ? (v16 = v7 < -1.0) : (v16 = 1),
        !v16 ? (v17 = v7 > 1.0) : (v17 = 1),
        !v17
     || v8 >= -1.0 && v8 <= 1.0 && v9 >= -1.0 && v9 <= 1.0
     || v10 >= -1.0 && v10 <= 1.0 && v11 >= -1.0 && v11 <= 1.0))
  {
    v4 = v4 * a2;
    v5 = v5 * a3;
    v6 = v6 * a2;
    v7 = v7 * a3;
    v8 = v8 * a2;
    v9 = v9 * a3;
    v10 = v10 * a2;
    v11 = v11 * a3;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
}

uint64_t sub_1D2D69A40(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D6B91C();
  sub_1D2D9E61C();
  v12 = *v3;
  v11 = 0;
  type metadata accessor for CGPoint(0);
  sub_1D2CC66E4(&qword_1EFCA8D18, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA20]);
  sub_1D2D9E4F0();
  if (!v2)
  {
    v12 = v3[1];
    v11 = 1;
    sub_1D2D9E4F0();
    v12 = v3[2];
    v11 = 2;
    sub_1D2D9E4F0();
    v12 = v3[3];
    v11 = 3;
    sub_1D2D9E4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1D2D69C10@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1D2D6B69C(a1, v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1D2D69C50(_QWORD *a1)
{
  return sub_1D2D69A40(a1);
}

BOOL sub_1D2D69C64(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1D2D6B098((double *)v7, (double *)v8);
}

void ProjectionTransform.init(from:)()
{
  sub_1D2D9E394();
  __break(1u);
}

void ProjectionTransform.encode(to:)()
{
  sub_1D2D9E394();
  __break(1u);
}

void sub_1D2D69D5C()
{
  sub_1D2D9E394();
  __break(1u);
}

void sub_1D2D69DB4()
{
  sub_1D2D9E394();
  __break(1u);
}

void sub_1D2D69E0C(char *a1)
{
  sub_1D2D2CAE4(*a1);
}

void sub_1D2D69E18()
{
  char *v0;

  sub_1D2D69344(*v0);
}

void sub_1D2D69E20()
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D69E68()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D69ECC(uint64_t a1)
{
  char *v1;

  sub_1D2D70224(a1, *v1);
}

uint64_t sub_1D2D69ED4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D6B8D8();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D69F08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2D69F44 + 4 * byte_1D2DA5982[*v0]))();
}

void sub_1D2D69F44(_QWORD *a1@<X8>)
{
  *a1 = 1684108657;
  a1[1] = 0xE400000000000000;
}

void sub_1D2D69F58(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "projTransform");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D2D69F80(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001D2DA7900;
}

uint64_t sub_1D2D69FA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D69FDC + 4 * byte_1D2DA5986[*v0]))(0x656E696C65736162, 0xED0000656C676E41);
}

uint64_t sub_1D2D69FDC()
{
  return 1684108657;
}

uint64_t sub_1D2D69FEC()
{
  return 0x6E6172546A6F7270;
}

unint64_t sub_1D2D6A010()
{
  return 0xD000000000000012;
}

uint64_t sub_1D2D6A02C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D6B8D8();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D6A058()
{
  sub_1D2D6B290();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D6A080()
{
  sub_1D2D6B290();
  return sub_1D2D9E634();
}

uint64_t PageBounds.init(topLeft:topRight:bottomLeft:bottomRight:radians:homography:homographySpace:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, double a13, double a14)
{
  uint64_t result;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  double v30;
  double v31;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[64];

  sub_1D2CD2018(a3, (uint64_t)&v41, &qword_1EFCA8C90);
  result = sub_1D2CD2018(a3, (uint64_t)v42, &qword_1EFCA8C90);
  if ((v42[48] & 1) != 0)
  {
    v24 = *MEMORY[0x1E0CD2610];
    v25 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 16);
    v26 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v27 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 48);
    v28 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v29 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 80);
    v30 = 1.0;
    v31 = 1.0;
  }
  else
  {
    v30 = a13;
    v31 = a14;
    result = CATransform3DMakeWithSIMDFloat3x3();
    v24 = v35;
    v25 = v36;
    v26 = v37;
    v27 = v38;
    v28 = v39;
    v29 = v40;
  }
  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(double *)(a4 + 32) = a7;
  *(double *)(a4 + 40) = a8;
  *(double *)(a4 + 48) = a9;
  *(double *)(a4 + 56) = a10;
  *(double *)(a4 + 64) = a11;
  *(double *)(a4 + 72) = a12;
  *(_OWORD *)(a4 + 80) = v24;
  *(_QWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 104) = v26;
  *(_QWORD *)(a4 + 120) = v27;
  *(_OWORD *)(a4 + 128) = v28;
  *(_QWORD *)(a4 + 144) = v29;
  *(double *)(a4 + 152) = v30;
  *(double *)(a4 + 160) = v31;
  return result;
}

uint64_t sub_1D2D6A220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  id v20;
  __int128 v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  double v56;
  double v57;

  v4 = objc_msgSend(a1, sel_boundingQuad);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(a1, sel_originalBoundingQuad);
    if (v6)
    {
      v7 = v6;

      v5 = v7;
    }
    objc_msgSend(v5, sel_topLeft);
    v41 = v9;
    v42 = v8;
    objc_msgSend(v5, sel_topRight);
    v39 = v11;
    v40 = v10;
    objc_msgSend(v5, sel_bottomLeft);
    v37 = v13;
    v38 = v12;
    objc_msgSend(v5, sel_bottomRight);
    v15 = v14;
    v17 = v16;
    objc_msgSend(a1, sel_baselineAngle);
    v19 = v18;
    v20 = objc_msgSend(a1, sel_originalBoundingQuad);
    if (v20)
    {
      objc_msgSend(a1, sel_boundingQuadHomography);
      v33 = v21;

    }
    v22 = objc_msgSend(a1, sel_originalBoundingQuad, v33);
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, sel_normalizationSize);
      v25 = v24;
      v27 = v26;

      v28 = -v19;
      if (v20)
      {
LABEL_9:
        CATransform3DMakeWithSIMDFloat3x3();
        v29 = v44;
        v35 = v46;
        v36 = v43;
        v30 = v47;
        v34 = v49;
        v31 = v50;
LABEL_12:

        *(double *)&v43 = v28;
        BYTE8(v43) = 0;
        v44 = v42;
        v45 = v41;
        *(_QWORD *)&v46 = v40;
        *((_QWORD *)&v46 + 1) = v39;
        v47 = v38;
        v48 = v37;
        *(_QWORD *)&v49 = v15;
        *((_QWORD *)&v49 + 1) = v17;
        v50 = v36;
        v51 = v29;
        v52 = v35;
        v53 = v30;
        v54 = v34;
        v55 = v31;
        v56 = v25;
        v57 = v27;
        sub_1D2D6B9C8((uint64_t)&v43);
        return sub_1D2CD2018((uint64_t)&v43, a2, &qword_1ED587100);
      }
    }
    else
    {
      v25 = *MEMORY[0x1E0C9D820];
      v27 = *(double *)(MEMORY[0x1E0C9D820] + 8);
      v28 = -v19;
      if (v20)
        goto LABEL_9;
    }
    v29 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 16);
    v35 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v36 = *MEMORY[0x1E0CD2610];
    v30 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 48);
    v34 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v31 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 80);
    v25 = 1.0;
    v27 = 1.0;
    goto LABEL_12;
  }

  sub_1D2D6B9A0((uint64_t)&v43);
  return sub_1D2CD2018((uint64_t)&v43, a2, &qword_1ED587100);
}

double sub_1D2D6A4CC@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  double v28;
  double v29;
  double v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double result;
  _QWORD v50[6];
  uint64_t v51;
  double v52;
  double v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _QWORD v76[8];
  _BYTE v77[64];

  v4 = sub_1D2D9DC14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D30);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9DBFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecognizedItem.originalBounds.getter((uint64_t)v10);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v64 = a1;
  v15(v7, (uint64_t)a1, v4);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  v65 = v4;
  if (v16 == 1)
  {
    sub_1D2D9DC08();
    v63 = *(void (**)(char *, uint64_t))(v5 + 8);
    v63(v7, v4);
    sub_1D2D6B960((uint64_t)v10);
  }
  else
  {
    v63 = *(void (**)(char *, uint64_t))(v5 + 8);
    v63(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  }
  v17 = v64;
  RecognizedItem.homography.getter((uint64_t)v76);
  v50[1] = v76[0];
  v50[2] = v76[2];
  v50[3] = v76[1];
  v50[4] = v76[4];
  v50[5] = v76[3];
  v51 = v76[5];
  sub_1D2D9DBCC();
  v61 = v19;
  v62 = v18;
  sub_1D2D9DBE4();
  v59 = v21;
  v60 = v20;
  sub_1D2D9DB9C();
  v57 = v23;
  v58 = v22;
  sub_1D2D9DBB4();
  v55 = v25;
  v56 = v24;
  v26 = RecognizedItem.baselineAngle.getter();
  v54 = v27;
  v28 = COERCE_DOUBLE(RecognizedItem.homographySize.getter());
  v30 = v29;
  v32 = v31;
  sub_1D2CD2018((uint64_t)v76, (uint64_t)v77, &qword_1EFCA8C90);
  if ((v77[48] & 1) != 0)
  {
    v33 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 8);
    v34 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 16);
    v35 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 32);
    v36 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 40);
    v37 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 48);
    v38 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 64);
    v39 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 72);
    v40 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 80);
    v51 = *MEMORY[0x1E0CD2610];
    v52 = 1.0;
    v53 = 1.0;
  }
  else
  {
    v41 = *MEMORY[0x1E0C9D820];
    if ((v32 & 1) != 0)
      v42 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    else
      v42 = v30;
    if ((v32 & 1) == 0)
      v41 = v28;
    v52 = v41;
    v53 = v42;
    CATransform3DMakeWithSIMDFloat3x3();
    v33 = v67;
    v51 = v66;
    v34 = v68;
    v35 = v69;
    v36 = v70;
    v37 = v71;
    v38 = v72;
    v39 = v73;
    v40 = v74;
  }
  if ((v54 & 1) != 0)
    v43 = v26;
  else
    v43 = v26 ^ 0x8000000000000000;
  v75 = v54 & 1;
  v63(v17, v65);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(_QWORD *)a2 = v43;
  *(_BYTE *)(a2 + 8) = v75;
  *(_DWORD *)(a2 + 9) = v66;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v66 + 3);
  v44 = v61;
  *(_QWORD *)(a2 + 16) = v62;
  *(_QWORD *)(a2 + 24) = v44;
  v45 = v59;
  *(_QWORD *)(a2 + 32) = v60;
  *(_QWORD *)(a2 + 40) = v45;
  v46 = v57;
  *(_QWORD *)(a2 + 48) = v58;
  *(_QWORD *)(a2 + 56) = v46;
  v47 = v55;
  *(_QWORD *)(a2 + 64) = v56;
  *(_QWORD *)(a2 + 72) = v47;
  *(_QWORD *)(a2 + 80) = v51;
  *(_QWORD *)(a2 + 88) = v33;
  *(_QWORD *)(a2 + 96) = v34;
  *(_QWORD *)(a2 + 104) = v35;
  *(_QWORD *)(a2 + 112) = v36;
  *(_QWORD *)(a2 + 120) = v37;
  *(_QWORD *)(a2 + 128) = v38;
  *(_QWORD *)(a2 + 136) = v39;
  v48 = v52;
  *(_QWORD *)(a2 + 144) = v40;
  *(double *)(a2 + 152) = v48;
  result = v53;
  *(double *)(a2 + 160) = v53;
  return result;
}

double sub_1D2D6A844(uint64_t a1, uint64_t a2, char a3, char a4)
{
  double *v4;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  double v21;
  double v22;
  double v24[16];

  if ((a4 & 1) != 0)
    v8 = v4[6];
  else
    v8 = v4[2];
  if ((a4 & 1) != 0)
    v9 = v4[7];
  else
    v9 = v4[3];
  if ((a4 & 1) != 0)
    v10 = v4[2];
  else
    v10 = v4[4];
  if ((a4 & 1) != 0)
    v11 = v4[3];
  else
    v11 = v4[5];
  if ((a4 & 1) != 0)
    v12 = v4[8];
  else
    v12 = v4[6];
  if ((a4 & 1) != 0)
    v13 = v4[9];
  else
    v13 = v4[7];
  if ((a4 & 1) != 0)
    v14 = v4[4];
  else
    v14 = v4[8];
  if ((a4 & 1) != 0)
    v15 = v4[5];
  else
    v15 = v4[9];
  v24[8] = v8;
  v24[9] = v9;
  v24[10] = v10;
  v24[11] = v11;
  v24[12] = v12;
  v24[13] = v13;
  v24[14] = v14;
  v24[15] = v15;
  if ((sub_1D2D698D4() & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if (qword_1ED587858 != -1)
        swift_once();
      v16 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED5886E8);
      v17 = sub_1D2D9C8DC();
      v18 = sub_1D2D9E034();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1D2CC0000, v17, v18, "Bounding box request with nil fit results in a normalized rect", v19, 2u);
        MEMORY[0x1D8248974](v19, -1, -1);
      }

    }
    else
    {
      sub_1D2D69978(v24, *(double *)&a1, *(double *)&a2);
      v8 = v24[0];
      v9 = v24[1];
      v10 = v24[2];
      v11 = v24[3];
      v12 = v24[4];
      v13 = v24[5];
      v14 = v24[6];
      v15 = v24[7];
    }
  }
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC6E20]), sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v8, v9, v10, v11, v12, v13, v14, v15);
  objc_msgSend(v20, sel_minimumBoundingRectWithoutRotation);
  v22 = v21;

  return v22;
}

uint64_t PageBounds.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8C98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_BYTE *)v1 + 8);
  v10 = v1[2];
  v42 = v1[3];
  v43 = v10;
  v11 = v1[4];
  v40 = v1[5];
  v41 = v11;
  v39 = v1[6];
  v38 = v1[7];
  v37 = v1[8];
  v36 = v1[9];
  v35 = v1[10];
  v34 = v1[11];
  v12 = v1[13];
  v33 = v1[12];
  v13 = v1[14];
  v14 = v1[15];
  v16 = v1[16];
  v15 = v1[17];
  v18 = v1[18];
  v17 = v1[19];
  v19 = v1[20];
  v20 = a1[3];
  v21 = a1;
  v23 = v22;
  __swift_project_boxed_opaque_existential_1(v21, v20);
  sub_1D2D6B290();
  sub_1D2D9E61C();
  v44 = v8;
  LOBYTE(v45) = v9;
  v53 = 0;
  sub_1D2D6B2D4();
  sub_1D2D9E49C();
  if (!v2)
  {
    v30 = v18;
    v31 = v15;
    v32 = v16;
    v24 = v33;
    v25 = v34;
    v26 = v35;
    v28 = v19;
    v29 = v17;
    v44 = v43;
    v45 = v42;
    v46 = v41;
    v47 = v40;
    v48 = v39;
    v49 = v38;
    v50 = v37;
    v51 = v36;
    v53 = 1;
    sub_1D2D6B318();
    sub_1D2D9E4F0();
    v44 = v26;
    v45 = v25;
    v46 = v24;
    v47 = v12;
    v48 = v13;
    v49 = v14;
    v50 = v32;
    v51 = v31;
    v52 = v30;
    v53 = 2;
    sub_1D2D6B35C();
    sub_1D2D9E4F0();
    v44 = v29;
    v45 = v28;
    v53 = 3;
    type metadata accessor for CGSize(0);
    sub_1D2CC66E4(&qword_1EFCA8CC0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9B9F0]);
    sub_1D2D9E4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v23);
}

uint64_t PageBounds.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8CC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D6B290();
  sub_1D2D9E610();
  if (!v2)
  {
    v42 = 0;
    sub_1D2D6B3A0();
    sub_1D2D9E424();
    v9 = v33;
    v10 = BYTE8(v33);
    v42 = 1;
    sub_1D2D6B3E4();
    sub_1D2D9E46C();
    v11 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    v16 = v38;
    v17 = v39;
    v42 = 2;
    sub_1D2D6B428();
    sub_1D2D9E46C();
    v31 = *((_QWORD *)&v33 + 1);
    v32 = v33;
    v29 = v35;
    v30 = v34;
    v28 = v36;
    v27 = v37;
    v26 = v38;
    v25 = v39;
    v24 = v40;
    type metadata accessor for CGSize(0);
    v42 = 3;
    sub_1D2CC66E4(&qword_1EFCA8CE8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9BA08]);
    sub_1D2D9E46C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v41 = v10;
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 40) = v13;
    *(_QWORD *)(a2 + 48) = v14;
    *(_QWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 64) = v16;
    *(_QWORD *)(a2 + 72) = v17;
    v19 = v31;
    *(_QWORD *)(a2 + 80) = v32;
    *(_QWORD *)(a2 + 88) = v19;
    v20 = v29;
    *(_QWORD *)(a2 + 96) = v30;
    *(_QWORD *)(a2 + 104) = v20;
    v21 = v27;
    *(_QWORD *)(a2 + 112) = v28;
    *(_QWORD *)(a2 + 120) = v21;
    v22 = v25;
    *(_QWORD *)(a2 + 128) = v26;
    *(_QWORD *)(a2 + 136) = v22;
    *(_QWORD *)(a2 + 144) = v24;
    *(_OWORD *)(a2 + 152) = v33;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1D2D6B06C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PageBounds.init(from:)(a1, a2);
}

uint64_t sub_1D2D6B080(_QWORD *a1)
{
  return PageBounds.encode(to:)(a1);
}

BOOL sub_1D2D6B098(double *a1, double *a2)
{
  return *a1 == *a2
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7];
}

BOOL _s13TranslationUI10PageBoundsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float64_t v2;
  char v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  double v8;
  __int128 v9;
  __int128 v10;
  double v11;
  double v12;
  float64_t v13;
  int v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  double v19;
  __int128 v20;
  __int128 v21;
  double v22;
  double v23;
  _BOOL8 result;
  int16x4_t v25;
  int32x2_t v26;
  _OWORD v27[4];
  uint64_t v28;
  _OWORD v29[4];
  uint64_t v30;

  v2 = *(double *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4.f64[0] = *(float64_t *)(a1 + 16);
  v5 = *(float64x2_t *)(a1 + 40);
  v6 = *(float64x2_t *)(a1 + 24);
  v7 = *(float64x2_t *)(a1 + 56);
  v8 = *(double *)(a1 + 72);
  v9 = *(_OWORD *)(a1 + 128);
  v27[2] = *(_OWORD *)(a1 + 112);
  v27[3] = v9;
  v28 = *(_QWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 96);
  v27[0] = *(_OWORD *)(a1 + 80);
  v27[1] = v10;
  v12 = *(double *)(a1 + 152);
  v11 = *(double *)(a1 + 160);
  v13 = *(double *)a2;
  v14 = *(unsigned __int8 *)(a2 + 8);
  v15.f64[0] = *(float64_t *)(a2 + 16);
  v16 = *(float64x2_t *)(a2 + 40);
  v17 = *(float64x2_t *)(a2 + 24);
  v18 = *(float64x2_t *)(a2 + 56);
  v19 = *(double *)(a2 + 72);
  v20 = *(_OWORD *)(a2 + 128);
  v29[2] = *(_OWORD *)(a2 + 112);
  v29[3] = v20;
  v30 = *(_QWORD *)(a2 + 144);
  v21 = *(_OWORD *)(a2 + 96);
  v29[0] = *(_OWORD *)(a2 + 80);
  v29[1] = v21;
  v23 = *(double *)(a2 + 152);
  v22 = *(double *)(a2 + 160);
  result = 0;
  if ((v3 & 1) != 0)
  {
    if (!v14)
      return result;
    if (v4.f64[0] != v15.f64[0])
      return result;
    if (v6.f64[0] != v17.f64[0])
      return result;
    v25 = vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v6, v17), (int32x4_t)vceqq_f64(v5, v16)));
    if ((v25.i8[2] & 1) == 0)
      return result;
    if (v5.f64[0] != v16.f64[0])
      return result;
    if ((v25.i8[6] & 1) == 0)
      return result;
    v26 = vmovn_s64(vceqq_f64(v7, v18));
    if ((v26.i8[0] & 1) == 0 || (v26.i8[4] & 1) == 0)
      return result;
  }
  else
  {
    if ((v14 & 1) != 0)
      return result;
    v4.f64[1] = v2;
    v15.f64[1] = v13;
    if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v4, v15), (int32x4_t)vceqq_f64(v6, v17)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v5, v16), (int32x4_t)vceqq_f64(v7, v18)))), 7uLL))) & 1) == 0)return result;
  }
  if (v8 == v19)
  {
    if ((MEMORY[0x1D8246C88](v27, v29) & 1) != 0)
      return v11 == v22 && v12 == v23;
    else
      return 0;
  }
  return result;
}

unint64_t sub_1D2D6B290()
{
  unint64_t result;

  result = qword_1EFCA8CA0;
  if (!qword_1EFCA8CA0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5BFC, &type metadata for PageBounds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CA0);
  }
  return result;
}

unint64_t sub_1D2D6B2D4()
{
  unint64_t result;

  result = qword_1EFCA8CA8;
  if (!qword_1EFCA8CA8)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CA8);
  }
  return result;
}

unint64_t sub_1D2D6B318()
{
  unint64_t result;

  result = qword_1EFCA8CB0;
  if (!qword_1EFCA8CB0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5BD4, &type metadata for VisualTranslationQuad);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CB0);
  }
  return result;
}

unint64_t sub_1D2D6B35C()
{
  unint64_t result;

  result = qword_1EFCA8CB8;
  if (!qword_1EFCA8CB8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ProjectionTransform, MEMORY[0x1E0CDB500]);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CB8);
  }
  return result;
}

unint64_t sub_1D2D6B3A0()
{
  unint64_t result;

  result = qword_1EFCA8CD0;
  if (!qword_1EFCA8CD0)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CD0);
  }
  return result;
}

unint64_t sub_1D2D6B3E4()
{
  unint64_t result;

  result = qword_1EFCA8CD8;
  if (!qword_1EFCA8CD8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5BAC, &type metadata for VisualTranslationQuad);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CD8);
  }
  return result;
}

unint64_t sub_1D2D6B428()
{
  unint64_t result;

  result = qword_1EFCA8CE0;
  if (!qword_1EFCA8CE0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for ProjectionTransform, MEMORY[0x1E0CDB500]);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CE0);
  }
  return result;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PageBounds(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PageBounds(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 168) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PageBounds()
{
  return &type metadata for PageBounds;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VisualTranslationQuad(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VisualTranslationQuad(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationQuad()
{
  return &type metadata for VisualTranslationQuad;
}

ValueMetadata *type metadata accessor for PageBounds.CodingKeys()
{
  return &type metadata for PageBounds.CodingKeys;
}

unint64_t sub_1D2D6B5C8()
{
  unint64_t result;

  result = qword_1EFCA8CF0;
  if (!qword_1EFCA8CF0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5B5C, &type metadata for PageBounds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CF0);
  }
  return result;
}

unint64_t sub_1D2D6B610()
{
  unint64_t result;

  result = qword_1EFCA8CF8;
  if (!qword_1EFCA8CF8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5A94, &type metadata for PageBounds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8CF8);
  }
  return result;
}

unint64_t sub_1D2D6B658()
{
  unint64_t result;

  result = qword_1EFCA8D00;
  if (!qword_1EFCA8D00)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5ABC, &type metadata for PageBounds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D00);
  }
  return result;
}

uint64_t sub_1D2D6B69C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D6B91C();
  sub_1D2D9E610();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  type metadata accessor for CGPoint(0);
  v20 = 0;
  sub_1D2CC66E4(&qword_1EFCA8D28, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA30]);
  sub_1D2D9E46C();
  v9 = v18;
  v10 = v19;
  v20 = 1;
  sub_1D2D9E46C();
  v11 = v18;
  v12 = v19;
  v20 = 2;
  sub_1D2D9E46C();
  v13 = v18;
  v14 = v19;
  v20 = 3;
  sub_1D2D9E46C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v18;
  v16 = v19;
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v16;
  return result;
}

uint64_t sub_1D2D6B8D8()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1D2D6B91C()
{
  unint64_t result;

  result = qword_1EFCA8D10;
  if (!qword_1EFCA8D10)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5D3C, &type metadata for VisualTranslationQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D10);
  }
  return result;
}

uint64_t sub_1D2D6B960(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1D2D6B9A0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 168) = 1;
  return result;
}

uint64_t sub_1D2D6B9C8(uint64_t result)
{
  *(_BYTE *)(result + 168) = 0;
  return result;
}

uint64_t _s13TranslationUI10PageBoundsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D2D6BA1C + 4 * byte_1D2DA598F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D2D6BA50 + 4 * byte_1D2DA598A[v4]))();
}

uint64_t sub_1D2D6BA50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D6BA58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D6BA60);
  return result;
}

uint64_t sub_1D2D6BA6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D6BA74);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D2D6BA78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D6BA80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationQuad.CodingKeys()
{
  return &type metadata for VisualTranslationQuad.CodingKeys;
}

unint64_t sub_1D2D6BAA0()
{
  unint64_t result;

  result = qword_1EFCA8D38;
  if (!qword_1EFCA8D38)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5D14, &type metadata for VisualTranslationQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D38);
  }
  return result;
}

unint64_t sub_1D2D6BAE8()
{
  unint64_t result;

  result = qword_1EFCA8D40;
  if (!qword_1EFCA8D40)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5C4C, &type metadata for VisualTranslationQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D40);
  }
  return result;
}

unint64_t sub_1D2D6BB30()
{
  unint64_t result;

  result = qword_1EFCA8D48;
  if (!qword_1EFCA8D48)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5C74, &type metadata for VisualTranslationQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D48);
  }
  return result;
}

uint64_t sub_1D2D6BB78()
{
  return sub_1D2CFC574();
}

uint64_t sub_1D2D6BB8C()
{
  return sub_1D2CFC574();
}

uint64_t VisualTranslationErrorViewModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  VisualTranslationErrorViewModel.init()();
  return v0;
}

uint64_t VisualTranslationErrorViewModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D50);
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v29);
  v28 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D58);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9D2F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v27 - v16);
  v18 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  sub_1D2D9DAF4();
  *v17 = v19;
  v17[1] = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v17, *MEMORY[0x1E0CDC3D8], v11);
  (*(void (**)(char *, _QWORD *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1D2D9C984();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v17, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  v21 = v0;
  v22 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  v23 = type metadata accessor for TranslationUnavailableModel(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v6, 1, 1, v23);
  sub_1D2D6BE54((uint64_t)v6, v28);
  v25 = v30;
  sub_1D2D9C984();
  sub_1D2CCADA4((uint64_t)v6, &qword_1ED586448);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v22, v25, v32);
  v24((char *)(v21 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel), 1, 1, v23);
  return v21;
}

uint64_t sub_1D2D6BE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D6BE9C(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint8_t *v44;
  char *v45;
  int v46;
  char *v47;
  uint64_t v48;
  _QWORD v49[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DC0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = a1[1];
  if (v14)
  {
    v15 = *a1;
    if (qword_1ED587858 != -1)
      swift_once();
    v16 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED5886E8);
    swift_bridgeObjectRetain_n();
    v17 = sub_1D2D9C8DC();
    v18 = sub_1D2D9E04C();
    v19 = v18;
    v20 = v15 >> 8;
    if (os_log_type_enabled(v17, v18))
    {
      v47 = v13;
      v21 = swift_slowAlloc();
      v46 = v19;
      v22 = (uint8_t *)v21;
      v43 = (_QWORD *)swift_slowAlloc();
      v44 = v22;
      *(_DWORD *)v22 = 138412290;
      sub_1D2D5F0C4();
      v23 = swift_allocError();
      *(_WORD *)v24 = v15;
      *(_QWORD *)(v24 + 8) = v14;
      swift_bridgeObjectRetain();
      v25 = sub_1D2D9C5F4();
      v45 = v4;
      v26 = v15 >> 8;
      v27 = v15;
      v15 = (unint64_t)v7;
      v28 = v25;
      v29 = (void *)v23;
      v13 = v47;

      v49[0] = v28;
      sub_1D2D9E1B4();
      v30 = v43;
      *v43 = v28;
      v7 = (char *)v15;
      LOBYTE(v15) = v27;
      LOBYTE(v20) = v26;
      v4 = v45;
      swift_bridgeObjectRelease_n();
      v31 = v44;
      _os_log_impl(&dword_1D2CC0000, v17, (os_log_type_t)v46, "Setting UI to show error: %@", v44, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v30, -1, -1);
      MEMORY[0x1D8248974](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v49[0]) = v15;
    BYTE1(v49[0]) = v20;
    v49[1] = v14;
    swift_bridgeObjectRetain();
    sub_1D2D5F554((char *)v49, (uint64_t)v4);
    v37 = type metadata accessor for TranslationUnavailableState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v4, 1, v37) == 1)
    {
      sub_1D2CCADA4((uint64_t)v4, &qword_1EFCA8DC0);
      v38 = type metadata accessor for TranslationUnavailableModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v13, 1, 1, v38);
    }
    else
    {
      sub_1D2D5FC28();
      sub_1D2CD3734((uint64_t)v4, type metadata accessor for TranslationUnavailableState);
      v39 = type metadata accessor for TranslationUnavailableModel(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 0, 1, v39);
    }
    sub_1D2D6BE54((uint64_t)v13, (uint64_t)v10);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2D6BE54((uint64_t)v10, (uint64_t)v7);
    v40 = v48;
    swift_retain();
    sub_1D2D9C9C0();
    sub_1D2CCADA4((uint64_t)v10, &qword_1ED586448);
    sub_1D2D6BE54((uint64_t)v13, (uint64_t)v10);
    v41 = v40 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1D2D6D2C4((uint64_t)v10, v41);
    swift_endAccess();
    return sub_1D2CCADA4((uint64_t)v13, &qword_1ED586448);
  }
  else
  {
    v32 = type metadata accessor for TranslationUnavailableModel(0);
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v33(v10, 1, 1, v32);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2D6BE54((uint64_t)v10, (uint64_t)v7);
    v34 = v48;
    swift_retain();
    sub_1D2D9C9C0();
    sub_1D2CCADA4((uint64_t)v10, &qword_1ED586448);
    v33(v10, 1, 1, v32);
    v35 = v34 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1D2D6D2C4((uint64_t)v10, v35);
    return swift_endAccess();
  }
}

uint64_t sub_1D2D6C3A4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v15[2];
  unint64_t v16[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15[-1] - v7;
  if (a1)
  {
    v9 = a1;
    sub_1D2D5C83C((char *)a1, v16);
    v15[0] = v16[0];
    v15[1] = v16[1];
    sub_1D2D6BE9C(v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v11 = type metadata accessor for TranslationUnavailableModel(0);
    v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v12(v8, 1, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D2D6BE54((uint64_t)v8, (uint64_t)v5);
    swift_retain();
    sub_1D2D9C9C0();
    sub_1D2CCADA4((uint64_t)v8, &qword_1ED586448);
    v12(v8, 1, 1, v11);
    v13 = v1 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1D2D6D2C4((uint64_t)v8, v13);
    return swift_endAccess();
  }
}

uint64_t sub_1D2D6C530(unsigned __int8 *a1)
{
  unint64_t v2[2];

  v2[0] = *a1 | ((unint64_t)*a1 << 8);
  v2[1] = sub_1D2CCF4A8(MEMORY[0x1E0DEE9D8]);
  sub_1D2D6BE9C(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D6C580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  v7 = type metadata accessor for TranslationUnavailableModel(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D6BE54((uint64_t)v6, (uint64_t)v3);
  swift_retain();
  sub_1D2D9C9C0();
  sub_1D2CCADA4((uint64_t)v6, &qword_1ED586448);
  v8(v6, 1, 1, v7);
  v9 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
  swift_beginAccess();
  sub_1D2D6D2C4((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1D2D6C6D4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  CGFloat *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  double MidX;
  CGFloat v56;
  CGFloat Height;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[4];
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v9 = v8;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v61 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v61 - v25;
  v27 = type metadata accessor for TranslationUnavailableModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v69 = (uint64_t)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1D2D9D2F0();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (CGFloat *)((char *)&v61 - v35);
  v72.origin.x = a5;
  v72.origin.y = a6;
  v72.size.width = a7;
  v72.size.height = a8;
  if (CGRectGetWidth(v72) <= 0.0
    || (v73.origin.x = a5, v73.origin.y = a6, v73.size.width = a7, v73.size.height = a8, CGRectGetHeight(v73) <= 0.0))
  {
    if (qword_1ED587858 != -1)
      swift_once();
    v48 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v48, (uint64_t)qword_1ED5886E8);
    v49 = sub_1D2D9C8DC();
    v50 = sub_1D2D9E034();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1D2CC0000, v49, v50, "Presentation anchor content size contain a zero value, fallback to .bottomLeading", v51, 2u);
      MEMORY[0x1D8248974](v51, -1, -1);
    }

    sub_1D2D9DAF4();
    *(_QWORD *)v36 = v52;
    *((_QWORD *)v36 + 1) = v53;
    (*(void (**)(CGFloat *, _QWORD, uint64_t))(v31 + 104))(v36, *MEMORY[0x1E0CDC3D8], v30);
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, CGFloat *, uint64_t))(v31 + 16))(v33, v36, v30);
    swift_retain();
    sub_1D2D9C9C0();
    return (*(uint64_t (**)(CGFloat *, uint64_t))(v31 + 8))(v36, v30);
  }
  else
  {
    v68 = v23;
    if (qword_1ED587858 != -1)
      swift_once();
    v37 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED5886E8);
    v38 = sub_1D2D9C8DC();
    v39 = sub_1D2D9E01C();
    v66 = v39;
    v40 = os_log_type_enabled(v38, v39);
    v67 = v20;
    if (v40)
    {
      v41 = swift_slowAlloc();
      v63 = swift_slowAlloc();
      v71[0] = v63;
      *(_DWORD *)v41 = 136446466;
      v64 = v41 + 4;
      v42 = sub_1D2D9E10C();
      v62 = v38;
      v70 = sub_1D2CF78E0(v42, v43, v71);
      v65 = v9;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      v64 = v41 + 14;
      v44 = sub_1D2D9E10C();
      v70 = sub_1D2CF78E0(v44, v45, v71);
      v9 = v65;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      v64 = v27;
      v46 = v62;
      _os_log_impl(&dword_1D2CC0000, v62, (os_log_type_t)v66, "Presentation anchor %{public}s in %{public}s", (uint8_t *)v41, 0x16u);
      v47 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v47, -1, -1);
      MEMORY[0x1D8248974](v41, -1, -1);

      v27 = v64;
    }
    else
    {

    }
    v74.origin.x = a1;
    v74.origin.y = a2;
    v74.size.width = a3;
    v74.size.height = a4;
    MidX = CGRectGetMidX(v74);
    v75.origin.x = a5;
    v75.origin.y = a6;
    v75.size.width = a7;
    v75.size.height = a8;
    v56 = MidX / CGRectGetWidth(v75);
    v76.origin.x = a5;
    v76.origin.y = a6;
    v76.size.width = a7;
    v76.size.height = a8;
    Height = CGRectGetHeight(v76);
    *v36 = v56;
    v36[1] = a2 / Height;
    (*(void (**)(CGFloat *, _QWORD, uint64_t))(v31 + 104))(v36, *MEMORY[0x1E0CDC3D8], v30);
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, CGFloat *, uint64_t))(v31 + 16))(v33, v36, v30);
    swift_retain();
    sub_1D2D9C9C0();
    (*(void (**)(CGFloat *, uint64_t))(v31 + 8))(v36, v30);
    v58 = v9 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1D2D6BE54(v58, (uint64_t)v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      return sub_1D2CCADA4((uint64_t)v26, &qword_1ED586448);
    }
    else
    {
      v59 = v69;
      sub_1D2CD1FD4((uint64_t)v26, v69, type metadata accessor for TranslationUnavailableModel);
      v60 = (uint64_t)v68;
      sub_1D2D6D788(v59, (uint64_t)v68);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v60, 0, 1, v27);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1D2D6BE54(v60, (uint64_t)v67);
      swift_retain();
      sub_1D2D9C9C0();
      sub_1D2CCADA4(v60, &qword_1ED586448);
      return sub_1D2CD3734(v59, type metadata accessor for TranslationUnavailableModel);
    }
  }
}

uint64_t VisualTranslationErrorViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1D2CCADA4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1ED586448);
  return v0;
}

uint64_t VisualTranslationErrorViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1D2CCADA4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1ED586448);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2D6CE70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for VisualTranslationErrorViewModel();
  result = sub_1D2D9C96C();
  *a1 = result;
  return result;
}

uint64_t View.errorHandler(viewModel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD v7[2];

  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1D2CC66E4(&qword_1EFCA8D60, (uint64_t (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  swift_retain();
  v7[0] = sub_1D2D9CD2C();
  v7[1] = v5;
  MEMORY[0x1D82472A0](v7, a2, &type metadata for VisualTranslationErrorModifier, a3);
  return swift_release();
}

uint64_t sub_1D2D6CF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v9[1] = a1;
  v1 = sub_1D2D9D2F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D70);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1D2CC66E4(&qword_1EFCA8D60, (uint64_t (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  sub_1D2D9CD38();
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D78);
  type metadata accessor for TranslationUnavailableModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D80);
  sub_1D2D6DAA4();
  sub_1D2CC66E4(&qword_1EFCA8D90, type metadata accessor for TranslationUnavailableModel, (uint64_t)&unk_1D2DA570C);
  sub_1D2D6DAF0();
  sub_1D2D9D734();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1D2CCADA4((uint64_t)v7, &qword_1EFCA8D70);
}

uint64_t sub_1D2D6D198()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D6D1AC()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D6D1D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1D2D6BE54(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D6BE54((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_1D2D9C9C0();
  return sub_1D2CCADA4((uint64_t)v7, &qword_1ED586448);
}

uint64_t sub_1D2D6D2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D6D30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a2;
  v3 = type metadata accessor for TranslationUnavailableModel(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranslationUIErrorView();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DA0);
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DB0);
  v15 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D6D788(a1, (uint64_t)v5);
  sub_1D2D6D788((uint64_t)v5, (uint64_t)v8);
  v18 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  sub_1D2CD3734((uint64_t)v5, type metadata accessor for TranslationUnavailableModel);
  v8[*(int *)(v6 + 20)] = v19 == 0;
  sub_1D2CD1FD4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TranslationUIErrorView);
  v20 = sub_1D2CC66E4(&qword_1EFCA8DA8, (uint64_t (*)(uint64_t))type metadata accessor for TranslationUIErrorView, (uint64_t)&protocol conformance descriptor for TranslationUIErrorView);
  sub_1D2D9D6B0();
  sub_1D2CD3734((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TranslationUIErrorView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DB8);
  sub_1D2D9D0E0();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D2DA0CB0;
  sub_1D2D9D0D4();
  sub_1D2D9D0C8();
  sub_1D2D27F68(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v31 = v6;
  v32 = v20;
  swift_getOpaqueTypeConformance2();
  sub_1D2D9D6BC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  v22 = sub_1D2D9CD98();
  LOBYTE(v8) = sub_1D2D9D410();
  v24 = v29;
  v23 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v30, v17, v29);
  v25 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D80) + 36);
  *(_QWORD *)v25 = v22;
  *(_BYTE *)(v25 + 8) = (_BYTE)v8;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v24);
}

uint64_t sub_1D2D6D654(uint64_t a1)
{
  return sub_1D2D6CF60(a1);
}

uint64_t sub_1D2D6D65C()
{
  return sub_1D2D2109C();
}

uint64_t sub_1D2D6D680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = sub_1D2D9D2F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  sub_1D2D9C9C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1D2D6D788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranslationUnavailableModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VisualTranslationErrorViewModel()
{
  uint64_t result;

  result = qword_1ED586298;
  if (!qword_1ED586298)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D6D808()
{
  return type metadata accessor for VisualTranslationErrorViewModel();
}

void sub_1D2D6D810()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2CE60DC(319, &qword_1ED586AA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC3E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
  {
    sub_1D2D6D924();
    if (v1 <= 0x3F)
    {
      sub_1D2CE60DC(319, qword_1ED586450, type metadata accessor for TranslationUnavailableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for VisualTranslationErrorViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setError(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setErrorCode(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.clearError()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setPresentationAnchorRect(_:contentRect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

void sub_1D2D6D924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED586AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED586448);
    v0 = sub_1D2D9C9CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED586AA0);
  }
}

uint64_t sub_1D2D6D97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_1D2D9CD80();
  v4[0] = v1;
  v4[1] = sub_1D2D6D9D0();
  return MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1D2D6D9D0()
{
  unint64_t result;

  result = qword_1EFCA8D68;
  if (!qword_1EFCA8D68)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5EB0, &type metadata for VisualTranslationErrorModifier);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D68);
  }
  return result;
}

_QWORD *assignWithCopy for VisualTranslationErrorModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for VisualTranslationErrorModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for VisualTranslationErrorModifier()
{
  return &type metadata for VisualTranslationErrorModifier;
}

uint64_t sub_1D2D6DA94()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D2D6DAA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA8D88;
  if (!qword_1EFCA8D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8D78);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D88);
  }
  return result;
}

unint64_t sub_1D2D6DAF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_1EFCA8D98;
  if (!qword_1EFCA8D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8D80);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8DA0);
    type metadata accessor for TranslationUIErrorView();
    sub_1D2CC66E4(&qword_1EFCA8DA8, (uint64_t (*)(uint64_t))type metadata accessor for TranslationUIErrorView, (uint64_t)&protocol conformance descriptor for TranslationUIErrorView);
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA8D98);
  }
  return result;
}

uint64_t sub_1D2D6DBC8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8D78);
  type metadata accessor for TranslationUnavailableModel(255);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8D80);
  sub_1D2D6DAA4();
  sub_1D2CC66E4(&qword_1EFCA8D90, type metadata accessor for TranslationUnavailableModel, (uint64_t)&unk_1D2DA570C);
  sub_1D2D6DAF0();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D6DC74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D6DCA4 + 4 * byte_1D2DA5F00[*v0]))(0x7478655472636FLL, 0xE700000000000000);
}

uint64_t sub_1D2D6DCA4()
{
  return 0x69666E6F4372636FLL;
}

uint64_t sub_1D2D6DD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D2D6FA0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D2D6DD48()
{
  sub_1D2D6E394();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D6DD70()
{
  sub_1D2D6E394();
  return sub_1D2D9E634();
}

uint64_t TextDiagnosticsModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v16;
  char *v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CGRect v45;
  CGRect v46;

  v2 = v1;
  v37 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DE0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D6E394();
  sub_1D2D9E61C();
  LOBYTE(v42) = 0;
  v11 = v44;
  sub_1D2D9E4A8();
  if (v11)
  {
    v12 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v13 = v10;
    v14 = v7;
  }
  else
  {
    v44 = v8;
    if (*(float *)(v2 + 16) > 0.0)
    {
      LOBYTE(v42) = 1;
      sub_1D2D9E4CC();
    }
    v16 = v4;
    v17 = v6;
    v36 = v10;
    v19 = *(double *)(v2 + 24);
    v18 = *(double *)(v2 + 32);
    v21 = *(double *)(v2 + 40);
    v20 = *(double *)(v2 + 48);
    v46.origin.x = 0.0;
    v46.origin.y = 0.0;
    v46.size.width = 0.0;
    v46.size.height = 0.0;
    v45.origin.x = v19;
    v45.origin.y = v18;
    v45.size.width = v21;
    v45.size.height = v20;
    if (CGRectEqualToRect(v45, v46))
    {
      v22 = v7;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DF0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D2DA60A0;
      *(_QWORD *)(inited + 32) = 120;
      *(_QWORD *)(inited + 40) = 0xE100000000000000;
      *(CGFloat *)(inited + 48) = v19;
      *(_QWORD *)(inited + 56) = 121;
      *(_QWORD *)(inited + 64) = 0xE100000000000000;
      *(CGFloat *)(inited + 72) = v18;
      *(_QWORD *)(inited + 80) = 0x6874646977;
      *(_QWORD *)(inited + 88) = 0xE500000000000000;
      *(CGFloat *)(inited + 96) = v21;
      *(_QWORD *)(inited + 104) = 0x746867696568;
      *(_QWORD *)(inited + 112) = 0xE600000000000000;
      *(CGFloat *)(inited + 120) = v20;
      v42 = sub_1D2CCFB88(inited);
      LOBYTE(v40) = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8DF8);
      sub_1D2D6E3D8();
      sub_1D2D9E4F0();
      v22 = v7;
      swift_bridgeObjectRelease();
    }
    v24 = v37;
    v25 = type metadata accessor for TextDiagnosticsModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v17, v2 + *(int *)(v25 + 28), v24);
    if (qword_1EFCA54F0 != -1)
      swift_once();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EFCA8DC8);
    sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
    v26 = sub_1D2D9DC8C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v24);
    if ((v26 & 1) == 0)
    {
      v42 = sub_1D2D9C714();
      v43 = v27;
      v40 = 45;
      v41 = 0xE100000000000000;
      v38 = 95;
      v39 = 0xE100000000000000;
      sub_1D2CD1430();
      sub_1D2D9E1E4();
      swift_bridgeObjectRelease();
      LOBYTE(v42) = 3;
      sub_1D2D9E4A8();
      swift_bridgeObjectRelease();
    }
    v28 = (uint64_t *)(v2 + *(int *)(v25 + 36));
    v29 = *v28;
    v30 = v28[1];
    v31 = HIBYTE(v30) & 0xF;
    if ((v30 & 0x2000000000000000) == 0)
      v31 = v29 & 0xFFFFFFFFFFFFLL;
    if (v31)
    {
      v42 = sub_1D2D9C714();
      v43 = v32;
      v40 = 45;
      v41 = 0xE100000000000000;
      v38 = 95;
      v39 = 0xE100000000000000;
      sub_1D2CD1430();
      sub_1D2D9E1E4();
      swift_bridgeObjectRelease();
      LOBYTE(v42) = 4;
      v33 = v36;
      sub_1D2D9E4A8();
      swift_bridgeObjectRelease();
      LOBYTE(v42) = 6;
      sub_1D2D9E4CC();
      v34 = v44;
      LOBYTE(v42) = 5;
      sub_1D2D9E4A8();
      v12 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
      v13 = v33;
    }
    else
    {
      v12 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
      v13 = v36;
    }
    v14 = v22;
  }
  return v12(v13, v14);
}

unint64_t sub_1D2D6E394()
{
  unint64_t result;

  result = qword_1EFCA8DE8;
  if (!qword_1EFCA8DE8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA604C, &type metadata for TextDiagnosticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8DE8);
  }
  return result;
}

unint64_t sub_1D2D6E3D8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EFCA8E00;
  if (!qword_1EFCA8E00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8DF8);
    v2 = sub_1D2D6B2D4();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFCA8E00);
  }
  return result;
}

uint64_t type metadata accessor for TextDiagnosticsModel()
{
  uint64_t result;

  result = qword_1EFCA8E90;
  if (!qword_1EFCA8E90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TextDiagnosticsModel.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  float v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int *v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  float v55;
  uint64_t result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;

  v4 = (int *)type metadata accessor for TextModel();
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v57 - v11;
  v13 = sub_1D2D9C7EC();
  v63 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (char *)&v57 - v16;
  v17 = type metadata accessor for VisualTranslationModel(0);
  v65 = *(int *)(v17 + 28);
  v18 = *(_QWORD *)(a1 + v65);
  v19 = *(_QWORD *)(v18 + 16);
  v66 = a1;
  v64 = v5;
  if (v19)
  {
    v58 = v12;
    v59 = a2;
    v20 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v22 = 0.0;
    v23 = v19;
    do
    {
      sub_1D2D4AFEC(v20, (uint64_t)v7);
      v22 = v22 + *(double *)&v7[v4[10]];
      sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v20 += v21;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    a2 = v59;
    a1 = v66;
    v12 = v58;
  }
  else
  {
    v22 = 0.0;
  }
  v24 = v22 / (double)v19;
  *(float *)(a2 + 16) = v24;
  v25 = (__int128 *)(a1 + *(int *)(v17 + 20));
  v26 = v25[9];
  v75 = v25[8];
  v76 = v26;
  v77 = *((_QWORD *)v25 + 20);
  v27 = v25[5];
  v71 = v25[4];
  v72 = v27;
  v28 = v25[7];
  v73 = v25[6];
  v74 = v28;
  v29 = v25[1];
  v67 = *v25;
  v30 = v25[2];
  v70 = v25[3];
  v68 = v29;
  v69 = v30;
  *(double *)(a2 + 24) = sub_1D2D6A844(0, 0, 1, 0);
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v32;
  *(_QWORD *)(a2 + 48) = v33;
  *(_QWORD *)a2 = Array<A>.sourceParagraph.getter(v18);
  *(_QWORD *)(a2 + 8) = v34;
  v35 = v63;
  if (*(_QWORD *)(v18 + 16))
  {
    sub_1D2CF811C(v18 + v4[7] + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80)), (uint64_t)v12);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v13);
    v37 = (uint64_t)v61;
    v38 = v60;
    if (v36 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v60, v12, v13);
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v12, 1, 1, v13);
    v37 = (uint64_t)v61;
    v38 = v60;
  }
  if (qword_1EFCA54F0 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v13, (uint64_t)qword_1EFCA8DC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v38, v39, v13);
  sub_1D2CFCC18((uint64_t)v12);
LABEL_13:
  v40 = (int *)type metadata accessor for TextDiagnosticsModel();
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  v41(a2 + v40[7], v38, v13);
  v42 = *(_QWORD *)(v66 + v65);
  if (*(_QWORD *)(v42 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v37, v42 + v4[9] + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80)), v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v13);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v13) != 1)
    {
      v43 = v62;
      v41((uint64_t)v62, (char *)v37, v13);
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v37, 1, 1, v13);
  }
  if (qword_1EFCA54F0 != -1)
    swift_once();
  v44 = __swift_project_value_buffer(v13, (uint64_t)qword_1EFCA8DC8);
  v43 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v44, v13);
  sub_1D2CFCC18(v37);
LABEL_20:
  v41(a2 + v40[8], v43, v13);
  v45 = v66;
  v46 = *(_QWORD *)(v66 + v65);
  v47 = Array<A>.targetParagraph.getter(v46);
  v48 = (uint64_t *)(a2 + v40[9]);
  *v48 = v47;
  v48[1] = v49;
  v50 = *(_QWORD *)(v46 + 16);
  if (v50)
  {
    v51 = v46 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    v52 = *(_QWORD *)(v64 + 72);
    swift_bridgeObjectRetain();
    v53 = 0.0;
    v54 = v50;
    do
    {
      sub_1D2D4AFEC(v51, (uint64_t)v7);
      v53 = v53 + *(double *)&v7[v4[10]];
      sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v51 += v52;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
    v45 = v66;
  }
  else
  {
    v53 = 0.0;
  }
  v55 = v53 / (double)v50;
  result = sub_1D2CD3734(v45, type metadata accessor for VisualTranslationModel);
  *(float *)(a2 + v40[10]) = v55;
  return result;
}

uint64_t TextDiagnosticsModel.init(textModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  float v22;
  uint64_t result;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D2D9C7EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TextModel();
  v12 = (_QWORD *)(a1 + v11[6]);
  v13 = v12[1];
  *(_QWORD *)a2 = *v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_DWORD *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  sub_1D2CF811C(a1 + v11[7], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v14 = qword_1EFCA54F0;
    swift_bridgeObjectRetain();
    if (v14 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v7, (uint64_t)qword_1EFCA8DC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
    sub_1D2CFCC18((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    swift_bridgeObjectRetain();
  }
  v16 = (int *)type metadata accessor for TextDiagnosticsModel();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + v16[7], v10, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2 + v16[8], a1 + v11[9], v7);
  v17 = (uint64_t *)(a1 + v11[8]);
  v18 = v17[1];
  if (v18)
  {
    v19 = *v17;
    v20 = v18;
  }
  else
  {
    v19 = 0;
    v20 = 0xE000000000000000;
  }
  v21 = (_QWORD *)(a2 + v16[9]);
  *v21 = v19;
  v21[1] = v20;
  v22 = *(double *)(a1 + v11[10]);
  swift_bridgeObjectRetain();
  result = sub_1D2CD3734(a1, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  *(float *)(a2 + v16[10]) = v22;
  return result;
}

void TextDiagnosticsModel.init(ocrModel:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;

  v4 = objc_msgSend(a1, sel_topCandidates_, 1);
  sub_1D2D6EEA0();
  v5 = sub_1D2D9DE60();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v9 = 0;
    v11 = 0xE000000000000000;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1D8247E58](0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v7, sel_string);

  v9 = sub_1D2D9DCD4();
  v11 = v10;

LABEL_9:
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  objc_msgSend(a1, sel_confidence);
  *(_DWORD *)(a2 + 16) = v13;
  objc_msgSend(a1, sel_boundingBox);
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v17;
  if (qword_1EFCA54F0 != -1)
    swift_once();
  v18 = sub_1D2D9C7EC();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EFCA8DC8);
  v20 = (int *)type metadata accessor for TextDiagnosticsModel();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v21(a2 + v20[7], v19, v18);
  v21(a2 + v20[8], v19, v18);

  v22 = (_QWORD *)(a2 + v20[9]);
  *v22 = 0;
  v22[1] = 0xE000000000000000;
  *(_DWORD *)(a2 + v20[10]) = 0;
}

uint64_t sub_1D2D6EE48()
{
  uint64_t v0;

  v0 = sub_1D2D9C7EC();
  __swift_allocate_value_buffer(v0, qword_1EFCA8DC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFCA8DC8);
  return sub_1D2D9C708();
}

unint64_t sub_1D2D6EEA0()
{
  unint64_t result;

  result = qword_1EFCA8E08;
  if (!qword_1EFCA8E08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFCA8E08);
  }
  return result;
}

uint64_t TextDiagnosticsModel.string.getter()
{
  uint64_t v1;

  v1 = TextDiagnosticsModel.json.getter();
  sub_1D2D9DDA0();
  return v1;
}

uint64_t TextDiagnosticsModel.json.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1D2D9DD10();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1D2D9C528();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v1);
  sub_1D2D9C558();
  swift_allocObject();
  sub_1D2D9C54C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8E10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D2DA0CB0;
  sub_1D2D9C510();
  sub_1D2D9C51C();
  sub_1D2CC66E4(&qword_1EFCA8E18, v2, MEMORY[0x1E0CAE0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8E20);
  sub_1D2D6F198();
  sub_1D2D9E22C();
  sub_1D2D9C534();
  type metadata accessor for TextDiagnosticsModel();
  sub_1D2CC66E4(&qword_1EFCA8E30, (uint64_t (*)(uint64_t))type metadata accessor for TextDiagnosticsModel, (uint64_t)&protocol conformance descriptor for TextDiagnosticsModel);
  v3 = sub_1D2D9C540();
  v5 = v4;
  sub_1D2D9DD04();
  v6 = sub_1D2D9DCEC();
  if (v7)
  {
    v8 = v6;
    sub_1D2CDB760(v3, v5);
    swift_release();
  }
  else
  {
    sub_1D2CDB760(v3, v5);
    swift_release();
    return 0;
  }
  return v8;
}

unint64_t sub_1D2D6F198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA8E28;
  if (!qword_1EFCA8E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA8E20);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA8E28);
  }
  return result;
}

uint64_t sub_1D2D6F1E4(_QWORD *a1)
{
  return TextDiagnosticsModel.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for TextDiagnosticsModel(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v11 = sub_1D2D9C7EC();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    v13 = a3[9];
    v14 = a3[10];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_DWORD *)((char *)v4 + v14) = *(_DWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TextDiagnosticsModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1D2D9C7EC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 32), v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v12 = a3[9];
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v11 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D2D9C7EC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextDiagnosticsModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D6F6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TextDiagnosticsModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D6F75C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D2D6F7D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C7EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TextDiagnosticsModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D2D6F8B4 + 4 * byte_1D2DA5F0C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D2D6F8E8 + 4 * byte_1D2DA5F07[v4]))();
}

uint64_t sub_1D2D6F8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D6F8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D6F8F8);
  return result;
}

uint64_t sub_1D2D6F904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D6F90CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D2D6F910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D6F918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextDiagnosticsModel.CodingKeys()
{
  return &type metadata for TextDiagnosticsModel.CodingKeys;
}

unint64_t sub_1D2D6F938()
{
  unint64_t result;

  result = qword_1EFCA8EE0;
  if (!qword_1EFCA8EE0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6024, &type metadata for TextDiagnosticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8EE0);
  }
  return result;
}

unint64_t sub_1D2D6F980()
{
  unint64_t result;

  result = qword_1EFCA8EE8;
  if (!qword_1EFCA8EE8)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5F94, &type metadata for TextDiagnosticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8EE8);
  }
  return result;
}

unint64_t sub_1D2D6F9C8()
{
  unint64_t result;

  result = qword_1EFCA8EF0;
  if (!qword_1EFCA8EF0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA5FBC, &type metadata for TextDiagnosticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8EF0);
  }
  return result;
}

uint64_t sub_1D2D6FA0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7478655472636FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69666E6F4372636FLL && a2 == 0xED000065636E6564 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F4272636FLL && a2 == 0xE600000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61636F4C64696CLL && a2 == 0xE900000000000065 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C61636F4C746C78 && a2 == 0xE900000000000065 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74786554746C78 && a2 == 0xE700000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69666E6F43746C78 && a2 == 0xED000065636E6564)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_1D2D6FD38(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D6FD7C()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D6FE34(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D6FE7C()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D6FF4C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2D6FF80()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

void sub_1D2D7006C(uint64_t a1, char a2)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D700AC()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D701AC()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D70224(uint64_t a1, char a2)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D7027C()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D702F4(uint64_t a1, char a2)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D70348()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D7042C(uint64_t a1, char a2)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D7047C()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D70548()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void sub_1D2D705C8(uint64_t a1, char a2)
{
  sub_1D2D9E5C8();
  __asm { BR              X10 }
}

uint64_t sub_1D2D70608()
{
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

void *sub_1D2D706C0(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  uint64_t v11;
  id v13;
  void *v14;

  v14 = a1;
  v7 = a1;
  if (a4 >> 62)
    goto LABEL_13;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_1D2D9E3AC())
  {
    for (i = 4; ; ++i)
    {
      v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8247E58](i - 4, a4) : *(id *)(a4 + 8 * i);
      v7 = v10;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t VisualTranslationModel.updating(paragraphs:useIndex:allowFuzzy:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  __int128 *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int *v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  int v89;
  char *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;

  v81 = a3;
  v70 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v7);
  v90 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v85 = (char *)&v67 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587040);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for TextModel();
  v77 = *((_QWORD *)v14 - 1);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v75 = (uint64_t)&v67 - v18;
  v19 = type metadata accessor for VisualTranslationModel(0);
  v20 = *(int *)(v19 + 28);
  v68 = (int *)v19;
  v69 = v4;
  v21 = *(_QWORD *)(v4 + v20);
  v71 = a1;
  v22 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) == 0)
  {
    if (!v22)
      goto LABEL_44;
    v76 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    v74 = v71 + v76;
    v86 = *(_QWORD *)(v77 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = 0;
    v29 = (uint64_t)v90;
    v83 = v16;
    v80 = v14;
    v72 = v13;
    v73 = v22;
LABEL_15:
    v30 = v74 + v86 * v28;
    v31 = *(_QWORD *)(v21 + 16);
    v82 = v30;
    if (!v31)
    {
      swift_bridgeObjectRetain();
      v40 = 1;
      goto LABEL_36;
    }
    v78 = v28;
    v79 = v21;
    v32 = v21 + v76;
    v84 = v30 + v14[7];
    swift_bridgeObjectRetain_n();
    v33 = (uint64_t)v85;
    while (1)
    {
      sub_1D2CDB6B4(v32, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CF811C((uint64_t)&v16[v14[7]], v33);
      v34 = v16;
      v35 = sub_1D2D9C7EC();
      v36 = *(_QWORD *)(v35 - 8);
      v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      v89 = v88(v33, 1, v35);
      v87 = v36;
      if (v89 != 1)
        break;
      sub_1D2CCADA4(v33, &qword_1ED587850);
      v38 = 0;
LABEL_27:
      sub_1D2CF811C(v84, v29);
      if (v88(v29, 1, v35) == 1)
      {
        sub_1D2CCADA4(v29, &qword_1ED587850);
        if (v89 == 1)
          goto LABEL_33;
      }
      else
      {
        sub_1D2D9C714();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v35);
        sub_1D2D9E604();
        sub_1D2D9DD70();
        swift_bridgeObjectRelease();
        sub_1D2D9C714();
        sub_1D2D9DD70();
        swift_bridgeObjectRelease();
        sub_1D2D9E5E0();
        swift_bridgeObjectRetain();
        v33 = (uint64_t)v85;
        sub_1D2D9DD70();
        swift_bridgeObjectRelease();
        v104 = v93;
        v105 = v94;
        v106 = v95;
        v102 = v91;
        v103 = v92;
        v39 = sub_1D2D9E5EC();
        v29 = (uint64_t)v90;
        if (v89 != 1 && v38 == v39)
        {
LABEL_33:
          v21 = v79;
          swift_bridgeObjectRelease();
          v16 = v83;
          v13 = v72;
          sub_1D2CD1FD4((uint64_t)v83, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          v40 = 0;
          v22 = v73;
          goto LABEL_35;
        }
      }
      v16 = v83;
      sub_1D2CD3734((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v32 += v86;
      if (!--v31)
      {
        v21 = v79;
        swift_bridgeObjectRelease();
        v40 = 1;
        v13 = v72;
        v22 = v73;
LABEL_35:
        v28 = v78;
LABEL_36:
        v41 = v77;
        (*(void (**)(char *, uint64_t, uint64_t, int *))(v77 + 56))(v13, v40, 1, v14);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v13, 1, v14) == 1)
        {
          sub_1D2CCADA4((uint64_t)v13, &qword_1ED587040);
        }
        else
        {
          v42 = v75;
          sub_1D2CD1FD4((uint64_t)v13, v75, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          v43 = *(_QWORD *)(v42 + v14[5]);
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) != 0)
          {
            if ((v43 & 0x8000000000000000) == 0)
              goto LABEL_39;
LABEL_42:
            __break(1u);
LABEL_43:
            swift_bridgeObjectRelease();
LABEL_45:
            v44 = sub_1D2D9C6FC();
            v46 = v69;
            v45 = v70;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v70, v69, v44);
            v47 = v68;
            v48 = (__int128 *)(v46 + v68[5]);
            v49 = v48[9];
            v99 = v48[8];
            v100 = v49;
            v101 = *((_QWORD *)v48 + 20);
            v50 = v48[5];
            v95 = v48[4];
            v96 = v50;
            v51 = v48[7];
            v97 = v48[6];
            v98 = v51;
            v52 = v48[3];
            v93 = v48[2];
            v94 = v52;
            v53 = v48[1];
            v91 = *v48;
            v92 = v53;
            v54 = v68[6];
            v55 = v46 + v54;
            v56 = v45 + v54;
            v57 = sub_1D2D9C6C0();
            result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v56, v55, v57);
            v58 = *(_QWORD *)(v46 + v47[8]);
            v59 = *(_BYTE *)(v46 + v47[9]);
            v60 = *(_BYTE *)(v46 + v47[10]);
            v61 = v45 + v47[5];
            v62 = v100;
            *(_OWORD *)(v61 + 128) = v99;
            *(_OWORD *)(v61 + 144) = v62;
            *(_QWORD *)(v61 + 160) = v101;
            v63 = v96;
            *(_OWORD *)(v61 + 64) = v95;
            *(_OWORD *)(v61 + 80) = v63;
            v64 = v98;
            *(_OWORD *)(v61 + 96) = v97;
            *(_OWORD *)(v61 + 112) = v64;
            v65 = v92;
            *(_OWORD *)v61 = v91;
            *(_OWORD *)(v61 + 16) = v65;
            v66 = v94;
            *(_OWORD *)(v61 + 32) = v93;
            *(_OWORD *)(v61 + 48) = v66;
            *(_QWORD *)(v45 + v47[7]) = v21;
            *(_QWORD *)(v45 + v47[8]) = v58;
            *(_BYTE *)(v45 + v47[9]) = v59;
            *(_BYTE *)(v45 + v47[10]) = v60;
            *(_BYTE *)(v45 + v47[11]) = 0;
            return result;
          }
          result = sub_1D2D4B108(v21);
          v21 = result;
          if ((v43 & 0x8000000000000000) != 0)
            goto LABEL_42;
LABEL_39:
          if (v43 >= *(_QWORD *)(v21 + 16))
            goto LABEL_47;
          sub_1D2D4B13C(v82, v21 + v76 + v43 * v86);
          sub_1D2CD3734(v75, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
          v29 = (uint64_t)v90;
        }
        if (++v28 == v22)
          goto LABEL_43;
        goto LABEL_15;
      }
    }
    sub_1D2D9C714();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
    sub_1D2D9E604();
    sub_1D2D9DD70();
    swift_bridgeObjectRelease();
    sub_1D2D9C714();
    sub_1D2D9DD70();
    swift_bridgeObjectRelease();
    if ((v81 & 1) != 0)
    {
      sub_1D2D4C758(*(_QWORD *)&v34[v14[6]], *(_QWORD *)&v34[v14[6] + 8]);
      if (!v37)
      {
        sub_1D2D9E5E0();
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1D2D9E5E0();
    swift_bridgeObjectRetain();
    sub_1D2D9DD70();
    swift_bridgeObjectRelease_n();
LABEL_26:
    v14 = v80;
    v33 = (uint64_t)v85;
    v109 = v93;
    v110 = v94;
    v111 = v95;
    v107 = v91;
    v108 = v92;
    v38 = sub_1D2D9E5EC();
    v29 = (uint64_t)v90;
    goto LABEL_27;
  }
  if (!v22)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  v23 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  v24 = v71 + v23;
  v25 = *(_QWORD *)(v77 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    v26 = *(_QWORD *)(v24 + v14[5]);
    if ((v26 & 0x8000000000000000) != 0 || (int64_t)v26 >= *(_QWORD *)(v21 + 16))
      goto LABEL_4;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1D2D4B108(v21);
      v21 = result;
    }
    if (v26 >= *(_QWORD *)(v21 + 16))
      break;
    sub_1D2D4B13C(v24, v21 + v23 + v26 * v25);
LABEL_4:
    v24 += v25;
    if (!--v22)
      goto LABEL_43;
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisualTranslationModel(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, qword_1ED5877F8);
}

uint64_t sub_1D2D70FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _BOOL8 v28;
  BOOL v30;
  _QWORD v32[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for TextModel();
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - v9;
  v11 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 28));
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
    return 1;
  v13 = v11 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v14 = *(_QWORD *)(v5 + 72);
  v32[1] = v11;
  swift_bridgeObjectRetain();
  v15 = v12 - 1;
  while (1)
  {
    sub_1D2CDB6B4(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    if (*(_QWORD *)&v10[v4[11]])
      break;
    v16 = &v10[v4[6]];
    v18 = *(_QWORD *)v16;
    v17 = *((_QWORD *)v16 + 1);
    v19 = v18 & 0xFFFFFFFFFFFFLL;
    if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v19))
      break;
    sub_1D2CF811C((uint64_t)&v10[v4[7]], (uint64_t)v3);
    v21 = sub_1D2D9C7EC();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v3, 1, v21);
    sub_1D2CCADA4((uint64_t)v3, &qword_1ED587850);
    if (v22 == 1)
      break;
    v23 = &v10[v4[8]];
    v24 = *((_QWORD *)v23 + 1);
    if (!v24)
      break;
    v25 = *(_QWORD *)v23 & 0xFFFFFFFFFFFFLL;
    if (!((v24 & 0x2000000000000000) != 0 ? HIBYTE(v24) & 0xF : v25))
      break;
    sub_1D2CDB6B4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v27 = *(_QWORD *)&v7[v4[11]];
    v28 = v27 == 0;
    sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v30 = v15-- != 0;
    if (!v27)
    {
      v13 += v14;
      if (v30)
        continue;
    }
    goto LABEL_21;
  }
  sub_1D2CDB6B4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  sub_1D2CD3734((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  sub_1D2CD3734((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v28 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t VisualTranslationModel.update(paragraph:useIndex:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587360);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TextModel() - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D2DA0510;
  sub_1D2CDB6B4(a1, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  VisualTranslationModel.updating(paragraphs:useIndex:allowFuzzy:)(v8, a2, 0, a3);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2D71320(char *a1, char *a2)
{
  return sub_1D2D2CF88(*a1, *a2);
}

uint64_t sub_1D2D7132C()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D713BC()
{
  sub_1D2D9DD70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D71428()
{
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  return sub_1D2D9E5F8();
}

uint64_t sub_1D2D714B4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D2D9E3F4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1D2D71510(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x76726573624F6F6ELL;
  if (*v1)
    v2 = 0xD000000000000016;
  v3 = 0x80000001D2DA7930;
  if (!*v1)
    v3 = 0xEE00736E6F697461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2D71560()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0x76726573624F6F6ELL;
}

uint64_t VisualTranslationResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid;
  v4 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VisualTranslationResult.string.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualTranslationResult.isPassthrough.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough);
}

double VisualTranslationResult.topLeft.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft);
}

double VisualTranslationResult.topRight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight);
}

double VisualTranslationResult.bottomLeft.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft);
}

double VisualTranslationResult.bottomRight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight);
}

uint64_t sub_1D2D7175C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1E0C80A78](v1);
  v42 = (uint64_t)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D2D9C7EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA7968);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  v17 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v39 - v16;
  v40 = v1;
  v41 = v0;
  v19 = *(_QWORD *)(v0 + *(int *)(v1 + 28));
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = type metadata accessor for TextModel();
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80);
    v22 = v19 + ((v21 + 32) & ~v21);
    sub_1D2CF811C(v22 + *(int *)(v20 + 28), (uint64_t)v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v22 + *(int *)(v20 + 36), v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v23((char *)&v39 - v16, 1, 1, v3, v17);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v14, 1, 1, v3);
  }
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1D2CF811C((uint64_t)v18, (uint64_t)v8);
  sub_1D2CF811C((uint64_t)v14, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v25((uint64_t)v8, 1, v3) == 1)
  {
    sub_1D2CCADA4((uint64_t)v14, &qword_1ED587850);
    sub_1D2CCADA4((uint64_t)v18, &qword_1ED587850);
    if (v25(v24, 1, v3) == 1)
    {
      sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
      v26 = v42;
      sub_1D2CDB6B4(v41, v42, type metadata accessor for VisualTranslationModel);
      v27 = 1;
      goto LABEL_16;
    }
  }
  else
  {
    sub_1D2CF811C((uint64_t)v8, (uint64_t)v11);
    if (v25(v24, 1, v3) != 1)
    {
      v28 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v39, v24, v3);
      sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v29 = sub_1D2D9DC8C();
      v30 = *(void (**)(char *, uint64_t))(v4 + 8);
      v30(v28, v3);
      sub_1D2CCADA4((uint64_t)v14, &qword_1ED587850);
      sub_1D2CCADA4((uint64_t)v18, &qword_1ED587850);
      v30(v11, v3);
      sub_1D2CCADA4((uint64_t)v8, &qword_1ED587850);
      v26 = v42;
      sub_1D2CDB6B4(v41, v42, type metadata accessor for VisualTranslationModel);
      if ((v29 & 1) != 0)
      {
        v27 = 1;
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    sub_1D2CCADA4((uint64_t)v14, &qword_1ED587850);
    sub_1D2CCADA4((uint64_t)v18, &qword_1ED587850);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
  }
  sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA7968);
  v26 = v42;
  sub_1D2CDB6B4(v41, v42, type metadata accessor for VisualTranslationModel);
LABEL_12:
  v31 = *(_QWORD *)(v26 + *(int *)(v40 + 28));
  Array<A>.sourceParagraph.getter(v31);
  v32 = sub_1D2D9DD34();
  v34 = v33;
  swift_bridgeObjectRelease();
  Array<A>.targetParagraph.getter(v31);
  v35 = sub_1D2D9DD34();
  v37 = v36;
  swift_bridgeObjectRelease();
  if (v32 == v35 && v34 == v37)
  {
    swift_bridgeObjectRelease_n();
    v27 = 1;
  }
  else
  {
    v27 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_1D2CD3734(v26, type metadata accessor for VisualTranslationModel);
  return v27 & 1;
}

id VisualTranslationResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VisualTranslationResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D2D71C60()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D71C88 + 4 * byte_1D2DA60E5[*v0]))(1684632949, 0xE400000000000000);
}

uint64_t sub_1D2D71C88()
{
  return 0x676E69727473;
}

uint64_t sub_1D2D71C9C()
{
  return 0x6874737361507369;
}

uint64_t sub_1D2D71CC0()
{
  return 0x7466654C706F74;
}

uint64_t sub_1D2D71CD8()
{
  return 0x7468676952706F74;
}

uint64_t sub_1D2D71CF0()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1D2D71D0C()
{
  return 0x69526D6F74746F62;
}

uint64_t sub_1D2D71D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D2D777A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D2D71D50()
{
  sub_1D2D77654();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D71D78()
{
  sub_1D2D77654();
  return sub_1D2D9E634();
}

id VisualTranslationResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t VisualTranslationResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8EF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D77654();
  sub_1D2D9E61C();
  LOBYTE(v12) = 0;
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1EFCA5DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D2D9E4F0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1D2D9E4A8();
    LOBYTE(v12) = 2;
    sub_1D2D9E4B4();
    v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft);
    v11 = 3;
    type metadata accessor for CGPoint(0);
    sub_1D2CC66E4(&qword_1EFCA8D18, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA20]);
    sub_1D2D9E4F0();
    v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight);
    v11 = 4;
    sub_1D2D9E4F0();
    v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft);
    v11 = 5;
    sub_1D2D9E4F0();
    v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight);
    v11 = 6;
    sub_1D2D9E4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id VisualTranslationResult.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return VisualTranslationResult.init(from:)(a1);
}

id VisualTranslationResult.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  objc_class *ObjectType;
  _QWORD *v22;
  objc_super v23;
  __int128 v24;
  char v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v17 = sub_1D2D9C6FC();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F08);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v8);
  sub_1D2D77654();
  v9 = v1;
  v20 = v7;
  v10 = (uint64_t)v22;
  sub_1D2D9E610();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v22 = a1;
    LOBYTE(v24) = 0;
    sub_1D2CC66E4(&qword_1EFCA5DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v11 = v18;
    v12 = v17;
    sub_1D2D9E46C();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid], v19, v12);
    LOBYTE(v24) = 1;
    v14 = sub_1D2D9E430();
    v15 = (uint64_t *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
    *v15 = v14;
    v15[1] = v16;
    LOBYTE(v24) = 2;
    v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1D2D9E43C() & 1;
    type metadata accessor for CGPoint(0);
    v25 = 3;
    v19 = (char *)sub_1D2CC66E4(&qword_1EFCA8D28, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA30]);
    sub_1D2D9E46C();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v24;
    v25 = 4;
    sub_1D2D9E46C();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v24;
    v25 = 5;
    sub_1D2D9E46C();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v24;
    v25 = 6;
    sub_1D2D9E46C();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v24;

    v23.receiver = v9;
    v23.super_class = ObjectType;
    v8 = objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  return v8;
}

id sub_1D2D72580@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = VisualTranslationResult.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1D2D725CC(_QWORD *a1)
{
  return VisualTranslationResult.encode(to:)(a1);
}

BOOL static VisualTranslationTextAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VisualTranslationTextAlignment.hash(into:)()
{
  return sub_1D2D9E5D4();
}

uint64_t sub_1D2D72628()
{
  return 0;
}

uint64_t sub_1D2D72634@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1D2D72660(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D2D7266C()
{
  sub_1D2D77764();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D72694()
{
  sub_1D2D77764();
  return sub_1D2D9E634();
}

uint64_t sub_1D2D726BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696461656CLL;
  if (*v0 != 1)
    v1 = 0x676E696C69617274;
  if (*v0)
    return v1;
  else
    return 0x7265746E6563;
}

uint64_t sub_1D2D72714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D2D77ABC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D2D72738(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1D2D72744()
{
  sub_1D2D77698();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D7276C()
{
  sub_1D2D77698();
  return sub_1D2D9E634();
}

uint64_t sub_1D2D72794()
{
  sub_1D2D77720();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D727BC()
{
  sub_1D2D77720();
  return sub_1D2D9E634();
}

uint64_t sub_1D2D727E4()
{
  sub_1D2D776DC();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D7280C()
{
  sub_1D2D776DC();
  return sub_1D2D9E634();
}

uint64_t VisualTranslationTextAlignment.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F10);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F18);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F20);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F28);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D77698();
  sub_1D2D9E61C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1D2D77720();
      sub_1D2D9E484();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1D2D776DC();
      v16 = v21;
      sub_1D2D9E484();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1D2D77764();
    sub_1D2D9E484();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t VisualTranslationTextAlignment.hashValue.getter()
{
  sub_1D2D9E5C8();
  sub_1D2D9E5D4();
  return sub_1D2D9E5F8();
}

uint64_t VisualTranslationTextAlignment.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F50);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F58);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F60);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F68);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D77698();
  v13 = v41;
  sub_1D2D9E610();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1D2D9E478();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1D2D9E31C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F70);
    *v25 = &type metadata for VisualTranslationTextAlignment;
    sub_1D2D9E40C();
    sub_1D2D9E310();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1D2D77720();
      v20 = v9;
      sub_1D2D9E400();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1D2D776DC();
      v28 = v15;
      sub_1D2D9E400();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1D2D77764();
    sub_1D2D9E400();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_1D2D72F20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisualTranslationTextAlignment.init(from:)(a1, a2);
}

uint64_t sub_1D2D72F34(_QWORD *a1)
{
  return VisualTranslationTextAlignment.encode(to:)(a1);
}

uint64_t VisualTranslationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D2D9C6FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

__n128 VisualTranslationModel.bounds.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;

  v3 = v1 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 20);
  v4 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(v3 + 160);
  v5 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  result = *(__n128 *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t VisualTranslationModel.boundsTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 24);
  v4 = sub_1D2D9C6C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VisualTranslationModel.paragraphs.getter()
{
  type metadata accessor for VisualTranslationModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.numberOfLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 32));
}

uint64_t VisualTranslationModel.displayAsVerticalText.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 36));
}

uint64_t VisualTranslationModel.textAlignment.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VisualTranslationModel(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VisualTranslationModel.significantTranscriptChange.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 44));
}

uint64_t sub_1D2D730D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D730FC + 4 * byte_1D2DA60EC[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1D2D730FC()
{
  return 0x73646E756F62;
}

uint64_t sub_1D2D73110()
{
  return 0x695473646E756F62;
}

uint64_t sub_1D2D73134()
{
  return 0x7061726761726170;
}

uint64_t sub_1D2D73150()
{
  return 0x664F7265626D756ELL;
}

unint64_t sub_1D2D73174()
{
  return 0xD000000000000015;
}

uint64_t sub_1D2D73190()
{
  return 0x67696C4174786574;
}

unint64_t sub_1D2D731B4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1D2D731D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2D731FC + 4 * byte_1D2DA60F4[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1D2D731FC()
{
  return 0x73646E756F62;
}

uint64_t sub_1D2D73210()
{
  return 0x695473646E756F62;
}

uint64_t sub_1D2D73234()
{
  return 0x7061726761726170;
}

uint64_t sub_1D2D73250()
{
  return 0x664F7265626D756ELL;
}

unint64_t sub_1D2D73274()
{
  return 0xD000000000000015;
}

uint64_t sub_1D2D73290()
{
  return 0x67696C4174786574;
}

unint64_t sub_1D2D732B4()
{
  return 0xD00000000000001BLL;
}

void sub_1D2D732D4(char *a1)
{
  sub_1D2D2CD04(*a1);
}

void sub_1D2D732E0()
{
  char *v0;

  sub_1D2D7006C(0, *v0);
}

void sub_1D2D732EC(uint64_t a1)
{
  char *v1;

  sub_1D2D6FF4C(a1, *v1);
}

void sub_1D2D732F4(uint64_t a1)
{
  char *v1;

  sub_1D2D7006C(a1, *v1);
}

uint64_t sub_1D2D732FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D77C08();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D73328@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D2D730D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D2D73350()
{
  unsigned __int8 *v0;

  return sub_1D2D731D4(*v0);
}

uint64_t sub_1D2D73358@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D77C08();
  *a1 = result;
  return result;
}

void sub_1D2D7337C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1D2D73388()
{
  sub_1D2D78634();
  return sub_1D2D9E628();
}

uint64_t sub_1D2D733B0()
{
  sub_1D2D78634();
  return sub_1D2D9E634();
}

uint64_t VisualTranslationModel.init(id:bounds:boundsTimestamp:paragraphs:numberOfLines:displayAsVerticalText:textAlignment:significantTranscriptChange:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v31 = a2[8];
  v32 = a2[9];
  v33 = *((_QWORD *)a2 + 20);
  v27 = a2[4];
  v28 = a2[5];
  v29 = a2[6];
  v30 = a2[7];
  v23 = *a2;
  v24 = a2[1];
  v25 = a2[2];
  v26 = a2[3];
  v16 = *a7;
  v17 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a9, a1, v17);
  v18 = (int *)type metadata accessor for VisualTranslationModel(0);
  v19 = a9 + v18[5];
  *(_OWORD *)(v19 + 128) = v31;
  *(_OWORD *)(v19 + 144) = v32;
  *(_QWORD *)(v19 + 160) = v33;
  *(_OWORD *)(v19 + 64) = v27;
  *(_OWORD *)(v19 + 80) = v28;
  *(_OWORD *)(v19 + 96) = v29;
  *(_OWORD *)(v19 + 112) = v30;
  *(_OWORD *)v19 = v23;
  *(_OWORD *)(v19 + 16) = v24;
  *(_OWORD *)(v19 + 32) = v25;
  *(_OWORD *)(v19 + 48) = v26;
  v20 = a9 + v18[6];
  v21 = sub_1D2D9C6C0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a3, v21);
  *(_QWORD *)(a9 + v18[7]) = a4;
  *(_QWORD *)(a9 + v18[8]) = a5;
  *(_BYTE *)(a9 + v18[9]) = a6;
  *(_BYTE *)(a9 + v18[10]) = v16;
  *(_BYTE *)(a9 + v18[11]) = a8;
  return result;
}

uint64_t VisualTranslationModel.init(id:string:bounds:boundsTimestamp:numberOfLines:displayAsVerticalText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v69 = a7;
  v68 = a6;
  v67 = a5;
  v64 = a3;
  v63 = a2;
  v70 = a1;
  v59 = a8;
  v66 = sub_1D2D9C6C0();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v71 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D2D9C6FC();
  v11 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  v12 = v11;
  v60 = v11;
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D2D9C7EC();
  v57 = *(_QWORD *)(v14 - 8);
  v15 = v57;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for TextModel();
  v61 = *((_QWORD *)v21 - 1);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a4[9];
  v80 = a4[8];
  v81 = v24;
  v82 = *((_QWORD *)a4 + 20);
  v25 = a4[5];
  v76 = a4[4];
  v77 = v25;
  v26 = a4[7];
  v78 = a4[6];
  v79 = v26;
  v27 = a4[1];
  v72 = *a4;
  v73 = v27;
  v28 = a4[3];
  v74 = a4[2];
  v75 = v28;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v29(v23, v70, v10);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v30(v20, 1, 1, v14);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  v31 = (uint64_t)&v23[v21[7]];
  v30((char *)v31, 1, 1, v14);
  v32 = &v23[v21[8]];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = v21[11];
  *(_QWORD *)&v23[v33] = 0;
  v34 = v21[12];
  *(_QWORD *)&v23[v34] = 0;
  *(_QWORD *)&v23[v21[5]] = 0;
  v35 = &v23[v21[6]];
  v36 = v64;
  *(_QWORD *)v35 = v63;
  *((_QWORD *)v35 + 1) = v36;
  sub_1D2CE46D0((uint64_t)v20, v31);
  swift_bridgeObjectRelease();
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v23[v21[9]], v17, v14);
  *(_QWORD *)&v23[v21[10]] = 0;

  *(_QWORD *)&v23[v33] = 0;
  *(_QWORD *)&v23[v34] = 1;
  v37 = v62;
  v38 = v70;
  v39 = v58;
  v29(v62, v70, v58);
  v40 = v65;
  v41 = v67;
  v42 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v71, v67, v66);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587360);
  v43 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1D2DA0510;
  sub_1D2CDB6B4((uint64_t)v23, v44 + v43, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
  v45 = v60;
  v46 = v39;
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v38, v39);
  sub_1D2CD3734((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v47 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v59, v37, v46);
  v48 = (int *)type metadata accessor for VisualTranslationModel(0);
  v49 = v47 + v48[5];
  v50 = v73;
  *(_OWORD *)v49 = v72;
  *(_OWORD *)(v49 + 16) = v50;
  v51 = v77;
  *(_OWORD *)(v49 + 64) = v76;
  *(_OWORD *)(v49 + 80) = v51;
  v52 = v75;
  *(_OWORD *)(v49 + 32) = v74;
  *(_OWORD *)(v49 + 48) = v52;
  *(_QWORD *)(v49 + 160) = v82;
  v53 = v81;
  *(_OWORD *)(v49 + 128) = v80;
  *(_OWORD *)(v49 + 144) = v53;
  v54 = v79;
  *(_OWORD *)(v49 + 96) = v78;
  *(_OWORD *)(v49 + 112) = v54;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v47 + v48[6], v71, v42);
  *(_QWORD *)(v47 + v48[7]) = v44;
  *(_QWORD *)(v47 + v48[8]) = v68;
  *(_BYTE *)(v47 + v48[9]) = v69;
  *(_BYTE *)(v47 + v48[10]) = 3;
  *(_BYTE *)(v47 + v48[11]) = 0;
  return result;
}

void sub_1D2D739A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v37 = a4;
  v38 = a5;
  v36 = a3;
  v41 = a1;
  v12 = sub_1D2D9C7EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v35 - v20;
  v22 = sub_1D2D9C6FC();
  v39 = *(_QWORD *)(v22 - 8);
  v40 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2D9C6F0();
  v25 = MEMORY[0x1D8247894](a2, v36, v37, v38);
  v37 = v26;
  v38 = v25;
  sub_1D2CF811C(a6, (uint64_t)v21);
  sub_1D2CF811C(a7, (uint64_t)v18);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  v42 = v15;
  if (v27 == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1D2CCADA4((uint64_t)v18, &qword_1ED587850);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
  }
  v28 = (int *)type metadata accessor for TextModel();
  v29 = a8 + v28[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v29, 1, 1, v12);
  v30 = (_QWORD *)(a8 + v28[8]);
  *v30 = 0;
  v30[1] = 0;
  v31 = v28[11];
  *(_QWORD *)(a8 + v31) = 0;
  v32 = v28[12];
  *(_QWORD *)(a8 + v32) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(a8, v24, v40);
  *(_QWORD *)(a8 + v28[5]) = v41;
  v33 = (uint64_t *)(a8 + v28[6]);
  v34 = v37;
  *v33 = v38;
  v33[1] = v34;
  sub_1D2CE46D0((uint64_t)v21, v29);
  swift_bridgeObjectRelease();
  *v30 = 0;
  v30[1] = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a8 + v28[9], v42, v12);
  *(_QWORD *)(a8 + v28[10]) = 0;

  *(_QWORD *)(a8 + v31) = 0;
  *(_QWORD *)(a8 + v32) = 1;
}

uint64_t sub_1D2D73C14@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X6>, int a6@<W7>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  id v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  int *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t result;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unsigned int v53;
  id v54;
  uint64_t v55;
  _BOOL4 v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v68 = a6;
  v63 = a3;
  v64 = a1;
  v59 = a7;
  v67 = sub_1D2D9C6C0();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v65 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1D2D9C6FC();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - v16;
  v18 = sub_1D2D9C7EC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v51 - v23;
  swift_bridgeObjectRelease();
  v25 = a5[9];
  v77 = a5[8];
  v78 = v25;
  v79 = *((_QWORD *)a5 + 20);
  v26 = a5[5];
  v73 = a5[4];
  v74 = v26;
  v27 = a5[7];
  v75 = a5[6];
  v76 = v27;
  v28 = a5[1];
  v69 = *a5;
  v70 = v28;
  v29 = a5[3];
  v71 = a5[2];
  v72 = v29;
  v62 = a4;
  sub_1D2CF811C(a4, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1D2CCADA4((uint64_t)v17, &qword_1ED587850);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
  }
  v30 = objc_msgSend(a2, sel_getCROutputRegion);
  v31 = objc_msgSend(v30, sel_layoutDirection);
  v32 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v32(v21, v24, v18);
  v58 = a2;
  v56 = v31 == (id)5 && Locale.supportsVerticalText()();
  v52 = *(void (**)(char *, uint64_t))(v19 + 8);
  v52(v21, v18);
  v32(v14, v24, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  v33 = (uint64_t)v63;
  v55 = sub_1D2D77DCC(v30, v63, v14);
  sub_1D2CCADA4((uint64_t)v14, &qword_1ED587850);
  v54 = objc_msgSend(v30, sel_numberOfLines);
  v34 = (unint64_t)objc_msgSend(v30, sel_textAlignment);
  v35 = 0x2010003u >> (8 * v34);
  if (v34 >= 4)
    v35 = 3;
  v53 = v35;
  v36 = v60;
  v37 = v57;
  v38 = v64;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v57, v64, v61);
  v40 = v65;
  sub_1D2D9C69C();

  sub_1D2CCADA4(v62, &qword_1ED587850);
  sub_1D2CCADA4(v33, &qword_1ED587850);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v39);
  v52(v24, v18);
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v42 = v59;
  v41(v59, v37, v39);
  v43 = (int *)type metadata accessor for VisualTranslationModel(0);
  v44 = v42 + v43[5];
  v45 = v70;
  *(_OWORD *)v44 = v69;
  *(_OWORD *)(v44 + 16) = v45;
  v46 = v74;
  *(_OWORD *)(v44 + 64) = v73;
  *(_OWORD *)(v44 + 80) = v46;
  v47 = v72;
  *(_OWORD *)(v44 + 32) = v71;
  *(_OWORD *)(v44 + 48) = v47;
  *(_QWORD *)(v44 + 160) = v79;
  v48 = v78;
  *(_OWORD *)(v44 + 128) = v77;
  *(_OWORD *)(v44 + 144) = v48;
  v49 = v76;
  *(_OWORD *)(v44 + 96) = v75;
  *(_OWORD *)(v44 + 112) = v49;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v66 + 32))(v42 + v43[6], v40, v67);
  *(_QWORD *)(v42 + v43[7]) = v55;
  *(_QWORD *)(v42 + v43[8]) = v54;
  *(_BYTE *)(v42 + v43[9]) = v56;
  *(_BYTE *)(v42 + v43[10]) = v53;
  *(_BYTE *)(v42 + v43[11]) = v68 & 1;
  return result;
}

uint64_t sub_1D2D740F4@<X0>(id a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  void (*v26)(_BYTE *, _BYTE *, uint64_t);
  void (*v27)(_BYTE *, uint64_t);
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  id v39;
  _BYTE *v40;
  _BYTE *v41;
  id v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[12];
  unsigned int v52;
  uint64_t v53;
  _BOOL4 v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_BYTE *, uint64_t);
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  _BYTE v66[176];
  _BYTE v67[176];
  _OWORD v68[10];
  uint64_t v69;

  v65 = a3;
  v63 = a2;
  v8 = sub_1D2D9C6C0();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x1E0C80A78](v8);
  v58 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1D2D9C6FC();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v55 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v51[-v16];
  v18 = sub_1D2D9C7EC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = &v51[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v51[-v23];
  v64 = a4;
  sub_1D2CF811C(a4, (uint64_t)v17);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1D2CCADA4((uint64_t)v17, &qword_1ED587850);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v24, v17, v18);
  }
  v25 = objc_msgSend(a1, sel_layoutDirection);
  v26 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16);
  v26(v21, v24, v18);
  v54 = v25 == (id)5 && Locale.supportsVerticalText()();
  v27 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
  v27(v21, v18);
  v28 = objc_msgSend(a1, sel_text);
  if (!v28)
  {

    sub_1D2CCADA4(v64, &qword_1ED587850);
    sub_1D2CCADA4((uint64_t)v65, &qword_1ED587850);
    v27(v24, v18);
    goto LABEL_14;
  }
  v29 = v28;
  v61 = v27;
  v62 = a5;
  v30 = sub_1D2D9DCD4();
  v32 = v31;

  swift_bridgeObjectRelease();
  v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v33 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v33
    || (a1 = a1,
        sub_1D2D6A220(a1, (uint64_t)v66),
        sub_1D2D7996C((uint64_t)v66, (uint64_t)v67),
        sub_1D2D7996C((uint64_t)v67, (uint64_t)v68),
        sub_1D2D799B4((uint64_t)v68) == 1))
  {

    sub_1D2CCADA4(v64, &qword_1ED587850);
    sub_1D2CCADA4((uint64_t)v65, &qword_1ED587850);
    v61(v24, v18);
    a5 = v62;
LABEL_14:
    v34 = type metadata accessor for VisualTranslationModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a5, 1, 1, v34);
  }
  v26(v14, v24, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  v36 = (uint64_t)v65;
  v53 = sub_1D2D77DCC(a1, v65, v14);
  sub_1D2CCADA4((uint64_t)v14, &qword_1ED587850);
  v37 = (unint64_t)objc_msgSend(a1, sel_textAlignment);
  v38 = 0x2010003u >> (8 * v37);
  if (v37 >= 4)
    v38 = 3;
  v52 = v38;
  v39 = objc_msgSend(a1, sel_uuid);
  v40 = v55;
  sub_1D2D9C6E4();

  v41 = v58;
  sub_1D2D9C69C();
  v42 = objc_msgSend(a1, sel_numberOfLines);

  sub_1D2CCADA4(v64, &qword_1ED587850);
  sub_1D2CCADA4(v36, &qword_1ED587850);
  v61(v24, v18);
  v43 = v62;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v56 + 32))(v62, v40, v57);
  v44 = (int *)type metadata accessor for VisualTranslationModel(0);
  v45 = v43 + v44[5];
  v46 = v68[1];
  *(_OWORD *)v45 = v68[0];
  *(_OWORD *)(v45 + 16) = v46;
  v47 = v68[5];
  *(_OWORD *)(v45 + 64) = v68[4];
  *(_OWORD *)(v45 + 80) = v47;
  v48 = v68[3];
  *(_OWORD *)(v45 + 32) = v68[2];
  *(_OWORD *)(v45 + 48) = v48;
  *(_QWORD *)(v45 + 160) = v69;
  v49 = v68[9];
  *(_OWORD *)(v45 + 128) = v68[8];
  *(_OWORD *)(v45 + 144) = v49;
  v50 = v68[7];
  *(_OWORD *)(v45 + 96) = v68[6];
  *(_OWORD *)(v45 + 112) = v50;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v59 + 32))(v43 + v44[6], v41, v60);
  *(_QWORD *)(v43 + v44[7]) = v53;
  *(_QWORD *)(v43 + v44[8]) = v42;
  *(_BYTE *)(v43 + v44[9]) = v54;
  *(_BYTE *)(v43 + v44[10]) = v52;
  *(_BYTE *)(v43 + v44[11]) = 0;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v44 - 1) + 56))(v43, 0, 1, v44);
}

uint64_t VisualTranslationModel.updateTranslation(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  int *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v2, v6);
  v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  v8 = (__int128 *)(v3 + v7[5]);
  v27 = v8[8];
  v28 = v8[9];
  v29 = *((_QWORD *)v8 + 20);
  v23 = v8[4];
  v24 = v8[5];
  v25 = v8[6];
  v26 = v8[7];
  v21 = v8[2];
  v22 = v8[3];
  v19 = *v8;
  v20 = v8[1];
  v9 = v7[6];
  v10 = v3 + v9;
  v11 = a2 + v9;
  v12 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  v13 = *(_QWORD *)(a1 + v7[7]);
  v14 = *(_QWORD *)(a1 + v7[8]);
  v15 = *(_BYTE *)(a1 + v7[9]);
  v16 = *(_BYTE *)(a1 + v7[10]);
  v17 = a2 + v7[5];
  *(_OWORD *)(v17 + 128) = v27;
  *(_OWORD *)(v17 + 144) = v28;
  *(_QWORD *)(v17 + 160) = v29;
  *(_OWORD *)(v17 + 64) = v23;
  *(_OWORD *)(v17 + 80) = v24;
  *(_OWORD *)(v17 + 96) = v25;
  *(_OWORD *)(v17 + 112) = v26;
  *(_OWORD *)v17 = v19;
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v21;
  *(_OWORD *)(v17 + 48) = v22;
  *(_QWORD *)(a2 + v7[7]) = v13;
  *(_QWORD *)(a2 + v7[8]) = v14;
  *(_BYTE *)(a2 + v7[9]) = v15;
  *(_BYTE *)(a2 + v7[10]) = v16;
  *(_BYTE *)(a2 + v7[11]) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.updateBounds(bounds:boundsTimeStamp:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int *v7;
  double v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = v3;
  v26 = a1[8];
  v27 = a1[9];
  v28 = *((_QWORD *)a1 + 20);
  v22 = a1[4];
  v23 = a1[5];
  v24 = a1[6];
  v25 = a1[7];
  v18 = *a1;
  v19 = a1[1];
  v20 = a1[2];
  v21 = a1[3];
  v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  sub_1D2D9C6A8();
  if (v8 > 0.0)
    return sub_1D2CDB6B4(v4, a3, type metadata accessor for VisualTranslationModel);
  v10 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, v4, v10);
  v11 = a3 + v7[6];
  v12 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a2, v12);
  v13 = *(_QWORD *)(v4 + v7[7]);
  v14 = *(_QWORD *)(v4 + v7[8]);
  v15 = *(_BYTE *)(v4 + v7[9]);
  v16 = *(_BYTE *)(v4 + v7[10]);
  v17 = a3 + v7[5];
  *(_OWORD *)(v17 + 128) = v26;
  *(_OWORD *)(v17 + 144) = v27;
  *(_QWORD *)(v17 + 160) = v28;
  *(_OWORD *)(v17 + 64) = v22;
  *(_OWORD *)(v17 + 80) = v23;
  *(_OWORD *)(v17 + 96) = v24;
  *(_OWORD *)(v17 + 112) = v25;
  *(_OWORD *)v17 = v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v21;
  *(_QWORD *)(a3 + v7[7]) = v13;
  *(_QWORD *)(a3 + v7[8]) = v14;
  *(_BYTE *)(a3 + v7[9]) = v15;
  *(_BYTE *)(a3 + v7[10]) = v16;
  *(_BYTE *)(a3 + v7[11]) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.json.getter()
{
  uint64_t v0;

  sub_1D2D9C558();
  swift_allocObject();
  sub_1D2D9C54C();
  type metadata accessor for VisualTranslationModel(0);
  sub_1D2CC66E4(&qword_1EFCA8F78, type metadata accessor for VisualTranslationModel, (uint64_t)&protocol conformance descriptor for VisualTranslationModel);
  v0 = sub_1D2D9C540();
  swift_release();
  return v0;
}

uint64_t sub_1D2D74B20(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1D2D9E358();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1D8247E58](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1D2D9E340();
        sub_1D2D9E364();
        sub_1D2D9E370();
        sub_1D2D9E34C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1D2D9E340();
        sub_1D2D9E364();
        sub_1D2D9E370();
        sub_1D2D9E34C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    sub_1D2D9E358();
    swift_bridgeObjectRetain();
    v2 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1D2D74D00(unint64_t *a1, void **a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD v41[2];
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a4;
  v51 = a5;
  v49 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v48 = (uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)v41 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for VisualTranslationModel(0);
  v52 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (uint64_t)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v44 = (uint64_t)v41 - v18;
  v19 = *a2;
  if ((a3 & 1) != 0)
    v20 = 4;
  else
    v20 = 8;
  v43 = v19;
  v21 = objc_msgSend(v19, sel_getCROutputRegion, v17);
  v22 = objc_msgSend(v21, sel_contentsWithTypes_, v20);

  sub_1D2CC63E8(0, &qword_1ED587338);
  v23 = sub_1D2D9DE60();

  if ((a3 & 1) == 0 || !sub_1D2D74B20(v23))
    goto LABEL_9;
  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  sub_1D2CC63E8(0, &qword_1ED587350);
  v25 = (void *)sub_1D2D9DE48();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_groupedParagraphBlocksFromParagraphs_, v25);

  sub_1D2CC63E8(0, &qword_1ED587348);
  v27 = sub_1D2D9DE60();

  if (v27 >> 62)
    goto LABEL_28;
  swift_bridgeObjectRetain();
  sub_1D2D9E538();
  v23 = v27;
  while (1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1D2D9E3AC();
      swift_bridgeObjectRelease();
      if (!v28)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v28)
        return swift_bridgeObjectRelease();
    }
    if (v28 >= 1)
      break;
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v23 = sub_1D2D9E3A0();
    swift_bridgeObjectRelease();
  }
  v29 = 0;
  v41[1] = v5;
  v42 = v23 & 0xC000000000000001;
  v30 = v23;
  do
  {
    if (v42)
      v31 = (id)MEMORY[0x1D8247E58](v29, v23);
    else
      v31 = *(id *)(v23 + 8 * v29 + 32);
    v32 = v31;
    v33 = v47;
    sub_1D2CF811C(v50, (uint64_t)v47);
    v34 = v48;
    sub_1D2CF811C(v51, v48);
    v35 = v32;
    sub_1D2D740F4(v35, v43, v33, v34, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v14, 1, v46) == 1)
    {

      sub_1D2CCADA4((uint64_t)v14, &qword_1ED5872D8);
    }
    else
    {
      v36 = v44;
      sub_1D2CD1FD4((uint64_t)v14, v44, type metadata accessor for VisualTranslationModel);
      sub_1D2CDB6B4(v36, v45, type metadata accessor for VisualTranslationModel);
      v37 = *v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v37 = sub_1D2D4AE54(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
      v39 = *(_QWORD *)(v37 + 16);
      v38 = *(_QWORD *)(v37 + 24);
      if (v39 >= v38 >> 1)
        v37 = sub_1D2D4AE54(v38 > 1, v39 + 1, 1, v37);
      *(_QWORD *)(v37 + 16) = v39 + 1;
      sub_1D2CD1FD4(v45, v37+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v39, type metadata accessor for VisualTranslationModel);

      *v49 = v37;
      sub_1D2CD3734(v44, type metadata accessor for VisualTranslationModel);
    }
    ++v29;
    v23 = v30;
  }
  while (v28 != v29);
  return swift_bridgeObjectRelease();
}

uint64_t static VisualTranslationModel.models(from:currentModels:sourceLocale:targetLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x1E0DEE9E0];
  v13 = MEMORY[0x1E0DEE9E0];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v10 = *(_QWORD *)(sub_1D2D9DC14() - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D2D752B0((uint64_t)&v13, v11, a2, a3, a4);
      v11 += v12;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1D2D752B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, __n128);
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  void *v83;
  void *v84;
  uint64_t v85;
  void (*v86)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(uint64_t, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  void *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  void (*v146)(uint64_t, char *, uint64_t);
  char *v147;
  int *v148;
  double v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  char v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  id v165;
  void *v166;
  id v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  __int128 v207[10];
  uint64_t v208;

  v193 = a5;
  v194 = a4;
  v189 = a3;
  v187 = a1;
  v172 = sub_1D2D9C6C0();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v173 = (char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v7);
  v176 = (char *)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v177 = (uint64_t)&v165 - v10;
  MEMORY[0x1E0C80A78](v11);
  v186 = (char *)&v165 - v12;
  MEMORY[0x1E0C80A78](v13);
  v185 = (char *)&v165 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v15);
  v174 = (char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v184 = (uint64_t)&v165 - v18;
  v190 = sub_1D2D9C7EC();
  v198 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v180 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v181 = (char *)&v165 - v21;
  v192 = type metadata accessor for VisualTranslationModel(0);
  v196 = *(_QWORD *)(v192 - 8);
  MEMORY[0x1E0C80A78](v192);
  v182 = (uint64_t)&v165 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v179 = (uint64_t)&v165 - v24;
  MEMORY[0x1E0C80A78](v25);
  v178 = (uint64_t)&v165 - v26;
  MEMORY[0x1E0C80A78](v27);
  v191 = (uint64_t)&v165 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  MEMORY[0x1E0C80A78](v29);
  v188 = (char *)&v165 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_1D2D9C6FC();
  v199 = *(_QWORD *)(v197 - 8);
  MEMORY[0x1E0C80A78](v197);
  v175 = (uint64_t)&v165 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v183 = (char *)&v165 - v33;
  MEMORY[0x1E0C80A78](v34);
  v200 = (uint64_t)&v165 - v35;
  MEMORY[0x1E0C80A78](v36);
  v195 = (char *)&v165 - v37;
  v38 = sub_1D2D9DC14();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v165 - v43;
  v45 = sub_1D2D9DB90();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = MEMORY[0x1E0C80A78](v45);
  v49 = (char *)&v165 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16);
  v50(v44, a2, v38, v47);
  if ((*(unsigned int (**)(char *, uint64_t))(v39 + 88))(v44, v38) == *MEMORY[0x1E0CEE518])
  {
    (*(void (**)(char *, uint64_t))(v39 + 96))(v44, v38);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v44, v45);
    v51 = (void *)sub_1D2D9DB78();
    objc_opt_self();
    v52 = (void *)swift_dynamicCastObjCClass();
    if (v52)
    {
      v168 = v49;
      v169 = v46;
      v170 = v45;
      v166 = v52;
      v53 = objc_msgSend(v52, sel_getCROutputRegion);
      ((void (*)(char *, uint64_t, uint64_t))v50)(v41, a2, v38);
      v54 = objc_msgSend(v53, sel_trackingID, sub_1D2D6A4CC(v41, (uint64_t)v207));
      if (v54)
      {
        v55 = v54;
        v56 = v200;
        sub_1D2D9C6E4();

        v57 = v199;
        v58 = *(void (**)(char *, uint64_t, uint64_t))(v199 + 32);
        v59 = (uint64_t)v188;
        v60 = v197;
        v58(v188, v56, v197);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v60);
        v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v59, 1, v60);
        v62 = (uint64_t)v195;
        v63 = v189;
        if (v61 != 1)
        {
          v58(v195, v59, v60);
LABEL_15:
          LODWORD(v189) = objc_msgSend(v53, sel_significantTranscriptChange);
          v69 = *(_QWORD *)(v63 + 16);
          v70 = v191;
          v167 = v53;
          if (!v69 || (v71 = sub_1D2D65098(v62), (v72 & 1) == 0))
          {
            v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
            v79(v200, v62, v60);
            v80 = (uint64_t)v183;
            v79((uint64_t)v183, v62, v60);
            v81 = v198;
            v82 = *(void (**)(char *, uint64_t, uint64_t))(v198 + 16);
            v83 = v185;
            v84 = v51;
            v85 = v190;
            v82(v185, v194, v190);
            v86 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56);
            v86(v83, 0, 1, v85);
            v87 = (uint64_t)v186;
            v82(v186, v193, v85);
            v86((void *)v87, 0, 1, v85);
            v88 = v84;
            v89 = v184;
            sub_1D2D73C14(v80, v166, v83, v87, v207, v189, v184);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v196 + 56))(v89, 0, 1, v192);
            sub_1D2D873E0(v89, v200);

            (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v62, v60);
            (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v170);
            return;
          }
          v73 = v178;
          sub_1D2CDB6B4(*(_QWORD *)(v63 + 56) + *(_QWORD *)(v196 + 72) * v71, v178, type metadata accessor for VisualTranslationModel);
          sub_1D2CD1FD4(v73, v70, type metadata accessor for VisualTranslationModel);
          v74 = v179;
          sub_1D2CDB6B4(v70, v179, type metadata accessor for VisualTranslationModel);
          v75 = v198;
          v76 = v181;
          v77 = v190;
          v188 = *(char **)(v198 + 16);
          ((void (*)(char *, uint64_t, uint64_t))v188)(v181, v194, v190);
          v165 = v51;
          if ((v189 & 1) != 0)
          {
            v78 = *(void (**)(char *, uint64_t))(v75 + 8);
            v78(v76, v77);
LABEL_30:
            sub_1D2CD3734(v74, type metadata accessor for VisualTranslationModel);
            sub_1D2CDB6B4(v70, v182, type metadata accessor for VisualTranslationModel);
            v108 = v180;
            ((void (*)(char *, uint64_t, uint64_t))v188)(v180, v193, v77);
LABEL_31:
            v78(v108, v77);
            goto LABEL_32;
          }
          v90 = *(_QWORD *)(v74 + *(int *)(v192 + 28));
          if (*(_QWORD *)(v90 + 16))
          {
            v91 = type metadata accessor for TextModel();
            v92 = *(unsigned __int8 *)(*(_QWORD *)(v91 - 8) + 80);
            v93 = v90 + ((v92 + 32) & ~v92) + *(int *)(v91 + 28);
            v94 = v177;
            sub_1D2CF811C(v93, v177);
            v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v94, 1, v77);
            v96 = v181;
            if (v95 != 1)
            {
              v97 = v77;
              v205 = sub_1D2D9C714();
              v206 = v98;
              v203 = 45;
              v204 = 0xE100000000000000;
              v201 = 95;
              v202 = 0xE100000000000000;
              sub_1D2CD1430();
              v99 = v94;
              v100 = sub_1D2D9E1E4();
              v102 = v101;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v99, v97);
              goto LABEL_25;
            }
          }
          else
          {
            v94 = v177;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56))(v177, 1, 1, v77);
            v96 = v181;
          }
          sub_1D2CCADA4(v94, &qword_1ED587850);
          v100 = 0;
          v102 = 0;
LABEL_25:
          v205 = sub_1D2D9C714();
          v206 = v103;
          v203 = 45;
          v204 = 0xE100000000000000;
          v201 = 95;
          v202 = 0xE100000000000000;
          sub_1D2CD1430();
          v104 = sub_1D2D9E1E4();
          v106 = v105;
          swift_bridgeObjectRelease();
          if (!v102)
          {
            v78 = *(void (**)(char *, uint64_t))(v198 + 8);
            v107 = v190;
            v78(v96, v190);
            v77 = v107;
            swift_bridgeObjectRelease();
            v57 = v199;
            v70 = v191;
            goto LABEL_30;
          }
          v57 = v199;
          if (v100 == v104 && v102 == v106)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v78 = *(void (**)(char *, uint64_t))(v198 + 8);
            v77 = v190;
            v78(v181, v190);
            swift_bridgeObjectRelease_n();
            sub_1D2CD3734(v74, type metadata accessor for VisualTranslationModel);
            sub_1D2CDB6B4(v191, v182, type metadata accessor for VisualTranslationModel);
            ((void (*)(char *, uint64_t, uint64_t))v188)(v180, v193, v77);
          }
          else
          {
            LODWORD(v189) = sub_1D2D9E52C();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v78 = *(void (**)(char *, uint64_t))(v198 + 8);
            v125 = v190;
            v78(v181, v190);
            swift_bridgeObjectRelease_n();
            sub_1D2CD3734(v74, type metadata accessor for VisualTranslationModel);
            v70 = v191;
            v77 = v125;
            sub_1D2CDB6B4(v191, v182, type metadata accessor for VisualTranslationModel);
            v108 = v180;
            ((void (*)(char *, uint64_t, uint64_t))v188)(v180, v193, v125);
            if ((v189 & 1) == 0)
              goto LABEL_31;
          }
          v126 = *(_QWORD *)(v182 + *(int *)(v192 + 28));
          if (*(_QWORD *)(v126 + 16))
          {
            v127 = type metadata accessor for TextModel();
            v128 = *(unsigned __int8 *)(*(_QWORD *)(v127 - 8) + 80);
            v129 = (uint64_t)v176;
            ((void (*)(char *, uint64_t, uint64_t))v188)(v176, v126 + ((v128 + 32) & ~v128) + *(int *)(v127 + 36), v77);
            v130 = v198;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v198 + 56))(v129, 0, 1, v77);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v129, 1, v77) != 1)
            {
              v131 = v57;
              v132 = v77;
              v205 = sub_1D2D9C714();
              v206 = v133;
              v203 = 45;
              v204 = 0xE100000000000000;
              v201 = 95;
              v202 = 0xE100000000000000;
              v134 = v129;
              v135 = sub_1D2D9E1E4();
              v137 = v136;
              swift_bridgeObjectRelease();
              v78((char *)v134, v132);
LABEL_41:
              v138 = v180;
              v205 = sub_1D2D9C714();
              v206 = v139;
              v203 = 45;
              v204 = 0xE100000000000000;
              v201 = 95;
              v202 = 0xE100000000000000;
              v140 = sub_1D2D9E1E4();
              v142 = v141;
              swift_bridgeObjectRelease();
              if (v137)
              {
                v57 = v131;
                if (v135 == v140 && v137 == v142)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v78(v180, v190);
                  swift_bridgeObjectRelease_n();
                  sub_1D2CD3734(v182, type metadata accessor for VisualTranslationModel);
                  v70 = v191;
                  v143 = (uint64_t)v174;
                  v109 = v197;
                }
                else
                {
                  v145 = sub_1D2D9E52C();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v77 = v190;
                  v78(v180, v190);
                  swift_bridgeObjectRelease_n();
                  sub_1D2CD3734(v182, type metadata accessor for VisualTranslationModel);
                  v70 = v191;
                  v143 = (uint64_t)v174;
                  v109 = v197;
                  if ((v145 & 1) == 0)
                    goto LABEL_33;
                }
                v146 = *(void (**)(uint64_t, char *, uint64_t))(v131 + 16);
                v112 = v195;
                v146(v175, v195, v109);
                v147 = v173;
                sub_1D2D9C69C();
                v148 = (int *)v192;
                sub_1D2D9C6A8();
                if (v149 <= 0.0)
                {
                  v146(v143, (char *)v70, v109);
                  v152 = v171;
                  v153 = v147;
                  v154 = v147;
                  v151 = v172;
                  (*(void (**)(uint64_t, char *, uint64_t))(v171 + 16))(v143 + v148[6], v153, v172);
                  v155 = *(_QWORD *)(v70 + v148[7]);
                  v156 = *(_QWORD *)(v70 + v148[8]);
                  v157 = *(_BYTE *)(v70 + v148[9]);
                  v158 = *(_BYTE *)(v70 + v148[10]);
                  v159 = v143 + v148[5];
                  v160 = v207[9];
                  *(_OWORD *)(v159 + 128) = v207[8];
                  *(_OWORD *)(v159 + 144) = v160;
                  *(_QWORD *)(v159 + 160) = v208;
                  v161 = v207[5];
                  *(_OWORD *)(v159 + 64) = v207[4];
                  *(_OWORD *)(v159 + 80) = v161;
                  v162 = v207[7];
                  *(_OWORD *)(v159 + 96) = v207[6];
                  *(_OWORD *)(v159 + 112) = v162;
                  v163 = v207[1];
                  *(_OWORD *)v159 = v207[0];
                  *(_OWORD *)(v159 + 16) = v163;
                  v164 = v207[3];
                  *(_OWORD *)(v159 + 32) = v207[2];
                  *(_OWORD *)(v159 + 48) = v164;
                  *(_QWORD *)(v143 + v148[7]) = v155;
                  *(_QWORD *)(v143 + v148[8]) = v156;
                  *(_BYTE *)(v143 + v148[9]) = v157;
                  *(_BYTE *)(v143 + v148[10]) = v158;
                  *(_BYTE *)(v143 + v148[11]) = 0;
                  swift_bridgeObjectRetain();
                  v150 = v154;
                }
                else
                {
                  sub_1D2CDB6B4(v70, v143, type metadata accessor for VisualTranslationModel);
                  v150 = v147;
                  v151 = v172;
                  v152 = v171;
                }
                (*(void (**)(char *, uint64_t))(v152 + 8))(v150, v151);
                (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v196 + 56))(v143, 0, 1, v148);
                sub_1D2D873E0(v143, v175);
                v120 = v165;
                v124 = v197;
                goto LABEL_34;
              }
              v144 = v190;
              v78(v138, v190);
              v77 = v144;
              swift_bridgeObjectRelease();
              v70 = v191;
              v57 = v131;
LABEL_32:
              sub_1D2CD3734(v182, type metadata accessor for VisualTranslationModel);
              v109 = v197;
LABEL_33:
              v110 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
              v111 = v200;
              v112 = v195;
              v110(v200, v195, v109);
              v113 = v183;
              v110((uint64_t)v183, v112, v109);
              v114 = v185;
              v115 = v70;
              v116 = v188;
              ((void (*)(char *, uint64_t, uint64_t))v188)(v185, v194, v77);
              v117 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v198 + 56);
              v117(v114, 0, 1, v77);
              v118 = v77;
              v119 = (uint64_t)v186;
              ((void (*)(char *, uint64_t, uint64_t))v116)(v186, v193, v118);
              v70 = v115;
              v117((void *)v119, 0, 1, v118);
              v120 = v165;
              v121 = v165;
              v122 = v184;
              v123 = (uint64_t)v113;
              v57 = v199;
              v124 = v197;
              sub_1D2D73C14(v123, v166, v114, v119, v207, 1, v184);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v196 + 56))(v122, 0, 1, v192);
              sub_1D2D873E0(v122, v111);
LABEL_34:

              sub_1D2CD3734(v70, type metadata accessor for VisualTranslationModel);
              (*(void (**)(char *, uint64_t))(v57 + 8))(v112, v124);
              (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v170);
              return;
            }
          }
          else
          {
            v129 = (uint64_t)v176;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v198 + 56))(v176, 1, 1, v77);
          }
          v131 = v57;
          sub_1D2CCADA4(v129, &qword_1ED587850);
          v135 = 0;
          v137 = 0;
          goto LABEL_41;
        }
      }
      else
      {
        v57 = v199;
        v59 = (uint64_t)v188;
        v60 = v197;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v188, 1, 1, v197);
        v62 = (uint64_t)v195;
        v63 = v189;
      }
      v68 = objc_msgSend(v53, sel_uuid);
      sub_1D2D9C6E4();

      sub_1D2CCADA4(v59, &qword_1EFCA71F0);
      goto LABEL_15;
    }

    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v38);
  }
  if (qword_1ED587858 != -1)
    swift_once();
  v64 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v64, (uint64_t)qword_1ED5886E8);
  v65 = sub_1D2D9C8DC();
  v66 = sub_1D2D9E034();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v67 = 0;
    _os_log_impl(&dword_1D2CC0000, v65, v66, "Observation is not text as expected", v67, 2u);
    MEMORY[0x1D8248974](v67, -1, -1);
  }

}

uint64_t VisualTranslationModel.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TextDiagnosticsModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CDB6B4(v0, (uint64_t)v3, type metadata accessor for VisualTranslationModel);
  TextDiagnosticsModel.init(model:)((uint64_t)v3, (uint64_t)v6);
  v10[0] = TextDiagnosticsModel.json.getter();
  v10[1] = v7;
  sub_1D2D9DDA0();
  v8 = v10[0];
  sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TextDiagnosticsModel);
  return v8;
}

uint64_t VisualTranslationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8F80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D78634();
  sub_1D2D9E61C();
  v30 = 0;
  sub_1D2D9C6FC();
  sub_1D2CC66E4(&qword_1EFCA5DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D2D9E4F0();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for VisualTranslationModel(0);
    v10 = (__int128 *)(v3 + v9[5]);
    v11 = v10[9];
    v27 = v10[8];
    v28 = v11;
    v29 = *((_QWORD *)v10 + 20);
    v12 = v10[5];
    v23 = v10[4];
    v24 = v12;
    v13 = v10[7];
    v25 = v10[6];
    v26 = v13;
    v14 = v10[1];
    v19 = *v10;
    v20 = v14;
    v15 = v10[3];
    v21 = v10[2];
    v22 = v15;
    v18 = 1;
    sub_1D2D78678();
    sub_1D2D9E4F0();
    LOBYTE(v19) = 2;
    sub_1D2D9C6C0();
    sub_1D2CC66E4(&qword_1EFCA8F98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D2D9E4F0();
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + v9[7]);
    v18 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C0);
    sub_1D2D78744(&qword_1EFCA8FA0, &qword_1EFCA8FA8, (uint64_t)&protocol conformance descriptor for TextModel, MEMORY[0x1E0DEAF10]);
    sub_1D2D9E4F0();
    LOBYTE(v19) = 4;
    sub_1D2D9E4D8();
    LOBYTE(v19) = 5;
    sub_1D2D9E4B4();
    LOBYTE(v19) = *(_BYTE *)(v3 + v9[10]);
    v18 = 6;
    sub_1D2D786BC();
    sub_1D2D9E49C();
    LOBYTE(v19) = 7;
    sub_1D2D9E4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VisualTranslationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;

  v33 = a2;
  v36 = sub_1D2D9C6C0();
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D2D9C6FC();
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8FB8);
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2D78634();
  v40 = v8;
  v12 = v55;
  sub_1D2D9E610();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v55 = v6;
  v31 = (int *)v9;
  v32 = v4;
  v13 = v11;
  v14 = v35;
  v15 = v36;
  LOBYTE(v44) = 0;
  sub_1D2CC66E4(&qword_1EFCA5DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v16 = v38;
  v17 = v37;
  sub_1D2D9E46C();
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v13, v16, v17);
  v43 = 1;
  sub_1D2D78700();
  sub_1D2D9E46C();
  v18 = v31;
  v19 = &v13[v31[5]];
  v20 = v51;
  v21 = v53;
  *((_OWORD *)v19 + 8) = v52;
  *((_OWORD *)v19 + 9) = v21;
  *((_QWORD *)v19 + 20) = v54;
  v22 = v49;
  *((_OWORD *)v19 + 4) = v48;
  *((_OWORD *)v19 + 5) = v22;
  *((_OWORD *)v19 + 6) = v50;
  *((_OWORD *)v19 + 7) = v20;
  v23 = v45;
  *(_OWORD *)v19 = v44;
  *((_OWORD *)v19 + 1) = v23;
  v24 = v47;
  *((_OWORD *)v19 + 2) = v46;
  *((_OWORD *)v19 + 3) = v24;
  LOBYTE(v42) = 2;
  sub_1D2CC66E4(&qword_1EFCA8FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v25 = v34;
  sub_1D2D9E46C();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v13[v18[6]], v25, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA81C0);
  v41 = 3;
  sub_1D2D78744(&qword_1EFCA8FD0, &qword_1EFCA8FD8, (uint64_t)&protocol conformance descriptor for TextModel, MEMORY[0x1E0DEAF40]);
  sub_1D2D9E46C();
  v26 = (uint64_t)a1;
  v27 = (uint64_t)v13;
  v28 = v31;
  *(_QWORD *)(v27 + v31[7]) = v42;
  LOBYTE(v42) = 4;
  *(_QWORD *)(v27 + v28[8]) = sub_1D2D9E454();
  LOBYTE(v42) = 5;
  *(_BYTE *)(v27 + v28[9]) = sub_1D2D9E43C() & 1;
  v41 = 6;
  sub_1D2D787C8();
  sub_1D2D9E424();
  *(_BYTE *)(v27 + v28[10]) = v42;
  LOBYTE(v42) = 7;
  LOBYTE(v18) = sub_1D2D9E43C();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v39);
  *(_BYTE *)(v27 + v31[11]) = v18 & 1;
  sub_1D2CDB6B4(v27, v33, type metadata accessor for VisualTranslationModel);
  __swift_destroy_boxed_opaque_existential_0(v26);
  return sub_1D2CD3734(v27, type metadata accessor for VisualTranslationModel);
}

uint64_t sub_1D2D77260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualTranslationModel.init(from:)(a1, a2);
}

uint64_t sub_1D2D77274(_QWORD *a1)
{
  return VisualTranslationModel.encode(to:)(a1);
}

uint64_t sub_1D2D77288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TextDiagnosticsModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CDB6B4(v1, (uint64_t)v3, type metadata accessor for VisualTranslationModel);
  TextDiagnosticsModel.init(model:)((uint64_t)v3, (uint64_t)v6);
  v10[0] = TextDiagnosticsModel.json.getter();
  v10[1] = v7;
  sub_1D2D9DDA0();
  v8 = v10[0];
  sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TextDiagnosticsModel);
  return v8;
}

uint64_t sub_1D2D7736C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  _QWORD *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[2];
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1E0C80A78](v40);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_10:
    v34 = sub_1D2D9C7EC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a2, 1, 1, v34);
  }
  v36[0] = (uint64_t)v36 - v11;
  v36[1] = a1;
  v37 = a2;
  v13 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v39 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v14 = type metadata accessor for VisualTranslationModel;
  v38 = v8;
  while (1)
  {
    sub_1D2CDB6B4(v13, (uint64_t)v8, v14);
    v16 = *(_QWORD *)&v8[*(int *)(v40 + 28)];
    if (*(_QWORD *)(v16 + 16))
      break;
    v15 = sub_1D2D9C7EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
LABEL_4:
    sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
    sub_1D2CD3734((uint64_t)v8, v14);
    v13 += v39;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      a2 = v37;
      goto LABEL_10;
    }
  }
  v17 = type metadata accessor for TextModel();
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = v16 + *(int *)(v17 + 36) + v19;
  v21 = sub_1D2D9C7EC();
  v22 = v14;
  v23 = *(_QWORD **)(v21 - 8);
  v24 = (void (*)(char *, uint64_t, uint64_t))v23[2];
  v24(v6, v20, v21);
  v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v23[7];
  v25(v6, 0, 1, v21);
  v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v23[6];
  v14 = v22;
  v8 = v38;
  if (v26(v6, 1, v21) == 1)
    goto LABEL_4;
  sub_1D2CCADA4((uint64_t)v6, &qword_1ED587850);
  swift_bridgeObjectRelease();
  v27 = (uint64_t)v8;
  v28 = v36[0];
  sub_1D2CD1FD4(v27, v36[0], type metadata accessor for VisualTranslationModel);
  v29 = *(_QWORD *)(v28 + *(int *)(v40 + 28));
  swift_bridgeObjectRetain();
  sub_1D2CD3734(v28, type metadata accessor for VisualTranslationModel);
  if (*(_QWORD *)(v29 + 16))
  {
    v30 = v29 + v19 + *(int *)(v17 + 36);
    v31 = v37;
    v24(v37, v30, v21);
    v32 = v31;
    v33 = 0;
  }
  else
  {
    v32 = v37;
    v33 = 1;
  }
  v25(v32, v33, 1, v21);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D2D77654()
{
  unint64_t result;

  result = qword_1EFCA8F00;
  if (!qword_1EFCA8F00)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6954, &type metadata for VisualTranslationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F00);
  }
  return result;
}

unint64_t sub_1D2D77698()
{
  unint64_t result;

  result = qword_1EFCA8F30;
  if (!qword_1EFCA8F30)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6904, &type metadata for VisualTranslationTextAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F30);
  }
  return result;
}

unint64_t sub_1D2D776DC()
{
  unint64_t result;

  result = qword_1EFCA8F38;
  if (!qword_1EFCA8F38)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA68B4, &type metadata for VisualTranslationTextAlignment.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F38);
  }
  return result;
}

unint64_t sub_1D2D77720()
{
  unint64_t result;

  result = qword_1EFCA8F40;
  if (!qword_1EFCA8F40)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6864, &type metadata for VisualTranslationTextAlignment.LeadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F40);
  }
  return result;
}

unint64_t sub_1D2D77764()
{
  unint64_t result;

  result = qword_1EFCA8F48;
  if (!qword_1EFCA8F48)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6814, &type metadata for VisualTranslationTextAlignment.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F48);
  }
  return result;
}

uint64_t sub_1D2D777A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874737361507369 && a2 == 0xED00006867756F72 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7466654C706F74 && a2 == 0xE700000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1D2D77ABC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000 || (sub_1D2D9E52C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D2D9E52C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D2D77C08()
{
  unint64_t v0;

  v0 = sub_1D2D9E3F4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1D2D77C50(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v21 = a3;
  v4 = type metadata accessor for TextModel();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1D2D04068(0, 0, 0);
  v8 = v22;
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v19 = a1;
  if (v9)
  {
    v10 = 0;
    v11 = (uint64_t *)(a1 + 56);
    do
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      v15 = *(v11 - 3);
      v14 = *(v11 - 2);
      swift_bridgeObjectRetain();
      v20(v10, v15, v14, v13, v12);
      swift_bridgeObjectRelease();
      v22 = v8;
      v17 = *(_QWORD *)(v8 + 16);
      v16 = *(_QWORD *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D2D04068(v16 > 1, v17 + 1, 1);
        v8 = v22;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v17 + 1;
      sub_1D2CD1FD4((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v11 += 4;
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D2D77DCC(void *a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;

  v67 = a3;
  v5 = sub_1D2D9C7EC();
  v63 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v8);
  v59 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v66 = (uint64_t)&v58 - v11;
  v12 = sub_1D2D9C6FC();
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587320);
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)&v16 = MEMORY[0x1E0C80A78](v14).n128_u64[0];
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a1;
  v19 = objc_msgSend(a1, sel_text, v16);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1D2D9DCD4();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xE000000000000000;
  }
  v62 = v7;
  v64 = v5;
  v69 = v21;
  v70 = v23;
  sub_1D2D9C840();
  sub_1D2D798B8();
  sub_1D2D798FC();
  v24 = sub_1D2D9DC68();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = (_QWORD *)(v24 + 56);
    v27 = MEMORY[0x1E0DEE9D8];
    do
    {
      v32 = *(v26 - 3);
      if ((*(v26 - 2) ^ v32) >= 0x4000)
      {
        v68 = *((_OWORD *)v26 - 1);
        v33 = *v26;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v69 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1D2D040C0(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v27 = v69;
        }
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        v30 = v68;
        if (v29 >= v28 >> 1)
        {
          sub_1D2D040C0(v28 > 1, v29 + 1, 1);
          v30 = v68;
          v27 = v69;
        }
        *(_QWORD *)(v27 + 16) = v29 + 1;
        v31 = v27 + 32 * v29;
        *(_QWORD *)(v31 + 32) = v32;
        *(_OWORD *)(v31 + 40) = v30;
        *(_QWORD *)(v31 + 56) = v33;
      }
      v26 += 4;
      --v25;
    }
    while (v25);
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v35 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v35);
  v36 = v67;
  *(&v58 - 2) = a2;
  *(&v58 - 1) = v36;
  v37 = sub_1D2D77C50(v27, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D2D79948, (uint64_t)(&v58 - 4));
  swift_release();
  if (!*(_QWORD *)(v37 + 16))
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587360);
    v38 = (int *)type metadata accessor for TextModel();
    v39 = *(unsigned __int8 *)(*((_QWORD *)v38 - 1) + 80);
    v40 = (v39 + 32) & ~v39;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1D2DA0510;
    v41 = v37 + v40;
    sub_1D2D9C6F0();
    v42 = objc_msgSend(v58, sel_text);
    if (v42)
    {
      v43 = v42;
      *(_QWORD *)&v68 = sub_1D2D9DCD4();
      v58 = v44;

    }
    else
    {
      *(_QWORD *)&v68 = 0;
      v58 = (id)0xE000000000000000;
    }
    v45 = v63;
    v46 = v64;
    sub_1D2CF811C((uint64_t)a2, v66);
    v47 = (uint64_t)v36;
    v48 = v59;
    sub_1D2CF811C(v47, v59);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v48, 1, v46) == 1)
    {
      v49 = v62;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      sub_1D2CCADA4(v48, &qword_1ED587850);
    }
    else
    {
      v49 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v62, v48, v46);
    }
    v50 = v41 + v38[7];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v50, 1, 1, v46);
    v51 = v45;
    v52 = (_QWORD *)(v41 + v38[8]);
    *v52 = 0;
    v52[1] = 0;
    v53 = v38[11];
    *(_QWORD *)(v41 + v53) = 0;
    v54 = v38[12];
    *(_QWORD *)(v41 + v54) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v41, v65, v61);
    *(_QWORD *)(v41 + v38[5]) = 0;
    v55 = (_QWORD *)(v41 + v38[6]);
    v56 = v58;
    *v55 = v68;
    v55[1] = v56;
    sub_1D2CE46D0(v66, v50);
    swift_bridgeObjectRelease();
    *v52 = 0;
    v52[1] = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v41 + v38[9], v49, v46);
    *(_QWORD *)(v41 + v38[10]) = 0;

    *(_QWORD *)(v41 + v53) = 0;
    *(_QWORD *)(v41 + v54) = 1;
  }
  return v37;
}

void *_s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = sub_1D2D74B20(a1);
  if (v8)
  {
    v9 = v8;
    if (qword_1ED587858 != -1)
      swift_once();
    v10 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED5886E8);
    swift_bridgeObjectRetain_n();
    v11 = sub_1D2D9C8DC();
    v12 = sub_1D2D9E01C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 134349056;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_1D2D9E3AC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v26 = v14;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2CC0000, v11, v12, "OCR observations unwrapped %{public}ld", v13, 0xCu);
      MEMORY[0x1D8248974](v13, -1, -1);

    }
    else
    {

      v15 = swift_bridgeObjectRelease_n();
    }
    MEMORY[0x1E0C80A78](v15);
    v23[16] = a2 & 1;
    v24 = a3;
    v25 = a4;
    v21 = sub_1D2D706C0(MEMORY[0x1E0DEE9D8], (void (*)(void **, id *))sub_1D2D79950, (uint64_t)v23, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED587858 != -1)
      swift_once();
    v16 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED5886E8);
    swift_bridgeObjectRetain_n();
    v17 = sub_1D2D9C8DC();
    v18 = sub_1D2D9E01C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 134349056;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_1D2D9E3AC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v26 = v20;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2CC0000, v17, v18, "Failed to unwrap %{public}ld OCR observations", v19, 0xCu);
      MEMORY[0x1D8248974](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (void *)MEMORY[0x1E0DEE9D8];
  }
  return v21;
}

unint64_t sub_1D2D78634()
{
  unint64_t result;

  result = qword_1EFCA8F88;
  if (!qword_1EFCA8F88)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA67C4, &type metadata for VisualTranslationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F88);
  }
  return result;
}

unint64_t sub_1D2D78678()
{
  unint64_t result;

  result = qword_1EFCA8F90;
  if (!qword_1EFCA8F90)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for PageBounds, &type metadata for PageBounds);
    atomic_store(result, (unint64_t *)&qword_1EFCA8F90);
  }
  return result;
}

unint64_t sub_1D2D786BC()
{
  unint64_t result;

  result = qword_1EFCA8FB0;
  if (!qword_1EFCA8FB0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationTextAlignment, &type metadata for VisualTranslationTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EFCA8FB0);
  }
  return result;
}

unint64_t sub_1D2D78700()
{
  unint64_t result;

  result = qword_1EFCA8FC0;
  if (!qword_1EFCA8FC0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for PageBounds, &type metadata for PageBounds);
    atomic_store(result, (unint64_t *)&qword_1EFCA8FC0);
  }
  return result;
}

uint64_t sub_1D2D78744(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA81C0);
    v10 = sub_1D2CC66E4(a2, (uint64_t (*)(uint64_t))type metadata accessor for TextModel, a3);
    result = MEMORY[0x1D82488A8](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2D787C8()
{
  unint64_t result;

  result = qword_1EFCA8FE0;
  if (!qword_1EFCA8FE0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationTextAlignment, &type metadata for VisualTranslationTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EFCA8FE0);
  }
  return result;
}

unint64_t sub_1D2D78810()
{
  unint64_t result;

  result = qword_1EFCA8FE8;
  if (!qword_1EFCA8FE8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationTextAlignment, &type metadata for VisualTranslationTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EFCA8FE8);
  }
  return result;
}

uint64_t sub_1D2D78854()
{
  return type metadata accessor for VisualTranslationResult(0);
}

uint64_t type metadata accessor for VisualTranslationResult(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1EFCA9018);
}

uint64_t sub_1D2D78870()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D2D9C6FC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for VisualTranslationResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualTranslationResult.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment()
{
  return &type metadata for VisualTranslationTextAlignment;
}

_QWORD *initializeBufferWithCopyOfBuffer for VisualTranslationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D2D9C6FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *((_QWORD *)v10 + 20) = *((_QWORD *)v11 + 20);
    v12 = *((_OWORD *)v11 + 9);
    *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
    *((_OWORD *)v10 + 9) = v12;
    v13 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v13;
    v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    v15 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v15;
    v16 = *((_OWORD *)v11 + 3);
    v17 = (char *)a1 + v9;
    v18 = (char *)a2 + v9;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v16;
    v19 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
    v21 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VisualTranslationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v10 + 160);
  v11 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 144) = v11;
  v12 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v12;
  v13 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = *(_OWORD *)(v10 + 48);
  v16 = a1 + v8;
  v17 = a2 + v8;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v15;
  v18 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 16) = v9[2];
  *(_QWORD *)(v8 + 24) = v9[3];
  *(_QWORD *)(v8 + 32) = v9[4];
  *(_QWORD *)(v8 + 40) = v9[5];
  *(_QWORD *)(v8 + 48) = v9[6];
  *(_QWORD *)(v8 + 56) = v9[7];
  *(_QWORD *)(v8 + 64) = v9[8];
  *(_QWORD *)(v8 + 72) = v9[9];
  *(_QWORD *)(v8 + 80) = v9[10];
  *(_QWORD *)(v8 + 88) = v9[11];
  *(_QWORD *)(v8 + 96) = v9[12];
  *(_QWORD *)(v8 + 104) = v9[13];
  *(_QWORD *)(v8 + 112) = v9[14];
  *(_QWORD *)(v8 + 120) = v9[15];
  *(_QWORD *)(v8 + 128) = v9[16];
  *(_QWORD *)(v8 + 136) = v9[17];
  *(_QWORD *)(v8 + 144) = v9[18];
  *(_QWORD *)(v8 + 152) = v9[19];
  *(_QWORD *)(v8 + 160) = v9[20];
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v10 + 160);
  v11 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 144) = v11;
  v12 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v12;
  v13 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = *(_OWORD *)(v10 + 48);
  v16 = a1 + v8;
  v17 = a2 + v8;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v15;
  v18 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  *(_OWORD *)(v9 + 32) = v11;
  v12 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 64) = v12;
  v13 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v13;
  v14 = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 128) = v14;
  *(_OWORD *)(v9 + 144) = *(_OWORD *)(v10 + 144);
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v10 + 160);
  v17 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v18 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D78F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D2D9C6C0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualTranslationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D78FFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D2D9C6C0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1D2D790A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D2D9C6FC();
  if (v1 <= 0x3F)
  {
    result = sub_1D2D9C6C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VisualTranslationModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualTranslationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D2D79238 + 4 * byte_1D2DA6101[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D2D7926C + 4 * byte_1D2DA60FC[v4]))();
}

uint64_t sub_1D2D7926C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D7927CLL);
  return result;
}

uint64_t sub_1D2D79288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D79290);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D2D79294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D7929C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationModel.CodingKeys()
{
  return &type metadata for VisualTranslationModel.CodingKeys;
}

uint64_t _s13TranslationUI30VisualTranslationTextAlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D2D79304 + 4 * byte_1D2DA610B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D2D79338 + 4 * byte_1D2DA6106[v4]))();
}

uint64_t sub_1D2D79338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D79348);
  return result;
}

uint64_t sub_1D2D79354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D7935CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D2D79360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.CodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.CenterCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.LeadingCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.LeadingCodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.TrailingCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.TrailingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for VisualTranslationResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D2D79400 + 4 * byte_1D2DA6115[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D2D79434 + 4 * byte_1D2DA6110[v4]))();
}

uint64_t sub_1D2D79434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D7943C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D79444);
  return result;
}

uint64_t sub_1D2D79450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D79458);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D2D7945C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationResult.CodingKeys()
{
  return &type metadata for VisualTranslationResult.CodingKeys;
}

unint64_t sub_1D2D79484()
{
  unint64_t result;

  result = qword_1EFCA9028;
  if (!qword_1EFCA9028)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6504, &type metadata for VisualTranslationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9028);
  }
  return result;
}

unint64_t sub_1D2D794CC()
{
  unint64_t result;

  result = qword_1EFCA9030;
  if (!qword_1EFCA9030)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA66AC, &type metadata for VisualTranslationTextAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9030);
  }
  return result;
}

unint64_t sub_1D2D79514()
{
  unint64_t result;

  result = qword_1EFCA9038;
  if (!qword_1EFCA9038)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA679C, &type metadata for VisualTranslationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9038);
  }
  return result;
}

unint64_t sub_1D2D7955C()
{
  unint64_t result;

  result = qword_1EFCA9040;
  if (!qword_1EFCA9040)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA66D4, &type metadata for VisualTranslationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9040);
  }
  return result;
}

unint64_t sub_1D2D795A4()
{
  unint64_t result;

  result = qword_1EFCA9048;
  if (!qword_1EFCA9048)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA66FC, &type metadata for VisualTranslationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9048);
  }
  return result;
}

unint64_t sub_1D2D795EC()
{
  unint64_t result;

  result = qword_1EFCA9050;
  if (!qword_1EFCA9050)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA65CC, &type metadata for VisualTranslationTextAlignment.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9050);
  }
  return result;
}

unint64_t sub_1D2D79634()
{
  unint64_t result;

  result = qword_1EFCA9058;
  if (!qword_1EFCA9058)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA65F4, &type metadata for VisualTranslationTextAlignment.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9058);
  }
  return result;
}

unint64_t sub_1D2D7967C()
{
  unint64_t result;

  result = qword_1EFCA9060;
  if (!qword_1EFCA9060)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA657C, &type metadata for VisualTranslationTextAlignment.LeadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9060);
  }
  return result;
}

unint64_t sub_1D2D796C4()
{
  unint64_t result;

  result = qword_1EFCA9068;
  if (!qword_1EFCA9068)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA65A4, &type metadata for VisualTranslationTextAlignment.LeadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9068);
  }
  return result;
}

unint64_t sub_1D2D7970C()
{
  unint64_t result;

  result = qword_1EFCA9070;
  if (!qword_1EFCA9070)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA652C, &type metadata for VisualTranslationTextAlignment.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9070);
  }
  return result;
}

unint64_t sub_1D2D79754()
{
  unint64_t result;

  result = qword_1EFCA9078;
  if (!qword_1EFCA9078)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6554, &type metadata for VisualTranslationTextAlignment.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9078);
  }
  return result;
}

unint64_t sub_1D2D7979C()
{
  unint64_t result;

  result = qword_1EFCA9080;
  if (!qword_1EFCA9080)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA661C, &type metadata for VisualTranslationTextAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9080);
  }
  return result;
}

unint64_t sub_1D2D797E4()
{
  unint64_t result;

  result = qword_1EFCA9088;
  if (!qword_1EFCA9088)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6644, &type metadata for VisualTranslationTextAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9088);
  }
  return result;
}

unint64_t sub_1D2D7982C()
{
  unint64_t result;

  result = qword_1EFCA9090;
  if (!qword_1EFCA9090)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6474, &type metadata for VisualTranslationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9090);
  }
  return result;
}

unint64_t sub_1D2D79874()
{
  unint64_t result;

  result = qword_1EFCA9098;
  if (!qword_1EFCA9098)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA649C, &type metadata for VisualTranslationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFCA9098);
  }
  return result;
}

unint64_t sub_1D2D798B8()
{
  unint64_t result;

  result = qword_1ED587328;
  if (!qword_1ED587328)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED587328);
  }
  return result;
}

unint64_t sub_1D2D798FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED587318;
  if (!qword_1ED587318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED587320);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED587318);
  }
  return result;
}

void sub_1D2D79948(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;

  sub_1D2D739A8(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
}

uint64_t sub_1D2D79950(unint64_t *a1, void **a2)
{
  uint64_t v2;

  return sub_1D2D74D00(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1D2D7996C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D799B4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VisualTranslationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2D79A1C + 4 * byte_1D2DA611F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2D79A50 + 4 * byte_1D2DA611A[v4]))();
}

uint64_t sub_1D2D79A50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79A58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2D79A60);
  return result;
}

uint64_t sub_1D2D79A6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2D79A74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2D79A78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2D79A80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationError()
{
  return &type metadata for VisualTranslationError;
}

unint64_t sub_1D2D79AA0()
{
  unint64_t result;

  result = qword_1EFCA90A0;
  if (!qword_1EFCA90A0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6A68, &type metadata for VisualTranslationError);
    atomic_store(result, (unint64_t *)&qword_1EFCA90A0);
  }
  return result;
}

__n128 sub_1D2D79AEC@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  CGFloat *v3;
  double v7;
  double v8;
  double v9;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  __n128 result;
  CGFloat d;
  CGFloat ty;
  CGFloat tx;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  CGAffineTransform v22;
  CGFloat v23;
  CGFloat v24;
  uint64_t v25;

  v7 = *v3;
  v8 = v3[1];
  v9 = v3[2];
  CGAffineTransformMakeScale(&v22, *v3, *v3);
  a = v22.a;
  b = v22.b;
  c = v22.c;
  tx = v22.tx;
  d = v22.d;
  ty = v22.ty;
  CGAffineTransformMakeTranslation(&v22, (1.0 - v7) * (a2 * 0.5 + v8), (1.0 - v7) * (a3 * 0.5 + v9));
  v22.a = a;
  v22.b = b;
  v22.c = 0.0;
  v22.d = c;
  v22.tx = d;
  v22.ty = 0.0;
  v23 = tx;
  v24 = ty;
  v25 = 0x3FF0000000000000;
  sub_1D2D9D128();
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 64) = v21;
  result = v18;
  *(_OWORD *)a1 = v17;
  *(__n128 *)(a1 + 16) = v18;
  return result;
}

double sub_1D2D79C1C@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

double sub_1D2D79C28(double *a1)
{
  _QWORD *v1;
  double result;

  result = *a1;
  *v1 = *(_QWORD *)a1;
  return result;
}

double (*sub_1D2D79C34(_QWORD *a1))(uint64_t a1)
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *v1;
  return sub_1D2D79C50;
}

double sub_1D2D79C50(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  **(_QWORD **)(a1 + 8) = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D2D79C64()
{
  sub_1D2D7EB78();
  return sub_1D2D9CD08();
}

uint64_t sub_1D2D79CCC()
{
  sub_1D2D7EB78();
  return sub_1D2D9CCE4();
}

uint64_t sub_1D2D79D34()
{
  sub_1D2D7EB78();
  return sub_1D2D9CCFC();
}

void sub_1D2D79D8C()
{
  sub_1D2D9CBD0();
  __break(1u);
}

uint64_t sub_1D2D79D9C()
{
  uint64_t v0;

  sub_1D2D7EA44();
  sub_1D2D9CC24();
  sub_1D2D9DAA0();
  sub_1D2D9CC30();
  swift_release();
  swift_release();
  sub_1D2D9CC0C();
  sub_1D2D9DAA0();
  sub_1D2D9CC30();
  swift_release();
  swift_release();
  sub_1D2D9CC18();
  sub_1D2D9CC0C();
  sub_1D2D9DA94();
  sub_1D2D9CC30();
  swift_release();
  swift_release();
  v0 = sub_1D2D9CC00();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t VisualTranslationOverlay.init(models:zoomScale:systemTranslationDismissHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _OWORD v22[4];
  uint64_t v23;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v22 - v14;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 8) = 0x3FF0000000000000;
  type metadata accessor for CGRect(0);
  memset(v22, 0, 32);
  sub_1D2D9D8B4();
  v16 = v23;
  v17 = v22[3];
  *(_OWORD *)(a4 + 32) = v22[2];
  *(_OWORD *)(a4 + 48) = v17;
  *(_QWORD *)(a4 + 64) = v16;
  v18 = type metadata accessor for VisualTranslationOverlay();
  v19 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 1, 1, v19);
  sub_1D2CCAD60((uint64_t)v15, (uint64_t)v12, &qword_1ED5872D8);
  sub_1D2D9D8B4();
  sub_1D2CCADA4((uint64_t)v15, &qword_1ED5872D8);
  v20 = a4 + *(int *)(v18 + 36);
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  *(_QWORD *)a4 = a1;
  *(double *)(a4 + 8) = a5;
  result = sub_1D2CCCF1C(*(_QWORD *)(a4 + 16));
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  return result;
}

uint64_t type metadata accessor for VisualTranslationOverlay()
{
  uint64_t result;

  result = qword_1EFCA9120;
  if (!qword_1EFCA9120)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2D7A0BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1D2D5B000();
  result = sub_1D2D9CFFC();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D7A108@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1D2D5B000();
  result = sub_1D2D9CFFC();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D7A154()
{
  sub_1D2D5B000();
  return sub_1D2D9D008();
}

uint64_t sub_1D2D7A19C()
{
  sub_1D2D5B000();
  return sub_1D2D9D008();
}

uint64_t VisualTranslationOverlay.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v37 = a1;
  v36 = type metadata accessor for SystemWidePresentation(0);
  MEMORY[0x1E0C80A78](v36);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA7D88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VisualTranslationOverlay();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90A8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2CDB6B4(v2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  sub_1D2CD1FD4((uint64_t)v11, v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  sub_1D2D9D8D8();
  v17 = *(_QWORD *)(v2 + 64);
  v18 = *(_OWORD *)(v2 + 48);
  v38 = *(_OWORD *)(v2 + 32);
  v39 = v18;
  v40 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B8);
  sub_1D2D9D8C0();
  v35 = v41;
  v19 = v42;
  v20 = v43;
  v21 = *(_QWORD *)(v2 + 16);
  v22 = *(_QWORD *)(v2 + 24);
  sub_1D2CCAD60((uint64_t)v7, (uint64_t)v4, qword_1EFCA7D88);
  v23 = v36;
  v24 = &v4[*(int *)(v36 + 20)];
  *(_OWORD *)v24 = v35;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v20;
  v25 = (uint64_t *)&v4[*(int *)(v23 + 24)];
  *v25 = v21;
  v25[1] = v22;
  sub_1D2CDB6B4((uint64_t)v4, (uint64_t)v14 + *(int *)(v12 + 36), type metadata accessor for SystemWidePresentation);
  *v14 = sub_1D2D7A950;
  v14[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v16;
  sub_1D2CCCEF0(v21);
  swift_retain();
  sub_1D2CD3734((uint64_t)v4, type metadata accessor for SystemWidePresentation);
  sub_1D2CCADA4((uint64_t)v7, qword_1EFCA7D88);
  swift_release();
  v26 = v2 + *(int *)(v8 + 36);
  v27 = *(_QWORD *)v26;
  LOBYTE(v22) = *(_BYTE *)(v26 + 8);
  sub_1D2CF2AB8(*(_QWORD *)v26, v22);
  LOBYTE(v2) = sub_1D2D7C784(v27, v22);
  sub_1D2CF2B30(v27, v22);
  KeyPath = swift_getKeyPath();
  v29 = sub_1D2D9DA70();
  v31 = v30;
  v32 = v37;
  sub_1D2CCAD60((uint64_t)v14, v37, &qword_1EFCA90A8);
  v33 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90C0) + 36);
  *(_QWORD *)v33 = KeyPath;
  *(_BYTE *)(v33 + 8) = 0;
  *(_BYTE *)(v33 + 9) = v2 & 1;
  *(_QWORD *)(v33 + 16) = v29;
  *(_QWORD *)(v33 + 24) = v31;
  return sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA90A8);
}

uint64_t sub_1D2D7A4F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  void (*v18)(char *, uint64_t, uint64_t);
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a2;
  v39 = a3;
  v4 = type metadata accessor for VisualTranslationOverlay();
  v35 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91A8);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1D2D9CC6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - v14;
  sub_1D2D9CC54();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v15, a1, v10);
  if (v17 <= 0.0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    goto LABEL_5;
  }
  v32 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v5;
  v34 = a1;
  sub_1D2D9CC54();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  if (v20 <= 0.0)
  {
LABEL_5:
    v28 = 1;
    v27 = v39;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v27, v28, 1, v38);
  }
  *v9 = sub_1D2D9DA4C();
  v9[1] = v21;
  v31 = v9;
  v30[1] = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91B0) + 44);
  v22 = (uint64_t)v36;
  v40 = *v36;
  v23 = v32;
  v18(v32, v34, v10);
  sub_1D2CDB6B4(v22, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v24 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v25 = (v12 + *(unsigned __int8 *)(v35 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v24, v23, v10);
  sub_1D2CD1FD4((uint64_t)v6, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B0);
  sub_1D2D9C6FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91B8);
  sub_1D2CC6C74(&qword_1ED587070, &qword_1ED5877B0, MEMORY[0x1E0DEAF48]);
  sub_1D2D7E314();
  sub_1D2CC66E4(&qword_1ED586E10, type metadata accessor for VisualTranslationModel, (uint64_t)&protocol conformance descriptor for VisualTranslationModel);
  sub_1D2D9D9C8();
  v27 = v39;
  sub_1D2CD2018((uint64_t)v31, v39, &qword_1EFCA91A8);
  v28 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v27, v28, 1, v38);
}

uint64_t sub_1D2D7A818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for VisualTranslationOverlay();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16))
    swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 32);
  v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  swift_release();
  sub_1D2CF2B30(*(_QWORD *)(v3 + *(int *)(v1 + 36)), *(_BYTE *)(v3 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2D7A950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualTranslationOverlay() - 8) + 80);
  return sub_1D2D7A4F4(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

uint64_t sub_1D2D7A99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  int v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  __int128 v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  int *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unsigned int *v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  id v124;
  double v125;
  double v126;
  double v127;
  double v128;
  id v129;
  double v130;
  double v131;
  char *v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _OWORD *v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  double v148;
  double v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  __int128 v155;
  __int128 v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  CGFloat *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  int v179;
  char *v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (**v192)();
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t KeyPath;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  double v207;
  double v208;
  double v209;
  double v210;
  double v211;
  double v212;
  double v213;
  double v214;
  double v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t locked;
  uint64_t v222;
  uint64_t v223;
  double v224;
  __int128 *v225;
  uint64_t v226;
  double v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  CATransform3D v264;
  double v265[35];
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  double v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  double v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  uint64_t v286;
  double v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  double v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  double v296;
  double v297;
  double v298;
  double v299;
  double v300;
  double v301;
  double v302;
  double v303;

  v263 = a2;
  v255 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v4);
  v254 = (char *)&v194 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for VisualTranslationModel(0);
  v7 = *((_QWORD *)v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v260 = v8;
  v261 = (uint64_t)&v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VisualTranslationOverlay();
  v250 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v250 + 64);
  MEMORY[0x1E0C80A78](v9);
  v259 = (uint64_t)&v194 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2D9C7D4();
  v196 = *(_QWORD *)(v11 - 8);
  v197 = v11;
  MEMORY[0x1E0C80A78](v11);
  v195 = (char *)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D2D9C7EC();
  v256 = *(_QWORD *)(v13 - 8);
  v257 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v194 = (char *)&v194 - v17;
  v18 = sub_1D2D9CD68();
  v228 = *(_QWORD *)(v18 - 8);
  v229 = v18;
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)&v227 = (char *)&v194 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1E0C80A78](locked);
  v220 = (uint64_t)&v194 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v219 = (uint64_t)&v194 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFCA8318);
  MEMORY[0x1E0C80A78](v23);
  v262 = (uint64_t *)((char *)&v194 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8310);
  MEMORY[0x1E0C80A78](v25);
  v217 = (uint64_t *)((char *)&v194 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v218 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1E0C80A78](v218);
  v28 = (char *)&v194 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9218);
  MEMORY[0x1E0C80A78](v222);
  *(_QWORD *)&v224 = (char *)&v194 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9220);
  MEMORY[0x1E0C80A78](v223);
  v230 = (uint64_t)&v194 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9228);
  MEMORY[0x1E0C80A78](v226);
  v235 = (uint64_t)&v194 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9230);
  MEMORY[0x1E0C80A78](v231);
  v236 = (uint64_t)&v194 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9238);
  MEMORY[0x1E0C80A78](v233);
  v237 = (uint64_t)&v194 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9240);
  MEMORY[0x1E0C80A78](v232);
  v238 = (uint64_t)&v194 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9200);
  MEMORY[0x1E0C80A78](v234);
  v239 = (uint64_t)&v194 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91F0);
  MEMORY[0x1E0C80A78](v241);
  v240 = (uint64_t)&v194 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91D8);
  MEMORY[0x1E0C80A78](v242);
  v243 = (char *)&v194 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9248);
  v245 = *(_QWORD *)(v38 - 8);
  v246 = v38;
  MEMORY[0x1E0C80A78](v38);
  v258 = (char *)&v194 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91D0);
  MEMORY[0x1E0C80A78](v244);
  v249 = (char *)&v194 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA91B8);
  MEMORY[0x1E0C80A78](v247);
  v248 = (uint64_t)&v194 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1 + v6[5];
  v43 = *(double *)(v42 + 16);
  v225 = (__int128 *)(v42 + 16);
  v44 = *(double *)(v42 + 24);
  v45 = *(double *)(v42 + 32);
  v47 = *(double *)(v42 + 40);
  v46 = *(double *)(v42 + 48);
  v49 = *(double *)(v42 + 56);
  v48 = *(double *)(v42 + 64);
  v50 = *(double *)(v42 + 72);
  sub_1D2D9CC54();
  v214 = v52;
  v215 = v51;
  v216 = v6[9];
  v53 = *(unsigned __int8 *)(a1 + v216);
  v206 = v53;
  if (v53)
    v54 = v46;
  else
    v54 = v43;
  if (v53)
    v55 = v49;
  else
    v55 = v44;
  if (!v53)
    v43 = v45;
  v296 = v54;
  v297 = v55;
  if (v53)
  {
    v46 = v48;
    v49 = v50;
  }
  else
  {
    v44 = v47;
  }
  if (!v53)
    v45 = v48;
  v56 = v54;
  v298 = v43;
  v299 = v44;
  if (!v53)
    v47 = v50;
  v57 = v55;
  v300 = v46;
  v301 = v49;
  v302 = v45;
  v303 = v47;
  if ((sub_1D2D698D4() & 1) != 0)
  {
    sub_1D2D69978(v265, v215, v214);
    v56 = v265[0];
    v57 = v265[1];
    v43 = v265[2];
    v44 = v265[3];
    v46 = v265[4];
    v49 = v265[5];
    v45 = v265[6];
    v47 = v265[7];
  }
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC6E20]), sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v56, v57, v43, v44, v46, v49, v45, v47);
  objc_msgSend(v58, sel_minimumBoundingRectWithoutRotation);
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v66 = v65;

  v67 = *(double *)(v42 + 152);
  sub_1D2D9CC54();
  v287 = v67 / v68;
  v290 = 0;
  v288 = 0;
  v289 = 0;
  v291 = v67 / v68;
  v292 = 0;
  v293 = 0;
  v294 = 0;
  v295 = 0x3FF0000000000000;
  v273 = 1.0 / (v67 / v68);
  v276 = 0;
  v274 = 0;
  v275 = 0;
  v277 = v273;
  v278 = 0;
  v279 = 0;
  v280 = 0;
  v281 = 0x3FF0000000000000;
  CATransform3DMakeTranslation(&v264, v60, v62, 0.0);
  *(_OWORD *)&v264.m13 = *(_OWORD *)&v264.m14;
  v264.m21 = v264.m22;
  v264.m22 = v264.m24;
  *(_OWORD *)&v264.m23 = *(_OWORD *)&v264.m41;
  v264.m31 = v264.m44;
  sub_1D2D9D128();
  v69 = *(_OWORD *)(v42 + 128);
  v284 = *(_OWORD *)(v42 + 112);
  v285 = v69;
  v286 = *(_QWORD *)(v42 + 144);
  v70 = *(_OWORD *)(v42 + 80);
  v283 = *(_OWORD *)(v42 + 96);
  v282 = v70;
  sub_1D2D9D128();
  sub_1D2D9D128();
  v214 = v265[27];
  v215 = v265[26];
  v212 = v265[29];
  v213 = v265[28];
  v210 = v265[31];
  v211 = v265[30];
  v208 = v265[33];
  v209 = v265[32];
  v207 = v265[34];
  v71 = sub_1D2D70FEC();
  v252 = v7;
  v253 = v15;
  v251 = v10;
  if ((v71 & 1) != 0)
  {
    v72 = Array<A>.targetParagraph.getter(*(_QWORD *)(a1 + v6[7]));
    v203 = v73;
    v204 = v72;
  }
  else
  {
    v203 = 0xE000000000000000;
    v204 = 0;
  }
  v74 = v262;
  v262 = (uint64_t *)v6[7];
  v75 = Array<A>.sourceParagraph.getter(*(uint64_t *)((char *)v262 + a1));
  v201 = v76;
  v202 = v75;
  v199 = *(_QWORD *)(a1 + v6[8]);
  v77 = *(_QWORD *)(v263 + 8);
  if (*(_BYTE *)(a1 + v6[10]) == 3)
    v78 = 1;
  else
    v78 = *(_BYTE *)(a1 + v6[10]);
  KeyPath = swift_getKeyPath();
  v79 = swift_getKeyPath();
  v80 = (uint64_t)v217;
  *v217 = v79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F0);
  swift_storeEnumTagMultiPayload();
  *v74 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA82F8);
  swift_storeEnumTagMultiPayload();
  v81 = a1;
  v198 = swift_getKeyPath();
  if (qword_1EFCA54D8 != -1)
    swift_once();
  v82 = __swift_project_value_buffer(locked, (uint64_t)qword_1EFCB2668);
  v83 = v219;
  sub_1D2CDB6B4(v82, v219, type metadata accessor for TranslationOverlay.LockedMetrics);
  *(_QWORD *)v28 = v64;
  *((_QWORD *)v28 + 1) = v66;
  v84 = v203;
  *((_QWORD *)v28 + 2) = v204;
  *((_QWORD *)v28 + 3) = v84;
  v85 = v201;
  *((_QWORD *)v28 + 4) = v202;
  *((_QWORD *)v28 + 5) = v85;
  *((_QWORD *)v28 + 6) = v199;
  *((_QWORD *)v28 + 7) = v77;
  v28[64] = v206;
  v28[65] = v78;
  v86 = (int *)v218;
  sub_1D2D9D578();
  v87 = &v28[v86[12]];
  *(_QWORD *)v87 = KeyPath;
  v87[8] = 0;
  sub_1D2CD2018(v80, (uint64_t)&v28[v86[13]], &qword_1EFCA8310);
  sub_1D2CD2018((uint64_t)v74, (uint64_t)&v28[v86[14]], qword_1EFCA8318);
  v88 = &v28[v86[15]];
  *(_QWORD *)v88 = v198;
  v88[8] = 0;
  sub_1D2CDB6B4(v83, v220, type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1D2D9D8B4();
  sub_1D2CD3734(v83, type metadata accessor for TranslationOverlay.LockedMetrics);
  v89 = v86[17];
  *(_QWORD *)&v28[v89] = sub_1D2D9CAB0();
  v90 = swift_getKeyPath();
  v91 = *(uint64_t *)((char *)v262 + a1);
  if (!*(_QWORD *)(v91 + 16))
    goto LABEL_29;
  v92 = type metadata accessor for TextModel();
  v93 = *(unsigned __int8 *)(*(_QWORD *)(v92 - 8) + 80);
  v95 = v256;
  v94 = v257;
  v96 = v194;
  (*(void (**)(char *, uint64_t, uint64_t))(v256 + 16))(v194, v91 + *(int *)(v92 + 36) + ((v93 + 32) & ~v93), v257);
  v97 = v195;
  sub_1D2D9C7E0();
  v98 = sub_1D2D9C7B0();
  (*(void (**)(char *, uint64_t))(v196 + 8))(v97, v197);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v94);
  if (v98 == 2)
    v99 = (unsigned int *)MEMORY[0x1E0CD9A98];
  else
LABEL_29:
    v99 = (unsigned int *)MEMORY[0x1E0CD9A90];
  v101 = v227;
  v100 = v228;
  v102 = v229;
  (*(void (**)(double, _QWORD, uint64_t))(v228 + 104))(COERCE_DOUBLE(*(_QWORD *)&v227), *v99, v229);
  v103 = *(_QWORD *)&v224;
  v104 = (uint64_t *)(*(_QWORD *)&v224 + *(int *)(v222 + 36));
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6388);
  (*(void (**)(char *, double, uint64_t))(v100 + 16))((char *)v104 + *(int *)(v105 + 28), COERCE_DOUBLE(*(_QWORD *)&v101), v102);
  *v104 = v90;
  sub_1D2CDB6B4((uint64_t)v28, v103, type metadata accessor for TranslationOverlay);
  (*(void (**)(double, uint64_t))(v100 + 8))(COERCE_DOUBLE(*(_QWORD *)&v101), v102);
  sub_1D2CD3734((uint64_t)v28, type metadata accessor for TranslationOverlay);
  v106 = v230;
  sub_1D2CCAD60(v103, v230, &qword_1EFCA9218);
  *(_BYTE *)(v106 + *(int *)(v223 + 36)) = 0;
  sub_1D2CCADA4(v103, &qword_1EFCA9218);
  v107 = *(unsigned __int8 *)(v81 + v216);
  if ((*(_BYTE *)(v42 + 8) & 1) != 0)
  {
    v109 = *(double *)(v42 + 64);
    v108 = *(double *)(v42 + 72);
    v111 = *(double *)(v42 + 48);
    v110 = *(double *)(v42 + 56);
    v113 = *(double *)(v42 + 32);
    v112 = *(double *)(v42 + 40);
    v115 = *(double *)(v42 + 16);
    v114 = *(double *)(v42 + 24);
    if (*(_BYTE *)(v81 + v216))
      v116 = *(double *)(v42 + 48);
    else
      v116 = *(double *)(v42 + 16);
    v227 = v60;
    v228 = v64;
    if (v107)
      v117 = v110;
    else
      v117 = v114;
    if (v107)
      v118 = v115;
    else
      v118 = v113;
    v224 = v62;
    if (v107)
      v119 = v114;
    else
      v119 = v112;
    if (v107)
      v120 = v109;
    else
      v120 = v111;
    if (v107)
      v121 = v108;
    else
      v121 = v110;
    if (v107)
      v122 = v113;
    else
      v122 = v109;
    v229 = v66;
    if (v107)
      v123 = v112;
    else
      v123 = v108;
    v124 = objc_allocWithZone(MEMORY[0x1E0DC6E20]);
    v125 = v117;
    v126 = v118;
    v60 = v227;
    v64 = v228;
    v127 = v119;
    v62 = v224;
    v128 = v123;
    v66 = v229;
    v129 = objc_msgSend(v124, sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v116, v125, v126, v127, v120, v121, v122, v128);
    objc_msgSend(v129, sel_averagedAngleFromBottomAndTopEdges);
    v131 = v130;

  }
  else
  {
    v131 = *(double *)v42;
  }
  v132 = (char *)v262;
  if (v107)
    v133 = v131 + -1.57079633;
  else
    v133 = v131;
  sub_1D2D9DB00();
  v135 = v134;
  v137 = v136;
  v138 = v235;
  sub_1D2CCAD60(v106, v235, &qword_1EFCA9220);
  v139 = v138 + *(int *)(v226 + 36);
  *(double *)v139 = v133;
  *(_QWORD *)(v139 + 8) = v135;
  *(_QWORD *)(v139 + 16) = v137;
  sub_1D2CCADA4(v106, &qword_1EFCA9220);
  sub_1D2D9DA70();
  sub_1D2D9CBE8();
  v140 = v236;
  sub_1D2CCAD60(v138, v236, &qword_1EFCA9228);
  v141 = (_OWORD *)(v140 + *(int *)(v231 + 36));
  v142 = v267;
  *v141 = v266;
  v141[1] = v142;
  v141[2] = v268;
  sub_1D2CCADA4(v138, &qword_1EFCA9228);
  v143 = sub_1D2D79D9C();
  v144 = v237;
  sub_1D2CCAD60(v140, v237, &qword_1EFCA9230);
  *(_QWORD *)(v144 + *(int *)(v233 + 36)) = v143;
  sub_1D2CCADA4(v140, &qword_1EFCA9230);
  v145 = v238;
  sub_1D2CCAD60(v144, v238, &qword_1EFCA9238);
  v146 = v145 + *(int *)(v232 + 36);
  v147 = v214;
  *(double *)v146 = v215;
  *(double *)(v146 + 8) = v147;
  v148 = v212;
  *(double *)(v146 + 16) = v213;
  *(double *)(v146 + 24) = v148;
  v149 = v210;
  *(double *)(v146 + 32) = v211;
  *(double *)(v146 + 40) = v149;
  v150 = v208;
  *(double *)(v146 + 48) = v209;
  *(double *)(v146 + 56) = v150;
  *(double *)(v146 + 64) = v207;
  sub_1D2CCADA4(v144, &qword_1EFCA9238);
  v151 = v239;
  sub_1D2CCAD60(v145, v239, &qword_1EFCA9240);
  v152 = v151 + *(int *)(v234 + 52);
  v153 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v152, v81, v153);
  sub_1D2CCADA4(v145, &qword_1EFCA9240);
  v154 = (double)*(uint64_t *)(*(_QWORD *)&v132[v81] + 16);
  v155 = v225[1];
  v269 = *v225;
  v270 = v155;
  v156 = v225[3];
  v271 = v225[2];
  v272 = v156;
  v157 = sub_1D2D69818() / 10000.0 + v154;
  v158 = v240;
  sub_1D2CCAD60(v151, v240, &qword_1EFCA9200);
  *(double *)(v158 + *(int *)(v241 + 36)) = v157;
  sub_1D2CCADA4(v151, &qword_1EFCA9200);
  sub_1D2D7E4B0();
  v159 = (uint64_t)v243;
  sub_1D2D9D6D4();
  sub_1D2CCADA4(v158, &qword_1EFCA91F0);
  v160 = v259;
  sub_1D2CDB6B4(v263, v259, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v161 = v261;
  sub_1D2CDB6B4(v81, v261, type metadata accessor for VisualTranslationModel);
  v162 = *(unsigned __int8 *)(v250 + 80);
  v163 = (v162 + 16) & ~v162;
  v251 += v163;
  v164 = v81;
  v165 = (v251 + 7) & 0xFFFFFFFFFFFFFFF8;
  v166 = *(unsigned __int8 *)(v252 + 80);
  v241 = ~v166;
  v250 = v162 | v166 | 7;
  v167 = swift_allocObject();
  v252 = v163;
  sub_1D2CD1FD4(v160, v167 + v163, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v168 = (CGFloat *)(v167 + v165);
  *v168 = v60;
  v168[1] = v62;
  *((_QWORD *)v168 + 2) = v64;
  *((_QWORD *)v168 + 3) = v66;
  sub_1D2CD1FD4(v161, v167 + ((v166 + v165 + 32) & ~v166), type metadata accessor for VisualTranslationModel);
  sub_1D2D7E42C();
  sub_1D2D9D644();
  swift_release();
  sub_1D2CCADA4(v159, &qword_1EFCA91D8);
  v169 = swift_getKeyPath();
  v170 = *(uint64_t *)((char *)v262 + v164);
  v171 = *(_QWORD *)(v170 + 16);
  v205 = v164;
  if (!v171)
  {
    v176 = v256;
    v175 = v257;
    v178 = (uint64_t)v254;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v256 + 56))(v254, 1, 1, v257);
    v180 = v253;
    goto LABEL_64;
  }
  v172 = type metadata accessor for TextModel();
  v173 = *(unsigned __int8 *)(*(_QWORD *)(v172 - 8) + 80);
  v174 = v170 + *(int *)(v172 + 36) + ((v173 + 32) & ~v173);
  v176 = v256;
  v175 = v257;
  v177 = *(void (**)(char *, uint64_t, uint64_t))(v256 + 16);
  v178 = (uint64_t)v254;
  v177(v254, v174, v257);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v176 + 56))(v178, 0, 1, v175);
  v179 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v178, 1, v175);
  v180 = v253;
  if (v179 == 1)
  {
LABEL_64:
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1D2CCADA4(v178, &qword_1ED587850);
    v177 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
    goto LABEL_65;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v253, v178, v175);
LABEL_65:
  v181 = (uint64_t)v249;
  v182 = (uint64_t *)&v249[*(int *)(v244 + 36)];
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9210);
  v177((char *)v182 + *(int *)(v183 + 28), (uint64_t)v180, v175);
  *v182 = v169;
  v185 = v245;
  v184 = v246;
  v186 = v258;
  (*(void (**)(uint64_t, char *, uint64_t))(v245 + 16))(v181, v258, v246);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v180, v175);
  (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v184);
  v187 = v259;
  sub_1D2CDB6B4(v263, v259, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v188 = v261;
  sub_1D2CDB6B4(v205, v261, type metadata accessor for VisualTranslationModel);
  v189 = (v251 + v166) & v241;
  v190 = swift_allocObject();
  sub_1D2CD1FD4(v187, v190 + v252, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  sub_1D2CD1FD4(v188, v190 + v189, type metadata accessor for VisualTranslationModel);
  v191 = v248;
  sub_1D2CCAD60(v181, v248, &qword_1EFCA91D0);
  v192 = (void (**)())(v191 + *(int *)(v247 + 36));
  *v192 = sub_1D2D7E9E4;
  v192[1] = (void (*)())v190;
  v192[2] = 0;
  v192[3] = 0;
  sub_1D2CCADA4(v181, &qword_1EFCA91D0);
  return sub_1D2CD2018(v191, v255, &qword_1EFCA91B8);
}

uint64_t sub_1D2D7BC2C(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  CGRect v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  CGRect v26;
  CGRect v27;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - v16;
  v26.origin.x = a3;
  v26.origin.y = a4;
  v26.size.width = a5;
  v26.size.height = a6;
  v27 = CGRectInset(v26, -5.0, -5.0);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_OWORD *)(a1 + 48);
  v23 = *(_OWORD *)(a1 + 32);
  v24 = v19;
  v25 = v18;
  v22 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B8);
  sub_1D2D9D8CC();
  sub_1D2CDB6B4(a2, (uint64_t)v17, type metadata accessor for VisualTranslationModel);
  v20 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  type metadata accessor for VisualTranslationOverlay();
  sub_1D2CCAD60((uint64_t)v17, (uint64_t)v14, &qword_1ED5872D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  sub_1D2D9D8CC();
  return sub_1D2CCADA4((uint64_t)v17, &qword_1ED5872D8);
}

void sub_1D2D7BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _BOOL4 IsVoiceOverRunning;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t ObjCClassFromMetadata;
  id v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v53 = a1;
  v54 = (char *)a2;
  v2 = sub_1D2D9C6FC();
  v3 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  v52 = v3;
  MEMORY[0x1E0C80A78](v2);
  v50 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9250);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  v17 = type metadata accessor for VisualTranslationModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VisualTranslationOverlay();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  sub_1D2CDB6B4(v53, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  sub_1D2CDB6B4((uint64_t)v54, (uint64_t)v20, type metadata accessor for VisualTranslationModel);
  if (!IsVoiceOverRunning)
  {
    sub_1D2CD3734((uint64_t)v20, type metadata accessor for VisualTranslationModel);
    sub_1D2CD3734((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
    return;
  }
  v53 = v5;
  v54 = v13;
  v25 = v20;
  v27 = v51;
  v26 = v52;
  v28 = *(_QWORD *)v23;
  v29 = *(_QWORD *)(*(_QWORD *)v23 + 16);
  v49 = v23;
  if (v29)
  {
    v30 = v28 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v31 = v52;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    v33 = (uint64_t)v16;
    v32(v16, v30, v51);
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v34(v16, 0, 1, v27);
  }
  else
  {
    v31 = v52;
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v33 = (uint64_t)v16;
    v34(v16, 1, 1, v51);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  }
  v35 = (uint64_t)v7;
  v36 = (uint64_t)v10;
  v37 = v27;
  v38 = (uint64_t)v25;
  v39 = v53;
  v40 = (uint64_t)v54;
  v32(v54, v38, v37);
  v34((char *)v40, 0, 1, v37);
  v41 = v35 + *(int *)(v39 + 48);
  sub_1D2CCAD60(v33, v35, &qword_1EFCA71F0);
  sub_1D2CCAD60(v40, v41, &qword_1EFCA71F0);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v42(v35, 1, v37) != 1)
  {
    sub_1D2CCAD60(v35, v36, &qword_1EFCA71F0);
    if (v42(v41, 1, v37) != 1)
    {
      v43 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v50, v41, v37);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v44 = sub_1D2D9DC8C();
      v45 = *(void (**)(char *, uint64_t))(v31 + 8);
      v45(v43, v37);
      sub_1D2CCADA4(v40, &qword_1EFCA71F0);
      sub_1D2CCADA4(v33, &qword_1EFCA71F0);
      sub_1D2CD3734(v38, type metadata accessor for VisualTranslationModel);
      sub_1D2CD3734((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
      v45((char *)v36, v37);
      sub_1D2CCADA4(v35, &qword_1EFCA71F0);
      if ((v44 & 1) == 0)
        return;
      goto LABEL_13;
    }
    sub_1D2CCADA4(v40, &qword_1EFCA71F0);
    sub_1D2CCADA4(v33, &qword_1EFCA71F0);
    sub_1D2CD3734(v38, type metadata accessor for VisualTranslationModel);
    sub_1D2CD3734((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v37);
LABEL_11:
    sub_1D2CCADA4(v35, &qword_1EFCA9250);
    return;
  }
  sub_1D2CCADA4(v40, &qword_1EFCA71F0);
  sub_1D2CCADA4(v33, &qword_1EFCA71F0);
  sub_1D2CD3734(v38, type metadata accessor for VisualTranslationModel);
  sub_1D2CD3734((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  if (v42(v41, 1, v37) != 1)
    goto LABEL_11;
  sub_1D2CCADA4(v35, &qword_1EFCA71F0);
LABEL_13:
  type metadata accessor for _BundleObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v47 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D2D9C5E8();

  v48 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  UIAccessibilitySpeakAndDoNotBeInterrupted();

}

uint64_t sub_1D2D7C2F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C520(&qword_1EFCA5788, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD8E80], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1D2D7C324(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1D2D9CFF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_1D2D9E040();
    v9 = sub_1D2D9D3EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_1D2CF78E0(0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, &v15);
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v12, -1, -1);
      MEMORY[0x1D8248974](v11, -1, -1);
    }

    sub_1D2D9CFE4();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1D2D7C4EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C520(&qword_1EFCA6358, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9AA8], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_1D2D7C520@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_1D2D9CFF0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CCAD60(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_1D2D9E040();
    v21 = sub_1D2D9D3EC();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_1D2CF78E0(v28, v26, &v30);
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v24, -1, -1);
      MEMORY[0x1D8248974](v23, -1, -1);
    }

    sub_1D2D9CFE4();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1D2D7C758@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C968(&qword_1EFCA66F0, &qword_1EFCA6730, 0xD000000000000020, 0x80000001D2DA9FF0, a1);
}

uint64_t sub_1D2D7C784(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1D2D9CFF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_1D2D9E040();
  v9 = sub_1D2D9D3EC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1D2CF78E0(1819242306, 0xE400000000000000, &v15);
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v12, -1, -1);
    MEMORY[0x1D8248974](v11, -1, -1);
  }

  sub_1D2D9CFE4();
  swift_getAtKeyPath();
  sub_1D2CF2B30(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1D2D7C93C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C968(&qword_1EFCA6818, &qword_1EFCA68B0, 0xD000000000000019, 0x80000001D2DA9F50, a1);
}

uint64_t sub_1D2D7C968@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_1D2D9CFF0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2CCAD60(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1D2CD2018((uint64_t)v17, a5, a2);
  v19 = sub_1D2D9E040();
  v20 = sub_1D2D9D3EC();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_1D2CF78E0(v27, v25, &v29);
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v23, -1, -1);
    MEMORY[0x1D8248974](v22, -1, -1);
  }

  sub_1D2D9CFE4();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1D2D7CB90@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C520(&qword_1EFCA6D48, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9030], 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_1D2D7CBC4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1D2D9CFF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_1D2D9E040();
    v9 = sub_1D2D9D3EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_1D2CF78E0(0xD000000000000012, 0x80000001D2DA9FD0, &v15);
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v12, -1, -1);
      MEMORY[0x1D8248974](v11, -1, -1);
    }

    sub_1D2D9CFE4();
    swift_getAtKeyPath();
    sub_1D2CF2B30(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1D2D7CD84@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C520(&qword_1EFCA7E38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_1D2D7CDB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C520(&qword_1EFCA82F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9958], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_1D2D7CDE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2D7C968(&qword_1EFCA82F8, &qword_1EFCA8300, 0xD00000000000001ALL, 0x80000001D2DA9F30, a1);
}

uint64_t sub_1D2D7CE14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF48();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2D7CE40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2D9CF48();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2D7CE6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for VisualTranslationOverlay(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, int *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 2;
    v9 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    swift_bridgeObjectRetain();
    if (v9)
    {
      v10 = a2[3];
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    v11 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 64) = a2[8];
    v12 = *(int *)(a3 + 32);
    v13 = (char *)(a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = (int *)type metadata accessor for VisualTranslationModel(0);
    v16 = *((_QWORD *)v15 - 1);
    v17 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
    swift_retain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_1D2D9C6FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
      v20 = v15[5];
      v21 = &v13[v20];
      v22 = &v14[v20];
      v23 = *((_OWORD *)v22 + 9);
      *((_OWORD *)v21 + 8) = *((_OWORD *)v22 + 8);
      *((_OWORD *)v21 + 9) = v23;
      *((_QWORD *)v21 + 20) = *((_QWORD *)v22 + 20);
      v24 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v24;
      v25 = *((_OWORD *)v22 + 7);
      *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
      *((_OWORD *)v21 + 7) = v25;
      v26 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      v27 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v27;
      v28 = v15[6];
      v29 = &v13[v28];
      v30 = &v14[v28];
      v31 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
      *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
      v13[v15[9]] = v14[v15[9]];
      v13[v15[10]] = v14[v15[10]];
      v13[v15[11]] = v14[v15[11]];
      v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56);
      swift_bridgeObjectRetain();
      v32(v13, 0, 1, v15);
    }
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
    *(_QWORD *)&v13[*(int *)(v33 + 28)] = *(_QWORD *)&v14[*(int *)(v33 + 28)];
    v34 = *(int *)(a3 + 36);
    v35 = a1 + v34;
    v36 = (uint64_t)a2 + v34;
    v37 = *(_QWORD *)v36;
    v38 = *(_BYTE *)(v36 + 8);
    swift_retain();
    sub_1D2CF2AB8(v37, v38);
    *(_QWORD *)v35 = v37;
    *(_BYTE *)(v35 + 8) = v38;
  }
  return a1;
}

uint64_t destroy for VisualTranslationOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
    swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  swift_release();
  return sub_1D2CF2B30(*(_QWORD *)(a1 + *(int *)(a2 + 36)), *(_BYTE *)(a1 + *(int *)(a2 + 36) + 8));
}

uint64_t initializeWithCopy for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, int *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = (_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v8;
  }
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = *(int *)(a3 + 32);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for VisualTranslationModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  swift_retain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
    v19 = v14[5];
    v20 = &v12[v19];
    v21 = &v13[v19];
    v22 = *((_OWORD *)v21 + 9);
    *((_OWORD *)v20 + 8) = *((_OWORD *)v21 + 8);
    *((_OWORD *)v20 + 9) = v22;
    *((_QWORD *)v20 + 20) = *((_QWORD *)v21 + 20);
    v23 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 5) = v23;
    v24 = *((_OWORD *)v21 + 7);
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    *((_OWORD *)v20 + 7) = v24;
    v25 = *((_OWORD *)v21 + 1);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v25;
    v26 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v26;
    v27 = v14[6];
    v28 = &v12[v27];
    v29 = &v13[v27];
    v30 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
    *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
    v12[v14[9]] = v13[v14[9]];
    v12[v14[10]] = v13[v14[10]];
    v12[v14[11]] = v13[v14[11]];
    v31 = *(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56);
    swift_bridgeObjectRetain();
    v31(v12, 0, 1, v14);
  }
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  *(_QWORD *)&v12[*(int *)(v32 + 28)] = *(_QWORD *)&v13[*(int *)(v32 + 28)];
  v33 = *(int *)(a3 + 36);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  swift_retain();
  sub_1D2CF2AB8(v36, v37);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v37;
  return a1;
}

_QWORD *assignWithCopy for VisualTranslationOverlay(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a1[2];
  a1[1] = a2[1];
  v7 = a2[2];
  if (v6)
  {
    if (v7)
    {
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)type metadata accessor for VisualTranslationModel(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v45 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v11, v12, v45);
      v46 = v13[5];
      v47 = &v11[v46];
      v48 = &v12[v46];
      v49 = *(_QWORD *)v48;
      v47[8] = v48[8];
      *(_QWORD *)v47 = v49;
      *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
      *((_QWORD *)v47 + 3) = *((_QWORD *)v48 + 3);
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 5) = *((_QWORD *)v48 + 5);
      *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
      *((_QWORD *)v47 + 7) = *((_QWORD *)v48 + 7);
      *((_QWORD *)v47 + 8) = *((_QWORD *)v48 + 8);
      *((_QWORD *)v47 + 9) = *((_QWORD *)v48 + 9);
      *((_QWORD *)v47 + 10) = *((_QWORD *)v48 + 10);
      *((_QWORD *)v47 + 11) = *((_QWORD *)v48 + 11);
      *((_QWORD *)v47 + 12) = *((_QWORD *)v48 + 12);
      *((_QWORD *)v47 + 13) = *((_QWORD *)v48 + 13);
      *((_QWORD *)v47 + 14) = *((_QWORD *)v48 + 14);
      *((_QWORD *)v47 + 15) = *((_QWORD *)v48 + 15);
      *((_QWORD *)v47 + 16) = *((_QWORD *)v48 + 16);
      *((_QWORD *)v47 + 17) = *((_QWORD *)v48 + 17);
      *((_QWORD *)v47 + 18) = *((_QWORD *)v48 + 18);
      *((_QWORD *)v47 + 19) = *((_QWORD *)v48 + 19);
      *((_QWORD *)v47 + 20) = *((_QWORD *)v48 + 20);
      v50 = v13[6];
      v51 = &v11[v50];
      v52 = &v12[v50];
      v53 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
      *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      v11[v13[9]] = v12[v13[9]];
      v11[v13[10]] = v12[v13[10]];
      v11[v13[11]] = v12[v13[11]];
      goto LABEL_14;
    }
    sub_1D2CD3734((uint64_t)v11, type metadata accessor for VisualTranslationModel);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  v18 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  v19 = v13[5];
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = *((_QWORD *)v21 + 20);
  v24 = *((_OWORD *)v21 + 8);
  v23 = *((_OWORD *)v21 + 9);
  *((_OWORD *)v20 + 7) = *((_OWORD *)v21 + 7);
  *((_OWORD *)v20 + 8) = v24;
  *((_OWORD *)v20 + 9) = v23;
  *((_QWORD *)v20 + 20) = v22;
  v26 = *((_OWORD *)v21 + 5);
  v25 = *((_OWORD *)v21 + 6);
  v27 = *((_OWORD *)v21 + 4);
  *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 4) = v27;
  *((_OWORD *)v20 + 5) = v26;
  *((_OWORD *)v20 + 6) = v25;
  v29 = *((_OWORD *)v21 + 1);
  v28 = *((_OWORD *)v21 + 2);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v29;
  *((_OWORD *)v20 + 2) = v28;
  v30 = v13[6];
  v31 = &v11[v30];
  v32 = &v12[v30];
  v33 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
  v11[v13[9]] = v12[v13[9]];
  v11[v13[10]] = v12[v13[10]];
  v11[v13[11]] = v12[v13[11]];
  v34 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v14 + 56);
  swift_bridgeObjectRetain();
  v34(v11, 0, 1, v13);
LABEL_14:
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  *(_QWORD *)&v11[*(int *)(v36 + 28)] = *(_QWORD *)&v12[*(int *)(v36 + 28)];
  swift_retain();
  swift_release();
  v37 = *(int *)(a3 + 36);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  v41 = v39[8];
  sub_1D2CF2AB8(*(_QWORD *)v39, v41);
  v42 = *(_QWORD *)v38;
  v43 = v38[8];
  *(_QWORD *)v38 = v40;
  v38[8] = v41;
  sub_1D2CF2B30(v42, v43);
  return a1;
}

uint64_t initializeWithTake for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 32);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for VisualTranslationModel(0);
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1D2D9C6FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = v12[5];
    v17 = &v10[v16];
    v18 = &v11[v16];
    v19 = *((_OWORD *)v18 + 9);
    *((_OWORD *)v17 + 8) = *((_OWORD *)v18 + 8);
    *((_OWORD *)v17 + 9) = v19;
    *((_QWORD *)v17 + 20) = *((_QWORD *)v18 + 20);
    v20 = *((_OWORD *)v18 + 5);
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((_OWORD *)v17 + 5) = v20;
    v21 = *((_OWORD *)v18 + 7);
    *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
    *((_OWORD *)v17 + 7) = v21;
    v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    v23 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v23;
    v24 = v12[6];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_1D2D9C6C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *(_QWORD *)&v10[v12[7]] = *(_QWORD *)&v11[v12[7]];
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    v10[v12[9]] = v11[v12[9]];
    v10[v12[10]] = v11[v12[10]];
    v10[v12[11]] = v11[v12[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  *(_QWORD *)&v10[*(int *)(v28 + 28)] = *(_QWORD *)&v11[*(int *)(v28 + 28)];
  v29 = *(int *)(a3 + 36);
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  return a1;
}

uint64_t assignWithTake for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (v7)
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v9;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  v11 = *(int *)(a3 + 32);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = (int *)type metadata accessor for VisualTranslationModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v41 = sub_1D2D9C6FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v12, v13, v41);
      v42 = v14[5];
      v43 = &v12[v42];
      v44 = &v13[v42];
      *(_QWORD *)v43 = *(_QWORD *)v44;
      v43[8] = v44[8];
      v45 = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
      *((_OWORD *)v43 + 2) = v45;
      v46 = *((_OWORD *)v44 + 4);
      *((_OWORD *)v43 + 3) = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 4) = v46;
      v47 = *((_OWORD *)v44 + 6);
      *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
      *((_OWORD *)v43 + 6) = v47;
      v48 = *((_OWORD *)v44 + 8);
      *((_OWORD *)v43 + 7) = *((_OWORD *)v44 + 7);
      *((_OWORD *)v43 + 8) = v48;
      *((_OWORD *)v43 + 9) = *((_OWORD *)v44 + 9);
      *((_QWORD *)v43 + 20) = *((_QWORD *)v44 + 20);
      v49 = v14[6];
      v50 = &v12[v49];
      v51 = &v13[v49];
      v52 = sub_1D2D9C6C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
      *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      v12[v14[9]] = v13[v14[9]];
      v12[v14[10]] = v13[v14[10]];
      v12[v14[11]] = v13[v14[11]];
      goto LABEL_14;
    }
    sub_1D2CD3734((uint64_t)v12, type metadata accessor for VisualTranslationModel);
    goto LABEL_13;
  }
  if (v18)
  {
LABEL_13:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_14;
  }
  v19 = sub_1D2D9C6FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v12, v13, v19);
  v20 = v14[5];
  v21 = &v12[v20];
  v22 = &v13[v20];
  v23 = *((_OWORD *)v22 + 9);
  *((_OWORD *)v21 + 8) = *((_OWORD *)v22 + 8);
  *((_OWORD *)v21 + 9) = v23;
  *((_QWORD *)v21 + 20) = *((_QWORD *)v22 + 20);
  v24 = *((_OWORD *)v22 + 5);
  *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
  *((_OWORD *)v21 + 5) = v24;
  v25 = *((_OWORD *)v22 + 7);
  *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
  *((_OWORD *)v21 + 7) = v25;
  v26 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v26;
  v27 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v27;
  v28 = v14[6];
  v29 = &v12[v28];
  v30 = &v13[v28];
  v31 = sub_1D2D9C6C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  v12[v14[9]] = v13[v14[9]];
  v12[v14[10]] = v13[v14[10]];
  v12[v14[11]] = v13[v14[11]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  *(_QWORD *)&v12[*(int *)(v33 + 28)] = *(_QWORD *)&v13[*(int *)(v33 + 28)];
  swift_release();
  v34 = *(int *)(a3 + 36);
  v35 = a1 + v34;
  v36 = (uint64_t *)(a2 + v34);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  v38 = *(_QWORD *)v35;
  v39 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = (_BYTE)v36;
  sub_1D2CF2B30(v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationOverlay()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D7DD10(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VisualTranslationOverlay()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2D7DD9C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_1D2D7DE14()
{
  unint64_t v0;

  sub_1D2D7DEB4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D2D7DEB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFCA9130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5872D8);
    v0 = sub_1D2D9D8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFCA9130);
  }
}

unint64_t sub_1D2D7DF10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA9170;
  if (!qword_1EFCA9170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA90C0);
    v2[0] = sub_1D2D7DF94();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA9198, &qword_1EFCA91A0, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA9170);
  }
  return result;
}

unint64_t sub_1D2D7DF94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA9178;
  if (!qword_1EFCA9178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA90A8);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA9180, &qword_1EFCA9188, MEMORY[0x1E0CD9318]);
    v2[1] = sub_1D2CC66E4(&qword_1EFCA9190, type metadata accessor for SystemWidePresentation, (uint64_t)&unk_1D2DA4198);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA9178);
  }
  return result;
}

uint64_t sub_1D2D7E030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1D2D7E0AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8300);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2CCAD60(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EFCA8300);
  return sub_1D2D9CED0();
}

uint64_t sub_1D2D7E12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1D2D9CC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for VisualTranslationOverlay();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + ((v3 + v4 + v6) & ~v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
    swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 32);
  v9 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 24);
    v12 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  swift_release();
  sub_1D2CF2B30(*(_QWORD *)(v7 + *(int *)(v5 + 36)), *(_BYTE *)(v7 + *(int *)(v5 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1D2D7E29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_1D2D9CC6C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualTranslationOverlay() - 8) + 80);
  return sub_1D2D7A99C(a1, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

unint64_t sub_1D2D7E314()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA91C0;
  if (!qword_1EFCA91C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA91B8);
    v2[0] = sub_1D2D7E380();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA91C0);
  }
  return result;
}

unint64_t sub_1D2D7E380()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EFCA91C8;
  if (!qword_1EFCA91C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA91D0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA91D8);
    v2[3] = sub_1D2D7E42C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA9208, &qword_1EFCA9210, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA91C8);
  }
  return result;
}

unint64_t sub_1D2D7E42C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA91E0;
  if (!qword_1EFCA91E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA91D8);
    v2[0] = sub_1D2D7E4B0();
    v2[1] = sub_1D2CC66E4(&qword_1EFCA6B58, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA91E0);
  }
  return result;
}

unint64_t sub_1D2D7E4B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA91E8;
  if (!qword_1EFCA91E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA91F0);
    v2[0] = sub_1D2CC6C74(&qword_1EFCA91F8, &qword_1EFCA9200, MEMORY[0x1E0CDFB30]);
    v2[1] = sub_1D2CC6C74(&qword_1ED587060, &qword_1ED587068, MEMORY[0x1E0CDBEF0]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA91E8);
  }
  return result;
}

uint64_t sub_1D2D7E54C()
{
  return sub_1D2D9CE70();
}

uint64_t sub_1D2D7E56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D7E030(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD9958], MEMORY[0x1E0CDA620]);
}

uint64_t sub_1D2D7E590()
{
  return sub_1D2D9CEC4();
}

uint64_t sub_1D2D7E5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = type metadata accessor for VisualTranslationOverlay();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for VisualTranslationModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v3 + 16))
    swift_release();
  swift_release();
  v8 = v7 + *(int *)(v1 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v8 + *(int *)(v4 + 24);
    v11 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  swift_release();
  sub_1D2CF2B30(*(_QWORD *)(v7 + *(int *)(v1 + 36)), *(_BYTE *)(v7 + *(int *)(v1 + 36) + 8));
  v12 = v0 + ((((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 32) & ~v6);
  v13 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v12 + *(int *)(v4 + 24);
  v15 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2D7E778()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for VisualTranslationOverlay() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualTranslationModel(0) - 8) + 80);
  return sub_1D2D7BC2C(v0 + v2, v0 + ((v3 + v4 + 32) & ~v4), *(CGFloat *)(v0 + v3), *(CGFloat *)(v0 + v3 + 8), *(CGFloat *)(v0 + v3 + 16), *(CGFloat *)(v0 + v3 + 24));
}

uint64_t sub_1D2D7E7F0()
{
  return sub_1D2D9CF6C();
}

uint64_t sub_1D2D7E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D7E030(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CDA920]);
}

uint64_t sub_1D2D7E834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = type metadata accessor for VisualTranslationOverlay();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for VisualTranslationModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v3 + 16))
    swift_release();
  swift_release();
  v8 = v7 + *(int *)(v1 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v8 + *(int *)(v4 + 24);
    v11 = sub_1D2D9C6C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA90B0);
  swift_release();
  sub_1D2CF2B30(*(_QWORD *)(v7 + *(int *)(v1 + 36)), *(_BYTE *)(v7 + *(int *)(v1 + 36) + 8));
  v12 = v0 + ((v3 + v17 + v6) & ~v6);
  v13 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v12 + *(int *)(v4 + 24);
  v15 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D2D7E9E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for VisualTranslationOverlay() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualTranslationModel(0) - 8) + 80);
  sub_1D2D7BDA8(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

unint64_t sub_1D2D7EA44()
{
  unint64_t result;

  result = qword_1EFCA9258;
  if (!qword_1EFCA9258)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6D64, &_s19ScaleOffsetModifierVN);
    atomic_store(result, (unint64_t *)&qword_1EFCA9258);
  }
  return result;
}

uint64_t _s19ScaleOffsetModifierVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s19ScaleOffsetModifierVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s19ScaleOffsetModifierVMa()
{
  return &_s19ScaleOffsetModifierVN;
}

unint64_t sub_1D2D7EAE8()
{
  unint64_t result;

  result = qword_1EFCA9260;
  if (!qword_1EFCA9260)
  {
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD8210], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EFCA9260);
  }
  return result;
}

unint64_t sub_1D2D7EB30()
{
  unint64_t result;

  result = qword_1EFCA9268;
  if (!qword_1EFCA9268)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6CD4, &_s19ScaleOffsetModifierVN);
    atomic_store(result, (unint64_t *)&qword_1EFCA9268);
  }
  return result;
}

unint64_t sub_1D2D7EB78()
{
  unint64_t result;

  result = qword_1EFCA9270;
  if (!qword_1EFCA9270)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6D24, &_s19ScaleOffsetModifierVN);
    atomic_store(result, (unint64_t *)&qword_1EFCA9270);
  }
  return result;
}

uint64_t static VisualTranslationService.isOCRLocale(_:)()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D2D9C744();
  v2 = objc_msgSend(v1, sel_languageIdentifier);

  sub_1D2D9DCD4();
  v3 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_baseLanguageFromLanguage_, v3);

  v5 = sub_1D2D9DCD4();
  v7 = v6;

  if (qword_1ED587110 != -1)
    swift_once();
  v8 = qword_1ED5886C0;
  swift_bridgeObjectRetain();
  v9 = sub_1D2D26E94(v5, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D2D7ECD8()
{
  uint64_t result;

  result = sub_1D2D7ECF4();
  qword_1ED5886C0 = result;
  return result;
}

uint64_t sub_1D2D7ECF4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;

  sub_1D2CC63E8(0, &qword_1ED587340);
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedRecognitionLanguages);
  v1 = sub_1D2D9DE60();

  v13 = MEMORY[0x1E0DEE9E8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1D2D9DCB0();
      v6 = objc_msgSend(v3, sel_baseLanguageFromLanguage_, v5);

      v7 = sub_1D2D9DCD4();
      v9 = v8;

      v10 = v7 == 29281 && v9 == 0xE200000000000000;
      if (v10 || (sub_1D2D9E52C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1D2D94D74(&v12, v7, v9);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t static VisualTranslationService.isTranslatable(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA9280 + dword_1EFCA9280);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2D7EF10;
  return v5(a1);
}

uint64_t sub_1D2D7EF10(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t static VisualTranslationService.isTranslatable(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D06D10((uint64_t)v9, (uint64_t)&unk_1EFCA9290, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1D2D7F04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v6[6] = swift_task_alloc();
  v6[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D7F0BC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  void *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t (*v20)(uint64_t);

  v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D2D9E3AC();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = v0[6];
    v3 = v0[7];
    v4 = v0[3];
    v5 = sub_1D2D9C7EC();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    v6(v2, 1, 1, v5);
    v7 = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(v4, 1, v3, v2);
    v0[8] = v7;
    sub_1D2CCADA4(v2, &qword_1ED587850);
    sub_1D2CCADA4(v3, &qword_1ED587850);
    v20 = (uint64_t (*)(uint64_t))((char *)&dword_1EFCA9280 + dword_1EFCA9280);
    v8 = (_QWORD *)swift_task_alloc();
    v0[9] = v8;
    *v8 = v0;
    v8[1] = sub_1D2D7F3DC;
    return v20((uint64_t)v7);
  }
  if (qword_1ED587858 != -1)
    swift_once();
  v11 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED5886E8);
  v12 = sub_1D2D9C8DC();
  v13 = sub_1D2D9E034();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    sub_1D2D838D0();
    v16 = (void *)swift_allocError();
    *v17 = 0;
    v18 = sub_1D2D9C5F4();

    v0[2] = v18;
    sub_1D2D9E1B4();
    *v15 = v18;
    _os_log_impl(&dword_1D2CC0000, v12, v13, "Visual isTranslatable: NO; reason: observation failure: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v15, -1, -1);
    MEMORY[0x1D8248974](v14, -1, -1);
  }

  sub_1D2D838D0();
  v0[13] = swift_allocError();
  *v19 = 0;
  sub_1D2D9DEFC();
  v0[14] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D7F3DC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_BYTE *)(v4 + 120) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1D2D7F45C()
{
  uint64_t v0;

  sub_1D2D9DEFC();
  *(_QWORD *)(v0 + 88) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D7F4C4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(unsigned __int8 *)(v0 + 120);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 32);
  swift_release();
  v2(v1, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D7F520()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  sub_1D2D9DEFC();
  v2 = v1;
  *(_QWORD *)(v0 + 96) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D7F594()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);

  v1 = *(void **)(v0 + 80);
  v2 = *(void (**)(_QWORD, void *))(v0 + 32);
  swift_release();
  v2(0, v1);

  return swift_task_switch();
}

uint64_t sub_1D2D7F5F4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D7F634()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);

  v1 = *(void **)(v0 + 104);
  v2 = *(void (**)(_QWORD, void *))(v0 + 32);
  swift_release();
  v2(0, v1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D7F738(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v24;
  int v25;
  int v26;

  v24 = a3;
  v25 = a5 & 1;
  v26 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = v17 + v11;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  v20 = v24;
  *((_QWORD *)v19 + 4) = a2;
  *((_QWORD *)v19 + 5) = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17], v12, v9);
  v21 = &v19[v18];
  *v21 = v26;
  v21[1] = v25;
  *(_QWORD *)&v19[(v18 + 9) & 0xFFFFFFFFFFFFFFF8] = a6;
  swift_bridgeObjectRetain();
  v22 = a6;
  sub_1D2D0A90C((uint64_t)v15, (uint64_t)&unk_1EFCA92B8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1D2D7F8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *(_QWORD *)(v8 + 152) = a6;
  *(_QWORD *)(v8 + 160) = v17;
  *(_BYTE *)(v8 + 417) = a8;
  *(_BYTE *)(v8 + 416) = a7;
  *(_QWORD *)(v8 + 144) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  v9 = type metadata accessor for TextModel();
  *(_QWORD *)(v8 + 176) = v9;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587040);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  v10 = sub_1D2D9C6FC();
  *(_QWORD *)(v8 + 208) = v10;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587088);
  *(_QWORD *)(v8 + 232) = v11;
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587080);
  *(_QWORD *)(v8 + 256) = v12;
  *(_QWORD *)(v8 + 264) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587090);
  *(_QWORD *)(v8 + 280) = v13;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  type metadata accessor for Signpost();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  *(_QWORD *)(v8 + 312) = swift_task_alloc();
  v14 = sub_1D2D9C7EC();
  *(_QWORD *)(v8 + 320) = v14;
  *(_QWORD *)(v8 + 328) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  v15 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v8 + 344) = v15;
  *(_QWORD *)(v8 + 352) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 360) = swift_task_alloc();
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  *(_QWORD *)(v8 + 376) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D7FADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  int v49;
  unsigned __int8 v50;
  size_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  _QWORD *v56;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  void *v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t (*v74)(void);
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  void *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96[9];

  v2 = v0 + 144;
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
  {
LABEL_13:
    *(_QWORD *)(v0 + 40) = &type metadata for TranslateFeatures;
    *(_QWORD *)(v0 + 48) = sub_1D2CE68A0();
    *(_BYTE *)(v0 + 16) = 0;
    v31 = sub_1D2D9C834();
    __swift_destroy_boxed_opaque_existential_0(v2 - 128);
    if ((v31 & 1) != 0)
    {
      if (v3)
      {
        v32 = *(_QWORD *)(v0 + 352);
        v33 = *(_QWORD *)(v0 + 144);
        sub_1D2D3A46C(0, *(_QWORD *)(v0 + 304));
        type metadata accessor for VisualTranslationBatch();
        inited = swift_initStackObject();
        *(_QWORD *)(v0 + 384) = inited;
        swift_bridgeObjectRetain();
        v35 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(inited + 16) = sub_1D2CCF818(MEMORY[0x1E0DEE9D8]);
        *(_QWORD *)(inited + 24) = sub_1D2CCF9D0(v35);
        v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        v37 = v33 + v36;
        v38 = *(_QWORD *)(v32 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1D2D673C8(v37, inited);
          v37 += v38;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease_n();
        v39 = sub_1D2D67968();
        v40 = *(_QWORD *)(v39 + 16);
        if (v40)
        {
          v41 = *(_QWORD *)(v95 + 288);
          v42 = v39 + v36;
          do
          {
            v43 = *(_QWORD *)(v95 + 296);
            v44 = *(_QWORD *)(v95 + 280);
            sub_1D2D83448(v42, *(_QWORD *)(v95 + 368));
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
            sub_1D2D9DF74();
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v44);
            v42 += v38;
            --v40;
          }
          while (v40);
        }
        swift_bridgeObjectRelease();
        v45 = *(_QWORD *)(v95 + 248);
        v94 = *(_QWORD *)(v95 + 240);
        v47 = *(_QWORD *)(v95 + 224);
        v46 = *(_QWORD *)(v95 + 232);
        v89 = *(_QWORD *)(v95 + 216);
        v91 = *(_QWORD *)(v95 + 208);
        v48 = *(void **)(v95 + 160);
        v49 = *(unsigned __int8 *)(v95 + 416);
        v50 = *(_BYTE *)(v95 + 417) & 1;
        v51 = sub_1D2D67CE4();
        *(_QWORD *)(v95 + 392) = v51;
        v52 = objc_msgSend(v48, sel_logIdentifier);
        sub_1D2D9C6E4();

        v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CE9990]), sel_init);
        v54 = (void *)sub_1D2D9C6CC();
        v55 = objc_msgSend(v53, sel_startTranslationSessionWithSELFLoggingInvocationId_, v54);

        v96[0] = v50;
        sub_1D2D4E54C(v51, v49, (uint64_t)v55, v96, v45);

        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v47, v91);
        sub_1D2D9DF38();
        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v45, v46);
        *(_QWORD *)(v95 + 400) = MEMORY[0x1E0DEE9D8];
        v56 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v95 + 408) = v56;
        *v56 = v95;
        v56[1] = sub_1D2D80630;
        return sub_1D2D9DF44();
      }
      if (qword_1ED587858 != -1)
        swift_once();
      v65 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v65, (uint64_t)qword_1ED5886E8);
      v66 = sub_1D2D9C8DC();
      v67 = sub_1D2D9E034();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v68 = 138412290;
        sub_1D2D47830();
        v70 = (void *)swift_allocError();
        *v71 = 0;
        v72 = sub_1D2D9C5F4();

        *(_QWORD *)(v95 + 120) = v72;
        sub_1D2D9E1B4();
        *v69 = v72;
        _os_log_impl(&dword_1D2CC0000, v66, v67, "Failed to translate because models are empty: %@", v68, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v69, -1, -1);
        MEMORY[0x1D8248974](v68, -1, -1);
      }

      sub_1D2D47830();
      swift_allocError();
      *v73 = 0;
    }
    else
    {
      if (qword_1ED587858 != -1)
        swift_once();
      v58 = sub_1D2D9C8F4();
      __swift_project_value_buffer(v58, (uint64_t)qword_1ED5886E8);
      v59 = sub_1D2D9C8DC();
      v60 = sub_1D2D9E034();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v61 = 138412290;
        sub_1D2D8388C();
        v63 = (void *)swift_allocError();
        v64 = sub_1D2D9C5F4();

        *(_QWORD *)(v95 + 88) = v64;
        sub_1D2D9E1B4();
        *v62 = v64;
        _os_log_impl(&dword_1D2CC0000, v59, v60, "Failed to translate because visual translation is disabled: %@", v61, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v62, -1, -1);
        MEMORY[0x1D8248974](v61, -1, -1);
      }

      sub_1D2D8388C();
      swift_allocError();
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v74 = *(uint64_t (**)(void))(v95 + 8);
    return v74();
  }
  v87 = v0 + 144;
  v85 = (uint64_t *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  v86 = v3;
  v11 = v3;
  v12 = v10;
  v92 = v7;
  v93 = v5;
  v88 = v10;
  v90 = v8;
  while (1)
  {
    v14 = *(_QWORD *)(v0 + 376);
    sub_1D2D83448(v9, v14);
    v15 = *(_QWORD *)(v14 + *(int *)(v5 + 28));
    v17 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 320);
    if (*(_QWORD *)(v15 + 16))
      break;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v6 + 56))(*(_QWORD *)(v0 + 312), 1, 1, *(_QWORD *)(v0 + 320));
LABEL_4:
    v13 = *(_QWORD *)(v0 + 376);
    sub_1D2CCADA4(*(_QWORD *)(v0 + 312), &qword_1ED587850);
    sub_1D2CD3734(v13, type metadata accessor for VisualTranslationModel);
LABEL_5:
    v9 += v12;
    if (!--v11)
    {
      v2 = v87;
      swift_bridgeObjectRelease();
      v3 = v86;
      goto LABEL_13;
    }
  }
  sub_1D2CF811C(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(int *)(v8 + 28), *(_QWORD *)(v0 + 312));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v17, 1, v16) == 1)
    goto LABEL_4;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 32))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1D2D9C744();
  v20 = objc_msgSend(v19, sel_languageIdentifier);

  sub_1D2D9DCD4();
  v21 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v18, sel_baseLanguageFromLanguage_, v21);

  v23 = sub_1D2D9DCD4();
  v25 = v24;

  if (qword_1ED587110 != -1)
    swift_once();
  v26 = *(_QWORD *)(v0 + 376);
  v27 = *(_QWORD *)(v0 + 336);
  v28 = *(_QWORD *)(v95 + 320);
  v29 = qword_1ED5886C0;
  swift_bridgeObjectRetain();
  v30 = sub_1D2D26E94(v23, v25, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = v95;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v27, v28);
  sub_1D2CD3734(v26, type metadata accessor for VisualTranslationModel);
  v7 = v92;
  v5 = v93;
  v12 = v88;
  v8 = v90;
  if ((v30 & 1) != 0)
    goto LABEL_5;
  swift_bridgeObjectRelease();
  if (qword_1ED587858 != -1)
    swift_once();
  v75 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v75, (uint64_t)qword_1ED5886E8);
  v76 = sub_1D2D9C8DC();
  v77 = sub_1D2D9E034();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    v79 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v78 = 138412290;
    sub_1D2D838D0();
    v80 = (void *)swift_allocError();
    *v81 = 1;
    v82 = sub_1D2D9C5F4();

    *v85 = v82;
    sub_1D2D9E1B4();
    *v79 = v82;
    _os_log_impl(&dword_1D2CC0000, v76, v77, "Failed to translate because OCR for source locale is unsupported: %@", v78, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v79, -1, -1);
    MEMORY[0x1D8248974](v78, -1, -1);
  }

  sub_1D2D838D0();
  v83 = swift_allocError();
  *v84 = 1;
  *(_QWORD *)(v95 + 128) = v83;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  sub_1D2D9DF80();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v74 = *(uint64_t (**)(void))(v95 + 8);
  return v74();
}

uint64_t sub_1D2D80630()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D80684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  id v36;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 400);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
    sub_1D2D3A96C();
    if (*(_QWORD *)(v3 + 16))
    {
      v4 = *(void **)(*(_QWORD *)(v0 + 400) + 32);
      v5 = *(_QWORD *)(*(_QWORD *)(v0 + 392) + 16);
      v6 = v4;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRelease();
      if (v5 == v7)
      {
        if (qword_1ED587858 != -1)
          swift_once();
        v8 = sub_1D2D9C8F4();
        __swift_project_value_buffer(v8, (uint64_t)qword_1ED5886E8);
        v9 = v4;
        v10 = sub_1D2D9C8DC();
        v11 = sub_1D2D9E034();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v12 = 138412290;
          v14 = sub_1D2D9C5F4();
          *(_QWORD *)(v0 + 112) = v14;
          sub_1D2D9E1B4();
          *v13 = v14;

          _os_log_impl(&dword_1D2CC0000, v10, v11, "Failed to translate: %@", v12, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
          swift_arrayDestroy();
          MEMORY[0x1D8248974](v13, -1, -1);
          MEMORY[0x1D8248974](v12, -1, -1);
        }
        else
        {

        }
        v35 = *(_QWORD *)(v0 + 304);

        *(_QWORD *)(v0 + 104) = v4;
        v36 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
        sub_1D2D9DF80();
        swift_release();

        goto LABEL_23;
      }

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v35 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 96) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
    swift_release();
LABEL_23:
    sub_1D2CD3734(v35, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(_QWORD *)(v0 + 192);
  sub_1D2CD1FD4(v1, v15, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  v16 = *(void **)(v15 + *(int *)(v2 + 44));
  v17 = *(_QWORD **)(v0 + 400);
  if (v16)
  {
    v18 = v16;
    v19 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *(_QWORD **)(v0 + 400);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_1D2D4AE68(0, v17[2] + 1, 1, *(_QWORD **)(v0 + 400));
    v22 = v17[2];
    v21 = v17[3];
    if (v22 >= v21 >> 1)
      v17 = sub_1D2D4AE68((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
    v17[2] = v22 + 1;
    v17[v22 + 4] = v16;

  }
  v23 = *(_QWORD *)(v0 + 344);
  v24 = *(_QWORD *)(v0 + 352);
  v25 = *(_QWORD *)(v0 + 168);
  sub_1D2D67E40(*(_QWORD *)(v0 + 192), v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
  {
    v26 = *(_QWORD *)(v0 + 168);
    sub_1D2CD3734(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CCADA4(v26, &qword_1ED5872D8);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 368);
    v30 = *(_QWORD *)(v0 + 288);
    v29 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 192);
    sub_1D2CD1FD4(*(_QWORD *)(v0 + 168), v27, type metadata accessor for VisualTranslationModel);
    sub_1D2D83448(v27, v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF74();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_1D2CD3734(v27, type metadata accessor for VisualTranslationModel);
    sub_1D2CD3734(v32, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
  }
  *(_QWORD *)(v0 + 400) = v17;
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v33;
  *v33 = v0;
  v33[1] = sub_1D2D80630;
  return sub_1D2D9DF44();
}

uint64_t static VisualTranslationService.translate(models:strictLocales:taskHint:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  char v14;

  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a3;
  sub_1D2D9C6F0();
  static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(a1, a2, &v14, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v17[6];
  char v18;
  char v19;
  id v20;

  v5 = v4;
  v17[1] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587098);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a3;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CE9990]), sel_init);
  v15 = (void *)sub_1D2D9C6CC();
  v16 = objc_msgSend(v14, sel_startTranslationSessionWithSELFLoggingInvocationId_, v15);

  v17[4] = a1;
  v17[5] = v5;
  v18 = a2;
  v19 = v13;
  v20 = v16;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DF0A50], v9);
  sub_1D2D9DFA4();

}

uint64_t static VisualTranslationService.translate(_:strictLocales:taskHint:)(uint64_t a1, char a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v4 + 176) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  *(_QWORD *)(v4 + 32) = swift_task_alloc();
  v6 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B0);
  *(_QWORD *)(v4 + 72) = v7;
  *(_QWORD *)(v4 + 80) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B8);
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 112) = swift_task_alloc();
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  *(_BYTE *)(v4 + 177) = *a3;
  return swift_task_switch();
}

uint64_t sub_1D2D80EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  char v9;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_BYTE *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 16);
  v9 = *(_BYTE *)(v0 + 177);
  static VisualTranslationService.translate(models:strictLocales:taskHint:)(v6, v5, &v9, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_1D2CC6C74(&qword_1ED5870C0, &qword_1ED5870B8, MEMORY[0x1E0DF0AE0]);
  sub_1D2D9DF68();
  *(_QWORD *)(v0 + 128) = sub_1D2CC6C74(&qword_1ED5870A8, &qword_1ED5870B0, MEMORY[0x1E0DF0AC0]);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v7;
  *v7 = v0;
  v7[1] = sub_1D2D80FC4;
  return sub_1D2D9DEE4();
}

uint64_t sub_1D2D80FC4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[19] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[18] = MEMORY[0x1E0DEE9D8];
  }
  return swift_task_switch();
}

uint64_t sub_1D2D81060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 48))(v1, 1, *(_QWORD *)(v0 + 40)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    sub_1D2CCADA4(v1, &qword_1ED5872D8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 64);
    sub_1D2CD1FD4(v1, v6, type metadata accessor for VisualTranslationModel);
    sub_1D2D83448(v6, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *(_QWORD *)(v0 + 144);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v9 = sub_1D2D4AE54(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    v11 = *(_QWORD *)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    if (v11 >= v10 >> 1)
      v9 = sub_1D2D4AE54(v10 > 1, v11 + 1, 1, v9);
    *(_QWORD *)(v0 + 160) = v9;
    v12 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v9 + 16) = v11 + 1;
    sub_1D2CD1FD4(v12, v9+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v11, type metadata accessor for VisualTranslationModel);
    sub_1D2CD3734(v13, type metadata accessor for VisualTranslationModel);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v15;
    *v15 = v0;
    v15[1] = sub_1D2D812DC;
    return sub_1D2D9DEE4();
  }
}

uint64_t sub_1D2D81250()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D812DC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[19] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[18] = v2[20];
  }
  return swift_task_switch();
}

uint64_t static VisualTranslationService.translate(_:sourceLocale:targetLocale:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v27[2];

  v27[0] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  sub_1D2CF811C(a2, (uint64_t)v15);
  sub_1D2CF811C(a3, (uint64_t)v12);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (v11 + v20 + v21) & ~v20;
  v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = a1;
  sub_1D2D83590((uint64_t)v15, (uint64_t)v24 + v21);
  sub_1D2D83590((uint64_t)v12, (uint64_t)v24 + v22);
  v25 = (_QWORD *)((char *)v24 + v23);
  *v25 = v27[0];
  v25[1] = a5;
  *(_QWORD *)((char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v27[1];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D2D06D10((uint64_t)v18, (uint64_t)&unk_1EFCA92A8, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_1D2D81528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[8] = a8;
  v8[9] = v12;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v9 = sub_1D2D9C6FC();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v10 = type metadata accessor for VisualTranslationModel(0);
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D815CC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(*(_QWORD *)(v0 + 32), 1, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 136) = v1;
  *(_BYTE *)(v0 + 192) = 1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_1D2D8164C;
  return static VisualTranslationService.translate(_:strictLocales:taskHint:)((uint64_t)v1, 0, (_BYTE *)(v0 + 192));
}

uint64_t sub_1D2D8164C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D816C0()
{
  objc_super *v0;
  Class super_class;
  uint64_t v2;
  _QWORD *receiver;
  Class v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void (*v15)(uint64_t, uint64_t, id);
  objc_class *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  _OWORD *v23;
  id v24;
  int isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t result;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  id v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  Class v40;
  objc_class *v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t i;
  unint64_t v46;
  char v47;
  id v48;
  uint64_t v49;
  Class v50;
  Class v51;
  uint64_t (*v52)(unint64_t, id, id);
  uint64_t v53;
  objc_class *v54;

  super_class = v0[9].super_class;
  v2 = *((_QWORD *)super_class + 2);
  if (v2)
  {
    receiver = v0[7].receiver;
    v51 = v0[6].super_class;
    v4 = v0[5].super_class;
    v5 = (uint64_t)super_class
       + ((*((unsigned __int8 *)receiver + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)receiver + 80));
    v49 = receiver[9];
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v50 = v4;
    while (1)
    {
      v53 = v2;
      v11 = (uint64_t)v0[7].super_class;
      v12 = (uint64_t)v0[8].receiver;
      v13 = (uint64_t)v0[6].receiver;
      v14 = v0[5].receiver;
      sub_1D2D83448(v5, v12);
      v15 = (void (*)(uint64_t, uint64_t, id))*((_QWORD *)v4 + 2);
      v15(v13, v12, v14);
      sub_1D2D83448(v12, v11);
      v16 = (objc_class *)type metadata accessor for VisualTranslationResult(0);
      v17 = (char *)objc_allocWithZone(v16);
      v52 = (uint64_t (*)(unint64_t, id, id))v15;
      v15((uint64_t)&v17[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid], v11, v14);
      v18 = *(_QWORD *)(v11 + *((int *)v51 + 7));
      v19 = v17;
      v20 = Array<A>.targetParagraph.getter(v18);
      v21 = (uint64_t *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
      *v21 = v20;
      v21[1] = v22;
      v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1D2D7175C() & 1;
      v23 = (_OWORD *)(v11 + *((int *)v51 + 5));
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v23[1];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v23[2];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v23[3];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v23[4];

      v0[1].receiver = v19;
      v0[1].super_class = v16;
      v24 = objc_msgSendSuper2(v0 + 1, sel_init);
      sub_1D2CD3734(v11, type metadata accessor for VisualTranslationModel);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v27 = sub_1D2D65098(v13);
      v28 = v6[2];
      v29 = (v26 & 1) == 0;
      result = v28 + v29;
      if (__OFADD__(v28, v29))
        break;
      v31 = v26;
      if (v6[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1D2CD98BC();
      }
      else
      {
        v32 = (uint64_t)v0[6].receiver;
        sub_1D2CD8770(result, isUniquelyReferenced_nonNull_native);
        v33 = sub_1D2D65098(v32);
        if ((v31 & 1) != (v34 & 1))
          return sub_1D2D9E568();
        v27 = v33;
      }
      v4 = v50;
      if ((v31 & 1) != 0)
      {
        v7 = v6[7];

        *(_QWORD *)(v7 + 8 * v27) = v24;
      }
      else
      {
        v35 = v0[6].receiver;
        v36 = v0[5].receiver;
        v6[(v27 >> 6) + 8] |= 1 << v27;
        result = v52(v6[6] + *((_QWORD *)v50 + 9) * v27, v35, v36);
        *(_QWORD *)(v6[7] + 8 * v27) = v24;
        v37 = v6[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_28;
        v6[2] = v39;
      }
      v8 = (uint64_t)v0[8].receiver;
      v9 = v0[6].receiver;
      v10 = v0[5].receiver;
      swift_bridgeObjectRelease();
      (*((void (**)(id, id))v50 + 1))(v9, v10);
      sub_1D2CD3734(v8, type metadata accessor for VisualTranslationModel);
      v5 += v49;
      v2 = v53 - 1;
      if (v53 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_16:
    v40 = v0[8].super_class;
    swift_bridgeObjectRelease();
    v41 = (objc_class *)MEMORY[0x1E0DEE9D8];
    v54 = (objc_class *)MEMORY[0x1E0DEE9D8];
    v42 = *((_QWORD *)v40 + 2);
    if (v42)
    {
      v43 = v0[7].receiver;
      v44 = (unint64_t)v0[8].super_class
          + ((*((unsigned __int8 *)v43 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v43 + 80));
      swift_bridgeObjectRetain();
      for (i = 0; i != v42; ++i)
      {
        if (v6[2])
        {
          v46 = sub_1D2D65098(v44 + v43[9] * i);
          if ((v47 & 1) != 0)
          {
            v48 = *(id *)(v6[7] + 8 * v46);
            MEMORY[0x1D8247990]();
            if (*(_QWORD *)(((unint64_t)v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v54 & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_1D2D9DE84();
            sub_1D2D9DE9C();
            sub_1D2D9DE78();

          }
        }
      }
      swift_bridgeObjectRelease();
      v41 = v54;
    }
    v0[10].super_class = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2D9DEFC();
    v0[11].receiver = (id)sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_1D2D81B5C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 56);
  swift_release();
  v2(v1, 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D81BC8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 160);
  sub_1D2D9DEFC();
  v2 = v1;
  *(_QWORD *)(v0 + 184) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D81C3C()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);

  v1 = *(void **)(v0 + 160);
  v2 = *(void (**)(_QWORD, void *))(v0 + 56);
  swift_release();
  v2(MEMORY[0x1E0DEE9D8], v1);

  return swift_task_switch();
}

uint64_t sub_1D2D81CA0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D2D81ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  type metadata accessor for VisualTranslationResult(0);
  v5 = (void *)sub_1D2D9DE48();
  if (a2)
    v6 = sub_1D2D9C5F4();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

id VisualTranslationService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id VisualTranslationService.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id VisualTranslationService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2D82020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_1D2D9C96C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2D8205C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[28] = a1;
  v1[29] = type metadata accessor for LocalePair();
  v1[30] = swift_task_alloc();
  v2 = type metadata accessor for VisualTranslationModel(0);
  v1[31] = v2;
  v1[32] = *(_QWORD *)(v2 - 8);
  v1[33] = swift_task_alloc();
  type metadata accessor for Signpost();
  v1[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v1[35] = swift_task_alloc();
  v3 = sub_1D2D9C7EC();
  v1[36] = v3;
  v1[37] = *(_QWORD *)(v3 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D82180()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  void *v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  *(_QWORD *)(v0 + 40) = &type metadata for TranslateFeatures;
  v1 = sub_1D2CE68A0();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1D2D9C834();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
  {
    if (qword_1ED587858 != -1)
      swift_once();
    v17 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED5886E8);
    v18 = sub_1D2D9C8DC();
    v19 = sub_1D2D9E034();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138412290;
      sub_1D2D8388C();
      v22 = (void *)swift_allocError();
      v23 = sub_1D2D9C5F4();

      *(_QWORD *)(v0 + 160) = v23;
      sub_1D2D9E1B4();
      *v21 = v23;
      _os_log_impl(&dword_1D2CC0000, v18, v19, "Visual isTranslatable: NO; reason: visualTranslation is disabled: %@",
        v20,
        0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v21, -1, -1);
      MEMORY[0x1D8248974](v20, -1, -1);
    }

    sub_1D2D8388C();
    swift_allocError();
    goto LABEL_19;
  }
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 344) = v4;
  if (!v4)
  {
    if (qword_1ED587858 != -1)
      swift_once();
    v24 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED5886E8);
    v25 = sub_1D2D9C8DC();
    v26 = sub_1D2D9E034();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412290;
      sub_1D2D47830();
      v29 = (void *)swift_allocError();
      *v30 = 0;
      v31 = sub_1D2D9C5F4();

      *(_QWORD *)(v0 + 176) = v31;
      sub_1D2D9E1B4();
      *v28 = v31;
      _os_log_impl(&dword_1D2CC0000, v25, v26, "Visual isTranslatable: NO; reason: the request was empty: %@",
        v27,
        0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v28, -1, -1);
      MEMORY[0x1D8248974](v27, -1, -1);
    }

    sub_1D2D47830();
    swift_allocError();
    *v32 = 0;
    goto LABEL_19;
  }
  v6 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 296);
  v7 = *(char **)(v0 + 280);
  sub_1D2D7736C(v3, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
  {
    sub_1D2CCADA4(*(_QWORD *)(v0 + 280), &qword_1ED587850);
    if (qword_1ED587858 != -1)
      swift_once();
    v8 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED5886E8);
    v9 = sub_1D2D9C8DC();
    v10 = sub_1D2D9E034();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      sub_1D2D47830();
      v13 = (void *)swift_allocError();
      *v14 = 7;
      v15 = sub_1D2D9C5F4();

      *(_QWORD *)(v0 + 168) = v15;
      sub_1D2D9E1B4();
      *v12 = v15;
      _os_log_impl(&dword_1D2CC0000, v9, v10, "Visual isTranslatable: NO; there's no targetLocale set: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v12, -1, -1);
      MEMORY[0x1D8248974](v11, -1, -1);
    }

    sub_1D2D47830();
    swift_allocError();
    *v16 = 7;
LABEL_19:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v34 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 256);
  v37 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  sub_1D2D3A46C(0, v34);
  v44 = MEMORY[0x1E0DEE9D8];
  v38 = v37 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  v39 = *(_QWORD *)(v35 + 72);
  swift_bridgeObjectRetain();
  do
  {
    v40 = *(_QWORD *)(v0 + 264);
    sub_1D2D83448(v38, v40);
    v41 = *(_QWORD *)(v40 + *(int *)(v36 + 28));
    swift_bridgeObjectRetain();
    sub_1D2CD3734(v40, type metadata accessor for VisualTranslationModel);
    sub_1D2D04EB4(v41);
    v38 += v39;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 352) = v44;
  v42 = swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v42;
  *(_QWORD *)(v42 + 16) = v44;
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v43;
  *v43 = v0;
  v43[1] = sub_1D2D8286C;
  return sub_1D2D9E544();
}

uint64_t sub_1D2D8286C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D828E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79[2];

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_1D2D9C744();
  v3 = objc_msgSend(v2, sel_languageIdentifier);

  sub_1D2D9DCD4();
  v4 = (void *)sub_1D2D9DCB0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v1, sel_baseLanguageFromLanguage_, v4);

  v6 = sub_1D2D9DCD4();
  v8 = v7;

  if (qword_1ED587110 != -1)
    swift_once();
  v9 = qword_1ED5886C0;
  swift_bridgeObjectRetain();
  v10 = sub_1D2D26E94(v6, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 336);
    v12 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 240);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 296) + 16);
    v15(v13, *(_QWORD *)(v0 + 328), v12);
    v15(v13 + *(int *)(v14 + 20), v11, v12);
    v77 = _s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(v13) ^ 1;
    if (qword_1ED587858 != -1)
      swift_once();
    v17 = *(_QWORD *)(v0 + 328);
    v16 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 288);
    v21 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED5886E8);
    v15(v18, v17, v20);
    v15(v19, v16, v20);
    swift_bridgeObjectRetain();
    v22 = sub_1D2D9C8DC();
    v23 = sub_1D2D9E01C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = *(_QWORD *)(v0 + 344);
      v25 = *(_QWORD *)(v0 + 320);
      v74 = *(_QWORD *)(v0 + 328);
      v72 = v23;
      v69 = *(_QWORD *)(v0 + 296);
      v70 = *(_QWORD *)(v0 + 312);
      v75 = *(_QWORD *)(v0 + 288);
      v73 = *(_QWORD *)(v0 + 240);
      v26 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v79[0] = v71;
      *(_DWORD *)v26 = 67240962;
      *(_DWORD *)(v0 + 384) = v77 & 1;
      sub_1D2D9E1B4();
      *(_WORD *)(v26 + 8) = 2050;
      *(_QWORD *)(v0 + 152) = v24;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 18) = 2082;
      *(_QWORD *)(v0 + 56) = sub_1D2D9C714();
      *(_QWORD *)(v0 + 64) = v27;
      *(_QWORD *)(v0 + 72) = 45;
      *(_QWORD *)(v0 + 80) = 0xE100000000000000;
      *(_QWORD *)(v0 + 136) = 95;
      *(_QWORD *)(v0 + 144) = 0xE100000000000000;
      sub_1D2CD1430();
      v28 = sub_1D2D9E1E4();
      v30 = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 184) = sub_1D2CF78E0(v28, v30, v79);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      v31 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v31(v25, v75);
      *(_WORD *)(v26 + 28) = 2082;
      *(_QWORD *)(v0 + 120) = sub_1D2D9C714();
      *(_QWORD *)(v0 + 128) = v32;
      *(_QWORD *)(v0 + 104) = 45;
      *(_QWORD *)(v0 + 112) = 0xE100000000000000;
      *(_QWORD *)(v0 + 88) = 95;
      *(_QWORD *)(v0 + 96) = 0xE100000000000000;
      v33 = sub_1D2D9E1E4();
      v35 = v34;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 216) = sub_1D2CF78E0(v33, v35, v79);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      v31(v70, v75);
      _os_log_impl(&dword_1D2CC0000, v22, v72, "Visual isTranslatable: %{BOOL,public}d samples: %{public}ld source: %{public}s target: %{public}s", (uint8_t *)v26, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v71, -1, -1);
      MEMORY[0x1D8248974](v26, -1, -1);

      sub_1D2CD3734(v73, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      v31(v74, v75);
    }
    else
    {
      v57 = *(_QWORD *)(v0 + 320);
      v58 = *(_QWORD *)(v0 + 328);
      v59 = *(_QWORD *)(v0 + 312);
      v61 = *(_QWORD *)(v0 + 288);
      v60 = *(_QWORD *)(v0 + 296);
      v62 = *(_QWORD *)(v0 + 240);

      v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v63(v59, v61);
      v63(v57, v61);
      swift_bridgeObjectRelease();
      sub_1D2CD3734(v62, (uint64_t (*)(_QWORD))type metadata accessor for LocalePair);
      v63(v58, v61);
    }
  }
  else
  {
    v36 = qword_1ED587858;
    swift_bridgeObjectRetain();
    if (v36 != -1)
      swift_once();
    v37 = *(_QWORD *)(v0 + 328);
    v39 = *(_QWORD *)(v0 + 296);
    v38 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 288);
    v41 = sub_1D2D9C8F4();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED5886E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v37, v40);
    swift_bridgeObjectRetain();
    v42 = sub_1D2D9C8DC();
    v43 = sub_1D2D9E01C();
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 328);
    v46 = *(_QWORD *)(v0 + 296);
    v47 = *(_QWORD *)(v0 + 304);
    v48 = *(_QWORD *)(v0 + 288);
    if (v44)
    {
      v49 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      *(_DWORD *)v49 = 136446466;
      v78 = v45;
      v79[0] = v76;
      sub_1D2D83914();
      v50 = sub_1D2D9E508();
      *(_QWORD *)(v0 + 200) = sub_1D2CF78E0(v50, v51, v79);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v52(v47, v48);
      *(_WORD *)(v49 + 12) = 2082;
      swift_bridgeObjectRetain();
      v53 = sub_1D2D9DFD4();
      v55 = v54;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 192) = sub_1D2CF78E0(v53, v55, v79);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2CC0000, v42, v43, "Visual isTranslatable: NO; locale %{public}s not supported by VK OCR set %{public}s",
        (uint8_t *)v49,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D8248974](v76, -1, -1);
      MEMORY[0x1D8248974](v49, -1, -1);

      v56 = v78;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v52 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v52(v47, v48);
      v56 = v45;
    }
    v52(v56, v48);
    LOBYTE(v77) = 0;
  }
  v64 = *(_QWORD *)(v0 + 336);
  v65 = *(_QWORD *)(v0 + 296);
  v66 = *(_QWORD *)(v0 + 288);
  v67 = *(_QWORD *)(v0 + 272);
  sub_1D2D3A96C();
  sub_1D2CD3734(v67, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v77 & 1);
}

uint64_t sub_1D2D83128()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (qword_1ED587858 != -1)
    swift_once();
  v1 = *(void **)(v0 + 376);
  v2 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED5886E8);
  v3 = v1;
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E034();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 376);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 208) = v10;
    sub_1D2D9E1B4();
    *v9 = v10;

    _os_log_impl(&dword_1D2CC0000, v4, v5, "Visual isTranslatable: NO; not offering translation: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v9, -1, -1);
    MEMORY[0x1D8248974](v8, -1, -1);

  }
  else
  {

  }
  v11 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 296);
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 272);
  sub_1D2D3A96C();
  sub_1D2CD3734(v14, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1D2D83374()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D833A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1D2CE16D4;
  return sub_1D2D7F04C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D2D83434(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D7F738(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_BYTE *)(v1 + 33), *(void **)(v1 + 40));
}

uint64_t sub_1D2D83448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D8348C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v2 + v3) & ~v2;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3;
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (!v8(v0 + v4, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D83590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D835D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 40) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = (v7 + v5 + v6) & ~v5;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v6;
  v13 = (uint64_t)v1 + v8;
  v14 = (_QWORD *)((char *)v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1D2CE1A58;
  return sub_1D2D81528(a1, v9, v10, v11, v12, v13, v15, v16);
}

uint64_t type metadata accessor for VisualTranslationService()
{
  return objc_opt_self();
}

uint64_t sub_1D2D836E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D2D83708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D2D81ED8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1D2D83710(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D2D87F28(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D2D83718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1D2D837B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (char *)v1 + v5 + *(_QWORD *)(v4 + 64);
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1D2CE16D4;
  return sub_1D2D7F8C8(a1, v6, v7, v8, v9, v10, v12, v13);
}

unint64_t sub_1D2D8388C()
{
  unint64_t result;

  result = qword_1EFCA92C0;
  if (!qword_1EFCA92C0)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA1370, &type metadata for TranslateFeaturesError);
    atomic_store(result, &qword_1EFCA92C0);
  }
  return result;
}

unint64_t sub_1D2D838D0()
{
  unint64_t result;

  result = qword_1ED587120;
  if (!qword_1ED587120)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA6A90, &type metadata for VisualTranslationError);
    atomic_store(result, (unint64_t *)&qword_1ED587120);
  }
  return result;
}

unint64_t sub_1D2D83914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFCA6E88;
  if (!qword_1EFCA6E88)
  {
    v1 = sub_1D2D9C7EC();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CB0E70], v1);
    atomic_store(result, (unint64_t *)&qword_1EFCA6E88);
  }
  return result;
}

uint64_t sub_1D2D83960()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t VisualTranslationStream.translate(models:taskHint:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587098);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1D2D9C6FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(a2) = *a2;
  sub_1D2D9C6F0();
  v15 = v2;
  v16 = a1;
  v17 = (char)a2;
  v18 = v12;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DF0A50], v5);
  sub_1D2D9DFA4();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t VisualTranslationStream.translate(models:taskHint:selfLoggingInvocationId:)(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587098);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v9) = *a2;
  v13 = v3;
  v14 = a1;
  v15 = v9;
  v16 = a3;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DF0A50], v7);
  return sub_1D2D9DFA4();
}

uint64_t sub_1D2D83B90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v27 = a1;
  v28 = a5;
  v30 = a3;
  v26 = a2;
  v29 = a4 & 1;
  v5 = sub_1D2D9C6FC();
  v6 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v27, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v5);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (*(unsigned __int8 *)(v6 + 80) + v18 + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *((_QWORD *)v20 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v20[v17], v11, v8);
  v21 = &v20[v18];
  *(_QWORD *)v21 = v30;
  v21[8] = v29;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v20[v19], v25, v24);
  swift_bridgeObjectRetain();
  sub_1D2D0A90C((uint64_t)v14, (uint64_t)&unk_1EFCA92D0, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1D2D83DB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D83B90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D2D83DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v8 + 772) = a7;
  *(_QWORD *)(v8 + 328) = a6;
  *(_QWORD *)(v8 + 336) = a8;
  *(_QWORD *)(v8 + 312) = a4;
  *(_QWORD *)(v8 + 320) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  *(_QWORD *)(v8 + 344) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  *(_QWORD *)(v8 + 360) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B8);
  *(_QWORD *)(v8 + 376) = v9;
  *(_QWORD *)(v8 + 384) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 392) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B0);
  *(_QWORD *)(v8 + 400) = v10;
  *(_QWORD *)(v8 + 408) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 416) = swift_task_alloc();
  v11 = sub_1D2D9C870();
  *(_QWORD *)(v8 + 424) = v11;
  *(_QWORD *)(v8 + 432) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 440) = swift_task_alloc();
  *(_QWORD *)(v8 + 448) = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587090);
  *(_QWORD *)(v8 + 456) = v12;
  *(_QWORD *)(v8 + 464) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 472) = swift_task_alloc();
  v13 = sub_1D2D9C6FC();
  *(_QWORD *)(v8 + 480) = v13;
  *(_QWORD *)(v8 + 488) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 496) = swift_task_alloc();
  *(_QWORD *)(v8 + 504) = swift_task_alloc();
  v14 = type metadata accessor for TextModel();
  *(_QWORD *)(v8 + 512) = v14;
  *(_QWORD *)(v8 + 520) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 528) = swift_task_alloc();
  *(_QWORD *)(v8 + 536) = swift_task_alloc();
  *(_QWORD *)(v8 + 544) = swift_task_alloc();
  v15 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v8 + 552) = v15;
  *(_QWORD *)(v8 + 560) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 568) = swift_task_alloc();
  *(_QWORD *)(v8 + 576) = swift_task_alloc();
  *(_QWORD *)(v8 + 584) = swift_task_alloc();
  *(_QWORD *)(v8 + 592) = swift_task_alloc();
  *(_QWORD *)(v8 + 600) = swift_task_alloc();
  *(_QWORD *)(v8 + 608) = type metadata accessor for Signpost();
  *(_QWORD *)(v8 + 616) = swift_task_alloc();
  *(_QWORD *)(v8 + 624) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D84044()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 632) = Strong;
  if (!Strong)
  {
    *(_QWORD *)(v0 + 240) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 328) + 16);
  *(_QWORD *)(v0 + 640) = v2;
  if (qword_1ED587858 != -1)
    swift_once();
  v3 = sub_1D2D9C8F4();
  *(_QWORD *)(v0 + 648) = __swift_project_value_buffer(v3, (uint64_t)qword_1ED5886E8);
  v4 = sub_1D2D9C8DC();
  v5 = sub_1D2D9E01C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    *(_QWORD *)(v0 + 304) = v2;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v4, v5, "Cache phase input: %ld", v6, 0xCu);
    MEMORY[0x1D8248974](v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 624);

  sub_1D2D3A46C(1, v7);
  *(_QWORD *)(v0 + 208) = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = *(_QWORD *)(v0 + 560);
    v9 = *(_QWORD *)(v0 + 328);
    v10 = *(_DWORD *)(v8 + 80);
    *(_DWORD *)(v0 + 768) = v10;
    *(_QWORD *)(v0 + 656) = *(_QWORD *)(v8 + 72);
    *(_QWORD *)(v0 + 672) = 0;
    *(_QWORD *)(v0 + 688) = 0;
    *(_QWORD *)(v0 + 680) = 0;
    v11 = *(_QWORD *)(v0 + 632);
    v12 = *(_QWORD *)(v0 + 600);
    v13 = v9 + ((v10 + 32) & ~(unint64_t)v10);
    swift_bridgeObjectRetain();
    sub_1D2CDB6B4(v13, v12, type metadata accessor for VisualTranslationModel);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v11 + 16);
    swift_retain();
    return swift_task_switch();
  }
  sub_1D2D3A96C();
  v15 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 16);
  *(_QWORD *)(v0 + 664) = v15;
  v16 = sub_1D2D9C8DC();
  v17 = sub_1D2D9E01C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 640);
    v19 = swift_slowAlloc();
    *(_DWORD *)v19 = 134218240;
    *(_QWORD *)(v0 + 288) = v18;
    sub_1D2D9E1B4();
    *(_WORD *)(v19 + 12) = 2048;
    *(_QWORD *)(v0 + 296) = v15;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v16, v17, "Cache phase output: %ld missed %ld ", (uint8_t *)v19, 0x16u);
    MEMORY[0x1D8248974](v19, -1, -1);
  }
  v20 = v0 + 208;

  v21 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1D2D9C8DC();
  v23 = sub_1D2D9E028();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = *(_QWORD *)(v0 + 640);
    v25 = swift_slowAlloc();
    *(_DWORD *)v25 = 134218496;
    *(_QWORD *)(v0 + 264) = v24;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v21 + 16);
    v20 = v0 + 208;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2048;
    *(_QWORD *)(v0 + 280) = 0;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v22, v23, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v25, 0x20u);
    MEMORY[0x1D8248974](v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v20 + 16))
  {
    v36 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 256) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
    swift_release();
    sub_1D2CD3734(v36, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    goto LABEL_9;
  }
  v26 = sub_1D2D9C8DC();
  v27 = sub_1D2D9E01C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v28 = 134217984;
    *(_QWORD *)(v0 + 248) = v15;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v26, v27, "Translate phase input: %ld", v28, 0xCu);
    MEMORY[0x1D8248974](v28, -1, -1);
  }
  v29 = *(_QWORD *)(v0 + 616);
  v31 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 392);
  v32 = *(_QWORD *)(v0 + 376);
  v33 = *(_BYTE *)(v0 + 772);

  sub_1D2D3A46C(1, v29);
  type metadata accessor for VisualTranslationService();
  v34 = *(_QWORD *)(v0 + 208);
  v37 = v33 & 1;
  static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v34, 1, &v37, v30);
  swift_bridgeObjectRelease();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  v35 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 728) = v35;
  *v35 = v0;
  v35[1] = sub_1D2D8616C;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D847A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v1 = v0[87];
  v2 = v0[84];
  v3 = *(_QWORD *)(v0[75] + *(int *)(v0[69] + 28));
  swift_retain();
  v4 = sub_1D2D86F54(v3, v1, 0);
  v0[88] = v2;
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v0[65];
    v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v8 = v4 + v7;
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v10 = v0[68];
      v11 = v0[64];
      sub_1D2CDB6B4(v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v12 = *(_QWORD *)(v10 + *(int *)(v11 + 20));
      if ((v12 & 0x8000000000000000) == 0 && (int64_t)v12 < *(_QWORD *)(v3 + 16))
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1D2D4B108(v3);
          v3 = result;
        }
        if (v12 >= *(_QWORD *)(v3 + 16))
        {
          __break(1u);
          return result;
        }
        sub_1D2D4B13C(v0[68], v3 + v7 + v12 * v9);
      }
      sub_1D2CD3734(v0[68], (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v8 += v9;
      if (!--v5)
      {
        v14 = v0[75];
        v15 = v0[74];
        v16 = (int *)v0[69];
        (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[61] + 16))(v15, v14, v0[60]);
        v17 = v16[6];
        v18 = (__int128 *)(v14 + v16[5]);
        v36 = *((_QWORD *)v18 + 20);
        v34 = v18[8];
        v35 = v18[9];
        v30 = v18[4];
        v31 = v18[5];
        v32 = v18[6];
        v33 = v18[7];
        v26 = *v18;
        v27 = v18[1];
        v19 = v14 + v17;
        v20 = v15 + v17;
        v28 = v18[2];
        v29 = v18[3];
        v21 = sub_1D2D9C6C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
        swift_bridgeObjectRelease();
        swift_release();
        v22 = *(_QWORD *)(v14 + v16[8]);
        v23 = *(_BYTE *)(v14 + v16[9]);
        v24 = *(_BYTE *)(v14 + v16[10]);
        v25 = v15 + v16[5];
        *(_OWORD *)(v25 + 128) = v34;
        *(_OWORD *)(v25 + 144) = v35;
        *(_QWORD *)(v25 + 160) = v36;
        *(_OWORD *)(v25 + 64) = v30;
        *(_OWORD *)(v25 + 80) = v31;
        *(_OWORD *)(v25 + 96) = v32;
        *(_OWORD *)(v25 + 112) = v33;
        *(_OWORD *)v25 = v26;
        *(_OWORD *)(v25 + 16) = v27;
        *(_OWORD *)(v25 + 32) = v28;
        *(_OWORD *)(v25 + 48) = v29;
        *(_QWORD *)(v15 + v16[7]) = v3;
        *(_QWORD *)(v15 + v16[8]) = v22;
        *(_BYTE *)(v15 + v16[9]) = v23;
        *(_BYTE *)(v15 + v16[10]) = v24;
        *(_BYTE *)(v15 + v16[11]) = 0;
        return swift_task_switch();
      }
    }
  }
  sub_1D2CDB6B4(v0[75], v0[74], type metadata accessor for VisualTranslationModel);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D84A24()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t);
  NSObject *v2;
  os_signpost_type_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  os_signpost_id_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  if ((sub_1D2D70FEC() & 1) == 0)
  {
    v13 = *(_QWORD *)(v0 + 632);
    sub_1D2D3A760(1);
    *(_QWORD *)(v0 + 712) = *(_QWORD *)(v13 + 24);
    swift_retain();
    return swift_task_switch();
  }
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 432) + 16);
  v1(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 624) + *(int *)(*(_QWORD *)(v0 + 608) + 20), *(_QWORD *)(v0 + 424));
  v2 = sub_1D2D9C87C();
  v3 = sub_1D2D9E0DC();
  v4 = sub_1D2D9E19C();
  v5 = *(_QWORD *)(v0 + 448);
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 432);
    v6 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 424);
    v1(v6, *(_QWORD *)(v0 + 448), v8);
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = sub_1D2D9C864();
    _os_signpost_emit_with_name_impl(&dword_1D2CC0000, v2, v3, v10, "success", "", v9, 2u);
    MEMORY[0x1D8248974](v9, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v5, v8);
    result = ((uint64_t (*)(uint64_t, uint64_t))v11)(v6, v8);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 424);
    v15 = *(_QWORD *)(v0 + 432);

    result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v5, v14);
  }
  v16 = *(_QWORD *)(v0 + 680);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
    return result;
  }
  v50 = v18;
  v51 = *(_QWORD *)(v0 + 640);
  v19 = *(_QWORD *)(v0 + 600);
  v20 = *(_QWORD *)(v0 + 592);
  v22 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 472);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(_QWORD *)(v0 + 688) + 1;
  sub_1D2CDB6B4(v20, *(_QWORD *)(v0 + 576), type metadata accessor for VisualTranslationModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  sub_1D2D9DF74();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  sub_1D2CD3734(v20, type metadata accessor for VisualTranslationModel);
  sub_1D2CD3734(v19, type metadata accessor for VisualTranslationModel);
  if (v24 != v51)
  {
    v36 = *(_QWORD *)(v0 + 704);
    v37 = *(_QWORD *)(v0 + 688) + 1;
    *(_QWORD *)(v0 + 688) = v37;
    *(_QWORD *)(v0 + 680) = v50;
    *(_QWORD *)(v0 + 672) = v36;
    v38 = *(_QWORD *)(v0 + 632);
    sub_1D2CDB6B4(*(_QWORD *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 768) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 768))+ *(_QWORD *)(v0 + 656) * v37, *(_QWORD *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v38 + 16);
    swift_retain();
    return swift_task_switch();
  }
  swift_bridgeObjectRelease();
  sub_1D2D3A96C();
  v25 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 16);
  *(_QWORD *)(v0 + 664) = v25;
  v26 = sub_1D2D9C8DC();
  v27 = sub_1D2D9E01C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = *(_QWORD *)(v0 + 640);
    v29 = swift_slowAlloc();
    *(_DWORD *)v29 = 134218240;
    *(_QWORD *)(v0 + 288) = v28;
    sub_1D2D9E1B4();
    *(_WORD *)(v29 + 12) = 2048;
    *(_QWORD *)(v0 + 296) = v25;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v26, v27, "Cache phase output: %ld missed %ld ", (uint8_t *)v29, 0x16u);
    MEMORY[0x1D8248974](v29, -1, -1);
  }
  v30 = v0 + 208;

  v31 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_1D2D9C8DC();
  v33 = sub_1D2D9E028();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = *(_QWORD *)(v0 + 640);
    v35 = swift_slowAlloc();
    *(_DWORD *)v35 = 134218496;
    *(_QWORD *)(v0 + 264) = v34;
    v30 = v0 + 208;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2048;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v31 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 22) = 2048;
    *(_QWORD *)(v0 + 280) = v50;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v32, v33, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v35, 0x20u);
    MEMORY[0x1D8248974](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v30 + 16))
  {
    v39 = sub_1D2D9C8DC();
    v40 = sub_1D2D9E01C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 134217984;
      *(_QWORD *)(v0 + 248) = v25;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v39, v40, "Translate phase input: %ld", v41, 0xCu);
      MEMORY[0x1D8248974](v41, -1, -1);
    }
    v42 = *(_QWORD *)(v0 + 616);
    v44 = *(_QWORD *)(v0 + 384);
    v43 = *(_QWORD *)(v0 + 392);
    v45 = *(_QWORD *)(v0 + 376);
    v46 = *(_BYTE *)(v0 + 772);

    sub_1D2D3A46C(1, v42);
    type metadata accessor for VisualTranslationService();
    v47 = *(_QWORD *)(v0 + 208);
    v52 = v46 & 1;
    static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v47, 1, &v52, v43);
    swift_bridgeObjectRelease();
    sub_1D2D9DF38();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 728) = v48;
    *v48 = v0;
    v48[1] = sub_1D2D8616C;
    return sub_1D2D9DF98();
  }
  else
  {
    v49 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 256) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
    swift_release();
    sub_1D2CD3734(v49, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D851E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 592);
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  swift_bridgeObjectRetain();
  *(_BYTE *)(v0 + 773) = sub_1D2D2716C(v2, v3) & 1;
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D8526C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  if (*(_BYTE *)(v0 + 773) != 1)
  {
    v18 = sub_1D2D9C8DC();
    v19 = sub_1D2D9E028();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2CC0000, v18, v19, "Detected untranslated item", v20, 2u);
      MEMORY[0x1D8248974](v20, -1, -1);
    }
    v21 = *(_QWORD *)(v0 + 632);

    *(_QWORD *)(v0 + 720) = *(_QWORD *)(v21 + 24);
    swift_retain();
    return swift_task_switch();
  }
  v37 = *(_QWORD *)(v0 + 680);
  v38 = *(_QWORD *)(v0 + 640);
  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 688) + 1;
  sub_1D2CDB6B4(v2, *(_QWORD *)(v0 + 576), type metadata accessor for VisualTranslationModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  sub_1D2D9DF74();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1D2CD3734(v2, type metadata accessor for VisualTranslationModel);
  sub_1D2CD3734(v1, type metadata accessor for VisualTranslationModel);
  if (v6 != v38)
  {
    v22 = *(_QWORD *)(v0 + 704);
    v23 = *(_QWORD *)(v0 + 688) + 1;
    *(_QWORD *)(v0 + 688) = v23;
    *(_QWORD *)(v0 + 680) = v37;
    *(_QWORD *)(v0 + 672) = v22;
    v24 = *(_QWORD *)(v0 + 632);
    sub_1D2CDB6B4(*(_QWORD *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 768) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 768))+ *(_QWORD *)(v0 + 656) * v23, *(_QWORD *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v24 + 16);
    swift_retain();
    return swift_task_switch();
  }
  swift_bridgeObjectRelease();
  sub_1D2D3A96C();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 16);
  *(_QWORD *)(v0 + 664) = v7;
  v8 = sub_1D2D9C8DC();
  v9 = sub_1D2D9E01C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 640);
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134218240;
    *(_QWORD *)(v0 + 288) = v10;
    sub_1D2D9E1B4();
    *(_WORD *)(v11 + 12) = 2048;
    *(_QWORD *)(v0 + 296) = v7;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v8, v9, "Cache phase output: %ld missed %ld ", (uint8_t *)v11, 0x16u);
    MEMORY[0x1D8248974](v11, -1, -1);
  }
  v12 = v0 + 208;

  v13 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1D2D9C8DC();
  v15 = sub_1D2D9E028();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 640);
    v17 = swift_slowAlloc();
    *(_DWORD *)v17 = 134218496;
    *(_QWORD *)(v0 + 264) = v16;
    v12 = v0 + 208;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v13 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2048;
    *(_QWORD *)(v0 + 280) = v37;
    sub_1D2D9E1B4();
    _os_log_impl(&dword_1D2CC0000, v14, v15, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v17, 0x20u);
    MEMORY[0x1D8248974](v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v26 = sub_1D2D9C8DC();
    v27 = sub_1D2D9E01C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v28 = 134217984;
      *(_QWORD *)(v0 + 248) = v7;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v26, v27, "Translate phase input: %ld", v28, 0xCu);
      MEMORY[0x1D8248974](v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 616);
    v31 = *(_QWORD *)(v0 + 384);
    v30 = *(_QWORD *)(v0 + 392);
    v32 = *(_QWORD *)(v0 + 376);
    v33 = *(_BYTE *)(v0 + 772);

    sub_1D2D3A46C(1, v29);
    type metadata accessor for VisualTranslationService();
    v34 = *(_QWORD *)(v0 + 208);
    v39 = v33 & 1;
    static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v34, 1, &v39, v30);
    swift_bridgeObjectRelease();
    sub_1D2D9DF38();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 728) = v35;
    *v35 = v0;
    v35[1] = sub_1D2D8616C;
    return sub_1D2D9DF98();
  }
  else
  {
    v36 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 256) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
    swift_release();
    sub_1D2CD3734(v36, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D85990()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (char *)v0[62];
  v2 = v0[63];
  v3 = v0[60];
  v4 = v0[61];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 16))(v1, v0[74], v3);
  swift_beginAccess();
  sub_1D2D9519C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D85A48()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  sub_1D2CDB6B4(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 584), type metadata accessor for VisualTranslationModel);
  v1 = *(_QWORD *)(v0 + 208);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_1D2D4AE54(0, *(_QWORD *)(v1 + 16) + 1, 1, v1);
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_1D2D4AE54(v2 > 1, v3 + 1, 1, v1);
  v4 = *(_QWORD *)(v0 + 656);
  v5 = *(unsigned __int8 *)(v0 + 768);
  v6 = *(_QWORD *)(v0 + 584);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  sub_1D2CD1FD4(v6, v1 + ((v5 + 32) & ~v5) + v4 * v3, type metadata accessor for VisualTranslationModel);
  *(_QWORD *)(v0 + 208) = v1;
  v39 = *(_QWORD *)(v0 + 680);
  v40 = *(_QWORD *)(v0 + 640);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 464);
  v10 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 456);
  v12 = *(_QWORD *)(v0 + 688) + 1;
  sub_1D2CDB6B4(v8, *(_QWORD *)(v0 + 576), type metadata accessor for VisualTranslationModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  sub_1D2D9DF74();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  sub_1D2CD3734(v8, type metadata accessor for VisualTranslationModel);
  sub_1D2CD3734(v7, type metadata accessor for VisualTranslationModel);
  if (v12 == v40)
  {
    v13 = v0 + 208;
    swift_bridgeObjectRelease();
    sub_1D2D3A96C();
    v14 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 16);
    *(_QWORD *)(v0 + 664) = v14;
    v15 = sub_1D2D9C8DC();
    v16 = sub_1D2D9E01C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = *(_QWORD *)(v0 + 640);
      v18 = swift_slowAlloc();
      *(_DWORD *)v18 = 134218240;
      *(_QWORD *)(v0 + 288) = v17;
      sub_1D2D9E1B4();
      *(_WORD *)(v18 + 12) = 2048;
      *(_QWORD *)(v0 + 296) = v14;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v15, v16, "Cache phase output: %ld missed %ld ", (uint8_t *)v18, 0x16u);
      MEMORY[0x1D8248974](v18, -1, -1);
    }

    v19 = *(_QWORD *)(v0 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1D2D9C8DC();
    v21 = sub_1D2D9E028();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = *(_QWORD *)(v0 + 640);
      v23 = swift_slowAlloc();
      *(_DWORD *)v23 = 134218496;
      *(_QWORD *)(v0 + 264) = v22;
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      *(_QWORD *)(v0 + 272) = *(_QWORD *)(v19 + 16);
      sub_1D2D9E1B4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2048;
      v13 = v0 + 208;
      *(_QWORD *)(v0 + 280) = v39;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v20, v21, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v23, 0x20u);
      MEMORY[0x1D8248974](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v13 + 16))
    {
      v28 = sub_1D2D9C8DC();
      v29 = sub_1D2D9E01C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 134217984;
        *(_QWORD *)(v0 + 248) = v14;
        sub_1D2D9E1B4();
        _os_log_impl(&dword_1D2CC0000, v28, v29, "Translate phase input: %ld", v30, 0xCu);
        MEMORY[0x1D8248974](v30, -1, -1);
      }
      v31 = *(_QWORD *)(v0 + 616);
      v33 = *(_QWORD *)(v0 + 384);
      v32 = *(_QWORD *)(v0 + 392);
      v34 = *(_QWORD *)(v0 + 376);
      v35 = *(_BYTE *)(v0 + 772);

      sub_1D2D3A46C(1, v31);
      type metadata accessor for VisualTranslationService();
      v36 = *(_QWORD *)(v0 + 208);
      v41 = v35 & 1;
      static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v36, 1, &v41, v32);
      swift_bridgeObjectRelease();
      sub_1D2D9DF38();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 728) = v37;
      *v37 = v0;
      v37[1] = sub_1D2D8616C;
      return sub_1D2D9DF98();
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 624);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 256) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
      sub_1D2D9DF80();
      swift_release();
      sub_1D2CD3734(v38, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 704);
    v25 = *(_QWORD *)(v0 + 688) + 1;
    *(_QWORD *)(v0 + 688) = v25;
    *(_QWORD *)(v0 + 680) = v39;
    *(_QWORD *)(v0 + 672) = v24;
    v26 = *(_QWORD *)(v0 + 632);
    sub_1D2CDB6B4(*(_QWORD *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 768) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 768))+ *(_QWORD *)(v0 + 656) * v25, *(_QWORD *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v26 + 16);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_1D2D8616C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D861D0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 560) + 48))(v1, 1, *(_QWORD *)(v0 + 552)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 400));
    v2 = sub_1D2D9C8DC();
    v3 = sub_1D2D9E01C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(_QWORD *)(v0 + 664);
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      *(_QWORD *)(v0 + 232) = v4;
      sub_1D2D9E1B4();
      _os_log_impl(&dword_1D2CC0000, v2, v3, "Translate phase output: %ld", v5, 0xCu);
      MEMORY[0x1D8248974](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 624);
    v7 = *(_QWORD *)(v0 + 616);

    sub_1D2D3A96C();
    *(_QWORD *)(v0 + 224) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF80();
    swift_release();
    sub_1D2CD3734(v7, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    sub_1D2CD3734(v6, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 576);
    v10 = *(_QWORD *)(v0 + 568);
    v12 = *(_QWORD *)(v0 + 464);
    v11 = *(_QWORD *)(v0 + 472);
    v13 = *(_QWORD *)(v0 + 456);
    sub_1D2CD1FD4(v1, v10, type metadata accessor for VisualTranslationModel);
    v14 = sub_1D2D70FEC();
    sub_1D2D3A760((v14 & 1) == 0);
    sub_1D2CDB6B4(v10, v9, type metadata accessor for VisualTranslationModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
    sub_1D2D9DF74();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v15 = sub_1D2D70FEC();
    v16 = *(_QWORD *)(v0 + 632);
    if ((v15 & 1) != 0)
    {
      v17 = *(_QWORD *)(v0 + 568);
      v18 = *(_QWORD *)(v0 + 552);
      *(_QWORD *)(v0 + 736) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v0 + 744) = *(_QWORD *)(v17 + *(int *)(v18 + 28));
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)(v0 + 752) = *(_QWORD *)(v16 + 24);
      swift_retain();
    }
    return swift_task_switch();
  }
}

uint64_t sub_1D2D86570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  BOOL v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v33 = *(_QWORD *)(v0 + 736);
    v3 = *(_QWORD *)(v0 + 520);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v34 = v5;
    do
    {
      v11 = *(_QWORD *)(v0 + 536);
      v12 = *(_QWORD *)(v0 + 512);
      sub_1D2CDB6B4(v4, v11, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if (!*(_QWORD *)(v11 + *(int *)(v12 + 44)))
      {
        v13 = *(_QWORD *)(v0 + 536);
        v14 = *(_QWORD *)(v0 + 512);
        v15 = (_QWORD *)(v13 + *(int *)(v14 + 24));
        v16 = v15[1];
        v17 = *v15 & 0xFFFFFFFFFFFFLL;
        if ((v16 & 0x2000000000000000) != 0)
          v17 = HIBYTE(v16) & 0xF;
        if (v17)
        {
          v18 = *(_QWORD *)(v0 + 360);
          v19 = v13 + *(int *)(v14 + 28);
          sub_1D2CF811C(v19, v18);
          v20 = sub_1D2D9C7EC();
          v21 = *(_QWORD *)(v20 - 8);
          v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
          v23 = v22(v18, 1, v20);
          sub_1D2CCADA4(v18, &qword_1ED587850);
          v24 = v23 == 1;
          v5 = v34;
          if (!v24)
          {
            v25 = (_QWORD *)(*(_QWORD *)(v0 + 536) + *(int *)(*(_QWORD *)(v0 + 512) + 32));
            v26 = v25[1];
            if (v26)
            {
              v27 = *v25 & 0xFFFFFFFFFFFFLL;
              if ((v26 & 0x2000000000000000) != 0)
                v28 = HIBYTE(v26) & 0xF;
              else
                v28 = v27;
              if (v28)
              {
                v29 = *(_QWORD *)(v0 + 352);
                sub_1D2CF811C(v19, v29);
                if (v22(v29, 1, v20) == 1)
                {
                  sub_1D2CCADA4(*(_QWORD *)(v0 + 352), &qword_1ED587850);
                }
                else
                {
                  v31 = *(_QWORD *)(v0 + 536);
                  v32 = *(_QWORD *)(v0 + 528);
                  v6 = *(_QWORD *)(v0 + 352);
                  sub_1D2D9C714();
                  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v6, v20);
                  sub_1D2D9E604();
                  sub_1D2D9DD70();
                  swift_bridgeObjectRelease();
                  sub_1D2D9C714();
                  sub_1D2D9DD70();
                  swift_bridgeObjectRelease();
                  sub_1D2D9E5E0();
                  swift_bridgeObjectRetain();
                  sub_1D2D9DD70();
                  swift_bridgeObjectRelease();
                  *(_OWORD *)(v0 + 48) = v37;
                  *(_OWORD *)(v0 + 64) = v38;
                  *(_QWORD *)(v0 + 80) = v39;
                  *(_OWORD *)(v0 + 16) = v35;
                  *(_OWORD *)(v0 + 32) = v36;
                  sub_1D2D9E5EC();
                  v7 = *(void **)(v33 + 136);
                  sub_1D2CDB6B4(v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                  type metadata accessor for TextModelContainer();
                  v8 = swift_allocObject();
                  sub_1D2CD1FD4(v32, v8 + OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
                  sub_1D2D06078();
                  v9 = v7;
                  v10 = (void *)sub_1D2D9E13C();
                  objc_msgSend(v9, sel_setObject_forKey_, v8, v10);

                  v5 = v34;
                  swift_release();

                }
              }
            }
          }
        }
      }
      sub_1D2CD3734(*(_QWORD *)(v0 + 536), (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D868E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 752) = *(_QWORD *)(*(_QWORD *)(v0 + 632) + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1D2D8692C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 344);
  swift_beginAccess();
  sub_1D2D97F10(v1, v2);
  sub_1D2CCADA4(v2, &qword_1EFCA71F0);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D869C8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1D2CD3734(*(_QWORD *)(v0 + 568), type metadata accessor for VisualTranslationModel);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 760) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D86A40;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D86A40()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D86AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v4 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 400);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1D2CD3734(v2, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  sub_1D2CD3734(v1, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t VisualTranslationStream.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t VisualTranslationStream.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OngoingTranslationActor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VisualTranslationStream()
{
  return objc_opt_self();
}

uint64_t method lookup function for VisualTranslationStream()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D2D86CE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  type metadata accessor for TextTranslationCache();
  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v1[15] = 0;
  v1[16] = 100;
  v1[17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v0 + 16) = v1;
  type metadata accessor for OngoingTranslationActor();
  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_1D2D86D6C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2D86D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1D2D9C6FC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1D2D86E6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870A0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D2D9C6FC() - 8) + 80);
  v8 = (v6 + v7 + 9) & ~v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (char *)v1 + v6;
  v14 = *(_QWORD *)((char *)v1 + v6);
  v15 = v13[8];
  v16 = (uint64_t)v1 + v8;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1D2CE16D4;
  return sub_1D2D83DC0(a1, v9, v10, v11, v12, v14, v15, v16);
}

unint64_t sub_1D2D86F54(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587040);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TextModel();
  v9 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v40 = (uint64_t)v36 - v12;
  MEMORY[0x1E0C80A78](v13);
  v38 = (uint64_t)v36 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v36[1] = v3;
  v37 = v16;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v9 + 72);
  v36[0] = a1;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x1E0DEE9D8];
  v42 = a3 & 1;
  v39 = v18;
  do
  {
    v20 = sub_1D2D4CDE0(v17, v42);
    if (!v21)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v44);
LABEL_4:
      sub_1D2CCADA4((uint64_t)v8, &qword_1ED587040);
      goto LABEL_5;
    }
    v22 = v20;
    v23 = v21;
    v45 = v15;
    v24 = v40;
    sub_1D2CDB6B4(v17, v40, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v25 = v44;
    v26 = v19;
    v27 = v8;
    v28 = v9;
    v29 = (uint64_t *)(v24 + *(int *)(v44 + 32));
    swift_bridgeObjectRelease();
    *v29 = v22;
    v29[1] = v23;
    v9 = v28;
    v8 = v27;
    v19 = v26;
    sub_1D2CDB6B4(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v25);
    v30 = v24;
    v15 = v45;
    sub_1D2CD3734(v30, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    v31 = v25;
    v18 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v31) == 1)
      goto LABEL_4;
    v32 = v38;
    sub_1D2CD1FD4((uint64_t)v8, v38, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD1FD4(v32, v41, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1D2D4AE40(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
    v34 = *(_QWORD *)(v19 + 16);
    v33 = *(_QWORD *)(v19 + 24);
    if (v34 >= v33 >> 1)
      v19 = sub_1D2D4AE40(v33 > 1, v34 + 1, 1, v19);
    *(_QWORD *)(v19 + 16) = v34 + 1;
    sub_1D2CD1FD4(v41, v19 + v37 + v34 * v18, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_5:
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1D2D8725C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8C80);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1D2CCADA4(a1, &qword_1EFCA8C80);
    sub_1D2D93418(a2, (uint64_t)v8);
    v14 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1D2CCADA4((uint64_t)v8, &qword_1EFCA8C80);
  }
  else
  {
    sub_1D2CD2018(a1, (uint64_t)v12, &qword_1EFCA5C38);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D2D94348((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_1D2D9C6FC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1D2D873E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VisualTranslationModel(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1D2CCADA4(a1, &qword_1ED5872D8);
    sub_1D2D9355C(a2, (uint64_t)v8);
    v14 = sub_1D2D9C6FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1D2CCADA4((uint64_t)v8, &qword_1ED5872D8);
  }
  else
  {
    sub_1D2CD1FD4(a1, (uint64_t)v12, type metadata accessor for VisualTranslationModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D2D944BC((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_1D2D9C6FC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1D2D87560(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t SecureHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_1D2D989D8(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v2
                                                          + class metadata base offset for SecureHostingController)
                                              - 8)
                                  + 8))(a1);
  return v5;
}

void RecognizedItem.originalBounds.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v17)(char *, uint64_t);
  int v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void *v22;
  void *v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  int v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  int v41;
  uint64_t (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v2 = sub_1D2D9DB90();
  v46 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - v6;
  v8 = sub_1D2D9DC14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v16((char *)&v38 - v14, v1, v8, v13);
  v17 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  v18 = v17(v15, v8);
  if (v18 != *MEMORY[0x1E0CEE518])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
LABEL_9:
    v26 = v47;
    goto LABEL_10;
  }
  v41 = v18;
  v42 = v17;
  v43 = (void (*)(char *, uint64_t, uint64_t))v16;
  v44 = v11;
  v45 = v1;
  v40 = v4;
  v19 = *(void (**)(char *, uint64_t))(v9 + 96);
  v19(v15, v8);
  v20 = v46;
  v21 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v21(v7, v15, v2);
  v22 = (void *)sub_1D2D9DB78();
  objc_opt_self();
  v23 = (void *)swift_dynamicCastObjCClass();
  if (!v23)
  {

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v2);
    goto LABEL_9;
  }
  v39 = v21;
  v24 = objc_msgSend(v23, sel_getCROutputRegion);

  v25 = *(void (**)(char *, uint64_t))(v20 + 8);
  v25(v7, v2);
  v26 = v47;
  if (!v24)
  {
LABEL_10:
    v34 = sub_1D2D9DBFC();
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v36 = v26;
    goto LABEL_11;
  }
  v27 = objc_msgSend(v24, sel_originalBoundingQuad);
  if (!v27)
  {
    v37 = sub_1D2D9DBFC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v47, 1, 1, v37);

    return;
  }
  v28 = v27;
  v29 = v44;
  v43(v44, v45, v8);
  v30 = v42(v29, v8);
  if (v30 == v41)
  {
    v19(v29, v8);
    v31 = v40;
    v39(v40, v29, v2);
    v32 = v47;
    sub_1D2D9DB84();
    objc_msgSend(v28, sel_bottomLeft);
    sub_1D2D9DBA8();
    objc_msgSend(v28, sel_bottomRight);
    sub_1D2D9DBC0();
    objc_msgSend(v28, sel_topLeft);
    sub_1D2D9DBD8();
    objc_msgSend(v28, sel_topRight);
    sub_1D2D9DBF0();

    v25(v31, v2);
    v33 = sub_1D2D9DBFC();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
    return;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
  v34 = sub_1D2D9DBFC();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v36 = v47;
LABEL_11:
  v35(v36, 1, 1, v34);
}

void RecognizedItem.homography.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  __int128 v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v2 = v1;
  v4 = sub_1D2D9DB90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D2D9DC14();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v2, v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) != *MEMORY[0x1E0CEE518])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_8:
    v16 = 0uLL;
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
  v13 = (void *)sub_1D2D9DB78();
  objc_opt_self();
  v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_8;
  }
  v15 = objc_msgSend(v14, sel_getCROutputRegion);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = 0uLL;
  if (!v15)
  {
LABEL_9:
    v23 = 1;
    v21 = 0uLL;
    v22 = 0uLL;
    goto LABEL_10;
  }
  v17 = objc_msgSend(v15, sel_originalBoundingQuad, 0.0);

  if (v17)
  {
    objc_msgSend(v15, sel_boundingQuadHomography);
    v25 = v19;
    v26 = v18;
    v24 = v20;

    v22 = v24;
    v21 = v25;
    v16 = v26;
    v23 = 0;
  }
  else
  {

    v23 = 1;
    v21 = 0uLL;
    v22 = 0uLL;
    v16 = 0uLL;
  }
LABEL_10:
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v21;
  *(_OWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 48) = v23;
}

uint64_t RecognizedItem.baselineAngle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1D2D9DB90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9DC14();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v1, v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) == *MEMORY[0x1E0CEE518])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    v11 = (void *)sub_1D2D9DB78();
    objc_opt_self();
    v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      v13 = objc_msgSend(v12, sel_getCROutputRegion);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v13)
      {
        v14 = objc_msgSend(v13, sel_originalBoundingQuad);
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, sel_baselineAngle);
          v17 = v16;

          return v17;
        }

      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return 0;
}

uint64_t RecognizedItem.homographySize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  uint64_t result;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1D2D9DB90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D2D9DC14();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v1, v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) == *MEMORY[0x1E0CEE518])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    v11 = (void *)sub_1D2D9DB78();
    objc_opt_self();
    v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      v13 = objc_msgSend(v12, sel_getCROutputRegion);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v13)
      {
        v14 = objc_msgSend(v13, sel_originalBoundingQuad);
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, sel_normalizationSize);
          v17 = v16;

          *(double *)&result = v17 * 0.25;
          return result;
        }

      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  *(double *)&result = 0.0;
  return result;
}

void sub_1D2D87F28(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1D2D9C5F4();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t sub_1D2D87F80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D87FFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t sub_1D2D88074()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2D880E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t (*sub_1D2D88150(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

uint64_t sub_1D2D881C8()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1ED587048);
}

uint64_t sub_1D2D881DC(uint64_t a1)
{
  return sub_1D2D07DD8(a1, (uint64_t *)&unk_1EFCA92D8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1ED587048);
}

uint64_t (*sub_1D2D881F8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA92D8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587048);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

uint64_t sub_1D2D882C0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2D88494(a1);
}

uint64_t sub_1D2D882D4()
{
  return sub_1D2D88520();
}

uint64_t sub_1D2D882E8()
{
  return sub_1D2D885A0();
}

uint64_t sub_1D2D882FC()
{
  return sub_1D2D8861C();
}

uint64_t (*sub_1D2D88310(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

uint64_t sub_1D2D88388()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1ED587798);
}

uint64_t sub_1D2D8839C(uint64_t a1)
{
  return sub_1D2D07DD8(a1, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1ED587798);
}

uint64_t (*sub_1D2D883B8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A98);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

uint64_t sub_1D2D88480@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2D88494(a1);
}

uint64_t sub_1D2D88494@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D8850C()
{
  return sub_1D2D88520();
}

uint64_t sub_1D2D88520()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t sub_1D2D8858C()
{
  return sub_1D2D885A0();
}

uint64_t sub_1D2D885A0()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2D88608()
{
  return sub_1D2D8861C();
}

uint64_t sub_1D2D8861C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D2D9C9C0();
}

uint64_t (*sub_1D2D88684(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D2D9C9A8();
  return sub_1D2D073FC;
}

uint64_t sub_1D2D886FC()
{
  return sub_1D2D07BD4((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1ED587798);
}

uint64_t sub_1D2D88710(uint64_t a1)
{
  return sub_1D2D07DD8(a1, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1ED587798);
}

uint64_t (*sub_1D2D8872C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586A98);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  sub_1D2D9C990();
  swift_endAccess();
  return sub_1D2D074F8;
}

double sub_1D2D887F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1D2D88838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream);
  }
  else
  {
    v3 = v0;
    type metadata accessor for VisualTranslationStream();
    swift_allocObject();
    v2 = sub_1D2D86CE0();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t VisualTranslationObservable.__allocating_init()()
{
  swift_allocObject();
  return VisualTranslationObservable.init()();
}

uint64_t VisualTranslationObservable.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _BYTE *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[8];
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587048);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  v10 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B0);
  sub_1D2D9C984();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v11 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  *(_QWORD *)(v0 + v11) = sub_1D2CCFC98(v10);
  v12 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_translationInProgressModels;
  type metadata accessor for OngoingTranslationActor();
  v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v13 + 112) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + v12) = v13;
  v14 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v21[7] = 0;
  sub_1D2D9C984();
  v15 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32);
  v15(v14, v4, v1);
  v16 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent;
  v21[6] = 0;
  sub_1D2D9C984();
  v15(v16, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale) = 0x3FF0000000000000;
  v17 = (_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream) = 0;
  v18 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
  v19 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_release();
  return VisualTranslationErrorViewModel.init()();
}

uint64_t sub_1D2D88B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(uint64_t, char *, char *);
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  double v39;
  void (*v40)(char *, uint64_t, uint64_t);
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, char *, char *);
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  char *v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  unint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void (*v112)(uint64_t, char *, char *);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;

  v117 = sub_1D2D9C6FC();
  v3 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v116 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v108 - v9;
  v11 = type metadata accessor for VisualTranslationModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v114 = (uint64_t)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v108 - v15;
  MEMORY[0x1E0C80A78](v16);
  v113 = (uint64_t)&v108 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v108 - v19;
  MEMORY[0x1E0C80A78](v21);
  v118 = (uint64_t)&v108 - v22;
  v119 = v1;
  v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  v24 = *v23;
  if (!*(_QWORD *)(*v23 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_1D2CCADA4((uint64_t)v10, &qword_1ED5872D8);
  }
  swift_bridgeObjectRetain();
  v25 = sub_1D2D65098(a1);
  if ((v26 & 1) != 0)
  {
    sub_1D2CDB6B4(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v12 + 72) * v25, (uint64_t)v10, type metadata accessor for VisualTranslationModel);
    v27 = *(void (**)(uint64_t, char *, char *))(v12 + 56);
    v28 = v10;
    v29 = 0;
  }
  else
  {
    v27 = *(void (**)(uint64_t, char *, char *))(v12 + 56);
    v28 = v10;
    v29 = 1;
  }
  v112 = v27;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v27)(v28, v29, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1D2CCADA4((uint64_t)v10, &qword_1ED5872D8);
  v31 = v118;
  sub_1D2CD1FD4((uint64_t)v10, v118, type metadata accessor for VisualTranslationModel);
  v32 = v31 + *(int *)(v11 + 20);
  v33 = *(_OWORD *)(v32 + 144);
  v151 = *(_OWORD *)(v32 + 128);
  v152 = v33;
  v153 = *(_QWORD *)(v32 + 160);
  v34 = *(_OWORD *)(v32 + 80);
  v147 = *(_OWORD *)(v32 + 64);
  v148 = v34;
  v35 = *(_OWORD *)(v32 + 112);
  v149 = *(_OWORD *)(v32 + 96);
  v150 = v35;
  v36 = *(_OWORD *)(v32 + 48);
  v145 = *(_OWORD *)(v32 + 32);
  v146 = v36;
  v37 = *(_OWORD *)(v32 + 16);
  v143 = *(_OWORD *)v32;
  v144 = v37;
  v38 = v31 + *(int *)(v11 + 24);
  sub_1D2D9C6A8();
  if (v39 <= 0.0)
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v41 = v117;
    v40(v20, a1, v117);
    v42 = *(int *)(v11 + 24);
    v111 = v7;
    v43 = &v20[v42];
    v44 = sub_1D2D9C6C0();
    v45 = v43;
    v7 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v45, v38, v44);
    v46 = *(_QWORD *)(a1 + *(int *)(v11 + 28));
    v47 = *(_QWORD *)(a1 + *(int *)(v11 + 32));
    v48 = *(_BYTE *)(a1 + *(int *)(v11 + 36));
    v49 = *(_BYTE *)(a1 + *(int *)(v11 + 40));
    v50 = &v20[*(int *)(v11 + 20)];
    v51 = v152;
    *((_OWORD *)v50 + 8) = v151;
    *((_OWORD *)v50 + 9) = v51;
    *((_QWORD *)v50 + 20) = v153;
    v52 = v148;
    *((_OWORD *)v50 + 4) = v147;
    *((_OWORD *)v50 + 5) = v52;
    v53 = v150;
    *((_OWORD *)v50 + 6) = v149;
    *((_OWORD *)v50 + 7) = v53;
    v54 = v144;
    *(_OWORD *)v50 = v143;
    *((_OWORD *)v50 + 1) = v54;
    v55 = v146;
    *((_OWORD *)v50 + 2) = v145;
    *((_OWORD *)v50 + 3) = v55;
    *(_QWORD *)&v20[*(int *)(v11 + 28)] = v46;
    *(_QWORD *)&v20[*(int *)(v11 + 32)] = v47;
    v20[*(int *)(v11 + 36)] = v48;
    v20[*(int *)(v11 + 40)] = v49;
    v20[*(int *)(v11 + 44)] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1D2CDB6B4(a1, (uint64_t)v20, type metadata accessor for VisualTranslationModel);
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v41 = v117;
  }
  v56 = (uint64_t)v116;
  v111 = (char *)v40;
  v40(v116, a1, v41);
  sub_1D2CDB6B4((uint64_t)v20, (uint64_t)v7, type metadata accessor for VisualTranslationModel);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v112)(v7, 0, 1, v11);
  swift_beginAccess();
  sub_1D2D873E0((uint64_t)v7, v56);
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  v57 = *(_QWORD *)(v132 + 16);
  if (!v57)
  {
LABEL_15:
    v62 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v62);
    *(&v108 - 2) = v119;
    *(&v108 - 1) = (uint64_t)v20;
    sub_1D2D9DAAC();
    sub_1D2D9CCC0();
    swift_release();
LABEL_23:
    sub_1D2CD3734(v118, type metadata accessor for VisualTranslationModel);
    return sub_1D2CD3734((uint64_t)v20, type metadata accessor for VisualTranslationModel);
  }
  v58 = v41;
  v59 = 0;
  v60 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v61 = *(_QWORD *)(v12 + 72);
  while ((sub_1D2D9C6D8() & 1) == 0)
  {
    ++v59;
    v60 += v61;
    if (v57 == v59)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  if (v59 >= *(_QWORD *)(v132 + 16))
  {
    __break(1u);
LABEL_25:
    result = sub_1D2D4BEC8(v58);
    v58 = result;
    *(_QWORD *)v11 = result;
    goto LABEL_21;
  }
  v63 = v114;
  sub_1D2CDB6B4(v132 + v60, v114, type metadata accessor for VisualTranslationModel);
  swift_bridgeObjectRelease();
  v64 = (uint64_t)v115;
  ((void (*)(char *, uint64_t, unint64_t))v111)(v115, v63, v58);
  v65 = v63 + *(int *)(v11 + 20);
  v66 = *(_OWORD *)(v65 + 144);
  v129 = *(_OWORD *)(v65 + 128);
  v130 = v66;
  v131 = *(_QWORD *)(v65 + 160);
  v67 = *(_OWORD *)(v65 + 80);
  v125 = *(_OWORD *)(v65 + 64);
  v126 = v67;
  v68 = *(_OWORD *)(v65 + 112);
  v127 = *(_OWORD *)(v65 + 96);
  v128 = v68;
  v69 = *(_OWORD *)(v65 + 48);
  v123 = *(_OWORD *)(v65 + 32);
  v124 = v69;
  v70 = *(_OWORD *)(v65 + 16);
  v121 = *(_OWORD *)v65;
  v122 = v70;
  v71 = *(int *)(v11 + 24);
  v72 = v63 + v71;
  v73 = v64 + v71;
  v74 = sub_1D2D9C6C0();
  v75 = *(void (**)(uint64_t, char *, char *))(*(_QWORD *)(v74 - 8) + 16);
  v116 = (char *)v74;
  v112 = v75;
  ((void (*)(uint64_t, uint64_t))v75)(v73, v72);
  v76 = *(_QWORD *)&v20[*(int *)(v11 + 28)];
  v77 = *(_QWORD *)&v20[*(int *)(v11 + 32)];
  v78 = v20[*(int *)(v11 + 36)];
  v79 = v20[*(int *)(v11 + 40)];
  v80 = v64 + *(int *)(v11 + 20);
  v81 = v130;
  *(_OWORD *)(v80 + 128) = v129;
  *(_OWORD *)(v80 + 144) = v81;
  *(_QWORD *)(v80 + 160) = v131;
  v82 = v126;
  *(_OWORD *)(v80 + 64) = v125;
  *(_OWORD *)(v80 + 80) = v82;
  v83 = v128;
  *(_OWORD *)(v80 + 96) = v127;
  *(_OWORD *)(v80 + 112) = v83;
  v84 = v122;
  *(_OWORD *)v80 = v121;
  *(_OWORD *)(v80 + 16) = v84;
  v85 = v124;
  *(_OWORD *)(v80 + 32) = v123;
  *(_OWORD *)(v80 + 48) = v85;
  v110 = *(int *)(v11 + 28);
  *(_QWORD *)(v64 + v110) = v76;
  v109 = *(int *)(v11 + 32);
  *(_QWORD *)(v64 + v109) = v77;
  v86 = *(int *)(v11 + 36);
  *(_BYTE *)(v64 + v86) = v78;
  v87 = *(int *)(v11 + 40);
  *(_BYTE *)(v64 + v87) = v79;
  *(_BYTE *)(v64 + *(int *)(v11 + 44)) = 0;
  swift_bridgeObjectRetain();
  sub_1D2CD3734(v63, type metadata accessor for VisualTranslationModel);
  v88 = &v20[*(int *)(v11 + 20)];
  v89 = *((_OWORD *)v88 + 9);
  v140 = *((_OWORD *)v88 + 8);
  v141 = v89;
  v142 = *((_QWORD *)v88 + 20);
  v90 = *((_OWORD *)v88 + 5);
  v136 = *((_OWORD *)v88 + 4);
  v137 = v90;
  v91 = *((_OWORD *)v88 + 7);
  v138 = *((_OWORD *)v88 + 6);
  v139 = v91;
  v92 = *((_OWORD *)v88 + 3);
  v134 = *((_OWORD *)v88 + 2);
  v135 = v92;
  v93 = *((_OWORD *)v88 + 1);
  v132 = *(_OWORD *)v88;
  v133 = v93;
  v94 = &v20[*(int *)(v11 + 24)];
  sub_1D2D9C6A8();
  if (v95 <= 0.0)
  {
    v96 = v113;
    ((void (*)(uint64_t, uint64_t, uint64_t))v111)(v113, v64, v117);
    v112(v96 + *(int *)(v11 + 24), v94, v116);
    v97 = *(_QWORD *)(v64 + v110);
    v98 = *(_QWORD *)(v64 + v109);
    v99 = *(_BYTE *)(v64 + v86);
    v100 = *(_BYTE *)(v64 + v87);
    v12 = v96;
    v101 = v96 + *(int *)(v11 + 20);
    v102 = v133;
    *(_OWORD *)v101 = v132;
    *(_OWORD *)(v101 + 16) = v102;
    v103 = v137;
    *(_OWORD *)(v101 + 64) = v136;
    *(_OWORD *)(v101 + 80) = v103;
    v104 = v135;
    *(_OWORD *)(v101 + 32) = v134;
    *(_OWORD *)(v101 + 48) = v104;
    *(_QWORD *)(v101 + 160) = v142;
    v105 = v141;
    *(_OWORD *)(v101 + 128) = v140;
    *(_OWORD *)(v101 + 144) = v105;
    v106 = v139;
    *(_OWORD *)(v101 + 96) = v138;
    *(_OWORD *)(v101 + 112) = v106;
    *(_QWORD *)(v96 + *(int *)(v11 + 28)) = v97;
    *(_QWORD *)(v96 + *(int *)(v11 + 32)) = v98;
    *(_BYTE *)(v96 + *(int *)(v11 + 36)) = v99;
    *(_BYTE *)(v96 + *(int *)(v11 + 40)) = v100;
    *(_BYTE *)(v96 + *(int *)(v11 + 44)) = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = v113;
    sub_1D2CDB6B4(v64, v113, type metadata accessor for VisualTranslationModel);
  }
  sub_1D2CD3734(v64, type metadata accessor for VisualTranslationModel);
  swift_getKeyPath();
  swift_getKeyPath();
  v61 = sub_1D2D9C9A8();
  v11 = (uint64_t)v107;
  v58 = *v107;
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v11 = v58;
  if ((result & 1) == 0)
    goto LABEL_25;
LABEL_21:
  if (v59 < *(_QWORD *)(v58 + 16))
  {
    sub_1D2D9BF3C(v12, v58 + v60);
    ((void (*)(uint64_t *, _QWORD))v61)(&v120, 0);
    swift_release();
    swift_release();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2D8939C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t (*v7)(_QWORD);
  void (*v8)(_BYTE *, _QWORD);
  unint64_t *v9;
  unint64_t *v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[32];

  v3 = type metadata accessor for VisualTranslationModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2CDB6B4(a2, (uint64_t)v6, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  v8 = (void (*)(_BYTE *, _QWORD))sub_1D2D9C9A8();
  v10 = v9;
  v11 = *v9;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v10 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_1D2D4AE54(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
    *v10 = v11;
  }
  v14 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    v11 = sub_1D2D4AE54(v13 > 1, v14 + 1, 1, v11);
    *v10 = v11;
  }
  *(_QWORD *)(v11 + 16) = v14 + 1;
  sub_1D2CD1FD4((uint64_t)v6, v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, type metadata accessor for VisualTranslationModel);
  v8(v16, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_1D2D89524()
{
  uint64_t v0;
  void (*v1)(uint64_t *, _QWORD);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = (void (*)(uint64_t *, _QWORD))sub_1D2D9C9A8();
  *v2 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v1(&v5, 0);
  swift_release();
  swift_release();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *v3 = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2D895E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _QWORD *v74;
  int isUniquelyReferenced_nonNull_native;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  _QWORD *v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;

  v100 = type metadata accessor for VisualTranslationModel(0);
  v105 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v94 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v93 = (uint64_t)&v90 - v5;
  MEMORY[0x1E0C80A78](v6);
  v99 = (uint64_t)&v90 - v7;
  MEMORY[0x1E0C80A78](v8);
  v101 = (uint64_t)&v90 - v9;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490);
  MEMORY[0x1E0C80A78](v106);
  v96 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)&v90 - v12;
  MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v90 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v90 - v16;
  v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  v112 = a1;
  swift_beginAccess();
  v95 = v18;
  v19 = *v18;
  v20 = *(_QWORD *)(v19 + 64);
  v102 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v103 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  v107 = v19;
  swift_bridgeObjectRetain();
  v24 = 0;
  v97 = a1;
  v98 = v17;
  if (v23)
    goto LABEL_7;
LABEL_8:
  v26 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
    if (v26 < v103)
    {
      v27 = *(_QWORD *)(v102 + 8 * v26);
      v28 = v24 + 1;
      if (v27)
        goto LABEL_21;
      v28 = v24 + 2;
      if (v24 + 2 >= v103)
        goto LABEL_41;
      v27 = *(_QWORD *)(v102 + 8 * v28);
      if (v27)
        goto LABEL_21;
      v28 = v24 + 3;
      if (v24 + 3 >= v103)
        goto LABEL_41;
      v27 = *(_QWORD *)(v102 + 8 * v28);
      if (v27)
      {
LABEL_21:
        v109 = (v27 - 1) & v27;
        v110 = v28;
        for (i = __clz(__rbit64(v27)) + (v28 << 6); ; i = __clz(__rbit64(v23)) | (v24 << 6))
        {
          v30 = v107;
          v31 = *(_QWORD *)(v107 + 48);
          v32 = sub_1D2D9C6FC();
          v33 = *(_QWORD *)(v32 - 8);
          v104 = *(_QWORD *)(v33 + 72);
          v34 = *(void (**)(void))(v33 + 16);
          ((void (*)(char *, unint64_t, uint64_t))v34)(v17, v31 + v104 * i, v32);
          v35 = *(_QWORD *)(v105 + 72);
          v36 = *(_QWORD *)(v30 + 56) + v35 * i;
          v37 = v106;
          v38 = (uint64_t)&v17[*(int *)(v106 + 48)];
          sub_1D2CDB6B4(v36, v38, type metadata accessor for VisualTranslationModel);
          v39 = v111;
          v40 = v111 + *(int *)(v37 + 48);
          (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v111, v17, v32);
          sub_1D2CD1FD4(v38, v40, type metadata accessor for VisualTranslationModel);
          v41 = *(int *)(v37 + 48);
          v42 = (uint64_t)v108;
          v43 = (uint64_t)&v108[v41];
          ((void (*)(char *, uint64_t, uint64_t))v34)(v108, v39, v32);
          sub_1D2CDB6B4(v40, v43, type metadata accessor for VisualTranslationModel);
          if (!v112[2])
            break;
          v44 = sub_1D2D65098(v42);
          v42 = (uint64_t)v108;
          if ((v45 & 1) == 0)
            break;
          v46 = v35;
          v47 = v108;
          v48 = v99;
          sub_1D2CDB6B4(v112[7] + v44 * v35, v99, type metadata accessor for VisualTranslationModel);
          v49 = v48;
          v50 = v101;
          sub_1D2CD1FD4(v49, v101, type metadata accessor for VisualTranslationModel);
          sub_1D2CD3734(v43, type metadata accessor for VisualTranslationModel);
          v51 = *(void (**)(char *, uint64_t))(v33 + 8);
          v51(v47, v32);
          v52 = (int *)v100;
          if ((*(_BYTE *)(v50 + *(int *)(v100 + 44)) & 1) != 0)
          {
            sub_1D2CD3734(v50, type metadata accessor for VisualTranslationModel);
            sub_1D2CCADA4(v111, &qword_1EFCA9490);
            v17 = v98;
LABEL_6:
            v24 = v110;
            v23 = v109;
            if (!v109)
              goto LABEL_8;
            goto LABEL_7;
          }
          v53 = (uint64_t)&v96[*(int *)(v106 + 48)];
          v34();
          v92 = v53;
          sub_1D2CDB6B4(v40, v53, type metadata accessor for VisualTranslationModel);
          v54 = v50 + v52[5];
          v55 = *(_OWORD *)(v54 + 144);
          v122 = *(_OWORD *)(v54 + 128);
          v123 = v55;
          v124 = *(_QWORD *)(v54 + 160);
          v56 = *(_OWORD *)(v54 + 80);
          v118 = *(_OWORD *)(v54 + 64);
          v119 = v56;
          v57 = *(_OWORD *)(v54 + 112);
          v120 = *(_OWORD *)(v54 + 96);
          v121 = v57;
          v58 = *(_OWORD *)(v54 + 48);
          v116 = *(_OWORD *)(v54 + 32);
          v117 = v58;
          v59 = *(_OWORD *)v54;
          v115 = *(_OWORD *)(v54 + 16);
          v114 = v59;
          v60 = v50 + v52[6];
          sub_1D2D9C6A8();
          v62 = v93;
          if (v61 <= 0.0)
          {
            ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v93, v40, v32);
            v91 = v62 + v52[6];
            v63 = sub_1D2D9C6C0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v91, v60, v63);
            v64 = *(_QWORD *)(v40 + v52[7]);
            v65 = *(_QWORD *)(v40 + v52[8]);
            v66 = *(_BYTE *)(v40 + v52[9]);
            v67 = *(_BYTE *)(v40 + v52[10]);
            v68 = v62 + v52[5];
            v69 = v123;
            *(_OWORD *)(v68 + 128) = v122;
            *(_OWORD *)(v68 + 144) = v69;
            *(_QWORD *)(v68 + 160) = v124;
            v70 = v119;
            *(_OWORD *)(v68 + 64) = v118;
            *(_OWORD *)(v68 + 80) = v70;
            v71 = v121;
            *(_OWORD *)(v68 + 96) = v120;
            *(_OWORD *)(v68 + 112) = v71;
            v72 = v115;
            *(_OWORD *)v68 = v114;
            *(_OWORD *)(v68 + 16) = v72;
            v73 = v117;
            *(_OWORD *)(v68 + 32) = v116;
            *(_OWORD *)(v68 + 48) = v73;
            *(_QWORD *)(v62 + v52[7]) = v64;
            *(_QWORD *)(v62 + v52[8]) = v65;
            *(_BYTE *)(v62 + v52[9]) = v66;
            *(_BYTE *)(v62 + v52[10]) = v67;
            *(_BYTE *)(v62 + v52[11]) = 0;
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_1D2CDB6B4(v40, v93, type metadata accessor for VisualTranslationModel);
          }
          v17 = v98;
          sub_1D2CD1FD4(v62, v94, type metadata accessor for VisualTranslationModel);
          v74 = v97;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v113 = v74;
          v77 = sub_1D2D65098((uint64_t)v96);
          v78 = v74[2];
          v79 = (v76 & 1) == 0;
          v80 = v78 + v79;
          if (__OFADD__(v78, v79))
            goto LABEL_44;
          v81 = v76;
          if (v74[3] >= v80)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1D2CD95F4();
          }
          else
          {
            sub_1D2CD8354(v80, isUniquelyReferenced_nonNull_native);
            v82 = sub_1D2D65098((uint64_t)v96);
            if ((v81 & 1) != (v83 & 1))
              goto LABEL_46;
            v77 = v82;
          }
          v84 = v113;
          if ((v81 & 1) != 0)
          {
            v97 = v113;
            sub_1D2D9BF3C(v94, v113[7] + v77 * v46);
          }
          else
          {
            v113[(v77 >> 6) + 8] |= 1 << v77;
            ((void (*)(unint64_t, char *, uint64_t))v34)(v84[6] + v77 * v104, v96, v32);
            sub_1D2CD1FD4(v94, v84[7] + v77 * v46, type metadata accessor for VisualTranslationModel);
            v85 = v84[2];
            v86 = __OFADD__(v85, 1);
            v87 = v85 + 1;
            if (v86)
              goto LABEL_45;
            v84[2] = v87;
            v97 = v113;
          }
          v24 = v110;
          v23 = v109;
          v88 = v92;
          swift_bridgeObjectRelease();
          v51(v96, v32);
          sub_1D2CD3734(v101, type metadata accessor for VisualTranslationModel);
          sub_1D2CCADA4(v111, &qword_1EFCA9490);
          sub_1D2CD3734(v88, type metadata accessor for VisualTranslationModel);
          if (!v23)
            goto LABEL_8;
LABEL_7:
          v109 = (v23 - 1) & v23;
          v110 = v24;
        }
        sub_1D2CCADA4(v111, &qword_1EFCA9490);
        sub_1D2CD3734(v43, type metadata accessor for VisualTranslationModel);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v42, v32);
        goto LABEL_6;
      }
      v29 = v24 + 4;
      if (v24 + 4 < v103)
      {
        v27 = *(_QWORD *)(v102 + 8 * v29);
        if (v27)
        {
          v28 = v24 + 4;
          goto LABEL_21;
        }
        while (1)
        {
          v28 = v29 + 1;
          if (__OFADD__(v29, 1))
            goto LABEL_43;
          if (v28 >= v103)
            break;
          v27 = *(_QWORD *)(v102 + 8 * v28);
          ++v29;
          if (v27)
            goto LABEL_21;
        }
      }
    }
LABEL_41:
    swift_release();
    *v95 = v97;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1D2D9E568();
  __break(1u);
  return result;
}

uint64_t sub_1D2D89EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586E08);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  if (qword_1EFCA54A8 != -1)
    swift_once();
  v15 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EFCB2600);
  v16 = sub_1D2D9C8DC();
  v17 = sub_1D2D9E04C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v32 = v10;
    v19 = v1;
    v20 = v8;
    v21 = v9;
    v22 = v14;
    v23 = v11;
    v24 = v4;
    v25 = v18;
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1D2CC0000, v16, v17, "User confirmed first use consent, continuing visual translation", v18, 2u);
    v26 = v25;
    v4 = v24;
    v11 = v23;
    v14 = v22;
    v9 = v21;
    v8 = v20;
    v1 = v19;
    MEMORY[0x1D8248974](v26, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  v33 = 0;
  swift_retain();
  sub_1D2D9C9C0();
  v27 = v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
  swift_beginAccess();
  sub_1D2CCAD60(v27, (uint64_t)v7, &qword_1ED586E08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D2CCADA4((uint64_t)v7, &qword_1ED586E08);
  sub_1D2CD1FD4((uint64_t)v7, (uint64_t)v14, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  v29 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
  sub_1D2CDB6B4((uint64_t)v14, (uint64_t)v11, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  v30 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = v1;
  sub_1D2CD1FD4((uint64_t)v11, (uint64_t)v31 + v30, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  swift_retain();
  sub_1D2D06E78((uint64_t)v4, (uint64_t)&unk_1EFCA9460, (uint64_t)v31);
  swift_release();
  return sub_1D2CD3734((uint64_t)v14, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
}

uint64_t sub_1D2D8A230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = sub_1D2D9C6FC();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8A294()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(uint64_t **)(v0 + 32);
  v2 = *v1;
  v3 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  v4 = (uint64_t)v1 + *(int *)(v3 + 20);
  v5 = (uint64_t)v1 + *(int *)(v3 + 24);
  *(_BYTE *)(v0 + 88) = 1;
  sub_1D2D9C6F0();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_1D2D8A334;
  return sub_1D2D8A604(v2, v4, v5, (_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1D2D8A334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v4[6] + 8))(v4[7], v4[5]);
  }
  else
  {
    v6 = v4[6];
    v5 = v4[7];
    v7 = v4[5];
    v4[10] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  return swift_task_switch();
}

uint64_t sub_1D2D8A3C8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8A404()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8A444(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v7 = sub_1D2D9C6FC();
  *(_QWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  *(_BYTE *)(v5 + 89) = *a4;
  return swift_task_switch();
}

uint64_t sub_1D2D8A4B4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v0 + 89);
  sub_1D2D9C6F0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8A520;
  return sub_1D2D8A604(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1D2D8A520(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 80) = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 56) + 8))(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 48));
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1D2D8A5D0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8A604(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 432) = a5;
  *(_QWORD *)(v6 + 440) = v5;
  *(_QWORD *)(v6 + 416) = a2;
  *(_QWORD *)(v6 + 424) = a3;
  *(_QWORD *)(v6 + 408) = a1;
  type metadata accessor for TextDiagnosticsModel();
  *(_QWORD *)(v6 + 448) = swift_task_alloc();
  v8 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v6 + 456) = v8;
  *(_QWORD *)(v6 + 464) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 472) = swift_task_alloc();
  *(_QWORD *)(v6 + 480) = swift_task_alloc();
  *(_QWORD *)(v6 + 488) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B8);
  *(_QWORD *)(v6 + 504) = v9;
  *(_QWORD *)(v6 + 512) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 520) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B0);
  *(_QWORD *)(v6 + 528) = v10;
  *(_QWORD *)(v6 + 536) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 544) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586E08);
  *(_QWORD *)(v6 + 552) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  *(_QWORD *)(v6 + 560) = swift_task_alloc();
  *(_QWORD *)(v6 + 568) = swift_task_alloc();
  *(_QWORD *)(v6 + 576) = swift_task_alloc();
  *(_QWORD *)(v6 + 584) = swift_task_alloc();
  *(_BYTE *)(v6 + 666) = *a4;
  return swift_task_switch();
}

uint64_t sub_1D2D8A7A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  os_log_type_t v40;
  NSObject *v41;
  uint64_t v42;

  if (qword_1ED587858 != -1)
    swift_once();
  v1 = v0[73];
  v2 = v0[72];
  v4 = v0[52];
  v3 = v0[53];
  v5 = sub_1D2D9C8F4();
  v0[74] = v5;
  v0[75] = __swift_project_value_buffer(v5, (uint64_t)qword_1ED5886E8);
  sub_1D2CCAD60(v4, v1, &qword_1ED587850);
  sub_1D2CCAD60(v3, v2, &qword_1ED587850);
  swift_bridgeObjectRetain_n();
  v6 = sub_1D2D9C8DC();
  v7 = sub_1D2D9E04C();
  if (os_log_type_enabled(v6, v7))
  {
    v40 = v7;
    v8 = v0[51];
    v9 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v42 = v39;
    *(_DWORD *)v9 = 134349570;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_1D2D9E3AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v11 = v0[73];
    v12 = v0[71];
    swift_bridgeObjectRelease();
    v0[48] = v10;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_1D2CCAD60(v11, v12, &qword_1ED587850);
    v13 = sub_1D2D9C7EC();
    v14 = *(_QWORD *)(v13 - 8);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    v15 = v38(v12, 1, v13);
    v16 = v0[71];
    v41 = v6;
    if (v15 == 1)
    {
      sub_1D2CCADA4(v16, &qword_1ED587850);
      v17 = 0;
      v18 = 0;
    }
    else
    {
      v0[35] = sub_1D2D9C714();
      v0[36] = v21;
      v0[33] = 45;
      v0[34] = 0xE100000000000000;
      v0[27] = 95;
      v0[28] = 0xE100000000000000;
      sub_1D2CD1430();
      v17 = sub_1D2D9E1E4();
      v18 = v22;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
    }
    v23 = v0[73];
    v24 = v0[72];
    v25 = v0[70];
    v0[25] = v17;
    v0[26] = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFCA92F0);
    v26 = sub_1D2D9DD28();
    v0[49] = sub_1D2CF78E0(v26, v27, &v42);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v23, &qword_1ED587850);
    *(_WORD *)(v9 + 22) = 2082;
    sub_1D2CCAD60(v24, v25, &qword_1ED587850);
    v28 = v38(v25, 1, v13);
    v29 = v0[70];
    if (v28 == 1)
    {
      sub_1D2CCADA4(v0[70], &qword_1ED587850);
      v30 = 0;
      v31 = 0;
    }
    else
    {
      v0[41] = sub_1D2D9C714();
      v0[42] = v32;
      v0[39] = 45;
      v0[40] = 0xE100000000000000;
      v0[37] = 95;
      v0[38] = 0xE100000000000000;
      sub_1D2CD1430();
      v30 = sub_1D2D9E1E4();
      v31 = v33;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v29, v13);
    }
    v34 = v0[72];
    v0[43] = v30;
    v0[44] = v31;
    v35 = sub_1D2D9DD28();
    v0[46] = sub_1D2CF78E0(v35, v36, &v42);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v34, &qword_1ED587850);
    _os_log_impl(&dword_1D2CC0000, v41, v40, "Got request to translate %{public}ld observations; sourceLocale: %{public}s; targetLocale: %{public}s",
      (uint8_t *)v9,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v39, -1, -1);
    MEMORY[0x1D8248974](v9, -1, -1);

  }
  else
  {
    v19 = v0[73];
    v20 = v0[72];
    swift_bridgeObjectRelease_n();
    sub_1D2CCADA4(v19, &qword_1ED587850);
    sub_1D2CCADA4(v20, &qword_1ED587850);

  }
  v0[76] = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(v0[51], 1, v0[52], v0[53]);
  v0[77] = sub_1D2D9DEFC();
  v0[78] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8AD10()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 440);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = (void (*)(uint64_t, _QWORD))sub_1D2D9C9A8();
  *v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v2(v0 + 120, 0);
  swift_release();
  swift_release();
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *v4 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D8AE04()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = (char *)v0 + 665;
  v0[2] = v0;
  v0[3] = sub_1D2D8AEB0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D2D87560;
  v3[3] = &block_descriptor_9;
  v3[4] = v2;
  objc_msgSend(v1, sel_shouldPresentSystemFirstUseConsentWithDedicatedMachPort_completion_, 1, v3);
  return swift_continuation_await();
}

uint64_t sub_1D2D8AEB0()
{
  return swift_task_switch();
}

uint64_t sub_1D2D8AEFC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;

  if (*(_BYTE *)(v0 + 665) == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_1EFCA54A8 != -1)
      swift_once();
    __swift_project_value_buffer(*(_QWORD *)(v0 + 592), (uint64_t)qword_1EFCB2600);
    v1 = sub_1D2D9C8DC();
    v2 = sub_1D2D9E01C();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1D2CC0000, v1, v2, "Present first use experience and delay translation", v3, 2u);
      MEMORY[0x1D8248974](v3, -1, -1);
    }
    v4 = *(_QWORD **)(v0 + 552);
    v5 = *(_QWORD *)(v0 + 440);
    v7 = *(_QWORD *)(v0 + 416);
    v6 = *(_QWORD *)(v0 + 424);
    v8 = *(_QWORD *)(v0 + 408);

    swift_getKeyPath();
    swift_getKeyPath();
    *(_BYTE *)(v0 + 664) = 1;
    swift_retain();
    sub_1D2D9C9C0();
    v9 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
    sub_1D2CCAD60(v7, (uint64_t)v4 + *(int *)(v9 + 20), &qword_1ED587850);
    sub_1D2CCAD60(v6, (uint64_t)v4 + *(int *)(v9 + 24), &qword_1ED587850);
    *v4 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    v10 = v5 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D2D9C340((uint64_t)v4, v10, &qword_1ED586E08);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 608);
    v13 = *(_BYTE *)(v0 + 666);
    v14 = *(_QWORD *)(v0 + 520);
    v15 = *(_QWORD *)(v0 + 504);
    v16 = *(_QWORD *)(v0 + 512);
    *(_QWORD *)(v0 + 376) = MEMORY[0x1E0DEE9D8];
    type metadata accessor for VisualTranslationService();
    v18 = v13;
    static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v12, 0, &v18, v14);
    swift_bridgeObjectRelease();
    sub_1D2D9DF38();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 632) = v17;
    *v17 = v0;
    v17[1] = sub_1D2D8B270;
    return sub_1D2D9DF98();
  }
}

uint64_t sub_1D2D8B270()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 640) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D8B2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 456);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 528));
    v32 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v32);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 480);
    v5 = *(_QWORD *)(v0 + 488);
    sub_1D2CD1FD4(v1, v5, type metadata accessor for VisualTranslationModel);
    sub_1D2CDB6B4(v5, v4, type metadata accessor for VisualTranslationModel);
    v6 = (objc_class *)type metadata accessor for VisualTranslationResult(0);
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid];
    v9 = sub_1D2D9C6FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v4, v9);
    v10 = *(_QWORD *)(v4 + *(int *)(v2 + 28));
    v11 = v7;
    v12 = Array<A>.targetParagraph.getter(v10);
    v13 = (uint64_t *)&v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
    *v13 = v12;
    v13[1] = v14;
    v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1D2D7175C() & 1;
    v15 = (_OWORD *)(v4 + *(int *)(v2 + 20));
    *(_OWORD *)&v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v15[1];
    *(_OWORD *)&v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v15[2];
    *(_OWORD *)&v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v15[3];
    *(_OWORD *)&v11[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v15[4];

    *(_QWORD *)(v0 + 232) = v11;
    *(_QWORD *)(v0 + 240) = v6;
    objc_msgSendSuper2((objc_super *)(v0 + 232), sel_init);
    v16 = sub_1D2CD3734(v4, type metadata accessor for VisualTranslationModel);
    MEMORY[0x1D8247990](v16);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 376) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 376) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1D2D9DE84();
    sub_1D2D9DE9C();
    sub_1D2D9DE78();
    if ((sub_1D2D70FEC() & 1) != 0)
    {
      *(_QWORD *)(v0 + 648) = sub_1D2D9DEF0();
      sub_1D2D9DEB4();
      return swift_task_switch();
    }
    else
    {
      sub_1D2CDB6B4(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 472), type metadata accessor for VisualTranslationModel);
      v17 = sub_1D2D9C8DC();
      v18 = sub_1D2D9E028();
      v19 = os_log_type_enabled(v17, v18);
      v20 = *(_QWORD *)(v0 + 488);
      if (v19)
      {
        v22 = *(_QWORD *)(v0 + 472);
        v21 = *(_QWORD *)(v0 + 480);
        v23 = *(_QWORD *)(v0 + 448);
        v33 = *(_QWORD *)(v0 + 488);
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v34 = v25;
        *(_DWORD *)v24 = 136315138;
        sub_1D2CDB6B4(v22, v21, type metadata accessor for VisualTranslationModel);
        TextDiagnosticsModel.init(model:)(v21, v23);
        *(_QWORD *)(v0 + 248) = TextDiagnosticsModel.json.getter();
        *(_QWORD *)(v0 + 256) = v26;
        sub_1D2D9DDA0();
        v27 = *(_QWORD *)(v0 + 248);
        v28 = *(_QWORD *)(v0 + 256);
        sub_1D2CD3734(v23, (uint64_t (*)(_QWORD))type metadata accessor for TextDiagnosticsModel);
        *(_QWORD *)(v0 + 400) = sub_1D2CF78E0(v27, v28, &v34);
        sub_1D2D9E1B4();
        swift_bridgeObjectRelease();
        sub_1D2CD3734(v22, type metadata accessor for VisualTranslationModel);
        _os_log_impl(&dword_1D2CC0000, v17, v18, "No translation for %s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8248974](v25, -1, -1);
        MEMORY[0x1D8248974](v24, -1, -1);

        v29 = v33;
      }
      else
      {
        v30 = *(_QWORD *)(v0 + 472);

        sub_1D2CD3734(v30, type metadata accessor for VisualTranslationModel);
        v29 = v20;
      }
      sub_1D2CD3734(v29, type metadata accessor for VisualTranslationModel);
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 656) = v31;
      *v31 = v0;
      v31[1] = sub_1D2D8B920;
      return sub_1D2D9DF98();
    }
  }
}

uint64_t sub_1D2D8B80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 440);
  swift_release();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  sub_1D2D9DAAC();
  sub_1D2D9CCC0();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8B8A8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1D2CD3734(*(_QWORD *)(v0 + 488), type metadata accessor for VisualTranslationModel);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8B920;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D8B920()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 640) = 0;
  return swift_task_switch();
}

uint64_t sub_1D2D8B98C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 528));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8BA88(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v7 = sub_1D2D9C6FC();
  *(_QWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  *(_BYTE *)(v5 + 81) = *a4;
  return swift_task_switch();
}

uint64_t sub_1D2D8BAF8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v0 + 81);
  sub_1D2D9C6F0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8BB64;
  return sub_1D2D8BBD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1D2D8BB64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 64);
  v2 = *(_QWORD *)(*v0 + 48);
  v3 = *(_QWORD *)(*v0 + 56);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1D2D8BBD0(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v6 + 264) = a5;
  *(_QWORD *)(v6 + 272) = v5;
  *(_QWORD *)(v6 + 248) = a2;
  *(_QWORD *)(v6 + 256) = a3;
  *(_QWORD *)(v6 + 240) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA71F0);
  *(_QWORD *)(v6 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  *(_QWORD *)(v6 + 288) = swift_task_alloc();
  v8 = type metadata accessor for TextModel();
  *(_QWORD *)(v6 + 296) = v8;
  *(_QWORD *)(v6 + 304) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 312) = swift_task_alloc();
  *(_QWORD *)(v6 + 320) = swift_task_alloc();
  v9 = sub_1D2D9C6FC();
  *(_QWORD *)(v6 + 328) = v9;
  *(_QWORD *)(v6 + 336) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 344) = swift_task_alloc();
  *(_QWORD *)(v6 + 352) = swift_task_alloc();
  v10 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v6 + 360) = v10;
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 376) = swift_task_alloc();
  *(_QWORD *)(v6 + 384) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  *(_QWORD *)(v6 + 392) = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587098);
  *(_QWORD *)(v6 + 400) = v11;
  *(_QWORD *)(v6 + 408) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 416) = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B8);
  *(_QWORD *)(v6 + 424) = v12;
  *(_QWORD *)(v6 + 432) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 440) = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5870B0);
  *(_QWORD *)(v6 + 448) = v13;
  *(_QWORD *)(v6 + 456) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 464) = swift_task_alloc();
  v14 = sub_1D2D9C7EC();
  *(_QWORD *)(v6 + 472) = v14;
  *(_QWORD *)(v6 + 480) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 488) = swift_task_alloc();
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  *(_BYTE *)(v6 + 696) = *a4;
  return swift_task_switch();
}

uint64_t sub_1D2D8BDEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED587858 != -1)
    swift_once();
  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[59];
  v4 = v0[60];
  v6 = v0[31];
  v5 = v0[32];
  v7 = sub_1D2D9C8F4();
  v0[63] = __swift_project_value_buffer(v7, (uint64_t)qword_1ED5886E8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v1, v6, v3);
  v8(v2, v5, v3);
  swift_bridgeObjectRetain();
  v9 = sub_1D2D9C8DC();
  v10 = sub_1D2D9E028();
  v11 = os_log_type_enabled(v9, v10);
  v13 = v0[61];
  v12 = v0[62];
  v15 = v0[59];
  v14 = v0[60];
  v16 = v0[30];
  if (v11)
  {
    type = v10;
    v17 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v26;
    *(_DWORD *)v17 = 134218498;
    v0[27] = *(_QWORD *)(v16 + 16);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    sub_1D2CC66E4((unint64_t *)&qword_1EFCA6E88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
    v18 = sub_1D2D9E508();
    v0[28] = sub_1D2CF78E0(v18, v19, &v27);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v20(v12, v15);
    *(_WORD *)(v17 + 22) = 2082;
    v21 = sub_1D2D9E508();
    v0[29] = sub_1D2CF78E0(v21, v22, &v27);
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    v20(v13, v15);
    _os_log_impl(&dword_1D2CC0000, v9, type, "Translate %ld items from source %{public}s to target %{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v26, -1, -1);
    MEMORY[0x1D8248974](v17, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v23(v12, v15);
    v23(v13, v15);

  }
  v0[64] = sub_1D2D9DEFC();
  v0[65] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8C108()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[34];
  swift_release();
  v2 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  v0[66] = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  v3 = (_QWORD *)(v1 + v2);
  swift_beginAccess();
  v0[67] = *v3;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1D2D8C17C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0[30];
  v9 = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v7 = sub_1D2D9909C(MEMORY[0x1E0DEE9E0]);
    if (!v7)
    {
      swift_bridgeObjectRelease();
      v0[84] = sub_1D2D9DEF0();
      sub_1D2D9DEB4();
      return swift_task_switch();
    }
    goto LABEL_7;
  }
  v3 = *(_QWORD *)(sub_1D2D9DC14() - 8);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1D2D752B0((uint64_t)&v9, v4, v0[67], v0[31], v0[32]);
    v0[71] = 0;
    v4 += v5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v9;
  v0[68] = v9;
  v7 = sub_1D2D9909C(v6);
  if (v7)
  {
LABEL_7:
    v0[69] = v7;
    swift_bridgeObjectRelease();
    v0[70] = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  v0[72] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8C34C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 552);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 208) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8C488()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 544);
  swift_release();
  sub_1D2D895E8(v1);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D8C4DC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9308);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5877B0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8C57C;
  return sub_1D2D9E334();
}

uint64_t sub_1D2D8C57C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8C5D0()
{
  _QWORD *v0;

  v0[74] = v0[25];
  v0[75] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8C638()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 592);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 192) = v1;
  swift_retain();
  sub_1D2D9C9C0();
  return swift_task_switch();
}

uint64_t sub_1D2D8C6D0()
{
  _QWORD *v0;

  v0[76] = *(_QWORD *)(v0[34] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_translationInProgressModels);
  v0[77] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8C744()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[66];
  v2 = v0[34];
  swift_release();
  v0[78] = *(_QWORD *)(v2 + v1);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1D2D8C794()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 632) = sub_1D2D9320C(*(_QWORD *)(v0 + 624), &qword_1ED587358, type metadata accessor for VisualTranslationModel, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1D2D98694);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D8C7FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[79];
  v2 = v0[76];
  swift_retain();
  v3 = sub_1D2D98A80(v1, v2);
  v0[80] = v3;
  swift_release();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v0[46];
    v12 = v0[42];
    v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v7 = v0[48];
      v9 = (char *)v0[43];
      v8 = v0[44];
      v10 = v0[41];
      sub_1D2CDB6B4(v6, v7, type metadata accessor for VisualTranslationModel);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, v7, v10);
      swift_beginAccess();
      sub_1D2D9519C(v8, v9);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v10);
      swift_endAccess();
      sub_1D2CD3734(v7, type metadata accessor for VisualTranslationModel);
      v6 += v13;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D8C970()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_BYTE *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 440);
  v13 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 416);
  v12 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 408);
  v11 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = sub_1D2D88838();
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  *(_BYTE *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x1E0DF0A50], v11);
  sub_1D2D9DFA4();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  sub_1D2D9DF38();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v12);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 648) = v9;
  *v9 = v0;
  v9[1] = sub_1D2D8CABC;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D8CABC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8CB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 368) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 376);
    sub_1D2CD1FD4(v1, v4, type metadata accessor for VisualTranslationModel);
    v5 = *(_QWORD *)(v4 + *(int *)(v2 + 28));
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = *(_QWORD *)(v0 + 304);
      v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v9 = *(_QWORD *)(v7 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v10 = *(_QWORD *)(v0 + 320);
        v11 = *(_QWORD *)(v0 + 296);
        sub_1D2CDB6B4(v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v12 = *(_QWORD *)(v10 + *(int *)(v11 + 44));
        v13 = *(_QWORD *)(v0 + 320);
        if (v12)
          break;
        v14 = *(_QWORD *)(v0 + 296);
        v15 = (uint64_t *)(v13 + *(int *)(v14 + 24));
        v17 = *v15;
        v16 = v15[1];
        v18 = v17 & 0xFFFFFFFFFFFFLL;
        if (!((v16 & 0x2000000000000000) != 0 ? HIBYTE(v16) & 0xF : v18))
          break;
        v21 = *(_QWORD *)(v0 + 472);
        v20 = *(_QWORD *)(v0 + 480);
        v22 = *(_QWORD *)(v0 + 288);
        sub_1D2CCAD60(v13 + *(int *)(v14 + 28), v22, &qword_1ED587850);
        LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v21);
        sub_1D2CCADA4(v22, &qword_1ED587850);
        v13 = *(_QWORD *)(v0 + 320);
        if ((_DWORD)v21 == 1)
          break;
        v23 = *(_QWORD *)(v0 + 296);
        v24 = (_QWORD *)(v13 + *(int *)(v23 + 32));
        v25 = v24[1];
        if (!v25)
          break;
        v26 = *v24 & 0xFFFFFFFFFFFFLL;
        if (!((v25 & 0x2000000000000000) != 0 ? HIBYTE(v25) & 0xF : v26))
          break;
        v28 = *(_QWORD *)(v0 + 312);
        sub_1D2CDB6B4(*(_QWORD *)(v0 + 320), v28, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v29 = *(_QWORD *)(v28 + *(int *)(v23 + 44));
        sub_1D2CD3734(v28, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2CD3734(v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        if (v29)
          goto LABEL_21;
        v8 += v9;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      v30 = *(_QWORD *)(v0 + 312);
      sub_1D2CDB6B4(v13, v30, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734(v30, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734(v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_21:
      swift_bridgeObjectRelease();
      sub_1D2CD3734(*(_QWORD *)(v0 + 376), type metadata accessor for VisualTranslationModel);
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 664) = v31;
      *v31 = v0;
      v31[1] = sub_1D2D8D00C;
      return sub_1D2D9DF98();
    }
    else
    {
LABEL_19:
      *(_QWORD *)(v0 + 656) = sub_1D2D9DEF0();
      sub_1D2D9DEB4();
      return swift_task_switch();
    }
  }
}

uint64_t sub_1D2D8CEB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);
  swift_release();
  sub_1D2D88B04(v1);
  return swift_task_switch();
}

uint64_t sub_1D2D8CF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 280);
  swift_beginAccess();
  sub_1D2D97F10(v1, v2);
  sub_1D2CCADA4(v2, &qword_1EFCA71F0);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_1D2D8CF94()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1D2CD3734(*(_QWORD *)(v0 + 376), type metadata accessor for VisualTranslationModel);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 664) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8D00C;
  return sub_1D2D9DF98();
}

uint64_t sub_1D2D8D00C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8D070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 272);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = (void (*)(uint64_t, _QWORD))sub_1D2D9C9A8();
  *v4 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v3(v0 + 16, 0);
  swift_release();
  swift_release();
  *(_QWORD *)(v2 + v1) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8D1E8()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD))(v0[57] + 8))(v0[58], v0[56]);
  v1 = (void *)v0[22];
  v0[85] = v1;
  v2 = v1;
  v3 = sub_1D2D9C8DC();
  v4 = sub_1D2D9E034();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = sub_1D2D9C5F4();
    v0[23] = v7;
    sub_1D2D9E1B4();
    *v6 = v7;

    _os_log_impl(&dword_1D2CC0000, v3, v4, "Failed to translate in stream: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v6, -1, -1);
    MEMORY[0x1D8248974](v5, -1, -1);
  }
  else
  {

  }
  return swift_task_switch();
}

uint64_t sub_1D2D8D354()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 608);
  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D8D3B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 688) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8D414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 272);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = (void (*)(uint64_t, _QWORD))sub_1D2D9C9A8();
  *v4 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v3(v0 + 48, 0);
  swift_release();
  swift_release();
  *(_QWORD *)(v2 + v1) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2D8D4E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8D5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9480);
  v3[25] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9308);
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9488);
  v3[29] = v5;
  v3[30] = *(_QWORD *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v6 = sub_1D2D9C6FC();
  v3[36] = v6;
  v3[37] = *(_QWORD *)(v6 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v7 = *(_QWORD *)(type metadata accessor for VisualTranslationModel(0) - 8);
  v3[40] = v7;
  v3[41] = *(_QWORD *)(v7 + 64);
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490);
  v3[44] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[45] = v9;
  v3[46] = *(_QWORD *)(v9 + 64);
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8D798()
{
  _QWORD *v0;

  v0[19] = MEMORY[0x1E0DEE9E8];
  v0[50] = sub_1D2D9DEFC();
  v0[51] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8D810()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2D9C9B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 160);
  return swift_task_switch();
}

uint64_t sub_1D2D8D8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 320);
    v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v5 = v1 + v4;
    v29 = v4;
    v30 = *(_QWORD *)(v0 + 296);
    v28 = (*(_QWORD *)(v0 + 328) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_QWORD *)(v3 + 72);
    do
    {
      v8 = *(_QWORD *)(v0 + 336);
      v9 = *(_QWORD *)(v0 + 344);
      v10 = *(char **)(v0 + 304);
      v11 = *(_QWORD *)(v0 + 312);
      v12 = *(_QWORD *)(v0 + 280);
      v13 = *(_QWORD *)(v0 + 288);
      v14 = *(_QWORD *)(v0 + 272);
      v31 = v2;
      v32 = *(_QWORD *)(v0 + 192);
      v33 = v5;
      sub_1D2CDB6B4(v5, v9, type metadata accessor for VisualTranslationModel);
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v10, v9, v13);
      sub_1D2D9519C(v11, v10);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v11, v13);
      v15 = sub_1D2D9DF14();
      v16 = *(_QWORD *)(v15 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
      sub_1D2CDB6B4(v9, v8, type metadata accessor for VisualTranslationModel);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = 0;
      v18 = (_QWORD *)(v17 + 16);
      *(_QWORD *)(v17 + 24) = 0;
      sub_1D2CD1FD4(v8, v17 + v29, type metadata accessor for VisualTranslationModel);
      *(_QWORD *)(v17 + v28) = v32;
      sub_1D2CCAD60(v12, v14, (uint64_t *)&unk_1ED5878F0);
      LODWORD(v14) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
      swift_retain();
      v19 = *(_QWORD *)(v0 + 272);
      if ((_DWORD)v14 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 272), (uint64_t *)&unk_1ED5878F0);
        if (!*v18)
          goto LABEL_8;
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
        if (!*v18)
        {
LABEL_8:
          v20 = 0;
          v22 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v20 = sub_1D2D9DEB4();
      v22 = v21;
      swift_unknownObjectRelease();
LABEL_9:
      v23 = **(_QWORD **)(v0 + 184);
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = &unk_1EFCA94A8;
      *(_QWORD *)(v24 + 24) = v17;
      v25 = v22 | v20;
      if (v22 | v20)
      {
        v25 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v20;
        *(_QWORD *)(v0 + 40) = v22;
      }
      v6 = *(_QWORD *)(v0 + 344);
      v7 = *(_QWORD *)(v0 + 280);
      *(_QWORD *)(v0 + 128) = 1;
      *(_QWORD *)(v0 + 136) = v25;
      *(_QWORD *)(v0 + 144) = v23;
      swift_task_create();
      swift_release();
      sub_1D2CCADA4(v7, (uint64_t *)&unk_1ED5878F0);
      sub_1D2CD3734(v6, type metadata accessor for VisualTranslationModel);
      v5 = v33 + v27;
      v2 = v31 - 1;
    }
    while (v31 != 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 424) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8DBE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *(_QWORD *)(v0 + 432) = *v2;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

void sub_1D2D8DC58()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, unint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;

  v1 = 0;
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v2 + 64);
  v47 = v2 + 64;
  v51 = v2;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v49 = *(_QWORD *)(v0 + 360);
  v53 = *(_QWORD *)(v0 + 352);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v50 = *(_QWORD *)(v0 + 320);
  v6 = v5 & v3;
  v56 = *(_QWORD *)(v0 + 296);
  v48 = (unint64_t)(63 - v4) >> 6;
  while (1)
  {
    if (v6)
    {
      v54 = (v6 - 1) & v6;
      v55 = v1;
      v8 = __clz(__rbit64(v6)) | (v1 << 6);
      goto LABEL_23;
    }
    v9 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v9 >= v48)
      goto LABEL_38;
    v10 = *(_QWORD *)(v47 + 8 * v9);
    v11 = v1 + 1;
    if (!v10)
    {
      v11 = v1 + 2;
      if (v1 + 2 >= v48)
        goto LABEL_38;
      v10 = *(_QWORD *)(v47 + 8 * v11);
      if (!v10)
      {
        v11 = v1 + 3;
        if (v1 + 3 >= v48)
          goto LABEL_38;
        v10 = *(_QWORD *)(v47 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_22:
    v54 = (v10 - 1) & v10;
    v55 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
    v13 = *(_QWORD *)(v0 + 384);
    v14 = *(_QWORD *)(v0 + 392);
    v15 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v56 + 72);
    v17 = *(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16);
    v17(v14, *(_QWORD *)(v51 + 48) + v16 * v8, v15);
    v18 = v14 + *(int *)(v53 + 48);
    sub_1D2CDB6B4(*(_QWORD *)(v51 + 56) + *(_QWORD *)(v50 + 72) * v8, v18, type metadata accessor for VisualTranslationModel);
    v19 = v13 + *(int *)(v53 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v13, v14, v15);
    v52 = v19;
    sub_1D2CD1FD4(v18, v19, type metadata accessor for VisualTranslationModel);
    v20 = *(_QWORD *)(v0 + 152);
    if (!*(_QWORD *)(v20 + 16))
      goto LABEL_29;
    sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    swift_bridgeObjectRetain();
    v21 = sub_1D2D9DC44();
    v22 = -1 << *(_BYTE *)(v20 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
    {
LABEL_28:
      swift_bridgeObjectRelease();
LABEL_29:
      v29 = *(_QWORD *)(v0 + 376);
      v28 = *(_QWORD *)(v0 + 384);
      v30 = *(_QWORD *)(v0 + 288);
      v31 = *(_QWORD *)(v0 + 256);
      v32 = *(_QWORD *)(v0 + 264);
      v33 = sub_1D2D9DF14();
      v34 = *(_QWORD *)(v33 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v32, 1, 1, v33);
      v35 = v29 + *(int *)(v53 + 48);
      v17(v29, v28, v30);
      sub_1D2CDB6B4(v52, v35, type metadata accessor for VisualTranslationModel);
      v36 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = 0;
      *(_QWORD *)(v37 + 24) = 0;
      sub_1D2CD2018(v29, v37 + v36, &qword_1EFCA9490);
      sub_1D2CCAD60(v32, v31, (uint64_t *)&unk_1ED5878F0);
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33);
      v39 = *(_QWORD *)(v0 + 256);
      if (v38 == 1)
      {
        sub_1D2CCADA4(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ED5878F0);
      }
      else
      {
        sub_1D2D9DF08();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v33);
      }
      v6 = v54;
      v1 = v55;
      if (*(_QWORD *)(v37 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v40 = sub_1D2D9DEB4();
        v42 = v41;
        swift_unknownObjectRelease();
      }
      else
      {
        v40 = 0;
        v42 = 0;
      }
      v43 = **(_QWORD **)(v0 + 184);
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = &unk_1EFCA94C0;
      *(_QWORD *)(v44 + 24) = v37;
      v45 = v42 | v40;
      if (v42 | v40)
      {
        v45 = v0 + 48;
        *(_QWORD *)(v0 + 48) = 0;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = v40;
        *(_QWORD *)(v0 + 72) = v42;
      }
      v7 = *(_QWORD *)(v0 + 264);
      *(_QWORD *)(v0 + 104) = 1;
      *(_QWORD *)(v0 + 112) = v45;
      *(_QWORD *)(v0 + 120) = v43;
      swift_task_create();
      swift_release();
      sub_1D2CCADA4(v7, (uint64_t *)&unk_1ED5878F0);
      goto LABEL_6;
    }
    v24 = ~v22;
    while (1)
    {
      v25 = *(_QWORD *)(v0 + 312);
      v26 = *(_QWORD *)(v0 + 288);
      v17(v25, *(_QWORD *)(v20 + 48) + v23 * v16, v26);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v27 = sub_1D2D9DC8C();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v25, v26);
      if ((v27 & 1) != 0)
        break;
      v23 = (v23 + 1) & v24;
      if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    v6 = v54;
    v1 = v55;
LABEL_6:
    sub_1D2CCADA4(*(_QWORD *)(v0 + 384), &qword_1EFCA9490);
  }
  v12 = v1 + 4;
  if (v1 + 4 >= v48)
  {
LABEL_38:
    swift_release();
    *(_QWORD *)(v0 + 168) = MEMORY[0x1E0DEE9D8];
    sub_1D2D9DED8();
    *(_QWORD *)(v0 + 440) = sub_1D2CC6C74(&qword_1EFCA94D8, &qword_1EFCA9488, MEMORY[0x1E0DF0660]);
    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v46;
    *v46 = v0;
    v46[1] = sub_1D2D8E228;
    sub_1D2D9DEE4();
    return;
  }
  v10 = *(_QWORD *)(v47 + 8 * v12);
  if (v10)
  {
    v11 = v1 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v48)
      goto LABEL_38;
    v10 = *(_QWORD *)(v47 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_22;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1D2D8E228()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[30];
    v3 = v2[31];
    v5 = v2[29];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1D2D8E2B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 48))(v1, 1, *(_QWORD *)(v0 + 208)) == 1)
  {
    v2 = *(_QWORD **)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    sub_1D2CCADA4(v1, &qword_1EFCA9480);
    *v2 = *(_QWORD *)(v0 + 168);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_1D2CD2018(v1, *(_QWORD *)(v0 + 224), &qword_1EFCA9308);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v4;
    *v4 = v0;
    v4[1] = sub_1D2D8E450;
    return sub_1D2D8E9D0(v0 + 168, *(_QWORD *)(v0 + 224));
  }
}

uint64_t sub_1D2D8E450()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[30];
    v3 = v2[31];
    v5 = v2[28];
    v6 = v2[29];
    swift_bridgeObjectRelease();
    sub_1D2CCADA4(v5, &qword_1EFCA9308);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  }
  else
  {
    sub_1D2CCADA4(v2[28], &qword_1EFCA9308);
    return swift_task_switch();
  }
}

uint64_t sub_1D2D8E4FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v1;
  *v1 = v0;
  v1[1] = sub_1D2D8E558;
  return sub_1D2D9DEE4();
}

uint64_t sub_1D2D8E558()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[30];
    v3 = v2[31];
    v5 = v2[29];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1D2D8E5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v6 = sub_1D2D9C6FC();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8E644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_DWORD *)(v0 + 120) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9308) + 48);
  sub_1D2CDB6B4(v4, v5, type metadata accessor for VisualTranslationModel);
  v6 = type metadata accessor for VisualTranslationModel(0);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 96) = v7;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56);
  *(_QWORD *)(v0 + 104) = v8;
  v8(v5, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1D2D9DEFC();
  *(_QWORD *)(v0 + 112) = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8E734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRetain();
    v5 = sub_1D2D65098(v4);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 104);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 88);
      v9 = *(_QWORD *)(v0 + 40) + *(int *)(v0 + 120);
      sub_1D2CDB6B4(*(_QWORD *)(v3 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 96) + 72) * v5, v9, type metadata accessor for VisualTranslationModel);
      v10 = v9;
      v11 = 0;
      v12 = v8;
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 88);
      v10 = *(_QWORD *)(v0 + 40) + *(int *)(v0 + 120);
      v11 = 1;
    }
    v6(v10, v11, 1, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 104))(*(_QWORD *)(v0 + 40) + *(int *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 88));
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8E860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8E8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9308) + 48);
  v6 = type metadata accessor for VisualTranslationModel(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v4, 1, 1, v6);
  v8 = *(int *)(v2 + 48);
  v9 = v1 + v8;
  v10 = v3 + v8;
  v11 = sub_1D2D9C6FC();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v11);
  sub_1D2CDB6B4(v10, v9, type metadata accessor for VisualTranslationModel);
  sub_1D2CD1FD4(v9, v5, type metadata accessor for VisualTranslationModel);
  v7(v5, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v11);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8E9D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for VisualTranslationModel(0);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9308);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8EACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 24);
  v54 = *(_QWORD *)(v0 + 40);
  v55 = *(_QWORD *)(v0 + 32);
  v7 = *(int *)(v4 + 48);
  v8 = v5 + v7;
  v9 = v6 + v7;
  sub_1D2CCAD60(v6, v5, &qword_1ED5872D8);
  sub_1D2CCAD60(v9, v8, &qword_1ED5872D8);
  sub_1D2CD2018(v5, v2, &qword_1ED5872D8);
  sub_1D2CCADA4(v8, &qword_1ED5872D8);
  v10 = v5 + *(int *)(v4 + 48);
  sub_1D2CCAD60(v6, v5, &qword_1ED5872D8);
  sub_1D2CCAD60(v9, v10, &qword_1ED5872D8);
  sub_1D2CD2018(v10, v1, &qword_1ED5872D8);
  sub_1D2CCADA4(v5, &qword_1ED5872D8);
  sub_1D2CCAD60(v1, v3, &qword_1ED5872D8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v12 = v11(v3, 1, v55);
  v13 = *(_QWORD *)(v0 + 120);
  if (v12 != 1)
  {
    v16 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 32);
    sub_1D2CD1FD4(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), type metadata accessor for VisualTranslationModel);
    sub_1D2CCAD60(v13, v16, &qword_1ED5872D8);
    v18 = v11(v16, 1, v17);
    v19 = *(_QWORD *)(v0 + 96);
    if (v18 == 1)
    {
      sub_1D2CCADA4(v19, &qword_1ED5872D8);
    }
    else
    {
      sub_1D2CD1FD4(v19, *(_QWORD *)(v0 + 64), type metadata accessor for VisualTranslationModel);
      if ((sub_1D2D70FEC() & 1) == 0)
      {
        v30 = *(_QWORD *)(v0 + 72);
        v31 = *(_QWORD *)(v0 + 32);
        v32 = (__int128 *)(v30 + *(int *)(v31 + 20));
        v66 = *((_QWORD *)v32 + 20);
        v64 = v32[8];
        v65 = v32[9];
        v60 = v32[4];
        v61 = v32[5];
        v62 = v32[6];
        v63 = v32[7];
        v56 = *v32;
        v57 = v32[1];
        v58 = v32[2];
        v59 = v32[3];
        v33 = v30 + *(int *)(v31 + 24);
        sub_1D2D9C6A8();
        v35 = *(_QWORD *)(v0 + 56);
        v34 = *(_QWORD *)(v0 + 64);
        if (v36 <= 0.0)
        {
          v37 = *(int **)(v0 + 32);
          v38 = sub_1D2D9C6FC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v34, v38);
          v39 = v35 + *(int *)(v31 + 24);
          v40 = sub_1D2D9C6C0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v39, v33, v40);
          v41 = *(_QWORD *)(v34 + v37[7]);
          v42 = *(_QWORD *)(v34 + v37[8]);
          v43 = *(_BYTE *)(v34 + v37[9]);
          v44 = *(_BYTE *)(v34 + v37[10]);
          v45 = v35 + *(int *)(v31 + 20);
          *(_OWORD *)v45 = v56;
          *(_OWORD *)(v45 + 16) = v57;
          *(_OWORD *)(v45 + 64) = v60;
          *(_OWORD *)(v45 + 80) = v61;
          *(_OWORD *)(v45 + 32) = v58;
          *(_OWORD *)(v45 + 48) = v59;
          *(_QWORD *)(v45 + 160) = v66;
          *(_OWORD *)(v45 + 128) = v64;
          *(_OWORD *)(v45 + 144) = v65;
          *(_OWORD *)(v45 + 96) = v62;
          *(_OWORD *)(v45 + 112) = v63;
          *(_QWORD *)(v35 + v37[7]) = v41;
          *(_QWORD *)(v35 + v37[8]) = v42;
          *(_BYTE *)(v35 + v37[9]) = v43;
          *(_BYTE *)(v35 + v37[10]) = v44;
          *(_BYTE *)(v35 + v37[11]) = 0;
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1D2CDB6B4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56), type metadata accessor for VisualTranslationModel);
        }
        v46 = **(_QWORD **)(v0 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1D2D4AE54(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
        v48 = *(_QWORD *)(v46 + 16);
        v47 = *(_QWORD *)(v46 + 24);
        if (v48 >= v47 >> 1)
          v46 = sub_1D2D4AE54(v47 > 1, v48 + 1, 1, v46);
        v25 = *(_QWORD *)(v0 + 112);
        v24 = *(_QWORD *)(v0 + 120);
        v49 = *(_QWORD *)(v0 + 64);
        v26 = *(_QWORD *)(v0 + 72);
        v50 = *(_QWORD *)(v0 + 56);
        v51 = *(_QWORD *)(v0 + 40);
        v52 = *(unint64_t **)(v0 + 16);
        *(_QWORD *)(v46 + 16) = v48 + 1;
        sub_1D2CD1FD4(v50, v46+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v48, type metadata accessor for VisualTranslationModel);
        *v52 = v46;
        sub_1D2CD3734(v49, type metadata accessor for VisualTranslationModel);
        goto LABEL_20;
      }
      sub_1D2CD3734(*(_QWORD *)(v0 + 64), type metadata accessor for VisualTranslationModel);
    }
    v20 = *(unint64_t **)(v0 + 16);
    sub_1D2CDB6B4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), type metadata accessor for VisualTranslationModel);
    v21 = *v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1D2D4AE54(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    if (v23 >= v22 >> 1)
      v21 = sub_1D2D4AE54(v22 > 1, v23 + 1, 1, v21);
    v25 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 72);
    v28 = *(_QWORD *)(v0 + 40);
    v27 = *(_QWORD *)(v0 + 48);
    v29 = *(unint64_t **)(v0 + 16);
    *(_QWORD *)(v21 + 16) = v23 + 1;
    sub_1D2CD1FD4(v27, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v23, type metadata accessor for VisualTranslationModel);
    *v29 = v21;
LABEL_20:
    sub_1D2CD3734(v26, type metadata accessor for VisualTranslationModel);
    sub_1D2CCADA4(v25, &qword_1ED5872D8);
    v15 = v24;
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(v0 + 104);
  sub_1D2CCADA4(*(_QWORD *)(v0 + 112), &qword_1ED5872D8);
  sub_1D2CCADA4(v13, &qword_1ED5872D8);
  v15 = v14;
LABEL_21:
  sub_1D2CCADA4(v15, &qword_1ED5872D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8EFD0(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  type metadata accessor for VisualTranslationObservable(0);
  sub_1D2CC66E4(&qword_1EFCA9320, type metadata accessor for VisualTranslationObservable, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  sub_1D2D9C96C();
  sub_1D2D9C978();
  swift_release();
  if (a1 <= 0.0)
    a1 = COERCE_DOUBLE(1);
  v3 = (double *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t sub_1D2D8F084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, v4);
  sub_1D2CCCF1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler));
  swift_release();
  return sub_1D2CCADA4(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest, &qword_1ED586E08);
}

uint64_t VisualTranslationObservable.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA8D50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1D2CCADA4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1ED586448);
  v5 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  v7 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587798);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, v8);
  sub_1D2CCCF1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler));
  swift_release();
  sub_1D2CCADA4(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest, &qword_1ED586E08);
  return v0;
}

uint64_t VisualTranslationObservable.__deallocating_deinit()
{
  VisualTranslationObservable.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2D8F2F4()
{
  return 1;
}

uint64_t sub_1D2D8F2FC()
{
  return 1;
}

uint64_t SecureHostingController.init(rootView:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1D2D989D8(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + class metadata base offset for SecureHostingController)
                                              - 8)
                                  + 8))(a1);
  return v4;
}

void *SecureHostingController.__allocating_init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return SecureHostingController.init(coder:rootView:)(a1, a2);
}

void *SecureHostingController.init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  uint64_t v12;

  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + class metadata base offset for SecureHostingController);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v12 - v7, v6);
  v8 = (void *)sub_1D2D9D14C();
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10 = v8;
  v9(a2, v4);
  if (v8)

  return v8;
}

id SecureHostingController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SecureHostingController.init(coder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + class metadata base offset for SecureHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for SecureHostingController+ 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

id sub_1D2D8F518(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return SecureHostingController.init(coder:)(v3, v4, v5, v6);
}

id SecureHostingController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + class metadata base offset for SecureHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for SecureHostingController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

Swift::Void __swiftcall VisualTranslationViewBridge.setPresentationAnchor(rect:contentRect:)(__C::CGRect rect, __C::CGRect contentRect)
{
  void *v2;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  CGFloat *v16;
  int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  height = contentRect.size.height;
  width = contentRect.size.width;
  y = contentRect.origin.y;
  x = contentRect.origin.x;
  v7 = rect.size.height;
  v8 = rect.size.width;
  v9 = rect.origin.y;
  v10 = rect.origin.x;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D2D9DF14();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v16 = (CGFloat *)swift_allocObject();
  v16[2] = 0.0;
  v16[3] = 0.0;
  *((_QWORD *)v16 + 4) = v2;
  v16[5] = v10;
  v16[6] = v9;
  v16[7] = v8;
  v16[8] = v7;
  v16[9] = x;
  v16[10] = y;
  v16[11] = width;
  v16[12] = height;
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v18 = v2;
  if (v17 == 1)
  {
    sub_1D2CCADA4((uint64_t)v13, (uint64_t *)&unk_1ED5878F0);
    v19 = 0;
    v20 = 0;
  }
  else
  {
    sub_1D2D9DF08();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    if (*((_QWORD *)v16 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v19 = sub_1D2D9DEB4();
      v20 = v21;
      swift_unknownObjectRelease();
    }
    else
    {
      v19 = 0;
      v20 = 0;
    }
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = &unk_1EFCA9330;
  *(_QWORD *)(v22 + 24) = v16;
  if (v20 | v19)
  {
    v23[0] = 0;
    v23[1] = 0;
    v23[2] = v19;
    v23[3] = v20;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1D2D8F7B4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  *(double *)(v12 + 72) = a7;
  *(double *)(v12 + 80) = a8;
  *(double *)(v12 + 56) = a5;
  *(double *)(v12 + 64) = a6;
  *(double *)(v12 + 40) = a3;
  *(double *)(v12 + 48) = a4;
  *(double *)(v12 + 24) = a1;
  *(double *)(v12 + 32) = a2;
  *(_QWORD *)(v12 + 16) = a12;
  return swift_task_switch();
}

uint64_t sub_1D2D8F7DC()
{
  _QWORD *v0;

  v0[11] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  sub_1D2D9DEFC();
  v0[12] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8F858()
{
  uint64_t v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;

  v2 = *(double *)(v0 + 72);
  v1 = *(double *)(v0 + 80);
  v4 = *(double *)(v0 + 56);
  v3 = *(double *)(v0 + 64);
  v6 = *(double *)(v0 + 40);
  v5 = *(double *)(v0 + 48);
  v8 = *(double *)(v0 + 24);
  v7 = *(double *)(v0 + 32);
  swift_release();
  sub_1D2D6C6D4(v8, v7, v6, v5, v4, v3, v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D8F970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1D2D8F98C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[4];
  v0[5] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  if (v1)
  {
    v2 = v0[3];
    sub_1D2D5F0C4();
    v3 = swift_allocError();
    *(_WORD *)v4 = v2;
    *(_QWORD *)(v4 + 8) = v1;
  }
  else
  {
    v3 = 0;
  }
  v0[6] = v3;
  sub_1D2D9DEFC();
  swift_bridgeObjectRetain();
  v0[7] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8FA5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();
  sub_1D2D6C3A4(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall VisualTranslationViewBridge.dismissErrorUI()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D2D9DF14();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_1D2CCADA4((uint64_t)v3, (uint64_t *)&unk_1ED5878F0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1D2D9DF08();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1D2D9DEB4();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EFCA9340;
  *(_QWORD *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1D2D8FC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  v4[3] = swift_task_alloc();
  v4[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D8FCDC()
{
  _QWORD *v0;

  v0[5] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  sub_1D2D9DEFC();
  v0[6] = sub_1D2D9DEF0();
  sub_1D2D9DEB4();
  return swift_task_switch();
}

uint64_t sub_1D2D8FD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  v3 = type metadata accessor for TranslationUnavailableModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2CCAD60(v2, v1, &qword_1ED586448);
  swift_retain();
  sub_1D2D9C9C0();
  sub_1D2CCADA4(v2, &qword_1ED586448);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t VisualTranslationViewBridge.dismissHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  v2 = *v1;
  sub_1D2CCCEF0(*v1);
  return v2;
}

uint64_t VisualTranslationViewBridge.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1D2CCCF1C(v6);
}

uint64_t sub_1D2D9005C@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1D2D38A30;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1D2CCCEF0(v4);
}

uint64_t sub_1D2D900F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1D2D38A30;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1D2CCCEF0(v3);
  return sub_1D2CCCF1C(v8);
}

uint64_t (*VisualTranslationViewBridge.dismissHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id VisualTranslationViewBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *VisualTranslationViewBridge.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)();
  uint64_t v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  v3 = v0;
  *(_QWORD *)&v0[v2] = VisualTranslationObservable.init()();
  v4 = &v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = 0;

  v11.receiver = v3;
  v11.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v11, sel_init);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = (void (**)())(v6 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *v8 = sub_1D2D99EF0;
  v8[1] = (void (*)())v7;
  sub_1D2CCCF1C(v9);
  return v5;
}

char *VisualTranslationViewBridge.__allocating_init(optimizedForExtendedExperience:)(char a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)();
  uint64_t v11;
  objc_super v13;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  v5 = v3;
  *(_QWORD *)&v3[v4] = VisualTranslationObservable.init()();
  v6 = &v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = a1;

  v13.receiver = v5;
  v13.super_class = v1;
  v7 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (void (**)())(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *v10 = sub_1D2D99EF0;
  v10[1] = (void (*)())v9;
  sub_1D2CCCF1C(v11);
  return v7;
}

char *VisualTranslationViewBridge.init(optimizedForExtendedExperience:)(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)();
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  v5 = v1;
  *(_QWORD *)&v1[v4] = VisualTranslationObservable.init()();
  v6 = &v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = a1;

  v13.receiver = v5;
  v13.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (void (**)())(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *v10 = sub_1D2D99EF0;
  v10[1] = (void (*)())v9;
  sub_1D2CCCF1C(v11);
  return v7;
}

void sub_1D2D90550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (**v4)(void);
  void (*v5)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D8248A10](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void (**)(void))(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
    swift_beginAccess();
    v5 = *v4;
    if (*v4)
    {
      sub_1D2CCCEF0((uint64_t)v5);

      v5();
      sub_1D2CCCF1C((uint64_t)v5);
    }
    else
    {

    }
  }
}

id sub_1D2D905F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController);
  }
  else
  {
    v4 = v0;
    type metadata accessor for VisualTranslationObservable(0);
    sub_1D2CC66E4(&qword_1EFCA9320, type metadata accessor for VisualTranslationObservable, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
    swift_retain();
    sub_1D2D9CD2C();
    v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587038));
    v6 = (void *)sub_1D2D9D158();
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t VisualTranslationView.init(observable:options:systemTranslationDismissHandler:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v7 = *a1;
  type metadata accessor for VisualTranslationObservable(0);
  sub_1D2CC66E4(&qword_1EFCA9320, type metadata accessor for VisualTranslationObservable, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  result = sub_1D2D9CD2C();
  *a4 = result;
  a4[1] = v9;
  a4[2] = v7;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

id VisualTranslationViewBridge.view.getter()
{
  id v0;
  id v1;

  v0 = sub_1D2D905F4();
  v1 = objc_msgSend(v0, sel_view);

  return v1;
}

uint64_t static VisualTranslationViewBridge.isTranslatable(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for VisualTranslationService();
  return static VisualTranslationService.isTranslatable(_:completion:)(a1, a2, a3);
}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a4;
  v30 = a5;
  v28 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D2CCAD60(a2, (uint64_t)v13, &qword_1ED587850);
  sub_1D2CCAD60(v28, (uint64_t)v10, &qword_1ED587850);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 48) & ~v19;
  v21 = (v9 + v19 + v20) & ~v19;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v18;
  v22[5] = a1;
  sub_1D2CD2018((uint64_t)v13, (uint64_t)v22 + v20, &qword_1ED587850);
  sub_1D2CD2018((uint64_t)v10, (uint64_t)v22 + v21, &qword_1ED587850);
  v23 = (_QWORD *)((char *)v22 + ((v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
  v25 = v29;
  v24 = v30;
  *v23 = v29;
  v23[1] = v24;
  swift_bridgeObjectRetain();
  sub_1D2CCCEF0(v25);
  sub_1D2D06D10((uint64_t)v16, (uint64_t)&unk_1EFCA9378, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_1D2D90AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[46] = a8;
  v8[47] = v11;
  v8[44] = a6;
  v8[45] = a7;
  v8[42] = a4;
  v8[43] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  v8[48] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  v9 = sub_1D2D9C6FC();
  v8[51] = v9;
  v8[52] = *(_QWORD *)(v9 - 8);
  v8[53] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED586448);
  v8[54] = swift_task_alloc();
  v8[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2D90BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 336) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D8248A10](v1);
  if (v2)
  {
    v3 = (void *)v2;
    *(_QWORD *)(v0 + 448) = *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 456) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  v5 = *(_QWORD *)(v0 + 336) + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1D8248A10](v5);
  if (v6)
  {
    v7 = (void *)v6;
    *(_QWORD *)(v0 + 464) = *(_QWORD *)(v6 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(_BYTE *)(v0 + 520) = 1;
    sub_1D2D9C6F0();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v8;
    *v8 = v0;
    v8[1] = sub_1D2D911A4;
    return sub_1D2D8A604(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), (_BYTE *)(v0 + 520), *(_QWORD *)(v0 + 424));
  }
  else
  {
    if (*(_QWORD *)(v0 + 368))
    {
      v9 = MEMORY[0x1E0DEE9D8];
      if (MEMORY[0x1E0DEE9D8] >> 62)
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9450);
        v10 = sub_1D2D9E3A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1D2D9E538();
        v10 = v9;
      }
      *(_QWORD *)(v0 + 496) = v10;
      swift_bridgeObjectRelease();
      sub_1D2D9DEFC();
      *(_QWORD *)(v0 + 504) = sub_1D2D9DEF0();
      sub_1D2D9DEB4();
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D90E60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v1 = v0[56];
  v3 = v0[54];
  v2 = v0[55];
  swift_release();
  v4 = type metadata accessor for TranslationUnavailableModel(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v2, 1, 1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D2CCAD60(v2, v3, &qword_1ED586448);
  swift_retain();
  sub_1D2D9C9C0();
  sub_1D2CCADA4(v2, &qword_1ED586448);
  v5(v2, 1, 1, v4);
  v6 = v1 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
  swift_beginAccess();
  sub_1D2D9C340(v2, v6, &qword_1ED586448);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D90FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 336) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D8248A10](v1);
  if (v2)
  {
    v3 = (void *)v2;
    *(_QWORD *)(v0 + 464) = *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(_BYTE *)(v0 + 520) = 1;
    sub_1D2D9C6F0();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v4;
    *v4 = v0;
    v4[1] = sub_1D2D911A4;
    return sub_1D2D8A604(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), (_BYTE *)(v0 + 520), *(_QWORD *)(v0 + 424));
  }
  else if (*(_QWORD *)(v0 + 368))
  {
    v6 = MEMORY[0x1E0DEE9D8];
    if (MEMORY[0x1E0DEE9D8] >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9450);
      v7 = sub_1D2D9E3A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D2D9E538();
      v7 = v6;
    }
    *(_QWORD *)(v0 + 496) = v7;
    swift_bridgeObjectRelease();
    sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 504) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D911A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 480) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v4[52] + 8))(v4[53], v4[51]);
  }
  else
  {
    v6 = v4[52];
    v5 = v4[53];
    v7 = v4[51];
    v4[61] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1D2D91244()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 488);
  if (*(_QWORD *)(v0 + 368))
  {
    swift_bridgeObjectRetain();
    if (v1 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9450);
      v2 = sub_1D2D9E3A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D2D9E538();
      v2 = v1;
    }
    *(_QWORD *)(v0 + 496) = v2;
    swift_bridgeObjectRelease();
    sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 504) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D9138C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 368);
  swift_release();
  v2(v1, 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D91420()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD);

  v1 = *(void (**)(_QWORD, _QWORD))(v0 + 368);
  swift_release();
  v1(MEMORY[0x1E0DEE9D8], 0);
  return swift_task_switch();
}

uint64_t sub_1D2D91470()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2D914F4()
{
  uint64_t v0;
  unint64_t *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;

  v1 = (unint64_t *)(v0 + 304);
  swift_release();
  if (qword_1ED587858 != -1)
    swift_once();
  v2 = *(void **)(v0 + 480);
  v3 = sub_1D2D9C8F4();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED5886E8);
  swift_bridgeObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = sub_1D2D9C8DC();
  v7 = sub_1D2D9E034();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 344);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 134349314;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1D2D9E3AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v12 = *(void **)(v0 + 480);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 320) = v11;
    sub_1D2D9E1B4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v13 = sub_1D2D9C5F4();
    *(_QWORD *)(v0 + 328) = v13;
    sub_1D2D9E1B4();
    *v10 = v13;

    _os_log_impl(&dword_1D2CC0000, v6, v7, "Failed to translate %{public}ld observations: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED587128);
    swift_arrayDestroy();
    MEMORY[0x1D8248974](v10, -1, -1);
    MEMORY[0x1D8248974](v9, -1, -1);
    v1 = (unint64_t *)(v0 + 304);
  }
  else
  {
    v14 = *(void **)(v0 + 480);
    swift_bridgeObjectRelease_n();

  }
  v15 = *(void **)(v0 + 480);

  v16 = v15;
  sub_1D2D5C83C((char *)v15, v1);
  if (*(_QWORD *)(v0 + 312))
  {
    v17 = *(_QWORD *)(v0 + 400);
    sub_1D2CCAD60(*(_QWORD *)(v0 + 352), v17, &qword_1ED587850);
    v18 = sub_1D2D9C7EC();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v17, 1, v18);
    v22 = *(_QWORD *)(v0 + 400);
    if (v21 == 1)
    {
      sub_1D2CCADA4(*(_QWORD *)(v0 + 400), &qword_1ED587850);
      sub_1D2D93328(0xD000000000000018, 0x80000001D2DA7880, (_OWORD *)(v0 + 144));
      sub_1D2CCADA4(v0 + 144, &qword_1ED5870C8);
      if (!*(_QWORD *)(v0 + 312))
        goto LABEL_16;
    }
    else
    {
      *(_QWORD *)(v0 + 200) = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 176));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v22, v18);
      sub_1D2CD1FA4((_OWORD *)(v0 + 176), (_OWORD *)(v0 + 48));
      v24 = *(_QWORD *)(v0 + 312);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1D2D94218((_OWORD *)(v0 + 48), 0xD000000000000018, 0x80000001D2DA7880, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v0 + 312) = v24;
      swift_bridgeObjectRelease();
      if (!v24)
        goto LABEL_16;
    }
    v26 = *(_QWORD *)(v0 + 392);
    sub_1D2CCAD60(*(_QWORD *)(v0 + 360), v26, &qword_1ED587850);
    v27 = v20(v26, 1, v18);
    v28 = *(_QWORD *)(v0 + 392);
    if (v27 == 1)
    {
      sub_1D2CCADA4(*(_QWORD *)(v0 + 392), &qword_1ED587850);
      sub_1D2D93328(0xD000000000000018, 0x80000001D2DA78A0, (_OWORD *)(v0 + 112));
      sub_1D2CCADA4(v0 + 112, &qword_1ED5870C8);
    }
    else
    {
      *(_QWORD *)(v0 + 40) = v18;
      v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(v29, v28, v18);
      sub_1D2CD1FA4((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 80));
      v30 = *(_QWORD *)(v0 + 312);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_1D2D94218((_OWORD *)(v0 + 80), 0xD000000000000018, 0x80000001D2DA78A0, v31);
      *(_QWORD *)(v0 + 312) = v30;
      swift_bridgeObjectRelease();
    }
  }
LABEL_16:
  v32 = *(_QWORD *)(v0 + 336) + 16;
  swift_beginAccess();
  v33 = MEMORY[0x1D8248A10](v32);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = *(_QWORD *)(v0 + 384);
    v37 = *(_QWORD *)(v0 + 304);
    v36 = *(_QWORD *)(v0 + 312);
    v38 = sub_1D2D9DF14();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v34;
    v39[5] = v37;
    v39[6] = v36;
    swift_bridgeObjectRetain();
    v40 = v34;
    sub_1D2D06D10(v35, (uint64_t)&unk_1EFCA9470, (uint64_t)v39);

    swift_release();
  }
  if (*(_QWORD *)(v0 + 368))
  {
    sub_1D2D9DEFC();
    *(_QWORD *)(v0 + 512) = sub_1D2D9DEF0();
    sub_1D2D9DEB4();
    return swift_task_switch();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_1D2D91CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9450);
  v5 = (void *)sub_1D2D9DE48();
  if (a2)
    v6 = sub_1D2D9C5F4();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:taskHint:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v44 = a3;
  v45 = a1;
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  v35 = (char *)&v33 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v13;
  v14 = sub_1D2D9C6FC();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  v15 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v14);
  v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - v17;
  v41 = *a4;
  v40 = (char *)&v33 - v17;
  sub_1D2D9C6F0();
  v19 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = v7;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v10, v43, v5);
  v21((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v44, v5);
  v22 = v38;
  v23 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v39);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 48) & ~v24;
  v26 = (v6 + v24 + v25) & ~v24;
  v27 = v26 + v6;
  v28 = (*(unsigned __int8 *)(v22 + 80) + v26 + v6 + 1) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = 0;
  *((_QWORD *)v29 + 3) = 0;
  v30 = v45;
  *((_QWORD *)v29 + 4) = v20;
  *((_QWORD *)v29 + 5) = v30;
  v31 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v31(&v29[v25], v35, v5);
  v31(&v29[v26], v36, v5);
  v29[v27] = v41;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v29[v28], v37, v23);
  swift_bridgeObjectRetain();
  sub_1D2D06FF0((uint64_t)v42, (uint64_t)&unk_1EFCA9388, (uint64_t)v29);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v40, v23);
}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a3;
  v39 = a5;
  v35 = a2;
  v41 = a1;
  v6 = sub_1D2D9C6FC();
  v34 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  v40 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v8;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5878F0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v17;
  v36 = *a4;
  v18 = sub_1D2D9DF14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v14, v35, v9);
  v20((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v9);
  v21 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v8, v39, v6);
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = (v22 + 48) & ~v22;
  v24 = (v11 + v22 + v23) & ~v22;
  v25 = v24 + v11;
  v26 = (*(unsigned __int8 *)(v21 + 80) + v25 + 1) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = 0;
  *((_QWORD *)v27 + 3) = 0;
  *((_QWORD *)v27 + 4) = v19;
  *((_QWORD *)v27 + 5) = v41;
  v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v28(&v27[v23], v14, v9);
  v28(&v27[v24], v31, v9);
  v27[v25] = v36;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v27[v26], v33, v32);
  swift_bridgeObjectRetain();
  sub_1D2D06FF0((uint64_t)v37, (uint64_t)&unk_1EFCA9390, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_1D2D92288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;

  *(_BYTE *)(v8 + 113) = a8;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_1D2D922B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D8248A10](v1);
  *(_QWORD *)(v0 + 88) = v2;
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_BYTE *)(v0 + 113) & 1;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(_BYTE *)(v0 + 112) = v4;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v5;
    *v5 = v0;
    v5[1] = sub_1D2D92394;
    return sub_1D2D8BBD0(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), (_BYTE *)(v0 + 112), *(_QWORD *)(v0 + 80));
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D2D92394()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1D2D923F0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 88) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall VisualTranslationViewBridge.showDebugMenu()()
{
  if (_LTIsInternalInstall())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D2D9C9C0();
  }
}

uint64_t VisualTranslationViewBridge.setZoomScale(_:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  double *v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  type metadata accessor for VisualTranslationObservable(0);
  sub_1D2CC66E4(&qword_1EFCA9320, type metadata accessor for VisualTranslationObservable, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  sub_1D2D9C96C();
  sub_1D2D9C978();
  swift_release();
  if (a1 <= 0.0)
    a1 = COERCE_DOUBLE(1);
  v4 = (double *)(v3 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  result = swift_beginAccess();
  *v4 = a1;
  return result;
}

id VisualTranslationViewBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t VisualTranslationOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TranslationUI::VisualTranslationOptions __swiftcall VisualTranslationOptions.init(rawValue:)(TranslationUI::VisualTranslationOptions rawValue)
{
  TranslationUI::VisualTranslationOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static VisualTranslationOptions.optimizedForExtendedExperience.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static VisualTranslationOptions.backgroundRendering.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t VisualTranslationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t KeyPath;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v75 = a1;
  v74 = sub_1D2D9CD68();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5872D8);
  MEMORY[0x1E0C80A78](v62);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v58 - v6;
  v8 = type metadata accessor for VisualTranslationOverlay();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587058);
  MEMORY[0x1E0C80A78](v63);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9398);
  MEMORY[0x1E0C80A78](v64);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA93A0);
  MEMORY[0x1E0C80A78](v77);
  v76 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA93A8);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v65 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA93B0);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA93B8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1[1];
  v83 = *v1;
  v84 = v19;
  v85 = *((_QWORD *)v1 + 4);
  v20 = *((_QWORD *)&v83 + 1);
  v61 = v83;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D2D9C9B4();
  v60 = v20;
  swift_release();
  swift_release();
  swift_release();
  v59 = v80;
  v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  swift_beginAccess();
  v22 = *v21;
  v23 = *((_QWORD *)&v84 + 1);
  v24 = v85;
  *((_QWORD *)v10 + 2) = 0;
  *((_QWORD *)v10 + 3) = 0;
  *((_QWORD *)v10 + 1) = 0x3FF0000000000000;
  v78 = 0u;
  v79 = 0u;
  sub_1D2CCCEF0(v23);
  type metadata accessor for CGRect(0);
  sub_1D2D9D8B4();
  v25 = v82;
  v26 = v81;
  *((_OWORD *)v10 + 2) = v80;
  *((_OWORD *)v10 + 3) = v26;
  *((_QWORD *)v10 + 8) = v25;
  v27 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 1, 1, v27);
  sub_1D2CCAD60((uint64_t)v7, (uint64_t)v4, &qword_1ED5872D8);
  sub_1D2D9D8B4();
  sub_1D2CCADA4((uint64_t)v7, &qword_1ED5872D8);
  v28 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  *(_QWORD *)v10 = v59;
  *((_QWORD *)v10 + 1) = v22;
  sub_1D2CCCF1C(*((_QWORD *)v10 + 2));
  *((_QWORD *)v10 + 2) = v23;
  *((_QWORD *)v10 + 3) = v24;
  v29 = sub_1D2D9CD98();
  LOBYTE(v28) = sub_1D2D9D410();
  sub_1D2CDB6B4((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  v30 = &v12[*(int *)(v63 + 36)];
  *(_QWORD *)v30 = v29;
  v30[8] = (char)v28;
  sub_1D2CD3734((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualTranslationOverlay);
  KeyPath = swift_getKeyPath();
  LOBYTE(v28) = v84;
  sub_1D2CCAD60((uint64_t)v12, (uint64_t)v14, &qword_1ED587058);
  v32 = &v14[*(int *)(v64 + 36)];
  *(_QWORD *)v32 = KeyPath;
  v32[8] = v28 & 1;
  sub_1D2CCADA4((uint64_t)v12, &qword_1ED587058);
  v33 = swift_getKeyPath();
  v34 = v76;
  sub_1D2CCAD60((uint64_t)v14, v76, &qword_1EFCA9398);
  v35 = v34 + *(int *)(v77 + 36);
  *(_QWORD *)v35 = v33;
  *(_BYTE *)(v35 + 8) = (v28 & 2) != 0;
  sub_1D2CCADA4((uint64_t)v14, &qword_1EFCA9398);
  sub_1D2D9A354((uint64_t)&v83);
  v64 = type metadata accessor for VisualTranslationObservable(0);
  sub_1D2CC66E4(&qword_1EFCA9320, type metadata accessor for VisualTranslationObservable, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  sub_1D2D9CD38();
  sub_1D2D9A394((uint64_t)&v83);
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  type metadata accessor for CameraPreviewDebugView();
  sub_1D2D9A3F0(&qword_1EFCA93C0, &qword_1EFCA93A0, sub_1D2D9A3D4);
  sub_1D2CC66E4(&qword_1EFCA93E0, (uint64_t (*)(uint64_t))type metadata accessor for CameraPreviewDebugView, (uint64_t)&unk_1D2D9FE28);
  v36 = v65;
  v37 = v76;
  sub_1D2D9D710();
  swift_release();
  swift_release();
  sub_1D2CCADA4(v37, &qword_1EFCA93A0);
  sub_1D2D9A354((uint64_t)&v83);
  sub_1D2D9CD38();
  sub_1D2D9A394((uint64_t)&v83);
  swift_getKeyPath();
  sub_1D2D9CD44();
  swift_release();
  swift_release();
  v38 = v80;
  LOBYTE(v34) = v81;
  v39 = swift_allocObject();
  v40 = v84;
  *(_OWORD *)(v39 + 16) = v83;
  *(_OWORD *)(v39 + 32) = v40;
  *(_QWORD *)(v39 + 48) = v85;
  v41 = v68;
  v42 = (uint64_t)v66;
  v43 = v70;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v66, v36, v70);
  v44 = v42 + *(int *)(v67 + 36);
  *(_OWORD *)v44 = v38;
  *(_BYTE *)(v44 + 16) = v34;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(_QWORD *)(v44 + 56) = sub_1D2D9A52C;
  *(_QWORD *)(v44 + 64) = v39;
  sub_1D2D9A354((uint64_t)&v83);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v43);
  v45 = swift_getKeyPath();
  v46 = v73;
  v47 = v72;
  v48 = v74;
  (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v72, *MEMORY[0x1E0CD9A90], v74);
  v49 = (uint64_t)v69;
  v50 = (uint64_t *)&v69[*(int *)(v71 + 36)];
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA6388);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v50 + *(int *)(v51 + 28), v47, v48);
  *v50 = v45;
  sub_1D2CCAD60(v42, v49, &qword_1EFCA93B0);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_1D2CCADA4(v42, &qword_1EFCA93B0);
  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1D2CC66E4(&qword_1EFCA8D60, (uint64_t (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel, (uint64_t)&protocol conformance descriptor for VisualTranslationErrorViewModel);
  swift_retain_n();
  v52 = sub_1D2D9CD2C();
  v54 = v53;
  v55 = v75;
  sub_1D2CCAD60(v49, v75, &qword_1EFCA93B8);
  swift_release();
  v56 = (uint64_t *)(v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA93E8) + 36));
  *v56 = v52;
  v56[1] = v54;
  return sub_1D2CCADA4(v49, &qword_1EFCA93B8);
}

uint64_t sub_1D2D93068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;

  *a1 = sub_1D2D9CAB0();
  a1[1] = sub_1D2D9CAA4();
  a1[2] = sub_1D2D9CAA4();
  v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for CameraPreviewDebugView() + 28));
  *v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5788);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D2D93144(uint64_t result, __int128 *a2)
{
  __int128 v2;

  if ((result & 1) != 0)
  {
    v2 = *a2;
    swift_retain();
    sub_1D2D89EEC();
    return sub_1D2D9BE64((uint64_t)&v2);
  }
  return result;
}

uint64_t sub_1D2D9318C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D2D9C3E4;
  return v6(a1);
}

size_t sub_1D2D931F0(uint64_t a1)
{
  return sub_1D2D9320C(a1, &qword_1ED587360, (uint64_t (*)(_QWORD))type metadata accessor for TextModel, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1D2D983D8);
}

size_t sub_1D2D9320C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(a3(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = a4(&v15, (char *)v11 + v10, v4, a1);
      swift_bridgeObjectRetain();
      sub_1D2CDB67C();
      if (v14 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1D2D93328@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D2D64F2C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2CD8E78();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D2CD1FA4((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1D2D93698(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1D2D93418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2D65098(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2CD905C();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1D2D9C6FC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
    v14 = *(_QWORD *)(v13 - 8);
    sub_1D2CD2018(v12 + *(_QWORD *)(v14 + 72) * v6, a2, &qword_1EFCA5C38);
    sub_1D2D9386C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1D2D9355C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2D65098(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2CD95F4();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1D2D9C6FC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for VisualTranslationModel(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_1D2CD1FD4(v12 + *(_QWORD *)(v14 + 72) * v6, a2, type metadata accessor for VisualTranslationModel);
    sub_1D2D93E24(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for VisualTranslationModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

unint64_t sub_1D2D93698(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D2D9E238();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D2D9E5C8();
        swift_bridgeObjectRetain();
        sub_1D2D9DD70();
        v10 = sub_1D2D9E5F8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1D2D9386C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_1D2D9C6FC();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1D2D9E238();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v36(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1D2D9DC44();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38) - 8) + 72);
            v24 = v23 * a1;
            v25 = v22 + v23 * a1;
            v26 = v23 * v9;
            v27 = v22 + v23 * v9 + v23;
            if (v24 < v26 || v25 >= v27)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v24 != v26)
              {
                swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1D2D93B44(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v32 = type metadata accessor for TextModel();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1D2D9E238();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = a2 + 64;
      v34 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v4 + 72);
      v13 = v10;
      do
      {
        v14 = v12;
        v15 = v12 * v9;
        v16 = v13;
        sub_1D2CDB6B4(*(_QWORD *)(a2 + 48) + v12 * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        sub_1D2D9E5C8();
        v17 = sub_1D2D9C6FC();
        sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        sub_1D2D9DC50();
        v18 = sub_1D2D9E5F8();
        sub_1D2CD3734((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v13 = v16;
        v19 = v18 & v16;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 < v34)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= (uint64_t)v19)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v19 >= v34 || a1 >= (uint64_t)v19)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72);
            v22 = v21 * a1;
            v23 = v20 + v21 * a1;
            v24 = v20 + v21 * v9 + v21;
            if (v21 * a1 < (uint64_t)(v21 * v9) || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v13 = v16;
            }
            else
            {
              a1 = v9;
              v13 = v16;
              if (v22 != v21 * v9)
              {
                swift_arrayInitWithTakeBackToFront();
                v13 = v16;
                a1 = v9;
              }
            }
          }
        }
        v9 = (v9 + 1) & v13;
        v7 = v33;
      }
      while (((*(_QWORD *)(v33 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1D2D93E24(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_1D2D9C6FC();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1D2D9E238();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v36(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1D2D9DC44();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for VisualTranslationModel(0) - 8) + 72);
            v24 = v23 * a1;
            v25 = v22 + v23 * a1;
            v26 = v23 * v9;
            v27 = v22 + v23 * v9 + v23;
            if (v24 < v26 || v25 >= v27)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v24 != v26)
              {
                swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

_OWORD *sub_1D2D940F8(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1D2D64F90((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
        return sub_1D2CD1FA4(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1D2CD8CB4();
      goto LABEL_7;
    }
    sub_1D2CD74E8(v12, a3 & 1);
    v18 = sub_1D2D64F90((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2D9463C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_1D2D9E568();
  __break(1u);
  return result;
}

_OWORD *sub_1D2D94218(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D2D64F2C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_1D2CD1FA4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D2CD8E78();
      goto LABEL_7;
    }
    sub_1D2CD7820(v15, a4 & 1);
    v21 = sub_1D2D64F2C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2D946A0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1D2D9E568();
  __break(1u);
  return result;
}

uint64_t sub_1D2D94348(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D2D65098(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
      return sub_1D2D9C340(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, &qword_1EFCA5C38);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D2CD905C();
    goto LABEL_7;
  }
  sub_1D2CD7B1C(v17, a3 & 1);
  v24 = sub_1D2D65098(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1D2D9E568();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D2D94708(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D2D944BC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1D2D9C6FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D2D65098(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for VisualTranslationModel(0);
        return sub_1D2D9BF3C(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D2CD95F4();
      goto LABEL_7;
    }
    sub_1D2CD8354(v17, a3 & 1);
    v24 = sub_1D2D65098(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D2D947C4(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1D2D9E568();
  __break(1u);
  return result;
}

_OWORD *sub_1D2D9463C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1D2CD1FA4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_1D2D946A0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D2CD1FA4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1D2D94708(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D2D9C6FC();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA5C38);
  result = sub_1D2CD2018(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, &qword_1EFCA5C38);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1D2D947C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D2D9C6FC();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for VisualTranslationModel(0);
  result = sub_1D2CD1FD4(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for VisualTranslationModel);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1D2D9487C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1D2D9E268();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5F48);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1D2D9E25C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1D2D953F8(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1D2D955EC();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1D2D961FC((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D2D9E148();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5F48);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1D2D9E154();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1D2D9E154();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1D2D9627C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D2D94B18(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1D2CC66E4(&qword_1EFCA6E80, v11, MEMORY[0x1E0CB0E58]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1D2D9DC44();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v21 = sub_1D2D9DC8C();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D2D96400((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D2D94D74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1D2D9E5C8();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  v8 = sub_1D2D9E5F8();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D2D9E52C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D2D9E52C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D2D96654(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D2D94F20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31[2];
  _BYTE v32[16];
  double v33;
  char v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v6 = *v2;
  sub_1D2D9E5C8();
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  v9 = sub_1D2D9E5F8();
  v10 = -1 << *(_BYTE *)(v6 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v27 = a2;
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 48);
    sub_1D2CF4020((uint64_t *)(a2 + 16), (uint64_t)v31);
    do
    {
      v14 = v13 + 48 * v11;
      v15 = *(double *)(v14 + 16);
      v16 = *(_BYTE *)(v14 + 24);
      v17 = *(_QWORD *)v14 == v7 && *(_QWORD *)(v14 + 8) == v8;
      if (v17 || (sub_1D2D9E52C() & 1) != 0)
      {
        if ((v16 & 1) != 0)
        {
          if (v15 == 0.0)
          {
            sub_1D2CF4020(v31, (uint64_t)&v35);
            if (v36 == 1 && !v35)
              goto LABEL_20;
          }
          else
          {
            sub_1D2CF4020(v31, (uint64_t)&v29);
            if (v30 == 1 && v29)
              goto LABEL_20;
          }
        }
        else
        {
          sub_1D2CF4020(v31, (uint64_t)v32);
          if ((v32[8] & 1) == 0 || (sub_1D2CF4020(v31, (uint64_t)&v33), (v34 & 1) == 0) && v33 == v15)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            sub_1D2D9C384(v27);
            v18 = *(_QWORD *)(*v2 + 48) + 48 * v11;
            v19 = *(_QWORD *)(v18 + 8);
            v20 = *(_QWORD *)(v18 + 16);
            v21 = *(_BYTE *)(v18 + 24);
            v22 = *(_QWORD *)(v18 + 32);
            v23 = *(_QWORD *)(v18 + 40);
            *(_QWORD *)a1 = *(_QWORD *)v18;
            *(_QWORD *)(a1 + 8) = v19;
            *(_QWORD *)(a1 + 16) = v20;
            *(_BYTE *)(a1 + 24) = v21;
            *(_QWORD *)(a1 + 32) = v22;
            *(_QWORD *)(a1 + 40) = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return 0;
          }
        }
      }
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    swift_bridgeObjectRelease();
    a2 = v27;
    v3 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = *v3;
  *v3 = 0x8000000000000000;
  sub_1D2CF3DD0(a2);
  sub_1D2D967EC(a2, v11, isUniquelyReferenced_nonNull_native);
  *v3 = v28;
  swift_bridgeObjectRelease();
  v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v26;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return 1;
}

uint64_t sub_1D2D9519C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1D2CC66E4(&qword_1ED586CD8, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1D2D9DC44();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v21 = sub_1D2D9DC8C();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D2D96A20((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D2D953F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F8);
    v2 = sub_1D2D9E2BC();
    v14 = v2;
    sub_1D2D9E250();
    if (sub_1D2D9E274())
    {
      sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5F48);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1D2D955EC();
          v2 = v14;
        }
        result = sub_1D2D9E148();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1D2D9E274());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1D2D955EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F8);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_1D2D9E148();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D2D95888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5878D8);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1D2D9E5C8();
      sub_1D2D9DD70();
      result = sub_1D2D9E5F8();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D2D95B64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F0);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v37 = v10;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34)
          goto LABEL_33;
        v16 = v35[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v34)
            goto LABEL_33;
          v16 = v35[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v34)
              goto LABEL_33;
            v16 = v35[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v33 = 1 << *(_BYTE *)(v2 + 32);
                if (v33 > 63)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v17 >= v34)
                    goto LABEL_33;
                  v16 = v35[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v37 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = *(_QWORD *)(v2 + 48) + 48 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_BYTE *)(v19 + 24);
      v25 = *(_QWORD *)(v19 + 32);
      v24 = *(_QWORD *)(v19 + 40);
      sub_1D2D9E5C8();
      swift_bridgeObjectRetain();
      sub_1D2D9DD70();
      swift_bridgeObjectRelease();
      result = sub_1D2D9E5F8();
      v26 = -1 << *(_BYTE *)(v4 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 48 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_QWORD *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 24) = v23;
      *(_QWORD *)(v12 + 32) = v25;
      *(_QWORD *)(v12 + 40) = v24;
      ++*(_QWORD *)(v4 + 16);
      v2 = v36;
      v10 = v37;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D2D95E9C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1D2D9E2B0();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1D2CC66E4(v45, v44, v46);
      result = sub_1D2D9DC44();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

unint64_t sub_1D2D961FC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1D2D9E148();
  result = sub_1D2D9E244();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1D2D9627C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1D2D955EC();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D2D96C74();
      goto LABEL_14;
    }
    sub_1D2D973C4();
  }
  v8 = *v3;
  v9 = sub_1D2D9E148();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1D2CC63E8(0, (unint64_t *)&qword_1EFCA5F48);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1D2D9E154();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1D2D9E55C();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1D2D9E154();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1D2D96400(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_1D2D9C7EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D2D95E9C(v13, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], &qword_1EFCA94E8, &qword_1EFCA6E80, MEMORY[0x1E0CB0E58]);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1D2D971A0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38], &qword_1EFCA94E8);
      goto LABEL_12;
    }
    sub_1D2D97BF4(v13, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], &qword_1EFCA94E8, &qword_1EFCA6E80, MEMORY[0x1E0CB0E58]);
  }
  v14 = *v3;
  sub_1D2CC66E4(&qword_1EFCA6E80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
  v15 = sub_1D2D9DC44();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_1D2CC66E4(qword_1EFCA7C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v20 = sub_1D2D9DC8C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D2D9E55C();
  __break(1u);
  return result;
}

uint64_t sub_1D2D96654(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1D2D95888();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1D2D96E1C();
      goto LABEL_22;
    }
    sub_1D2D9763C();
  }
  v11 = *v4;
  sub_1D2D9E5C8();
  sub_1D2D9DD70();
  result = sub_1D2D9E5F8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1D2D9E52C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1D2D9E55C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1D2D9E52C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D2D967EC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29[2];
  _BYTE v30[16];
  double v31;
  char v32;
  uint64_t v33;
  char v34;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_28;
  if ((a3 & 1) != 0)
  {
    sub_1D2D95B64();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1D2D96FCC();
      goto LABEL_28;
    }
    sub_1D2D978E8();
  }
  v8 = *v3;
  sub_1D2D9E5C8();
  v9 = *(_QWORD *)v5;
  v10 = *(_QWORD *)(v5 + 8);
  swift_bridgeObjectRetain();
  sub_1D2D9DD70();
  swift_bridgeObjectRelease();
  result = sub_1D2D9E5F8();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v11;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v8 + 48);
    sub_1D2CF4020((uint64_t *)(v5 + 16), (uint64_t)v29);
    do
    {
      v15 = v14 + 48 * a2;
      v16 = *(double *)(v15 + 16);
      v17 = *(_BYTE *)(v15 + 24);
      v18 = *(_QWORD *)v15 == v9 && *(_QWORD *)(v15 + 8) == v10;
      if (v18 || (result = sub_1D2D9E52C(), (result & 1) != 0))
      {
        if ((v17 & 1) != 0)
        {
          if (v16 == 0.0)
          {
            result = sub_1D2CF4020(v29, (uint64_t)&v33);
            if (v34 == 1 && !v33)
              goto LABEL_27;
          }
          else
          {
            result = sub_1D2CF4020(v29, (uint64_t)&v27);
            if (v28 == 1 && v27)
              goto LABEL_27;
          }
        }
        else
        {
          sub_1D2CF4020(v29, (uint64_t)v30);
          if ((v30[8] & 1) == 0 || (result = sub_1D2CF4020(v29, (uint64_t)&v31), (v32 & 1) == 0) && v31 == v16)
          {
LABEL_27:
            result = sub_1D2D9E55C();
            __break(1u);
            break;
          }
        }
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  v19 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v20 = (_OWORD *)(*(_QWORD *)(v19 + 48) + 48 * a2);
  v21 = *(_OWORD *)v5;
  v22 = *(_OWORD *)(v5 + 32);
  v20[1] = *(_OWORD *)(v5 + 16);
  v20[2] = v22;
  *v20 = v21;
  v23 = *(_QWORD *)(v19 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v25;
  return result;
}

uint64_t sub_1D2D96A20(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D2D95E9C(v13, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], &qword_1EFCA9478, &qword_1ED586CD8, MEMORY[0x1E0CB09C8]);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1D2D971A0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &qword_1EFCA9478);
      goto LABEL_12;
    }
    sub_1D2D97BF4(v13, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], &qword_1EFCA9478, &qword_1ED586CD8, MEMORY[0x1E0CB09C8]);
  }
  v14 = *v3;
  sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v15 = sub_1D2D9DC44();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v20 = sub_1D2D9DC8C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D2D9E55C();
  __break(1u);
  return result;
}

id sub_1D2D96C74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F8);
  v2 = *v0;
  v3 = sub_1D2D9E2A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2D96E1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5878D8);
  v2 = *v0;
  v3 = sub_1D2D9E2A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2D96FCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F0);
  v2 = *v0;
  v3 = sub_1D2D9E2A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v17 + 16);
    v20 = *(_BYTE *)(v17 + 24);
    v21 = *(_QWORD *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 40);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v23 = *(_QWORD *)v17;
    *(_QWORD *)(v23 + 8) = v18;
    *(_QWORD *)(v23 + 16) = v19;
    *(_BYTE *)(v23 + 24) = v20;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2D971A0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1D2D9E2A4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D2D973C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F8);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1D2D9E148();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2D9763C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5878D8);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1D2D9E5C8();
    swift_bridgeObjectRetain();
    sub_1D2D9DD70();
    result = sub_1D2D9E5F8();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2D978E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA94F0);
  v3 = sub_1D2D9E2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v35 = v2;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v36 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_33;
      v16 = *(_QWORD *)(v33 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_33;
        v16 = *(_QWORD *)(v33 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v36 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v2 + 48) + 48 * v14;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_BYTE *)(v19 + 24);
    v25 = *(_QWORD *)(v19 + 32);
    v24 = *(_QWORD *)(v19 + 40);
    sub_1D2D9E5C8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D2D9DD70();
    swift_bridgeObjectRelease();
    result = sub_1D2D9E5F8();
    v26 = -1 << *(_BYTE *)(v4 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 48 * v11;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v21;
    *(_QWORD *)(v12 + 16) = v22;
    *(_BYTE *)(v12 + 24) = v23;
    *(_QWORD *)(v12 + 32) = v25;
    *(_QWORD *)(v12 + 40) = v24;
    ++*(_QWORD *)(v4 + 16);
    v2 = v35;
    v10 = v36;
  }
  v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v33 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2D97BF4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1D2D9E2B0();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1D2CC66E4(v40, v39, v41);
    result = sub_1D2D9DC44();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2D97F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1D2D9C6FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1D2CC66E4(&qword_1ED586CD8, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1D2D9DC44();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = sub_1D2D9DC8C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D2D971A0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &qword_1EFCA9478);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1D2D9815C(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

void sub_1D2D9815C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = sub_1D2D9C6FC();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v24 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_1D2D9E238();
    v26 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v27 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
      do
      {
        v14 = v13 * v9;
        v25(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v15 = sub_1D2D9DC44();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        v19 = v13 * a1;
        if (v13 * a1 < v14 || *(_QWORD *)(v6 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v26 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v26 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v24;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
}

void sub_1D2D983D8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for TextModel();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1D2CDB6B4(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD1FD4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD1FD4((uint64_t)v14, a2, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

void sub_1D2D98694(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for VisualTranslationModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1D2CDB6B4(*(_QWORD *)(v35 + 56) + v28 * v24, (uint64_t)v11, type metadata accessor for VisualTranslationModel);
    sub_1D2CD1FD4((uint64_t)v11, (uint64_t)v14, type metadata accessor for VisualTranslationModel);
    sub_1D2CD1FD4((uint64_t)v14, a2, type metadata accessor for VisualTranslationModel);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1D2D98950(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1D2D989D8(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v2 + 16))((char *)&v5 - v3, v1);
  return sub_1D2D9D158();
}

uint64_t type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1ED5873B0);
}

unint64_t sub_1D2D98A80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v53[2];
  char *v54;
  int *v55;
  char *v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v3 = sub_1D2D9C6FC();
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  MEMORY[0x1E0C80A78](v3);
  v68 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for TextModel();
  v59 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v53 - v12;
  v63 = type metadata accessor for VisualTranslationModel(0);
  v14 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v60 = (uint64_t)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v53 - v18;
  v62 = *(_QWORD *)(v17 + 16);
  if (!v62)
    return MEMORY[0x1E0DEE9D8];
  v57 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v61 = v17 + v57;
  v53[0] = v17;
  swift_bridgeObjectRetain();
  v58 = (uint64_t *)(a2 + 112);
  swift_beginAccess();
  v20 = 0;
  v21 = MEMORY[0x1E0DEE9D8];
  v66 = *(_QWORD *)(v14 + 72);
  v55 = v8;
  v56 = v7;
  v54 = v10;
  v72 = v19;
  do
  {
    v22 = v61 + v66 * v20;
    v23 = *(_QWORD *)(v22 + *(int *)(v63 + 28));
    v24 = *(_QWORD *)(v23 + 16);
    if (!v24)
    {
LABEL_3:
      sub_1D2CDB6B4(v22, (uint64_t)v19, type metadata accessor for VisualTranslationModel);
      sub_1D2CD3734((uint64_t)v19, type metadata accessor for VisualTranslationModel);
      goto LABEL_4;
    }
    v67 = v61 + v66 * v20;
    v64 = v20;
    v65 = v21;
    v25 = v59;
    v26 = v23 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
    v69 = v23;
    swift_bridgeObjectRetain();
    v27 = *(_QWORD *)(v25 + 72);
    while (1)
    {
      sub_1D2CDB6B4(v26, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if (*(_QWORD *)&v13[v8[11]])
        break;
      v28 = &v13[v8[6]];
      v30 = *(_QWORD *)v28;
      v29 = *((_QWORD *)v28 + 1);
      v31 = v30 & 0xFFFFFFFFFFFFLL;
      if (!((v29 & 0x2000000000000000) != 0 ? HIBYTE(v29) & 0xF : v31))
        break;
      sub_1D2CCAD60((uint64_t)&v13[v8[7]], (uint64_t)v7, &qword_1ED587850);
      v33 = sub_1D2D9C7EC();
      v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v7, 1, v33);
      sub_1D2CCADA4((uint64_t)v7, &qword_1ED587850);
      if (v34 == 1)
        break;
      v35 = &v13[v8[8]];
      v36 = *((_QWORD *)v35 + 1);
      if (!v36)
        break;
      v37 = *(_QWORD *)v35 & 0xFFFFFFFFFFFFLL;
      if (!((v36 & 0x2000000000000000) != 0 ? HIBYTE(v36) & 0xF : v37))
        break;
      sub_1D2CDB6B4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      v39 = *(_QWORD *)&v10[v8[11]];
      sub_1D2CD3734((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      sub_1D2CD3734((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
      if (v39)
        goto LABEL_22;
      v26 += v27;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        v19 = v72;
        v20 = v64;
        v21 = v65;
        v22 = v67;
        goto LABEL_3;
      }
    }
    sub_1D2CDB6B4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
    sub_1D2CD3734((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
LABEL_22:
    swift_bridgeObjectRelease();
    v40 = v67;
    v19 = v72;
    sub_1D2CDB6B4(v67, (uint64_t)v72, type metadata accessor for VisualTranslationModel);
    v41 = *v58;
    if (*(_QWORD *)(*v58 + 16))
    {
      sub_1D2CC66E4(&qword_1ED586CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      swift_bridgeObjectRetain();
      v42 = sub_1D2D9DC44();
      v43 = -1 << *(_BYTE *)(v41 + 32);
      v44 = v42 & ~v43;
      if (((*(_QWORD *)(v41 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) != 0)
      {
        v69 = ~v43;
        v45 = *(_QWORD *)(v70 + 72);
        v46 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
        while (1)
        {
          v47 = v68;
          v48 = v71;
          v46(v68, *(_QWORD *)(v41 + 48) + v45 * v44, v71);
          sub_1D2CC66E4(&qword_1EFCA79A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v49 = sub_1D2D9DC8C();
          (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v48);
          if ((v49 & 1) != 0)
            break;
          v44 = (v44 + 1) & v69;
          if (((*(_QWORD *)(v41 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
            goto LABEL_27;
        }
        swift_bridgeObjectRelease();
        v19 = v72;
        sub_1D2CD3734((uint64_t)v72, type metadata accessor for VisualTranslationModel);
        v8 = v55;
        v7 = v56;
        v10 = v54;
        v21 = v65;
        goto LABEL_33;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      v8 = v55;
      v7 = v56;
      v10 = v54;
      v19 = v72;
      v40 = v67;
    }
    sub_1D2CD3734((uint64_t)v19, type metadata accessor for VisualTranslationModel);
    sub_1D2CDB6B4(v40, v60, type metadata accessor for VisualTranslationModel);
    v21 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1D2D4AE54(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    v51 = *(_QWORD *)(v21 + 16);
    v50 = *(_QWORD *)(v21 + 24);
    if (v51 >= v50 >> 1)
      v21 = sub_1D2D4AE54(v50 > 1, v51 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v51 + 1;
    sub_1D2CD1FD4(v60, v21 + v57 + v51 * v66, type metadata accessor for VisualTranslationModel);
LABEL_33:
    v20 = v64;
LABEL_4:
    ++v20;
  }
  while (v20 != v62);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1D2D99084()
{
  uint64_t v0;

  return sub_1D2D8939C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D2D9909C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  unsigned int v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  unsigned int v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, char *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  int *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  int64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;

  v143 = a1;
  v148 = type metadata accessor for TextModel();
  v128 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v2 = (char *)&v127 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490);
  MEMORY[0x1E0C80A78](v142);
  v146 = (unint64_t)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v133 = (char *)&v127 - v5;
  MEMORY[0x1E0C80A78](v6);
  v134 = (char *)&v127 - v7;
  MEMORY[0x1E0C80A78](v8);
  v141 = (uint64_t)&v127 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v127 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v127 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v127 - v17;
  v19 = type metadata accessor for VisualTranslationModel(0);
  v147 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v127 - v23;
  v140 = objc_opt_self();
  v25 = objc_msgSend((id)v140, sel_standardUserDefaults);
  v26 = (void *)sub_1D2D9DCB0();
  v27 = objc_msgSend(v25, sel_BOOLForKey_, v26);

  if (v27)
  {
    v137 = (unint64_t)v24;
    v140 = (uint64_t)v18;
    v138 = v15;
    v139 = v12;
    v28 = *(_QWORD *)(v143 + 16);
    v29 = MEMORY[0x1E0DEE9D8];
    if (v28)
    {
      v30 = v143;
      *(_QWORD *)&v149 = MEMORY[0x1E0DEE9D8];
      sub_1D2D040DC(0, v28, 0);
      result = sub_1D2D98950(v30);
      v33 = result;
      v34 = 0;
      v35 = v30 + 64;
      v36 = *(_BYTE *)(v30 + 32);
      v133 = (char *)(v30 + 88);
      v37 = v140;
      v134 = (char *)v28;
      v135 = v32;
      v136 = v30 + 64;
      while (1)
      {
        if (v33 < 0 || v33 >= 1 << v36)
          goto LABEL_67;
        if ((*(_QWORD *)(v35 + 8 * ((unint64_t)v33 >> 6)) & (1 << v33)) == 0)
          goto LABEL_68;
        if (*(_DWORD *)(v30 + 36) != (_DWORD)v32)
          goto LABEL_69;
        v145 = 1 << v33;
        v146 = (unint64_t)v33 >> 6;
        v144 = v34;
        v39 = v142;
        v40 = v37 + *(int *)(v142 + 48);
        v41 = *(_QWORD *)(v30 + 48);
        v42 = sub_1D2D9C6FC();
        v43 = *(_QWORD *)(v42 - 8);
        v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
        v44(v37, v41 + *(_QWORD *)(v43 + 72) * v33, v42);
        v45 = *(_QWORD *)(v30 + 56);
        v148 = *(_QWORD *)(v147 + 72);
        sub_1D2CDB6B4(v45 + v148 * v33, v40, type metadata accessor for VisualTranslationModel);
        v46 = (uint64_t)v138;
        v44((uint64_t)v138, v37, v42);
        sub_1D2CDB6B4(v40, v46 + *(int *)(v39 + 48), type metadata accessor for VisualTranslationModel);
        v47 = v46;
        v48 = (uint64_t)v139;
        sub_1D2CD2018(v47, (uint64_t)v139, &qword_1EFCA9490);
        sub_1D2CCADA4(v37, &qword_1EFCA9490);
        v49 = *(int *)(v39 + 48);
        v50 = v141;
        v51 = v141 + v49;
        v52 = v48 + v49;
        v44(v141, v48, v42);
        sub_1D2CDB6B4(v52, v51, type metadata accessor for VisualTranslationModel);
        v53 = v137;
        sub_1D2CD1FD4(v51, v137, type metadata accessor for VisualTranslationModel);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v50, v42);
        sub_1D2CCADA4(v48, &qword_1EFCA9490);
        v29 = v149;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2D040DC(0, *(_QWORD *)(v29 + 16) + 1, 1);
          v29 = v149;
        }
        v55 = *(_QWORD *)(v29 + 16);
        v54 = *(_QWORD *)(v29 + 24);
        v30 = v143;
        if (v55 >= v54 >> 1)
        {
          sub_1D2D040DC(v54 > 1, v55 + 1, 1);
          v29 = v149;
        }
        *(_QWORD *)(v29 + 16) = v55 + 1;
        result = sub_1D2CD1FD4(v53, v29+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ v55 * v148, type metadata accessor for VisualTranslationModel);
        v36 = *(_BYTE *)(v30 + 32);
        v38 = 1 << v36;
        if (v33 >= 1 << v36)
          goto LABEL_70;
        v35 = v136;
        v56 = v146;
        v57 = *(_QWORD *)(v136 + 8 * v146);
        if ((v57 & v145) == 0)
          goto LABEL_71;
        LODWORD(v32) = v135;
        if (*(_DWORD *)(v30 + 36) != (_DWORD)v135)
          goto LABEL_72;
        v58 = v57 & (-2 << (v33 & 0x3F));
        if (v58)
        {
          v38 = __clz(__rbit64(v58)) | v33 & 0xFFFFFFFFFFFFFFC0;
          v37 = v140;
          v59 = v134;
          goto LABEL_6;
        }
        v60 = v146 + 1;
        v61 = (v38 + 63) >> 6;
        v59 = v134;
        if (v146 + 1 < v61)
        {
          v62 = *(_QWORD *)(v136 + 8 * v60);
          if (!v62)
          {
            v60 = v146 + 2;
            if (v146 + 2 >= v61)
              goto LABEL_5;
            v62 = *(_QWORD *)(v136 + 8 * v60);
            if (!v62)
            {
              while (v61 - 3 != v56)
              {
                v62 = *(_QWORD *)&v133[8 * v56++];
                if (v62)
                {
                  v60 = v56 + 2;
                  goto LABEL_4;
                }
              }
              goto LABEL_5;
            }
          }
LABEL_4:
          v38 = __clz(__rbit64(v62)) + (v60 << 6);
        }
LABEL_5:
        v37 = v140;
LABEL_6:
        v34 = v144 + 1;
        v33 = v38;
        if (v144 + 1 == v59)
          return v29;
      }
    }
    return v29;
  }
  v144 = v21;
  v145 = v19;
  v63 = objc_msgSend((id)v140, sel_standardUserDefaults);
  v64 = (void *)sub_1D2D9DCB0();
  v65 = objc_msgSend(v63, sel_BOOLForKey_, v64);

  if (!v65)
    return 0;
  v66 = v143;
  v67 = *(_QWORD *)(v143 + 16);
  v29 = MEMORY[0x1E0DEE9D8];
  if (!v67)
    return v29;
  v160 = MEMORY[0x1E0DEE9D8];
  sub_1D2D040DC(0, v67, 0);
  result = sub_1D2D98950(v66);
  v69 = (uint64_t)v134;
  if (result < 0 || result >= 1 << *(_BYTE *)(v66 + 32))
    goto LABEL_78;
  v70 = v66 + 64;
  v132 = v66 + 80;
  v71 = 1;
  v129 = v67;
  v130 = v68;
  v131 = v66 + 64;
  while (1)
  {
    if ((*(_QWORD *)(v70 + 8 * ((unint64_t)result >> 6)) & (1 << result)) == 0)
      goto LABEL_73;
    if (*(_DWORD *)(v66 + 36) != (_DWORD)v68)
      break;
    v136 = 1 << result;
    v137 = (unint64_t)result >> 6;
    v135 = v71;
    v72 = v142;
    v73 = v69 + *(int *)(v142 + 48);
    v74 = *(_QWORD *)(v66 + 48);
    v75 = result;
    v76 = sub_1D2D9C6FC();
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
    v78(v69, v74 + *(_QWORD *)(v77 + 72) * v75, v76);
    v79 = *(_QWORD *)(v66 + 56);
    v80 = *(_QWORD *)(v147 + 72);
    v141 = v75;
    v140 = v80;
    sub_1D2CDB6B4(v79 + v80 * v75, v73, type metadata accessor for VisualTranslationModel);
    v81 = v133;
    v139 = (char *)v76;
    v82 = v76;
    v83 = (void (*)(char *, uint64_t, char *))v78;
    v78((uint64_t)v133, v69, v82);
    sub_1D2CDB6B4(v73, (uint64_t)&v81[*(int *)(v72 + 48)], type metadata accessor for VisualTranslationModel);
    v84 = (uint64_t)v81;
    v85 = v146;
    sub_1D2CD2018(v84, v146, &qword_1EFCA9490);
    sub_1D2CCADA4(v69, &qword_1EFCA9490);
    v86 = v85 + *(int *)(v72 + 48);
    v87 = *(_QWORD *)(v86 + *(int *)(v145 + 28));
    v88 = sub_1D2D4A0C4(v87);
    v89 = *(_QWORD *)(v88 + 16);
    v138 = (char *)v88;
    if (v89)
    {
      v90 = v128;
      v91 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
      v92 = v88 + v91;
      swift_bridgeObjectRetain();
      v93 = *(_QWORD *)(v90 + 72);
      while (1)
      {
        sub_1D2CDB6B4(v92, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v94 = *(_QWORD *)&v2[*(int *)(v148 + 20)];
        if ((v94 & 0x8000000000000000) == 0 && (int64_t)v94 < *(_QWORD *)(v87 + 16))
        {
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_1D2D4B108(v87);
            v87 = result;
          }
          if (v94 >= *(_QWORD *)(v87 + 16))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          sub_1D2D4B13C((uint64_t)v2, v87 + v91 + v94 * v93);
        }
        sub_1D2CD3734((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TextModel);
        v92 += v93;
        if (!--v89)
          goto LABEL_45;
      }
    }
    swift_bridgeObjectRetain();
LABEL_45:
    v95 = v144;
    v83(v144, v86, v139);
    v96 = (int *)v145;
    v97 = v86 + *(int *)(v145 + 20);
    v98 = *(_OWORD *)(v97 + 144);
    v157 = *(_OWORD *)(v97 + 128);
    v158 = v98;
    v159 = *(_QWORD *)(v97 + 160);
    v99 = *(_OWORD *)(v97 + 80);
    v153 = *(_OWORD *)(v97 + 64);
    v154 = v99;
    v100 = *(_OWORD *)(v97 + 112);
    v155 = *(_OWORD *)(v97 + 96);
    v156 = v100;
    v101 = *(_OWORD *)(v97 + 48);
    v151 = *(_OWORD *)(v97 + 32);
    v152 = v101;
    v102 = *(_OWORD *)v97;
    v150 = *(_OWORD *)(v97 + 16);
    v149 = v102;
    v103 = *(int *)(v145 + 24);
    v104 = v86 + v103;
    v105 = &v95[v103];
    v106 = sub_1D2D9C6C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v105, v104, v106);
    swift_bridgeObjectRelease();
    v107 = *(_QWORD *)(v86 + v96[8]);
    v108 = *(_BYTE *)(v86 + v96[9]);
    v109 = *(_BYTE *)(v86 + v96[10]);
    v110 = &v95[v96[5]];
    v111 = v158;
    *((_OWORD *)v110 + 8) = v157;
    *((_OWORD *)v110 + 9) = v111;
    *((_QWORD *)v110 + 20) = v159;
    v112 = v154;
    *((_OWORD *)v110 + 4) = v153;
    *((_OWORD *)v110 + 5) = v112;
    v113 = v156;
    *((_OWORD *)v110 + 6) = v155;
    *((_OWORD *)v110 + 7) = v113;
    v114 = v150;
    *(_OWORD *)v110 = v149;
    *((_OWORD *)v110 + 1) = v114;
    v115 = v152;
    *((_OWORD *)v110 + 2) = v151;
    *((_OWORD *)v110 + 3) = v115;
    *(_QWORD *)&v95[v96[7]] = v87;
    *(_QWORD *)&v95[v96[8]] = v107;
    v95[v96[9]] = v108;
    v95[v96[10]] = v109;
    v95[v96[11]] = 0;
    sub_1D2CCADA4(v146, &qword_1EFCA9490);
    v29 = v160;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D2D040DC(0, *(_QWORD *)(v29 + 16) + 1, 1);
      v29 = v160;
    }
    v66 = v143;
    v69 = (uint64_t)v134;
    v117 = *(_QWORD *)(v29 + 16);
    v116 = *(_QWORD *)(v29 + 24);
    v118 = (uint64_t)v144;
    if (v117 >= v116 >> 1)
    {
      sub_1D2D040DC(v116 > 1, v117 + 1, 1);
      v118 = (uint64_t)v144;
      v29 = v160;
    }
    *(_QWORD *)(v29 + 16) = v117 + 1;
    result = sub_1D2CD1FD4(v118, v29+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ v117 * v140, type metadata accessor for VisualTranslationModel);
    v119 = *(_BYTE *)(v66 + 32);
    if (v141 >= 1 << v119)
      goto LABEL_75;
    v70 = v131;
    v120 = v137;
    v121 = *(_QWORD *)(v131 + 8 * v137);
    if ((v121 & v136) == 0)
      goto LABEL_76;
    LODWORD(v68) = v130;
    if (*(_DWORD *)(v66 + 36) != (_DWORD)v130)
      goto LABEL_77;
    v122 = v121 & (-2 << (v141 & 0x3F));
    if (v122)
    {
      result = __clz(__rbit64(v122)) | v141 & 0xFFFFFFFFFFFFFFC0;
      v123 = v129;
    }
    else
    {
      v124 = v137 + 1;
      v125 = (unint64_t)((1 << v119) + 63) >> 6;
      v123 = v129;
      if (v137 + 1 >= v125)
        goto LABEL_60;
      v126 = *(_QWORD *)(v131 + 8 * v124);
      if (!v126)
      {
        while (v125 - 2 != v120)
        {
          v126 = *(_QWORD *)(v132 + 8 * v120++);
          if (v126)
          {
            v124 = v120 + 1;
            goto LABEL_59;
          }
        }
LABEL_60:
        result = 1 << v119;
        goto LABEL_61;
      }
LABEL_59:
      result = __clz(__rbit64(v126)) + (v124 << 6);
    }
LABEL_61:
    if (v135 == v123)
      return v29;
    if ((result & 0x8000000000000000) == 0)
    {
      v71 = v135 + 1;
      if (result < 1 << v119)
        continue;
    }
    goto LABEL_78;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_1D2D99CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1D2CE1A58;
  return sub_1D2D8D5D8(a1, a2, v2);
}

uint64_t type metadata accessor for VisualTranslationObservable(uint64_t a1)
{
  return sub_1D2CDA6F4(a1, (uint64_t *)&unk_1ED587440);
}

uint64_t type metadata accessor for SecureHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SecureHostingController);
}

uint64_t sub_1D2D99D74()
{
  return objectdestroyTm_10();
}

uint64_t sub_1D2D99D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 32);
  v8 = *(_OWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1D2CE1A58;
  *(_QWORD *)(v5 + 72) = v3;
  *(_QWORD *)(v5 + 80) = v4;
  *(_OWORD *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 24) = v9;
  *(_QWORD *)(v5 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_1D2D99E20()
{
  return objectdestroyTm_10();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D2D99E60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D2CE1A58;
  return sub_1D2D8FC70(a1, v4, v5, v6);
}

uint64_t sub_1D2D99ECC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D2D99EF0()
{
  uint64_t v0;

  sub_1D2D90550(v0);
}

uint64_t sub_1D2D99F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  unint64_t v11;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v2 + v3) & ~v2;
  v6 = v4 + v5 + 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = v0 + v3;
  v8 = sub_1D2D9C7EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  if (!v10(v0 + v5, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v5, v8);
  if (*(_QWORD *)(v0 + v11))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D9A00C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = (v7 + v5 + v6) & ~v5;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = v1[5];
  v13 = (uint64_t)v1 + v6;
  v14 = (uint64_t)v1 + v8;
  v15 = *(_QWORD *)((char *)v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_1D2CE1A58;
  return sub_1D2D90AE0(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1D2D9A0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(_QWORD *)(sub_1D2D9C7EC() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = (v7 + v5 + v6) & ~v5;
  v9 = v8 + v7;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D2D9C6FC() - 8) + 80);
  v11 = v10 + v9 + 1;
  LOBYTE(v9) = *(_BYTE *)(v1 + v9);
  v12 = v1 + (v11 & ~v10);
  v13 = swift_task_alloc();
  v14 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v13;
  *(_QWORD *)v13 = v2;
  *(_QWORD *)(v13 + 8) = sub_1D2CE1A58;
  *(_QWORD *)(v13 + 72) = v1 + v8;
  *(_QWORD *)(v13 + 80) = v12;
  *(_BYTE *)(v13 + 113) = v9;
  *(_QWORD *)(v13 + 64) = v1 + v6;
  *(_OWORD *)(v13 + 48) = v14;
  *(_QWORD *)(v13 + 40) = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_50Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = sub_1D2D9C7EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = sub_1D2D9C6FC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80) + v6 + 1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1D2D9A2C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1D2D5AFBC();
  result = sub_1D2D9CFFC();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2D9A30C()
{
  sub_1D2D5AFBC();
  return sub_1D2D9D008();
}

uint64_t sub_1D2D9A354(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_retain();
  sub_1D2CCCEF0(v2);
  return a1;
}

uint64_t sub_1D2D9A394(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_release();
  sub_1D2CCCF1C(v2);
  return a1;
}

uint64_t sub_1D2D9A3D4()
{
  return sub_1D2D9A3F0(&qword_1EFCA93C8, &qword_1EFCA9398, (uint64_t (*)(void))sub_1D2D9A474);
}

uint64_t sub_1D2D9A3F0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_1D2CC6C74(&qword_1EFCA93D0, &qword_1EFCA93D8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2D9A474()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED587050;
  if (!qword_1ED587050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED587058);
    v2[0] = sub_1D2CC66E4(&qword_1ED586EC0, (uint64_t (*)(uint64_t))type metadata accessor for VisualTranslationOverlay, (uint64_t)&protocol conformance descriptor for VisualTranslationOverlay);
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED587050);
  }
  return result;
}

uint64_t sub_1D2D9A4F8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D9A52C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2D93144(a1, (__int128 *)(v1 + 16));
}

unint64_t sub_1D2D9A540()
{
  unint64_t result;

  result = qword_1EFCA93F0;
  if (!qword_1EFCA93F0)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationOptions, &type metadata for VisualTranslationOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA93F0);
  }
  return result;
}

unint64_t sub_1D2D9A588()
{
  unint64_t result;

  result = qword_1EFCA93F8;
  if (!qword_1EFCA93F8)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationOptions, &type metadata for VisualTranslationOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA93F8);
  }
  return result;
}

unint64_t sub_1D2D9A5D0()
{
  unint64_t result;

  result = qword_1EFCA9400;
  if (!qword_1EFCA9400)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationOptions, &type metadata for VisualTranslationOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA9400);
  }
  return result;
}

unint64_t sub_1D2D9A618()
{
  unint64_t result;

  result = qword_1EFCA9408;
  if (!qword_1EFCA9408)
  {
    result = MEMORY[0x1D82488A8](&protocol conformance descriptor for VisualTranslationOptions, &type metadata for VisualTranslationOptions);
    atomic_store(result, (unint64_t *)&qword_1EFCA9408);
  }
  return result;
}

uint64_t sub_1D2D9A65C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2D9A66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1ED587048);
}

uint64_t sub_1D2D9A690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, (uint64_t *)&unk_1EFCA92D8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1ED587048);
}

uint64_t sub_1D2D9A6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1ED587798);
}

uint64_t sub_1D2D9A6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1ED587798);
}

uint64_t sub_1D2D9A70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2D07C38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1ED587798);
}

uint64_t sub_1D2D9A730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2D07CA4(a1, a2, a3, a4, &qword_1ED586A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1ED587798);
}

double sub_1D2D9A75C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_1D2D9A7AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D2D9A808()
{
  return type metadata accessor for VisualTranslationObservable(0);
}

void sub_1D2D9A810()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D2D9AC90();
  if (v0 <= 0x3F)
  {
    sub_1D2CC7D14();
    if (v1 <= 0x3F)
    {
      sub_1D2D9BC24(319, qword_1ED5873C0, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for VisualTranslationObservable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualTranslationObservable.models.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of VisualTranslationObservable.models.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of VisualTranslationObservable.models.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of VisualTranslationObservable.zoomScale.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of VisualTranslationObservable.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 728)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 728));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1D2D9C418;
  return v12(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 744)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 744));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1D2CE1A58;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 736)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 736));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1D2D9AB18;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 752)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 752));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1D2CE1A58;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1D2D9AB18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of VisualTranslationObservable.setZoom(scale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

void sub_1D2D9AC90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED587790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5877B0);
    v0 = sub_1D2D9C9CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED587790);
  }
}

uint64_t sub_1D2D9ACEC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for VisualTranslationViewBridge()
{
  return objc_opt_self();
}

uint64_t method lookup function for VisualTranslationViewBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualTranslationViewBridge.__allocating_init(optimizedForExtendedExperience:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for VisualTranslationOptions()
{
  return &type metadata for VisualTranslationOptions;
}

uint64_t destroy for VisualTranslationView(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for VisualTranslationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v6 = a2 + 3;
  v5 = a2[3];
  swift_retain();
  if (v5)
  {
    v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

_QWORD *assignWithCopy for VisualTranslationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = a1[3];
  a1[2] = a2[2];
  v5 = a2[3];
  if (!v4)
  {
    if (v5)
    {
      v7 = a2[4];
      a1[3] = v5;
      a1[4] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = a2[4];
  a1[3] = v5;
  a1[4] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for VisualTranslationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  if (!v6)
  {
    if (v5)
    {
      v8 = a2[4];
      a1[3] = v5;
      a1[4] = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[4];
  a1[3] = v5;
  a1[4] = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualTranslationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationView()
{
  return &type metadata for VisualTranslationView;
}

unint64_t sub_1D2D9B008()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA9430;
  if (!qword_1EFCA9430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA93E8);
    v2[0] = sub_1D2D9B074();
    v2[1] = sub_1D2D6D9D0();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA9430);
  }
  return result;
}

unint64_t sub_1D2D9B074()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFCA9438;
  if (!qword_1EFCA9438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA93B8);
    v2[0] = sub_1D2D9B0F8();
    v2[1] = sub_1D2CC6C74(&qword_1EFCA63C8, &qword_1EFCA6388, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA9438);
  }
  return result;
}

unint64_t sub_1D2D9B0F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1EFCA9440;
  if (!qword_1EFCA9440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA93B0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFCA93A0);
    v2[3] = type metadata accessor for CameraPreviewDebugView();
    v2[4] = sub_1D2D9A3F0(&qword_1EFCA93C0, &qword_1EFCA93A0, sub_1D2D9A3D4);
    v2[5] = sub_1D2CC66E4(&qword_1EFCA93E0, (uint64_t (*)(uint64_t))type metadata accessor for CameraPreviewDebugView, (uint64_t)&unk_1D2D9FE28);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2D9B1E8();
    result = MEMORY[0x1D82488A8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFCA9440);
  }
  return result;
}

unint64_t sub_1D2D9B1E8()
{
  unint64_t result;

  result = qword_1EFCA9448;
  if (!qword_1EFCA9448)
  {
    result = MEMORY[0x1D82488A8](&unk_1D2DA4148, &type metadata for SystemWideConsentPresentation);
    atomic_store(result, (unint64_t *)&qword_1EFCA9448);
  }
  return result;
}

uint64_t *sub_1D2D9B22C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D2D9C7EC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    if (v13(v17, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t sub_1D2D9B3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *sub_1D2D9B454(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_1D2D9B5A0(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_QWORD *sub_1D2D9B77C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_1D2D9B8B8(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1D2D9C7EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_1D2D9BA8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2D9BA98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D2D9BB18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2D9BB24(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED587850);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1D2D9BB9C()
{
  unint64_t v0;

  sub_1D2D9BC24(319, (unint64_t *)&qword_1ED5878C0, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D2D9BC24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D2D9E1A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D2D9BC70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D2D9BC94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D2D91CF0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D2D9BC9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1D2D9BCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 40) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_1D2D9C7EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = v3 + *(int *)(v1 + 24);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return swift_deallocObject();
}

uint64_t sub_1D2D9BDAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0)
                                      - 8)
                          + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1D2CE16D4;
  return sub_1D2D8A230(a1, v5, v6, v7, v8);
}

uint64_t sub_1D2D9BE40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D9BE64(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1D2D9BE98()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2D9BECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1D2CE1A58;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_1D2D9BF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2D9BF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for VisualTranslationModel(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1D2D9C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 24);
  v7 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2D9C050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for VisualTranslationModel(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1D2CE1A58;
  return sub_1D2D8E5E0(a1, v6, v7, v8, v9);
}

uint64_t sub_1D2D9C0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE1A58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA94A0 + dword_1EFCA94A0))(a1, v4);
}

uint64_t sub_1D2D9C164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1D2D9C6FC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v4 + *(int *)(v1 + 48);
  v6(v7, v5);
  v8 = v7 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 24);
  v9 = sub_1D2D9C6C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2D9C248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFCA9490) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D2CE1A58;
  return sub_1D2D8E860(a1, v5, v6, v7);
}

uint64_t sub_1D2D9C2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2CE16D4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFCA94A0 + dword_1EFCA94A0))(a1, v4);
}

uint64_t sub_1D2D9C340(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2D9C384(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D8248824](a1, v6, a5);
}

uint64_t sub_1D2D9C404()
{
  return sub_1D2D99084();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_1D2D9C4EC()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1D2D9C4F8()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1D2D9C504()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1D2D9C510()
{
  return MEMORY[0x1E0CAE0C8]();
}

uint64_t sub_1D2D9C51C()
{
  return MEMORY[0x1E0CAE0D0]();
}

uint64_t sub_1D2D9C528()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_1D2D9C534()
{
  return MEMORY[0x1E0CAE108]();
}

uint64_t sub_1D2D9C540()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1D2D9C54C()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1D2D9C558()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1D2D9C564()
{
  return MEMORY[0x1E0CAE418]();
}

uint64_t sub_1D2D9C570()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1D2D9C57C()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_1D2D9C588()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1D2D9C594()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1D2D9C5A0()
{
  return MEMORY[0x1E0CAE6F8]();
}

uint64_t sub_1D2D9C5AC()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1D2D9C5B8()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1D2D9C5C4()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1D2D9C5D0()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1D2D9C5DC()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1D2D9C5E8()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1D2D9C5F4()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D2D9C600()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1D2D9C60C()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D2D9C618()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1D2D9C624()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D2D9C630()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1D2D9C63C()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1D2D9C648()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D2D9C654()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1D2D9C660()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1D2D9C66C()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1D2D9C678()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1D2D9C684()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1D2D9C690()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1D2D9C69C()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1D2D9C6A8()
{
  return MEMORY[0x1E0CB0830]();
}

uint64_t sub_1D2D9C6B4()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D2D9C6C0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D2D9C6CC()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1D2D9C6D8()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1D2D9C6E4()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1D2D9C6F0()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1D2D9C6FC()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1D2D9C708()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1D2D9C714()
{
  return MEMORY[0x1E0CB0A90]();
}

uint64_t sub_1D2D9C720()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1D2D9C72C()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1D2D9C738()
{
  return MEMORY[0x1E0CB0B70]();
}

uint64_t sub_1D2D9C744()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1D2D9C750()
{
  return MEMORY[0x1E0CB0C20]();
}

uint64_t sub_1D2D9C75C()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_1D2D9C768()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_1D2D9C774()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1D2D9C780()
{
  return MEMORY[0x1E0CB0C78]();
}

uint64_t sub_1D2D9C78C()
{
  return MEMORY[0x1E0CB0C88]();
}

uint64_t _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1D2D9C7A4()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1D2D9C7B0()
{
  return MEMORY[0x1E0CB0D98]();
}

uint64_t sub_1D2D9C7BC()
{
  return MEMORY[0x1E0CB0DA8]();
}

uint64_t sub_1D2D9C7C8()
{
  return MEMORY[0x1E0CB0DB0]();
}

uint64_t sub_1D2D9C7D4()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1D2D9C7E0()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1D2D9C7EC()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1D2D9C7F8()
{
  return MEMORY[0x1E0CB1248]();
}

uint64_t sub_1D2D9C804()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_1D2D9C810()
{
  return MEMORY[0x1E0CB14B8]();
}

uint64_t sub_1D2D9C81C()
{
  return MEMORY[0x1E0CB14D0]();
}

uint64_t sub_1D2D9C828()
{
  return MEMORY[0x1E0CB15C0]();
}

uint64_t sub_1D2D9C834()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1D2D9C840()
{
  return MEMORY[0x1E0DF1EB8]();
}

uint64_t sub_1D2D9C84C()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1D2D9C858()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1D2D9C864()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1D2D9C870()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1D2D9C87C()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1D2D9C888()
{
  return MEMORY[0x1E0DF2158]();
}

uint64_t sub_1D2D9C894()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1D2D9C8A0()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1D2D9C8AC()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1D2D9C8B8()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1D2D9C8C4()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1D2D9C8D0()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1D2D9C8DC()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1D2D9C8E8()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1D2D9C8F4()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1D2D9C900()
{
  return MEMORY[0x1E0DC2650]();
}

uint64_t sub_1D2D9C90C()
{
  return MEMORY[0x1E0DC2690]();
}

uint64_t sub_1D2D9C918()
{
  return MEMORY[0x1E0DC26A0]();
}

uint64_t sub_1D2D9C924()
{
  return MEMORY[0x1E0DC26B8]();
}

uint64_t sub_1D2D9C930()
{
  return MEMORY[0x1E0DC26C0]();
}

uint64_t sub_1D2D9C93C()
{
  return MEMORY[0x1E0DC26C8]();
}

uint64_t sub_1D2D9C948()
{
  return MEMORY[0x1E0DC26D0]();
}

uint64_t sub_1D2D9C954()
{
  return MEMORY[0x1E0DC26F8]();
}

uint64_t sub_1D2D9C960()
{
  return MEMORY[0x1E0C95DE0]();
}

uint64_t sub_1D2D9C96C()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1D2D9C978()
{
  return MEMORY[0x1E0C96018]();
}

uint64_t sub_1D2D9C984()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1D2D9C990()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1D2D9C99C()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1D2D9C9A8()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t sub_1D2D9C9B4()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1D2D9C9C0()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1D2D9C9CC()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1D2D9C9D8()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1D2D9C9E4()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t sub_1D2D9C9F0()
{
  return MEMORY[0x1E0C96218]();
}

uint64_t sub_1D2D9C9FC()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1D2D9CA08()
{
  return MEMORY[0x1E0C963B0]();
}

uint64_t sub_1D2D9CA14()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t sub_1D2D9CA20()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1D2D9CA2C()
{
  return MEMORY[0x1E0CCE388]();
}

uint64_t sub_1D2D9CA38()
{
  return MEMORY[0x1E0CCE6F0]();
}

uint64_t sub_1D2D9CA44()
{
  return MEMORY[0x1E0CCE6F8]();
}

uint64_t sub_1D2D9CA50()
{
  return MEMORY[0x1E0CCE700]();
}

uint64_t sub_1D2D9CA5C()
{
  return MEMORY[0x1E0CCE728]();
}

uint64_t sub_1D2D9CA68()
{
  return MEMORY[0x1E0CCE730]();
}

uint64_t sub_1D2D9CA74()
{
  return MEMORY[0x1E0CCEA88]();
}

uint64_t sub_1D2D9CA80()
{
  return MEMORY[0x1E0CCEAB8]();
}

uint64_t sub_1D2D9CA8C()
{
  return MEMORY[0x1E0CCEAD0]();
}

uint64_t sub_1D2D9CA98()
{
  return MEMORY[0x1E0CD8288]();
}

uint64_t sub_1D2D9CAA4()
{
  return MEMORY[0x1E0CD8298]();
}

uint64_t sub_1D2D9CAB0()
{
  return MEMORY[0x1E0CD82A0]();
}

uint64_t sub_1D2D9CABC()
{
  return MEMORY[0x1E0CD82B0]();
}

uint64_t sub_1D2D9CAC8()
{
  return MEMORY[0x1E0CD82B8]();
}

uint64_t sub_1D2D9CAD4()
{
  return MEMORY[0x1E0CD82C0]();
}

uint64_t sub_1D2D9CAE0()
{
  return MEMORY[0x1E0CD8318]();
}

uint64_t sub_1D2D9CAEC()
{
  return MEMORY[0x1E0CD8338]();
}

uint64_t sub_1D2D9CAF8()
{
  return MEMORY[0x1E0CD83B8]();
}

uint64_t sub_1D2D9CB04()
{
  return MEMORY[0x1E0CD83F8]();
}

uint64_t sub_1D2D9CB10()
{
  return MEMORY[0x1E0CD8400]();
}

uint64_t sub_1D2D9CB1C()
{
  return MEMORY[0x1E0CD8480]();
}

uint64_t sub_1D2D9CB28()
{
  return MEMORY[0x1E0CD8530]();
}

uint64_t sub_1D2D9CB34()
{
  return MEMORY[0x1E0CD8550]();
}

uint64_t sub_1D2D9CB40()
{
  return MEMORY[0x1E0CD86C0]();
}

uint64_t sub_1D2D9CB4C()
{
  return MEMORY[0x1E0CD86F8]();
}

uint64_t sub_1D2D9CB58()
{
  return MEMORY[0x1E0CD87D0]();
}

uint64_t sub_1D2D9CB64()
{
  return MEMORY[0x1E0CD88A0]();
}

uint64_t sub_1D2D9CB70()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t sub_1D2D9CB7C()
{
  return MEMORY[0x1E0CD88F0]();
}

uint64_t sub_1D2D9CB88()
{
  return MEMORY[0x1E0CD8968]();
}

uint64_t sub_1D2D9CB94()
{
  return MEMORY[0x1E0CD8B38]();
}

uint64_t sub_1D2D9CBA0()
{
  return MEMORY[0x1E0CD8B48]();
}

uint64_t sub_1D2D9CBAC()
{
  return MEMORY[0x1E0CD8C70]();
}

uint64_t sub_1D2D9CBB8()
{
  return MEMORY[0x1E0CD8C80]();
}

uint64_t sub_1D2D9CBC4()
{
  return MEMORY[0x1E0CD8C90]();
}

uint64_t sub_1D2D9CBD0()
{
  return MEMORY[0x1E0CD8CA0]();
}

uint64_t sub_1D2D9CBDC()
{
  return MEMORY[0x1E0CD8D30]();
}

uint64_t sub_1D2D9CBE8()
{
  return MEMORY[0x1E0CD8D60]();
}

uint64_t sub_1D2D9CBF4()
{
  return MEMORY[0x1E0CD8DE8]();
}

uint64_t sub_1D2D9CC00()
{
  return MEMORY[0x1E0CD8DF8]();
}

uint64_t sub_1D2D9CC0C()
{
  return MEMORY[0x1E0CD8E28]();
}

uint64_t sub_1D2D9CC18()
{
  return MEMORY[0x1E0CD8E30]();
}

uint64_t sub_1D2D9CC24()
{
  return MEMORY[0x1E0CD8E40]();
}

uint64_t sub_1D2D9CC30()
{
  return MEMORY[0x1E0CD8E48]();
}

uint64_t sub_1D2D9CC3C()
{
  return MEMORY[0x1E0CD8E78]();
}

uint64_t sub_1D2D9CC48()
{
  return MEMORY[0x1E0CD8E80]();
}

uint64_t sub_1D2D9CC54()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t sub_1D2D9CC60()
{
  return MEMORY[0x1E0CD8F00]();
}

uint64_t sub_1D2D9CC6C()
{
  return MEMORY[0x1E0CD8F18]();
}

uint64_t sub_1D2D9CC78()
{
  return MEMORY[0x1E0CD9000]();
}

uint64_t sub_1D2D9CC84()
{
  return MEMORY[0x1E0CD9010]();
}

uint64_t sub_1D2D9CC90()
{
  return MEMORY[0x1E0CD9020]();
}

uint64_t sub_1D2D9CC9C()
{
  return MEMORY[0x1E0CD9030]();
}

uint64_t sub_1D2D9CCA8()
{
  return MEMORY[0x1E0CD9048]();
}

uint64_t sub_1D2D9CCB4()
{
  return MEMORY[0x1E0CD9050]();
}

uint64_t sub_1D2D9CCC0()
{
  return MEMORY[0x1E0CD9210]();
}

uint64_t sub_1D2D9CCCC()
{
  return MEMORY[0x1E0CD9230]();
}

uint64_t sub_1D2D9CCD8()
{
  return MEMORY[0x1E0CD9240]();
}

uint64_t sub_1D2D9CCE4()
{
  return MEMORY[0x1E0CD92D0]();
}

uint64_t sub_1D2D9CCF0()
{
  return MEMORY[0x1E0CD92D8]();
}

uint64_t sub_1D2D9CCFC()
{
  return MEMORY[0x1E0CD92E0]();
}

uint64_t sub_1D2D9CD08()
{
  return MEMORY[0x1E0CD92E8]();
}

uint64_t sub_1D2D9CD14()
{
  return MEMORY[0x1E0CD93A0]();
}

uint64_t sub_1D2D9CD20()
{
  return MEMORY[0x1E0CD94A8]();
}

uint64_t sub_1D2D9CD2C()
{
  return MEMORY[0x1E0CD94E8]();
}

uint64_t sub_1D2D9CD38()
{
  return MEMORY[0x1E0CD94F8]();
}

uint64_t sub_1D2D9CD44()
{
  return MEMORY[0x1E0CD9500]();
}

uint64_t sub_1D2D9CD50()
{
  return MEMORY[0x1E0CD9958]();
}

uint64_t sub_1D2D9CD5C()
{
  return MEMORY[0x1E0CD9AA0]();
}

uint64_t sub_1D2D9CD68()
{
  return MEMORY[0x1E0CD9AA8]();
}

uint64_t sub_1D2D9CD74()
{
  return MEMORY[0x1E0CD9B38]();
}

uint64_t sub_1D2D9CD80()
{
  return MEMORY[0x1E0CD9BF0]();
}

uint64_t sub_1D2D9CD8C()
{
  return MEMORY[0x1E0CD9C40]();
}

uint64_t sub_1D2D9CD98()
{
  return MEMORY[0x1E0CD9C90]();
}

uint64_t sub_1D2D9CDA4()
{
  return MEMORY[0x1E0CD9EF8]();
}

uint64_t sub_1D2D9CDB0()
{
  return MEMORY[0x1E0CD9F70]();
}

uint64_t sub_1D2D9CDBC()
{
  return MEMORY[0x1E0CD9F78]();
}

uint64_t sub_1D2D9CDC8()
{
  return MEMORY[0x1E0CD9F88]();
}

uint64_t sub_1D2D9CDD4()
{
  return MEMORY[0x1E0CD9F98]();
}

uint64_t sub_1D2D9CDE0()
{
  return MEMORY[0x1E0CD9FD8]();
}

uint64_t sub_1D2D9CDEC()
{
  return MEMORY[0x1E0CDA008]();
}

uint64_t sub_1D2D9CDF8()
{
  return MEMORY[0x1E0CDA088]();
}

uint64_t sub_1D2D9CE04()
{
  return MEMORY[0x1E0CDA140]();
}

uint64_t sub_1D2D9CE10()
{
  return MEMORY[0x1E0CDA218]();
}

uint64_t sub_1D2D9CE1C()
{
  return MEMORY[0x1E0CDA268]();
}

uint64_t sub_1D2D9CE28()
{
  return MEMORY[0x1E0CDA2E0]();
}

uint64_t sub_1D2D9CE34()
{
  return MEMORY[0x1E0CDA2F0]();
}

uint64_t sub_1D2D9CE40()
{
  return MEMORY[0x1E0CDA4A8]();
}

uint64_t sub_1D2D9CE4C()
{
  return MEMORY[0x1E0CDA4B0]();
}

uint64_t sub_1D2D9CE58()
{
  return MEMORY[0x1E0CDA4E0]();
}

uint64_t sub_1D2D9CE64()
{
  return MEMORY[0x1E0CDA4E8]();
}

uint64_t sub_1D2D9CE70()
{
  return MEMORY[0x1E0CDA618]();
}

uint64_t sub_1D2D9CE7C()
{
  return MEMORY[0x1E0CDA630]();
}

uint64_t sub_1D2D9CE88()
{
  return MEMORY[0x1E0CDA640]();
}

uint64_t sub_1D2D9CE94()
{
  return MEMORY[0x1E0CDA648]();
}

uint64_t sub_1D2D9CEA0()
{
  return MEMORY[0x1E0CDA650]();
}

uint64_t sub_1D2D9CEAC()
{
  return MEMORY[0x1E0CDA668]();
}

uint64_t sub_1D2D9CEB8()
{
  return MEMORY[0x1E0CDA670]();
}

uint64_t sub_1D2D9CEC4()
{
  return MEMORY[0x1E0CDA680]();
}

uint64_t sub_1D2D9CED0()
{
  return MEMORY[0x1E0CDA688]();
}

uint64_t sub_1D2D9CEDC()
{
  return MEMORY[0x1E0CDA698]();
}

uint64_t sub_1D2D9CEE8()
{
  return MEMORY[0x1E0CDA6C0]();
}

uint64_t sub_1D2D9CEF4()
{
  return MEMORY[0x1E0CDA6C8]();
}

uint64_t sub_1D2D9CF00()
{
  return MEMORY[0x1E0CDA710]();
}

uint64_t sub_1D2D9CF0C()
{
  return MEMORY[0x1E0CDA718]();
}

uint64_t sub_1D2D9CF18()
{
  return MEMORY[0x1E0CDA768]();
}

uint64_t sub_1D2D9CF24()
{
  return MEMORY[0x1E0CDA780]();
}

uint64_t sub_1D2D9CF30()
{
  return MEMORY[0x1E0CDA7F8]();
}

uint64_t sub_1D2D9CF3C()
{
  return MEMORY[0x1E0CDA810]();
}

uint64_t sub_1D2D9CF48()
{
  return MEMORY[0x1E0CDA890]();
}

uint64_t sub_1D2D9CF54()
{
  return MEMORY[0x1E0CDA8D8]();
}

uint64_t sub_1D2D9CF60()
{
  return MEMORY[0x1E0CDA8E0]();
}

uint64_t sub_1D2D9CF6C()
{
  return MEMORY[0x1E0CDA918]();
}

uint64_t sub_1D2D9CF78()
{
  return MEMORY[0x1E0CDA938]();
}

uint64_t sub_1D2D9CF84()
{
  return MEMORY[0x1E0CDA980]();
}

uint64_t sub_1D2D9CF90()
{
  return MEMORY[0x1E0CDA988]();
}

uint64_t sub_1D2D9CF9C()
{
  return MEMORY[0x1E0CDA9C0]();
}

uint64_t sub_1D2D9CFA8()
{
  return MEMORY[0x1E0CDA9C8]();
}

uint64_t sub_1D2D9CFB4()
{
  return MEMORY[0x1E0CDA9D0]();
}

uint64_t sub_1D2D9CFC0()
{
  return MEMORY[0x1E0CDA9E0]();
}

uint64_t sub_1D2D9CFCC()
{
  return MEMORY[0x1E0CDA9F0]();
}

uint64_t sub_1D2D9CFD8()
{
  return MEMORY[0x1E0CDA9F8]();
}

uint64_t sub_1D2D9CFE4()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t sub_1D2D9CFF0()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t sub_1D2D9CFFC()
{
  return MEMORY[0x1E0CDAA68]();
}

uint64_t sub_1D2D9D008()
{
  return MEMORY[0x1E0CDAA78]();
}

uint64_t sub_1D2D9D014()
{
  return MEMORY[0x1E0CDABA0]();
}

uint64_t sub_1D2D9D020()
{
  return MEMORY[0x1E0CDAC98]();
}

uint64_t sub_1D2D9D02C()
{
  return MEMORY[0x1E0CDACB8]();
}

uint64_t sub_1D2D9D038()
{
  return MEMORY[0x1E0CDACC8]();
}

uint64_t sub_1D2D9D044()
{
  return MEMORY[0x1E0CDAF28]();
}

uint64_t sub_1D2D9D050()
{
  return MEMORY[0x1E0CDAF30]();
}

uint64_t sub_1D2D9D05C()
{
  return MEMORY[0x1E0CDAF90]();
}

uint64_t sub_1D2D9D068()
{
  return MEMORY[0x1E0CDAFA0]();
}

uint64_t sub_1D2D9D074()
{
  return MEMORY[0x1E0CDAFB8]();
}

uint64_t sub_1D2D9D080()
{
  return MEMORY[0x1E0CDAFC8]();
}

uint64_t sub_1D2D9D08C()
{
  return MEMORY[0x1E0CDAFD0]();
}

uint64_t sub_1D2D9D098()
{
  return MEMORY[0x1E0CDAFE0]();
}

uint64_t sub_1D2D9D0A4()
{
  return MEMORY[0x1E0CDAFF8]();
}

uint64_t sub_1D2D9D0B0()
{
  return MEMORY[0x1E0CDB000]();
}

uint64_t sub_1D2D9D0BC()
{
  return MEMORY[0x1E0CDB020]();
}

uint64_t sub_1D2D9D0C8()
{
  return MEMORY[0x1E0CDB070]();
}

uint64_t sub_1D2D9D0D4()
{
  return MEMORY[0x1E0CDB080]();
}

uint64_t sub_1D2D9D0E0()
{
  return MEMORY[0x1E0CDB090]();
}

uint64_t sub_1D2D9D0EC()
{
  return MEMORY[0x1E0CDB0E8]();
}

uint64_t sub_1D2D9D0F8()
{
  return MEMORY[0x1E0CDB2B0]();
}

uint64_t sub_1D2D9D104()
{
  return MEMORY[0x1E0CDB2B8]();
}

uint64_t sub_1D2D9D110()
{
  return MEMORY[0x1E0CDB420]();
}

uint64_t sub_1D2D9D11C()
{
  return MEMORY[0x1E0CDB430]();
}

uint64_t sub_1D2D9D128()
{
  return MEMORY[0x1E0CDB4E8]();
}

uint64_t sub_1D2D9D134()
{
  return MEMORY[0x1E0CDB4F0]();
}

uint64_t sub_1D2D9D140()
{
  return MEMORY[0x1E0CDB5B8]();
}

uint64_t sub_1D2D9D14C()
{
  return MEMORY[0x1E0CDB5F0]();
}

uint64_t sub_1D2D9D158()
{
  return MEMORY[0x1E0CDB608]();
}

uint64_t sub_1D2D9D164()
{
  return MEMORY[0x1E0CDB658]();
}

uint64_t sub_1D2D9D170()
{
  return MEMORY[0x1E0CDB668]();
}

uint64_t sub_1D2D9D17C()
{
  return MEMORY[0x1E0CDB678]();
}

uint64_t sub_1D2D9D188()
{
  return MEMORY[0x1E0CDB688]();
}

uint64_t sub_1D2D9D194()
{
  return MEMORY[0x1E0CDB698]();
}

uint64_t sub_1D2D9D1A0()
{
  return MEMORY[0x1E0CDB6A8]();
}

uint64_t sub_1D2D9D1AC()
{
  return MEMORY[0x1E0CDB6B8]();
}

uint64_t sub_1D2D9D1B8()
{
  return MEMORY[0x1E0CDB6D0]();
}

uint64_t sub_1D2D9D1C4()
{
  return MEMORY[0x1E0CDB6E0]();
}

uint64_t sub_1D2D9D1D0()
{
  return MEMORY[0x1E0CDB6F0]();
}

uint64_t sub_1D2D9D1DC()
{
  return MEMORY[0x1E0CDB6F8]();
}

uint64_t sub_1D2D9D1E8()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t sub_1D2D9D1F4()
{
  return MEMORY[0x1E0CDB9C8]();
}

uint64_t sub_1D2D9D200()
{
  return MEMORY[0x1E0CDB9F0]();
}

uint64_t sub_1D2D9D20C()
{
  return MEMORY[0x1E0CDBAC0]();
}

uint64_t sub_1D2D9D218()
{
  return MEMORY[0x1E0CDBAD0]();
}

uint64_t sub_1D2D9D224()
{
  return MEMORY[0x1E0CDBAD8]();
}

uint64_t sub_1D2D9D230()
{
  return MEMORY[0x1E0CDBB10]();
}

uint64_t sub_1D2D9D23C()
{
  return MEMORY[0x1E0CDBC88]();
}

uint64_t sub_1D2D9D248()
{
  return MEMORY[0x1E0CDBC90]();
}

uint64_t sub_1D2D9D254()
{
  return MEMORY[0x1E0CDBD58]();
}

uint64_t sub_1D2D9D260()
{
  return MEMORY[0x1E0CDBD70]();
}

uint64_t sub_1D2D9D26C()
{
  return MEMORY[0x1E0CDBE08]();
}

uint64_t sub_1D2D9D278()
{
  return MEMORY[0x1E0CDBF88]();
}

uint64_t sub_1D2D9D284()
{
  return MEMORY[0x1E0CDBFA0]();
}

uint64_t sub_1D2D9D290()
{
  return MEMORY[0x1E0CDBFA8]();
}

uint64_t sub_1D2D9D29C()
{
  return MEMORY[0x1E0CDC170]();
}

uint64_t sub_1D2D9D2A8()
{
  return MEMORY[0x1E0CDC308]();
}

uint64_t sub_1D2D9D2B4()
{
  return MEMORY[0x1E0CDC320]();
}

uint64_t sub_1D2D9D2C0()
{
  return MEMORY[0x1E0CDC350]();
}

uint64_t sub_1D2D9D2CC()
{
  return MEMORY[0x1E0CDC368]();
}

uint64_t sub_1D2D9D2D8()
{
  return MEMORY[0x1E0CDC388]();
}

uint64_t sub_1D2D9D2E4()
{
  return MEMORY[0x1E0CDC3A8]();
}

uint64_t sub_1D2D9D2F0()
{
  return MEMORY[0x1E0CDC3E0]();
}

uint64_t sub_1D2D9D2FC()
{
  return MEMORY[0x1E0CDC528]();
}

uint64_t sub_1D2D9D308()
{
  return MEMORY[0x1E0CDC550]();
}

uint64_t sub_1D2D9D314()
{
  return MEMORY[0x1E0CDC560]();
}

uint64_t sub_1D2D9D320()
{
  return MEMORY[0x1E0CDC7A0]();
}

uint64_t sub_1D2D9D32C()
{
  return MEMORY[0x1E0CDC7A8]();
}

uint64_t sub_1D2D9D338()
{
  return MEMORY[0x1E0CDCA38]();
}

uint64_t sub_1D2D9D344()
{
  return MEMORY[0x1E0CDCE48]();
}

uint64_t sub_1D2D9D350()
{
  return MEMORY[0x1E0CDCE60]();
}

uint64_t sub_1D2D9D35C()
{
  return MEMORY[0x1E0CDCE68]();
}

uint64_t sub_1D2D9D368()
{
  return MEMORY[0x1E0CDCE78]();
}

uint64_t sub_1D2D9D374()
{
  return MEMORY[0x1E0CDCE90]();
}

uint64_t sub_1D2D9D380()
{
  return MEMORY[0x1E0CDCEA0]();
}

uint64_t sub_1D2D9D38C()
{
  return MEMORY[0x1E0CDCEB0]();
}

uint64_t sub_1D2D9D398()
{
  return MEMORY[0x1E0CDCEB8]();
}

uint64_t sub_1D2D9D3A4()
{
  return MEMORY[0x1E0CDCEC8]();
}

uint64_t sub_1D2D9D3B0()
{
  return MEMORY[0x1E0CDCF38]();
}

uint64_t sub_1D2D9D3BC()
{
  return MEMORY[0x1E0CDD128]();
}

uint64_t sub_1D2D9D3C8()
{
  return MEMORY[0x1E0CDD138]();
}

uint64_t sub_1D2D9D3D4()
{
  return MEMORY[0x1E0CDD140]();
}

uint64_t sub_1D2D9D3E0()
{
  return MEMORY[0x1E0CDD148]();
}

uint64_t sub_1D2D9D3EC()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t sub_1D2D9D3F8()
{
  return MEMORY[0x1E0CDD320]();
}

uint64_t sub_1D2D9D404()
{
  return MEMORY[0x1E0CDD348]();
}

uint64_t sub_1D2D9D410()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t sub_1D2D9D41C()
{
  return MEMORY[0x1E0CDD368]();
}

uint64_t sub_1D2D9D428()
{
  return MEMORY[0x1E0CDD380]();
}

uint64_t sub_1D2D9D434()
{
  return MEMORY[0x1E0CDD390]();
}

uint64_t sub_1D2D9D440()
{
  return MEMORY[0x1E0CDD3C0]();
}

uint64_t sub_1D2D9D44C()
{
  return MEMORY[0x1E0CDD438]();
}

uint64_t sub_1D2D9D458()
{
  return MEMORY[0x1E0CDD4D8]();
}

uint64_t sub_1D2D9D464()
{
  return MEMORY[0x1E0CDD4E0]();
}

uint64_t sub_1D2D9D470()
{
  return MEMORY[0x1E0CDD520]();
}

uint64_t sub_1D2D9D47C()
{
  return MEMORY[0x1E0CDD560]();
}

uint64_t sub_1D2D9D488()
{
  return MEMORY[0x1E0CDD580]();
}

uint64_t sub_1D2D9D494()
{
  return MEMORY[0x1E0CDD590]();
}

uint64_t sub_1D2D9D4A0()
{
  return MEMORY[0x1E0CDD5E0]();
}

uint64_t sub_1D2D9D4AC()
{
  return MEMORY[0x1E0CDD5E8]();
}

uint64_t sub_1D2D9D4B8()
{
  return MEMORY[0x1E0CDD5F8]();
}

uint64_t sub_1D2D9D4C4()
{
  return MEMORY[0x1E0CDD638]();
}

uint64_t sub_1D2D9D4D0()
{
  return MEMORY[0x1E0CDD658]();
}

uint64_t sub_1D2D9D4DC()
{
  return MEMORY[0x1E0CDD688]();
}

uint64_t sub_1D2D9D4E8()
{
  return MEMORY[0x1E0CDD728]();
}

uint64_t sub_1D2D9D4F4()
{
  return MEMORY[0x1E0CDD770]();
}

uint64_t sub_1D2D9D500()
{
  return MEMORY[0x1E0CDD7F0]();
}

uint64_t sub_1D2D9D50C()
{
  return MEMORY[0x1E0CDD878]();
}

uint64_t sub_1D2D9D518()
{
  return MEMORY[0x1E0CDD8E8]();
}

uint64_t sub_1D2D9D524()
{
  return MEMORY[0x1E0CDD928]();
}

uint64_t sub_1D2D9D530()
{
  return MEMORY[0x1E0CDD960]();
}

uint64_t sub_1D2D9D53C()
{
  return MEMORY[0x1E0CDD980]();
}

uint64_t sub_1D2D9D548()
{
  return MEMORY[0x1E0CDDAB8]();
}

uint64_t sub_1D2D9D554()
{
  return MEMORY[0x1E0CDDAC0]();
}

uint64_t sub_1D2D9D560()
{
  return MEMORY[0x1E0CDDAD8]();
}

uint64_t sub_1D2D9D56C()
{
  return MEMORY[0x1E0CDDB08]();
}

uint64_t sub_1D2D9D578()
{
  return MEMORY[0x1E0CDDB18]();
}

uint64_t sub_1D2D9D584()
{
  return MEMORY[0x1E0CDDB28]();
}

uint64_t sub_1D2D9D590()
{
  return MEMORY[0x1E0CDDB88]();
}

uint64_t sub_1D2D9D59C()
{
  return MEMORY[0x1E0CDDB98]();
}

uint64_t sub_1D2D9D5A8()
{
  return MEMORY[0x1E0CDDC38]();
}

uint64_t sub_1D2D9D5B4()
{
  return MEMORY[0x1E0CDDC48]();
}

uint64_t sub_1D2D9D5C0()
{
  return MEMORY[0x1E0CDDDA0]();
}

uint64_t sub_1D2D9D5CC()
{
  return MEMORY[0x1E0CDDDD0]();
}

uint64_t sub_1D2D9D5D8()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t sub_1D2D9D5E4()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t sub_1D2D9D5F0()
{
  return MEMORY[0x1E0CDDE78]();
}

uint64_t sub_1D2D9D5FC()
{
  return MEMORY[0x1E0CDDEB0]();
}

uint64_t sub_1D2D9D608()
{
  return MEMORY[0x1E0CDDF08]();
}

uint64_t sub_1D2D9D614()
{
  return MEMORY[0x1E0CDDFD0]();
}

uint64_t sub_1D2D9D620()
{
  return MEMORY[0x1E0CDDFF0]();
}

uint64_t sub_1D2D9D62C()
{
  return MEMORY[0x1E0CDE188]();
}

uint64_t sub_1D2D9D638()
{
  return MEMORY[0x1E0CDE1A8]();
}

uint64_t sub_1D2D9D644()
{
  return MEMORY[0x1E0CDE230]();
}

uint64_t sub_1D2D9D650()
{
  return MEMORY[0x1E0CDE2C8]();
}

uint64_t sub_1D2D9D65C()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t sub_1D2D9D668()
{
  return MEMORY[0x1E0CDE468]();
}

uint64_t sub_1D2D9D674()
{
  return MEMORY[0x1E0CDE4B8]();
}

uint64_t sub_1D2D9D680()
{
  return MEMORY[0x1E0CDE580]();
}

uint64_t sub_1D2D9D68C()
{
  return MEMORY[0x1E0CDE870]();
}

uint64_t sub_1D2D9D698()
{
  return MEMORY[0x1E0CDE900]();
}

uint64_t sub_1D2D9D6A4()
{
  return MEMORY[0x1E0CDE960]();
}

uint64_t sub_1D2D9D6B0()
{
  return MEMORY[0x1E0CDE978]();
}

uint64_t sub_1D2D9D6BC()
{
  return MEMORY[0x1E0CDEA38]();
}

uint64_t sub_1D2D9D6C8()
{
  return MEMORY[0x1E0CDEBF8]();
}

uint64_t sub_1D2D9D6D4()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t sub_1D2D9D6E0()
{
  return MEMORY[0x1E0CDED90]();
}

uint64_t sub_1D2D9D6EC()
{
  return MEMORY[0x1E0CDEE28]();
}

uint64_t sub_1D2D9D6F8()
{
  return MEMORY[0x1E0CDEEB0]();
}

uint64_t sub_1D2D9D704()
{
  return MEMORY[0x1E0CDEF48]();
}

uint64_t sub_1D2D9D710()
{
  return MEMORY[0x1E0CDEF58]();
}

uint64_t sub_1D2D9D71C()
{
  return MEMORY[0x1E0CDF068]();
}

uint64_t sub_1D2D9D728()
{
  return MEMORY[0x1E0CDF088]();
}

uint64_t sub_1D2D9D734()
{
  return MEMORY[0x1E0CDF0B0]();
}

uint64_t sub_1D2D9D740()
{
  return MEMORY[0x1E0CDF0D8]();
}

uint64_t sub_1D2D9D74C()
{
  return MEMORY[0x1E0CDF128]();
}

uint64_t sub_1D2D9D758()
{
  return MEMORY[0x1E0CDF138]();
}

uint64_t sub_1D2D9D764()
{
  return MEMORY[0x1E0CDF1A0]();
}

uint64_t sub_1D2D9D770()
{
  return MEMORY[0x1E0CDF210]();
}

uint64_t sub_1D2D9D77C()
{
  return MEMORY[0x1E0CDF2B0]();
}

uint64_t sub_1D2D9D788()
{
  return MEMORY[0x1E0CDF2D0]();
}

uint64_t sub_1D2D9D794()
{
  return MEMORY[0x1E0CDF328]();
}

uint64_t sub_1D2D9D7A0()
{
  return MEMORY[0x1E0CDF330]();
}

uint64_t sub_1D2D9D7AC()
{
  return MEMORY[0x1E0CDF338]();
}

uint64_t sub_1D2D9D7B8()
{
  return MEMORY[0x1E0CDF348]();
}

uint64_t sub_1D2D9D7C4()
{
  return MEMORY[0x1E0CDF350]();
}

uint64_t sub_1D2D9D7D0()
{
  return MEMORY[0x1E0CDF358]();
}

uint64_t sub_1D2D9D7DC()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t sub_1D2D9D7E8()
{
  return MEMORY[0x1E0CDF3C0]();
}

uint64_t sub_1D2D9D7F4()
{
  return MEMORY[0x1E0CDF490]();
}

uint64_t sub_1D2D9D800()
{
  return MEMORY[0x1E0CDF4A8]();
}

uint64_t sub_1D2D9D80C()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t sub_1D2D9D818()
{
  return MEMORY[0x1E0CDF520]();
}

uint64_t sub_1D2D9D824()
{
  return MEMORY[0x1E0CDF530]();
}

uint64_t sub_1D2D9D830()
{
  return MEMORY[0x1E0CDF588]();
}

uint64_t sub_1D2D9D83C()
{
  return MEMORY[0x1E0CDF610]();
}

uint64_t sub_1D2D9D848()
{
  return MEMORY[0x1E0CDF628]();
}

uint64_t sub_1D2D9D854()
{
  return MEMORY[0x1E0CDF6D8]();
}

uint64_t sub_1D2D9D860()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t sub_1D2D9D86C()
{
  return MEMORY[0x1E0CDF748]();
}

uint64_t sub_1D2D9D878()
{
  return MEMORY[0x1E0CDF7E8]();
}

uint64_t sub_1D2D9D884()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t sub_1D2D9D890()
{
  return MEMORY[0x1E0CDF878]();
}

uint64_t sub_1D2D9D89C()
{
  return MEMORY[0x1E0CDF880]();
}

uint64_t sub_1D2D9D8A8()
{
  return MEMORY[0x1E0CDF888]();
}

uint64_t sub_1D2D9D8B4()
{
  return MEMORY[0x1E0CDF968]();
}

uint64_t sub_1D2D9D8C0()
{
  return MEMORY[0x1E0CDF970]();
}

uint64_t sub_1D2D9D8CC()
{
  return MEMORY[0x1E0CDF988]();
}

uint64_t sub_1D2D9D8D8()
{
  return MEMORY[0x1E0CDF990]();
}

uint64_t sub_1D2D9D8E4()
{
  return MEMORY[0x1E0CDF9A8]();
}

uint64_t sub_1D2D9D8F0()
{
  return MEMORY[0x1E0CDF9E8]();
}

uint64_t sub_1D2D9D8FC()
{
  return MEMORY[0x1E0CDF9F0]();
}

uint64_t sub_1D2D9D908()
{
  return MEMORY[0x1E0CDFA28]();
}

uint64_t sub_1D2D9D914()
{
  return MEMORY[0x1E0CDFAE0]();
}

uint64_t sub_1D2D9D920()
{
  return MEMORY[0x1E0CDFAF0]();
}

uint64_t sub_1D2D9D92C()
{
  return MEMORY[0x1E0CDFBC0]();
}

uint64_t sub_1D2D9D938()
{
  return MEMORY[0x1E0CDFC40]();
}

uint64_t sub_1D2D9D944()
{
  return MEMORY[0x1E0CDFC88]();
}

uint64_t sub_1D2D9D950()
{
  return MEMORY[0x1E0CDFCA0]();
}

uint64_t sub_1D2D9D95C()
{
  return MEMORY[0x1E0CDFD38]();
}

uint64_t sub_1D2D9D968()
{
  return MEMORY[0x1E0CDFD48]();
}

uint64_t sub_1D2D9D974()
{
  return MEMORY[0x1E0CDFD70]();
}

uint64_t sub_1D2D9D980()
{
  return MEMORY[0x1E0CDFD80]();
}

uint64_t sub_1D2D9D98C()
{
  return MEMORY[0x1E0CDFDB8]();
}

uint64_t sub_1D2D9D998()
{
  return MEMORY[0x1E0CDFE18]();
}

uint64_t sub_1D2D9D9A4()
{
  return MEMORY[0x1E0CDFE48]();
}

uint64_t sub_1D2D9D9B0()
{
  return MEMORY[0x1E0CDFE58]();
}

uint64_t sub_1D2D9D9BC()
{
  return MEMORY[0x1E0CDFE98]();
}

uint64_t sub_1D2D9D9C8()
{
  return MEMORY[0x1E0CDFEA8]();
}

uint64_t sub_1D2D9D9D4()
{
  return MEMORY[0x1E0CDFF48]();
}

uint64_t sub_1D2D9D9E0()
{
  return MEMORY[0x1E0CDFF58]();
}

uint64_t sub_1D2D9D9EC()
{
  return MEMORY[0x1E0CDFF60]();
}

uint64_t sub_1D2D9D9F8()
{
  return MEMORY[0x1E0CDFF78]();
}

uint64_t sub_1D2D9DA04()
{
  return MEMORY[0x1E0CE0090]();
}

uint64_t sub_1D2D9DA10()
{
  return MEMORY[0x1E0CE0098]();
}

uint64_t sub_1D2D9DA1C()
{
  return MEMORY[0x1E0CE00E0]();
}

uint64_t sub_1D2D9DA28()
{
  return MEMORY[0x1E0CE0170]();
}

uint64_t sub_1D2D9DA34()
{
  return MEMORY[0x1E0CE0190]();
}

uint64_t sub_1D2D9DA40()
{
  return MEMORY[0x1E0CE01B0]();
}

uint64_t sub_1D2D9DA4C()
{
  return MEMORY[0x1E0CE01D8]();
}

uint64_t sub_1D2D9DA58()
{
  return MEMORY[0x1E0CE0200]();
}

uint64_t sub_1D2D9DA64()
{
  return MEMORY[0x1E0CE0208]();
}

uint64_t sub_1D2D9DA70()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t sub_1D2D9DA7C()
{
  return MEMORY[0x1E0CE0228]();
}

uint64_t sub_1D2D9DA88()
{
  return MEMORY[0x1E0CE0238]();
}

uint64_t sub_1D2D9DA94()
{
  return MEMORY[0x1E0CE02B0]();
}

uint64_t sub_1D2D9DAA0()
{
  return MEMORY[0x1E0CE02C8]();
}

uint64_t sub_1D2D9DAAC()
{
  return MEMORY[0x1E0CE02D8]();
}

uint64_t sub_1D2D9DAB8()
{
  return MEMORY[0x1E0CE03F0]();
}

uint64_t sub_1D2D9DAC4()
{
  return MEMORY[0x1E0CE04F0]();
}

uint64_t sub_1D2D9DAD0()
{
  return MEMORY[0x1E0CE04F8]();
}

uint64_t sub_1D2D9DADC()
{
  return MEMORY[0x1E0CE0648]();
}

uint64_t sub_1D2D9DAE8()
{
  return MEMORY[0x1E0CE0670]();
}

uint64_t sub_1D2D9DAF4()
{
  return MEMORY[0x1E0CE06A8]();
}

uint64_t sub_1D2D9DB00()
{
  return MEMORY[0x1E0CE06D0]();
}

uint64_t sub_1D2D9DB0C()
{
  return MEMORY[0x1E0CE06E0]();
}

uint64_t sub_1D2D9DB18()
{
  return MEMORY[0x1E0CE06E8]();
}

uint64_t sub_1D2D9DB24()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1D2D9DB30()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1D2D9DB3C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1D2D9DB48()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1D2D9DB54()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1D2D9DB60()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1D2D9DB6C()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1D2D9DB78()
{
  return MEMORY[0x1E0CEE500]();
}

uint64_t sub_1D2D9DB84()
{
  return MEMORY[0x1E0CEE508]();
}

uint64_t sub_1D2D9DB90()
{
  return MEMORY[0x1E0CEE510]();
}

uint64_t sub_1D2D9DB9C()
{
  return MEMORY[0x1E0CEE520]();
}

uint64_t sub_1D2D9DBA8()
{
  return MEMORY[0x1E0CEE528]();
}

uint64_t sub_1D2D9DBB4()
{
  return MEMORY[0x1E0CEE530]();
}

uint64_t sub_1D2D9DBC0()
{
  return MEMORY[0x1E0CEE538]();
}

uint64_t sub_1D2D9DBCC()
{
  return MEMORY[0x1E0CEE540]();
}

uint64_t sub_1D2D9DBD8()
{
  return MEMORY[0x1E0CEE548]();
}

uint64_t sub_1D2D9DBE4()
{
  return MEMORY[0x1E0CEE550]();
}

uint64_t sub_1D2D9DBF0()
{
  return MEMORY[0x1E0CEE558]();
}

uint64_t sub_1D2D9DBFC()
{
  return MEMORY[0x1E0CEE560]();
}

uint64_t sub_1D2D9DC08()
{
  return MEMORY[0x1E0CEE570]();
}

uint64_t sub_1D2D9DC14()
{
  return MEMORY[0x1E0CEE578]();
}

uint64_t sub_1D2D9DC20()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D2D9DC2C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D2D9DC38()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D2D9DC44()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D2D9DC50()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1D2D9DC5C()
{
  return MEMORY[0x1E0DEA250]();
}

uint64_t sub_1D2D9DC68()
{
  return MEMORY[0x1E0DF1F90]();
}

uint64_t sub_1D2D9DC74()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D2D9DC80()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1D2D9DC8C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D2D9DC98()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1D2D9DCA4()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1D2D9DCB0()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D2D9DCBC()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D2D9DCC8()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D2D9DCD4()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D2D9DCE0()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1D2D9DCEC()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1D2D9DCF8()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1D2D9DD04()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1D2D9DD10()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1D2D9DD1C()
{
  return MEMORY[0x1E0CB1A40]();
}

uint64_t sub_1D2D9DD28()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1D2D9DD34()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1D2D9DD40()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1D2D9DD4C()
{
  return MEMORY[0x1E0DEA6A0]();
}

uint64_t sub_1D2D9DD58()
{
  return MEMORY[0x1E0DEA6A8]();
}

uint64_t sub_1D2D9DD64()
{
  return MEMORY[0x1E0DEA6B8]();
}

uint64_t sub_1D2D9DD70()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D2D9DD7C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D2D9DD88()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1D2D9DD94()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1D2D9DDA0()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D2D9DDAC()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1D2D9DDB8()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1D2D9DDC4()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1D2D9DDD0()
{
  return MEMORY[0x1E0DEA8F8]();
}

uint64_t sub_1D2D9DDDC()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1D2D9DDE8()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1D2D9DDF4()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1D2D9DE00()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1D2D9DE0C()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1D2D9DE18()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1D2D9DE24()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1D2D9DE30()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1D2D9DE3C()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1D2D9DE48()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D2D9DE54()
{
  return MEMORY[0x1E0CB1AD0]();
}

uint64_t sub_1D2D9DE60()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D2D9DE6C()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1D2D9DE78()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D2D9DE84()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1D2D9DE90()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1D2D9DE9C()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1D2D9DEA8()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1D2D9DEB4()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1D2D9DEC0()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1D2D9DECC()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1D2D9DED8()
{
  return MEMORY[0x1E0DF0608]();
}

uint64_t sub_1D2D9DEE4()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1D2D9DEF0()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1D2D9DEFC()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1D2D9DF08()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1D2D9DF14()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1D2D9DF20()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1D2D9DF2C()
{
  return MEMORY[0x1E0DF07E0]();
}

uint64_t sub_1D2D9DF38()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1D2D9DF44()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1D2D9DF50()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1D2D9DF5C()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1D2D9DF68()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1D2D9DF74()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1D2D9DF80()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1D2D9DF8C()
{
  return MEMORY[0x1E0DF0A88]();
}

uint64_t sub_1D2D9DF98()
{
  return MEMORY[0x1E0DF0A90]();
}

uint64_t sub_1D2D9DFA4()
{
  return MEMORY[0x1E0DF0AD8]();
}

uint64_t sub_1D2D9DFB0()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1D2D9DFBC()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1D2D9DFC8()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1D2D9DFD4()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1D2D9DFE0()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D2D9DFEC()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1D2D9DFF8()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1D2D9E004()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1D2D9E010()
{
  return MEMORY[0x1E0DEFC30]();
}

uint64_t sub_1D2D9E01C()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1D2D9E028()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D2D9E034()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D2D9E040()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D2D9E04C()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D2D9E058()
{
  return MEMORY[0x1E0DC2C00]();
}

uint64_t sub_1D2D9E064()
{
  return MEMORY[0x1E0DEF7D8]();
}

uint64_t sub_1D2D9E070()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1D2D9E07C()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1D2D9E088()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1D2D9E094()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1D2D9E0A0()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1D2D9E0AC()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1D2D9E0B8()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1D2D9E0C4()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1D2D9E0D0()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1D2D9E0DC()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1D2D9E0E8()
{
  return MEMORY[0x1E0CB1ED8]();
}

uint64_t sub_1D2D9E0F4()
{
  return MEMORY[0x1E0CB1EE0]();
}

uint64_t sub_1D2D9E100()
{
  return MEMORY[0x1E0CB1F08]();
}

uint64_t sub_1D2D9E10C()
{
  return MEMORY[0x1E0C9B9B8]();
}

uint64_t sub_1D2D9E118()
{
  return MEMORY[0x1E0DC2F48]();
}

uint64_t sub_1D2D9E124()
{
  return MEMORY[0x1E0CE0758]();
}

uint64_t sub_1D2D9E130()
{
  return MEMORY[0x1E0CB20C8]();
}

uint64_t sub_1D2D9E13C()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1D2D9E148()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1D2D9E154()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D2D9E160()
{
  return MEMORY[0x1E0DC2FF8]();
}

uint64_t sub_1D2D9E16C()
{
  return MEMORY[0x1E0DC3148]();
}

uint64_t sub_1D2D9E178()
{
  return MEMORY[0x1E0DC31D0]();
}

uint64_t sub_1D2D9E184()
{
  return MEMORY[0x1E0DC3258]();
}

uint64_t sub_1D2D9E190()
{
  return MEMORY[0x1E0CB2190]();
}

uint64_t sub_1D2D9E19C()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1D2D9E1A8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1D2D9E1B4()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1D2D9E1C0()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1D2D9E1CC()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1D2D9E1D8()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1D2D9E1E4()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1D2D9E1F0()
{
  return MEMORY[0x1E0CB24F0]();
}

uint64_t sub_1D2D9E1FC()
{
  return MEMORY[0x1E0CB2570]();
}

uint64_t sub_1D2D9E208()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1D2D9E214()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D2D9E220()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1D2D9E22C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1D2D9E238()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D2D9E244()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1D2D9E250()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1D2D9E25C()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1D2D9E268()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1D2D9E274()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1D2D9E280()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1D2D9E28C()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1D2D9E298()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1D2D9E2A4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D2D9E2B0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D2D9E2BC()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1D2D9E2C8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D2D9E2D4()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1D2D9E2E0()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1D2D9E2EC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D2D9E2F8()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1D2D9E304()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D2D9E310()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1D2D9E31C()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1D2D9E328()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D2D9E334()
{
  return MEMORY[0x1E0DF0B08]();
}

uint64_t sub_1D2D9E340()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1D2D9E34C()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1D2D9E358()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1D2D9E364()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1D2D9E370()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1D2D9E37C()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D2D9E388()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1D2D9E394()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D2D9E3A0()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1D2D9E3AC()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D2D9E3B8()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D2D9E3C4()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D2D9E3D0()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D2D9E3DC()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1D2D9E3E8()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D2D9E3F4()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D2D9E400()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1D2D9E40C()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1D2D9E418()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1D2D9E424()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1D2D9E430()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1D2D9E43C()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1D2D9E448()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1D2D9E454()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1D2D9E460()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1D2D9E46C()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1D2D9E478()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1D2D9E484()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1D2D9E490()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1D2D9E49C()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1D2D9E4A8()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1D2D9E4B4()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1D2D9E4C0()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1D2D9E4CC()
{
  return MEMORY[0x1E0DED108]();
}

uint64_t sub_1D2D9E4D8()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1D2D9E4E4()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1D2D9E4F0()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1D2D9E4FC()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1D2D9E508()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D2D9E514()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1D2D9E520()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1D2D9E52C()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D2D9E538()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1D2D9E544()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1D2D9E550()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1D2D9E55C()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D2D9E568()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D2D9E574()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1D2D9E580()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1D2D9E58C()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1D2D9E598()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1D2D9E5A4()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1D2D9E5B0()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1D2D9E5BC()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1D2D9E5C8()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D2D9E5D4()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D2D9E5E0()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1D2D9E5EC()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_1D2D9E5F8()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D2D9E604()
{
  return MEMORY[0x1E0DEDF48]();
}

uint64_t sub_1D2D9E610()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1D2D9E61C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1D2D9E628()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1D2D9E634()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2648](retstr, tx, ty, tz);
}

uint64_t CATransform3DMakeWithSIMDFloat3x3()
{
  return MEMORY[0x1E0CD2650]();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BCA0](gray, alpha);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D558]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1E0D4E4D0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1E0CE88B8](allocator, address);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1E0CE88C8](allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return MEMORY[0x1E0CE88D8](target, flags);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return MEMORY[0x1E0CE88F0](target, callout, context);
}

Boolean SCNetworkReachabilitySetDispatchQueue(SCNetworkReachabilityRef target, dispatch_queue_t queue)
{
  return MEMORY[0x1E0CE88F8](target, queue);
}

uint64_t SFLocalizableWAPIStringKeyForKey()
{
  return MEMORY[0x1E0D8D678]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x1E0DC4570]();
}

uint64_t UIAccessibilitySpeakAndDoNotBeInterrupted()
{
  return MEMORY[0x1E0DC1080]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _LTDisambiguationTypeDescription()
{
  return MEMORY[0x1E0CE9998]();
}

uint64_t _LTIsInternalInstall()
{
  return MEMORY[0x1E0CE99A0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

