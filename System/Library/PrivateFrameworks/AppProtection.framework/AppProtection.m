uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t APCoreFunctionalityEnabled()
{
  return _os_feature_enabled_impl();
}

void sub_23624E140(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_23624E148(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23624E148(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_2362CB2D8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_23624E1A0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23624E344(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B7EF18C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23624E384(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23624E3C4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B7EF18C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t APApplication.isHidden.getter()
{
  return sub_2362C2650((void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))sub_23624EDBC);
}

uint64_t APApplication.isLocked.getter()
{
  return sub_2362C2650((void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))sub_23624EDD8);
}

id sub_23624E44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  id v32;
  id v33;
  objc_super v35;
  _QWORD v36[5];
  _QWORD v37[3];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];
  uint64_t v41;
  _QWORD v42[5];

  v42[3] = &type metadata for ServerBackedClientArena;
  v42[4] = &off_250794558;
  v4 = swift_allocObject();
  v42[0] = v4;
  v5 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v4 + 128) = v5;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a3 + 128);
  v6 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v4 + 64) = v6;
  v7 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v4 + 96) = v7;
  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = objc_allocWithZone((Class)APApplication);
  v10 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  sub_23624E76C((uint64_t)v42, (uint64_t)v40);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
  MEMORY[0x24BDAC7A8](v11, v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  v38 = &type metadata for ServerBackedClientArena;
  v39 = &off_250794558;
  v15 = swift_allocObject();
  v37[0] = v15;
  v16 = *((_OWORD *)v13 + 7);
  *(_OWORD *)(v15 + 112) = *((_OWORD *)v13 + 6);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *((_QWORD *)v13 + 16);
  v17 = *((_OWORD *)v13 + 3);
  *(_OWORD *)(v15 + 48) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *((_OWORD *)v13 + 5);
  *(_OWORD *)(v15 + 80) = *((_OWORD *)v13 + 4);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v13;
  *(_OWORD *)(v15 + 32) = v19;
  v20 = (objc_class *)type metadata accessor for ClientArenaWrapper();
  v21 = objc_allocWithZone(v20);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, (uint64_t)v38);
  MEMORY[0x24BDAC7A8](v22, v22);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v24);
  v36[3] = &type metadata for ServerBackedClientArena;
  v36[4] = &off_250794558;
  v26 = swift_allocObject();
  v36[0] = v26;
  v27 = *((_OWORD *)v24 + 7);
  *(_OWORD *)(v26 + 112) = *((_OWORD *)v24 + 6);
  *(_OWORD *)(v26 + 128) = v27;
  *(_QWORD *)(v26 + 144) = *((_QWORD *)v24 + 16);
  v28 = *((_OWORD *)v24 + 3);
  *(_OWORD *)(v26 + 48) = *((_OWORD *)v24 + 2);
  *(_OWORD *)(v26 + 64) = v28;
  v29 = *((_OWORD *)v24 + 5);
  *(_OWORD *)(v26 + 80) = *((_OWORD *)v24 + 4);
  *(_OWORD *)(v26 + 96) = v29;
  v30 = *((_OWORD *)v24 + 1);
  v31 = (uint64_t)v21 + OBJC_IVAR____TtC13AppProtectionP33_215D8CF8FF516198782505704A9473C518ClientArenaWrapper_arena;
  *(_OWORD *)(v26 + 16) = *(_OWORD *)v24;
  *(_OWORD *)(v26 + 32) = v30;
  sub_23624E76C((uint64_t)v36, v31);
  v35.receiver = v21;
  v35.super_class = v20;
  v32 = objc_msgSendSuper2(&v35, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v33 = objc_msgSend(v9, sel_initFileprivWithBundleID_arena_, v10, v32);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v33;
}

uint64_t sub_23624E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for APAppInstallationManager.State.ReferenceHolder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_23624E7E4(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s **v2;
  os_unfair_lock_s *v5;
  void **v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[5];
  _BYTE v11[136];

  v5 = *v2;
  sub_23624E8A8((uint64_t)v2, (uint64_t)v11);
  v10[3] = &type metadata for ServerBackedClientArena;
  v10[4] = &off_250794558;
  v10[0] = swift_allocObject();
  sub_23624E8A8((uint64_t)v11, v10[0] + 16);
  v6 = (void **)&v5[4];
  v5 += 6;
  os_unfair_lock_lock(v5);
  sub_23624E948(v6, a1, a2, (uint64_t)v10, &v9);
  os_unfair_lock_unlock(v5);
  v7 = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  sub_23624E8DC((uint64_t)v11);
  return v7;
}

uint64_t sub_23624E8A8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ServerBackedClientArena(a2, a1);
  return a2;
}

uint64_t sub_23624E8DC(uint64_t a1)
{
  destroy for ServerBackedClientArena(a1);
  return a1;
}

uint64_t destroy for ServerBackedClientArena(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 96);
}

void sub_23624E948(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  _BYTE v21[24];
  uint64_t v22;

  v10 = *a1;
  v11 = (void *)sub_2362CB674();
  v12 = objc_msgSend(v10, sel_objectForKey_, v11);

  if (!v12)
  {
    sub_23624E76C(a4, (uint64_t)v21);
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x24BDAC7A8](v13, v13);
    v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v16 + 16))(v15);
    swift_bridgeObjectRetain();
    v17 = sub_23624E44C(a2, a3, (uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v18 = *a1;
    v12 = v17;
    v19 = (void *)sub_2362CB674();
    objc_msgSend(v18, sel_setObject_forKey_, v12, v19);

  }
  *a5 = v12;
}

void sub_23624EB80(void **a1)
{
  sub_23624EB98(a1);
}

void sub_23624EB98(void **a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *a1;
  v2 = (void *)sub_2362CB674();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (!v3)
  {
    v3 = (id)sub_2362CB674();
    objc_msgSend(v1, sel_removeObjectForKey_, v3);
  }

}

id sub_23624EC40()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23624EC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_2362CBC8C();
    sub_2362CB710();
    v6 = sub_2362CBCBC();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2362CBBE4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2362CBBE4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_23624EDBC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23624EDF4(a1, (SEL *)&selRef_hiddenAppBundleIdentifiers, a2);
}

void sub_23624EDD8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23624EDF4(a1, (SEL *)&selRef_lockedAppBundleIdentifiers, a2);
}

void sub_23624EDF4(id *a1@<X0>, SEL *a2@<X2>, uint64_t *a3@<X8>)
{
  id v6;
  uint64_t v7;

  sub_23624EE74((uint64_t)a1);
  v6 = objc_msgSend(*a1, *a2);
  v7 = sub_2362CB7AC();

  *a3 = v7;
}

uint64_t sub_23624EE74(uint64_t a1)
{
  int v2;
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(a1 + 8);
  result = sub_23624EFD0();
  if ((result & 1) != 0 || v2)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
    v5 = sub_2362CB47C();
    v6 = sub_2362CB848();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      *(_DWORD *)v7 = 67109376;
      sub_2362CB9C8();
      *(_WORD *)(v7 + 8) = 1024;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v5, v6, "rechecking state, needed: %{BOOL}d forced: %{BOOL}d", (uint8_t *)v7, 0xEu);
      MEMORY[0x23B7EF258](v7, -1, -1);
    }

    return sub_23628F978(a1);
  }
  return result;
}

BOOL sub_23624EFD0()
{
  uint64_t v0;
  uint32_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  int check;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  check = 0;
  v1 = notify_check(*(_DWORD *)(v0 + 32), &check);
  if (v1)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v2 = sub_2362CB494();
    __swift_project_value_buffer(v2, (uint64_t)qword_2542A58F8);
    v3 = sub_2362CB47C();
    v4 = sub_2362CB83C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 67109120;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v3, v4, "Could not check: %u", v5, 8u);
      MEMORY[0x23B7EF258](v5, -1, -1);
    }

  }
  return (check | v1) != 0;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t initializeWithCopy for ServerBackedClientArena(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a2 + 8;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_unknownObjectRetain();
  v10(a1 + 56, a2 + 56, v9);
  v11 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 96, a2 + 96);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7EF174]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

void APDoFirstRunWork(void *a1, void *a2)
{
  id v3;
  void (**v4)(_QWORD);
  id v5;
  sem_t *v6;
  sem_t *v7;
  NSObject *v8;
  int v9;
  NSObject *v10;
  uint8_t buf[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = objc_retainAutorelease(v3);
  v6 = sem_open((const char *)objc_msgSend(v5, "UTF8String"), 2560, 256, 0);
  if (v6 == (sem_t *)-1)
  {
    v9 = *__error();
    if (v9 != 17)
    {
      APDefaultFrameworkLog();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        APDoFirstRunWork_cold_1(v9, v10);

    }
  }
  else
  {
    v7 = v6;
    APDefaultFrameworkLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v12 = v5;
      _os_log_impl(&dword_23624C000, v8, OS_LOG_TYPE_DEFAULT, "Doing first boot work for key %@", buf, 0xCu);
    }

    v4[2](v4);
    sem_close(v7);
  }

}

id APGetReadServiceInterface()
{
  if (APGetReadServiceInterface_onceToken != -1)
    dispatch_once(&APGetReadServiceInterface_onceToken, &__block_literal_global);
  return (id)APGetReadServiceInterface_interface;
}

id APGetWriteServiceInterface()
{
  if (APGetWriteServiceInterface_onceToken != -1)
    dispatch_once(&APGetWriteServiceInterface_onceToken, &__block_literal_global_4);
  return (id)APGetWriteServiceInterface_interface;
}

id APGetGuardServiceInterface()
{
  if (APGetGuardServiceInterface_onceToken != -1)
    dispatch_once(&APGetGuardServiceInterface_onceToken, &__block_literal_global_13);
  return (id)APGetGuardServiceInterface_interface;
}

id APGetMaintenanceServiceInterface()
{
  if (APGetMaintenanceServiceInterface_onceToken != -1)
    dispatch_once(&APGetMaintenanceServiceInterface_onceToken, &__block_literal_global_49);
  return (id)APGetMaintenanceServiceInterface_interface;
}

id APGetClientExtensionMonitorInterface()
{
  if (APGetClientExtensionMonitorInterface_onceToken != -1)
    dispatch_once(&APGetClientExtensionMonitorInterface_onceToken, &__block_literal_global_57);
  return (id)APGetClientExtensionMonitorInterface_interface;
}

id APGetExtensionMonitorServiceInterface()
{
  if (APGetExtensionMonitorServiceInterface_onceToken != -1)
    dispatch_once(&APGetExtensionMonitorServiceInterface_onceToken, &__block_literal_global_63);
  return (id)APGetExtensionMonitorServiceInterface_interface;
}

id APGetExtensionInfoServiceInterface()
{
  if (APGetExtensionInfoServiceInterface_onceToken != -1)
    dispatch_once(&APGetExtensionInfoServiceInterface_onceToken, &__block_literal_global_73);
  return (id)APGetExtensionInfoServiceInterface_interface;
}

const __CFString *APGetReadServiceName()
{
  return CFSTR("com.apple.appprotectiond.read");
}

const __CFString *APGetWriteServiceName()
{
  return CFSTR("com.apple.appprotectiond.write");
}

const __CFString *APGetGuardServiceName()
{
  return CFSTR("com.apple.appprotectiond.guard");
}

const __CFString *APGetMaintenanceServiceName()
{
  return CFSTR("com.apple.appprotectiond.maintenance");
}

const __CFString *APGetExtensionMonitorServiceName()
{
  return CFSTR("com.apple.appprotectiond.extensionmonitor");
}

const __CFString *APGetExtensionInfoServiceName()
{
  return CFSTR("com.apple.appprotectiond.extensioninfo");
}

id APGetReadConnection()
{
  void *v0;
  void *v1;

  APGetReadServiceInterface();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  APGetConnectionWithNameAndActiveCacheWithLock(CFSTR("com.apple.appprotectiond.read"), v0, &APGetReadConnection_cachedConnection, (os_unfair_lock_s *)&APGetReadConnection_lock);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id APGetConnectionWithNameAndActiveCacheWithLock(void *a1, void *a2, id *a3, os_unfair_lock_s *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  void *v17;
  id v18;
  os_unfair_lock_s *v19;
  id *v20;
  _QWORD v21[4];
  id v22;

  v7 = a1;
  v8 = a2;
  os_unfair_lock_lock(a4);
  if (*a3)
  {
    v9 = *a3;
  }
  else
  {
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1988]), "initWithMachServiceName:options:", v7, 0);
    objc_msgSend(v10, "setRemoteObjectInterface:", v8);
    v11 = MEMORY[0x24BDAC760];
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __APGetConnectionWithNameAndActiveCacheWithLock_block_invoke;
    v21[3] = &unk_250796730;
    v12 = v7;
    v22 = v12;
    objc_msgSend(v10, "setInterruptionHandler:", v21);
    v14 = v11;
    v15 = 3221225472;
    v16 = __APGetConnectionWithNameAndActiveCacheWithLock_block_invoke_97;
    v17 = &unk_250796758;
    v18 = v12;
    v19 = a4;
    v20 = a3;
    objc_msgSend(v10, "setInvalidationHandler:", &v14);
    objc_storeStrong(a3, v10);
    v9 = v10;
    objc_msgSend(v9, "resume", v14, v15, v16, v17);

  }
  os_unfair_lock_unlock(a4);

  return v9;
}

id APGetWriteConnection()
{
  void *v0;
  void *v1;

  APGetWriteServiceInterface();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  APGetConnectionWithNameAndActiveCacheWithLock(CFSTR("com.apple.appprotectiond.write"), v0, &APGetWriteConnection_cachedConnection, (os_unfair_lock_s *)&APGetWriteConnection_lock);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id APGetGuardConnection()
{
  void *v0;
  void *v1;

  APGetGuardServiceInterface();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  APGetConnectionWithNameAndActiveCacheWithLock(CFSTR("com.apple.appprotectiond.guard"), v0, &APGetGuardConnection_cachedConnection, (os_unfair_lock_s *)&APGetGuardConnection_lock);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id APGetMaintenanceConnection()
{
  void *v0;
  void *v1;

  APGetMaintenanceServiceInterface();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  APGetConnectionWithNameAndActiveCacheWithLock(CFSTR("com.apple.appprotectiond.maintenance"), v0, &APGetMaintenanceConnection_cachedConnection, (os_unfair_lock_s *)&APGetMaintenanceConnection_lock);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id APGetExtensionInfoConnection()
{
  void *v0;
  void *v1;

  APGetExtensionInfoServiceInterface();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  APGetConnectionWithNameAndActiveCacheWithLock(CFSTR("com.apple.appprotectiond.extensioninfo"), v0, &APGetExtensionInfoConnection_cachedConnection, (os_unfair_lock_s *)&APGetExtensionInfoConnection_lock);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id APGetSyncReadProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetReadConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "synchronousRemoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetSyncWriteProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetWriteConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "synchronousRemoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetAsyncWriteProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetWriteConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "remoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetSyncGuardProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetGuardConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "synchronousRemoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetAsyncGuardProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetGuardConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "remoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetSyncMaintenanceProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetMaintenanceConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "synchronousRemoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetSyncExtensionInfoProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetExtensionInfoConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "synchronousRemoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id APGetAsyncExtensionInfoProxy(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  APGetExtensionInfoConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "remoteObjectProxyWithErrorHandler:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t APGetAuditTokenForSelf()
{
  if (APGetAuditTokenForSelf_once != -1)
    dispatch_once(&APGetAuditTokenForSelf_once, &__block_literal_global_0);
  return APGetAuditTokenForSelf_result;
}

uint64_t APDataFromAuditToken(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", a1, 32);
}

BOOL APAuditTokenFromData(void *a1, _OWORD *a2, _QWORD *a3)
{
  id v5;
  _OWORD *v6;
  id v7;
  __int128 v8;
  _BOOL8 v9;

  v5 = a1;
  if (objc_msgSend(v5, "length") == 32)
  {
    if (a2)
    {
      v6 = (_OWORD *)objc_msgSend(objc_retainAutorelease(v5), "bytes");
      v7 = 0;
      v8 = v6[1];
      *a2 = *v6;
      a2[1] = v8;
    }
    else
    {
      v7 = 0;
    }
  }
  else
  {
    _APMakeNSError((void *)*MEMORY[0x24BDD0B88], 259, (uint64_t)"APAuditTokenFromData", 20, 0);
    v7 = (id)objc_claimAutoreleasedReturnValue();
    if (a3 && v7)
    {
      v7 = objc_retainAutorelease(v7);
      *a3 = v7;
    }
  }
  v9 = v7 == 0;

  return v9;
}

void APRunServerUntilTheEndOfTime()
{
  void *v0;

  +[APServer sharedInstance](_TtC13AppProtection8APServer, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "runForever");

  __break(1u);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id APDefaultFrameworkLog()
{
  if (APDefaultFrameworkLog_onceToken != -1)
    dispatch_once(&APDefaultFrameworkLog_onceToken, &__block_literal_global_1);
  return (id)APDefaultFrameworkLog_log;
}

id APDefaultAuthenticationLog()
{
  if (APDefaultAuthenticationLog_onceToken != -1)
    dispatch_once(&APDefaultAuthenticationLog_onceToken, &__block_literal_global_3);
  return (id)APDefaultAuthenticationLog_log;
}

__CFString *_APErrorCodeDescription(unint64_t a1)
{
  if (a1 < 0xD)
    return off_250796888[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("unknown AppProtection error code %lld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id _APMakeNSError(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v9 = a5;
  v18[0] = CFSTR("APLine");
  v10 = (void *)MEMORY[0x24BDD16E0];
  v11 = a1;
  objc_msgSend(v10, "numberWithInt:", a4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v18[1] = CFSTR("APFunc");
  v19[0] = v12;
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v13;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    v15 = (void *)objc_msgSend(v14, "mutableCopy");
    objc_msgSend(v15, "addEntriesFromDictionary:", v9);

    v14 = v15;
  }
  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1540]), "initWithDomain:code:userInfo:", v11, a2, v14);

  return v16;
}

void sub_23625129C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)(uint64_t);
  id v9;
  void *v10;
  void *v11;
  objc_super v12;

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (objc_class *)type metadata accessor for NotificationReceiverObjCShim();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)(uint64_t))&v7[OBJC_IVAR____TtC13AppProtection28NotificationReceiverObjCShim_callback];
  *v8 = sub_236253FC0;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  v12.receiver = v7;
  v12.super_class = v6;
  v9 = objc_msgSendSuper2(&v12, sel_init);

  *(_QWORD *)(a1 + 8) = v9;
  v10 = (void *)sub_2362CB674();
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v9, sel_receivedNotification_, v10, 0);

  v11 = (void *)sub_2362CB674();
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v9, sel_receivedNotification_, v11, 0);

}

uint64_t sub_2362513E4(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_236251440(a1);
    return swift_release();
  }
  return result;
}

void sub_236251440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint8_t *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  unint64_t v62;
  uint64_t v63[5];
  __int128 v64;
  __int128 v65;

  v2 = sub_2362CB218();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v59 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v60 = (void (*)(char *, uint64_t))((char *)&v58 - v9);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v58 - v11;
  v13 = (void *)sub_2362CB200();
  v14 = (void *)sub_2362CB674();
  v15 = sub_2362CB698();
  v17 = v16;
  if (v15 == sub_2362CB698() && v17 == v18)
    v20 = 1;
  else
    v20 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v21(v12, a1, v2);
  if ((v20 & 1) != 0)
  {
    v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v12, v2);
  }
  else
  {
    v23 = (void *)sub_2362CB200();
    v24 = (void *)sub_2362CB674();
    v25 = sub_2362CB698();
    v27 = v26;
    if (v25 == sub_2362CB698() && v27 == v28)
      v30 = 1;
    else
      v30 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v12, v2);
    if ((v30 & 1) == 0)
    {
      if (qword_2542A53D0 != -1)
        swift_once();
      v41 = sub_2362CB494();
      __swift_project_value_buffer(v41, (uint64_t)qword_2542A58F8);
      v42 = v59;
      v21(v59, a1, v2);
      v43 = sub_2362CB47C();
      v44 = sub_2362CB848();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v63[0] = v46;
        v60 = v22;
        *(_DWORD *)v45 = 136315138;
        v58 = v45 + 4;
        v47 = (void *)sub_2362CB200();
        v48 = sub_2362CB698();
        v50 = v49;

        *(_QWORD *)&v64 = sub_2362AB670(v48, v50, v63);
        sub_2362CB9C8();
        swift_bridgeObjectRelease();
        v60(v42, v2);
        _os_log_impl(&dword_23624C000, v43, v44, "unknown notification %s in APAppInstallationManager", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v46, -1, -1);
        MEMORY[0x23B7EF258](v45, -1, -1);
      }
      else
      {
        v22(v42, v2);
      }

      return;
    }
  }
  v31 = sub_2362CB20C();
  v32 = (char *)v60;
  if (v31)
  {
    v33 = v31;
    v61 = 0x4449656C646E7562;
    v62 = 0xE900000000000073;
    sub_2362CBA28();
    if (*(_QWORD *)(v33 + 16) && (v34 = sub_2362934A8((uint64_t)v63), (v35 & 1) != 0))
    {
      sub_23625403C(*(_QWORD *)(v33 + 56) + 32 * v34, (uint64_t)&v64);
    }
    else
    {
      v64 = 0u;
      v65 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_236253FC8((uint64_t)v63);
    if (*((_QWORD *)&v65 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41A8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v36 = v61;
        v37 = *((_QWORD *)v58 + 2);
        v38 = (os_unfair_lock_s *)(v37 + 32);
        os_unfair_lock_lock((os_unfair_lock_t)(v37 + 32));
        v39 = sub_2362693C8(*(_QWORD *)(v37 + 16));
        os_unfair_lock_unlock(v38);
        v40 = (void *)sub_2362CB200();
        sub_236251AAC(v39, v36);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      sub_236253FFC((uint64_t)&v64);
    }
  }
  if (qword_2542A53D0 != -1)
    swift_once();
  v51 = sub_2362CB494();
  __swift_project_value_buffer(v51, (uint64_t)qword_2542A58F8);
  v21(v32, a1, v2);
  v52 = sub_2362CB47C();
  v53 = sub_2362CB830();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = (uint8_t *)swift_slowAlloc();
    v55 = swift_slowAlloc();
    v63[0] = v55;
    *(_DWORD *)v54 = 136315138;
    *(_QWORD *)&v64 = sub_2362CB20C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7720);
    v56 = sub_2362CB6EC();
    *(_QWORD *)&v64 = sub_2362AB670(v56, v57, v63);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v22(v32, v2);
    _os_log_impl(&dword_23624C000, v52, v53, "could not extract bundle identifiers from user info %s", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v55, -1, -1);
    MEMORY[0x23B7EF258](v54, -1, -1);
  }
  else
  {
    v22(v32, v2);
  }

}

uint64_t sub_236251AAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[3];
  uint64_t v26;
  _UNKNOWN **v27;

  v3 = v2;
  v6 = *v2;
  v7 = (void *)sub_2362CB674();
  v8 = sub_2362CB698();
  v10 = v9;
  if (v8 == sub_2362CB698() && v10 == v11)
  {

    result = swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_2362CBBE4();

    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      v15 = *(_QWORD *)(a1 + 16);
      if (!v15)
        return result;
      swift_bridgeObjectRetain();
      v16 = (uint64_t *)(a1 + 40);
      do
      {
        v17 = *v16;
        ObjectType = swift_getObjectType();
        v26 = v6;
        v27 = &off_250794748;
        v25[0] = v3;
        v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v17 + 8);
        swift_retain();
        swift_unknownObjectRetain();
        v19(v25, a2, ObjectType, v17);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        v16 += 2;
        --v15;
      }
      while (v15);
      return swift_bridgeObjectRelease();
    }
  }
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
    return result;
  swift_bridgeObjectRetain();
  v21 = (uint64_t *)(a1 + 40);
  do
  {
    v22 = *v21;
    v23 = swift_getObjectType();
    v26 = v6;
    v27 = &off_250794748;
    v25[0] = v3;
    v24 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v22 + 16);
    swift_unknownObjectRetain();
    swift_retain();
    v24(v25, a2, v23, v22);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v21 += 2;
    --v20;
  }
  while (v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236251C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236269528(a2, a3);
}

uint64_t sub_236251CC0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_2362C3070(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_236253C60(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

id sub_236251D3C(void *a1, uint64_t a2)
{
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = objc_msgSend(a1, sel_bundleIdentifier);
  if (result)
  {
    v4 = result;
    v5 = sub_2362CB698();
    v7 = v6;

    if ((sub_23624EC88(v5, v7, a2) & 1) != 0)
    {
      sub_236252958(&v8, v5, v7);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_236251DE8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_236251E08(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_236251E3C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APAppInstallationManager()
{
  return objc_opt_self();
}

void type metadata accessor for APSubjectMonitorSubjectMask(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6CD0);
}

_QWORD *initializeBufferWithCopyOfBuffer for APAppInstallationManager.State(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for APAppInstallationManager.State(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for APAppInstallationManager.State(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for APAppInstallationManager.State(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for APAppInstallationManager.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APAppInstallationManager.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APAppInstallationManager.State()
{
  return &type metadata for APAppInstallationManager.State;
}

void type metadata accessor for APDataSetAccessGrantReason(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6CD8);
}

id sub_236252038()
{
  id result;
  void *v1;
  void *v2;
  id v3;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_2362CB674();
    v3 = objc_msgSend(v1, sel_applicationIsInstalled_, v2);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2362520C0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_2362520C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_2362520DC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_2362520F0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23625211C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_236252140(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_236252154@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_236252168(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23625217C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_236252190(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2362521A4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_2362521B4()
{
  return sub_2362CB9EC();
}

_QWORD *sub_2362521CC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_2362521E0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2362521F0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_UNKNOWN **sub_2362521FC()
{
  return &off_2563D5230;
}

uint64_t sub_236252208(uint64_t a1, uint64_t a2)
{
  return sub_2362527E4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_236252224(uint64_t a1, uint64_t a2)
{
  return sub_2362527E4(a1, a2, MEMORY[0x24BEE0CD8]);
}

_QWORD *sub_236252238@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_23625224C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23625227C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_236252290(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_2362522A4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2362CB680();
  *a2 = 0;
  return result;
}

uint64_t sub_236252318(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2362CB68C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_236252394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2362CB698();
  v2 = sub_2362CB674();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_2362523D4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2362523E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_236253F64(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_236252424()
{
  return sub_23624E3C4(&qword_2563D6D48, (uint64_t (*)(uint64_t))type metadata accessor for APSubjectMonitorSubjectMask, (uint64_t)&unk_2362CD6EC);
}

uint64_t sub_236252450()
{
  return sub_23624E3C4(&qword_2563D6D50, (uint64_t (*)(uint64_t))type metadata accessor for APSubjectMonitorSubjectMask, (uint64_t)&unk_2362CD6B8);
}

uint64_t sub_23625247C()
{
  return sub_23624E3C4(&qword_2563D6D58, (uint64_t (*)(uint64_t))type metadata accessor for APSubjectMonitorSubjectMask, (uint64_t)&unk_2362CD718);
}

uint64_t sub_2362524A8()
{
  return sub_23624E3C4((unint64_t *)&unk_2563D6D60, (uint64_t (*)(uint64_t))type metadata accessor for APSubjectMonitorSubjectMask, (uint64_t)&unk_2362CD754);
}

_QWORD *sub_2362524D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2362524E4()
{
  sub_23624E3C4(&qword_2563D6EB0, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_2362CDE58);
  sub_23624E3C4(&qword_2563D6EB8, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_2362CDDF8);
  return sub_2362CBB54();
}

uint64_t sub_236252568()
{
  sub_23624E3C4(&qword_2563D6EA0, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_2362CDFB0);
  sub_23624E3C4(&qword_2563D6EA8, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_2362CDF50);
  return sub_2362CBB54();
}

uint64_t sub_2362525EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2362CB698();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_236252614()
{
  sub_23624E3C4(&qword_2563D6ED0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2362CDBEC);
  sub_23624E3C4(&qword_2563D6ED8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2362CDB8C);
  return sub_2362CBB54();
}

uint64_t sub_236252698()
{
  sub_23624E3C4(&qword_2563D6EC0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CE040);
  sub_23624E3C4(&qword_2563D6EC8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CDCE4);
  return sub_2362CBB54();
}

uint64_t sub_23625271C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2362CB674();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_236252760()
{
  sub_23624E3C4(&qword_2563D6EE0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CE084);
  sub_23624E3C4(&qword_2563D6EE8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CDA78);
  return sub_2362CBB54();
}

uint64_t sub_2362527E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2362CB698();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_236252820()
{
  sub_2362CB698();
  sub_2362CB710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236252860()
{
  uint64_t v0;

  sub_2362CB698();
  sub_2362CBC8C();
  sub_2362CB710();
  v0 = sub_2362CBCBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2362528D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2362CB698();
  v2 = v1;
  if (v0 == sub_2362CB698() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_236252958(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2362CBC8C();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  v8 = sub_2362CBCBC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2362CBBE4() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2362CBBE4() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_236253158(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_236252B04(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_2362CBC80();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_2362532F0(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_236252BFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59D0);
  v3 = sub_2362CBA40();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2362CBC8C();
      sub_2362CB710();
      result = sub_2362CBCBC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_236252ED8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4360);
  result = sub_2362CBA40();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_2362CBC80();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_236253158(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_236252BFC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_236253410();
      goto LABEL_22;
    }
    sub_236253754();
  }
  v11 = *v4;
  sub_2362CBC8C();
  sub_2362CB710();
  result = sub_2362CBCBC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2362CBBE4(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2362CBC14();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2362CBBE4();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_2362532F0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_236252ED8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2362535C0();
      goto LABEL_14;
    }
    sub_236253A00();
  }
  v8 = *v3;
  result = sub_2362CBC80();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_2362CBC14();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_236253410()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59D0);
  v2 = *v0;
  v3 = sub_2362CBA34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2362535C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4360);
  v2 = *v0;
  v3 = sub_2362CBA34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236253754()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59D0);
  v3 = sub_2362CBA40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2362CBC8C();
    swift_bridgeObjectRetain();
    sub_2362CB710();
    result = sub_2362CBCBC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236253A00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4360);
  result = sub_2362CBA40();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_2362CBC80();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236253C60(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

id sub_236253CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char isEscapingClosureAtFileLocation;
  unsigned int v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (id)MEMORY[0x24BEE4B08];
  v2 = a1;
  if (v1 != 1)
  {
    v14 = MEMORY[0x24BEE4B08];
    v7 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 192);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = &v14;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_236253EF4;
    *(_QWORD *)(v9 + 24) = v8;
    aBlock[4] = sub_236253F0C;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_236251E08;
    aBlock[3] = &block_descriptor;
    v10 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_swift_forEach_, v10);

    _Block_release(v10);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    v2 = v14;
    swift_release();
    return (id)v2;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v4 = result;
    sub_236251CC0(v2);
    if (v5)
    {
      v6 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    v12 = objc_msgSend(v4, sel_applicationIsInstalled_, v6);

    if (!v12)
      return (id)MEMORY[0x24BEE4B08];
    swift_bridgeObjectRetain();
    return (id)v2;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_236253ED0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_236253EF4(void *a1)
{
  uint64_t v1;

  return sub_236251D3C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_236253EFC()
{
  return swift_deallocObject();
}

uint64_t sub_236253F0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_236253F2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_236253F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_236253F9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236253FC0(uint64_t a1)
{
  return sub_2362513E4(a1);
}

uint64_t sub_236253FC8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_236253FFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D60A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23625403C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DD0);
}

void type metadata accessor for tcc_identity_type_t(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DD8);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DE0);
}

void type metadata accessor for APShieldStyle(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DE8);
}

void type metadata accessor for URLFileProtection(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DF0);
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6DF8);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_2362542F0(a1, (unint64_t *)&unk_2563D6E00);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6008);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_2362542F0(a1, (unint64_t *)&unk_2563D6E10);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2542A55F8);
}

uint64_t initializeWithCopy for APAppInstallationManager.State.ReferenceHolder(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for APAppInstallationManager.State.ReferenceHolder(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for APAppInstallationManager.State.ReferenceHolder(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for APAppInstallationManager.State.ReferenceHolder(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for APAppInstallationManager.State.ReferenceHolder(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APAppInstallationManager.State.ReferenceHolder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APAppInstallationManager.State.ReferenceHolder()
{
  return &type metadata for APAppInstallationManager.State.ReferenceHolder;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_236254290(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2362542B0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_2362542F0(a1, &qword_2563D6E20);
}

void sub_2362542F0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_236254334()
{
  return sub_23624E3C4(&qword_2563D6E28, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CDA3C);
}

uint64_t sub_236254360()
{
  return sub_23624E3C4(&qword_2563D6E30, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CDA10);
}

uint64_t sub_23625438C()
{
  return sub_23624E3C4(&qword_2563D6E38, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2362CDB50);
}

uint64_t sub_2362543B8()
{
  return sub_23624E3C4(&qword_2563D6E40, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2362CDB24);
}

uint64_t sub_2362543E4()
{
  return sub_23624E3C4(&qword_2563D6E48, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2362CDBC0);
}

uint64_t sub_236254410()
{
  return sub_23624E3C4(&qword_2563D6E50, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CDCA8);
}

uint64_t sub_23625443C()
{
  return sub_23624E3C4(&qword_2563D6E58, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CDC7C);
}

uint64_t sub_236254468()
{
  return sub_23624E3C4(&qword_2563D6E60, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_2362CDDBC);
}

uint64_t sub_236254494()
{
  return sub_23624E3C4(&qword_2563D6E68, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_2362CDD90);
}

uint64_t sub_2362544C0()
{
  return sub_23624E3C4(&qword_2563D6E70, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_2362CDE2C);
}

uint64_t sub_2362544EC()
{
  return sub_23624E3C4(&qword_2563D6E78, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_2362CDF14);
}

uint64_t sub_236254518()
{
  return sub_23624E3C4(&qword_2563D6E80, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_2362CDEE8);
}

uint64_t sub_236254544()
{
  return sub_23624E3C4(&qword_2563D6E88, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_2362CDF84);
}

uint64_t sub_236254570()
{
  return sub_23624E3C4(&qword_2563D6E90, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CDD18);
}

uint64_t sub_23625459C()
{
  return sub_23624E3C4(&qword_2563D6E98, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CDAAC);
}

_DWORD *sub_2362545F4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_236254600(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_236254608@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_23625461C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_236254630@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_236254644(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_236254674@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_2362546A0@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_2362546C4(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_2362546D8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_2362546EC(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_236254700@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_236254714(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_236254728(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23625473C(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_236254750()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_236254760(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_236254774@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_236254784(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_236254790(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2362547A4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_236253F2C(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_2362547E0()
{
  __int128 *v0;
  __int128 *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  __int128 v8;
  char v9;

  v1 = v0;
  sub_23625B970(v0, (uint64_t)&v7);
  v2 = v7;
  sub_23625B970(v1, (uint64_t)&v8);
  if (v9 < 0)
  {
    v9 &= ~0x80u;
    v4 = (void *)v8;
    v5 = v2;
    sub_2362CBA58();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_description);
    sub_2362CB698();

    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
    sub_23625B988((uint64_t)v1);
    return 0xD00000000000001ELL;
  }
  else
  {
    sub_2362CBA58();
    swift_bridgeObjectRelease();
    type metadata accessor for audit_token_t(0);
    sub_2362CB6EC();
    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
    sub_2362CB728();
    swift_bridgeObjectRelease();
    return 0xD000000000000021;
  }
}

unint64_t sub_236254A04()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_23625B970(v0, (uint64_t)v2);
  return sub_2362547E0();
}

id sub_236254A38()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = (void *)sub_2362CB674();
  v2 = objc_msgSend(v0, sel_valueForEntitlement_, v1);

  if (v2)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_23625B4B0((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_23625B4F8((uint64_t)v7, &qword_2563D60A0);
    return 0;
  }
  sub_23625B534(0, (unint64_t *)&qword_2563D6478);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = objc_msgSend(v5, sel_BOOLValue);

  return v3;
}

uint64_t sub_236254B38()
{
  return sub_2362CB62C();
}

uint64_t sub_236254B6C()
{
  char v0;

  if ((sub_2362CB650() & 1) != 0)
  {
    sub_23625B534(0, &qword_2563D3E50);
    v0 = sub_2362CB9B0();
  }
  else
  {
    v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_236254BF4()
{
  sub_2362CBC8C();
  sub_2362CB62C();
  return sub_2362CBCBC();
}

uint64_t sub_236254C54()
{
  return sub_236254BF4();
}

uint64_t sub_236254C64()
{
  return sub_236254B38();
}

uint64_t sub_236254C74()
{
  sub_2362CBC8C();
  sub_236254B38();
  return sub_2362CBCBC();
}

uint64_t sub_236254CB8()
{
  return sub_236254B6C();
}

void sub_236254CD4()
{
  uint64_t v0;
  char v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 88) + 24))();
  sub_2362A00D0(v1);
}

id sub_236254CFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  void *v15;

  v4 = a1 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x23B7EF2F4](v4);
  if (v5)
  {
    v6 = (void *)v5;
    swift_beginAccess();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = type metadata accessor for ConnectionClientPair(255, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
    MEMORY[0x23B7EF18C](&unk_2362CE2D8, v10);
    sub_2362CB7E8();
    sub_2362CB7DC();
    swift_endAccess();

    sub_23625B56C(v14, v15);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  }
  v11 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v12 = swift_checkMetadataState();
  v11(v12, AssociatedConformanceWitness);
  objc_msgSend(a3, sel_setExportedObject_, 0);
  return objc_msgSend(a3, sel_setInvalidationHandler_, 0);
}

uint64_t sub_236254ED8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  char v9;
  char v10;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_23625ADDC();
  v10 = v9;

  return v10 & 1;
}

id sub_236254F34()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70)), sel_resume);
}

void sub_236254F5C()
{
  sub_23625B230();
}

id sub_236254F78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_236254FAC(char *a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50) - 8) + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x60)]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x78)]);
  return swift_bridgeObjectRelease();
}

void sub_236255050(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v8;

  v8 = sub_23625AC40(a1, a2, a3, a4);

  *a5 = v8;
}

id sub_236255094()
{
  return sub_236254F34();
}

uint64_t sub_2362550B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2362550D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2362550F4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2362CB698();
  qword_2542A5910 = result;
  *(_QWORD *)algn_2542A5918 = v1;
  return result;
}

uint64_t sub_236255120()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2362CB698();
  qword_2563DB600 = result;
  *(_QWORD *)algn_2563DB608 = v1;
  return result;
}

uint64_t sub_23625514C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2362CB698();
  qword_2563DB658 = result;
  unk_2563DB660 = v1;
  return result;
}

uint64_t sub_236255178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_2362CB878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB86C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E344((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v0);
  result = sub_2362CB8B4();
  qword_2563D4140 = result;
  return result;
}

id sub_23625534C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for APServer()), sel_init);
  qword_2563D4158 = (uint64_t)result;
  return result;
}

id static APServer.sharedInstance()()
{
  if (qword_2563D3E40 != -1)
    swift_once();
  return (id)qword_2563D4158;
}

id sub_2362553F8()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  _QWORD *v49;
  id v50;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[15];
  _QWORD v59[3];
  _QWORD *v60;
  _UNKNOWN **v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _UNKNOWN **v67;
  _QWORD *v68;
  uint64_t v69;

  v1 = qword_2563D4148;
  v54 = v0;
  if (v1 != -1)
    swift_once();
  v2 = (void *)qword_2563D4140;
  v3 = type metadata accessor for APPersistentStore();
  v4 = swift_allocObject();
  type metadata accessor for APDaemonPersistentContainer();
  v5 = v2;
  *(_QWORD *)(v4 + 16) = sub_23629CAFC();
  *(_QWORD *)(v4 + 24) = v5;
  type metadata accessor for LocalAuthenticationAuthProvider();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5F08);
  v7 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6050);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v8 + 16) = 0;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v8;
  v57 = v7;
  type metadata accessor for DispatchDeathMonitor();
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41E8);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 32) = 0;
  v12 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v12;
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v11;
  v56 = v10;
  type metadata accessor for APSystemAppXPCEventStreamServer();
  swift_allocObject();
  v55 = sub_236281F58(v5);
  if (qword_2563D4118 != -1)
    swift_once();
  v13 = *(void **)(qword_2563DB5D0 + 16);
  type metadata accessor for APAppInstallationManager();
  v14 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4200);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 32) = 0;
  v16 = (os_unfair_lock_s *)(v15 + 32);
  *(_QWORD *)(v15 + 16) = v9;
  v17 = v15 + 16;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v14 + 16) = v15;
  v18 = v13;
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_23625129C(v17, v14, v18);
  os_unfair_lock_unlock(v16);
  swift_release();

  v19 = (void *)qword_2563D4140;
  v20 = (void *)objc_opt_self();
  v21 = v19;
  v22 = objc_msgSend(v20, sel_defaultCenter);
  if (qword_2563D5F18 != -1)
    swift_once();
  v23 = *(void **)(qword_2563DB650 + 16);
  type metadata accessor for ServerMangementManager();
  swift_allocObject();
  v24 = sub_236291354(v21, v22, v23);
  if (qword_2563D5F40 != -1)
    swift_once();
  v25 = *(void **)(qword_2563DB5F8 + 16);
  type metadata accessor for ServerAccountsManager();
  swift_allocObject();
  v26 = sub_2362A0184(v25);
  v27 = qword_2563D4088;
  swift_retain();
  if (v27 != -1)
    swift_once();
  v28 = qword_2563DB5C0;
  v29 = (void *)qword_2563D4140;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5DE8);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v53 = v24;
  v52 = v26;
  v30 = sub_236258A34(v14, v28, (uint64_t)v24, v26, v29);
  v31 = qword_2563D3FC8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v31 != -1)
    swift_once();
  v32 = qword_2563DB5B0;
  v33 = (void *)qword_2563D4140;
  v60 = (_QWORD *)v3;
  v61 = &off_250793AF0;
  v59[0] = v4;
  type metadata accessor for ContainerBasedBackupManager(0);
  v34 = (_QWORD *)swift_allocObject();
  v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, v3);
  MEMORY[0x24BDAC7A8](v35, v35);
  v37 = (uint64_t *)((char *)&v52 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v38 + 16))(v37);
  v39 = *v37;
  swift_unknownObjectRetain();
  v40 = v33;
  swift_retain();
  swift_retain();
  v41 = sub_236259D1C(v39, v40, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  if (qword_2563D5D58 != -1)
    swift_once();
  v42 = (void *)qword_2563DB638;
  v43 = type metadata accessor for ServerActivityScheduler();
  v44 = swift_allocObject();
  v45 = objc_allocWithZone((Class)APServerActivityScheduler);
  v46 = v42;
  *(_QWORD *)(v44 + 16) = objc_msgSend(v45, sel_init, v52, v53);
  v66 = v43;
  v67 = &off_250794548;
  v64 = v42;
  v65 = v44;
  v47 = (void *)qword_2563D4140;
  v59[0] = v4;
  v59[1] = v57;
  v59[2] = v56;
  v60 = v55;
  v61 = (_UNKNOWN **)v32;
  v62 = v14;
  v63 = v41;
  v68 = v30;
  v69 = qword_2563D4140;
  sub_23625AC98((uint64_t)v59, (uint64_t)v58);
  __swift_instantiateConcreteTypeFromMangledName(qword_2563D5C78);
  swift_allocObject();
  swift_retain();
  v48 = v47;
  v49 = sub_2362565A4(v58);

  v50 = sub_23625A164((uint64_t)v49);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23625B4F8((uint64_t)v59, qword_2563D5BE0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v50;
}

uint64_t sub_236255AC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t (*v14)(id, id, _BYTE *, _BYTE *, uint64_t, uint64_t);
  _BYTE v16[40];
  _BYTE v17[40];

  v7 = *a1;
  v8 = a1[1];
  if (qword_2563D4148 != -1)
    swift_once();
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 16);
  v10 = (id)qword_2563D4140;
  v9(v7, v8);
  v11 = objc_allocWithZone(MEMORY[0x24BDD1998]);
  v12 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithMachServiceName_, v12);

  sub_23624E76C(a2, (uint64_t)v17);
  sub_23624E76C(a3, (uint64_t)v16);
  v14 = *(uint64_t (**)(id, id, _BYTE *, _BYTE *, uint64_t, uint64_t))(v8 + 8);
  a4[3] = v7;
  a4[4] = v8;
  __swift_allocate_boxed_opaque_existential_1(a4);
  return v14(v10, v13, v17, v16, v7, v8);
}

uint64_t sub_236255BF8(void (*a1)(__int128 *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  __int128 *i;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  __int128 v14[2];
  uint64_t v15;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2362BC7A0(0, v5, 0);
    v6 = v15;
    for (i = (__int128 *)(a3 + 32); ; ++i)
    {
      v13 = *i;
      a1(v14, &v13);
      if (v4)
        break;
      v4 = 0;
      v15 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2362BC7A0(v10 > 1, v11 + 1, 1);
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v11 + 1;
      sub_23625AD00(v14, v6 + 40 * v11 + 32);
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_236255D0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)();
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  _QWORD aBlock[3];
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v20 = a1;
  v2 = sub_2362CB674();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_23625B598;
  *(_QWORD *)(v3 + 24) = &v19;
  v25 = sub_23625B9C0;
  v26 = v3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2362550D4;
  v24 = &block_descriptor_63;
  v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  APDoFirstRunWork((void *)v2, v4);

  _Block_release(v4);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC13AppProtection8APServer_policy + 24);
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC13AppProtection8APServer_policy + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC13AppProtection8APServer_policy), v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 152))(v6, v7);
    result = *(_QWORD *)(a1 + OBJC_IVAR____TtC13AppProtection8APServer_services);
    v8 = *(_QWORD *)(result + 16);
    if (v8)
    {
      v9 = result + 32;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_23624E76C(v9, (uint64_t)aBlock);
        if (qword_2563D4178 != -1)
          swift_once();
        v12 = sub_2362CB494();
        __swift_project_value_buffer(v12, (uint64_t)qword_2563DB5D8);
        sub_23624E76C((uint64_t)aBlock, (uint64_t)v22);
        v13 = sub_2362CB47C();
        v14 = sub_2362CB848();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = swift_slowAlloc();
          v16 = swift_slowAlloc();
          v21 = v16;
          *(_DWORD *)v15 = 136315138;
          __swift_project_boxed_opaque_existential_1(v22, v22[3]);
          swift_getDynamicType();
          v17 = sub_2362CBD1C();
          *(_QWORD *)(v15 + 4) = sub_2362AB670(v17, v18, &v21);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
          _os_log_impl(&dword_23624C000, v13, v14, "resuming service %s", (uint8_t *)v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v16, -1, -1);
          MEMORY[0x23B7EF258](v15, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        }

        v10 = v24;
        v11 = v25;
        __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v24);
        (*((void (**)(void *, uint64_t (*)()))v11 + 3))(v10, v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        v9 += 40;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_236256040(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)(a1 + OBJC_IVAR____TtC13AppProtection8APServer_policy);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
  return sub_2362B2D44(v4, v5);
}

void sub_236256228()
{
  void *v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD v12[6];

  v1 = v0;
  if (qword_2563D4118 != -1)
    swift_once();
  sub_23627A130();
  if (qword_2563D5F18 != -1)
    swift_once();
  sub_23625FB10();
  if (qword_2563D5F40 != -1)
    swift_once();
  sub_2362941D4();
  if (qword_2563D4148 != -1)
    swift_once();
  v2 = qword_2563D4140;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_23625658C;
  *(_QWORD *)(v4 + 24) = v3;
  v12[4] = sub_236253F0C;
  v12[5] = v4;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2362550D4;
  v12[3] = &block_descriptor_0;
  v5 = _Block_copy(v12);
  v6 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else if (qword_2563D4178 == -1)
  {
    goto LABEL_11;
  }
  swift_once();
LABEL_11:
  v8 = sub_2362CB494();
  __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
  v9 = sub_2362CB47C();
  v10 = sub_2362CB848();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23624C000, v9, v10, "appprotectiond main loop turn on.", v11, 2u);
    MEMORY[0x23B7EF258](v11, -1, -1);
  }

  dispatch_main();
}

id APServer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for APServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_236256560()
{
  void *v0;

  return v0;
}

uint64_t sub_236256568()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23625658C()
{
  uint64_t v0;

  return sub_236255D0C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_236256594()
{
  return swift_deallocObject();
}

_QWORD *sub_2362565A4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v1 + 16) = 0;
  v3 = (_QWORD *)v1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4188);
  swift_allocObject();
  v4 = sub_2362CB524();
  *(_QWORD *)(v1 + 144) = 0;
  v5 = (void **)(v1 + 144);
  v3[17] = v4;
  v3[19] = 0;
  v6 = a1[1];
  v3[4] = *a1;
  v3[5] = v6;
  v7 = a1[3];
  v3[6] = a1[2];
  v3[7] = v7;
  v8 = a1[5];
  v3[8] = a1[4];
  v3[9] = v8;
  v3[10] = a1[6];
  sub_23624E76C((uint64_t)(a1 + 8), (uint64_t)(v3 + 11));
  v9 = (void *)a1[14];
  *(v5 - 2) = (void *)a1[13];
  *(v5 - 15) = v9;
  swift_beginAccess();
  v10 = (void *)a1[7];
  v23 = *v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v11 = v9;
  swift_unknownObjectRetain();
  v12 = v10;

  *v5 = v10;
  if (v10)
  {
    v13 = v22[17];
    v25 = v21;
    v26 = sub_23624E344(&qword_2563D4180, &qword_2563D4188, MEMORY[0x24BDB9CB0]);
    *(_QWORD *)&v24 = v13;
    v14 = (uint64_t)v12 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventsPublisher;
    swift_beginAccess();
    v15 = *(_QWORD *)(v14 + 24);
    swift_retain();
    if (v15)
      __swift_destroy_boxed_opaque_existential_1(v14);
    sub_23625AD00(&v24, v14);
    swift_endAccess();
  }
  swift_endAccess();
  *(_QWORD *)&v24 = *(_QWORD *)(v22[16] + 16);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4348);
  sub_23624E344(&qword_2563D5F80, &qword_2563D4348, MEMORY[0x24BDB9CB0]);
  v16 = sub_2362CB548();
  swift_release();
  swift_release();
  v22[19] = v16;
  swift_release();
  v17 = *(os_unfair_lock_s **)(v22[6] + 24);
  v18 = (uint64_t)&v17[4];
  v19 = v17 + 8;
  swift_retain();
  os_unfair_lock_lock(v19);
  sub_23626A4EC(v18, (uint64_t)v22, (uint64_t)&off_250793788);
  os_unfair_lock_unlock(v19);
  swift_release();
  sub_23625B4F8((uint64_t)a1, qword_2563D5BE0);
  return v22;
}

uint64_t sub_236256874(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  _QWORD v28[2];
  uint8_t *v29;
  uint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_2362CB5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (_QWORD *)((char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    if (qword_2563D4178 != -1)
      swift_once();
    v13 = sub_2362CB494();
    __swift_project_value_buffer(v13, (uint64_t)qword_2563DB5D8);
    sub_23625ADAC(a1, a2, a3);
    sub_23625ADAC(a1, a2, a3);
    v14 = sub_2362CB47C();
    v15 = sub_2362CB848();
    if (os_log_type_enabled(v14, v15))
    {
      v31 = v14;
      v16 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v34 = v30;
      v32 = v6;
      *(_DWORD *)v16 = 136315138;
      v28[1] = v16 + 4;
      v29 = v16;
      sub_23625ADAC(a1, a2, a3);
      sub_2362C7C98(a1, a2, a3);
      v17 = v7;
      v18 = v12;
      v20 = v19;
      v22 = v21;
      sub_23625ADC4(a1, a2, a3);
      v23 = v20;
      v12 = v18;
      v7 = v17;
      v33 = sub_2362AB670(v23, v22, &v34);
      v6 = v32;
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_23625ADC4(a1, a2, a3);
      sub_23625ADC4(a1, a2, a3);
      v14 = v31;
      v24 = v29;
      _os_log_impl(&dword_23624C000, v31, v15, "processing settings authority event: %s", v29, 0xCu);
      v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v25, -1, -1);
      MEMORY[0x23B7EF258](v24, -1, -1);
    }
    else
    {
      sub_23625ADC4(a1, a2, a3);
      sub_23625ADC4(a1, a2, a3);
    }

    v26 = *(void **)(v12 + 24);
    *v10 = v26;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6);
    v27 = v26;
    LOBYTE(v26) = sub_2362CB5F0();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
    if ((v26 & 1) != 0)
      __asm { BR              X10 }
    __break(1u);
    JUMPOUT(0x236256C60);
  }
  return result;
}

uint64_t sub_236256C74()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_2362BA1B8((uint64_t)sub_2362BAAEC, 0);
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_236256E54()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_2362BA1B8((uint64_t)sub_2362BAA9C, 0);
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_236257034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  void (*v6)(uint64_t);
  uint64_t v7;

  sub_236256C74();
  v2 = sub_236256E54();
  v3 = sub_236256C74();
  sub_2362A0B50(v3, v2);
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362BBBF4, 0);
  swift_release();
  if (!v1)
  {
    sub_2362CB50C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4260);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = sub_23625B334;
    *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
    *(_QWORD *)(inited + 40) = v0;
    *(_QWORD *)(inited + 48) = sub_23625B364;
    *(_QWORD *)(inited + 56) = v0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_23625724C(v0, (uint64_t)sub_23629F630, (uint64_t)&block_descriptor_28, (SEL *)&selRef_setLockedApplications_completion_);
    swift_release();
    v6 = *(void (**)(uint64_t))(inited + 48);
    v7 = swift_retain();
    v6(v7);
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23625724C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v7)
  {
    v8 = v7;
    sub_236259A3C(MEMORY[0x24BEE4B08]);
    v9 = (void *)sub_2362CB758();
    swift_release();
    v11[4] = a2;
    v11[5] = 0;
    v11[0] = MEMORY[0x24BDAC760];
    v11[1] = 1107296256;
    v11[2] = sub_2362BE888;
    v11[3] = a3;
    v10 = _Block_copy(v11);
    objc_msgSend(v8, *a4, v9, v10);
    _Block_release(v10);

  }
}

void sub_236257340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  os_unfair_lock_s *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _QWORD v28[5];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v28[2] = a1;
  v28[3] = a2;
  swift_retain();
  v6 = sub_2362BA300((uint64_t)sub_23625B25C, (uint64_t)v28);
  v7 = swift_release();
  v8 = *(_QWORD *)(v2 + 32);
  MEMORY[0x24BDAC7A8](v7, v9);
  v24[2] = v8;
  v24[3] = a1;
  v24[4] = a2;
  swift_retain();
  v10 = sub_2362BA300((uint64_t)sub_23625B274, (uint64_t)v24);
  swift_release();
  if (((v6 | v10) & 1) != 0)
  {
    v26 = *(_QWORD *)(v3 + 136);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
    inited = swift_initStackObject();
    v27 = xmmword_2362CE0F0;
    *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    swift_bridgeObjectRetain();
    v25 = sub_2362B7940(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = v27;
    *(_QWORD *)(v12 + 32) = a1;
    *(_QWORD *)(v12 + 40) = a2;
    swift_bridgeObjectRetain();
    v13 = sub_2362B7940(v12);
    swift_setDeallocating();
    swift_arrayDestroy();
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = v27;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    swift_bridgeObjectRetain();
    v15 = sub_2362B7940(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    v29 = 7;
    v30 = v25;
    v31 = 0;
    v32 = v13;
    v33 = 0;
    v35 = 0;
    v36 = 0;
    v34 = v15;
    sub_2362CB50C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v16 = *(_QWORD *)(v3 + 80);
      v17 = *(os_unfair_lock_s **)(v16 + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_transaction);
      v18 = v17 + 4;
      v19 = v17 + 6;
      os_unfair_lock_lock(v17 + 6);
      sub_23628AF90(v18);
      os_unfair_lock_unlock(v19);
      v20 = *(_QWORD *)(v16 + 24);
      v21 = *(os_unfair_lock_s **)(v20 + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_state);
      v22 = (uint64_t)&v21[4];
      v23 = v21 + 7;
      os_unfair_lock_lock(v21 + 7);
      sub_23629F0DC(v22, v20);
      os_unfair_lock_unlock(v23);
    }
  }
}

void sub_236257824(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock;
  uint64_t v44;
  void (*v45)(uint64_t, void *);
  void *v46;
  void (*v47)(void *);
  uint64_t v48;

  v3 = v2;
  v6 = sub_2362CB5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (_QWORD **)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + 24);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_2362CB5F0();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    if ((sub_23625878C(v3, a1, a2) & 1) == 0)
      return;
    v13 = sub_236256E54();
    v14 = sub_236256C74();
    v15 = sub_2362A0B50(v14, v13);
    LOBYTE(v13) = sub_23624EC88(a1, a2, v15);
    swift_bridgeObjectRelease();
    sub_23629F888(a1, a2, (v13 ^ 1) & 1);
  }
  else
  {
    __break(1u);
    swift_once();
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain();
    v17 = v10;
    swift_bridgeObjectRetain();
    v18 = v10;
    v19 = sub_2362CB47C();
    v20 = sub_2362CB830();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      aBlock = v41;
      *(_DWORD *)v21 = 136315650;
      swift_bridgeObjectRetain();
      v42 = sub_2362AB670(a1, a2, &aBlock);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 1024;
      LODWORD(v42) = v7 & 1;
      sub_2362CB9C8();
      *(_WORD *)(v21 + 18) = 2112;
      v22 = v10;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      v42 = v23;
      sub_2362CB9C8();
      v24 = v40;
      *v40 = v23;

      _os_log_impl(&dword_23624C000, v19, v20, "Could not set shown in search or siri for %s to %{BOOL}d: %@", (uint8_t *)v21, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v24, -1, -1);
      v25 = v41;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v25, -1, -1);
      MEMORY[0x23B7EF258](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  v26 = sub_236256E54();
  v27 = sub_236256C74();
  sub_2362A0B50(v27, v26);
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v28, sel_defaultWorkspace);
  v30 = MEMORY[0x24BDAC760];
  if (v29)
  {
    v31 = v29;
    v32 = swift_bridgeObjectRetain();
    sub_236259A3C(v32);
    swift_bridgeObjectRelease();
    v33 = (void *)sub_2362CB758();
    swift_release();
    v47 = sub_23629F630;
    v48 = 0;
    aBlock = v30;
    v44 = 1107296256;
    v45 = sub_2362BE888;
    v46 = &block_descriptor_13;
    v34 = _Block_copy(&aBlock);
    objc_msgSend(v31, sel_setLockedApplications_completion_, v33, v34);
    _Block_release(v34);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_236256C74();
  v35 = objc_msgSend(v28, sel_defaultWorkspace);
  if (v35)
  {
    v36 = v35;
    v37 = swift_bridgeObjectRetain();
    sub_236259A3C(v37);
    swift_bridgeObjectRelease();
    v38 = (void *)sub_2362CB758();
    swift_release();
    v47 = sub_23629F63C;
    v48 = 0;
    aBlock = v30;
    v44 = 1107296256;
    v45 = sub_2362BE888;
    v46 = &block_descriptor_10;
    v39 = _Block_copy(&aBlock);
    objc_msgSend(v36, sel_setHiddenApplications_completion_, v38, v39);
    _Block_release(v39);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_236257D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  v6 = MEMORY[0x24BEE4B08];
  v1 = swift_retain();
  sub_2362AEEC4(v1, v0, (uint64_t)&v6);
  swift_release();
  if (*(_QWORD *)(v6 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4260);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = sub_23625B2B8;
    *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
    *(_QWORD *)(inited + 40) = v0;
    *(_QWORD *)(inited + 48) = sub_23625B2D0;
    *(_QWORD *)(inited + 56) = v0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_23625853C();
    swift_release();
    v3 = *(void (**)(uint64_t))(inited + 48);
    v4 = swift_retain();
    v3(v4);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236258060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  xpc_object_t empty;
  uint64_t v31;
  unint64_t v33;
  int64_t v34;
  uint64_t v36;
  char v37[16];
  id (*v38)(void *);
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v0 = sub_236256E54();
  v1 = sub_236256C74();
  v2 = sub_2362A0B50(v1, v0);
  v43 = MEMORY[0x24BEE4B08];
  v3 = sub_236256E54();
  v4 = sub_236256C74();
  v41 = sub_2362A0B50(v4, v3);
  v42 = &v43;
  v38 = sub_23625B2E8;
  v39 = &v40;
  swift_retain();
  v5 = 0;
  sub_2362BA07C((uint64_t)sub_23625B2F0, (uint64_t)v37);
  swift_bridgeObjectRelease();
  swift_release();
  v36 = sub_2362A0B50(v43, v2);
  if (qword_2563D4178 != -1)
LABEL_31:
    swift_once();
  v6 = sub_2362CB494();
  __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
  v7 = sub_2362CB47C();
  v8 = sub_2362CB848();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23624C000, v7, v8, "clearing all preferences and accesses", v9, 2u);
    MEMORY[0x23B7EF258](v9, -1, -1);
  }

  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362BBBA4, 0);
  v10 = v5;
  swift_release();
  if (v5)
  {
    v11 = v5;
    v12 = v5;
    v13 = sub_2362CB47C();
    v14 = sub_2362CB830();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v5 = v15 + 4;
      v17 = v10;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v43 = v18;
      sub_2362CB9C8();
      *v16 = v18;

      _os_log_impl(&dword_23624C000, v13, v14, "could not clean up after discovering device had no passcode: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      MEMORY[0x23B7EF258](v15, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    LODWORD(v43) = 4;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
    sub_2362CB50C();
    sub_236257034();
  }
  v19 = 0;
  v20 = v36 + 56;
  v21 = 1 << *(_BYTE *)(v36 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v36 + 56);
  v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v26 = v25 | (v19 << 6);
      goto LABEL_13;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v24)
      return swift_release();
    v33 = *(_QWORD *)(v20 + 8 * v19);
    if (!v33)
      break;
LABEL_23:
    v23 = (v33 - 1) & v33;
    v26 = __clz(__rbit64(v33)) + (v19 << 6);
LABEL_13:
    v27 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * v26);
    v28 = *v27;
    v29 = v27[1];
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v28;
    v5[3] = v29;
    swift_bridgeObjectRetain_n();
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_int64(empty, "command", 2);
    v31 = sub_2362CB6F8();
    xpc_dictionary_set_string(empty, "bundleid", (const char *)(v31 + 32));
    swift_release();
    xpc_dictionary_set_BOOL(empty, "shield", 0);
    sub_2362828E8((uint64_t *)empty, (uint64_t)sub_23625B32C, (uint64_t)v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  v34 = v19 + 1;
  if (v19 + 1 >= v24)
    return swift_release();
  v33 = *(_QWORD *)(v20 + 8 * v34);
  if (v33)
  {
LABEL_22:
    v19 = v34;
    goto LABEL_23;
  }
  v34 = v19 + 2;
  if (v19 + 2 < v24)
  {
    v33 = *(_QWORD *)(v20 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        v19 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_30;
        if (v19 >= v24)
          return swift_release();
        v33 = *(_QWORD *)(v20 + 8 * v19);
        ++v34;
        if (v33)
          goto LABEL_23;
      }
    }
    goto LABEL_22;
  }
  return swift_release();
}

void sub_23625853C()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  sub_236256C74();
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v0)
  {
    v1 = v0;
    v2 = swift_bridgeObjectRetain();
    sub_236259A3C(v2);
    swift_bridgeObjectRelease();
    v3 = (void *)sub_2362CB758();
    swift_release();
    v5[4] = sub_23629F63C;
    v5[5] = 0;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_2362BE888;
    v5[3] = &block_descriptor_19;
    v4 = _Block_copy(v5);
    objc_msgSend(v1, sel_setHiddenApplications_completion_, v3, v4);
    _Block_release(v4);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_23625865C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD v7[6];

  v0 = sub_236256E54();
  v1 = sub_236256C74();
  sub_2362A0B50(v1, v0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v2)
  {
    v3 = v2;
    v4 = swift_bridgeObjectRetain();
    sub_236259A3C(v4);
    swift_bridgeObjectRelease();
    v5 = (void *)sub_2362CB758();
    swift_release();
    v7[4] = sub_23629F630;
    v7[5] = 0;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_2362BE888;
    v7[3] = &block_descriptor_16;
    v6 = _Block_copy(v7);
    objc_msgSend(v3, sel_setLockedApplications_completion_, v5, v6);
    _Block_release(v6);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23625878C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  _QWORD v5[5];

  v5[2] = *(_QWORD *)(a1 + 32);
  v5[3] = a2;
  v5[4] = a3;
  swift_retain();
  v3 = sub_2362BA300((uint64_t)sub_23625B29C, (uint64_t)v5);
  swift_release();
  return v3 & 1;
}

_QWORD *sub_236258A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = v5;
  v30 = a5;
  v11 = sub_2362CB878();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4348);
  swift_allocObject();
  v5[2] = sub_2362CB524();
  v5[4] = 0;
  v5[5] = 0;
  v5[6] = a1;
  v5[7] = a2;
  v35 = a2;
  v36 = a3;
  v5[8] = a3;
  v5[9] = a4;
  v34 = a4;
  v29 = sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = v30;
  sub_2362CB578();
  v37 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E344((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v14, *MEMORY[0x24BEE5750], v32);
  v5[3] = sub_2362CB8B4();
  v19 = *(os_unfair_lock_s **)(a1 + 16);
  v20 = (uint64_t)&v19[4];
  v21 = v19 + 8;
  swift_retain();
  os_unfair_lock_lock(v21);
  sub_236251C90(v20, (uint64_t)v6, (uint64_t)&off_250794630);
  os_unfair_lock_unlock(v21);
  swift_release();
  v22 = *(os_unfair_lock_s **)(v6[7] + 16);
  v23 = (uint64_t)&v22[4];
  v24 = v22 + 6;
  swift_retain();
  os_unfair_lock_lock(v24);
  sub_236268E9C(v23, (uint64_t)v6, (uint64_t)&off_250794620);
  os_unfair_lock_unlock(v24);
  swift_release();
  v37 = *(_QWORD *)(v6[8] + 16);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4350);
  v25 = MEMORY[0x24BDB9CB0];
  sub_23624E344((unint64_t *)&qword_2563D5F88, &qword_2563D4350, MEMORY[0x24BDB9CB0]);
  v26 = sub_2362CB548();
  swift_release();
  swift_release();
  v6[4] = v26;
  swift_release();
  v37 = *(_QWORD *)(v6[9] + 24);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5F70);
  sub_23624E344(&qword_2563D5F68, (uint64_t *)&unk_2563D5F70, v25);
  v27 = sub_2362CB548();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  v6[5] = v27;
  swift_release();
  return v6;
}

uint64_t sub_236258E7C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  const void *v13;
  _QWORD v14[3];
  _QWORD aBlock[6];

  v2 = sub_2362CB560();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2362CB590();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if ((a1 & 1) != 0)
    {
      v14[1] = *(_QWORD *)(result + 24);
      aBlock[4] = sub_23625B3D4;
      aBlock[5] = result;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23624E13C;
      aBlock[3] = &block_descriptor_41;
      v14[0] = _Block_copy(aBlock);
      swift_retain();
      sub_2362CB578();
      v14[2] = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E344((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0, MEMORY[0x24BEE12C8]);
      sub_2362CB9F8();
      v13 = (const void *)v14[0];
      MEMORY[0x23B7EE604](0, v11, v6, v14[0]);
      _Block_release(v13);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_236259090(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_2362CB560();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v6, v7);
  __asm { BR              X10 }
}

uint64_t sub_236259150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;

  if ((v5 & 1) != 0)
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v8 = sub_2362AABF0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_2362AABF0((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[3 * v10];
    v11[4] = 1;
    v11 += 4;
    v11[1] = 0;
    *((_BYTE *)v11 + 16) = 4;
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v1;
  *(_QWORD *)(v7 - 96) = sub_23625B438;
  *(_QWORD *)(v7 - 88) = v12;
  *(_QWORD *)(v7 - 128) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v7 - 120) = 1107296256;
  *(_QWORD *)(v7 - 112) = sub_23624E13C;
  *(_QWORD *)(v7 - 104) = &block_descriptor_47;
  v13 = _Block_copy((const void *)(v7 - 128));
  swift_retain();
  sub_2362CB578();
  *(_QWORD *)(v7 - 136) = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E344((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  MEMORY[0x23B7EE604](0, v4, v2, v13);
  _Block_release(v13);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 144) + 8))(v2, v0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  return swift_release();
}

uint64_t sub_23625947C(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v3 = *((_QWORD *)v2 - 2);
      v4 = *((_QWORD *)v2 - 1);
      v5 = *v2;
      v2 += 24;
      sub_23625ADAC(v3, v4, v5);
      sub_2362CB50C();
      sub_23625ADC4(v3, v4, v5);
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for APServer()
{
  return objc_opt_self();
}

uint64_t sub_236259538()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for APServiceImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for APServiceImpl);
}

uint64_t method lookup function for APServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of APServer.runForever()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t destroy for PolicyChangeEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PolicyChangeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PolicyChangeEvent(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PolicyChangeEvent(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PolicyChangeEvent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PolicyChangeEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PolicyChangeEvent()
{
  return &type metadata for PolicyChangeEvent;
}

uint64_t sub_23625992C()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_236259934(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  v4 = v3;
  return a1;
}

void sub_236259964(uint64_t a1)
{
  swift_unknownObjectRelease();

}

_QWORD *sub_23625998C(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t sub_2362599E4(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for ConnectionClientPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConnectionClientPair);
}

void sub_236259A2C()
{
  JUMPOUT(0x23B7EF18CLL);
}

_QWORD *sub_236259A3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_236259B20((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23625B290();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_236259B20(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_236259D1C(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  const void **v33;
  os_unfair_lock_s *v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[6];
  _QWORD v46[6];

  v42 = a2;
  v5 = sub_2362CB428();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v41 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB554();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v38 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_2362CB878();
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2362CB86C();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v15, v17);
  v18 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v18, v19);
  v46[3] = type metadata accessor for APPersistentStore();
  v46[4] = &off_250793AF0;
  v46[0] = a1;
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v16, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E344((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BEE5750], v37);
  v20 = (void *)sub_2362CB8B4();
  a3[2] = v20;
  v21 = OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_transaction;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4378);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)((char *)a3 + v21) = v22;
  v23 = (uint64_t)v38;
  *v38 = 30;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v23, *MEMORY[0x24BEE5420], v40);
  type metadata accessor for SaturatingTimer();
  swift_allocObject();
  v24 = sub_23629ED1C(v20, v23);
  v25 = v42;
  a3[3] = v24;
  a3[4] = v25;
  sub_23624E76C((uint64_t)v46, (uint64_t)(a3 + 5));
  v26 = v25;
  v27 = v41;
  sub_23629886C(v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))((uint64_t)a3 + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_originUUID, v27, v44);
  v28 = a3[3];
  v29 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_23625B3B8;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_34;
  v30 = _Block_copy(aBlock);
  v31 = _Block_copy(v30);
  v32 = *(_QWORD *)(v28 + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_state);
  v33 = (const void **)(v32 + 16);
  v34 = (os_unfair_lock_s *)(v32 + 28);
  swift_retain();
  os_unfair_lock_lock(v34);
  sub_23629F094(v33, v31);
  os_unfair_lock_unlock(v34);
  _Block_release(v31);
  _Block_release(v30);
  swift_release();
  swift_release();
  swift_getObjectType();
  swift_retain();
  sub_2362CB938();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return a3;
}

id sub_23625A164(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  id v9;
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;
  _BYTE v17[24];
  ValueMetadata *v18;
  _UNKNOWN **v19;

  v18 = &type metadata for DefaultClientAuthorizer;
  v19 = &off_250794400;
  v15 = &type metadata for DefaultServiceInstantiator;
  v16 = &off_250794B08;
  v12 = &type metadata for DefaultFirstRunWorkManager;
  v13 = &off_250794AD8;
  v2 = (char *)objc_allocWithZone((Class)type metadata accessor for APServer());
  v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, (uint64_t)&type metadata for DefaultClientAuthorizer);
  MEMORY[0x24BDAC7A8](v3, v3);
  (*(void (**)(void))(v4 + 16))();
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, (uint64_t)&type metadata for DefaultServiceInstantiator);
  MEMORY[0x24BDAC7A8](v5, v5);
  v7 = *(void (**)(void))(v6 + 16);
  v7();
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, (uint64_t)&type metadata for DefaultFirstRunWorkManager);
  MEMORY[0x24BDAC7A8](v8, v8);
  v7();
  v9 = sub_23625A2DC(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v9;
}

id sub_23625A2DC(uint64_t a1, char *a2)
{
  uint64_t ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t);
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  objc_super v15;
  _QWORD v16[4];
  _BYTE v17[24];
  ValueMetadata *v18;
  _UNKNOWN **v19;
  _QWORD v20[5];
  _QWORD v21[5];
  uint64_t v22[5];

  ObjectType = swift_getObjectType();
  v22[4] = (uint64_t)&off_2507936E8;
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(qword_2563D5C78);
  v22[0] = a1;
  v21[3] = &type metadata for DefaultClientAuthorizer;
  v21[4] = &off_250794400;
  v20[3] = &type metadata for DefaultServiceInstantiator;
  v20[4] = &off_250794B08;
  v18 = &type metadata for DefaultFirstRunWorkManager;
  v19 = &off_250794AD8;
  v5 = &a2[OBJC_IVAR____TtC13AppProtection8APServer_policy];
  sub_23624E76C((uint64_t)v22, (uint64_t)&a2[OBJC_IVAR____TtC13AppProtection8APServer_policy]);
  v6 = *((_QWORD *)v5 + 3);
  v7 = *((_QWORD *)v5 + 4);
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v9 = a2;
  v8(v16, v6, v7);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  *(_QWORD *)&v9[OBJC_IVAR____TtC13AppProtection8APServer_storeChangeSubscription] = sub_2362CB548();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v21, (uint64_t)&type metadata for DefaultClientAuthorizer);
  __swift_project_boxed_opaque_existential_1(v20, (uint64_t)&type metadata for DefaultServiceInstantiator);
  *(_QWORD *)&v9[OBJC_IVAR____TtC13AppProtection8APServer_services] = sub_23625A544(v22[0], ObjectType);
  sub_23624E76C((uint64_t)v17, (uint64_t)&v9[OBJC_IVAR____TtC13AppProtection8APServer_firstRunWorkManager]);
  if (qword_2563D4148 != -1)
    swift_once();
  v10 = qword_2563D5F18;
  v11 = (id)qword_2563D4140;
  if (v10 != -1)
    swift_once();
  v12 = *(void **)(qword_2563DB650 + 16);
  type metadata accessor for LanguageChangeManager();
  swift_allocObject();
  *(_QWORD *)&v9[OBJC_IVAR____TtC13AppProtection8APServer_languageChangeManager] = sub_23629FB10(v11, v12);

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for APServer();
  v13 = objc_msgSendSuper2(&v15, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v13;
}

uint64_t sub_23625A544(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  _QWORD v7[7];
  _BYTE v8[24];
  ValueMetadata *v9;
  _UNKNOWN **v10;
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;
  _QWORD v14[5];

  v14[3] = __swift_instantiateConcreteTypeFromMangledName(qword_2563D5C78);
  v14[4] = &off_2507936E8;
  v14[0] = a1;
  v12 = &type metadata for DefaultClientAuthorizer;
  v13 = &off_250794400;
  v9 = &type metadata for DefaultServiceInstantiator;
  v10 = &off_250794B08;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4220);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2362CE100;
  *(_QWORD *)(inited + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D3F48);
  *(_QWORD *)(inited + 40) = &off_2507935E0;
  *(_QWORD *)(inited + 48) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D3F60);
  *(_QWORD *)(inited + 56) = &off_2507935E0;
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3F58);
  *(_QWORD *)(inited + 72) = &off_2507935E0;
  *(_QWORD *)(inited + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D3F70);
  *(_QWORD *)(inited + 88) = &off_2507935E0;
  *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3F88);
  *(_QWORD *)(inited + 104) = &off_2507935E0;
  *(_QWORD *)(inited + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3F80);
  *(_QWORD *)(inited + 120) = &off_2507935E0;
  v7[2] = v8;
  v7[3] = v14;
  v7[4] = v11;
  v7[5] = a2;
  swift_retain();
  v5 = sub_236255BF8((void (*)(__int128 *__return_ptr, __int128 *))sub_23625ACE0, (uint64_t)v7, inited);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v5;
}

uint64_t sub_23625A6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_236259090(v1, v2, v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_23625A720(int *a1)
{
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t result;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v1 = *a1;
  if (qword_2563D4178 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB848();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23624C000, v3, v4, "Store changed, posting general change notification", v5, 2u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  if (qword_2542A5550 != -1)
    swift_once();
  v6 = sub_2362CB6F8();
  notify_post((const char *)(v6 + 32));
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    v8 = sub_2362CB47C();
    v9 = sub_2362CB848();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23624C000, v8, v9, "Store changed hidden app preferences, posting notification", v10, 2u);
      MEMORY[0x23B7EF258](v10, -1, -1);
    }

    if (qword_2563D4338 != -1)
      swift_once();
    v11 = sub_2362CB6F8();
    notify_post((const char *)(v11 + 32));
    result = swift_release();
  }
  if ((v1 & 2) != 0)
  {
    v12 = sub_2362CB47C();
    v13 = sub_2362CB848();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23624C000, v12, v13, "Store changed locked app preferences, posting notification", v14, 2u);
      MEMORY[0x23B7EF258](v14, -1, -1);
    }

    if (qword_2563D5F60 != -1)
      swift_once();
    v15 = sub_2362CB6F8();
    notify_post((const char *)(v15 + 32));
    return swift_release();
  }
  return result;
}

_QWORD *sub_23625A9CC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *ObjectType;
  objc_super v34;
  _BYTE v35[40];

  v31 = a4;
  v32 = a3;
  v29 = a1;
  v30 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](ObjectType, v9);
  v11 = (char *)&v29 - v10;
  v13 = *(_QWORD *)(v12 + 128);
  v14 = *(_QWORD *)(v12 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = type metadata accessor for ConnectionClientPair(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  v19 = v4;
  MEMORY[0x23B7EF18C](&unk_2362CE2D8, v18);
  *(_QWORD *)((char *)v4 + v13) = sub_2362CB5FC();
  sub_23624E76C(a3, (uint64_t)v35);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v35, v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[*(_QWORD *)((*v6 & *(_QWORD *)v19) + 0x60)], v11, v7);
  v21 = v29;
  v20 = v30;
  *(_QWORD *)&v19[*(_QWORD *)((*v6 & *(_QWORD *)v19) + 0x68)] = v29;
  *(_QWORD *)&v19[*(_QWORD *)((*v6 & *(_QWORD *)v19) + 0x70)] = v20;
  v22 = v31;
  sub_23624E76C(v31, (uint64_t)&v19[*(_QWORD *)((*v6 & *(_QWORD *)v19) + 0x78)]);
  v23 = v21;
  v24 = v20;

  v34.receiver = v19;
  v34.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v34, sel_init);
  v26 = *(void **)((char *)v25 + *(_QWORD *)((*v6 & *v25) + 0x70));
  v27 = v25;
  objc_msgSend(v26, sel_setDelegate_, v27);
  objc_msgSend(v26, sel__setQueue_, *(_QWORD *)((char *)v27 + *(_QWORD *)((*v6 & *v27) + 0x68)));
  (*(void (**)(id, uint64_t, uint64_t))(v14 + 32))(v24, v7, v14);

  __swift_destroy_boxed_opaque_existential_1(v22);
  __swift_destroy_boxed_opaque_existential_1(v32);
  return v27;
}

_QWORD *sub_23625AC40(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return sub_23625A9CC(a1, a2, a3, a4);
}

uint64_t sub_23625AC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2563D5BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23625ACE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_236255AC4(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23625AD00(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7EF180](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23625AD98(uint64_t a1)
{
  return sub_236256874(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23625ADAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23625ADC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23625ADDC()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)sub_23625AE54
     + 4
     * byte_2362CE114[(*(unsigned __int8 (**)(_QWORD, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0)
                                                                                    + 0x58)
                                                                        + 24))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))];
  __asm { BR              X10 }
}

uint64_t sub_23625AE54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t (*v26)();
  void *v27;
  id (*v28)();
  _QWORD *v29;
  uint64_t v30;
  id v31;
  id v32;

  if ((sub_236254A38() & 1) == 0)
    return 0;
  objc_msgSend(v3, sel__setQueue_, *(_QWORD *)((char *)v2 + *(_QWORD *)((*v5 & *v2) + 0x68)));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
  objc_msgSend(v3, sel_setExportedInterface_, v8);

  (*(void (**)(void *, uint64_t, uint64_t))(v1 + 40))(v3, v0, v1);
  v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v1 + 56))(v3, v0, v1);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_unknownObjectRetain();
  v11 = v3;
  objc_msgSend(v11, sel_setExportedObject_, v10);
  swift_unknownObjectRelease();
  v30 = v9;
  v31 = v11;
  swift_beginAccess();
  v13 = type metadata accessor for ConnectionClientPair(255, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  swift_unknownObjectRetain();
  v14 = v11;
  MEMORY[0x23B7EF18C](&unk_2362CE2D8, v13);
  sub_2362CB7E8();
  sub_2362CB7D0();
  swift_endAccess();
  swift_unknownObjectRelease();

  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v0;
  v16[3] = v1;
  v16[4] = v15;
  v16[5] = v9;
  v16[6] = v14;
  v16[7] = v9;
  v28 = sub_23625B4A0;
  v29 = v16;
  v24 = MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v26 = sub_23624E13C;
  v27 = &block_descriptor_56;
  v17 = _Block_copy(&v24);
  swift_unknownObjectRetain_n();
  v18 = v14;
  swift_release();
  objc_msgSend(v18, sel_setInvalidationHandler_, v17);
  _Block_release(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4258);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2362CE0F0;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  v24 = 0xD000000000000018;
  v25 = 0x80000002362D4980;
  v20 = v4(v0, v1);
  sub_2362A00D0(v20);
  sub_2362CB728();
  swift_bridgeObjectRelease();
  v21 = v24;
  v22 = v25;
  *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v22;
  sub_2362CBC74();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_resume);

  swift_unknownObjectRelease_n();
  return 1;
}

void sub_23625B230()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23625B25C@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_2362BC0E0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_23625B274(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_2362BC2D4(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23625B290()
{
  return swift_release();
}

void sub_23625B29C(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_2362BC3C8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_23625B2B8()
{
  sub_23625853C();
}

void sub_23625B2D0()
{
  sub_23625865C();
}

id sub_23625B2E8(void *a1)
{
  uint64_t v1;

  return sub_2362A19F4(a1, *(_QWORD *)(v1 + 16));
}

void sub_23625B2F0(uint64_t a1)
{
  uint64_t v1;

  sub_2362BB9D4(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_23625B308()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23625B32C(void *a1)
{
  uint64_t v1;

  sub_2362A5988(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_23625B334()
{
  uint64_t v0;

  sub_23625724C(v0, (uint64_t)sub_23629F630, (uint64_t)&block_descriptor_28, (SEL *)&selRef_setLockedApplications_completion_);
}

void sub_23625B364()
{
  uint64_t v0;

  sub_23625724C(v0, (uint64_t)sub_23629F63C, (uint64_t)&block_descriptor_25, (SEL *)&selRef_setHiddenApplications_completion_);
}

uint64_t sub_23625B394()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23625B3B8()
{
  return sub_23628AEFC();
}

uint64_t sub_23625B3C0(uint64_t a1)
{
  return sub_23625A6AC(a1);
}

uint64_t sub_23625B3C8(char *a1)
{
  return sub_236258E7C(*a1);
}

uint64_t sub_23625B3D4()
{
  return sub_2362CB50C();
}

uint64_t sub_23625B40C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23625B438()
{
  uint64_t v0;

  return sub_23625947C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23625B440()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23625B464()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_23625B4A0()
{
  uint64_t v0;

  return sub_236254CFC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_23625B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D60A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23625B4F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23625B534(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_23625B56C(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_unknownObjectRelease();

  }
}

uint64_t sub_23625B598()
{
  uint64_t v0;

  return sub_236256040(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23625B5A0()
{
  return swift_deallocObject();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B7EF12C](a1, v6, a5);
}

ValueMetadata *type metadata accessor for DefaultFirstRunWorkManager()
{
  return &type metadata for DefaultFirstRunWorkManager;
}

ValueMetadata *type metadata accessor for DefaultServiceInstantiator()
{
  return &type metadata for DefaultServiceInstantiator;
}

id sub_23625B5FC(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)
    return result;
  return result;
}

void destroy for AuthUIBindingTarget(uint64_t a1)
{
  sub_23625B61C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_23625B61C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)

}

uint64_t initializeWithCopy for AuthUIBindingTarget(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23625B5FC(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AuthUIBindingTarget(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23625B5FC(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_23625B61C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AuthUIBindingTarget(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_23625B61C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthUIBindingTarget(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AuthUIBindingTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_23625B800(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_23625B80C(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_23625B81C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for AuthUIBindingTarget()
{
  return &type metadata for AuthUIBindingTarget;
}

ValueMetadata *type metadata accessor for PolicyChangeEvent.ChangeCategories()
{
  return &type metadata for PolicyChangeEvent.ChangeCategories;
}

unint64_t sub_23625B854()
{
  unint64_t result;

  result = qword_2563D7110;
  if (!qword_2563D7110)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE3D4, &type metadata for PolicyChangeEvent.ChangeCategories);
    atomic_store(result, (unint64_t *)&qword_2563D7110);
  }
  return result;
}

unint64_t sub_23625B89C()
{
  unint64_t result;

  result = qword_2563D7118;
  if (!qword_2563D7118)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE3A4, &type metadata for PolicyChangeEvent.ChangeCategories);
    atomic_store(result, (unint64_t *)&qword_2563D7118);
  }
  return result;
}

unint64_t sub_23625B8E4()
{
  unint64_t result;

  result = qword_2563D7120;
  if (!qword_2563D7120)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE3FC, &type metadata for PolicyChangeEvent.ChangeCategories);
    atomic_store(result, (unint64_t *)&qword_2563D7120);
  }
  return result;
}

unint64_t sub_23625B92C()
{
  unint64_t result;

  result = qword_2563D7128;
  if (!qword_2563D7128)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE434, &type metadata for PolicyChangeEvent.ChangeCategories);
    atomic_store(result, (unint64_t *)&qword_2563D7128);
  }
  return result;
}

uint64_t sub_23625B970(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23625B988(uint64_t a1)
{
  sub_23625B61C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

id sub_23625BA2C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for APChangeEventManager()), sel_init);
  qword_2563DB638 = (uint64_t)result;
  return result;
}

uint64_t (*sub_23625BA58())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_23625BAA0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  char *v10;
  id result;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;
  uint64_t v25;

  v23 = sub_2362CB878();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = &v0[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventsPublisher];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = (unint64_t *)&v0[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent];
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent] = MEMORY[0x24BEE4B00];
  v21 = OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventQueue;
  sub_23625DAF8();
  v10 = v0;
  sub_2362CB578();
  v25 = MEMORY[0x24BEE4AF8];
  sub_23625DB34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23625DB7C();
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v3, *MEMORY[0x24BEE5750], v23);
  *(_QWORD *)&v0[v21] = sub_2362CB8B4();
  *(_QWORD *)&v10[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventSubscription] = 0;
  result = (id)xpc_event_publisher_create();
  if (result)
  {
    *(_QWORD *)&v10[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventsXPCPublisher] = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6068);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2362CE580;
    *(_QWORD *)(inited + 32) = sub_2362CB698();
    *(_QWORD *)(inited + 40) = v13;
    v14 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
    *(_QWORD *)(inited + 56) = sub_2362CB698();
    *(_QWORD *)(inited + 64) = v15;
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = sub_2362CB698();
    *(_QWORD *)(inited + 88) = v16;
    *(_QWORD *)(inited + 96) = v14;
    *(_QWORD *)(inited + 104) = sub_2362CB698();
    *(_QWORD *)(inited + 112) = v17;
    *(_QWORD *)(inited + 120) = v14;
    v18 = sub_236294890(inited);
    swift_beginAccess();
    *v9 = v18;

    swift_bridgeObjectRelease();
    v19 = (objc_class *)type metadata accessor for APChangeEventManager();
    v24.receiver = v10;
    v24.super_class = v19;
    return objc_msgSendSuper2(&v24, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23625BDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _QWORD v10[4];
  __int128 aBlock;
  __int128 v12;
  void *v13;
  uint64_t v14;

  v1 = v0;
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = sub_23625DAE8;
  v14 = v2;
  v3 = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v12 = sub_23625C050;
  *((_QWORD *)&v12 + 1) = &block_descriptor_1;
  v4 = _Block_copy(&aBlock);
  swift_release();
  xpc_event_publisher_set_handler();
  _Block_release(v4);
  v13 = sub_23625C0B8;
  v14 = 0;
  *(_QWORD *)&aBlock = v3;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v12 = sub_23628E7D0;
  *((_QWORD *)&v12 + 1) = &block_descriptor_3;
  v5 = _Block_copy(&aBlock);
  xpc_event_publisher_set_error_handler();
  _Block_release(v5);
  xpc_event_publisher_activate();
  v6 = v0 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventsPublisher;
  swift_beginAccess();
  if (!*(_QWORD *)(v6 + 24))
  {
    v8 = *(_OWORD *)(v6 + 16);
    aBlock = *(_OWORD *)v6;
    v12 = v8;
    v13 = *(void **)(v6 + 32);
    if (*((_QWORD *)&v8 + 1))
      goto LABEL_3;
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  sub_23624E76C(v6, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_7;
LABEL_3:
  sub_23624E76C((uint64_t)&aBlock, (uint64_t)v10);
  if (*((_QWORD *)&v12 + 1))
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = sub_2362CB548();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
LABEL_8:
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventSubscription) = v7;
  return swift_release();
}

void sub_23625BFDC(int a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a4 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x23B7EF2F4](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_23625C314(a1, a2, a3);

  }
}

uint64_t sub_23625C050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23625C0B8()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_2563D4178 != -1)
    swift_once();
  v0 = sub_2362CB494();
  __swift_project_value_buffer(v0, (uint64_t)qword_2563DB5D8);
  oslog = sub_2362CB47C();
  v1 = sub_2362CB830();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v2 = 67109120;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, oslog, v1, "event publisher error: %d", v2, 8u);
    MEMORY[0x23B7EF258](v2, -1, -1);
  }

}

void sub_23625C1D4(_OWORD *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  _OWORD v12[4];

  v2 = a1[1];
  v12[0] = *a1;
  v12[1] = v2;
  v3 = a1[3];
  v12[2] = a1[2];
  v12[3] = v3;
  if ((v12[0] & 3) != 0)
  {
    v4 = a2 + 16;
    swift_beginAccess();
    v5 = MEMORY[0x23B7EF2F4](v4);
    if (v5)
    {
      v6 = (char *)v5;
      if (qword_2563D4178 != -1)
        swift_once();
      v7 = sub_2362CB494();
      __swift_project_value_buffer(v7, (uint64_t)qword_2563DB5D8);
      v8 = sub_2362CB47C();
      v9 = sub_2362CB848();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_23624C000, v8, v9, "Store changed app preferences, posting notification", v10, 2u);
        MEMORY[0x23B7EF258](v10, -1, -1);
      }

      v11 = *(id *)&v6[OBJC_IVAR____TtC13AppProtection20APChangeEventManager_changeEventsXPCPublisher];
      sub_23625CF98((uint64_t)v11, v12);

    }
  }
}

void sub_23625C314(int a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  void (*v23)(_QWORD *);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  void (*v29)(_QWORD *);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  void (*v35)(_QWORD *);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  void (*v41)(_QWORD *);
  _QWORD *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  BOOL v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  void (*v75)(_QWORD *@<X8>);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  _BOOL8 v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  void (*v87)(_QWORD *@<X8>);
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  char v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD *@<X8>);
  _BOOL4 v101;
  NSObject *oslog;
  _BOOL4 osloga;
  uint64_t v104[4];
  _QWORD v105[4];

  if (a1 == 2)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v43 = sub_2362CB494();
    __swift_project_value_buffer(v43, (uint64_t)qword_2563DB5D8);
    oslog = sub_2362CB47C();
    v44 = sub_2362CB848();
    if (os_log_type_enabled(oslog, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_23624C000, oslog, v44, "initial barrier on event stream.", v45, 2u);
      MEMORY[0x23B7EF258](v45, -1, -1);
    }
LABEL_32:

    return;
  }
  v5 = v3;
  if (a1 == 1)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v15 = sub_2362CB494();
    __swift_project_value_buffer(v15, (uint64_t)qword_2563DB5D8);
    v16 = sub_2362CB47C();
    v17 = sub_2362CB848();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      v105[0] = a2;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v16, v17, "removing subscriber with token %llu.", v18, 0xCu);
      MEMORY[0x23B7EF258](v18, -1, -1);
    }

    v19 = sub_2362CB698();
    v21 = v20;
    v22 = sub_23625BA58();
    v23 = sub_23625CEF4(v104, v19, v21);
    if (*v24)
      sub_2362ABE3C(a2);
    ((void (*)(uint64_t *, _QWORD))v23)(v104, 0);
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD *, _QWORD))v22)(v105, 0);
    v25 = sub_2362CB698();
    v27 = v26;
    v28 = sub_23625BA58();
    v29 = sub_23625CEF4(v104, v25, v27);
    if (*v30)
      sub_2362ABE3C(a2);
    ((void (*)(uint64_t *, _QWORD))v29)(v104, 0);
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD *, _QWORD))v28)(v105, 0);
    v31 = sub_2362CB698();
    v33 = v32;
    v34 = sub_23625BA58();
    v35 = sub_23625CEF4(v104, v31, v33);
    if (*v36)
      sub_2362ABE3C(a2);
    ((void (*)(uint64_t *, _QWORD))v35)(v104, 0);
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD *, _QWORD))v34)(v105, 0);
    v37 = sub_2362CB698();
    v39 = v38;
    v40 = sub_23625BA58();
    v41 = sub_23625CEF4(v104, v37, v39);
    if (*v42)
      sub_2362ABE3C(a2);
    ((void (*)(uint64_t *, _QWORD))v41)(v104, 0);
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD *, _QWORD))v40)(v105, 0);
    return;
  }
  if (a1)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v46 = sub_2362CB494();
    __swift_project_value_buffer(v46, (uint64_t)qword_2563DB5D8);
    oslog = sub_2362CB47C();
    v47 = sub_2362CB83C();
    if (os_log_type_enabled(oslog, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v48 = 67109120;
      LODWORD(v105[0]) = a1;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, oslog, v47, "unknown action %u", v48, 8u);
      MEMORY[0x23B7EF258](v48, -1, -1);

      return;
    }
    goto LABEL_32;
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v9 = sub_2362CB494();
  __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
  v10 = sub_2362CB47C();
  LOBYTE(v11) = sub_2362CB848();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    v105[0] = a2;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v10, (os_log_type_t)v11, "adding subscriber with token %llu.", v12, 0xCu);
    MEMORY[0x23B7EF258](v12, -1, -1);
  }

  if (!a3)
    return;
  v13 = swift_unknownObjectRetain();
  v14 = MEMORY[0x23B7EF594](v13);
  if (v14 != sub_2362CB4E8())
  {
    swift_unknownObjectRelease();
    return;
  }
  v49 = xpc_dictionary_get_BOOL(a3, "unhiddenEvent");
  LODWORD(v50) = xpc_dictionary_get_BOOL(a3, "hiddenEvent");
  v51 = xpc_dictionary_get_BOOL(a3, "unlockedEvent");
  v101 = xpc_dictionary_get_BOOL(a3, "lockedEvent");
  swift_unknownObjectRelease();
  osloga = v51;
  if (!v49)
  {
    v54 = 0;
    if (!(_DWORD)v50)
      goto LABEL_47;
    goto LABEL_39;
  }
  v52 = sub_2362CB698();
  v54 = v53;
  v55 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v104[0] = *v55;
  v57 = v104[0];
  *v55 = 0x8000000000000000;
  v4 = sub_2362934D8(v52, v54);
  v59 = *(_QWORD *)(v57 + 16);
  v60 = (v58 & 1) == 0;
  v61 = v59 + v60;
  if (__OFADD__(v59, v60))
  {
    __break(1u);
    goto LABEL_76;
  }
  LOBYTE(v11) = v58;
  if (*(_QWORD *)(v57 + 24) < v61)
  {
    sub_236294F28(v61, isUniquelyReferenced_nonNull_native);
    v62 = sub_2362934D8(v52, v54);
    if ((v11 & 1) == (v63 & 1))
    {
      v4 = v62;
      goto LABEL_44;
    }
LABEL_80:
    sub_2362CBC20();
    __break(1u);
    return;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_79;
  while (1)
  {
LABEL_44:
    v51 = osloga;
    *v55 = v104[0];
    swift_bridgeObjectRelease();
    v74 = *v55;
    swift_bridgeObjectRetain();
    if ((v11 & 1) == 0)
    {
      sub_2362966E8(v4, v52, v54, MEMORY[0x24BEE4B08], v74);
      swift_bridgeObjectRetain();
    }
    v11 = *(_QWORD *)(v74 + 56);
    swift_bridgeObjectRelease();
    sub_236252B04(v104, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v54 = (uint64_t)sub_23625CEE4;
    if ((_DWORD)v50)
    {
LABEL_39:
      v52 = sub_2362CB698();
      v50 = v64;
      v55 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
      swift_beginAccess();
      v65 = swift_isUniquelyReferenced_nonNull_native();
      v104[0] = *v55;
      v66 = v104[0];
      *v55 = 0x8000000000000000;
      v4 = sub_2362934D8(v52, v50);
      v68 = *(_QWORD *)(v66 + 16);
      v69 = (v67 & 1) == 0;
      v70 = v68 + v69;
      if (__OFADD__(v68, v69))
      {
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      v71 = v67;
      if (*(_QWORD *)(v66 + 24) >= v70)
      {
        if ((v65 & 1) == 0)
          sub_23629684C();
      }
      else
      {
        sub_236294F28(v70, v65);
        v72 = sub_2362934D8(v52, v50);
        if ((v71 & 1) != (v73 & 1))
          goto LABEL_80;
        v4 = v72;
      }
      *v55 = v104[0];
      swift_bridgeObjectRelease();
      v86 = *v55;
      swift_bridgeObjectRetain();
      if ((v71 & 1) == 0)
      {
        sub_2362966E8(v4, v52, v50, MEMORY[0x24BEE4B08], v86);
        swift_bridgeObjectRetain();
      }
      v11 = *(_QWORD *)(v86 + 56);
      swift_bridgeObjectRelease();
      sub_236252B04(v104, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v75 = sub_23625CEE4;
      v100 = sub_23625CEE4;
      if (!osloga)
      {
LABEL_57:
        v87 = 0;
        if (!v101)
          goto LABEL_67;
        goto LABEL_58;
      }
    }
    else
    {
LABEL_47:
      v75 = 0;
      v100 = 0;
      if (!v51)
        goto LABEL_57;
    }
    v50 = v54;
    v52 = sub_2362CB698();
    v77 = v76;
    v55 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
    swift_beginAccess();
    v54 = swift_isUniquelyReferenced_nonNull_native();
    v104[0] = *v55;
    v78 = v104[0];
    *v55 = 0x8000000000000000;
    v4 = sub_2362934D8(v52, v77);
    v80 = *(_QWORD *)(v78 + 16);
    v81 = (v79 & 1) == 0;
    v82 = v80 + v81;
    if (__OFADD__(v80, v81))
      goto LABEL_77;
    v83 = v79;
    if (*(_QWORD *)(v78 + 24) >= v82)
    {
      if ((v54 & 1) == 0)
        sub_23629684C();
    }
    else
    {
      sub_236294F28(v82, v54);
      v84 = sub_2362934D8(v52, v77);
      if ((v83 & 1) != (v85 & 1))
        goto LABEL_80;
      v4 = v84;
    }
    v54 = v50;
    *v55 = v104[0];
    swift_bridgeObjectRelease();
    v97 = *v55;
    swift_bridgeObjectRetain();
    if ((v83 & 1) == 0)
    {
      sub_2362966E8(v4, v52, v77, MEMORY[0x24BEE4B08], v97);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_236252B04(v104, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v87 = sub_23625CEE4;
    v75 = v100;
    if (!v101)
    {
LABEL_67:
      sub_23625DAB4(v54);
      v98 = (uint64_t)v75;
      goto LABEL_73;
    }
LABEL_58:
    v50 = v54;
    v52 = sub_2362CB698();
    v11 = v88;
    v5 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
    swift_beginAccess();
    v54 = swift_isUniquelyReferenced_nonNull_native();
    v104[0] = *v5;
    v89 = v104[0];
    *v5 = 0x8000000000000000;
    v55 = (uint64_t *)sub_2362934D8(v52, v11);
    v91 = *(_QWORD *)(v89 + 16);
    v92 = (v90 & 1) == 0;
    v93 = v91 + v92;
    if (!__OFADD__(v91, v92))
      break;
LABEL_78:
    __break(1u);
LABEL_79:
    sub_23629684C();
  }
  v94 = v90;
  if (*(_QWORD *)(v89 + 24) >= v93)
  {
    if ((v54 & 1) == 0)
      sub_23629684C();
  }
  else
  {
    sub_236294F28(v93, v54);
    v95 = sub_2362934D8(v52, v11);
    if ((v94 & 1) != (v96 & 1))
      goto LABEL_80;
    v55 = (uint64_t *)v95;
  }
  *v5 = v104[0];
  swift_bridgeObjectRelease();
  v99 = *v5;
  swift_bridgeObjectRetain();
  if ((v94 & 1) == 0)
  {
    sub_2362966E8(v55, v52, v11, MEMORY[0x24BEE4B08], v99);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_236252B04(v104, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_23625DAB4(v50);
  v98 = (uint64_t)v100;
LABEL_73:
  sub_23625DAB4(v98);
  sub_23625DAB4((uint64_t)v87);
}

void sub_23625CEE4(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4B08];
}

void (*sub_23625CEF4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_23625D4B0(v6, a2, a3);
  return sub_23625CF60;
}

void sub_23625CF60(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_23625CF98(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  xpc_object_t empty;
  uint64_t v6;
  xpc_object_t v7;
  uint64_t v8;
  xpc_object_t v9;
  uint64_t v10;
  xpc_object_t v11;
  uint64_t v12;
  xpc_object_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;

  v3 = v2;
  empty = xpc_dictionary_create_empty();
  v6 = a2[3];
  sub_23625D7C0(v6);
  xpc_dictionary_set_value(empty, "unhiddenPayload", v7);
  swift_unknownObjectRelease();
  v8 = a2[2];
  sub_23625D7C0(v8);
  xpc_dictionary_set_value(empty, "hiddenPayload", v9);
  swift_unknownObjectRelease();
  v10 = a2[5];
  sub_23625D7C0(v10);
  xpc_dictionary_set_value(empty, "unlockedPayload", v11);
  swift_unknownObjectRelease();
  v12 = a2[4];
  sub_23625D7C0(v12);
  xpc_dictionary_set_value(empty, "lockedPayload", v13);
  swift_unknownObjectRelease();
  if (v6 && *(_QWORD *)(v6 + 16))
  {
    v14 = sub_2362CB698();
    v16 = v15;
    v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
    swift_beginAccess();
    v18 = *v17;
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      v19 = sub_2362934D8(v14, v16);
      if ((v20 & 1) != 0)
      {
        v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_9:
        sub_23625D954(v21);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v21 = 0;
    goto LABEL_9;
  }
LABEL_10:
  if (v8 && *(_QWORD *)(v8 + 16))
  {
    v22 = sub_2362CB698();
    v24 = v23;
    v25 = (uint64_t *)(v3 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
    swift_beginAccess();
    v26 = *v25;
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRetain();
      v27 = sub_2362934D8(v22, v24);
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_18:
        sub_23625D954(v29);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v29 = 0;
    goto LABEL_18;
  }
LABEL_19:
  if (v10 && *(_QWORD *)(v10 + 16))
  {
    v30 = sub_2362CB698();
    v32 = v31;
    v33 = (uint64_t *)(v3 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
    swift_beginAccess();
    v34 = *v33;
    if (*(_QWORD *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      v35 = sub_2362934D8(v30, v32);
      if ((v36 & 1) != 0)
      {
        v37 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        sub_23625D954(v37);
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v37 = 0;
    goto LABEL_27;
  }
LABEL_28:
  if (!v12 || !*(_QWORD *)(v12 + 16))
    return swift_unknownObjectRelease();
  v38 = sub_2362CB698();
  v40 = v39;
  v41 = (uint64_t *)(v3 + OBJC_IVAR____TtC13AppProtection20APChangeEventManager_subscriberTokensForEvent);
  swift_beginAccess();
  v42 = *v41;
  if (!*(_QWORD *)(v42 + 16))
    goto LABEL_36;
  swift_bridgeObjectRetain();
  v43 = sub_2362934D8(v38, v40);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_36:
    swift_bridgeObjectRelease();
    v45 = 0;
    goto LABEL_37;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_37:
  sub_23625D954(v45);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_23625D3D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for APChangeEventManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for APChangeEventManager()
{
  return objc_opt_self();
}

uint64_t sub_23625D490()
{
  return sub_23625BDCC();
}

void (*sub_23625D4B0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_23625D6F8(v6);
  v6[10] = sub_23625D590(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_23625D540;
}

void sub_23625D540(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_23625D590(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_2362934D8(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_23625D6BC;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_23629684C();
      goto LABEL_7;
    }
    sub_236294F28(v16, a4 & 1);
    v20 = sub_2362934D8(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_2362CBC20();
  __break(1u);
  return result;
}

void sub_23625D6BC(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_23625D724(*a1, *((_BYTE *)*a1 + 40), (_QWORD *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_23625D6F8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23625D718;
}

uint64_t sub_23625D718(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_23625D724(uint64_t *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_2362966E8(a4, a5, a6, v8, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_2362896EC(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

void sub_23625D7C0(uint64_t a1)
{
  xpc_object_t empty;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  void *v12;
  const char *v13;
  id v14;
  size_t v15;

  empty = xpc_array_create_empty();
  if (!a1)
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (v6)
  {
    v6 &= v6 - 1;
LABEL_19:
    swift_bridgeObjectRetain();
    v12 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v13 = (const char *)objc_msgSend(v12, sel_UTF8String);
    v14 = v12;
    if (v13)
    {
      v15 = sub_2362CB4D0();
      xpc_array_set_string(empty, v15, v13);
    }
  }
  v9 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v9 >= v7)
    goto LABEL_21;
  v10 = *(_QWORD *)(v3 + 8 * v9);
  ++v8;
  if (v10)
    goto LABEL_18;
  v8 = v9 + 1;
  if (v9 + 1 >= v7)
    goto LABEL_21;
  v10 = *(_QWORD *)(v3 + 8 * v8);
  if (v10)
  {
LABEL_18:
    v6 = (v10 - 1) & v10;
    goto LABEL_19;
  }
  v11 = v9 + 2;
  if (v11 >= v7)
  {
LABEL_21:
    swift_release();
    return;
  }
  v10 = *(_QWORD *)(v3 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v7)
      goto LABEL_21;
    v10 = *(_QWORD *)(v3 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_23625D954(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;

  if (!result)
    return result;
  v1 = result + 56;
  v2 = 1 << *(_BYTE *)(result + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(result + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_6;
    }
    v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v7 >= v5)
      return swift_release();
    v8 = *(_QWORD *)(v1 + 8 * v7);
    ++v6;
    if (!v8)
    {
      v6 = v7 + 1;
      if (v7 + 1 >= v5)
        return swift_release();
      v8 = *(_QWORD *)(v1 + 8 * v6);
      if (!v8)
      {
        v6 = v7 + 2;
        if (v7 + 2 >= v5)
          return swift_release();
        v8 = *(_QWORD *)(v1 + 8 * v6);
        if (!v8)
          break;
      }
    }
LABEL_21:
    v4 = (v8 - 1) & v8;
LABEL_6:
    result = xpc_event_publisher_fire();
  }
  v9 = v7 + 3;
  if (v9 >= v5)
    return swift_release();
  v8 = *(_QWORD *)(v1 + 8 * v9);
  if (v8)
  {
    v6 = v9;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v6 >= v5)
      return swift_release();
    v8 = *(_QWORD *)(v1 + 8 * v6);
    ++v9;
    if (v8)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23625DAB4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23625DAC4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23625DAE8(int a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23625BFDC(a1, a2, a3, v3);
}

void sub_23625DAF0(_OWORD *a1)
{
  uint64_t v1;

  sub_23625C1D4(a1, v1);
}

unint64_t sub_23625DAF8()
{
  unint64_t result;

  result = qword_2542A5588;
  if (!qword_2542A5588)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542A5588);
  }
  return result;
}

unint64_t sub_23625DB34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A5580;
  if (!qword_2542A5580)
  {
    v1 = sub_2362CB86C();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_2542A5580);
  }
  return result;
}

unint64_t sub_23625DB7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A5570;
  if (!qword_2542A5570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A5560);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542A5570);
  }
  return result;
}

_QWORD *sub_23625DBD0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)(a1 + 36) = *(_OWORD *)((char *)a2 + 36);
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_OWORD *)(a1 + 52) = *(_OWORD *)((char *)a2 + 52);
    v10 = sub_2362CB428();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_23625DCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2362CB428();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_23625DD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_23625DE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_23625DFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_2362CB428();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_23625E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_2362CB428();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_23625E20C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23625E218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_23625E298()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23625E2A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DataAccessRecord()
{
  uint64_t result;

  result = qword_2563D5D38;
  if (!qword_2563D5D38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23625E358()
{
  unint64_t v0;

  sub_23625E3E0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23625E3E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563D5A08)
  {
    sub_2362CB428();
    v0 = sub_2362CB9BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2563D5A08);
  }
}

BOOL sub_23625E434(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23625E448()
{
  sub_2362CBC8C();
  sub_2362CBC98();
  return sub_2362CBCBC();
}

uint64_t sub_23625E48C()
{
  return sub_2362CBC98();
}

uint64_t sub_23625E4B4()
{
  sub_2362CBC8C();
  sub_2362CBC98();
  return sub_2362CBCBC();
}

uint64_t sub_23625E4F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23625E524 + 4 * byte_2362CE620[*v0]))(0x726F737365636361, 0xE800000000000000);
}

uint64_t sub_23625E524()
{
  return 0x6565737365636361;
}

uint64_t sub_23625E548()
{
  return 0x6B6F547469647561;
}

uint64_t sub_23625E56C()
{
  return 1684632949;
}

uint64_t sub_23625E57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23625F28C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23625E5A0()
{
  return 0;
}

void sub_23625E5AC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23625E5B8()
{
  sub_23625EF24();
  return sub_2362CBD04();
}

uint64_t sub_23625E5E0()
{
  sub_23625EF24();
  return sub_2362CBD10();
}

uint64_t sub_23625E608@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  char v32;
  uint64_t v34;

  v27 = a2;
  v34 = *MEMORY[0x24BDAC8D0];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v29, v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7158);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DataAccessRecord();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23625EF24();
  v14 = (uint64_t)v30;
  sub_2362CBCEC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = a1;
  v16 = v6;
  v32 = 0;
  v17 = v5;
  *(_QWORD *)v13 = sub_2362CBB60();
  *((_QWORD *)v13 + 1) = v18;
  v32 = 1;
  *((_QWORD *)v13 + 2) = sub_2362CBB60();
  *((_QWORD *)v13 + 3) = v19;
  v32 = 2;
  v20 = sub_2362CBB78();
  v26 = v9;
  if (v20 < 3u)
  {
    v13[32] = v20;
    v31 = 3;
    sub_23625EF68();
    sub_2362CBB6C();
    v25 = 0;
    __asm { BR              X10 }
  }
  v25 = 0;
  sub_2362CB698();
  v21 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v22 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, 4864, 0);

  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v17);
  v23 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  result = swift_bridgeObjectRelease();
  if (!v23)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23625EB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __asm { BR              X11 }
}

uint64_t sub_23625EB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = BYTE6(a7);
  if (!BYTE6(a7))
    return 0;
  if ((a5 & 1) != 0)
    goto LABEL_11;
  if (v8 != a4)
  {
    if ((unint64_t)(a2 - 0x400000000000000) >> 59 != 31)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v9 = a4 - v8;
    if (__OFSUB__(a4, v8))
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 32 * a2;
    if (v9 >= 32 * a2)
      v9 = 32 * a2;
    v10 = v8 + v9;
    if (__OFADD__(v8, v9))
      goto LABEL_32;
    if (v10 >= v8)
      goto LABEL_21;
    __break(1u);
LABEL_11:
    if (v7)
    {
      if (v7 == 1)
        v8 = (int)a6;
      else
        v8 = *(_QWORD *)(a6 + 16);
    }
    else
    {
      v8 = 0;
    }
    if ((unint64_t)(a2 - 0x400000000000000) >> 59 == 31)
    {
      if (v9 >= 32 * a2)
        v9 = 32 * a2;
      v10 = v8 + v9;
      if (!__OFADD__(v8, v9))
      {
        if (v10 >= v8)
        {
LABEL_21:
          if (v8 == v10)
            return 0;
          if (!a1)
          {
LABEL_33:
            __break(1u);
            JUMPOUT(0x23625EC94);
          }
          sub_2362CB3B0();
          v11 = v10 - v8;
          if (!__OFSUB__(v10, v8))
            return v11;
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  return 0;
}

uint64_t sub_23625ECA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE v15[16];
  _OWORD __src[2];
  uint64_t v17;

  v3 = v1;
  v17 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23625EF24();
  sub_2362CBCF8();
  LOBYTE(__src[0]) = 0;
  sub_2362CBB84();
  if (v2)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  LOBYTE(__src[0]) = 1;
  sub_2362CBB84();
  LOBYTE(__src[0]) = 2;
  sub_2362CBBA8();
  v10 = *(_OWORD *)(v3 + 52);
  __src[0] = *(_OWORD *)(v3 + 36);
  __src[1] = v10;
  v11 = sub_23625F58C(__src, 32);
  v13 = v12;
  *(_QWORD *)&__src[0] = v11;
  *((_QWORD *)&__src[0] + 1) = v12;
  v15[15] = 3;
  sub_23625F638();
  sub_2362CBB9C();
  type metadata accessor for DataAccessRecord();
  LOBYTE(__src[0]) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  sub_23625F67C((unint64_t *)&qword_2563D7A00, &qword_2563D7650, MEMORY[0x24BDCEA70], MEMORY[0x24BEE4AA8]);
  sub_2362CBB9C();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  return sub_23625EFAC(v11, v13);
}

uint64_t sub_23625EEFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23625E608(a1, a2);
}

uint64_t sub_23625EF10(_QWORD *a1)
{
  return sub_23625ECA4(a1);
}

unint64_t sub_23625EF24()
{
  unint64_t result;

  result = qword_2563D7160;
  if (!qword_2563D7160)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE7A4, &type metadata for DataAccessRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563D7160);
  }
  return result;
}

unint64_t sub_23625EF68()
{
  unint64_t result;

  result = qword_2563D7168;
  if (!qword_2563D7168)
  {
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563D7168);
  }
  return result;
}

uint64_t sub_23625EFAC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23625EFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DataAccessRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23625F034(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DataAccessRecord();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23625F070@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  char v18;
  __int128 v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[36];
  _OWORD v27[2];
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = objc_msgSend(a1, sel_accessor_bundle_id);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v9 = result;
  v10 = sub_2362CB698();
  v12 = v11;

  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  result = objc_msgSend(a1, sel_accessed_bundle_id);
  if (!result)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v13 = result;
  v14 = sub_2362CB698();
  v16 = v15;

  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v16;
  v17 = objc_msgSend(a1, sel_raw_accessor_type);
  v18 = 2 * (v17 == 2);
  if (v17 == 1)
    v18 = 1;
  *(_BYTE *)(a2 + 32) = v18;
  sub_2362B9518((uint64_t)v26);
  result = (id)sub_23625F248((uint64_t)v26, (uint64_t)v27, &qword_2563D7178);
  if ((v28 & 1) != 0)
    goto LABEL_12;
  v19 = v27[1];
  *(_OWORD *)(a2 + 36) = v27[0];
  *(_OWORD *)(a2 + 52) = v19;
  v20 = objc_msgSend(a1, sel_transaction_uuid);
  if (v20)
  {
    v21 = v20;
    sub_2362CB410();

    v22 = sub_2362CB428();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 0, 1, v22);
  }
  else
  {

    v23 = sub_2362CB428();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
  }
  v24 = type metadata accessor for DataAccessRecord();
  return (id)sub_23625F248((uint64_t)v7, a2 + *(int *)(v24 + 32), &qword_2542A5220);
}

uint64_t sub_23625F248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23625F28C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F737365636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6565737365636361 && a2 == 0xE800000000000000 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEC00000065707954 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B6F547469647561 && a2 == 0xEE00617461446E65 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23625F4CC(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23625F58C(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_23625F4CC(__src, &__src[a2]);
  sub_2362CB254();
  swift_allocObject();
  sub_2362CB224();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_2362CB3A4();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_23625F638()
{
  unint64_t result;

  result = qword_2563D7188;
  if (!qword_2563D7188)
  {
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563D7188);
  }
  return result;
}

uint64_t sub_23625F67C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542A5220);
    v10 = sub_23625F6F8(a2, a3);
    result = MEMORY[0x23B7EF18C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23625F6F8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2362CB428();
    result = MEMORY[0x23B7EF18C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DataAccessRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DataAccessRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23625F820 + 4 * byte_2362CE62A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23625F854 + 4 * byte_2362CE625[v4]))();
}

uint64_t sub_23625F854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23625F85C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23625F864);
  return result;
}

uint64_t sub_23625F870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23625F878);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23625F87C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23625F884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23625F890(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23625F898(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DataAccessRecord.CodingKeys()
{
  return &type metadata for DataAccessRecord.CodingKeys;
}

unint64_t sub_23625F8B4()
{
  unint64_t result;

  result = qword_2563D7190;
  if (!qword_2563D7190)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE77C, &type metadata for DataAccessRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563D7190);
  }
  return result;
}

unint64_t sub_23625F8FC()
{
  unint64_t result;

  result = qword_2563D7198;
  if (!qword_2563D7198)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE6EC, &type metadata for DataAccessRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563D7198);
  }
  return result;
}

unint64_t sub_23625F944()
{
  unint64_t result;

  result = qword_2563D71A0;
  if (!qword_2563D71A0)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CE714, &type metadata for DataAccessRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563D71A0);
  }
  return result;
}

uint64_t sub_23625F988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_2362CB878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625DAF8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE5758], v4);
  sub_2362CB578();
  v10[1] = MEMORY[0x24BEE4AF8];
  sub_23625DB34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23625DB7C();
  sub_2362CB9F8();
  result = sub_2362CB8B4();
  qword_2563D5F20 = result;
  return result;
}

void sub_23625FB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  void *v7;
  _QWORD v8[6];

  v1 = v0;
  if (qword_2563D4178 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB848();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23624C000, v3, v4, "resuming notifyd translator", v5, 2u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  if (qword_2563D5F30 != -1)
    swift_once();
  v6 = qword_2563D5F20;
  v8[4] = sub_23625FFC4;
  v8[5] = v1;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_236281684;
  v8[3] = &block_descriptor_2;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v6, v7);
  _Block_release(v7);
}

const char *sub_23625FC8C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  const char *v23;
  const char *result;
  void *v25;
  void *v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];

  v4 = sub_2362CB218();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v9 = sub_2362CB494();
  __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
  swift_unknownObjectRetain_n();
  v10 = sub_2362CB47C();
  v11 = sub_2362CB848();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v29 = v8;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v28 = a2;
    v15 = v14;
    *(_QWORD *)&v32[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v27[1] = v13 + 4;
    v16 = swift_unknownObjectRetain();
    v17 = (void *)MEMORY[0x23B7EF474](v16);
    v18 = sub_2362CB734();
    v30 = v4;
    v20 = v19;
    free(v17);
    swift_unknownObjectRelease();
    v31 = sub_2362AB670(v18, v20, (uint64_t *)v32);
    sub_2362CB9C8();
    swift_unknownObjectRelease_n();
    v4 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v10, v11, "Received notifyd event: %s", v13, 0xCu);
    swift_arrayDestroy();
    v21 = v15;
    a2 = v28;
    MEMORY[0x23B7EF258](v21, -1, -1);
    v22 = v13;
    v8 = v29;
    MEMORY[0x23B7EF258](v22, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v23 = (const char *)sub_2362CB4DC();
  result = xpc_dictionary_get_string(a1, v23);
  if (result)
  {
    sub_2362CB734();
    sub_2362CB674();
    swift_bridgeObjectRelease();
    memset(v32, 0, sizeof(v32));
    sub_2362CB1F4();
    v25 = *(void **)(a2 + 16);
    v26 = (void *)sub_2362CB1DC();
    objc_msgSend(v25, sel_postNotification_, v26);

    return (const char *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

id sub_23625FF30()
{
  uint64_t v0;
  id result;

  type metadata accessor for NotifydXPCEventStreamTranslator();
  v0 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init);
  *(_QWORD *)(v0 + 16) = result;
  qword_2563DB650 = v0;
  return result;
}

uint64_t sub_23625FF80()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NotifydXPCEventStreamTranslator()
{
  return objc_opt_self();
}

const char *sub_23625FFC4(void *a1)
{
  uint64_t v1;

  return sub_23625FC8C(a1, v1);
}

BOOL sub_23625FFCC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;

  v0 = (void *)sub_2362CB2D8();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_2362CB698();
  v4 = v3;

  if (v2 == sub_2362CB698() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  v8 = objc_msgSend(v0, sel_code);

  return v8 == (id)4097;
}

uint64_t sub_2362600B0(uint64_t a1, void **a2)
{
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;

  sub_23628FD84(a1, a2);
  if (v2)
  {
    v4 = (void *)sub_2362CB2D8();
    v5 = objc_msgSend(v4, sel_domain);
    v6 = sub_2362CB698();
    v8 = v7;

    if (v6 == sub_2362CB698() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v11 = sub_2362CBBE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {

LABEL_11:
        swift_willThrow();
        return swift_release();
      }
    }
    v12 = objc_msgSend(v4, sel_code);

    if (v12 != (id)4097)
      goto LABEL_11;

    sub_23628FD84(a1, a2);
  }
  return swift_release();
}

void sub_23626020C(void *a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a4, void (*a5)(void), uint64_t a6)
{
  id v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;

  if (a1)
  {
    v12 = a1;
    if (a2 < 10 && sub_23625FFCC())
    {
      v13 = a2 + 1;
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = v13;
      v14[3] = a3;
      v14[4] = a4;
      v14[5] = a5;
      v14[6] = a6;
      swift_retain();
      swift_retain();
      a3(sub_23626032C, v14);
      swift_release();
    }
    else
    {
      v15 = a1;
      ((void (*)(void *))a5)(a1);

    }
  }
  else
  {
    a5();
  }
}

uint64_t sub_236260300()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23626032C(uint64_t a1)
{
  _QWORD *v1;

  return sub_23626020C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

id sub_2362603E0@<X0>(id a1@<X1>, uint64_t a2@<X0>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v5;
  int v6;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  v5 = *(void **)a2;
  v6 = *(unsigned __int8 *)(a2 + 8);
  if (v6 != 2 || v5 != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_12;
    if (v6 == 1)
    {
LABEL_10:
      sub_236260A18(v5, 1u);
      return (id)swift_willThrow();
    }
    LODWORD(v18) = 0;
    v17 = 43;
    a2 = sub_2362CBB00();
    __break(1u);
  }
  v8 = a2;
  v9 = objc_msgSend(a1, sel_application, v17, v18);
  v10 = objc_msgSend(v9, sel_bundleIdentifier);

  v11 = sub_2362CB698();
  v13 = v12;

  v14 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  v15 = sub_2362AA768(v11, v13, 1);
  if (v3)
  {
    *(_QWORD *)v8 = v3;
    *(_BYTE *)(v8 + 8) = 1;
    v5 = v3;
    goto LABEL_10;
  }
  v5 = v15;
  *(_QWORD *)v8 = v15;
  *(_BYTE *)(v8 + 8) = 0;
LABEL_12:
  *a3 = v5;
  return sub_236260A18(v5, 0);
}

uint64_t sub_236260670()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10[0] = 0;
  v1 = objc_msgSend(v0, sel_loadRecordWithError_, v10);
  if (v1)
  {
    v2 = v1;
    v3 = v10[0];
    v4 = objc_msgSend(v2, sel_localizedName);
  }
  else
  {
    v5 = v10[0];
    v6 = (void *)sub_2362CB2E4();

    swift_willThrow();
    v2 = objc_msgSend(v0, sel_application);
    v4 = objc_msgSend(v2, sel_bundleIdentifier);
  }
  v7 = v4;

  v8 = sub_2362CB698();
  return v8;
}

void sub_236260818()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  v1 = objc_msgSend(v0, sel_loadRecordWithError_, v6);
  if (v1)
  {
    v2 = v1;
    v3 = v6[0];
    objc_msgSend(v2, sel_detach);

  }
  else
  {
    v4 = v6[0];
    v5 = (void *)sub_2362CB2E4();

    swift_willThrow();
  }
}

void __swiftcall APLazyRecordApplication.init()(APLazyRecordApplication *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void APLazyRecordApplication.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t type metadata accessor for APLazyRecordApplication()
{
  unint64_t result;

  result = qword_2563D7218;
  if (!qword_2563D7218)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563D7218);
  }
  return result;
}

id sub_236260A00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2362603E0(*(id *)(v2 + 16), a1, a2);
}

id sub_236260A18(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

uint64_t _s15LazyRecordStateOwCP(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_236260A18(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s15LazyRecordStateOwxx(uint64_t a1)
{
  sub_236260A88(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_236260A88(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t _s15LazyRecordStateOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_236260A18(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_236260A88(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s15LazyRecordStateOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_236260A88(v4, v5);
  return a1;
}

uint64_t _s15LazyRecordStateOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15LazyRecordStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_236260BD0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_236260BE8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s15LazyRecordStateOMa()
{
  return &_s15LazyRecordStateON;
}

uint64_t sub_236260C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[4];
  uint64_t v28;

  v2 = sub_2362CB428();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v27 - v8;
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v27 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13((char *)v27 - v11, a1, v2);
  v14 = objc_allocWithZone(MEMORY[0x24BDC1528]);
  v15 = sub_236261478((uint64_t)v12);
  if ((objc_msgSend(v15, sel_optsOutOfAppProtectionShield) & 1) != 0
    || (v16 = objc_msgSend(v15, sel_appProtectionEffectiveContainer)) == 0)
  {

    if (qword_2563D4178 != -1)
      swift_once();
    v19 = sub_2362CB494();
    __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
    v13(v9, a1, v2);
    v20 = sub_2362CB47C();
    v21 = sub_2362CB830();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v28 = v23;
      *(_DWORD *)v22 = 136315138;
      v27[2] = v22 + 4;
      sub_236261580();
      v24 = sub_2362CBBC0();
      v27[3] = sub_2362AB670(v24, v25, &v28);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      _os_log_impl(&dword_23624C000, v20, v21, "Extension with UUID %s existed but has no effective container", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v23, -1, -1);
      MEMORY[0x23B7EF258](v22, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    }
    return 0;
  }
  else
  {
    v17 = v16;
    v18 = sub_2362CB698();

  }
  return v18;
}

uint64_t sub_236261124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_2362CB428();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v15 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v15 - v7, a1, v2);
  v9 = objc_allocWithZone(MEMORY[0x24BDC1528]);
  v10 = sub_236261478((uint64_t)v8);
  v11 = objc_msgSend(v10, sel_bundleIdentifier);
  if (v11)
  {
    v12 = v11;
    v13 = sub_2362CB698();

  }
  else
  {

    return 0;
  }
  return v13;
}

id sub_236261478(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_2362CB3F8();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithUUID_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_2362CB428();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_2362CB2E4();

    swift_willThrow();
    v11 = sub_2362CB428();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

unint64_t sub_236261580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A52A8;
  if (!qword_2542A52A8)
  {
    v1 = sub_2362CB428();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_2542A52A8);
  }
  return result;
}

uint64_t sub_2362615C8()
{
  uint64_t v0;

  sub_236264B94(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_2362616B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s29SystemAppOutletSubjectMonitorCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23626176C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  unint64_t v19;

  v2 = v1;
  if (qword_2542A53D0 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
  v5 = a1;
  v6 = sub_2362CB47C();
  v7 = sub_2362CB848();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v19 = (unint64_t)v5;
    v10 = v5;
    sub_2362CB9C8();
    *v9 = v5;

    _os_log_impl(&dword_23624C000, v6, v7, "All scenes dismissed for %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v9, -1, -1);
    MEMORY[0x23B7EF258](v8, -1, -1);

  }
  else
  {

  }
  v11 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___APSystemAppOutlet_state);
  v12 = (uint64_t *)&v11[4];
  v13 = v11 + 8;
  os_unfair_lock_lock(v11 + 8);
  sub_236261A54(v5, v12, (uint64_t *)&v19);
  os_unfair_lock_unlock(v13);
  if (v19)
    v14 = v19;
  else
    v14 = MEMORY[0x24BEE4AF8];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_21;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      goto LABEL_21;
  }
  if (v15 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      v17 = MEMORY[0x23B7EE7E4](i, v14);
    }
    else
    {
      v17 = *(_QWORD *)(v14 + 8 * i + 32);
      swift_retain();
    }
    v18 = (void *)MEMORY[0x23B7EF2F4](v17 + 16);
    if (v18)
    {
      objc_msgSend(v18, sel_resetShield);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (objc_msgSend(v5, sel_isEffectivelyLocked))
    sub_236261D20(v5, 1, (uint64_t)nullsub_1, 0);
}

uint64_t sub_236261A54@<X0>(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = objc_msgSend(a1, sel_bundleIdentifier);
  v8 = sub_2362CB698();
  v10 = v9;

  sub_2362ABCB0(v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a1, sel_bundleIdentifier);
  v12 = sub_2362CB698();
  v14 = v13;

  v15 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    v16 = sub_2362934D8(v12, v14);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32 = MEMORY[0x24BEE4AF8];
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        result = sub_2362CBB18();
        v19 = result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain();
        if (v19)
        {
LABEL_5:
          v30 = a3;
          v31 = v3;
          if (v19 < 1)
          {
            __break(1u);
            return result;
          }
          for (i = 0; i != v19; ++i)
          {
            if ((v18 & 0xC000000000000001) != 0)
            {
              v22 = MEMORY[0x23B7EE7E4](i, v18);
            }
            else
            {
              v22 = *(_QWORD *)(v18 + 8 * i + 32);
              swift_retain();
            }
            v23 = MEMORY[0x23B7EF2F4](v22 + 16);
            swift_unknownObjectRelease();
            if (v23)
            {
              sub_2362CBAA0();
              sub_2362CBAC4();
              sub_2362CBAD0();
              sub_2362CBAAC();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          v24 = v32;
          a3 = v30;
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x24BEE4AF8];
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  v24 = 0;
LABEL_19:
  v25 = objc_msgSend(a1, sel_bundleIdentifier, v30, v31);
  v26 = sub_2362CB698();
  v28 = v27;

  if (v24)
  {
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = *a2;
    *a2 = 0x8000000000000000;
    sub_23629762C(v24, v26, v28, isUniquelyReferenced_nonNull_native);
    *a2 = v33;
  }
  else
  {
    sub_236289C1C(v26, v28);
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a3 = v24;
  return result;
}

uint64_t sub_236261D20(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v9 = sub_2362CB560();
  v24 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2362CB590();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = *(_QWORD *)&v4[OBJC_IVAR___APSystemAppOutlet_callbackQueue];
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v4;
  *(_QWORD *)(v18 + 24) = a1;
  *(_BYTE *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  *(_QWORD *)(v18 + 48) = a4;
  aBlock[4] = sub_236264B14;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_14;
  v19 = _Block_copy(aBlock);
  v20 = v4;
  v21 = a1;
  swift_retain();
  sub_2362CB578();
  v25 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  sub_2362CB9F8();
  MEMORY[0x23B7EE604](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

void sub_236261F80(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  os_unfair_lock_s *v11;
  int v12;
  os_unfair_lock_s *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[7];

  v2 = v1;
  if (qword_2542A53D0 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
  v5 = a1;
  v6 = sub_2362CB47C();
  v7 = sub_2362CB848();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    aBlock[0] = v5;
    v10 = v5;
    sub_2362CB9C8();
    *v9 = v5;

    _os_log_impl(&dword_23624C000, v6, v7, "scene will become FG visible for %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v9, -1, -1);
    MEMORY[0x23B7EF258](v8, -1, -1);

  }
  else
  {

  }
  v11 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___APSystemAppOutlet_state);
  v12 = (_DWORD)v11 + 16;
  v13 = v11 + 8;
  os_unfair_lock_lock(v11 + 8);
  sub_236262208(v12, v5);
  os_unfair_lock_unlock(v13);
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedGuard);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v5;
  aBlock[4] = sub_236264B08;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E1A0;
  aBlock[3] = &block_descriptor_8;
  v16 = _Block_copy(aBlock);
  v17 = v5;
  swift_release();
  objc_msgSend(v14, sel_authenticateForShieldDismissalForSubject_completion_, v17, v16);
  _Block_release(v16);

}

uint64_t sub_236262208(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = objc_msgSend(a2, sel_bundleIdentifier);
  v3 = sub_2362CB698();
  v5 = v4;

  sub_236252958(&v7, v3, v5);
  return swift_bridgeObjectRelease();
}

void sub_236262290(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *oslog;

  if (qword_2542A53D0 != -1)
    swift_once();
  v5 = sub_2362CB494();
  __swift_project_value_buffer(v5, (uint64_t)qword_2542A58F8);
  v6 = a3;
  v7 = a2;
  v8 = v6;
  v9 = a2;
  oslog = sub_2362CB47C();
  v10 = sub_2362CB848();
  if (os_log_type_enabled(oslog, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138543874;
    v13 = v8;
    sub_2362CB9C8();
    *v12 = v8;

    *(_WORD *)(v11 + 12) = 1024;
    sub_2362CB9C8();
    *(_WORD *)(v11 + 18) = 2114;
    if (a2)
    {
      v14 = a2;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
    }
    else
    {
      sub_2362CB9C8();
      v15 = 0;
    }
    v12[1] = v15;

    _os_log_impl(&dword_23624C000, oslog, v10, "auth result for %{public}@: %{BOOL}d %{public}@", (uint8_t *)v11, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v12, -1, -1);
    MEMORY[0x23B7EF258](v11, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23626254C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v0 = sub_2362CB560();
  v17[0] = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB590();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2362CB56C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE5480], v9);
  v14 = (void *)sub_2362CB8C0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  aBlock[4] = sub_236262790;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_5;
  v15 = _Block_copy(aBlock);
  sub_2362CB578();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  sub_2362CB9F8();
  MEMORY[0x23B7EE604](0, v8, v3, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_236262790()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_2542A53D0 != -1)
    swift_once();
  v0 = sub_2362CB494();
  __swift_project_value_buffer(v0, (uint64_t)qword_2542A58F8);
  oslog = sub_2362CB47C();
  v1 = sub_2362CB848();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_23624C000, oslog, v1, "Primed LAEnvironment for our use", v2, 2u);
    MEMORY[0x23B7EF258](v2, -1, -1);
  }

}

uint64_t sub_236262880()
{
  char *v0;
  char *v1;
  os_unfair_lock_s *v2;
  int v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  _QWORD v14[3];
  ValueMetadata *v15;
  unint64_t v16;

  if (qword_2542A53E0 != -1)
    swift_once();
  v1 = (char *)off_2542A5400 + 16;
  v2 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_23626909C((unint64_t)v1, 0, (char *)v14);
  os_unfair_lock_unlock(v2);
  v3 = LOBYTE(v14[0]);
  result = swift_release();
  if (v3 == 2)
  {
    v15 = &type metadata for AppProtectionFeatures;
    v16 = sub_236264AA0();
    LOBYTE(v14[0]) = 0;
    v5 = sub_2362CB44C();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if ((v5 & 1) == 0)
      return result;
  }
  else if ((v3 & 1) == 0)
  {
    return result;
  }
  if (qword_2563D59C0 != -1)
    swift_once();
  v6 = *(_QWORD *)&v0[OBJC_IVAR___APSystemAppOutlet_subjectMonitor];
  swift_unknownObjectWeakAssign();
  v7 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_subjectMonitorRegistry), sel_addMonitor_subjectMask_, v6, 1);
  swift_unknownObjectRelease();
  *(_QWORD *)(v6 + OBJC_IVAR____TtCE13AppProtectionCSo17APSystemAppOutlet29SystemAppOutletSubjectMonitor_subscription) = v7;
  swift_unknownObjectRelease();
  if (qword_2542A5598 != -1)
    swift_once();
  v8 = qword_2542A5938;
  v9 = __swift_project_boxed_opaque_existential_1(qword_2542A5920, qword_2542A5938);
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v9, v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v12);
  sub_23624E76C((uint64_t)(v12 + 56), (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  v13 = *(os_unfair_lock_s **)(*__swift_project_boxed_opaque_existential_1(v14, (uint64_t)v15) + 16);
  swift_retain();
  os_unfair_lock_lock(v13 + 10);
  sub_236284F28((uint64_t)&v13[4], v0);
  os_unfair_lock_unlock(v13 + 10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

id sub_236262B48()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  char *v7;
  os_unfair_lock_s *v8;
  int v9;
  id result;
  char v11;
  _QWORD v13[3];
  ValueMetadata *v14;
  unint64_t v15;

  if (qword_2542A5598 != -1)
    swift_once();
  v1 = qword_2542A5938;
  v2 = __swift_project_boxed_opaque_existential_1(qword_2542A5920, qword_2542A5938);
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v2, v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  sub_23624E76C((uint64_t)(v5 + 56), (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v6 = *(os_unfair_lock_s **)(*__swift_project_boxed_opaque_existential_1(v13, (uint64_t)v14) + 16);
  swift_retain();
  os_unfair_lock_lock(v6 + 10);
  sub_2362850E4((uint64_t)&v6[4], v0);
  os_unfair_lock_unlock(v6 + 10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (qword_2542A53E0 != -1)
    swift_once();
  v7 = (char *)off_2542A5400 + 16;
  v8 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_23626909C((unint64_t)v7, 0, (char *)v13);
  os_unfair_lock_unlock(v8);
  v9 = LOBYTE(v13[0]);
  result = (id)swift_release();
  if (v9 == 2)
  {
    v14 = &type metadata for AppProtectionFeatures;
    v15 = sub_236264AA0();
    LOBYTE(v13[0]) = 0;
    v11 = sub_2362CB44C();
    result = (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    if ((v11 & 1) == 0)
      return result;
  }
  else if ((v9 & 1) == 0)
  {
    return result;
  }
  result = *(id *)(*(_QWORD *)&v0[OBJC_IVAR___APSystemAppOutlet_subjectMonitor]
                 + OBJC_IVAR____TtCE13AppProtectionCSo17APSystemAppOutlet29SystemAppOutletSubjectMonitor_subscription);
  if (result)
    return objc_msgSend(result, sel_invalidate);
  __break(1u);
  return result;
}

void __swiftcall APSystemAppOutlet.init()(APSystemAppOutlet *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void APSystemAppOutlet.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for WeakShield()
{
  return objc_opt_self();
}

uint64_t _s29SystemAppOutletSubjectMonitorCMa()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APSystemAppOutlet(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7270);
}

uint64_t sub_236262EB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;

  type metadata accessor for WeakShield();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *a1;
  v20 = *a1;
  *a1 = 0x8000000000000000;
  v9 = sub_2362934D8(a2, a3);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_12:
    sub_2362CB77C();
LABEL_10:
    sub_2362CB788();
    sub_2362CB770();
    return swift_bridgeObjectRelease();
  }
  v13 = v8;
  if (*(_QWORD *)(v7 + 24) >= v12)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_236296858();
      v7 = v20;
    }
LABEL_7:
    *a1 = v7;
    v16 = swift_bridgeObjectRelease();
    v17 = *a1;
    if ((v13 & 1) == 0)
    {
      sub_2362966E8(v9, a2, a3, MEMORY[0x24BEE4AF8], *a1);
      v16 = swift_bridgeObjectRetain();
    }
    v18 = (_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v9);
    MEMORY[0x23B7EE4B4](v16);
    if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_10;
    goto LABEL_12;
  }
  sub_236294F34(v12, isUniquelyReferenced_nonNull_native);
  v7 = v20;
  v14 = sub_2362934D8(a2, a3);
  if ((v13 & 1) == (v15 & 1))
  {
    v9 = v14;
    goto LABEL_7;
  }
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

uint64_t sub_236263070(void *a1, void (*a2)(os_unfair_lock_s *, uint64_t, uint64_t, void *))
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;

  v5 = objc_msgSend(a1, sel_shieldedApplication);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  v7 = sub_2362CB698();
  v9 = v8;

  v10 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___APSystemAppOutlet_state);
  v11 = v10 + 4;
  v12 = v10 + 8;
  os_unfair_lock_lock(v10 + 8);
  a2(v11, v7, v9, a1);
  os_unfair_lock_unlock(v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236263130(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    v8 = (uint64_t *)result;
    swift_bridgeObjectRetain();
    v9 = sub_2362934D8(a2, a3);
    if ((v10 & 1) == 0)
      return swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = v11;
    swift_unknownObjectRetain();
    v12 = sub_236264688(&v17, a4);
    result = swift_unknownObjectRelease();
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_2362CBB18();
      result = swift_bridgeObjectRelease();
      if (v13 >= v12)
        goto LABEL_5;
    }
    else
    {
      v13 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= v12)
      {
LABEL_5:
        sub_2362B63E4(v12, v13);
        v14 = v17;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v16 = *v8;
        *v8 = 0x8000000000000000;
        sub_23629762C(v14, a2, a3, isUniquelyReferenced_nonNull_native);
        *v8 = v16;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  return result;
}

void sub_2362632B4(void *a1, uint64_t a2, void *a3, void (*a4)(os_unfair_lock_s *, uint64_t, uint64_t, void *))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  sub_236263070(a3, a4);
  swift_unknownObjectRelease();

}

uint64_t sub_236263318@<X0>(id a1@<X1>, uint64_t a2@<X0>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = objc_msgSend(a1, sel_bundleIdentifier);
  v6 = sub_2362CB698();
  v8 = v7;

  LOBYTE(v4) = sub_23624EC88(v6, v8, v4);
  result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

void sub_2362633A4(void *a1, int a2, void (*a3)(_QWORD), uint64_t a4)
{
  char *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  id v17;
  void (*v18)(uint64_t *, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  void *v50;
  void *v51;
  NSObject *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void (*v56)(_QWORD);
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  os_log_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t aBlock;
  unint64_t v69;
  void (*v70)(uint64_t, void *);
  void *v71;
  void (*v72)(_QWORD);
  uint64_t v73;

  v5 = v4;
  v10 = sub_2362CB5D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (uint64_t *)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)&v4[OBJC_IVAR___APSystemAppOutlet_callbackQueue];
  *v14 = (uint64_t)v15;
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
  v16(v14, *MEMORY[0x24BEE5610], v10);
  v17 = v15;
  LOBYTE(v15) = sub_2362CB5F0();
  v18 = *(void (**)(uint64_t *, uint64_t))(v11 + 8);
  v18(v14, v10);
  if ((v15 & 1) != 0)
  {
    sub_23625B534(0, (unint64_t *)&qword_2542A5588);
    *v14 = sub_2362CB884();
    v16(v14, *MEMORY[0x24BEE5608], v10);
    v19 = sub_2362CB5F0();
    v18(v14, v10);
    if ((v19 & 1) != 0)
    {
      LODWORD(v66) = a2;
      if (qword_2542A53D0 == -1)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_4:
  v20 = sub_2362CB494();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_2542A58F8);
  v22 = v5;
  v23 = a1;
  v24 = (char *)v22;
  v25 = v23;
  v26 = sub_2362CB47C();
  v27 = sub_2362CB848();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v64 = a3;
    v30 = v29;
    v62 = swift_slowAlloc();
    v67[0] = v62;
    *(_DWORD *)v30 = 136446722;
    v61 = v28;
    v31 = objc_msgSend(*(id *)&v24[OBJC_IVAR___APSystemAppOutlet_systemAppInterface], sel_description);
    v32 = sub_2362CB698();
    v65 = a4;
    v33 = v32;
    v63 = v21;
    v35 = v34;

    aBlock = sub_2362AB670(v33, v35, v67);
    sub_2362CB9C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    v36 = v66;
    v37 = 28277;
    if ((v66 & 1) != 0)
    {
      v37 = 0;
      v38 = 0xE000000000000000;
    }
    else
    {
      v38 = 0xE200000000000000;
    }
    aBlock = v37;
    v69 = v38;
    swift_bridgeObjectRetain();
    sub_2362CB728();
    swift_bridgeObjectRelease();
    aBlock = sub_2362AB670(aBlock, v69, v67);
    v60 = v26;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2082;
    v39 = objc_msgSend(v25, sel_bundleIdentifier);
    v40 = sub_2362CB698();
    v42 = v41;

    v43 = v40;
    a4 = v65;
    aBlock = sub_2362AB670(v43, v42, v67);
    sub_2362CB9C8();

    swift_bridgeObjectRelease();
    v44 = v60;
    _os_log_impl(&dword_23624C000, v60, (os_log_type_t)v61, "tell %{public}s to %s %{public}s", (uint8_t *)v30, 0x20u);
    v45 = v62;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v45, -1, -1);
    v46 = v30;
    a3 = v64;
    MEMORY[0x23B7EF258](v46, -1, -1);

    if ((v36 & 1) != 0)
      goto LABEL_13;
  }
  else
  {

    v36 = v66;
    if ((v66 & 1) != 0)
    {
LABEL_13:
      v50 = *(void **)&v24[OBJC_IVAR___APSystemAppOutlet_systemAppInterface];
      v72 = a3;
      v73 = a4;
      aBlock = MEMORY[0x24BDAC760];
      v69 = 1107296256;
      v70 = sub_2362BE888;
      v71 = &block_descriptor_3;
      v51 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v50, sel_setApplication_shielded_forOutlet_completion_, v25, v36 & 1, v24, v51);
      _Block_release(v51);
      return;
    }
  }
  if (!objc_msgSend(v25, sel_isEffectivelyLocked))
    goto LABEL_13;
  v47 = *(os_unfair_lock_s **)&v24[OBJC_IVAR___APSystemAppOutlet_state];
  v48 = (uint64_t)&v47[4];
  v49 = v47 + 8;
  os_unfair_lock_lock(v47 + 8);
  sub_236263318(v25, v48, &aBlock);
  os_unfair_lock_unlock(v49);
  if ((aBlock & 1) != 0)
    goto LABEL_13;
  v52 = v25;
  v53 = sub_2362CB47C();
  v54 = sub_2362CB848();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v66 = swift_slowAlloc();
    *(_DWORD *)v55 = 138412290;
    aBlock = (uint64_t)v52;
    v56 = a3;
    v57 = v52;
    sub_2362CB9C8();
    v58 = v66;
    *(_QWORD *)v66 = v52;

    a3 = v56;
    _os_log_impl(&dword_23624C000, v53, v54, "%@ is effectively locked but has a visible scene; not unshielding!",
      v55,
      0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v58, -1, -1);
    MEMORY[0x23B7EF258](v55, -1, -1);
  }
  else
  {

    v53 = v52;
  }

  a3(0);
}

void sub_2362639C4(uint64_t a1, void *a2, int a3, void (*a4)(_QWORD), uint64_t a5)
{
  sub_2362633A4(a2, a3, a4, a5);
}

uint64_t sub_2362639F4(void *a1, char *a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  void *v40;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v7 = sub_2362CB5D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  *v11 = sub_2362CB884();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE5608], v7);
  v12 = sub_2362CB5F0();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) == 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v19 = sub_2362CBB18();
    if (v19)
      goto LABEL_4;
    goto LABEL_19;
  }
  v13 = objc_msgSend(a1, sel_bundleIdentifier);
  v14 = sub_2362CB698();
  v7 = v15;

  v16 = *(os_unfair_lock_s **)&a2[OBJC_IVAR___APSystemAppOutlet_state];
  v17 = (uint64_t)&v16[4];
  v18 = v16 + 8;
  os_unfair_lock_lock(v16 + 8);
  v46 = v14;
  sub_236263FC8(v17, v14, v7, &v48);
  os_unfair_lock_unlock(v18);
  v3 = v48;
  v48 = MEMORY[0x24BEE4AF8];
  if (v3 >> 62)
    goto LABEL_18;
  v19 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v19)
  {
LABEL_4:
    v45 = a2;
    v20 = 4;
    while (1)
    {
      v21 = v20 - 4;
      if ((v3 & 0xC000000000000001) != 0)
      {
        v22 = MEMORY[0x23B7EE7E4](v20 - 4, v3);
        v23 = v20 - 3;
        if (__OFADD__(v21, 1))
          goto LABEL_16;
      }
      else
      {
        v22 = *(_QWORD *)(v3 + 8 * v20);
        swift_retain();
        v23 = v20 - 3;
        if (__OFADD__(v21, 1))
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      a2 = (char *)MEMORY[0x23B7EF2F4](v22 + 16);
      v24 = swift_release();
      if (a2)
      {
        MEMORY[0x23B7EE4B4](v24);
        if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2362CB77C();
        sub_2362CB788();
        sub_2362CB770();
      }
      ++v20;
      if (v23 == v19)
      {
        swift_bridgeObjectRelease();
        v25 = v48;
        a2 = v45;
        goto LABEL_20;
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v25 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  if (qword_2542A53D0 != -1)
    swift_once();
  v26 = sub_2362CB494();
  __swift_project_value_buffer(v26, (uint64_t)qword_2542A58F8);
  v27 = a2;
  swift_bridgeObjectRetain_n();
  v28 = v27;
  swift_bridgeObjectRetain();
  v29 = sub_2362CB47C();
  v30 = sub_2362CB848();
  v31 = v25 >> 62;
  if (!os_log_type_enabled((os_log_t)v29, (os_log_type_t)v30))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  v44 = v30;
  v30 = swift_slowAlloc();
  v43 = swift_slowAlloc();
  v48 = v43;
  *(_DWORD *)v30 = 136446978;
  v32 = objc_msgSend(*(id *)&v28[OBJC_IVAR___APSystemAppOutlet_systemAppInterface], sel_description);
  v45 = (char *)(v25 >> 62);
  v33 = v32;
  v34 = sub_2362CB698();
  v36 = v35;

  v47 = sub_2362AB670(v34, v36, (uint64_t *)&v48);
  sub_2362CB9C8();

  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 12) = 2082;
  swift_bridgeObjectRetain();
  v47 = sub_2362AB670(v46, v7, (uint64_t *)&v48);
  sub_2362CB9C8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v30 + 22) = 2048;
  v47 = a3;
  v31 = (unint64_t)v45;
  sub_2362CB9C8();
  *(_WORD *)(v30 + 32) = 2048;
  if (v31)
    goto LABEL_38;
  v37 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v47 = v37;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, (os_log_t)v29, (os_log_type_t)v44, "tell %{public}s to setShieldStyle of %{public}s to: %lu for %ld shields", (uint8_t *)v30, 0x2Au);
    v38 = v43;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v38, -1, -1);
    MEMORY[0x23B7EF258](v30, -1, -1);

LABEL_27:
    if (v31)
    {
      swift_bridgeObjectRetain();
      v29 = sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (!v29)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v29 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v29)
        return swift_bridgeObjectRelease();
    }
    if (v29 >= 1)
      break;
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    v37 = sub_2362CBB18();
    swift_bridgeObjectRelease();
  }
  for (i = 0; i != v29; ++i)
  {
    if ((v25 & 0xC000000000000001) != 0)
    {
      v40 = (void *)MEMORY[0x23B7EE7E4](i, v25);
    }
    else
    {
      v40 = *(void **)(v25 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    objc_msgSend(v40, sel_setShieldStyle_, a3);
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236263FC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  uint64_t v10;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_2362934D8(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = MEMORY[0x24BEE4AF8];
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  *a4 = v10;
  return result;
}

uint64_t sub_236264054(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  char *v22;
  char isEscapingClosureAtFileLocation;
  __int128 v24;
  uint64_t v25;
  _QWORD aBlock[6];

  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    result = sub_2362CBB18();
    v3 = result;
    if (result)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v6 = 0;
    v25 = v1 + OBJC_IVAR____TtCE13AppProtectionCSo17APSystemAppOutlet29SystemAppOutletSubjectMonitor_outlet;
    *(_QWORD *)&v5 = 138543362;
    v24 = v5;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x23B7EE7E4](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      if ((objc_msgSend(v7, sel_isEffectivelyLocked, v24) & 1) != 0)
        goto LABEL_5;
      if (qword_2542A53D0 != -1)
        swift_once();
      v9 = sub_2362CB494();
      __swift_project_value_buffer(v9, (uint64_t)qword_2542A58F8);
      v10 = v8;
      v11 = sub_2362CB47C();
      v12 = sub_2362CB848();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v13 = v24;
        *(_QWORD *)(v13 + 4) = v10;
        *v14 = v10;

        _os_log_impl(&dword_23624C000, v11, v12, "subject %{public}@ was effectively unlocked, dropping shield", (uint8_t *)v13, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v14, -1, -1);
        MEMORY[0x23B7EF258](v13, -1, -1);
      }
      else
      {

        v11 = v10;
      }

      v15 = MEMORY[0x23B7EF2F4](v25);
      if (!v15)
      {
LABEL_5:

      }
      else
      {
        v16 = (char *)v15;
        objc_opt_self();
        v17 = swift_dynamicCastObjCClassUnconditional();
        v18 = *(NSObject **)&v16[OBJC_IVAR___APSystemAppOutlet_callbackQueue];
        v1 = swift_allocObject();
        *(_QWORD *)(v1 + 16) = v16;
        *(_QWORD *)(v1 + 24) = v17;
        *(_BYTE *)(v1 + 32) = 0;
        *(_QWORD *)(v1 + 40) = nullsub_1;
        *(_QWORD *)(v1 + 48) = 0;
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = sub_236264B14;
        *(_QWORD *)(v19 + 24) = v1;
        aBlock[4] = sub_236264B8C;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2362550D4;
        aBlock[3] = &block_descriptor_23;
        v20 = _Block_copy(aBlock);
        v21 = v10;
        v22 = v16;
        swift_retain();
        swift_release();
        dispatch_sync(v18, v20);
        _Block_release(v20);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
        {
          __break(1u);
          goto LABEL_20;
        }
      }
      if (v3 == ++v6)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

id sub_236264404(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  uint64_t v22;

  v20 = a1;
  v19 = sub_2362CB878();
  v2 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2362CB86C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v9, v10);
  v18 = OBJC_IVAR___APSystemAppOutlet_callbackQueue;
  v17[0] = sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  v11 = v1;
  sub_2362CB578();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE5750], v19);
  *(_QWORD *)(v17[1] + v18) = sub_2362CB8B4();
  *(_QWORD *)&v11[OBJC_IVAR___APSystemAppOutlet_systemAppInterface] = v20;
  v12 = objc_allocWithZone((Class)_s29SystemAppOutletSubjectMonitorCMa());
  swift_unknownObjectRetain();
  v13 = objc_msgSend(v12, sel_init);
  *(_QWORD *)&v11[OBJC_IVAR___APSystemAppOutlet_subjectMonitor] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59E0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 32) = 0;
  v15 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v14 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v14 + 24) = v15;
  *(_QWORD *)&v11[OBJC_IVAR___APSystemAppOutlet_state] = v14;

  v21.receiver = v11;
  v21.super_class = (Class)APSystemAppOutlet;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_236264688(unint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  unint64_t i;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned __int8 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v23;
  int v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = *a1;
  if (*a1 >> 62)
    goto LABEL_69;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = *a1;
    if (!(v11 >> 62))
      return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v28 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    return v28;
  }
LABEL_3:
  v6 = 0;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x23B7EE7E4](v6, v4);
    }
    else
    {
      v7 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain();
    }
    v8 = (void *)MEMORY[0x23B7EF2F4](v7 + 16);
    if (v8)
      break;
    swift_release();
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      swift_bridgeObjectRetain();
      v5 = sub_2362CBB18();
      if (!v5)
        goto LABEL_14;
      goto LABEL_3;
    }
LABEL_13:
    ++v6;
    if (v10 == v5)
      goto LABEL_14;
  }
  v9 = objc_msgSend(v8, sel_isEqualTo_, a2);
  swift_release();
  swift_unknownObjectRelease();
  if ((v9 & 1) == 0)
  {
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_58;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_73;
  }
  if (*a1 >> 62)
  {
LABEL_73:
    swift_bridgeObjectRetain();
    v29 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    if (v13 == v29)
      return v6;
LABEL_20:
    for (i = v6 + 5; ; ++i)
    {
      v4 = i - 4;
      v15 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v16 = MEMORY[0x23B7EE7E4](i - 4);
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_59;
        if (v4 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_60;
        v16 = *(_QWORD *)(v15 + 8 * i);
        swift_retain();
      }
      v17 = (void *)MEMORY[0x23B7EF2F4](v16 + 16);
      if (!v17)
      {
        swift_release();
        if (v4 == v6)
          goto LABEL_48;
        goto LABEL_30;
      }
      v18 = objc_msgSend(v17, sel_isEqualTo_, a2);
      swift_release();
      swift_unknownObjectRelease();
      if ((v18 & 1) == 0)
        break;
LABEL_49:
      v26 = i - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_61;
      if (*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v27 = sub_2362CBB18();
        swift_bridgeObjectRelease();
      }
      else
      {
        v27 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v26 == v27)
        return v6;
    }
    if (v4 == v6)
    {
LABEL_48:
      if (__OFADD__(v6++, 1))
        goto LABEL_62;
      goto LABEL_49;
    }
LABEL_30:
    v19 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
    {
      v20 = MEMORY[0x23B7EE7E4](v6, *a1);
      v19 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
LABEL_34:
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_65;
        if (v4 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_66;
        v21 = *(_QWORD *)(v19 + 8 * i);
        swift_retain();
        goto LABEL_37;
      }
    }
    else
    {
      if ((v6 & 0x8000000000000000) != 0)
        goto LABEL_63;
      if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_64;
      v20 = *(_QWORD *)(v19 + 8 * v6 + 32);
      swift_retain();
      if ((v19 & 0xC000000000000001) == 0)
        goto LABEL_34;
    }
    v21 = MEMORY[0x23B7EE7E4](i - 4, v19);
    v19 = *a1;
LABEL_37:
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v19;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v19 & 0x8000000000000000) != 0
      || (v19 & 0x4000000000000000) != 0)
    {
      sub_2362B5F88(v19);
    }
    *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;
    swift_release();
    sub_2362CB770();
    v23 = *a1;
    v24 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v23;
    if (!v24 || (v23 & 0x8000000000000000) != 0 || (v23 & 0x4000000000000000) != 0)
      sub_2362B5F88(v23);
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_67;
    if (v4 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_68;
    *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v20;
    swift_release();
    sub_2362CB770();
    goto LABEL_48;
  }
  if (v13 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_20;
  return v6;
}

unint64_t sub_236264AA0()
{
  unint64_t result;

  result = qword_2542A53F0;
  if (!qword_2542A53F0)
  {
    result = MEMORY[0x23B7EF18C](&protocol conformance descriptor for AppProtectionFeatures, &type metadata for AppProtectionFeatures);
    atomic_store(result, (unint64_t *)&qword_2542A53F0);
  }
  return result;
}

uint64_t sub_236264AE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_236264B08(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_236262290(a1, a2, *(void **)(v2 + 16));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_236264B50()
{
  uint64_t v0;

  sub_2362633A4(*(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void (**)(_QWORD))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_236264B7C()
{
  return swift_deallocObject();
}

uint64_t sub_236264B8C()
{
  uint64_t v0;

  return sub_2362550B4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_236264B94(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t _s5StateVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s5StateVwCP_1(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5StateVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s5StateVwta(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

void sub_236264CE0(uint64_t a1)
{
  int64_t v1;
  void **v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2362BC784(0, v1, 0);
    v3 = (void **)(a1 + 32);
    while (1)
    {
      v5 = *v3++;
      v4 = v5;
      if (!v5)
        break;
      v6 = v4;
      v7 = sub_2362CB698();
      v9 = v8;

      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      if (v11 >= v10 >> 1)
        sub_2362BC784(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v13 + 16) = v11 + 1;
      v12 = v13 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      if (!--v1)
        return;
    }
    __break(1u);
  }
}

uint64_t sub_236264DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_2362CB878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB86C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v0);
  result = sub_2362CB8B4();
  qword_2563D4160 = result;
  return result;
}

void *sub_236264F98()
{
  void *result;

  result = (void *)sub_236264FB4();
  off_2563D7278 = result;
  return result;
}

unint64_t sub_236264FB4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D72B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2362CE8D0;
  *(_QWORD *)(inited + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 40) = 0x80000002362D4650;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D72B8);
  v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v1 + 32) = *MEMORY[0x24BEB3830];
  sub_236264CE0(v1);
  v3 = v2;
  swift_setDeallocating();
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = 0xD000000000000013;
  *(_QWORD *)(inited + 64) = 0x80000002362D5150;
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v4 + 32) = *MEMORY[0x24BEB3840];
  sub_236264CE0(v4);
  v6 = v5;
  swift_setDeallocating();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x80000002362D5170;
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v7 + 32) = *MEMORY[0x24BEB38E8];
  sub_236264CE0(v7);
  v9 = v8;
  swift_setDeallocating();
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 104) = 0xD000000000000019;
  *(_QWORD *)(inited + 112) = 0x80000002362D5190;
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_2362CE0E0;
  v11 = *MEMORY[0x24BEB38E0];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x24BEB38D8];
  *(_QWORD *)(v10 + 40) = v11;
  sub_236264CE0(v10);
  v13 = v12;
  swift_setDeallocating();
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = 0x6C7070612E6D6F63;
  *(_QWORD *)(inited + 136) = 0xEF636973754D2E65;
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v14 + 32) = *MEMORY[0x24BEB38B8];
  sub_236264CE0(v14);
  v16 = v15;
  swift_setDeallocating();
  *(_QWORD *)(inited + 144) = v16;
  strcpy((char *)(inited + 152), "com.apple.Home");
  *(_BYTE *)(inited + 167) = -18;
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v17 + 32) = *MEMORY[0x24BEB3998];
  sub_236264CE0(v17);
  v19 = v18;
  swift_setDeallocating();
  *(_QWORD *)(inited + 168) = v19;
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x80000002362D51B0;
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v20 + 32) = *MEMORY[0x24BEB3898];
  sub_236264CE0(v20);
  v22 = v21;
  swift_setDeallocating();
  *(_QWORD *)(inited + 192) = v22;
  return sub_23629489C(inited);
}

uint64_t sub_2362652B0(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t a1, uint64_t a2, void *a3), void *a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t result;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t aBlock;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, void *);
  void *v76;
  void *v77;
  _QWORD *v78;

  v70 = a8;
  v66 = a1;
  v15 = sub_2362CB560();
  v67 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v68 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2362CB590();
  v69 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D69D0 != -1)
    swift_once();
  v71 = a9;
  v22 = off_2563D7278;
  if (!*((_QWORD *)off_2563D7278 + 2))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v23 = sub_2362934D8(a6, a7);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    if (qword_2563D4178 != -1)
      swift_once();
    v66 = v21;
    v34 = sub_2362CB494();
    __swift_project_value_buffer(v34, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain_n();
    v35 = sub_2362CB47C();
    v36 = sub_2362CB848();
    v37 = v15;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      aBlock = v39;
      *(_DWORD *)v38 = 136315138;
      swift_bridgeObjectRetain();
      v72 = sub_2362AB670(a6, a7, &aBlock);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v35, v36, "No services to check for application with bundleID %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v39, -1, -1);
      MEMORY[0x23B7EF258](v38, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v41 = v68;
    v40 = v69;
    v43 = v70;
    v42 = v71;
    if (qword_2563D4168 != -1)
      swift_once();
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v43;
    *(_QWORD *)(v44 + 24) = v42;
    v77 = sub_2362687E8;
    v78 = (_QWORD *)v44;
    aBlock = MEMORY[0x24BDAC760];
    v74 = 1107296256;
    v75 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
    v76 = &block_descriptor_42;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    v46 = v66;
    sub_2362CB578();
    v72 = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v46, v41, v45);
    _Block_release(v45);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v37);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v46, v18);
    return swift_release();
  }
  v64 = v15;
  v65 = v18;
  v25 = *(_QWORD **)(v22[7] + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v25[2])
  {
    v27 = v25[4];
    v26 = v25[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2362CB6F8();
    v28 = (id)tcc_service_singleton_for_name();
    swift_release();
    if (v28)
    {
      swift_bridgeObjectRelease();
      v29 = v66;
      if (v66)
      {
        swift_unknownObjectRetain();
        if (tcc_message_options_create())
        {
          aBlock = a2;
          v74 = a3;
          v75 = a4;
          v76 = a5;
          if (tcc_credential_create_for_process_with_audit_token())
          {
            tcc_message_options_set_request_prompt_policy();
            tcc_message_options_set_reply_handler_policy();
            v30 = (_QWORD *)swift_allocObject();
            v31 = v71;
            v30[2] = v70;
            v30[3] = v31;
            v30[4] = v29;
            v77 = sub_236268890;
            v78 = v30;
            aBlock = MEMORY[0x24BDAC760];
            v74 = 1107296256;
            v75 = sub_2362661C8;
            v76 = &block_descriptor_72;
            v32 = _Block_copy(&aBlock);
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_retain();
            swift_release();
            tcc_server_message_request_authorization();
            _Block_release(v32);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            return swift_unknownObjectRelease_n();
          }
          v60 = v70;
          v59 = v71;
          if (qword_2563D4168 != -1)
            swift_once();
          v61 = swift_allocObject();
          *(_QWORD *)(v61 + 16) = v60;
          *(_QWORD *)(v61 + 24) = v59;
          v77 = sub_23626885C;
          v78 = (_QWORD *)v61;
          aBlock = MEMORY[0x24BDAC760];
          v74 = 1107296256;
          v75 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
          v76 = &block_descriptor_66;
          v62 = _Block_copy(&aBlock);
          swift_retain();
          sub_2362CB578();
          v72 = MEMORY[0x24BEE4AF8];
          sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
          sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
          v50 = v68;
          v51 = v64;
          sub_2362CB9F8();
          MEMORY[0x23B7EE604](0, v21, v50, v62);
          swift_unknownObjectRelease();
          _Block_release(v62);
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_2563D4168 != -1)
            swift_once();
          v56 = swift_allocObject();
          v57 = v71;
          *(_QWORD *)(v56 + 16) = v70;
          *(_QWORD *)(v56 + 24) = v57;
          v77 = sub_236268854;
          v78 = (_QWORD *)v56;
          aBlock = MEMORY[0x24BDAC760];
          v74 = 1107296256;
          v75 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
          v76 = &block_descriptor_60;
          v58 = _Block_copy(&aBlock);
          swift_retain();
          sub_2362CB578();
          v72 = MEMORY[0x24BEE4AF8];
          sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
          sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
          v50 = v68;
          v51 = v64;
          sub_2362CB9F8();
          MEMORY[0x23B7EE604](0, v21, v50, v58);
          swift_unknownObjectRelease();
          _Block_release(v58);
        }
        swift_unknownObjectRelease();
        goto LABEL_34;
      }
      if (qword_2563D4168 != -1)
        swift_once();
      v53 = swift_allocObject();
      v54 = v71;
      *(_QWORD *)(v53 + 16) = v70;
      *(_QWORD *)(v53 + 24) = v54;
      v77 = sub_23626884C;
      v78 = (_QWORD *)v53;
      aBlock = MEMORY[0x24BDAC760];
      v74 = 1107296256;
      v75 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
      v76 = &block_descriptor_54;
      v55 = _Block_copy(&aBlock);
      swift_retain();
      sub_2362CB578();
      v72 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      v50 = v68;
      v51 = v64;
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v21, v50, v55);
      swift_unknownObjectRelease();
      v52 = v55;
    }
    else
    {
      if (qword_2563D4168 != -1)
        swift_once();
      v47 = (_QWORD *)swift_allocObject();
      v48 = v71;
      v47[2] = v70;
      v47[3] = v48;
      v47[4] = v27;
      v47[5] = v26;
      v77 = sub_236268840;
      v78 = v47;
      aBlock = MEMORY[0x24BDAC760];
      v74 = 1107296256;
      v75 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
      v76 = &block_descriptor_48;
      v49 = _Block_copy(&aBlock);
      swift_retain();
      sub_2362CB578();
      v72 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      v50 = v68;
      v51 = v64;
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v21, v50, v49);
      v52 = v49;
    }
    _Block_release(v52);
LABEL_34:
    (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v65);
    return swift_release();
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_236265DA8(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  sub_2362CBA58();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD000000000000021, 0x80000002362D5090, 65, 0xD00000000000005DLL, 0x80000002362D52E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236265E98(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD00000000000001BLL, 0x80000002362D5110, 71, 0xD00000000000005DLL, 0x80000002362D52E0);
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236265F38(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD00000000000001CLL, 0x80000002362D50F0, 77, 0xD00000000000005DLL, 0x80000002362D52E0);
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236265FDC(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD00000000000001FLL, 0x80000002362D5340, 83, 0xD00000000000005DLL, 0x80000002362D52E0);
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_23626607C(uint64_t a1, void *a2, void (*a3)(_BOOL8, uint64_t))
{
  _BOOL8 v4;
  void *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (a1)
  {
    swift_unknownObjectRetain();
    v4 = tcc_authorization_record_get_authorization_reason() == 11;
    a3(v4, 0);
    swift_unknownObjectRelease();
  }
  else if (a2)
  {
    type metadata accessor for CFError(0);
    sub_23624E3C4(&qword_2563D72A0, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
    v6 = (void *)swift_allocError();
    *v7 = a2;
    v8 = a2;
    a3((_BOOL8)v6, 1);

  }
  else
  {
    v9 = sub_2362CB698();
    v11 = sub_236294D50(v9, v10, 35, 0xD00000000000004BLL, 0x80000002362D5290, 94, 0xD00000000000005DLL, 0x80000002362D52E0);
    swift_bridgeObjectRelease();
    a3((_BOOL8)v11, 1);

  }
}

uint64_t sub_2362661C8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_236266230(uint64_t a1, void *a2, _QWORD *a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v7 = MEMORY[0x23B7EF594](a2);
  if (v7 != sub_2362CB4C4())
    return 1;
  v9 = swift_unknownObjectRetain();
  v10 = MEMORY[0x23B7EF594](v9);
  if (v10 != sub_2362CB4C4())
    goto LABEL_9;
  if (!xpc_string_get_string_ptr(a2))
  {
    __break(1u);
LABEL_9:
    result = sub_2362CBB00();
    __break(1u);
    return result;
  }
  v11 = sub_2362CB734();
  v13 = v12;
  swift_unknownObjectRelease();
  v14 = sub_236266344(v11, v13, a3);
  swift_bridgeObjectRelease();
  result = 1;
  if ((v14 & 1) != 0)
  {
    *a4 = 1;
    return 0;
  }
  return result;
}

uint64_t sub_236266344(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_2362CBBE4();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2362CBBE4() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_236266408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_236266458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, void *);
  void *v44;
  void *v45;
  _QWORD *v46;

  v10 = sub_2362CB560();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2362CB590();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v17;
  if (a5)
  {
    v38 = v18;
    swift_unknownObjectRetain();
    if (tcc_message_options_create())
    {
      v36 = v11;
      v37 = a3;
      sub_2362CB6F8();
      v21 = (id)tcc_service_singleton_for_name();
      swift_release();
      if (v21)
      {
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = MEMORY[0x24BEE4AF8];
        tcc_message_options_set_request_prompt_policy();
        tcc_message_options_set_reply_handler_policy();
        v23 = (_QWORD *)swift_allocObject();
        v24 = v37;
        v23[2] = v22;
        v23[3] = v24;
        v23[4] = a4;
        v45 = sub_23626805C;
        v46 = v23;
        aBlock = MEMORY[0x24BDAC760];
        v42 = 1107296256;
        v43 = sub_2362661C8;
        v44 = &block_descriptor_27;
        v25 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        tcc_server_message_get_authorization_records_by_service();
        _Block_release(v25);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        return swift_unknownObjectRelease_n();
      }
      v32 = v37;
      if (qword_2563D4168 != -1)
        swift_once();
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = v32;
      v33[3] = a4;
      v33[4] = a1;
      v33[5] = a2;
      v45 = sub_236268000;
      v46 = v33;
      aBlock = MEMORY[0x24BDAC760];
      v42 = 1107296256;
      v43 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
      v44 = &block_descriptor_18;
      v34 = _Block_copy(&aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_2362CB578();
      v40 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v20, v14, v34);
      swift_unknownObjectRelease();
      _Block_release(v34);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v10);
    }
    else
    {
      if (qword_2563D4168 != -1)
        swift_once();
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = a3;
      *(_QWORD *)(v30 + 24) = a4;
      v45 = sub_236267FF4;
      v46 = (_QWORD *)v30;
      aBlock = MEMORY[0x24BDAC760];
      v42 = 1107296256;
      v43 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
      v44 = &block_descriptor_12;
      v31 = _Block_copy(&aBlock);
      swift_retain();
      sub_2362CB578();
      v40 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v20, v14, v31);
      swift_unknownObjectRelease();
      _Block_release(v31);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
  }
  else
  {
    v27 = v18;
    if (qword_2563D4168 != -1)
      swift_once();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = a3;
    *(_QWORD *)(v28 + 24) = a4;
    v45 = sub_236267FEC;
    v46 = (_QWORD *)v28;
    aBlock = MEMORY[0x24BDAC760];
    v42 = 1107296256;
    v43 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_23624E13C;
    v44 = &block_descriptor_4;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    sub_2362CB578();
    v40 = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v20, v14, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v39);
  }
  return swift_release();
}

void sub_236266A7C(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD00000000000001BLL, 0x80000002362D5110, 187, 0xD00000000000002BLL, 0x80000002362D50C0);
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236266B1C(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD00000000000001CLL, 0x80000002362D50F0, 193, 0xD00000000000002BLL, 0x80000002362D50C0);
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236266BBC(void (*a1)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  sub_2362CBA58();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  v2 = sub_2362CB698();
  v4 = sub_236294D50(v2, v3, 12, 0xD000000000000021, 0x80000002362D5090, 201, 0xD00000000000002BLL, 0x80000002362D50C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1(v4, 1);

}

void sub_236266CB0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  void *v24;
  _QWORD *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t type;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  id v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(char *, uint64_t);
  _QWORD v82[2];
  id v83;
  id v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88[2];
  unint64_t v89;
  uint64_t v90[3];

  v8 = sub_2362CB38C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)v82 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)v82 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (_QWORD **)(a3 + 16);
  if (a1)
  {
    v85 = v21;
    v86 = (char *)v82 - v22;
    swift_unknownObjectRetain();
    switch(tcc_authorization_record_get_authorization_right())
    {
      case 0:
      case 1:
      case 6:
        swift_unknownObjectRelease();
        return;
      case 5:
        if (qword_2542A53D0 != -1)
          swift_once();
        v32 = sub_2362CB494();
        __swift_project_value_buffer(v32, (uint64_t)qword_2542A58F8);
        v33 = sub_2362CB47C();
        v34 = sub_2362CB830();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v35 = 134217984;
          v90[0] = 5;
          sub_2362CB9C8();
          _os_log_impl(&dword_23624C000, v33, v34, "found unexpected authorization right value %llu; assuming it represents an access",
            v35,
            0xCu);
          MEMORY[0x23B7EF258](v35, -1, -1);
        }

        goto LABEL_18;
      default:
LABEL_18:
        v36 = (id)tcc_authorization_record_get_subject_identity();
        if (v36)
        {
          v37 = v36;
          tcc_identity_get_identifier();
          v38 = sub_2362CB734();
          v40 = v39;
          v84 = v37;
          type = tcc_identity_get_type();
          v42 = type;
          if ((unint64_t)(type - 2) < 2)
          {
            swift_bridgeObjectRelease();
            if (qword_2542A53D0 != -1)
              swift_once();
            v43 = sub_2362CB494();
            __swift_project_value_buffer(v43, (uint64_t)qword_2542A58F8);
            v44 = sub_2362CB47C();
            v45 = sub_2362CB830();
            if (os_log_type_enabled(v44, v45))
            {
              v46 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v46 = 134217984;
              v90[0] = v42;
              sub_2362CB9C8();
              _os_log_impl(&dword_23624C000, v44, v45, "ignoring identity of type %llu", v46, 0xCu);
              MEMORY[0x23B7EF258](v46, -1, -1);
            }

LABEL_37:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            return;
          }
          if (!type)
          {
            swift_beginAccess();
            v52 = *v23;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v23 = v52;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v52 = sub_2362AAC04(0, v52[2] + 1, 1, v52);
              *v23 = v52;
            }
            v55 = v52[2];
            v54 = v52[3];
            if (v55 >= v54 >> 1)
            {
              v52 = sub_2362AAC04((_QWORD *)(v54 > 1), v55 + 1, 1, v52);
              *v23 = v52;
            }
            v52[2] = v55 + 1;
            v56 = &v52[2 * v55];
            v56[4] = v38;
            v56[5] = v40;
            swift_endAccess();
            goto LABEL_37;
          }
          if (type != 1)
          {
            type metadata accessor for tcc_identity_type_t(0);
            v90[0] = v42;
            sub_2362CBBFC();
            __break(1u);
            JUMPOUT(0x2362678C4);
          }
          v57 = v86;
          sub_2362CB320();
          swift_bridgeObjectRelease();
          v58 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
          v58(v19, v57, v85);
          v59 = objc_allocWithZone(MEMORY[0x24BDC1540]);
          v60 = sub_236268068((uint64_t)v19, 1);
          v61 = objc_msgSend(v60, sel_bundleIdentifier);
          if (v61)
          {
            v62 = v61;
            v63 = sub_2362CB698();
            v65 = v64;

            swift_beginAccess();
            v66 = *v23;
            v67 = swift_isUniquelyReferenced_nonNull_native();
            *v23 = v66;
            if ((v67 & 1) == 0)
            {
              v66 = sub_2362AAC04(0, v66[2] + 1, 1, v66);
              *v23 = v66;
            }
            v69 = v66[2];
            v68 = v66[3];
            if (v69 >= v68 >> 1)
            {
              v66 = sub_2362AAC04((_QWORD *)(v68 > 1), v69 + 1, 1, v66);
              *v23 = v66;
            }
            v66[2] = v69 + 1;
            v70 = &v66[2 * v69];
            v70[4] = v63;
            v70[5] = v65;
            swift_endAccess();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v9 + 8))(v86, v85);
          }
          else
          {
            v83 = v60;
            if (qword_2542A53D0 != -1)
              swift_once();
            v71 = sub_2362CB494();
            __swift_project_value_buffer(v71, (uint64_t)qword_2542A58F8);
            v73 = v85;
            v72 = v86;
            v58(v15, v86, v85);
            v74 = sub_2362CB47C();
            v75 = sub_2362CB848();
            if (os_log_type_enabled(v74, v75))
            {
              v76 = (uint8_t *)swift_slowAlloc();
              v77 = swift_slowAlloc();
              v90[0] = v77;
              *(_DWORD *)v76 = 136315138;
              v82[1] = v76 + 4;
              sub_23624E3C4((unint64_t *)&qword_2563D3E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
              v78 = sub_2362CBBC0();
              v88[0] = sub_2362AB670(v78, v79, v90);
              sub_2362CB9C8();
              swift_bridgeObjectRelease();
              v80 = *(void (**)(char *, uint64_t))(v9 + 8);
              v80(v15, v73);
              _os_log_impl(&dword_23624C000, v74, v75, "app at %s had no identifier", v76, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B7EF258](v77, -1, -1);
              MEMORY[0x23B7EF258](v76, -1, -1);

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v80(v86, v73);
            }
            else
            {

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v81 = *(void (**)(char *, uint64_t))(v9 + 8);
              v81(v15, v73);

              v81(v72, v73);
            }
          }
        }
        else
        {
          if (qword_2542A53D0 != -1)
            swift_once();
          v47 = sub_2362CB494();
          __swift_project_value_buffer(v47, (uint64_t)qword_2542A58F8);
          v48 = sub_2362CB47C();
          v49 = sub_2362CB830();
          if (os_log_type_enabled(v48, v49))
          {
            v50 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v50 = 0;
            _os_log_impl(&dword_23624C000, v48, v49, "tcc_authorization_record_get_subject_identity returned NULL", v50, 2u);
            MEMORY[0x23B7EF258](v50, -1, -1);
          }

          swift_unknownObjectRelease();
        }
        break;
    }
  }
  else if (a2)
  {
    type metadata accessor for CFError(0);
    sub_23624E3C4(&qword_2563D72A0, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
    v24 = (void *)swift_allocError();
    *v25 = a2;
    v26 = a2;
    a4(v24, 1);

  }
  else
  {
    swift_beginAccess();
    v27 = *v23;
    v89 = MEMORY[0x24BEE4AF8];
    v28 = v27[2];
    if (v28)
    {
      swift_bridgeObjectRetain_n();
      v29 = v27 + 5;
      do
      {
        v30 = *v29;
        v88[0] = *(v29 - 1);
        v88[1] = v30;
        swift_bridgeObjectRetain();
        sub_2362678E0(v88, &v87);
        v31 = swift_bridgeObjectRelease();
        if (v87)
        {
          MEMORY[0x23B7EE4B4](v31);
          if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2362CB77C();
          sub_2362CB788();
          sub_2362CB770();
        }
        v29 += 2;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      v51 = (void *)v89;
    }
    else
    {
      swift_bridgeObjectRetain();
      v51 = (void *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    a4(v51, 0);
    swift_bridgeObjectRelease();
  }
}

id sub_2362678E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id result;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *a1;
  v4 = a1[1];
  v6 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  result = sub_2362AA768(v5, v4, 1);
  if (v2)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v8 = sub_2362CB494();
    __swift_project_value_buffer(v8, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain();
    v9 = v2;
    swift_bridgeObjectRetain();
    v10 = v2;
    v11 = sub_2362CB47C();
    v12 = sub_2362CB830();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v18 = v15;
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_2362AB670(v5, v4, &v18);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2112;
      v16 = v2;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v14 = v17;

      _os_log_impl(&dword_23624C000, v11, v12, "Couldn't find record for %s: %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v15, -1, -1);
      MEMORY[0x23B7EF258](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t sub_236267B8C()
{
  uint64_t result;

  if (qword_2563D4168 != -1)
    swift_once();
  result = tcc_server_create();
  qword_2563DB5B0 = result;
  return result;
}

uint64_t sub_236267BD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1, uint64_t a2, void *a3), void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  char **v8;

  return sub_2362652B0(*v8, a1, a2, a3, a4, a5, a6, a7, a8);
}

id sub_236267C08()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)APTCCManager), sel_init);
  qword_2563D7280 = (uint64_t)result;
  return result;
}

APTCCManager __swiftcall APTCCManager.init()()
{
  return (APTCCManager)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void sub_236267D14(id a1, char a2, void (*a3)(id, id))
{
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(0, a1);
    sub_236268178(a1, 1);
  }
  else
  {
    a3(a1, 0);
  }
}

void sub_236267E7C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_23625B534(0, &qword_2563D72A8);
    v5 = (void *)sub_2362CB758();
  }
  if (a2)
    v6 = sub_2362CB2D8();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

id APTCCManager.init()()
{
  objc_super v1;

  v1.super_class = (Class)APTCCManager;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t type metadata accessor for APTCCManager(uint64_t a1)
{
  return sub_23625B534(a1, (unint64_t *)&unk_2563D7290);
}

uint64_t sub_236267F90()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_236267FB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_236267E7C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_236267FBC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_236267FE0(void *a1, char a2)
{
  uint64_t v2;

  sub_236267D14(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

void sub_236267FEC()
{
  uint64_t v0;

  sub_236266A7C(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_236267FF4()
{
  uint64_t v0;

  sub_236266B1C(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_236268000()
{
  uint64_t v0;

  sub_236266BBC(*(void (**)(id, uint64_t))(v0 + 16));
}

uint64_t sub_23626800C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236268030()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23626805C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_236266CB0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

id sub_236268068(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v3 = v2;
  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_2362CB338();
  v15[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithURL_allowPlaceholder_error_, v6, a2 & 1, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_2362CB38C();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v15[0];
    sub_2362CB2E4();

    swift_willThrow();
    v13 = sub_2362CB38C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

void sub_236268178(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_236268184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void *);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BOOL8 value;
  uint64_t result;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v34 = a1;
  v35 = a2;
  v36 = a3;
  v37 = a4;
  v8 = xpc_copy_entitlement_for_token();
  if (!v8)
  {
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v9 = (void *)v8;
  v10 = MEMORY[0x23B7EF594]();
  if (v10 != sub_2362CB4AC())
  {
    v11 = MEMORY[0x23B7EF594](v9);
    if (v11 == sub_2362CB4A0())
    {
      value = xpc_BOOL_get_value(v9);
      swift_unknownObjectRelease();
      return value;
    }
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  if (qword_2563D69D0 != -1)
    swift_once();
  v18 = off_2563D7278;
  if (*((_QWORD *)off_2563D7278 + 2))
  {
    swift_bridgeObjectRetain();
    v19 = sub_2362934D8(a5, a6);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(v18[7] + 8 * v19);
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = MEMORY[0x24BEE4AF8];
  }
  v33 = 0;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v21;
  *(_QWORD *)(v28 + 24) = &v33;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_2362687AC;
  *(_QWORD *)(v29 + 24) = v28;
  aBlock[4] = sub_2362687C4;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236266408;
  aBlock[3] = &block_descriptor_36;
  v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_array_apply(v9, v30);
  swift_unknownObjectRelease();
  _Block_release(v30);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v33 == 1)
  {
    swift_release();
    return 1;
  }
  v12 = sub_2362687AC;
LABEL_6:
  v13 = xpc_copy_entitlement_for_token();
  if (!v13)
  {
LABEL_9:
    sub_23625DAB4((uint64_t)v12);
    return 0;
  }
  v14 = (void *)v13;
  v15 = MEMORY[0x23B7EF594]();
  if (v15 != sub_2362CB4C4())
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  v22 = swift_unknownObjectRetain();
  v23 = MEMORY[0x23B7EF594](v22);
  if (v23 == sub_2362CB4C4())
  {
    if (xpc_string_get_string_ptr(v14))
    {
      v24 = sub_2362CB734();
      v26 = v25;
      swift_unknownObjectRelease();
      if (v24 == 0xD000000000000015 && v26 == 0x80000002362D46B0)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_23625DAB4((uint64_t)v12);
        return 1;
      }
      v27 = sub_2362CBBE4();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_23625DAB4((uint64_t)v12);
      return (v27 & 1) != 0;
    }
    __break(1u);
  }
  result = sub_2362CBB00();
  __break(1u);
  return result;
}

uint64_t sub_236268578(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if (qword_2563D69D0 != -1)
    swift_once();
  v4 = off_2563D7278;
  if (!*((_QWORD *)off_2563D7278 + 2))
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v5 = sub_2362934D8(a1, a2);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v4[7] + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v7;
}

_QWORD *initializeBufferWithCopyOfBuffer for DefaultTCCManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for DefaultTCCManager()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for DefaultTCCManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for DefaultTCCManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultTCCManager(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultTCCManager(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultTCCManager()
{
  return &type metadata for DefaultTCCManager;
}

uint64_t sub_236268788()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2362687AC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_236266230(a1, a2, *(_QWORD **)(v2 + 16), *(_BYTE **)(v2 + 24));
}

uint64_t sub_2362687B4()
{
  return swift_deallocObject();
}

uint64_t sub_2362687C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_2362687E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_236268840()
{
  uint64_t v0;

  sub_236265DA8(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_23626884C()
{
  uint64_t v0;

  sub_236265E98(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_236268854()
{
  uint64_t v0;

  sub_236265F38(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_23626885C()
{
  uint64_t v0;

  sub_236265FDC(*(void (**)(id, uint64_t))(v0 + 16));
}

uint64_t sub_236268864()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_236268890(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23626607C(a1, a2, *(void (**)(_BOOL8, uint64_t))(v2 + 16));
}

uint64_t sub_236268908()
{
  uint64_t result;

  type metadata accessor for APDeviceKeyBagManager();
  swift_allocObject();
  result = sub_236268940();
  qword_2563DB5C0 = result;
  return result;
}

uint64_t sub_236268940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  void *v17;
  NSObject *v18;
  uint32_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int out_token;
  uint64_t aBlock[7];

  v1 = v0;
  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v30 = sub_2362CB494();
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v2);
  v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v11, v12);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D41F0);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v13 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v13;
  sub_23625DAF8();
  sub_2362CB578();
  aBlock[0] = v14;
  sub_23625DB34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23625DB7C();
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE5750], v4);
  v15 = (void *)sub_2362CB8B4();
  *(_QWORD *)(v1 + 24) = v15;
  out_token = 0;
  v16 = (const char *)*MEMORY[0x24BE67240];
  aBlock[4] = (uint64_t)sub_236268F38;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23628E7D0;
  aBlock[3] = (uint64_t)&block_descriptor_5;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  swift_retain();
  swift_release();
  v19 = notify_register_dispatch(v16, &out_token, v18, v17);
  _Block_release(v17);

  if (!v19)
    return v1;
  if (qword_2542A53D0 != -1)
    swift_once();
  v20 = v30;
  v21 = __swift_project_value_buffer(v30, (uint64_t)qword_2542A58F8);
  v23 = v31;
  v22 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v21, v20);
  v24 = sub_2362CB47C();
  v25 = sub_2362CB83C();
  if (!os_log_type_enabled(v24, v25))
  {

    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v20);
    return v1;
  }
  v26 = swift_slowAlloc();
  result = swift_slowAlloc();
  aBlock[0] = result;
  *(_DWORD *)v26 = 136315394;
  if (v16)
  {
    v28 = result;
    result = MEMORY[0x23B7EE46C](v16);
    if (v29)
    {
      v33 = sub_2362AB670(result, v29, aBlock);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v33) = v19;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v24, v25, "could not register for %s: %u", (uint8_t *)v26, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v28, -1, -1);
      MEMORY[0x23B7EF258](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v20);
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_236268D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  _QWORD v13[5];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = (os_unfair_lock_s *)(v3 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v5 = sub_2362693E4(*(_QWORD *)(v3 + 16));
  os_unfair_lock_unlock(v4);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    return swift_bridgeObjectRelease();
  v7 = type metadata accessor for APDeviceKeyBagManager();
  v8 = (uint64_t *)(v5 + 40);
  do
  {
    v9 = *v8;
    ObjectType = swift_getObjectType();
    v13[3] = v7;
    v13[4] = &off_2507940B0;
    v13[0] = a2;
    v11 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 8);
    swift_unknownObjectRetain();
    swift_retain();
    v11(v13, ObjectType, v9);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    v8 += 2;
    --v6;
  }
  while (v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236268E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236269614(a2, a3);
}

uint64_t sub_236268ECC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APDeviceKeyBagManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for APDeviceKeyBagManager.State()
{
  return &type metadata for APDeviceKeyBagManager.State;
}

_UNKNOWN **sub_236268F28()
{
  return &off_2563D53C0;
}

uint64_t sub_236268F38(uint64_t a1)
{
  uint64_t v1;

  return sub_236268D94(a1, v1);
}

ValueMetadata *type metadata accessor for WeakKeyBagManagerObserver()
{
  return &type metadata for WeakKeyBagManagerObserver;
}

uint64_t AppProtectionFeatures.enabled.getter()
{
  char *v0;
  char v1;
  _QWORD *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  char v8;
  char v10[24];
  ValueMetadata *v11;
  unint64_t v12;

  v1 = *v0;
  if (qword_2542A53E0 != -1)
    swift_once();
  v2 = off_2542A5400;
  v3 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = v2[2];
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_2362935BC(v1), (v6 & 1) != 0))
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v5);
  else
    v7 = 2;
  os_unfair_lock_unlock(v3);
  swift_release();
  if (v7 == 2)
  {
    v11 = &type metadata for AppProtectionFeatures;
    v12 = sub_236264AA0();
    v10[0] = v1;
    v8 = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    v8 = v7 != 0;
  }
  return v8 & 1;
}

uint64_t sub_23626904C()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_236297EE8(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A53E8);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v0;
  off_2542A5400 = (_UNKNOWN *)result;
  return result;
}

unint64_t sub_23626909C@<X0>(unint64_t result@<X0>, char a2@<W1>, char *a3@<X8>)
{
  uint64_t v4;
  char v5;
  char v6;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_2362935BC(a2 & 1), (v5 & 1) != 0))
    v6 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + result);
  else
    v6 = 2;
  *a3 = v6;
  return result;
}

const char *AppProtectionFeatures.domain.getter()
{
  return "AppProtection";
}

const char *AppProtectionFeatures.feature.getter()
{
  _BYTE *v0;

  if (*v0)
    return "no_passcode_fallback";
  else
    return "protected_apps";
}

BOOL static AppProtectionFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AppProtectionFeatures.hash(into:)()
{
  return sub_2362CBC98();
}

uint64_t AppProtectionFeatures.hashValue.getter()
{
  sub_2362CBC8C();
  sub_2362CBC98();
  return sub_2362CBCBC();
}

BOOL sub_2362691BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_2362691D8()
{
  unint64_t result;

  result = qword_2542A53F8;
  if (!qword_2542A53F8)
  {
    result = MEMORY[0x23B7EF18C](&protocol conformance descriptor for AppProtectionFeatures, &type metadata for AppProtectionFeatures);
    atomic_store(result, (unint64_t *)&qword_2542A53F8);
  }
  return result;
}

const char *sub_23626921C()
{
  return "AppProtection";
}

const char *sub_236269230()
{
  _BYTE *v0;

  if (*v0)
    return "no_passcode_fallback";
  else
    return "protected_apps";
}

uint64_t getEnumTagSinglePayload for AppProtectionFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppProtectionFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23626933C + 4 * byte_2362CE9F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_236269370 + 4 * asc_2362CE9F0[v4]))();
}

uint64_t sub_236269370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236269378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236269380);
  return result;
}

uint64_t sub_23626938C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236269394);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236269398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362693A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2362693AC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppProtectionFeatures()
{
  return &type metadata for AppProtectionFeatures;
}

uint64_t sub_2362693C8(uint64_t a1)
{
  return sub_236269400(a1, (void (*)(uint64_t, _BYTE *))sub_23626B864, (void (*)(_BYTE *))sub_23626B8A0, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2362AABC8);
}

uint64_t sub_2362693E4(uint64_t a1)
{
  return sub_236269400(a1, (void (*)(uint64_t, _BYTE *))sub_23626B77C, (void (*)(_BYTE *))sub_23626B7B8, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2362AAD10);
}

uint64_t sub_236269400(uint64_t a1, void (*a2)(uint64_t, _BYTE *), void (*a3)(_BYTE *), uint64_t (*a4)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE v16[8];
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  v7 = a1 + 32;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x24BEE4AF8];
  do
  {
    a2(v7, v16);
    v10 = MEMORY[0x23B7EF2F4](v16);
    v11 = v17;
    a3(v16);
    if (v10)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = a4(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
        v8 = a4(v12 > 1, v13 + 1, 1, v8);
      *(_QWORD *)(v8 + 16) = v13 + 1;
      v9 = v8 + 16 * v13;
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v11;
    }
    v7 += 16;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_236269528(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  _BYTE v9[16];

  swift_unknownObjectWeakInit();
  v8[1] = a2;
  swift_unknownObjectWeakAssign();
  sub_23626B828((uint64_t)v8, (uint64_t)v9);
  sub_23626B864((uint64_t)v9, (uint64_t)v8);
  v4 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2362AABDC(0, v4[2] + 1, 1, (unint64_t)v4);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_2362AABDC((_QWORD *)(v5 > 1), v6 + 1, 1, (unint64_t)v4);
  v4[2] = v6 + 1;
  sub_23626B828((uint64_t)v8, (uint64_t)&v4[2 * v6 + 4]);
  *v2 = v4;
  sub_23626ABE4();
  return sub_23626B8A0((uint64_t)v9);
}

uint64_t sub_236269614(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  _BYTE v9[16];

  swift_unknownObjectWeakInit();
  v8[1] = a2;
  swift_unknownObjectWeakAssign();
  sub_23626B740((uint64_t)v8, (uint64_t)v9);
  sub_23626B77C((uint64_t)v9, (uint64_t)v8);
  v4 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2362AAE3C(0, v4[2] + 1, 1, (unint64_t)v4);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_2362AAE3C((_QWORD *)(v5 > 1), v6 + 1, 1, (unint64_t)v4);
  v4[2] = v6 + 1;
  sub_23626B740((uint64_t)v8, (uint64_t)&v4[2 * v6 + 4]);
  *v2 = v4;
  sub_23626ADF4();
  return sub_23626B7B8((uint64_t)v9);
}

uint64_t sub_236269700(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  _BYTE v9[16];

  swift_unknownObjectWeakInit();
  v8[1] = a2;
  swift_unknownObjectWeakAssign();
  sub_23626B6D0((uint64_t)v8, (uint64_t)v9);
  sub_23626B698((uint64_t)v9, (uint64_t)v8);
  v4 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2362AAF84(0, v4[2] + 1, 1, (unint64_t)v4);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_2362AAF84((_QWORD *)(v5 > 1), v6 + 1, 1, (unint64_t)v4);
  v4[2] = v6 + 1;
  sub_23626B6D0((uint64_t)v8, (uint64_t)&v4[2 * v6 + 4]);
  *v2 = v4;
  sub_23626B004();
  return sub_236264B94((uint64_t)v9);
}

uint64_t sub_2362697EC()
{
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  sub_2362CBBC0();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CBBC0();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0x5668746957646950;
}

uint64_t sub_2362698E8()
{
  return sub_2362697EC();
}

uint64_t sub_2362698F0()
{
  sub_2362CBC8C();
  sub_2362CBCB0();
  sub_2362CBCB0();
  return sub_2362CBCBC();
}

uint64_t sub_236269948()
{
  sub_2362CBCB0();
  return sub_2362CBCB0();
}

uint64_t sub_236269980()
{
  sub_2362CBC8C();
  sub_2362CBCB0();
  sub_2362CBCB0();
  return sub_2362CBCBC();
}

uint64_t sub_2362699D4(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v33[2];
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t aBlock;
  uint64_t v43;
  uint64_t (*v44)();
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v5 = v4;
  v40 = a2;
  v41 = a4;
  v6 = a1;
  v34 = HIDWORD(a1);
  v35 = a3;
  v7 = sub_2362CB560();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2362CB590();
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2362CB8E4();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE57E0];
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v5 + 48) = 0;
  v33[1] = sub_23626B264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7388);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2362CE0F0;
  sub_2362CB8D8();
  aBlock = v21;
  sub_23624E3C4(&qword_2563D7390, v16, MEMORY[0x24BEE57F0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7398);
  sub_23624E384((unint64_t *)&unk_2563D73A0, &qword_2563D7398);
  sub_2362CB9F8();
  v22 = sub_2362CB8FC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
  *(_QWORD *)(v5 + 16) = v22;
  v23 = v34;
  *(_DWORD *)(v5 + 24) = v6;
  *(_DWORD *)(v5 + 28) = v23;
  v24 = v41;
  *(_QWORD *)(v5 + 32) = v35;
  *(_QWORD *)(v5 + 40) = v24;
  swift_getObjectType();
  v25 = swift_allocObject();
  swift_weakInit();
  v46 = sub_23626B2A0;
  v47 = v25;
  aBlock = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v44 = sub_23624E13C;
  v45 = &block_descriptor_6;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_2362CB578();
  v27 = v10;
  sub_23626A208();
  sub_2362CB914();
  _Block_release(v26);
  v28 = v39;
  v38 = *(_QWORD *)(v38 + 8);
  ((void (*)(char *, uint64_t))v38)(v10, v39);
  v29 = v37;
  v36 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v14, v37);
  swift_release();
  swift_release();
  swift_getObjectType();
  v30 = swift_allocObject();
  swift_weakInit();
  v46 = sub_23626B2A8;
  v47 = v30;
  aBlock = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v44 = sub_23624E13C;
  v45 = &block_descriptor_10_0;
  v31 = _Block_copy(&aBlock);
  swift_retain();
  sub_2362CB578();
  sub_23626A208();
  sub_2362CB908();
  _Block_release(v31);

  swift_release();
  ((void (*)(char *, uint64_t))v38)(v27, v28);
  ((void (*)(char *, uint64_t))v36)(v14, v29);
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_236269DB8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (qword_2563D4178 != -1)
      swift_once();
    v2 = sub_2362CB494();
    __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
    swift_retain_n();
    v3 = sub_2362CB47C();
    v4 = sub_2362CB848();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v9 = v6;
      *(_DWORD *)v5 = 136315138;
      v7 = sub_2362697EC();
      sub_2362AB670(v7, v8, &v9);
      sub_2362CB9C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v3, v4, "reg handler for %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v6, -1, -1);
      MEMORY[0x23B7EF258](v5, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    if ((sub_23626B2B0(*(_QWORD *)(v1 + 24)) & 1) == 0 && *(_BYTE *)(v1 + 48) == 1 && (*(_BYTE *)(v1 + 49) & 1) == 0)
    {
      *(_BYTE *)(v1 + 49) = 1;
      (*(void (**)(uint64_t))(v1 + 32))(v1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_236269FB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  if (qword_2563D4178 != -1)
    swift_once();
  v0 = sub_2362CB494();
  __swift_project_value_buffer(v0, (uint64_t)qword_2563DB5D8);
  swift_retain_n();
  v1 = sub_2362CB47C();
  v2 = sub_2362CB848();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v11 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v6 = Strong;
    if (Strong)
    {
      v7 = *(_QWORD *)(Strong + 24);
      swift_release();
    }
    else
    {
      v7 = 0;
    }
    v12 = v7;
    v13 = v6 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D73B0);
    v8 = sub_2362CB6EC();
    v12 = sub_2362AB670(v8, v9, &v11);
    sub_2362CB9C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v1, v2, "target died for %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v4, -1, -1);
    MEMORY[0x23B7EF258](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_BYTE *)(result + 48) == 1 && (*(_BYTE *)(result + 49) & 1) == 0)
    {
      *(_BYTE *)(result + 49) = 1;
      (*(void (**)(uint64_t))(result + 32))(result);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23626A208()
{
  sub_2362CB560();
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  return sub_2362CB9F8();
}

void sub_23626A2B4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v0 + 48) = 1;
  swift_getObjectType();
  sub_2362CB92C();
  if (qword_2563D4178 != -1)
    swift_once();
  v1 = sub_2362CB494();
  __swift_project_value_buffer(v1, (uint64_t)qword_2563DB5D8);
  swift_retain_n();
  v2 = sub_2362CB47C();
  v3 = sub_2362CB848();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2362697EC();
    sub_2362AB670(v6, v7, &v8);
    sub_2362CB9C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v2, v3, "started watching for death %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v5, -1, -1);
    MEMORY[0x23B7EF258](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23626A468()
{
  uint64_t v0;

  swift_getObjectType();
  sub_2362CB920();
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
    sub_2362CB92C();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PidWatch()
{
  return objc_opt_self();
}

uint64_t sub_23626A4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236269700(a2, a3);
}

void sub_23626A51C(unint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *oslog;
  uint64_t v20;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 8;
  os_unfair_lock_lock(v3 + 8);
  sub_23626A840(v4, a1, v1, &v20);
  os_unfair_lock_unlock(v5);
  if (v20)
  {
    swift_retain();
    sub_23626A2B4();
    if (qword_2563D4178 != -1)
      swift_once();
    v6 = sub_2362CB494();
    __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
    v7 = sub_2362CB47C();
    v8 = sub_2362CB848();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v20 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = sub_2362697EC();
      sub_2362AB670(v11, v12, &v20);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v7, v8, "started monitoring %s for death", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v10, -1, -1);
      MEMORY[0x23B7EF258](v9, -1, -1);
    }

    swift_release_n();
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v13 = sub_2362CB494();
    __swift_project_value_buffer(v13, (uint64_t)qword_2563DB5D8);
    oslog = sub_2362CB47C();
    v14 = sub_2362CB848();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_2362697EC();
      sub_2362AB670(v17, v18, &v20);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, oslog, v14, "already monitoring %s for death", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      MEMORY[0x23B7EF258](v15, -1, -1);
    }

  }
}

unint64_t sub_23626A840@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t result;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) && (result = sub_236293618(a2), (v9 & 1) != 0))
  {
    v10 = 0;
  }
  else
  {
    v11 = *(void **)(a3 + 16);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = a2;
    type metadata accessor for PidWatch();
    swift_allocObject();
    v10 = sub_2362699D4(a2, v11, (uint64_t)sub_23626B25C, v13);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0x8000000000000000;
    sub_2362978C8(v10, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 8) = v15;
    result = swift_bridgeObjectRelease();
  }
  *a4 = v10;
  return result;
}

uint64_t sub_23626A978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v15[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 24);
    v7 = (os_unfair_lock_s *)(v6 + 32);
    os_unfair_lock_lock((os_unfair_lock_t)(v6 + 32));
    v8 = sub_236269400(*(_QWORD *)(v6 + 16), (void (*)(uint64_t, _BYTE *))sub_23626B698, (void (*)(_BYTE *))sub_236264B94, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2362AAF98);
    os_unfair_lock_unlock(v7);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = type metadata accessor for DispatchDeathMonitor();
      v11 = (uint64_t *)(v8 + 40);
      do
      {
        v12 = *v11;
        ObjectType = swift_getObjectType();
        v15[3] = v10;
        v15[4] = &off_250793F88;
        v15[0] = v5;
        v14 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 8);
        swift_unknownObjectRetain();
        swift_retain();
        v14(a3, v15, ObjectType, v12);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
        v11 += 2;
        --v9;
      }
      while (v9);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23626AAB0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DispatchDeathMonitor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DispatchDeathMonitor.State()
{
  return &type metadata for DispatchDeathMonitor.State;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PidWithVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PidWithVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PidWithVersion()
{
  return &type metadata for PidWithVersion;
}

unint64_t sub_23626AB74()
{
  unint64_t result;

  result = qword_2563D7380;
  if (!qword_2563D7380)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CEBBC, &type metadata for PidWithVersion);
    atomic_store(result, (unint64_t *)&qword_2563D7380);
  }
  return result;
}

_UNKNOWN **sub_23626ABB8()
{
  return &off_2563D5348;
}

void sub_23626ABC4(unint64_t a1)
{
  sub_23626A51C(a1);
}

uint64_t sub_23626ABE4()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE v13[16];
  _BYTE v14[16];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 48;
    while (1)
    {
      sub_23626B864(v1 + v4 - 16, (uint64_t)v14);
      if (!MEMORY[0x23B7EF2F4](v14))
        break;
      swift_unknownObjectRelease();
      sub_23626B8A0((uint64_t)v14);
      ++v3;
      v4 += 16;
      if (v2 == v3)
      {
        result = swift_bridgeObjectRelease();
        v6 = *(_QWORD *)(*v0 + 16);
        goto LABEL_10;
      }
    }
    sub_23626B8A0((uint64_t)v14);
    result = swift_bridgeObjectRelease();
    v6 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_40;
    v7 = *v0;
    v8 = *(_QWORD *)(*v0 + 16);
    if (v6 != v8)
    {
      v9 = v3 + 1;
      while (v9 < v8)
      {
        sub_23626B864(v7 + v4, (uint64_t)v14);
        if (MEMORY[0x23B7EF2F4](v14))
        {
          swift_unknownObjectRelease();
          result = sub_23626B8A0((uint64_t)v14);
          if (v9 != v3)
          {
            if ((v3 & 0x8000000000000000) != 0)
              goto LABEL_34;
            v10 = *v0;
            v11 = *(_QWORD *)(*v0 + 16);
            if (v3 >= v11)
              goto LABEL_35;
            result = sub_23626B864(v10 + 16 * v3 + 32, (uint64_t)v14);
            if (v9 >= v11)
              goto LABEL_36;
            sub_23626B864(v10 + v4, (uint64_t)v13);
            result = swift_isUniquelyReferenced_nonNull_native();
            *v0 = v10;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_2362B5F74(v10);
              v10 = result;
              *v0 = result;
            }
            if (v3 >= *(_QWORD *)(v10 + 16))
              goto LABEL_37;
            result = sub_23626B8D4((uint64_t)v13, v10 + 16 * v3 + 32);
            if (v9 >= *(_QWORD *)(*v0 + 16))
              goto LABEL_38;
            result = sub_23626B8D4((uint64_t)v14, *v0 + v4);
          }
          if (__OFADD__(v3++, 1))
            goto LABEL_33;
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        else
        {
          result = sub_23626B8A0((uint64_t)v14);
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        v7 = *v0;
        v8 = *(_QWORD *)(*v0 + 16);
        ++v9;
        v4 += 16;
        if (v6 == v8)
          goto LABEL_9;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_9:
    v2 = v3;
LABEL_10:
    if (v6 >= v2)
      return sub_2362B63A8(v2, v6);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    v6 = 0;
    return sub_2362B63A8(v2, v6);
  }
  return result;
}

uint64_t sub_23626ADF4()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE v13[16];
  _BYTE v14[16];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 48;
    while (1)
    {
      sub_23626B77C(v1 + v4 - 16, (uint64_t)v14);
      if (!MEMORY[0x23B7EF2F4](v14))
        break;
      swift_unknownObjectRelease();
      sub_23626B7B8((uint64_t)v14);
      ++v3;
      v4 += 16;
      if (v2 == v3)
      {
        result = swift_bridgeObjectRelease();
        v6 = *(_QWORD *)(*v0 + 16);
        goto LABEL_10;
      }
    }
    sub_23626B7B8((uint64_t)v14);
    result = swift_bridgeObjectRelease();
    v6 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_40;
    v7 = *v0;
    v8 = *(_QWORD *)(*v0 + 16);
    if (v6 != v8)
    {
      v9 = v3 + 1;
      while (v9 < v8)
      {
        sub_23626B77C(v7 + v4, (uint64_t)v14);
        if (MEMORY[0x23B7EF2F4](v14))
        {
          swift_unknownObjectRelease();
          result = sub_23626B7B8((uint64_t)v14);
          if (v9 != v3)
          {
            if ((v3 & 0x8000000000000000) != 0)
              goto LABEL_34;
            v10 = *v0;
            v11 = *(_QWORD *)(*v0 + 16);
            if (v3 >= v11)
              goto LABEL_35;
            result = sub_23626B77C(v10 + 16 * v3 + 32, (uint64_t)v14);
            if (v9 >= v11)
              goto LABEL_36;
            sub_23626B77C(v10 + v4, (uint64_t)v13);
            result = swift_isUniquelyReferenced_nonNull_native();
            *v0 = v10;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_2362B5F8C(v10);
              v10 = result;
              *v0 = result;
            }
            if (v3 >= *(_QWORD *)(v10 + 16))
              goto LABEL_37;
            result = sub_23626B7EC((uint64_t)v13, v10 + 16 * v3 + 32);
            if (v9 >= *(_QWORD *)(*v0 + 16))
              goto LABEL_38;
            result = sub_23626B7EC((uint64_t)v14, *v0 + v4);
          }
          if (__OFADD__(v3++, 1))
            goto LABEL_33;
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        else
        {
          result = sub_23626B7B8((uint64_t)v14);
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        v7 = *v0;
        v8 = *(_QWORD *)(*v0 + 16);
        ++v9;
        v4 += 16;
        if (v6 == v8)
          goto LABEL_9;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_9:
    v2 = v3;
LABEL_10:
    if (v6 >= v2)
      return sub_2362B63BC(v2, v6);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    v6 = 0;
    return sub_2362B63BC(v2, v6);
  }
  return result;
}

uint64_t sub_23626B004()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE v13[16];
  _BYTE v14[16];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 48;
    while (1)
    {
      sub_23626B698(v1 + v4 - 16, (uint64_t)v14);
      if (!MEMORY[0x23B7EF2F4](v14))
        break;
      swift_unknownObjectRelease();
      sub_236264B94((uint64_t)v14);
      ++v3;
      v4 += 16;
      if (v2 == v3)
      {
        result = swift_bridgeObjectRelease();
        v6 = *(_QWORD *)(*v0 + 16);
        goto LABEL_10;
      }
    }
    sub_236264B94((uint64_t)v14);
    result = swift_bridgeObjectRelease();
    v6 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_40;
    v7 = *v0;
    v8 = *(_QWORD *)(*v0 + 16);
    if (v6 != v8)
    {
      v9 = v3 + 1;
      while (v9 < v8)
      {
        sub_23626B698(v7 + v4, (uint64_t)v14);
        if (MEMORY[0x23B7EF2F4](v14))
        {
          swift_unknownObjectRelease();
          result = sub_236264B94((uint64_t)v14);
          if (v9 != v3)
          {
            if ((v3 & 0x8000000000000000) != 0)
              goto LABEL_34;
            v10 = *v0;
            v11 = *(_QWORD *)(*v0 + 16);
            if (v3 >= v11)
              goto LABEL_35;
            result = sub_23626B698(v10 + 16 * v3 + 32, (uint64_t)v14);
            if (v9 >= v11)
              goto LABEL_36;
            sub_23626B698(v10 + v4, (uint64_t)v13);
            result = swift_isUniquelyReferenced_nonNull_native();
            *v0 = v10;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_2362B5FA0(v10);
              v10 = result;
              *v0 = result;
            }
            if (v3 >= *(_QWORD *)(v10 + 16))
              goto LABEL_37;
            result = sub_23626B708((uint64_t)v13, v10 + 16 * v3 + 32);
            if (v9 >= *(_QWORD *)(*v0 + 16))
              goto LABEL_38;
            result = sub_23626B708((uint64_t)v14, *v0 + v4);
          }
          if (__OFADD__(v3++, 1))
            goto LABEL_33;
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        else
        {
          result = sub_236264B94((uint64_t)v14);
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_32;
        }
        v7 = *v0;
        v8 = *(_QWORD *)(*v0 + 16);
        ++v9;
        v4 += 16;
        if (v6 == v8)
          goto LABEL_9;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_9:
    v2 = v3;
LABEL_10:
    if (v6 >= v2)
      return sub_2362B63D0(v2, v6);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    v6 = 0;
    return sub_2362B63D0(v2, v6);
  }
  return result;
}

uint64_t sub_23626B214()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23626B238()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23626B25C(uint64_t a1)
{
  uint64_t v1;

  return sub_23626A978(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_23626B264()
{
  unint64_t result;

  result = qword_2563D6020;
  if (!qword_2563D6020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563D6020);
  }
  return result;
}

uint64_t sub_23626B2A0()
{
  return sub_236269DB8();
}

uint64_t sub_23626B2A8()
{
  return sub_236269FB4();
}

uint64_t sub_23626B2B0(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  audit_token_t atoken;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_2362CBC68();
  *(_QWORD *)atoken.val = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_handleForIdentifier_error_, v2, &atoken);
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)atoken.val;

    objc_msgSend(v4, sel_auditToken);
    if (audit_token_to_pidversion(&atoken) == HIDWORD(a1))
    {

      return 1;
    }
    if (qword_2563D4178 != -1)
      swift_once();
    v20 = sub_2362CB494();
    __swift_project_value_buffer(v20, (uint64_t)qword_2563DB5D8);
    v21 = sub_2362CB47C();
    v22 = sub_2362CB830();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 67109120;
      atoken.val[0] = a1;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v21, v22, "pid %d recycled when checking existence", v23, 8u);
      MEMORY[0x23B7EF258](v23, -1, -1);
    }

  }
  else
  {
    v7 = *(id *)atoken.val;
    v8 = (void *)sub_2362CB2E4();

    swift_willThrow();
    if (qword_2563D4178 != -1)
      swift_once();
    v9 = sub_2362CB494();
    __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
    v10 = v8;
    v11 = v8;
    v12 = sub_2362CB47C();
    v13 = sub_2362CB830();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)atoken.val = v16;
      *(_DWORD *)v14 = 136315394;
      v17 = sub_2362697EC();
      sub_2362AB670(v17, v18, (uint64_t *)&atoken);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2112;
      v19 = v8;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v15 = v24;

      _os_log_impl(&dword_23624C000, v12, v13, "error examining %s: %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      MEMORY[0x23B7EF258](v14, -1, -1);

    }
    else
    {

    }
  }
  return 0;
}

uint64_t sub_23626B698(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_23626B6D0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_23626B708(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_23626B740(uint64_t a1, uint64_t a2)
{
  initializeWithTake for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

uint64_t sub_23626B77C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

uint64_t sub_23626B7B8(uint64_t a1)
{
  destroy for APAppInstallationManager.State.ReferenceHolder();
  return a1;
}

uint64_t sub_23626B7EC(uint64_t a1, uint64_t a2)
{
  assignWithTake for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

uint64_t sub_23626B828(uint64_t a1, uint64_t a2)
{
  initializeWithTake for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

uint64_t sub_23626B864(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

uint64_t sub_23626B8A0(uint64_t a1)
{
  destroy for APAppInstallationManager.State.ReferenceHolder();
  return a1;
}

uint64_t sub_23626B8D4(uint64_t a1, uint64_t a2)
{
  assignWithTake for APAppInstallationManager.State.ReferenceHolder(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for WeakDeathMonitorObserver()
{
  return &type metadata for WeakDeathMonitorObserver;
}

BOOL sub_23626B92C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  if (a1 == 0xD000000000000030 && a2 == 0x80000002362D5630 || (sub_2362CBBE4() & 1) != 0)
  {
    v6 = a3[3];
    v7 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v6);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
LABEL_5:
    v9 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRelease();
    return v9 != 0;
  }
  if (a1 == 0xD000000000000030 && a2 == 0x80000002362D5670 || (sub_2362CBBE4() & 1) != 0)
  {
    v11 = a3[3];
    v12 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v11);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    goto LABEL_5;
  }
  v13 = a3[3];
  v14 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v16 = sub_23624EC88(a1, a2, v15);
  swift_bridgeObjectRelease();
  return v16 & 1;
}

id sub_23626BA88()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  id v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v1 = objc_msgSend(v0, sel_infoDictionary);
  v2 = (void *)sub_2362CB674();
  sub_23625B534(0, &qword_2563D73E8);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_23625B534(0, &qword_2563D73F0);
  v4 = objc_msgSend(v1, sel_objectForKey_ofClass_valuesOfClass_, v2, ObjCClassFromMetadata, swift_getObjCClassFromMetadata());

  if (v4)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_23625F248((uint64_t)v9, (uint64_t)v10, &qword_2563D60A0);
  if (!v11)
  {
    sub_23625B4F8((uint64_t)v10, &qword_2563D60A0);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v5 = (void *)sub_2362CB674();
  v6 = objc_msgSend(v8, sel_containsObject_, v5);

  return v6;
}

id sub_23626BC18()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v6;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v1 = objc_msgSend(v0, sel_entitlements);
  v2 = (void *)sub_2362CB674();
  sub_23625B534(0, (unint64_t *)&qword_2563D6478);
  v3 = objc_msgSend(v1, sel_objectForKey_ofClass_, v2, swift_getObjCClassFromMetadata());

  if (v3)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_23625F248((uint64_t)v7, (uint64_t)&v8, &qword_2563D60A0);
  if (v9)
  {
    sub_236274200(&v8, &v10);
    swift_dynamicCast();
    v4 = objc_msgSend(v6, sel_BOOLValue);

  }
  else
  {
    sub_23625B4F8((uint64_t)&v8, &qword_2563D60A0);
    return 0;
  }
  return v4;
}

unint64_t sub_23626BD74()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000024;
  else
    return 0xD00000000000001FLL;
}

BOOL sub_23626BDB4(uint64_t a1, uint64_t a2, _QWORD *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  if (a1 == 0xD000000000000030 && a2 == 0x80000002362D5630 || (sub_2362CBBE4() & 1) != 0)
  {
    v8 = a3[3];
    v9 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
LABEL_5:
    v11 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRelease();
    return v11 != 0;
  }
  if (a1 == 0xD000000000000030 && a2 == 0x80000002362D5670 || (sub_2362CBBE4() & 1) != 0)
  {
    v13 = a3[3];
    v14 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v13);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    goto LABEL_5;
  }
  v15 = a4;
  v16 = a3[3];
  v17 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17);
  v19 = a3[3];
  v20 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
  v22 = sub_2362A0B50(v21, v18);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v23 = a3[3];
    v24 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v23);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
  }
  v25 = sub_23624EC88(a1, a2, v22);
  swift_bridgeObjectRelease();
  return v25 & 1;
}

unint64_t sub_23626BF84()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000023;
  else
    return 0xD000000000000018;
}

uint64_t sub_23626BFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, __int128 *a8@<X7>, uint64_t a9@<X8>, char a10, char a11)
{
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t result;
  int v25;
  uint64_t v26;
  __int128 *v27;

  v18 = a10 & 1;
  if (!a6 && (a10 & 1) == 0)
  {
    v26 = a5;
    v27 = a8;
    if (qword_2563D4178 != -1)
      swift_once();
    v19 = sub_2362CB494();
    __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
    v20 = sub_2362CB47C();
    v21 = sub_2362CB83C();
    if (os_log_type_enabled(v20, v21))
    {
      v25 = a7;
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_23624C000, v20, v21, "can't complete after shielding when we're not shielding; setting completionPolicy to afterAuthentication",
        v22,
        2u);
      v23 = v22;
      a7 = v25;
      MEMORY[0x23B7EF258](v23, -1, -1);
    }

    v18 = 1;
    a5 = v26;
    a8 = v27;
  }
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  result = sub_23625AD00(a8, a9 + 48);
  *(_BYTE *)(a9 + 88) = v18;
  *(_BYTE *)(a9 + 89) = a11 & 1;
  *(_DWORD *)(a9 + 92) = a7;
  return result;
}

uint64_t sub_23626C11C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t v23;
  __int128 v24;
  _BOOL4 v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t (*v71)();
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _OWORD *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  void (*v104)(_QWORD);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[89];
  char v111;
  _BYTE v112[88];
  char v113;
  uint64_t v114[11];
  int v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _QWORD v120[12];
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;

  v7 = v6;
  v104 = a5;
  v105 = a6;
  v99 = a4;
  v100 = a2;
  v101 = a3;
  v107 = sub_2362CB470();
  v9 = *(_QWORD **)(v107 - 8);
  v11 = MEMORY[0x24BDAC7A8](v107, v10);
  v97 = v12;
  v98 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v93 - v14;
  v16 = APDefaultAuthenticationLog();
  sub_2362CB464();
  if (qword_2563D4178 != -1)
    swift_once();
  v17 = sub_2362CB494();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_2563DB5D8);
  sub_2362724AC(v6, (uint64_t)&v121);
  sub_2362724AC(v6, (uint64_t)v120);
  sub_2362724AC(v6, (uint64_t)&v116);
  sub_2362724AC(v6, (uint64_t)v114);
  sub_2362724AC(v6, (uint64_t)v112);
  sub_2362724AC(v6, (uint64_t)v110);
  v19 = sub_2362CB47C();
  v20 = sub_2362CB848();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v103 = a1;
  v106 = v15;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v94 = swift_slowAlloc();
    v109 = v94;
    *(_DWORD *)v23 = 136447490;
    v95 = v21;
    v102 = v9;
    v24 = v121;
    swift_bridgeObjectRetain();
    v108 = sub_2362AB670(v24, *((unint64_t *)&v24 + 1), &v109);
    v96 = v18;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v121);
    *(_WORD *)(v23 + 12) = 1024;
    v25 = v120[5] != 0;
    sub_2362724E0((uint64_t)v120);
    LODWORD(v108) = v25;
    sub_2362CB9C8();
    *(_WORD *)(v23 + 18) = 2082;
    if (v119)
      v26 = v118;
    else
      v26 = 0x676E6968746F6E28;
    if (v119)
      v27 = v119;
    else
      v27 = 0xE900000000000029;
    swift_bridgeObjectRetain();
    v108 = sub_2362AB670(v26, v27, &v109);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v116);
    *(_WORD *)(v23 + 28) = 1024;
    v28 = v115;
    sub_2362724E0((uint64_t)v114);
    LODWORD(v108) = v28;
    sub_2362CB9C8();
    *(_WORD *)(v23 + 34) = 2082;
    if (v113)
      v29 = 0xD000000000000024;
    else
      v29 = 0xD00000000000001FLL;
    if (v113)
      v30 = 0x80000002362D5590;
    else
      v30 = 0x80000002362D55C0;
    v108 = sub_2362AB670(v29, v30, &v109);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)v112);
    *(_WORD *)(v23 + 44) = 2082;
    v15 = v106;
    if (v111)
      v31 = 0xD000000000000023;
    else
      v31 = 0xD000000000000018;
    if (v111)
      v32 = 0x80000002362D55E0;
    else
      v32 = 0x80000002362D5610;
    v108 = sub_2362AB670(v31, v32, &v109);
    v9 = v102;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)v110);
    _os_log_impl(&dword_23624C000, v19, (os_log_type_t)v95, "Evaluating guard action checking %{public}s, shielding (%{BOOL}d) %{public}s, requested by %d, completionPolicy %{public}s, lockedCheckPolicy %{public}s", (uint8_t *)v23, 0x36u);
    v33 = v94;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v33, -1, -1);
    MEMORY[0x23B7EF258](v23, -1, -1);
  }
  else
  {
    sub_2362724E0((uint64_t)v114);
    sub_2362724E0((uint64_t)v120);
    sub_2362724E0((uint64_t)&v121);
    sub_2362724E0((uint64_t)&v116);
    sub_2362724E0((uint64_t)v112);
    sub_2362724E0((uint64_t)v110);
  }

  v34 = (_QWORD *)(v7 + 48);
  v35 = sub_23626BDB4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), (_QWORD *)(v7 + 48), *(_BYTE *)(v7 + 89));
  sub_2362724AC(v7, (uint64_t)&v121);
  if (v35)
  {
    sub_2362724E0((uint64_t)&v121);
    goto LABEL_28;
  }
  v36 = *((_QWORD *)&v122 + 1);
  if (!*((_QWORD *)&v122 + 1))
  {
    sub_2362724E0((uint64_t)&v121);
LABEL_42:
    sub_2362724AC(v7, (uint64_t)&v121);
    sub_2362724AC(v7, (uint64_t)v120);
    v54 = sub_2362CB47C();
    v55 = sub_2362CB848();
    if (os_log_type_enabled(v54, v55))
    {
      v102 = v9;
      v56 = swift_slowAlloc();
      v103 = swift_slowAlloc();
      v114[0] = v103;
      *(_DWORD *)v56 = 136446466;
      v57 = v121;
      swift_bridgeObjectRetain();
      v116 = sub_2362AB670(v57, *((unint64_t *)&v57 + 1), v114);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_2362724E0((uint64_t)&v121);
      *(_WORD *)(v56 + 12) = 2082;
      if (v120[3])
      {
        v116 = 1684955424;
        v117 = 0xE400000000000000;
        sub_2362CB728();
        swift_bridgeObjectRetain();
        sub_2362CB728();
        swift_bridgeObjectRelease();
        v58 = v116;
        v59 = v117;
      }
      else
      {
        v59 = 0xE200000000000000;
        v58 = 29545;
      }
      v116 = sub_2362AB670(v58, v59, v114);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_2362724E0((uint64_t)v120);
      _os_log_impl(&dword_23624C000, v54, v55, "%{public}s %{public}s not locked. Unshielding.", (uint8_t *)v56, 0x16u);
      v77 = v103;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v77, -1, -1);
      MEMORY[0x23B7EF258](v56, -1, -1);

      v9 = v102;
    }
    else
    {
      sub_2362724E0((uint64_t)&v121);
      sub_2362724E0((uint64_t)v120);

    }
    v44 = *(_QWORD *)(v7 + 40);
    v15 = v106;
    if (!v44)
      goto LABEL_55;
LABEL_54:
    v78 = *(_QWORD *)(v7 + 32);
    v79 = *(_QWORD *)(v7 + 72);
    v80 = *(_QWORD *)(v7 + 80);
    __swift_project_boxed_opaque_existential_1(v34, v79);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v80 + 136))(v78, v44, 0, nullsub_1, 0, v79, v80);
LABEL_55:
    v104(0);
    return ((uint64_t (*)(char *, uint64_t))v9[1])(v15, v107);
  }
  v37 = v122;
  v38 = BYTE9(v126);
  swift_bridgeObjectRetain();
  LOBYTE(v37) = sub_23626BDB4(v37, v36, &v124, v38);
  swift_bridgeObjectRelease();
  sub_2362724E0((uint64_t)&v121);
  if ((v37 & 1) == 0)
    goto LABEL_42;
LABEL_28:
  v39 = *(_QWORD *)(v7 + 72);
  v40 = *(_QWORD *)(v7 + 80);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 48), v39);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v40 + 64))(v39, v40) & 1) != 0)
  {
    v41 = sub_2362CB47C();
    v42 = sub_2362CB848();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_23624C000, v41, v42, "have cached authentication.", v43, 2u);
      MEMORY[0x23B7EF258](v43, -1, -1);
    }

    v44 = *(_QWORD *)(v7 + 40);
    if (!v44)
      goto LABEL_55;
    goto LABEL_54;
  }
  v102 = (_QWORD *)(v7 + 48);
  sub_2362724AC(v7, (uint64_t)&v121);
  v45 = v103;
  sub_236272520(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
  sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
  v46 = sub_2362CB47C();
  v47 = sub_2362CB848();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v116 = v49;
    *(_DWORD *)v48 = 136446466;
    if (BYTE8(v126))
      v50 = 0xD000000000000024;
    else
      v50 = 0xD00000000000001FLL;
    if (BYTE8(v126))
      v51 = 0x80000002362D5590;
    else
      v51 = 0x80000002362D55C0;
    v120[0] = sub_2362AB670(v50, v51, &v116);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v121);
    *(_WORD *)(v48 + 12) = 2082;
    sub_23625F248(v45, (uint64_t)v120, &qword_2563D73D0);
    sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D73D0);
    v52 = sub_2362CB6EC();
    v120[0] = sub_2362AB670(v52, v53, &v116);
    sub_2362CB9C8();
    v15 = v106;
    swift_bridgeObjectRelease();
    sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    _os_log_impl(&dword_23624C000, v46, v47, "Begin auth with completion policy %{public}s, bind target: %{public}s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v49, -1, -1);
    MEMORY[0x23B7EF258](v48, -1, -1);
  }
  else
  {
    sub_2362724E0((uint64_t)&v121);
    sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    sub_236272520(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
  }

  if ((*(_BYTE *)(v7 + 88) & 1) != 0)
  {
    v60 = v98;
    v61 = v107;
    ((void (*)(char *, char *, uint64_t))v9[2])(v98, v15, v107);
    sub_2362724AC(v7, (uint64_t)&v121);
    v62 = (*((unsigned __int8 *)v9 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v9 + 80);
    v63 = (v97 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = swift_allocObject();
    ((void (*)(unint64_t, char *, uint64_t))v9[4])(v64 + v62, v60, v61);
    v65 = (_OWORD *)(v64 + v63);
    v66 = v124;
    v65[2] = v123;
    v65[3] = v66;
    v67 = v126;
    v65[4] = v125;
    v65[5] = v67;
    v68 = v122;
    *v65 = v121;
    v65[1] = v68;
    v69 = (_QWORD *)(v64 + ((v63 + 103) & 0xFFFFFFFFFFFFFFF8));
    v70 = v105;
    *v69 = v104;
    v69[1] = v70;
    swift_retain();
    v71 = sub_236272570;
    v72 = v102;
  }
  else
  {
    v73 = *(_QWORD *)(v7 + 40);
    v72 = v102;
    if (v73)
    {
      v74 = *(_QWORD *)(v7 + 32);
      v75 = *(_QWORD *)(v7 + 72);
      v76 = *(_QWORD *)(v7 + 80);
      __swift_project_boxed_opaque_existential_1(v102, v75);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))(v76 + 136))(v74, v73, 1, v104, v105, v75, v76);
    }
    else
    {
      v104(0);
    }
    v81 = v98;
    v82 = v107;
    ((void (*)(char *, char *, uint64_t))v9[2])(v98, v15, v107);
    sub_2362724AC(v7, (uint64_t)&v121);
    v83 = (*((unsigned __int8 *)v9 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v9 + 80);
    v84 = (v97 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = swift_allocObject();
    ((void (*)(unint64_t, char *, uint64_t))v9[4])(v64 + v83, v81, v82);
    v85 = (_OWORD *)(v64 + v84);
    v86 = v124;
    v85[2] = v123;
    v85[3] = v86;
    v87 = v126;
    v85[4] = v125;
    v85[5] = v87;
    v88 = v122;
    v71 = sub_236272578;
    *v85 = v121;
    v85[1] = v88;
  }
  sub_2362CB950();
  v89 = APDefaultAuthenticationLog();
  sub_2362CB458();

  v90 = *(_QWORD *)(v7 + 72);
  v91 = *(_QWORD *)(v7 + 80);
  __swift_project_boxed_opaque_existential_1(v72, v90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v91 + 72))(v103, v100, v101, v99 & 1, v71, v64, v90, v91);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v9[1])(v15, v107);
}

void sub_23626CDA4(char a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  sub_2362CB944();
  v6 = APDefaultAuthenticationLog();
  sub_2362CB458();

  v7 = a4[5];
  if ((a1 & 1) != 0)
  {
    if (v7)
    {
      v8 = a4[4];
      v9 = a4 + 6;
      v11 = a4[9];
      v10 = a4[10];
      __swift_project_boxed_opaque_existential_1(v9, v11);
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v10 + 136))(v8, v7, 0, nullsub_1, 0, v11, v10);
    }
  }
  else if (v7)
  {
    v12 = a4[4];
    v13 = a4 + 6;
    v15 = a4[9];
    v14 = a4[10];
    __swift_project_boxed_opaque_existential_1(v13, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v14 + 144))(v12, v7, 1, nullsub_1, 0, v15, v14);
  }
}

uint64_t sub_23626CEB8(char a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(uint64_t))
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2362CB944();
  v9 = APDefaultAuthenticationLog();
  sub_2362CB458();

  v10 = a4[5];
  if ((a1 & 1) != 0)
  {
    if (v10)
    {
      v11 = a4[4];
      v12 = a4[9];
      v13 = a4[10];
      __swift_project_boxed_opaque_existential_1(a4 + 6, v12);
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v13 + 136))(v11, v10, 0, nullsub_1, 0, v12, v13);
    }
    a2 = 0;
  }
  else if (v10)
  {
    v14 = a4[4];
    v15 = a4[9];
    v16 = a4[10];
    __swift_project_boxed_opaque_existential_1(a4 + 6, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v16 + 144))(v14, v10, 1, nullsub_1, 0, v15, v16);
  }
  return a5(a2);
}

uint64_t sub_23626CFE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, int a7@<W6>, _QWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  id v22;
  unsigned int v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  void *v30;
  os_log_type_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  unsigned int v79;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  audit_token_t atoken;
  id v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  unint64_t v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  *((_QWORD *)&v100 + 1) = a3;
  *(_QWORD *)&v101 = a4;
  *((_QWORD *)&v101 + 1) = a5;
  v102 = a6;
  v93 = 0;
  *(_QWORD *)atoken.val = a3;
  v81 = HIDWORD(a3);
  v82 = HIDWORD(a4);
  *(_QWORD *)&atoken.val[2] = a4;
  *(_QWORD *)&atoken.val[4] = a5;
  v83 = HIDWORD(a5);
  v84 = HIDWORD(a6);
  *(_QWORD *)&atoken.val[6] = a6;
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForAuditToken_error_, &atoken, &v93);
  v17 = v93;
  v90 = (uint64_t)a8;
  v85 = a3;
  if (!v16)
  {
    v32 = v93;
    v33 = (void *)sub_2362CB2E4();

    swift_willThrow();
    if (qword_2563D4178 != -1)
      swift_once();
    v34 = sub_2362CB494();
    __swift_project_value_buffer(v34, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain();
    v35 = sub_2362CB47C();
    v36 = sub_2362CB848();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v88 = a9;
      v38 = (void *)swift_slowAlloc();
      v93 = v38;
      *(_DWORD *)v37 = 67109378;
      atoken.val[0] = v85;
      atoken.val[1] = v81;
      atoken.val[2] = a4;
      atoken.val[3] = v82;
      atoken.val[4] = a5;
      atoken.val[5] = v83;
      atoken.val[6] = a6;
      atoken.val[7] = v84;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v37 + 8) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)atoken.val = sub_2362AB670(a1, a2, (uint64_t *)&v93);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v35, v36, "Pid %d is not a bundled executable that we recognize, will allow access to %{public}s", (uint8_t *)v37, 0x12u);
      swift_arrayDestroy();
      v39 = v38;
      a9 = v88;
      MEMORY[0x23B7EF258](v39, -1, -1);
      MEMORY[0x23B7EF258](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_41;
  }
  v18 = v16;
  v87 = a9;
  v19 = a8[3];
  v20 = a8[4];
  __swift_project_boxed_opaque_existential_1(a8, v19);
  v21 = *(uint64_t (**)(unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 96);
  v22 = v17;
  v79 = a6;
  v23 = a5;
  if ((v21(a3, a4, a5, a6, a1, a2, v19, v20) & 1) == 0)
  {
    v40 = v18;
    if (qword_2563D4178 != -1)
      swift_once();
    v41 = sub_2362CB494();
    __swift_project_value_buffer(v41, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain();
    v42 = sub_2362CB47C();
    v43 = sub_2362CB848();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = (void *)swift_slowAlloc();
      v93 = v45;
      *(_DWORD *)v44 = 67109378;
      atoken.val[0] = a3;
      atoken.val[1] = v81;
      atoken.val[2] = a4;
      atoken.val[3] = v82;
      atoken.val[4] = v23;
      atoken.val[5] = v83;
      atoken.val[6] = v79;
      atoken.val[7] = v84;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v44 + 8) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)atoken.val = sub_2362AB670(a1, a2, (uint64_t *)&v93);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v42, v43, "Should not guard and track %d; access allowed to %s by entitlement",
        (uint8_t *)v44,
        0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v45, -1, -1);
      MEMORY[0x23B7EF258](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v25 = v90;
    a9 = v87;
    goto LABEL_20;
  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v24 = v18;
    v25 = (uint64_t)a8;
    if ((sub_23626BA88() & 1) != 0)
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v26 = sub_2362CB494();
      __swift_project_value_buffer(v26, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain();
      v27 = sub_2362CB47C();
      v28 = sub_2362CB848();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = (void *)swift_slowAlloc();
        v93 = v30;
        *(_DWORD *)v29 = 67109378;
        atoken.val[0] = a3;
        atoken.val[1] = v81;
        atoken.val[2] = a4;
        atoken.val[3] = v82;
        atoken.val[4] = a5;
        atoken.val[5] = v83;
        atoken.val[6] = v79;
        atoken.val[7] = v84;
        atoken.val[0] = audit_token_to_pid(&atoken);
        sub_2362CB9C8();
        *(_WORD *)(v29 + 8) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)atoken.val = sub_2362AB670(a1, a2, (uint64_t *)&v93);
        sub_2362CB9C8();
        swift_bridgeObjectRelease_n();
        v31 = v28;
        v25 = v90;
        _os_log_impl(&dword_23624C000, v27, v31, "Pid %d is a bundled executable but looks hidden, will allow access to %{public}s", (uint8_t *)v29, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v30, -1, -1);
        MEMORY[0x23B7EF258](v29, -1, -1);

        a9 = v87;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        a9 = v87;
        v25 = v90;
      }
LABEL_20:
      v99 = 0u;
      v97 = 0u;
      v98 = 0u;
      v95 = 0u;
      v96 = 0u;
      v94 = 0u;
      goto LABEL_42;
    }
    if ((sub_23626BC18() & 1) != 0)
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v54 = sub_2362CB494();
      __swift_project_value_buffer(v54, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain();
      v55 = sub_2362CB47C();
      v56 = sub_2362CB848();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc();
        v58 = (void *)swift_slowAlloc();
        v93 = v58;
        *(_DWORD *)v57 = 67109378;
        atoken.val[0] = a3;
        atoken.val[1] = v81;
        atoken.val[2] = a4;
        atoken.val[3] = v82;
        atoken.val[4] = a5;
        atoken.val[5] = v83;
        atoken.val[6] = v79;
        atoken.val[7] = v84;
        atoken.val[0] = audit_token_to_pid(&atoken);
        sub_2362CB9C8();
        *(_WORD *)(v57 + 8) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)atoken.val = sub_2362AB670(a1, a2, (uint64_t *)&v93);
        sub_2362CB9C8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23624C000, v55, v56, "Pid %d is a system shell, will allow access to %{public}s", (uint8_t *)v57, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v58, -1, -1);
        MEMORY[0x23B7EF258](v57, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      a9 = v87;
LABEL_41:
      v99 = 0u;
      v97 = 0u;
      v98 = 0u;
      v95 = 0u;
      v96 = 0u;
      v94 = 0u;
      v25 = v90;
      goto LABEL_42;
    }
    v59 = objc_msgSend(v24, sel_bundleIdentifier);
    if (v59)
    {
      v60 = v59;
      v61 = sub_2362CB698();
      v63 = v62;

    }
    else
    {
      v61 = 0;
      v63 = 0;
    }
    a9 = v87;
    sub_23624E76C(v90, (uint64_t)&atoken);
    sub_23626BFC4(a1, a2, 0, 0, v61, v63, a7, (__int128 *)&atoken, (uint64_t)&v94, 0, 0);

  }
  else
  {
    objc_opt_self();
    v46 = swift_dynamicCastObjCClass();
    v25 = (uint64_t)a8;
    if (!v46)
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v64 = sub_2362CB494();
      __swift_project_value_buffer(v64, (uint64_t)qword_2563DB5D8);
      v65 = v18;
      swift_bridgeObjectRetain();
      v66 = v65;
      v67 = sub_2362CB47C();
      v68 = sub_2362CB830();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = (_QWORD *)swift_slowAlloc();
        v86 = swift_slowAlloc();
        *(_QWORD *)atoken.val = v86;
        *(_DWORD *)v69 = 138412546;
        v93 = v66;
        v71 = v66;
        sub_2362CB9C8();
        *v70 = v18;

        *(_WORD *)(v69 + 12) = 2082;
        swift_bridgeObjectRetain();
        v93 = (id)sub_2362AB670(a1, a2, (uint64_t *)&atoken);
        sub_2362CB9C8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23624C000, v67, v68, "Record: %@ is neither an application nor extension. This should not be possible. Will allow access to %{public}s", (uint8_t *)v69, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        v72 = v70;
        v25 = v90;
        MEMORY[0x23B7EF258](v72, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v86, -1, -1);
        MEMORY[0x23B7EF258](v69, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a9 = v87;
      goto LABEL_20;
    }
    v47 = (void *)v46;
    v48 = v18;
    v49 = objc_msgSend(v47, sel_bundleIdentifier);
    if (v49)
    {
      v50 = v49;
      v51 = sub_2362CB698();
      v53 = v52;

    }
    else
    {
      v51 = 0;
      v53 = 0;
    }
    a9 = v87;
    sub_23624E76C(v90, (uint64_t)&atoken);
    sub_23626BFC4(a1, a2, 0, 0, v51, v53, a7, (__int128 *)&atoken, (uint64_t)&v94, 0, 0);

  }
LABEL_42:
  *(_QWORD *)&v100 = a10;
  v73 = v97;
  *(_OWORD *)(a9 + 32) = v96;
  *(_OWORD *)(a9 + 48) = v73;
  v74 = v99;
  v75 = v100;
  *(_OWORD *)(a9 + 64) = v98;
  *(_OWORD *)(a9 + 80) = v74;
  v76 = v95;
  *(_OWORD *)a9 = v94;
  *(_OWORD *)(a9 + 16) = v76;
  v77 = v101;
  *(_QWORD *)(a9 + 128) = v102;
  *(_OWORD *)(a9 + 96) = v75;
  *(_OWORD *)(a9 + 112) = v77;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t sub_23626DC78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, int a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  os_log_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  int v76;
  uint64_t v77;
  void (*v78)(_QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(_QWORD);
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, char *, unint64_t, uint64_t, _QWORD, void (*)(void *, char), uint64_t, uint64_t, uint64_t);
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char *v107;
  os_log_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  int v118;
  unint64_t v119;
  void (*v120)(_QWORD);
  _QWORD *v121;
  unint64_t v122;
  char *v123;
  void (*v124)(_QWORD);
  uint64_t v125;
  pid_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[3];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137[12];
  _OWORD v138[6];
  audit_token_t v139;
  __int128 v140;
  _OWORD v141[3];
  _QWORD v142[17];
  audit_token_t atoken;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;

  v9 = v8;
  v124 = a7;
  v125 = a8;
  v118 = a6;
  v127 = a5;
  v130 = HIDWORD(a1);
  v14 = HIDWORD(a2);
  v15 = HIDWORD(a3);
  v16 = HIDWORD(a4);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  v112 = *(_QWORD *)(v110 - 8);
  v18 = MEMORY[0x24BDAC7A8](v110, v17);
  v109 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v123 = (char *)&v104 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v128 = (uint64_t)&v104 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v114 = (uint64_t)&v104 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v111 = (uint64_t)&v104 - v31;
  v113 = v32;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v104 - v34;
  v36 = *(_OWORD *)(v9 + 120);
  *(_OWORD *)atoken.val = *(_OWORD *)(v9 + 104);
  *(_OWORD *)&atoken.val[4] = v36;
  v126 = audit_token_to_pid(&atoken);
  v121 = (_QWORD *)a1;
  v122 = a2;
  atoken.val[0] = a1;
  atoken.val[1] = v130;
  atoken.val[2] = a2;
  atoken.val[3] = v14;
  v116 = v16;
  v117 = v14;
  v119 = a3;
  v120 = (void (*)(_QWORD))a4;
  atoken.val[4] = a3;
  atoken.val[5] = v15;
  v115 = v15;
  atoken.val[6] = a4;
  atoken.val[7] = v16;
  LODWORD(v129) = audit_token_to_pid(&atoken);
  if (qword_2563D4178 != -1)
    swift_once();
  v37 = sub_2362CB494();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_2563DB5D8);
  sub_236273F44(v9, (uint64_t)&atoken);
  sub_236273F44(v9, (uint64_t)v142);
  v39 = v127;
  sub_236273F78(v127, (uint64_t)v35, &qword_2542A5220);
  v40 = sub_2362CB47C();
  v41 = sub_2362CB848();
  v42 = v9;
  if (os_log_type_enabled(v40, (os_log_type_t)v41))
  {
    v106 = v41;
    v108 = v40;
    v43 = swift_slowAlloc();
    v105 = swift_slowAlloc();
    *(_QWORD *)v139.val = v105;
    *(_DWORD *)v43 = 67110146;
    sub_236273F78((uint64_t)&atoken, (uint64_t)v133, &qword_2563D73E0);
    v44 = v133[1] != 0;
    sub_23625B4F8((uint64_t)v133, &qword_2563D73E0);
    sub_236273F18((uint64_t)&atoken);
    LODWORD(v133[0]) = v44;
    sub_2362CB9C8();
    *(_WORD *)(v43 + 8) = 2080;
    v45 = APDataSetAccessGrantReason.description.getter(v142[12]);
    v133[0] = sub_2362AB670(v45, v46, (uint64_t *)&v139);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_236273F18((uint64_t)v142);
    *(_WORD *)(v43 + 18) = 1024;
    LODWORD(v133[0]) = v126;
    sub_2362CB9C8();
    *(_WORD *)(v43 + 24) = 1024;
    LODWORD(v133[0]) = v129;
    sub_2362CB9C8();
    *(_WORD *)(v43 + 30) = 2082;
    v107 = v35;
    v47 = v111;
    sub_236273F78((uint64_t)v35, v111, &qword_2542A5220);
    v48 = sub_2362CB428();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
    v51 = (uint64_t)v123;
    if (v50 == 1)
    {
      sub_23625B4F8(v47, &qword_2542A5220);
      v52 = 0xE600000000000000;
      v53 = 0x29656E6F6E28;
    }
    else
    {
      v104 = v9;
      v55 = v123;
      v56 = v47;
      v53 = sub_2362CB3EC();
      v52 = v57;
      v58 = v56;
      v51 = (uint64_t)v55;
      v42 = v104;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v58, v48);
    }
    v133[0] = sub_2362AB670(v53, v52, (uint64_t *)&v139);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_23625B4F8((uint64_t)v107, &qword_2542A5220);
    v59 = v108;
    _os_log_impl(&dword_23624C000, v108, (os_log_type_t)v106, "Checking guard for tracking action with base action %{BOOL}d, grant reason %s, accessor %d, tracker %d, uuid %{public}s", (uint8_t *)v43, 0x28u);
    v60 = v105;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v60, -1, -1);
    MEMORY[0x23B7EF258](v43, -1, -1);

    v39 = v127;
    v54 = v128;
  }
  else
  {
    sub_236273F18((uint64_t)&atoken);
    sub_236273F18((uint64_t)v142);
    sub_23625B4F8((uint64_t)v35, &qword_2542A5220);

    v51 = (uint64_t)v123;
    v54 = v128;
  }
  sub_236273F78(v42, (uint64_t)&atoken, &qword_2563D73E0);
  if (*(_QWORD *)&atoken.val[2])
  {
    v123 = (char *)v38;
    v140 = v144;
    v141[0] = v145;
    v141[1] = v146;
    v141[2] = v147;
    v139 = atoken;
    v61 = *(_OWORD *)atoken.val;
    sub_236273F44(v42, (uint64_t)&atoken);
    sub_2362724AC((uint64_t)&v139, (uint64_t)v138);
    v62 = v114;
    sub_236273F78(v39, v114, &qword_2542A5220);
    sub_236273F44((uint64_t)&atoken, (uint64_t)v142);
    sub_2362724AC((uint64_t)v138, (uint64_t)v137);
    sub_236273F78(v62, v54, &qword_2542A5220);
    v63 = (_QWORD *)v42;
    v64 = (*(unsigned __int8 *)(v112 + 80) + 312) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
    v65 = v64 + v113;
    v66 = (v64 + v113) & 0xFFFFFFFFFFFFFFF8;
    v67 = swift_allocObject();
    v68 = v146;
    *(_OWORD *)(v67 + 120) = v147;
    v69 = v149;
    *(_OWORD *)(v67 + 136) = v148;
    *(_OWORD *)(v67 + 152) = v69;
    v70 = *(_OWORD *)atoken.val;
    *(_OWORD *)(v67 + 56) = *(_OWORD *)&atoken.val[4];
    v71 = v145;
    *(_OWORD *)(v67 + 72) = v144;
    *(_OWORD *)(v67 + 88) = v71;
    *(_OWORD *)(v67 + 104) = v68;
    *(_OWORD *)(v67 + 40) = v70;
    v72 = v138[3];
    *(_OWORD *)(v67 + 216) = v138[2];
    *(_OWORD *)(v67 + 232) = v72;
    v73 = v138[5];
    *(_OWORD *)(v67 + 248) = v138[4];
    *(_OWORD *)(v67 + 264) = v73;
    v74 = v138[1];
    *(_OWORD *)(v67 + 184) = v138[0];
    v75 = v66 + v67;
    v76 = v126;
    *(_DWORD *)(v67 + 16) = v126;
    v127 = v61;
    *(_OWORD *)(v67 + 24) = v61;
    *(_QWORD *)(v67 + 168) = v150;
    *(_DWORD *)(v67 + 176) = v129;
    *(_OWORD *)(v67 + 200) = v74;
    *(_DWORD *)(v67 + 280) = (_DWORD)v121;
    *(_DWORD *)(v67 + 284) = v130;
    *(_DWORD *)(v67 + 288) = v122;
    *(_DWORD *)(v67 + 292) = v117;
    *(_DWORD *)(v67 + 296) = v119;
    *(_DWORD *)(v67 + 300) = v115;
    *(_DWORD *)(v67 + 304) = (_DWORD)v120;
    *(_DWORD *)(v67 + 308) = v116;
    sub_23625F248(v62, v67 + v64, &qword_2542A5220);
    *(_BYTE *)(v67 + v65) = v118 & 1;
    v78 = v124;
    v77 = v125;
    *(_QWORD *)(v75 + 8) = v124;
    *(_QWORD *)(v75 + 16) = v77;
    v79 = v77;
    if (v63[12] == 1)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_23625B4F8(v128, &qword_2542A5220);
      sub_2362724E0((uint64_t)v137);
      sub_236273F18((uint64_t)v142);
      sub_23624E76C((uint64_t)v141, (uint64_t)v133);
      v80 = v134;
      v81 = v135;
      v82 = __swift_project_boxed_opaque_existential_1(v133, v134);
      v129 = v63[13];
      v130 = (uint64_t)v82;
      v128 = v63[14];
      v83 = (char *)v63[15];
      v122 = v63[16];
      v123 = v83;
      v84 = swift_allocObject();
      v85 = v78;
      v86 = v84;
      *(_DWORD *)(v84 + 16) = v76;
      v87 = v127;
      *(_QWORD *)(v84 + 24) = v127;
      *(_QWORD *)(v84 + 32) = *((_QWORD *)&v61 + 1);
      *(_QWORD *)(v84 + 40) = v85;
      *(_QWORD *)(v84 + 48) = v79;
      *(_QWORD *)(v84 + 56) = sub_2362740BC;
      *(_QWORD *)(v84 + 64) = v67;
      v88 = *(void (**)(uint64_t, uint64_t, char *, unint64_t, uint64_t, _QWORD, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v81 + 88);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v88(v129, v128, v123, v122, v87, *((_QWORD *)&v61 + 1), sub_236274170, v86, v80, v81);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_2362724E0((uint64_t)&v139);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
    }
    else
    {
      v96 = v127;
      sub_236273F44((uint64_t)v63, (uint64_t)v133);
      swift_bridgeObjectRetain_n();
      swift_retain();
      v97 = sub_2362CB47C();
      v98 = sub_2362CB848();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = swift_slowAlloc();
        v130 = swift_slowAlloc();
        v132 = v130;
        *(_DWORD *)v99 = 67109634;
        LODWORD(v131) = v76;
        sub_2362CB9C8();
        *(_WORD *)(v99 + 8) = 2082;
        swift_bridgeObjectRetain();
        v131 = sub_2362AB670(v96, *((unint64_t *)&v61 + 1), &v132);
        sub_2362CB9C8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v99 + 18) = 2080;
        v100 = APDataSetAccessGrantReason.description.getter(v136);
        v131 = sub_2362AB670(v100, v101, &v132);
        v78 = v124;
        v79 = v125;
        sub_2362CB9C8();
        v76 = v126;
        swift_bridgeObjectRelease();
        sub_236273F18((uint64_t)v133);
        _os_log_impl(&dword_23624C000, v97, v98, "%d is not accessing %{public}s via TCC (access reason is %s -> do auth", (uint8_t *)v99, 0x1Cu);
        v102 = v130;
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v102, -1, -1);
        MEMORY[0x23B7EF258](v99, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_236273F18((uint64_t)v133);
      }

      v103 = v128;
      sub_23626E840(v76, v96, *((unint64_t *)&v61 + 1), (uint64_t)v142, v129, v137, v121, v122, v119, v120, v128, v118 & 1, v78, v79);
      swift_bridgeObjectRelease();
      swift_release();
      sub_23625B4F8(v103, &qword_2542A5220);
      sub_2362724E0((uint64_t)v137);
      sub_236273F18((uint64_t)v142);
      return sub_2362724E0((uint64_t)&v139);
    }
  }
  else
  {
    sub_23625B4F8((uint64_t)&atoken, &qword_2563D73E0);
    sub_236273F78(v39, v51, &qword_2542A5220);
    v90 = sub_2362CB47C();
    v91 = sub_2362CB848();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v93 = swift_slowAlloc();
      *(_QWORD *)atoken.val = v93;
      *(_DWORD *)v92 = 136446722;
      sub_236273F78(v51, v109, &qword_2542A5220);
      v94 = sub_2362CB6EC();
      v142[0] = sub_2362AB670(v94, v95, (uint64_t *)&atoken);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_23625B4F8(v51, &qword_2542A5220);
      *(_WORD *)(v92 + 12) = 1024;
      LODWORD(v142[0]) = v126;
      sub_2362CB9C8();
      *(_WORD *)(v92 + 18) = 1024;
      LODWORD(v142[0]) = v129;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v90, v91, "guard with uuid %{public}s trivial check for %d (will not track %d)", (uint8_t *)v92, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v93, -1, -1);
      MEMORY[0x23B7EF258](v92, -1, -1);
    }
    else
    {
      sub_23625B4F8(v51, &qword_2542A5220);
    }

    return ((uint64_t (*)(_QWORD))v124)(0);
  }
}

void sub_23626E840(int a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, uint64_t *a6, _QWORD *a7, uint64_t a8, uint64_t a9, void (*a10)(_QWORD), uint64_t a11, char a12, void (*a13)(_QWORD), uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  uint64_t ObjCClassFromMetadata;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[12];
  int v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(_QWORD);
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;

  v90 = a2;
  v103 = *MEMORY[0x24BDAC8D0];
  v21 = sub_2362CB440();
  MEMORY[0x24BDAC7A8](v21, v22);
  v86 = &v82[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_2362CB668();
  MEMORY[0x24BDAC7A8](v24, v25);
  v85 = &v82[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2563D4178 != -1)
    swift_once();
  v93 = a11;
  v92 = a10;
  v91 = a9;
  v27 = sub_2362CB494();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_2563DB5D8);
  sub_236273F44(a4, (uint64_t)&v97);
  swift_bridgeObjectRetain_n();
  v29 = sub_2362CB47C();
  v30 = sub_2362CB848();
  v31 = os_log_type_enabled(v29, v30);
  v94 = a6;
  LODWORD(v87) = a1;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v84 = a8;
    v33 = v32;
    v34 = (void *)swift_slowAlloc();
    v83 = a5;
    v35 = v34;
    v96 = v34;
    *(_DWORD *)v33 = 67109890;
    LODWORD(v95) = a1;
    v89 = v28;
    sub_2362CB9C8();
    *(_WORD *)(v33 + 8) = 2082;
    v88 = a7;
    swift_bridgeObjectRetain();
    v95 = sub_2362AB670(v90, a3, (uint64_t *)&v96);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 18) = 2080;
    v36 = APDataSetAccessGrantReason.description.getter(v102);
    v95 = sub_2362AB670(v36, v37, (uint64_t *)&v96);
    a6 = v94;
    a7 = v88;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_236273F18((uint64_t)&v97);
    *(_WORD *)(v33 + 28) = 1024;
    LODWORD(v95) = v83;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v29, v30, "mark %d as accessing %{public}s for reason %s monitoring %d", (uint8_t *)v33, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v35, -1, -1);
    v38 = v33;
    a8 = v84;
    MEMORY[0x23B7EF258](v38, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_236273F18((uint64_t)&v97);
  }

  v39 = a6[9];
  v40 = a6[10];
  v88 = a6 + 6;
  __swift_project_boxed_opaque_existential_1(a6 + 6, v39);
  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))(v40 + 104))(*(_QWORD *)(a4 + 104), *(_QWORD *)(a4 + 112), *(_QWORD *)(a4 + 120), *(_QWORD *)(a4 + 128), *a6, a6[1], *(_QWORD *)(a4 + 96), a7, a8, v91, v92, v93, v39, v40);
  v93 = a14;
  v41 = *a6;
  v42 = a6[1];
  objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v43 = sub_2362AA768(v41, v42, 0);
  v44 = v43;
  if (!v43)
  {
    sub_2362724AC((uint64_t)a6, (uint64_t)&v97);
    v44 = sub_2362CB47C();
    v45 = sub_2362CB830();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (void *)swift_slowAlloc();
      v96 = v47;
      *(_DWORD *)v46 = 136446210;
      v48 = v97;
      v49 = v98;
      swift_bridgeObjectRetain();
      v95 = sub_2362AB670(v48, v49, (uint64_t *)&v96);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_2362724E0((uint64_t)&v97);
      _os_log_impl(&dword_23624C000, v44, v45, "could not fetch bundle record for %{public}s to generate authentication description", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v47, -1, -1);
      MEMORY[0x23B7EF258](v46, -1, -1);
    }
    else
    {
      sub_2362724E0((uint64_t)&v97);
    }
    goto LABEL_10;
  }
  sub_2362CB65C();
  type metadata accessor for APSettingsManager(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v66 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2362CB434();
  sub_2362CB6E0();
  if (sub_2362CB71C() <= 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:

    v50 = 0;
    v51 = 0;
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_2362CE0F0;
  v68 = -[NSObject localizedName](v44, sel_localizedName);
  v69 = sub_2362CB698();
  v71 = v70;

  *(_QWORD *)(v67 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v67 + 64) = sub_2362741BC();
  *(_QWORD *)(v67 + 32) = v69;
  *(_QWORD *)(v67 + 40) = v71;
  v50 = (_BYTE *)sub_2362CB6BC();
  v51 = v72;
  swift_bridgeObjectRelease();

LABEL_11:
  v92 = a13;
  v52 = *(unsigned int *)(a4 + 104);
  v53 = *(unsigned int *)(a4 + 108);
  v55 = *(unsigned int *)(a4 + 112);
  v54 = *(unsigned int *)(a4 + 116);
  v57 = *(unsigned int *)(a4 + 120);
  v56 = *(unsigned int *)(a4 + 124);
  v59 = *(unsigned int *)(a4 + 128);
  v58 = *(unsigned int *)(a4 + 132);
  v60 = (void *)objc_opt_self();
  v96 = 0;
  v91 = v52;
  v97 = __PAIR64__(v53, v52);
  v90 = v53;
  v89 = v55;
  v98 = __PAIR64__(v54, v55);
  v99 = __PAIR64__(v56, v57);
  v100 = __PAIR64__(v58, v59);
  v61 = objc_msgSend(v60, sel_bundleRecordForAuditToken_error_, &v97, &v96);
  v62 = v96;
  if (v61)
  {
    v63 = v61;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v64 = v62;
      swift_bridgeObjectRelease();
      v92(0);

      return;
    }
    v86 = v50;
    v87 = v51;
    v75 = v62;

  }
  else
  {
    v86 = v50;
    v87 = v51;
    v73 = v96;
    v74 = (void *)sub_2362CB2E4();

    swift_willThrow();
  }
  v76 = v94;
  v77 = v94[9];
  v78 = v94[10];
  __swift_project_boxed_opaque_existential_1(v88, v77);
  v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
  v80 = *v76;
  v81 = v76[1];
  swift_bridgeObjectRetain();
  LOBYTE(v80) = sub_23624EC88(v80, v81, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v97 = v91 | (v90 << 32);
  v98 = v89 | (v54 << 32);
  v99 = v57 | (v56 << 32);
  v100 = v59 | (v58 << 32);
  v101 = v80 & 1;
  sub_23626C11C((uint64_t)&v97, (uint64_t)v86, v87, a12 & 1, v92, v93);
  swift_bridgeObjectRelease();
}

void sub_23626F320(id a1, char a2, int a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD), int a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;

  if ((a2 & 1) != 0)
  {
    v18 = a1;
    if (qword_2563D4178 != -1)
      swift_once();
    v19 = sub_2362CB494();
    __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
    sub_2362741A4(a1, 1);
    swift_bridgeObjectRetain();
    sub_2362741A4(a1, 1);
    swift_bridgeObjectRetain();
    v20 = sub_2362CB47C();
    v21 = sub_2362CB830();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v35 = a6;
      v24 = swift_slowAlloc();
      v37 = v24;
      *(_DWORD *)v22 = 67109634;
      sub_2362CB9C8();
      *(_WORD *)(v22 + 8) = 2082;
      swift_bridgeObjectRetain();
      sub_2362AB670(a4, a5, &v37);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 18) = 2112;
      v25 = a1;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v23 = v36;
      sub_2362741B0(a1, 1);
      sub_2362741B0(a1, 1);
      _os_log_impl(&dword_23624C000, v20, v21, "could not check if %d was entitled to access %{public}s: %@", (uint8_t *)v22, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v23, -1, -1);
      swift_arrayDestroy();
      v26 = v24;
      a6 = v35;
      MEMORY[0x23B7EF258](v26, -1, -1);
      MEMORY[0x23B7EF258](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2362741B0(a1, 1);
      sub_2362741B0(a1, 1);
    }

    v34 = a1;
    a6(a1);
    sub_2362741B0(a1, 1);
    sub_2362741B0(a1, 1);
  }
  else if ((a1 & 1) != 0)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v28 = sub_2362CB494();
    __swift_project_value_buffer(v28, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain_n();
    v29 = sub_2362CB47C();
    v30 = sub_2362CB848();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v31 = 67109378;
      sub_2362CB9C8();
      *(_WORD *)(v31 + 8) = 2082;
      swift_bridgeObjectRetain();
      sub_2362AB670(a4, a5, &v37);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v29, v30, "%d was entitled to access %{public}s -> do auth", (uint8_t *)v31, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v32, -1, -1);
      MEMORY[0x23B7EF258](v31, -1, -1);

    }
    else
    {

      v33 = swift_bridgeObjectRelease_n();
    }
    a8(v33);
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v13 = sub_2362CB494();
    __swift_project_value_buffer(v13, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain_n();
    v14 = sub_2362CB47C();
    v15 = sub_2362CB848();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v37 = v17;
      *(_DWORD *)v16 = 67109378;
      sub_2362CB9C8();
      *(_WORD *)(v16 + 8) = 2082;
      swift_bridgeObjectRetain();
      sub_2362AB670(a4, a5, &v37);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v14, v15, "%d was not entitled to access %{public}s -> no auth necessary. ", (uint8_t *)v16, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v17, -1, -1);
      MEMORY[0x23B7EF258](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a6(0);
  }
}

id sub_23626F908()
{
  id result;

  result = APGetGuardServiceInterface();
  qword_2563DB668 = (uint64_t)result;
  return result;
}

void sub_23626F92C(void (*a1)(id), uint64_t a2, void (*a3)(_BYTE *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t inited;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  __int128 v17[2];
  _BYTE v18[40];

  v6 = MEMORY[0x23B7EF2F4](v3 + OBJC_IVAR____TtC13AppProtection13APGuardClient_delegate);
  if (v6)
  {
    sub_23624E76C(v6 + OBJC_IVAR____TtC13AppProtection14APGuardService_policy, (uint64_t)v17);
    swift_unknownObjectRelease();
    sub_23625AD00(v17, (uint64_t)v18);
    a3(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v7 = sub_2362CB494();
    __swift_project_value_buffer(v7, (uint64_t)qword_2563DB5D8);
    v8 = sub_2362CB47C();
    v9 = sub_2362CB830();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23624C000, v8, v9, "No policy for guard!", v10, 2u);
      MEMORY[0x23B7EF258](v10, -1, -1);
    }

    sub_2362CB698();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5A00);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
    *(_QWORD *)(inited + 32) = 0x656E694C5041;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v12 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = 323;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 80) = 0x636E75465041;
    *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 88) = 0xE600000000000000;
    *(_QWORD *)(inited + 96) = 0xD000000000000019;
    *(_QWORD *)(inited + 104) = 0x80000002362D56D0;
    sub_2362949BC(inited);
    v13 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    swift_bridgeObjectRetain();
    v14 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_2362CB608();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 6, v15);
    swift_bridgeObjectRelease();

    a1(v16);
  }
}

uint64_t sub_23626FBB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[18];

  v28 = a6;
  v27 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(a4 + OBJC_IVAR____TtC13AppProtection13APGuardClient_connection);
  swift_bridgeObjectRetain();
  objc_msgSend(v14, sel_auditToken);
  v15 = v30[0];
  v16 = v30[1];
  v18 = v30[2];
  v17 = v30[3];
  v19 = objc_msgSend(v14, sel_processIdentifier);
  sub_23624E76C(a1, (uint64_t)v29);
  sub_23626CFE8(a2, a3, v15, v16, v18, v17, v19, v29, (uint64_t)v30, 0x7FFFFFFFFFFFFFFFLL);
  objc_msgSend(v14, sel_auditToken);
  v20 = v29[0];
  v21 = v29[1];
  v22 = v29[2];
  v23 = v29[3];
  v24 = sub_2362CB428();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 1, 1, v24);
  sub_23626DC78(v20, v21, v22, v23, (uint64_t)v13, 1, v27, v28);
  sub_23625B4F8((uint64_t)v13, &qword_2542A5220);
  return sub_236273F18((uint64_t)v30);
}

uint64_t sub_23626FE10(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  _QWORD v31[5];
  _BYTE v32[144];

  v30 = a8;
  v29 = a7;
  v28 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a4;
  v17 = a4[1];
  v19 = a4[2];
  v20 = a4[3];
  v21 = *(void **)(a5 + OBJC_IVAR____TtC13AppProtection13APGuardClient_connection);
  swift_bridgeObjectRetain();
  LODWORD(v21) = objc_msgSend(v21, sel_processIdentifier);
  sub_23624E76C(a1, (uint64_t)v31);
  sub_23626CFE8(v28, a3, v18, v17, v19, v20, (int)v21, v31, (uint64_t)v32, a6);
  v22 = *a4;
  v23 = a4[1];
  v24 = a4[2];
  v25 = a4[3];
  v26 = sub_2362CB428();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v16, 1, 1, v26);
  sub_23626DC78(v22, v23, v24, v25, (uint64_t)v16, 1, v29, v30);
  sub_23625B4F8((uint64_t)v16, &qword_2542A5220);
  return sub_236273F18((uint64_t)v32);
}

void sub_236270030(_QWORD *a1, void (*a2)(id, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v7 = sub_23626B92C(a4, a5, a1);
  sub_23624E76C((uint64_t)a1, (uint64_t)v12);
  if (v7)
  {
    v8 = v13;
    v9 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9) ^ 1;
  }
  else
  {
    v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v10 & 1);
  a2(v11, 0);

}

uint64_t sub_236270104(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD), uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  _QWORD v36[5];
  _BYTE v37[144];

  v35 = a8;
  v33 = a7;
  v32 = a2;
  v34 = a9;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a4;
  v19 = a4[1];
  v20 = a4[2];
  v21 = a4[3];
  v22 = *(void **)(a5 + OBJC_IVAR____TtC13AppProtection13APGuardClient_connection);
  swift_bridgeObjectRetain();
  v23 = objc_msgSend(v22, sel_processIdentifier);
  sub_23624E76C(a1, (uint64_t)v36);
  sub_23626CFE8(v32, a3, v18, v19, v20, v21, v23, v36, (uint64_t)v37, a6);
  objc_msgSend(v22, sel_auditToken);
  v24 = v36[0];
  v25 = v36[1];
  v26 = v36[2];
  v27 = v36[3];
  v28 = sub_2362CB428();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v17, v33, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v17, 0, 1, v28);
  sub_23626DC78(v24, v25, v26, v27, (uint64_t)v17, 0, v35, v34);
  sub_23625B4F8((uint64_t)v17, &qword_2542A5220);
  return sub_236273F18((uint64_t)v37);
}

uint64_t sub_2362703E0(_QWORD *a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a5;
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v14 = sub_2362CB494();
  __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v29 = a3;
  v15(v13, a3, v9);
  v16 = a2;
  v17 = sub_2362CB47C();
  v18 = sub_2362CB848();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v28 = a4;
    v20 = v19;
    v21 = swift_slowAlloc();
    v32 = v21;
    *(_DWORD *)v20 = 67109378;
    LODWORD(v31) = objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC13AppProtection13APGuardClient_connection], sel_processIdentifier);
    sub_2362CB9C8();

    *(_WORD *)(v20 + 8) = 2082;
    v22 = sub_2362CB3EC();
    v31 = sub_2362AB670(v22, v23, &v32);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    _os_log_impl(&dword_23624C000, v17, v18, "pid %d ending transaction with uuid %{public}s", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v21, -1, -1);
    v24 = v20;
    a4 = v28;
    MEMORY[0x23B7EF258](v24, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }

  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 112))(v29, v25, v26);
  return a4(0);
}

uint64_t sub_2362707C0(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint8_t *v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  char v43;

  v40 = a3;
  v41 = a4;
  v10 = sub_2362CB470();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v39 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v36 - v16;
  v18 = APDefaultAuthenticationLog();
  sub_2362CB464();
  if (qword_2563D4178 != -1)
    swift_once();
  v19 = sub_2362CB494();
  __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
  v20 = a2;
  v21 = sub_2362CB47C();
  v22 = sub_2362CB848();
  if (os_log_type_enabled(v21, v22))
  {
    v38 = v10;
    v23 = (uint8_t *)swift_slowAlloc();
    v37 = a6;
    v24 = v23;
    v36 = v11;
    *(_DWORD *)v23 = 67109120;
    LODWORD(v42[0]) = objc_msgSend(*(id *)((char *)&v20->isa+ OBJC_IVAR____TtC13AppProtection13APGuardClient_connection), sel_processIdentifier);
    v10 = v38;
    v11 = v36;
    sub_2362CB9C8();

    _os_log_impl(&dword_23624C000, v21, v22, "pid %d authenticating unconditionally", v24, 8u);
    v25 = v24;
    a6 = v37;
    MEMORY[0x23B7EF258](v25, -1, -1);
  }
  else
  {

    v21 = v20;
  }

  v26 = v39;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v39, v17, v10);
  v27 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v28 = (v12 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v29 + v27, v26, v10);
  v30 = (_QWORD *)(v29 + v28);
  v31 = v41;
  *v30 = v40;
  v30[1] = v31;
  swift_retain();
  swift_retain();
  sub_2362CB950();
  v32 = APDefaultAuthenticationLog();
  sub_2362CB458();

  v33 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  memset(v42, 0, sizeof(v42));
  v43 = -2;
  (*(void (**)(_OWORD *, uint64_t, uint64_t, _QWORD, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v34 + 72))(v42, a5, a6, 0, sub_236273E78, v29, v33, v34);
  swift_release_n();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t sub_236270ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  id v7;

  sub_2362CB944();
  v7 = APDefaultAuthenticationLog();
  sub_2362CB458();

  return a4(a1, a2);
}

void sub_236270BFC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  void *v24;
  id v25;
  _QWORD *v26;
  __int128 v27[2];
  _QWORD v28[2];
  __int128 v29;
  __int128 v30;
  _WORD v31[22];
  int v32;
  _QWORD v33[4];
  char v34;

  v12 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v13 = sub_2362AA768(a2, a3, 1);
  v15 = v13;
  if (v13)
  {
    v16 = objc_msgSend(v13, sel_identities);

    sub_23625B534(0, &qword_2563D73D8);
    v17 = sub_2362CB764();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = (void *)sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (v14)
        goto LABEL_6;
    }
    else
    {
      v14 = *(void **)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_6:
        if ((v17 & 0xC000000000000001) != 0)
        {
          v18 = (id)MEMORY[0x23B7EE7E4](0, v17);
        }
        else
        {
          if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v18 = *(id *)(v17 + 32);
        }
        v14 = v18;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v14 = 0;
LABEL_11:
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  v22 = sub_23624EC88(a2, a3, v21);
  swift_bridgeObjectRelease();
  if (v14)
    v23 = 0x80;
  else
    v23 = -2;
  v33[0] = v14;
  v33[1] = (v14 != 0) & v22;
  v33[2] = 0;
  v33[3] = 0;
  v34 = v23;
  v24 = *(void **)(a4 + OBJC_IVAR____TtC13AppProtection13APGuardClient_connection);
  v25 = v14;
  swift_bridgeObjectRetain();
  LODWORD(v24) = objc_msgSend(v24, sel_processIdentifier);
  sub_23624E76C((uint64_t)a1, (uint64_t)v27);
  v28[0] = a2;
  v28[1] = a3;
  v29 = 0u;
  v30 = 0u;
  sub_23625AD00(v27, (uint64_t)v31);
  v31[20] = 257;
  v32 = (int)v24;
  sub_23624E76C((uint64_t)a1, (uint64_t)v27);
  v26 = (_QWORD *)swift_allocObject();
  sub_23625AD00(v27, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v26[9] = a5;
  v26[10] = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23626C11C((uint64_t)v33, 0, 0, 1, (void (*)(_QWORD))sub_236272F30, (uint64_t)v26);

  swift_release();
  sub_2362724E0((uint64_t)v28);
}

uint64_t sub_236270ECC(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = _Block_copy(aBlock);
  v8 = sub_2362CB698();
  v10 = v9;
  _Block_copy(v7);
  v11 = a1;
  a5(v8, v10, v11, v7);
  _Block_release(v7);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23627101C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v32[2];
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  _WORD v36[22];
  int v37;
  _QWORD v38[4];
  _BYTE v39[32];
  char v40;
  _QWORD v41[4];
  char v42;

  sub_23625F248(a5, (uint64_t)v38, &qword_2563D7178);
  v14 = (void *)v38[0];
  v15 = v38[1];
  v27 = v38[3];
  v28 = v38[2];
  v16 = *(void **)(a4 + OBJC_IVAR____TtC13AppProtection13APGuardClient_connection);
  swift_bridgeObjectRetain();
  LODWORD(v16) = objc_msgSend(v16, sel_processIdentifier);
  sub_23624E76C((uint64_t)a1, (uint64_t)v32);
  v33[0] = a2;
  v33[1] = a3;
  v34 = 0u;
  v35 = 0u;
  sub_23625AD00(v32, (uint64_t)v36);
  v36[20] = 1;
  v37 = (int)v16;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  v20 = sub_23624EC88(a2, a3, v19);
  swift_bridgeObjectRelease();
  sub_23625F248(a5, (uint64_t)v39, &qword_2563D7178);
  if ((v40 & 1) != 0)
    v21 = 0;
  else
    v21 = v14;
  if ((v40 & 1) != 0)
  {
    v15 = 0;
    v22 = 0;
  }
  else
  {
    v22 = v28;
  }
  if ((v40 & 1) != 0)
    v23 = 0;
  else
    v23 = v27;
  v41[0] = v21;
  v41[1] = v15;
  if ((v40 & 1) != 0)
    v24 = -2;
  else
    v24 = v20 & 1;
  v41[2] = v22;
  v41[3] = v23;
  v42 = v24;
  sub_23624E76C((uint64_t)a1, (uint64_t)v32);
  v25 = (_QWORD *)swift_allocObject();
  sub_23625AD00(v32, (uint64_t)(v25 + 2));
  v25[7] = a2;
  v25[8] = a3;
  v25[9] = a8;
  v25[10] = a9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23626C11C((uint64_t)v41, a6, a7, 0, (void (*)(_QWORD))sub_236272F30, (uint64_t)v25);
  swift_release();
  sub_236272558(v21, v15, v22, v23, v24);
  return sub_2362724E0((uint64_t)v33);
}

uint64_t sub_236271224(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;

  v14 = a2[3];
  v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  if (a1)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 144))(a3, a4, 1, a7, 0, v14, v15);
  else
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 136))(a3, a4, 0, a8, 0, v14, v15);
  return a5(a1);
}

uint64_t sub_2362712F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

id sub_2362713EC()
{
  return sub_2362714C8(type metadata accessor for APGuardClient);
}

uint64_t type metadata accessor for APGuardClient()
{
  return objc_opt_self();
}

id sub_236271450()
{
  if (qword_2563D69E8 != -1)
    swift_once();
  return (id)qword_2563DB668;
}

id sub_2362714BC()
{
  return sub_2362714C8(type metadata accessor for APGuardService);
}

id sub_2362714C8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for APGuardService()
{
  return objc_opt_self();
}

uint64_t sub_236271528()
{
  return sub_236271694(&qword_2563D3EA8, (uint64_t)&unk_2362CED10);
}

uint64_t sub_23627154C()
{
  return 2;
}

uint64_t sub_236271554@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APGuardService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection14APGuardService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

id sub_2362715CC(void *a1)
{
  objc_class *v2;
  char *v3;
  id v4;
  objc_super v6;

  v2 = (objc_class *)type metadata accessor for APGuardClient();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13AppProtection13APGuardClient_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_250793680;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v3[OBJC_IVAR____TtC13AppProtection13APGuardClient_connection] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_236271660(uint64_t a1)
{
  uint64_t result;

  result = sub_236271694(qword_2563D3EB0, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236271694(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for APGuardClient();
    result = MEMORY[0x23B7EF18C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2362716D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (**a6)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _BOOL4 v28;
  uint64_t v29;
  void (**v30)(_QWORD, _QWORD, _QWORD);
  unint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  BOOL v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)(uint64_t);
  uint64_t (*v79)(uint64_t);
  uint64_t (*v80)();
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  _OWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (**v109)(_QWORD, _QWORD, _QWORD);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  NSObject *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE v118[89];
  char v119;
  _BYTE v120[88];
  char v121;
  uint64_t v122[11];
  int v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD v128[12];
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;

  v105 = a4;
  v106 = a2;
  v107 = a3;
  v115 = sub_2362CB470();
  v9 = *(_QWORD *)(v115 - 8);
  v11 = MEMORY[0x24BDAC7A8](v115, v10);
  v108 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v101 - v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_23624E140;
  *(_QWORD *)(v17 + 24) = v16;
  v114 = v17;
  _Block_copy(a6);
  _Block_copy(a6);
  _Block_copy(a6);
  swift_retain();
  v18 = APDefaultAuthenticationLog();
  v111 = v15;
  sub_2362CB464();
  if (qword_2563D4178 != -1)
    swift_once();
  v19 = sub_2362CB494();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
  sub_2362724AC(a5, (uint64_t)&v129);
  sub_2362724AC(a5, (uint64_t)v128);
  sub_2362724AC(a5, (uint64_t)&v124);
  sub_2362724AC(a5, (uint64_t)v122);
  sub_2362724AC(a5, (uint64_t)v120);
  sub_2362724AC(a5, (uint64_t)v118);
  v21 = sub_2362CB47C();
  v22 = sub_2362CB848();
  v23 = v22;
  v113 = v21;
  v24 = os_log_type_enabled(v21, v22);
  v112 = v9;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v110 = v16;
    v26 = v25;
    v103 = swift_slowAlloc();
    v117 = v103;
    *(_DWORD *)v26 = 136447490;
    v102 = v23;
    v109 = (void (**)(_QWORD, _QWORD, _QWORD))a1;
    v27 = v129;
    swift_bridgeObjectRetain();
    v116 = sub_2362AB670(v27, *((unint64_t *)&v27 + 1), &v117);
    v101 = v20;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v129);
    *(_WORD *)(v26 + 12) = 1024;
    v28 = v128[5] != 0;
    sub_2362724E0((uint64_t)v128);
    LODWORD(v116) = v28;
    sub_2362CB9C8();
    *(_WORD *)(v26 + 18) = 2082;
    if (v127)
      v29 = v126;
    else
      v29 = 0x676E6968746F6E28;
    v30 = a6;
    if (v127)
      v31 = v127;
    else
      v31 = 0xE900000000000029;
    swift_bridgeObjectRetain();
    v116 = sub_2362AB670(v29, v31, &v117);
    sub_2362CB9C8();
    a6 = v30;
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v124);
    *(_WORD *)(v26 + 28) = 1024;
    v32 = v123;
    sub_2362724E0((uint64_t)v122);
    LODWORD(v116) = v32;
    sub_2362CB9C8();
    *(_WORD *)(v26 + 34) = 2082;
    if (v121)
      v33 = 0xD000000000000024;
    else
      v33 = 0xD00000000000001FLL;
    if (v121)
      v34 = 0x80000002362D5590;
    else
      v34 = 0x80000002362D55C0;
    v116 = sub_2362AB670(v33, v34, &v117);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)v120);
    *(_WORD *)(v26 + 44) = 2082;
    if (v119)
      v35 = 0xD000000000000023;
    else
      v35 = 0xD000000000000018;
    if (v119)
      v36 = 0x80000002362D55E0;
    else
      v36 = 0x80000002362D5610;
    v116 = sub_2362AB670(v35, v36, &v117);
    a1 = (uint64_t)v109;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)v118);
    v37 = v113;
    _os_log_impl(&dword_23624C000, v113, (os_log_type_t)v102, "Evaluating guard action checking %{public}s, shielding (%{BOOL}d) %{public}s, requested by %d, completionPolicy %{public}s, lockedCheckPolicy %{public}s", (uint8_t *)v26, 0x36u);
    v38 = v103;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v38, -1, -1);
    v39 = v26;
    v16 = v110;
    MEMORY[0x23B7EF258](v39, -1, -1);

  }
  else
  {
    sub_2362724E0((uint64_t)v122);
    sub_2362724E0((uint64_t)v128);
    sub_2362724E0((uint64_t)&v129);
    sub_2362724E0((uint64_t)&v124);
    sub_2362724E0((uint64_t)v120);
    sub_2362724E0((uint64_t)v118);

  }
  v40 = (a5 + 48);
  v41 = sub_23626BDB4(*(_QWORD *)a5, *(_QWORD *)(a5 + 8), (_QWORD *)(a5 + 48), *(_BYTE *)(a5 + 89));
  sub_2362724AC(a5, (uint64_t)&v129);
  if (v41)
  {
    sub_2362724E0((uint64_t)&v129);
    goto LABEL_28;
  }
  v42 = *((_QWORD *)&v130 + 1);
  v113 = (a5 + 48);
  if (!*((_QWORD *)&v130 + 1))
  {
    sub_2362724E0((uint64_t)&v129);
LABEL_42:
    sub_2362724AC(a5, (uint64_t)&v129);
    sub_2362724AC(a5, (uint64_t)v128);
    v62 = sub_2362CB47C();
    v63 = sub_2362CB848();
    if (os_log_type_enabled(v62, v63))
    {
      v109 = a6;
      v64 = swift_slowAlloc();
      v108 = (char *)swift_slowAlloc();
      v122[0] = (uint64_t)v108;
      *(_DWORD *)v64 = 136446466;
      v65 = v129;
      swift_bridgeObjectRetain();
      v124 = sub_2362AB670(v65, *((unint64_t *)&v65 + 1), v122);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_2362724E0((uint64_t)&v129);
      *(_WORD *)(v64 + 12) = 2082;
      if (v128[3])
      {
        v124 = 1684955424;
        v125 = 0xE400000000000000;
        sub_2362CB728();
        swift_bridgeObjectRetain();
        sub_2362CB728();
        swift_bridgeObjectRelease();
        v66 = v124;
        v67 = v125;
      }
      else
      {
        v67 = 0xE200000000000000;
        v66 = 29545;
      }
      v124 = sub_2362AB670(v66, v67, v122);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_2362724E0((uint64_t)v128);
      _os_log_impl(&dword_23624C000, v62, v63, "%{public}s %{public}s not locked. Unshielding.", (uint8_t *)v64, 0x16u);
      v85 = v108;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v85, -1, -1);
      MEMORY[0x23B7EF258](v64, -1, -1);

      a6 = v109;
      v40 = v113;
    }
    else
    {
      sub_2362724E0((uint64_t)&v129);
      sub_2362724E0((uint64_t)v128);

    }
    v52 = *(_QWORD *)(a5 + 40);
    v50 = v112;
    if (!v52)
      goto LABEL_55;
LABEL_54:
    v86 = *(_QWORD *)(a5 + 32);
    v87 = *(_QWORD *)(a5 + 72);
    v88 = *(_QWORD *)(a5 + 80);
    __swift_project_boxed_opaque_existential_1(v40, v87);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v88 + 136))(v86, v52, 0, nullsub_1, 0, v87, v88);
LABEL_55:
    a6[2](a6, 1, 0);
    v89 = v111;
    goto LABEL_59;
  }
  v43 = v130;
  v44 = BYTE9(v134);
  swift_bridgeObjectRetain();
  v40 = v113;
  LOBYTE(v43) = sub_23626BDB4(v43, v42, &v132, v44);
  swift_bridgeObjectRelease();
  sub_2362724E0((uint64_t)&v129);
  if ((v43 & 1) == 0)
    goto LABEL_42;
LABEL_28:
  v45 = *(_QWORD *)(a5 + 72);
  v46 = *(_QWORD *)(a5 + 80);
  __swift_project_boxed_opaque_existential_1(v40, v45);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v46 + 64))(v45, v46) & 1) != 0)
  {
    v47 = sub_2362CB47C();
    v48 = sub_2362CB848();
    v49 = os_log_type_enabled(v47, v48);
    v50 = v112;
    if (v49)
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_23624C000, v47, v48, "have cached authentication.", v51, 2u);
      MEMORY[0x23B7EF258](v51, -1, -1);
    }

    v52 = *(_QWORD *)(a5 + 40);
    if (!v52)
      goto LABEL_55;
    goto LABEL_54;
  }
  v113 = v40;
  sub_2362724AC(a5, (uint64_t)&v129);
  sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
  sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
  v53 = sub_2362CB47C();
  v54 = sub_2362CB848();
  v55 = os_log_type_enabled(v53, v54);
  v109 = (void (**)(_QWORD, _QWORD, _QWORD))a1;
  if (v55)
  {
    v56 = swift_slowAlloc();
    v103 = swift_slowAlloc();
    v124 = v103;
    *(_DWORD *)v56 = 136446466;
    if (BYTE8(v134))
      v57 = 0xD000000000000024;
    else
      v57 = 0xD00000000000001FLL;
    if (BYTE8(v134))
      v58 = 0x80000002362D5590;
    else
      v58 = 0x80000002362D55C0;
    v128[0] = sub_2362AB670(v57, v58, &v124);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_2362724E0((uint64_t)&v129);
    *(_WORD *)(v56 + 12) = 2082;
    sub_23625F248(a1, (uint64_t)v128, &qword_2563D73D0);
    sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D73D0);
    v59 = sub_2362CB6EC();
    v128[0] = sub_2362AB670(v59, v60, &v124);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    _os_log_impl(&dword_23624C000, v53, v54, "Begin auth with completion policy %{public}s, bind target: %{public}s", (uint8_t *)v56, 0x16u);
    v61 = v103;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v61, -1, -1);
    MEMORY[0x23B7EF258](v56, -1, -1);
  }
  else
  {
    sub_2362724E0((uint64_t)&v129);
    sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    sub_236272520(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
  }

  v50 = v112;
  v68 = *(_BYTE *)(a5 + 88);
  v110 = v16;
  if ((v68 & 1) != 0)
  {
    v69 = v111;
    v70 = v115;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v108, v111, v115);
    sub_2362724AC(a5, (uint64_t)&v129);
    v71 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v72 = (v104 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
    v73 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v73 + v71, v108, v70);
    v74 = (_OWORD *)(v73 + v72);
    v75 = v132;
    v74[2] = v131;
    v74[3] = v75;
    v76 = v134;
    v74[4] = v133;
    v74[5] = v76;
    v77 = v130;
    *v74 = v129;
    v74[1] = v77;
    v78 = (uint64_t (**)(uint64_t))(v73 + ((v72 + 103) & 0xFFFFFFFFFFFFFFF8));
    v79 = (uint64_t (*)(uint64_t))v114;
    *v78 = sub_2362724A4;
    v78[1] = v79;
    swift_retain();
    v80 = sub_236272570;
  }
  else
  {
    v81 = *(_QWORD *)(a5 + 40);
    if (v81)
    {
      v82 = *(_QWORD *)(a5 + 32);
      v83 = *(_QWORD *)(a5 + 72);
      v84 = *(_QWORD *)(a5 + 80);
      __swift_project_boxed_opaque_existential_1(v113, v83);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v84 + 136))(v82, v81, 1, sub_2362724A4, v114, v83, v84);
    }
    else
    {
      a6[2](a6, 1, 0);
    }
    v90 = v108;
    v69 = v111;
    v91 = v115;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v108, v111, v115);
    sub_2362724AC(a5, (uint64_t)&v129);
    v92 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v93 = (v104 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
    v73 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v73 + v92, v90, v91);
    v94 = (_OWORD *)(v73 + v93);
    v95 = v132;
    v94[2] = v131;
    v94[3] = v95;
    v96 = v134;
    v94[4] = v133;
    v94[5] = v96;
    v97 = v130;
    v80 = sub_236272578;
    *v94 = v129;
    v94[1] = v97;
  }
  sub_2362CB950();
  v98 = APDefaultAuthenticationLog();
  sub_2362CB458();

  v99 = *(_QWORD *)(a5 + 72);
  v100 = *(_QWORD *)(a5 + 80);
  __swift_project_boxed_opaque_existential_1(v113, v99);
  (*(void (**)(void (**)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v100 + 72))(v109, v106, v107, v105 & 1, v80, v73, v99, v100);
  swift_release();
  v89 = v69;
LABEL_59:
  (*(void (**)(char *, uint64_t))(v50 + 8))(v89, v115);
  swift_release();
  swift_release();
  _Block_release(a6);
  _Block_release(a6);
}

uint64_t sub_23627245C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_236272480()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362724A4(uint64_t a1)
{
  uint64_t v1;

  return sub_2362871C8(a1, *(uint64_t (**)(BOOL, uint64_t))(v1 + 16));
}

uint64_t sub_2362724AC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for APGuardAction(a2, a1);
  return a2;
}

uint64_t sub_2362724E0(uint64_t a1)
{
  destroy for APGuardAction(a1);
  return a1;
}

id sub_23627250C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 <= 0xFDu)
    return sub_23625B5FC(result, a2, a3, a4, a5);
  return result;
}

uint64_t sub_236272520(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

void sub_236272558(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 <= 0xFDu)
    sub_23625B61C(a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2362CB470();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 48);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23627262C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_2362CB470() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23626CEB8(a1, a2, v2 + v6, (_QWORD *)(v2 + v7), *(uint64_t (**)(uint64_t))(v2 + ((v7 + 103) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2362CB470();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 48);
  return swift_deallocObject();
}

void sub_236272730(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2362CB470() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23626CDA4(a1, a2, v2 + v6, (_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_236272790(uint64_t a1)
{
  uint64_t v1;

  sub_23628DEDC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_236272798(uint64_t a1)
{
  uint64_t v1;

  return sub_236251DE8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_2362727A0(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t inited;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  __int128 v18[2];
  _BYTE v19[40];

  v6 = MEMORY[0x23B7EF2F4](a3 + OBJC_IVAR____TtC13AppProtection13APGuardClient_delegate);
  if (v6)
  {
    sub_23624E76C(v6 + OBJC_IVAR____TtC13AppProtection14APGuardService_policy, (uint64_t)v18);
    _Block_copy(a4);
    swift_unknownObjectRelease();
    sub_23625AD00(v18, (uint64_t)v19);
    a1(v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    _Block_copy(a4);
    if (qword_2563D4178 != -1)
      swift_once();
    v7 = sub_2362CB494();
    __swift_project_value_buffer(v7, (uint64_t)qword_2563DB5D8);
    v8 = sub_2362CB47C();
    v9 = sub_2362CB830();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23624C000, v8, v9, "No policy for guard!", v10, 2u);
      MEMORY[0x23B7EF258](v10, -1, -1);
    }

    sub_2362CB698();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5A00);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
    *(_QWORD *)(inited + 32) = 0x656E694C5041;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v12 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = 323;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 80) = 0x636E75465041;
    *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 88) = 0xE600000000000000;
    *(_QWORD *)(inited + 96) = 0xD000000000000019;
    *(_QWORD *)(inited + 104) = 0x80000002362D56D0;
    sub_2362949BC(inited);
    v13 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    swift_bridgeObjectRetain();
    v14 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_2362CB608();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 6, v15);
    swift_bridgeObjectRelease();

    _Block_copy(a4);
    v17 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a4)[2](a4, v17);

    _Block_release(a4);
  }
  _Block_release(a4);
}

void sub_236272A5C(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  char v18[24];
  ValueMetadata *v19;
  unint64_t v20;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a4;
  _Block_copy(a4);
  if (qword_2542A53E0 != -1)
    swift_once();
  v6 = (char *)off_2542A5400 + 16;
  v7 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_23626909C((unint64_t)v6, 0, v18);
  os_unfair_lock_unlock(v7);
  v8 = v18[0];
  v9 = swift_release();
  if (v8 == 2)
  {
    v19 = &type metadata for AppProtectionFeatures;
    v20 = sub_236264AA0();
    v18[0] = 0;
    LOBYTE(v8) = sub_2362CB44C();
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  if ((v8 & 1) != 0)
  {
    v15 = MEMORY[0x24BDAC7A8](v9, v10);
    v17[2] = sub_236274D24;
    v17[3] = v5;
    MEMORY[0x24BDAC7A8](v15, v17);
    sub_23626F92C((void (*)(id))sub_236274D58, v16, (void (*)(_BYTE *))sub_236274260);
    swift_release();
  }
  else
  {
    v11 = sub_2362CB698();
    v13 = sub_236294D50(v11, v12, 2, 0xD000000000000016, 0x80000002362D5710, 339, 0xD00000000000003ALL, 0x80000002362D59E0);
    swift_bridgeObjectRelease();
    v14 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a4)[2](a4, v14);
    swift_release();

  }
}

void sub_236272CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(_QWORD, _QWORD))
{
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];
  char v21[24];
  ValueMetadata *v22;
  unint64_t v23;

  v20[4] = a5;
  v20[5] = a4;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a7;
  _Block_copy(a7);
  if (qword_2542A53E0 != -1)
    swift_once();
  v9 = (char *)off_2542A5400 + 16;
  v10 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_23626909C((unint64_t)v9, 0, v21);
  os_unfair_lock_unlock(v10);
  v11 = v21[0];
  v12 = swift_release();
  if (v11 == 2)
  {
    v22 = &type metadata for AppProtectionFeatures;
    v23 = sub_236264AA0();
    v21[0] = 0;
    LOBYTE(v11) = sub_2362CB44C();
    v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  if ((v11 & 1) != 0)
  {
    v18 = MEMORY[0x24BDAC7A8](v12, v13);
    v20[2] = sub_236274D24;
    v20[3] = v8;
    MEMORY[0x24BDAC7A8](v18, v20);
    sub_23626F92C((void (*)(id))sub_236274D58, v19, (void (*)(_BYTE *))sub_236272EFC);
    swift_release();
  }
  else
  {
    v14 = sub_2362CB698();
    v16 = sub_236294D50(v14, v15, 2, 0xD000000000000016, 0x80000002362D5710, 500, 0xD000000000000057, 0x80000002362D5730);
    swift_bridgeObjectRelease();
    v17 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a7)[2](a7, v17);
    swift_release();

  }
}

uint64_t sub_236272EFC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23627101C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_236272F30(uint64_t a1)
{
  return sub_236273DA4(a1, (uint64_t)nullsub_1, (uint64_t)nullsub_1);
}

void sub_236272F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(_QWORD, _QWORD))
{
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  char v20[24];
  ValueMetadata *v21;
  unint64_t v22;

  v19[5] = a4;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a6;
  _Block_copy(a6);
  if (qword_2542A53E0 != -1)
    swift_once();
  v8 = (char *)off_2542A5400 + 16;
  v9 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v9);
  sub_23626909C((unint64_t)v8, 0, v20);
  os_unfair_lock_unlock(v9);
  v10 = v20[0];
  v11 = swift_release();
  if (v10 == 2)
  {
    v21 = &type metadata for AppProtectionFeatures;
    v22 = sub_236264AA0();
    v20[0] = 0;
    LOBYTE(v10) = sub_2362CB44C();
    v11 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  if ((v10 & 1) != 0)
  {
    v17 = MEMORY[0x24BDAC7A8](v11, v12);
    v19[2] = sub_236274D24;
    v19[3] = v7;
    MEMORY[0x24BDAC7A8](v17, v19);
    sub_23626F92C((void (*)(id))sub_236274D58, v18, (void (*)(_BYTE *))sub_23627424C);
    swift_release();
  }
  else
  {
    v13 = sub_2362CB698();
    v15 = sub_236294D50(v13, v14, 2, 0xD000000000000016, 0x80000002362D5710, 363, 0xD00000000000006CLL, 0x80000002362D5970);
    swift_bridgeObjectRelease();
    v16 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a6)[2](a6, v16);
    swift_release();

  }
}

void sub_236273198(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __CFString *v14;
  __CFString *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD v23[4];
  char v24[24];
  ValueMetadata *v25;
  unint64_t v26;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a4;
  _Block_copy(a4);
  if (qword_2542A53E0 != -1)
    swift_once();
  v6 = (char *)off_2542A5400 + 16;
  v7 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_23626909C((unint64_t)v6, 0, v24);
  os_unfair_lock_unlock(v7);
  v8 = v24[0];
  v9 = swift_release();
  if (v8 == 2)
  {
    v25 = &type metadata for AppProtectionFeatures;
    v26 = sub_236264AA0();
    v24[0] = 0;
    LOBYTE(v8) = sub_2362CB44C();
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  if ((v8 & 1) != 0)
  {
    v19 = MEMORY[0x24BDAC7A8](v9, v10);
    v23[2] = sub_236274210;
    v23[3] = v5;
    MEMORY[0x24BDAC7A8](v19, v23);
    sub_23626F92C((void (*)(id))sub_236274218, v20, (void (*)(_BYTE *))sub_236274240);
    swift_release();
  }
  else
  {
    v11 = sub_2362CB698();
    v13 = v12;
    v14 = _APErrorCodeDescription(2uLL);
    if (v14)
    {
      v15 = v14;
      v16 = sub_2362CB698();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    v21 = sub_236294D50(v11, v13, 2, v16, v18, 373, 0xD000000000000036, 0x80000002362D5930);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v22);
    swift_release();

  }
}

void sub_236273410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(_QWORD, _QWORD))
{
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _QWORD v22[10];
  uint64_t v23;
  uint64_t v24;
  char v25[24];
  ValueMetadata *v26;
  unint64_t v27;

  v23 = a4;
  v24 = a5;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a7;
  _Block_copy(a7);
  _Block_copy(a7);
  if (qword_2542A53E0 != -1)
    swift_once();
  v13 = (char *)off_2542A5400 + 16;
  v14 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_23626909C((unint64_t)v13, 0, v25);
  os_unfair_lock_unlock(v14);
  v15 = v25[0];
  v16 = swift_release();
  if (v15 == 2)
  {
    v26 = &type metadata for AppProtectionFeatures;
    v27 = sub_236264AA0();
    v25[0] = 0;
    LOBYTE(v15) = sub_2362CB44C();
    v16 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  if ((v15 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    v22[2] = a1;
    v22[3] = a2;
    v22[4] = a3;
    v22[5] = a6;
    v22[6] = v23;
    v22[7] = v24;
    v22[8] = sub_236274D24;
    v22[9] = v12;
    _Block_copy(a7);
    swift_retain();
    sub_2362727A0((void (*)(_BYTE *))sub_236273EE8, (uint64_t)v22, a6, a7);
    _Block_release(a7);
    swift_release_n();
    _Block_release(a7);
  }
  else
  {
    v18 = sub_2362CB698();
    v20 = sub_236294D50(v18, v19, 2, 0xD000000000000016, 0x80000002362D5710, 393, 0xD000000000000071, 0x80000002362D5860);
    swift_bridgeObjectRelease();
    v21 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a7)[2](a7, v21);
    swift_release();

    _Block_release(a7);
  }
}

void sub_236273684(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  _QWORD v16[6];
  char v17[24];
  ValueMetadata *v18;
  unint64_t v19;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  _Block_copy(a3);
  _Block_copy(a3);
  if (qword_2542A53E0 != -1)
    swift_once();
  v7 = (char *)off_2542A5400 + 16;
  v8 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_23626909C((unint64_t)v7, 0, v17);
  os_unfair_lock_unlock(v8);
  v9 = v17[0];
  v10 = swift_release();
  if (v9 == 2)
  {
    v18 = &type metadata for AppProtectionFeatures;
    v19 = sub_236264AA0();
    v17[0] = 0;
    LOBYTE(v9) = sub_2362CB44C();
    v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  if ((v9 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v10, v11);
    v16[2] = a2;
    v16[3] = a1;
    v16[4] = sub_236274D24;
    v16[5] = v6;
    _Block_copy(a3);
    swift_retain();
    sub_2362727A0((void (*)(_BYTE *))sub_236273EDC, (uint64_t)v16, a2, a3);
    _Block_release(a3);
    swift_release_n();
    _Block_release(a3);
  }
  else
  {
    v12 = sub_2362CB698();
    v14 = sub_236294D50(v12, v13, 2, 0xD000000000000016, 0x80000002362D5710, 410, 0xD000000000000020, 0x80000002362D5830);
    swift_bridgeObjectRelease();
    v15 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a3)[2](a3, v15);
    swift_release();

    _Block_release(a3);
  }
}

void sub_2362738D4(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  char v18[24];
  ValueMetadata *v19;
  unint64_t v20;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a4;
  _Block_copy(a4);
  if (qword_2542A53E0 != -1)
    swift_once();
  v6 = (char *)off_2542A5400 + 16;
  v7 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_23626909C((unint64_t)v6, 0, v18);
  os_unfair_lock_unlock(v7);
  v8 = v18[0];
  v9 = swift_release();
  if (v8 == 2)
  {
    v19 = &type metadata for AppProtectionFeatures;
    v20 = sub_236264AA0();
    v18[0] = 0;
    LOBYTE(v8) = sub_2362CB44C();
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  if ((v8 & 1) != 0)
  {
    v15 = MEMORY[0x24BDAC7A8](v9, v10);
    v17[2] = sub_236274D20;
    v17[3] = v5;
    MEMORY[0x24BDAC7A8](v15, v17);
    sub_23626F92C((void (*)(id))sub_236273DCC, v16, (void (*)(_BYTE *))sub_236273DF4);
    swift_release();
  }
  else
  {
    v11 = sub_2362CB698();
    v13 = sub_236294D50(v11, v12, 2, 0xD000000000000016, 0x80000002362D5710, 437, 0xD000000000000033, 0x80000002362D57D0);
    swift_bridgeObjectRelease();
    v14 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v14);
    swift_release();

  }
}

void sub_236273B1C(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  char v18[24];
  ValueMetadata *v19;
  unint64_t v20;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a4;
  _Block_copy(a4);
  if (qword_2542A53E0 != -1)
    swift_once();
  v6 = (char *)off_2542A5400 + 16;
  v7 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_23626909C((unint64_t)v6, 0, v18);
  os_unfair_lock_unlock(v7);
  v8 = v18[0];
  v9 = swift_release();
  if (v8 == 2)
  {
    v19 = &type metadata for AppProtectionFeatures;
    v20 = sub_236264AA0();
    v18[0] = 0;
    LOBYTE(v8) = sub_2362CB44C();
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  if ((v8 & 1) != 0)
  {
    v15 = MEMORY[0x24BDAC7A8](v9, v10);
    v17[2] = sub_236274D24;
    v17[3] = v5;
    MEMORY[0x24BDAC7A8](v15, v17);
    sub_23626F92C((void (*)(id))sub_236274D58, v16, (void (*)(_BYTE *))sub_236273D60);
    swift_release();
  }
  else
  {
    v11 = sub_2362CB698();
    v13 = sub_236294D50(v11, v12, 2, 0xD000000000000016, 0x80000002362D5710, 466, 0xD000000000000031, 0x80000002362D5790);
    swift_bridgeObjectRelease();
    v14 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, void *))a4)[2](a4, v14);
    swift_release();

  }
}

uint64_t sub_236273D60(uint64_t a1)
{
  return sub_23627426C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236270BFC);
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236273DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_236271224(a1, (_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(uint64_t (**)(uint64_t))(v3 + 72), *(_QWORD *)(v3 + 80), a2, a3);
}

uint64_t sub_236273DCC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_236273DF4(uint64_t a1)
{
  return sub_23627426C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2362707C0);
}

uint64_t sub_236273E00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2362CB470();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236273E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2362CB470() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236270ADC(a1, a2, v2 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_236273EDC(_QWORD *a1)
{
  uint64_t v1;

  return sub_2362703E0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(_QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_236273EE8(uint64_t a1)
{
  uint64_t v1;

  return sub_236270104(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unint64_t **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(_QWORD))(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_236273F18(uint64_t a1)
{
  destroy for APTrackingGuardAction(a1);
  return a1;
}

uint64_t sub_236273F44(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for APTrackingGuardAction(a2, a1);
  return a2;
}

uint64_t sub_236273F78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236273FBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 312) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  v3 = sub_2362CB428();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

void sub_2362740BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 312) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23626E840(*(_DWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(_DWORD *)(v0 + 176), (uint64_t *)(v0 + 184), *(_QWORD **)(v0 + 280), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(void (**)(_QWORD))(v0 + 304), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)), *(void (**)(_QWORD))(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

uint64_t sub_23627413C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_236274170(void *a1, char a2)
{
  uint64_t v2;

  sub_23626F320(a1, a2 & 1, *(_DWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD))(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(uint64_t))(v2 + 56), *(_QWORD *)(v2 + 64));
}

id sub_2362741A4(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_2362741B0(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

unint64_t sub_2362741BC()
{
  unint64_t result;

  result = qword_2563D4198;
  if (!qword_2563D4198)
  {
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2563D4198);
  }
  return result;
}

_OWORD *sub_236274200(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_236274210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23627CFD0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_236274218(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

void sub_236274240(_QWORD *a1)
{
  uint64_t v1;

  sub_236270030(a1, *(void (**)(id, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23627424C(uint64_t a1)
{
  uint64_t v1;

  return sub_23626FE10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unint64_t **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(_QWORD))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_236274260(uint64_t a1)
{
  return sub_23627426C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23626FBB4);
}

uint64_t sub_23627426C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t destroy for APTrackingGuardAction(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  return result;
}

uint64_t initializeWithCopy for APTrackingGuardAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v7;
    v8 = v7;
    v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9(a1 + 48, a2 + 48, v8);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  return a1;
}

uint64_t assignWithCopy for APTrackingGuardAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (!v4)
    {
      sub_2362724E0(a1);
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      v8 = *(_OWORD *)(a2 + 80);
      v10 = *(_OWORD *)(a2 + 32);
      v9 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 48) = v9;
      goto LABEL_9;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  }
  else
  {
    if (!v4)
    {
      v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      v12 = *(_OWORD *)(a2 + 32);
      v13 = *(_OWORD *)(a2 + 48);
      v14 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v14;
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)(a1 + 48) = v13;
      goto LABEL_9;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v5 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v5;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6(a1 + 48, a2 + 48, v5);
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
LABEL_9:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for APTrackingGuardAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_2362724E0(a1);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
LABEL_6:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for APTrackingGuardAction(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for APTrackingGuardAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for APTrackingGuardAction()
{
  return &type metadata for APTrackingGuardAction;
}

uint64_t destroy for APGuardAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for APGuardAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2 + 48;
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 48, v7, v9);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  return a1;
}

uint64_t assignWithCopy for APGuardAction(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for APGuardAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  return a1;
}

uint64_t getEnumTagSinglePayload for APGuardAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APGuardAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APGuardAction()
{
  return &type metadata for APGuardAction;
}

ValueMetadata *type metadata accessor for APGuardAction.LockedCheckPolicy()
{
  return &type metadata for APGuardAction.LockedCheckPolicy;
}

uint64_t _s13AppProtection13APGuardActionV16CompletionPolicyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236274C10 + 4 * byte_2362CECA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_236274C44 + 4 * byte_2362CECA0[v4]))();
}

uint64_t sub_236274C44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236274C4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236274C54);
  return result;
}

uint64_t sub_236274C60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236274C68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236274C6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236274C74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for APGuardAction.CompletionPolicy()
{
  return &type metadata for APGuardAction.CompletionPolicy;
}

unint64_t sub_236274C94()
{
  unint64_t result;

  result = qword_2563D73F8;
  if (!qword_2563D73F8)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CEDFC, &type metadata for APGuardAction.CompletionPolicy);
    atomic_store(result, (unint64_t *)&qword_2563D73F8);
  }
  return result;
}

unint64_t sub_236274CDC()
{
  unint64_t result;

  result = qword_2563D7400;
  if (!qword_2563D7400)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CEE8C, &type metadata for APGuardAction.LockedCheckPolicy);
    atomic_store(result, (unint64_t *)&qword_2563D7400);
  }
  return result;
}

uint64_t sub_236274D60(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_BYTE *);
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *);
  _BYTE v15[16];
  _BYTE v16[16];
  unint64_t v17;

  v5 = MEMORY[0x24BEE4AF8];
  v17 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(_BYTE *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    v13 = *(_QWORD *)(a3 + 16);
    v14 = (uint64_t (*)(_BYTE *))result;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      sub_23626B698(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        sub_236264B94((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_23626B6D0((uint64_t)v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2362BC7D8(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v17;
        v12 = *(_QWORD *)(v17 + 16);
        v11 = *(_QWORD *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_2362BC7D8(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        *(_QWORD *)(v9 + 16) = v12 + 1;
        result = sub_23626B6D0((uint64_t)v15, v9 + 16 * v12 + 32);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = sub_236264B94((uint64_t)v16);
      }
      ++v5;
      v8 += 16;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

id sub_236274FFC()
{
  return sub_236276B3C(0, type metadata accessor for ServerBackedExtensionMonitorRegistry.MonitorClientExport);
}

uint64_t sub_23627501C()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE v15[16];
  _BYTE v16[16];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 48;
    while (1)
    {
      sub_23626B698(v1 + v4 - 16, (uint64_t)v16);
      v5 = MEMORY[0x23B7EF2F4](v16);
      swift_unknownObjectRelease();
      sub_236264B94((uint64_t)v16);
      if (!v5)
        break;
      ++v3;
      v4 += 16;
      if (v2 == v3)
      {
        result = swift_bridgeObjectRelease();
        v7 = *(_QWORD *)(*v0 + 16);
        goto LABEL_10;
      }
    }
    result = swift_bridgeObjectRelease();
    v7 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_37;
    v8 = *v0;
    v9 = *(_QWORD *)(*v0 + 16);
    if (v7 != v9)
    {
      v10 = v3 + 1;
      while (v10 < v9)
      {
        sub_23626B698(v8 + v4, (uint64_t)v16);
        v11 = MEMORY[0x23B7EF2F4](v16);
        swift_unknownObjectRelease();
        result = sub_236264B94((uint64_t)v16);
        if (v11)
        {
          if (v10 != v3)
          {
            if ((v3 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v12 = *v0;
            v13 = *(_QWORD *)(*v0 + 16);
            if (v3 >= v13)
              goto LABEL_32;
            result = sub_23626B698(v12 + 16 * v3 + 32, (uint64_t)v16);
            if (v10 >= v13)
              goto LABEL_33;
            sub_23626B698(v12 + v4, (uint64_t)v15);
            result = swift_isUniquelyReferenced_nonNull_native();
            *v0 = v12;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_2362B5FB4(v12);
              v12 = result;
              *v0 = result;
            }
            if (v3 >= *(_QWORD *)(v12 + 16))
              goto LABEL_34;
            result = sub_23626B708((uint64_t)v15, v12 + 16 * v3 + 32);
            if (v10 >= *(_QWORD *)(*v0 + 16))
              goto LABEL_35;
            result = sub_23626B708((uint64_t)v16, *v0 + v4);
          }
          if (__OFADD__(v3++, 1))
            goto LABEL_30;
        }
        v7 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_29;
        v8 = *v0;
        v9 = *(_QWORD *)(*v0 + 16);
        ++v10;
        v4 += 16;
        if (v7 == v9)
          goto LABEL_9;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_9:
    v2 = v3;
LABEL_10:
    if (v7 >= v2)
      return sub_2362B63F0(v2, v7);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
    v7 = 0;
    return sub_2362B63F0(v2, v7);
  }
  return result;
}

_QWORD *sub_236275218()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_2362CB878();
  v13 = *(_QWORD *)(v1 - 8);
  v14 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB86C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  v0[2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ServerBackedExtensionMonitorRegistry.MonitorClientExport()), sel_init);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  v15 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v4, *MEMORY[0x24BEE5750], v14);
  v0[3] = sub_2362CB8B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5438);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 24) = 0;
  v0[4] = v10;
  swift_weakAssign();
  return v0;
}

uint64_t sub_236275448()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (qword_2542A53D0 != -1)
    swift_once();
  v0 = sub_2362CB494();
  __swift_project_value_buffer(v0, (uint64_t)qword_2542A58F8);
  v1 = sub_2362CB47C();
  v2 = sub_2362CB848();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23624C000, v1, v2, "connection to daemon in extension monitor registry interrupted", v3, 2u);
    MEMORY[0x23B7EF258](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_236275550();
    return swift_release();
  }
  return result;
}

uint64_t sub_236275550()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock(v1 + 8);
  sub_2362755C0((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v1 + 8);
  return swift_release();
}

void *sub_2362755C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD v36[4];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  char v43[8];
  uint64_t v44;
  void *v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v41 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v36 - v8;
  v10 = sub_2362CB428();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  MEMORY[0x24BDAC7A8](v13, v14);
  v42 = (uint64_t)v36 - v16;
  v38 = a1;
  result = *(void **)a1;
  v18 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v18)
  {
    v37 = v15;
    v36[1] = result;
    v36[2] = v1;
    v19 = (uint64_t)result + 32;
    swift_bridgeObjectRetain();
    v36[3] = MEMORY[0x24BEE4AD8] + 8;
    v39 = v9;
    while (1)
    {
      sub_23626B698(v19, (uint64_t)v43);
      if (!MEMORY[0x23B7EF2F4](v43))
        break;
      v21 = v44;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
      swift_unknownObjectRelease();
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v23(v9, 0, 1, v10);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v24(v9, 1, v10) == 1)
        goto LABEL_4;
      v25 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
      v25(v42, v9, v10);
      if (!MEMORY[0x23B7EF2F4](v43))
      {
        v31 = v41;
        v23(v41, 1, 1, v10);
LABEL_14:
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v42, v10);
        sub_236264B94((uint64_t)v43);
        v20 = (uint64_t)v31;
LABEL_5:
        sub_23625B4F8(v20, &qword_2542A5220);
        goto LABEL_6;
      }
      v40 = v25;
      v26 = v44;
      v27 = swift_getObjectType();
      v28 = v10;
      v29 = v11;
      v30 = v41;
      (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v27, v26);
      v31 = v30;
      v11 = v29;
      v10 = v28;
      v9 = v39;
      swift_unknownObjectRelease();
      v23(v31, 0, 1, v10);
      if (v24(v31, 1, v10) == 1)
        goto LABEL_14;
      v32 = v37;
      v40(v37, v31, v10);
      result = *(void **)(v38 + 8);
      if (!result)
      {
        __break(1u);
        return result;
      }
      v33 = objc_msgSend(result, sel_remoteObjectProxy);
      sub_2362CB9E0();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5200);
      swift_dynamicCast();
      v34 = v42;
      sub_2362785C4(v45, v32, v42);
      swift_unknownObjectRelease();
      v35 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v35(v32, v10);
      v35(v34, v10);
      sub_236264B94((uint64_t)v43);
LABEL_6:
      v19 += 16;
      if (!--v18)
        return (void *)swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_236264B94((uint64_t)v43);
    v20 = (uint64_t)v9;
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_236275930(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_2362CB428();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542A53D0 != -1)
    swift_once();
  v11 = sub_2362CB494();
  __swift_project_value_buffer(v11, (uint64_t)qword_2542A58F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  v12 = sub_2362CB47C();
  v13 = sub_2362CB848();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v29 = v2;
    v15 = v14;
    v16 = swift_slowAlloc();
    v31 = v16;
    *(_DWORD *)v15 = 136446466;
    v28[1] = v15 + 4;
    sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_2362CBBC0();
    v30 = sub_2362AB670(v17, v18, &v31);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v30) = a2 & 1;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v12, v13, "monitor %{public}s locked status update %{BOOL}d", (uint8_t *)v15, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v16, -1, -1);
    v19 = v15;
    v3 = v29;
    MEMORY[0x23B7EF258](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }

  v20 = *(_QWORD *)(v3 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v20 + 32));
  sub_236275C24((uint64_t *)(v20 + 16), a1, &v31);
  os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 32));
  v21 = v31;
  swift_release();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = (uint64_t *)(v21 + 40);
    do
    {
      if (*(v23 - 1))
      {
        v24 = *v23;
        ObjectType = swift_getObjectType();
        v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 24);
        swift_unknownObjectRetain();
        v26(a1, a2 & 1, ObjectType, v24);
        swift_unknownObjectRelease();
      }
      v23 += 2;
      --v22;
    }
    while (v22);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236275C24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _BYTE v16[16];
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;

  v4 = *a1;
  v17 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_236274D60((uint64_t)sub_236279A5C, (uint64_t)v16, v4);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v15 = a3;
    v20 = MEMORY[0x24BEE4AF8];
    sub_2362BC7BC(0, v6, 0);
    v7 = v5 + 32;
    v8 = v20;
    do
    {
      sub_23626B698(v7, (uint64_t)v18);
      v9 = MEMORY[0x23B7EF2F4](v18);
      v10 = v19;
      sub_236264B94((uint64_t)v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2362BC7BC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v20;
      }
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_2362BC7BC(v11 > 1, v12 + 1, 1);
        v8 = v20;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      v13 = v8 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      v7 += 16;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease();
    a3 = v15;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v8;
  return result;
}

uint64_t sub_236275D88(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t *v29;
  char v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v35;
  char *v36;

  v36 = a2;
  v3 = sub_2362CB428();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v35 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A51B0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v35 - v21;
  if (MEMORY[0x23B7EF2F4](a1))
  {
    v23 = *(_QWORD *)(a1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
    swift_unknownObjectRelease();
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v25(v22, 0, 1, v3);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v25(v22, 1, 1, v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v36, v3);
  v25(v19, 0, 1, v3);
  v26 = (uint64_t)&v10[*(int *)(v7 + 48)];
  sub_236279974((uint64_t)v22, (uint64_t)v10);
  sub_236279974((uint64_t)v19, v26);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v27((uint64_t)v10, 1, v3) == 1)
  {
    sub_23625B4F8((uint64_t)v19, &qword_2542A5220);
    sub_23625B4F8((uint64_t)v22, &qword_2542A5220);
    v28 = v27(v26, 1, v3);
    if (v28 == 1)
      v29 = &qword_2542A5220;
    else
      v29 = (uint64_t *)&unk_2542A51B0;
    if (v28 == 1)
      v30 = -1;
    else
      v30 = 0;
  }
  else
  {
    v31 = v15;
    sub_236279974((uint64_t)v10, (uint64_t)v15);
    if (v27(v26, 1, v3) == 1)
    {
      sub_23625B4F8((uint64_t)v19, &qword_2542A5220);
      sub_23625B4F8((uint64_t)v22, &qword_2542A5220);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      v30 = 0;
      v29 = (uint64_t *)&unk_2542A51B0;
    }
    else
    {
      v32 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v35, v26, v3);
      sub_23624E3C4(&qword_2542A51C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v30 = sub_2362CB650();
      v36 = v31;
      v33 = *(void (**)(char *, uint64_t))(v4 + 8);
      v33(v32, v3);
      v29 = &qword_2542A5220;
      sub_23625B4F8((uint64_t)v19, &qword_2542A5220);
      sub_23625B4F8((uint64_t)v22, &qword_2542A5220);
      v33(v36, v3);
    }
  }
  sub_23625B4F8((uint64_t)v10, v29);
  return v30 & 1;
}

uint64_t sub_2362760D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  __CFString *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t ObjectType;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD aBlock[7];
  uint64_t v41;
  uint64_t v42;

  v38 = a4;
  v7 = sub_2362CB428();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v39 = (char *)&v36 - v14;
  v41 = 0;
  swift_unknownObjectWeakInit();
  v41 = a3;
  v42 = a2;
  v15 = swift_unknownObjectWeakAssign();
  sub_23626B6D0(v15, (uint64_t)aBlock);
  v16 = *(_QWORD **)a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_2362AB0D0(0, v16[2] + 1, 1, (unint64_t)v16);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_2362AB0D0((_QWORD *)(v17 > 1), v18 + 1, 1, (unint64_t)v16);
  v16[2] = v18 + 1;
  sub_23626B6D0((uint64_t)aBlock, (uint64_t)&v16[2 * v18 + 4]);
  *(_QWORD *)a1 = v16;
  sub_23627501C();
  v19 = *(id *)(a1 + 8);
  if (!v19)
  {
    v20 = (id)APGetExtensionMonitorServiceName();
    sub_2362CB698();
    v37 = a3;

    v21 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v22 = (void *)sub_2362CB674();
    a3 = v37;
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v21, sel_initWithMachServiceName_options_, v22, 0);

    v23 = APGetExtensionMonitorServiceInterface();
    objc_msgSend(v19, sel_setRemoteObjectInterface_, v23);

    v24 = APGetClientExtensionMonitorInterface();
    objc_msgSend(v19, sel_setExportedInterface_, v24);

    v25 = v38;
    objc_msgSend(v19, sel_setExportedObject_, *(_QWORD *)(v38 + 16));
    objc_msgSend(v19, sel__setQueue_, *(_QWORD *)(v25 + 24));
    v26 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_23627996C;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_60_0;
    v27 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v19, sel_setInterruptionHandler_, v27);
    _Block_release(v27);
    v28 = objc_msgSend(v19, sel__xpcConnection);
    xpc_connection_set_non_launching();
    swift_unknownObjectRelease();

    *(_QWORD *)(a1 + 8) = v19;
    objc_msgSend(v19, sel_resume);
  }
  v29 = v19;
  v30 = objc_msgSend(v29, sel_remoteObjectProxy);
  sub_2362CB9E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5200);
  swift_dynamicCast();
  v31 = (void *)aBlock[6];

  ObjectType = swift_getObjectType();
  v33 = (uint64_t)v39;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_2362785C4(v31, v33, (uint64_t)v12);
  swift_unknownObjectRelease();
  v34 = *(void (**)(char *, uint64_t))(v8 + 8);
  v34(v12, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v7);
}

void sub_2362764DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t ObjectType;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  __CFString *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t aBlock[6];
  uint64_t v53;

  v9 = sub_2362CB428();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v49 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  v51 = a3;
  v12 = sub_2362788C0((unint64_t *)a1, a2, a3);
  swift_unknownObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v13 < v12)
  {
    __break(1u);
  }
  else
  {
    sub_2362B63F0(v12, v13);
    sub_23627501C();
    if (qword_2542A53D0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v14 = sub_2362CB494();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542A58F8);
  swift_unknownObjectRetain_n();
  v15 = sub_2362CB47C();
  v16 = sub_2362CB848();
  v17 = os_log_type_enabled(v15, v16);
  v47 = a4;
  v48 = v9;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    aBlock[0] = v45;
    v46 = v4;
    *(_DWORD *)v18 = 136315138;
    v44 = v18 + 4;
    ObjectType = swift_getObjectType();
    v20 = a1;
    v21 = v49;
    (*(void (**)(uint64_t))(v51 + 8))(ObjectType);
    sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_2362CBBC0();
    v23 = v9;
    v25 = v24;
    v26 = v21;
    a1 = v20;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v23);
    v53 = sub_2362AB670(v22, v25, aBlock);
    sub_2362CB9C8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v15, v16, "end monitoring %s", v18, 0xCu);
    v27 = v45;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v27, -1, -1);
    MEMORY[0x23B7EF258](v18, -1, -1);

    v28 = *(id *)(a1 + 8);
    if (!v28)
      goto LABEL_7;
  }
  else
  {

    swift_unknownObjectRelease_n();
    v28 = *(id *)(a1 + 8);
    if (!v28)
    {
LABEL_7:
      v29 = (id)APGetExtensionMonitorServiceName();
      sub_2362CB698();

      v30 = objc_allocWithZone(MEMORY[0x24BDD1988]);
      v31 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      v28 = objc_msgSend(v30, sel_initWithMachServiceName_options_, v31, 0);

      v32 = APGetExtensionMonitorServiceInterface();
      objc_msgSend(v28, sel_setRemoteObjectInterface_, v32);

      v33 = APGetClientExtensionMonitorInterface();
      objc_msgSend(v28, sel_setExportedInterface_, v33);

      v34 = v47;
      objc_msgSend(v28, sel_setExportedObject_, *(_QWORD *)(v47 + 16));
      objc_msgSend(v28, sel__setQueue_, *(_QWORD *)(v34 + 24));
      v35 = swift_allocObject();
      swift_weakInit();
      aBlock[4] = (uint64_t)sub_23627996C;
      aBlock[5] = v35;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23624E13C;
      aBlock[3] = (uint64_t)&block_descriptor_55;
      v36 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v28, sel_setInterruptionHandler_, v36);
      _Block_release(v36);
      v37 = objc_msgSend(v28, sel__xpcConnection);
      xpc_connection_set_non_launching();
      swift_unknownObjectRelease();

      *(_QWORD *)(a1 + 8) = v28;
      objc_msgSend(v28, sel_resume);
    }
  }
  v38 = v28;
  v39 = objc_msgSend(v38, sel_remoteObjectProxy);
  sub_2362CB9E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5200);
  swift_dynamicCast();
  v40 = (void *)v53;

  v41 = swift_getObjectType();
  v42 = v49;
  (*(void (**)(uint64_t))(v51 + 8))(v41);
  v43 = (void *)sub_2362CB3F8();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v48);
  objc_msgSend(v40, sel_endMonitoringForMonitorUUID_, v43);
  swift_unknownObjectRelease();

}

uint64_t sub_236276A44()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

id sub_236276B30(uint64_t a1)
{
  return sub_236276B3C(a1, type metadata accessor for APExtensionSubjectMonitorSubscription);
}

id sub_236276B3C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_236276BD8()
{
  char *v0;
  uint64_t v1;
  char v2;
  objc_super v4;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___APExtensionSubjectMonitorRegistry_state];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 28));
  v2 = *(_BYTE *)(v1 + 24);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 28));
  swift_release();
  if ((v2 & 1) == 0)
    objc_msgSend(v0, sel_invalidate);
  v4.receiver = v0;
  v4.super_class = (Class)APExtensionSubjectMonitorRegistry;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_236276CD0@<X0>(_QWORD *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  objc_super v13;
  _BYTE v14[8];
  _BYTE v15[8];

  swift_unknownObjectWeakInit();
  sub_2362799D4((uint64_t)v15, (uint64_t)v14);
  v6 = (objc_class *)type metadata accessor for APExtensionSubjectMonitorSubscription();
  v7 = (char *)objc_allocWithZone(v6);
  sub_2362799D4((uint64_t)v14, (uint64_t)&v7[OBJC_IVAR____TtC13AppProtection37APExtensionSubjectMonitorSubscription_monitorRef]);
  *(_QWORD *)&v7[OBJC_IVAR____TtC13AppProtection37APExtensionSubjectMonitorSubscription_registry] = a2;
  v13.receiver = v7;
  v13.super_class = v6;
  v8 = a2;
  v9 = objc_msgSendSuper2(&v13, sel_init);
  sub_236279A10((uint64_t)v14);
  v10 = v9;
  MEMORY[0x23B7EE4B4](v10, v11);
  if (*(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2362CB77C();
  sub_2362CB788();
  sub_2362CB770();
  result = sub_236279A10((uint64_t)v15);
  *a3 = v10;
  return result;
}

void sub_236276E7C(unint64_t *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2;
  v4 = sub_2362792E0(a1, (uint64_t)v3);

  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    if (v5 >= v4)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= v4)
    {
LABEL_3:
      sub_2362B6590(v4, v5);
      return;
    }
  }
  __break(1u);
}

void sub_236276F30()
{
  char *v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  const char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t *v14;
  char *v15;
  _QWORD v16[5];

  v1 = *(_QWORD *)&v0[OBJC_IVAR___APExtensionSubjectMonitorRegistry_state];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 28));
  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 25);
  *(_BYTE *)(v1 + 25) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 28));
  swift_release();
  if ((v2 & 1) != 0)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
    v15 = v0;
    v5 = sub_2362CB47C();
    v6 = sub_2362CB83C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v16[0] = v15;
      v9 = v15;
      sub_2362CB9C8();
      *v8 = v15;

      v10 = "cannot resume invalidated monitor %@";
LABEL_11:
      _os_log_impl(&dword_23624C000, v5, v6, v10, v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v8, -1, -1);
      MEMORY[0x23B7EF258](v7, -1, -1);

      return;
    }
LABEL_12:

    return;
  }
  if ((v3 & 1) != 0)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v11 = sub_2362CB494();
    __swift_project_value_buffer(v11, (uint64_t)qword_2542A58F8);
    v15 = v0;
    v5 = sub_2362CB47C();
    v6 = sub_2362CB83C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v16[0] = v15;
      v12 = v15;
      sub_2362CB9C8();
      *v8 = v15;

      v10 = "double-resumption of %@";
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  sub_23624E76C(*(_QWORD *)&v0[OBJC_IVAR___APExtensionSubjectMonitorRegistry_extensionSubject]+ OBJC_IVAR___APSubject_clientArenaStorage, (uint64_t)v16);
  v13 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v14 = __swift_project_boxed_opaque_existential_1(v13 + 12, v13[15]);
  sub_236278540((uint64_t)v0, *v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_2362772AC()
{
  char *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  _QWORD v7[5];
  _QWORD v8[5];

  sub_23624E76C(*(_QWORD *)&v0[OBJC_IVAR___APExtensionSubjectMonitorRegistry_extensionSubject]+ OBJC_IVAR___APSubject_clientArenaStorage, (uint64_t)v8);
  v1 = __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_23624E76C((uint64_t)(v1 + 12), (uint64_t)v7);
  v2 = __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v3 = *v2;
  v4 = *(os_unfair_lock_s **)(*v2 + 32);
  swift_retain();
  os_unfair_lock_lock(v4 + 8);
  sub_2362764DC((uint64_t)&v4[4], (uint64_t)v0, (uint64_t)&off_250795320, v3);
  os_unfair_lock_unlock(v4 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  v5 = *(os_unfair_lock_s **)&v0[OBJC_IVAR___APExtensionSubjectMonitorRegistry_state];
  swift_retain();
  os_unfair_lock_lock(v5 + 7);
  sub_2362773BC((uint64_t)&v5[4], v0);
  os_unfair_lock_unlock(v5 + 7);
  return swift_release();
}

void sub_2362773BC(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  _QWORD *v10;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
    v5 = a2;
    v6 = sub_2362CB47C();
    v7 = sub_2362CB83C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v9 = v5;
      sub_2362CB9C8();
      *v10 = v5;

      _os_log_impl(&dword_23624C000, v6, v7, "double-invalidation of %@!", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v10, -1, -1);
      MEMORY[0x23B7EF258](v8, -1, -1);

    }
    else
    {

    }
  }
  *(_BYTE *)(a1 + 8) = 1;
}

void __swiftcall APExtensionSubjectMonitorRegistry.init()(APExtensionSubjectMonitorRegistry *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void APExtensionSubjectMonitorRegistry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_236277630(uint64_t a1, int a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  char v18;
  uint64_t v19;
  char v20[8];

  v3 = a2 & 1;
  v4 = OBJC_IVAR___APExtensionSubjectMonitorRegistry_lastLockedState;
  v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR___APExtensionSubjectMonitorRegistry_lastLockedState);
  if (v5 != 2 && ((((v5 & 1) == 0) ^ a2) & 1) != 0)
    goto LABEL_18;
  v6 = *(_BYTE **)(v2 + OBJC_IVAR___APExtensionSubjectMonitorRegistry_extensionSubject);
  v6[OBJC_IVAR___APExtension_forcedLockedValue] = v3;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR___APExtensionSubjectMonitorRegistry_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 28));
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 28));
  swift_release();
  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    v6[OBJC_IVAR___APExtension_forcedLockedValue] = 2;
LABEL_18:
    *(_BYTE *)(v2 + v4) = v3;
    return;
  }
  swift_bridgeObjectRetain();
  v9 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_16;
LABEL_5:
  if (v9 >= 1)
  {
    v18 = v3;
    v19 = v2;
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x23B7EE7E4](i, v8);
      else
        v15 = *(id *)(v8 + 8 * i + 32);
      v16 = v15;
      sub_2362799D4((uint64_t)v15 + OBJC_IVAR____TtC13AppProtection37APExtensionSubjectMonitorSubscription_monitorRef, (uint64_t)v20);
      v17 = (void *)MEMORY[0x23B7EF2F4](v20);
      sub_236279A10((uint64_t)v20);
      if (v17)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5210);
        v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_2362CEEC0;
        *(_QWORD *)(v11 + 32) = v6;
        sub_2362CB770();
        type metadata accessor for APSubject(0);
        v12 = v6;
        v13 = (void *)sub_2362CB758();
        swift_bridgeObjectRelease();
        v14 = v16;
        objc_msgSend(v17, sel_appProtectionSubjectsChanged_forSubscription_, v13, v14);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v2 = v19;
    v3 = v18;
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_23627788C()
{
  return sub_2362CB410();
}

uint64_t sub_23627789C()
{
  return sub_2362CB410();
}

uint64_t type metadata accessor for ServerBackedExtensionMonitorRegistry()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ServerBackedExtensionMonitorRegistry.MonitorClientExport()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APExtensionSubjectMonitorSubscription()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APExtensionSubjectMonitorRegistry(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7460);
}

void sub_236277930(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock;
  uint64_t v39;
  uint64_t (*v40)();
  void *v41;
  void *v42;
  uint64_t v43;

  v36 = a3;
  v32 = a2;
  ObjectType = swift_getObjectType();
  v35 = sub_2362CB428();
  v8 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2362CB560();
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2362CB590();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_isEffectivelyLocked, v32) & 1) != 0)
  {
    v21 = (_QWORD *)swift_allocObject();
    v22 = a4;
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = ObjectType;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = sub_2362798D4;
    *(_QWORD *)(v23 + 24) = v21;
    v42 = sub_236273DCC;
    v43 = v23;
    v24 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v39 = 1107296256;
    v40 = (uint64_t (*)())sub_2362C96F0;
    v41 = &block_descriptor_32;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v26 = APGetAsyncExtensionInfoProxy(v25);
    _Block_release(v25);
    sub_2362CB410();
    v27 = (void *)sub_2362CB3F8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v35);
    if (v36)
      v28 = (void *)sub_2362CB674();
    else
      v28 = 0;
    v42 = v22;
    v43 = a5;
    aBlock = v24;
    v39 = 1107296256;
    v40 = (uint64_t (*)())sub_23624E1A0;
    v41 = &block_descriptor_35;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v26, sel_authenticateForExtensionWithUUID_reasonDescription_completion_, v27, v28, v31);
    _Block_release(v31);
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_2542A51E0 != -1)
      swift_once();
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = a4;
    *(_QWORD *)(v29 + 24) = a5;
    v42 = sub_236279888;
    v43 = v29;
    aBlock = MEMORY[0x24BDAC760];
    v39 = 1107296256;
    v40 = sub_23624E13C;
    v41 = &block_descriptor_23_0;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    sub_2362CB578();
    v37 = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v20, v15, v30);
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    swift_release();
  }
}

uint64_t sub_236277E80(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v15[6];

  if (qword_2542A51E0 != -1)
    swift_once();
  v8 = qword_2542A58F0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  *(_BYTE *)(v9 + 32) = a1 & 1;
  *(_QWORD *)(v9 + 40) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_23627990C;
  *(_QWORD *)(v10 + 24) = v9;
  v15[4] = sub_236279C0C;
  v15[5] = v10;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_2362550D4;
  v15[3] = &block_descriptor_45;
  v11 = _Block_copy(v15);
  swift_retain();
  v12 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_236277FFC(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  NSObject *oslog;
  uint64_t v10;

  if (a1)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v2 = sub_2362CB494();
    __swift_project_value_buffer(v2, (uint64_t)qword_2542A58F8);
    v3 = a1;
    v4 = a1;
    oslog = sub_2362CB47C();
    v5 = sub_2362CB830();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v8 = a1;
      v10 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v7 = v10;

      _os_log_impl(&dword_23624C000, oslog, v5, "Could not fetch extension info proxy for extensionRequiresAuthentication %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v7, -1, -1);
      MEMORY[0x23B7EF258](v6, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2362781C0(void *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v9[6];

  if (qword_2542A51E0 != -1)
    swift_once();
  v2 = qword_2542A58F0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_236279828;
  *(_QWORD *)(v4 + 24) = v3;
  v9[4] = sub_236264B8C;
  v9[5] = v4;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2362550D4;
  v9[3] = &block_descriptor_14_0;
  v5 = _Block_copy(v9);
  v6 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_236278314(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t result;
  uint64_t v15;

  if (a2)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v6 = sub_2362CB494();
    __swift_project_value_buffer(v6, (uint64_t)qword_2542A58F8);
    v7 = a2;
    v8 = a2;
    v9 = sub_2362CB47C();
    v10 = sub_2362CB830();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = a2;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v12 = v15;

      _os_log_impl(&dword_23624C000, v9, v10, "Could not check extensionRequiresAuthentication %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v12, -1, -1);
      MEMORY[0x23B7EF258](v11, -1, -1);
    }
    else
    {

    }
  }
  result = swift_beginAccess();
  *(_BYTE *)(a3 + 16) = a1 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ServerBackedExtensionMonitorRegistry.State()
{
  return &type metadata for ServerBackedExtensionMonitorRegistry.State;
}

uint64_t sub_236278540(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(a2 + 32);
  swift_retain();
  os_unfair_lock_lock(v4 + 8);
  sub_2362760D0((uint64_t)&v4[4], a1, (uint64_t)&off_250795320, a2);
  os_unfair_lock_unlock(v4 + 8);
  return swift_release();
}

void sub_2362785C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(_BYTE *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t);
  void *v29;
  void *v30;
  _BYTE v31[12];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_2362CB428();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = &v31[-v13];
  if (qword_2542A53D0 != -1)
    swift_once();
  v15 = sub_2362CB494();
  __swift_project_value_buffer(v15, (uint64_t)qword_2542A58F8);
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v16(v14, a2, v6);
  v16(v11, a3, v6);
  v17 = sub_2362CB47C();
  v18 = sub_2362CB848();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v35 = a3;
    v21 = v20;
    v33 = swift_slowAlloc();
    v38 = v33;
    *(_DWORD *)v21 = 136446466;
    v34 = v21 + 4;
    sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v36 = a1;
    v22 = sub_2362CBBC0();
    v37 = sub_2362AB670(v22, v23, &v38);
    v32 = v19;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v34 = a2;
    v24 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v24(v14, v6);
    *(_WORD *)(v21 + 12) = 2082;
    a1 = v36;
    v25 = sub_2362CBBC0();
    v37 = sub_2362AB670(v25, v26, &v38);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v24(v11, v6);
    _os_log_impl(&dword_23624C000, v17, (os_log_type_t)v32, "begin monitoring extension %{public}s monitor %{public}s", (uint8_t *)v21, 0x16u);
    v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v27, -1, -1);
    MEMORY[0x23B7EF258](v21, -1, -1);
  }
  else
  {
    v28 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v28(v14, v6);
    v28(v11, v6);
  }

  v29 = (void *)sub_2362CB3F8();
  v30 = (void *)sub_2362CB3F8();
  objc_msgSend(a1, sel_beginMonitoringForExtensionUUID_monitorUUID_, v29, v30);

}

uint64_t sub_2362788C0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  unsigned int (*v47)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  char v51;
  void (*v52)(_BYTE *, uint64_t);
  uint64_t v53;
  uint64_t result;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v60)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v61)(_QWORD, _QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  char v80;
  void (*v81)(_BYTE *, uint64_t);
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[16];
  uint64_t v86;
  unsigned int (*v87)(_QWORD, _QWORD, _QWORD);
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  unint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE v105[16];
  char v106[8];
  uint64_t v107;
  uint64_t v108;

  v108 = sub_2362CB428();
  v6 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108, v7);
  v89 = &v85[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A51B0);
  v10 = MEMORY[0x24BDAC7A8](v102, v9);
  v90 = &v85[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10, v12);
  v96 = &v85[-v13];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v92 = &v85[-v23];
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = &v85[-v26];
  MEMORY[0x24BDAC7A8](v25, v28);
  v33 = *a1;
  v95 = *(_QWORD *)(*a1 + 16);
  if (!v95)
    return 0;
  v103 = &v85[-v29];
  v86 = v32;
  v91 = v31;
  v88 = (_BYTE *)v30;
  v104 = v6;
  v93 = a1;
  swift_bridgeObjectRetain();
  v101 = a2;
  ObjectType = swift_getObjectType();
  v35 = 0;
  v36 = 0;
  v98 = *(void (**)(uint64_t, uint64_t))(a3 + 8);
  v99 = ObjectType;
  v37 = v33;
  v94 = v33;
  v100 = a3;
  while (1)
  {
    if (MEMORY[0x23B7EF2F4](v37 + v35 + 32))
    {
      v39 = *(_QWORD *)(v37 + v35 + 40);
      v40 = swift_getObjectType();
      v41 = v103;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v39);
      swift_unknownObjectRelease();
      v42 = v104;
      v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56);
      v43((uint64_t)v41, 0, 1, v108);
    }
    else
    {
      v41 = v103;
      v42 = v104;
      v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56);
      v43((uint64_t)v103, 1, 1, v108);
    }
    v98(v99, v100);
    v44 = v108;
    v97 = v43;
    v43((uint64_t)v27, 0, 1, v108);
    v45 = v96;
    v46 = (uint64_t)&v96[*(int *)(v102 + 48)];
    sub_236279974((uint64_t)v41, (uint64_t)v96);
    sub_236279974((uint64_t)v27, v46);
    v47 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48);
    if (v47(v45, 1, v44) == 1)
      break;
    v48 = v92;
    sub_236279974((uint64_t)v45, (uint64_t)v92);
    if (v47((_BYTE *)v46, 1, v108) != 1)
    {
      v87 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v47;
      v49 = v104;
      v50 = v89;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v104 + 32))(v89, v46, v108);
      sub_23624E3C4(&qword_2542A51C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v51 = sub_2362CB650();
      v52 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
      v53 = v108;
      v52(v50, v108);
      sub_23625B4F8((uint64_t)v27, &qword_2542A5220);
      sub_23625B4F8((uint64_t)v103, &qword_2542A5220);
      v52(v48, v53);
      sub_23625B4F8((uint64_t)v96, &qword_2542A5220);
      v37 = v94;
      if ((v51 & 1) != 0)
        goto LABEL_17;
      goto LABEL_5;
    }
    sub_23625B4F8((uint64_t)v27, &qword_2542A5220);
    sub_23625B4F8((uint64_t)v103, &qword_2542A5220);
    (*(void (**)(_BYTE *, uint64_t))(v104 + 8))(v48, v108);
    v37 = v94;
LABEL_4:
    sub_23625B4F8((uint64_t)v45, (uint64_t *)&unk_2542A51B0);
LABEL_5:
    ++v36;
    v35 += 16;
    if (v95 == v36)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v37 + 16);
    }
  }
  sub_23625B4F8((uint64_t)v27, &qword_2542A5220);
  sub_23625B4F8((uint64_t)v41, &qword_2542A5220);
  v38 = v47((_BYTE *)v46, 1, v108);
  v37 = v94;
  if (v38 != 1)
    goto LABEL_4;
  v87 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v47;
  sub_23625B4F8((uint64_t)v45, &qword_2542A5220);
LABEL_17:
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v36, 1))
    goto LABEL_54;
  v55 = *(_QWORD *)(v37 + 16);
  if (v36 + 1 == v55)
    return v36;
  v56 = v35 + 48;
  v57 = v36 + 1;
  v58 = v86;
  v59 = v97;
  v60 = v87;
  while (2)
  {
    if (v57 < v55)
    {
      sub_23626B698(v37 + v56, (uint64_t)v106);
      v61 = v60;
      if (MEMORY[0x23B7EF2F4](v106))
      {
        v62 = v107;
        v63 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v62);
        swift_unknownObjectRelease();
        v64 = 0;
      }
      else
      {
        v64 = 1;
      }
      v65 = v108;
      v59(v58, v64, 1, v108);
      v66 = v59;
      v67 = v58;
      v68 = v91;
      v98(v99, v100);
      v66(v68, 0, 1, v65);
      v69 = v90;
      v70 = (uint64_t)&v90[*(int *)(v102 + 48)];
      sub_236279974(v67, (uint64_t)v90);
      sub_236279974(v68, v70);
      v71 = v65;
      v60 = v61;
      if (v61(v69, 1, v71) == 1)
      {
        sub_23625B4F8(v68, &qword_2542A5220);
        sub_23625B4F8(v67, &qword_2542A5220);
        v72 = v61(v70, 1, v108);
        v58 = v67;
        v59 = v97;
        if (v72 == 1)
        {
          sub_23625B4F8((uint64_t)v69, &qword_2542A5220);
          result = sub_236264B94((uint64_t)v106);
LABEL_41:
          v77 = v57 + 1;
          if (__OFADD__(v57, 1))
            goto LABEL_47;
          v37 = *v93;
          v55 = *(_QWORD *)(*v93 + 16);
          ++v57;
          v56 += 16;
          if (v77 == v55)
            return v36;
          continue;
        }
LABEL_30:
        sub_23625B4F8((uint64_t)v69, (uint64_t *)&unk_2542A51B0);
        result = sub_236264B94((uint64_t)v106);
      }
      else
      {
        v73 = (uint64_t)v88;
        sub_236279974((uint64_t)v69, (uint64_t)v88);
        if (v60(v70, 1, v108) == 1)
        {
          sub_23625B4F8(v91, &qword_2542A5220);
          v58 = v86;
          sub_23625B4F8(v86, &qword_2542A5220);
          (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v73, v108);
          v59 = v97;
          goto LABEL_30;
        }
        v78 = v104;
        v79 = v89;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v104 + 32))(v89, v70, v108);
        sub_23624E3C4(&qword_2542A51C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v80 = sub_2362CB650();
        v81 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
        v82 = v79;
        v83 = v108;
        v81(v82, v108);
        sub_23625B4F8(v91, &qword_2542A5220);
        v58 = v86;
        sub_23625B4F8(v86, &qword_2542A5220);
        v84 = v83;
        v60 = v87;
        v81(v88, v84);
        sub_23625B4F8((uint64_t)v90, &qword_2542A5220);
        result = sub_236264B94((uint64_t)v106);
        v59 = v97;
        if ((v80 & 1) != 0)
          goto LABEL_41;
      }
      if (v57 != v36)
      {
        if ((v36 & 0x8000000000000000) != 0)
          goto LABEL_49;
        v74 = *v93;
        v75 = *(_QWORD *)(*v93 + 16);
        if (v36 >= v75)
          goto LABEL_50;
        result = sub_23626B698(v74 + 16 * v36 + 32, (uint64_t)v106);
        if (v57 >= v75)
          goto LABEL_51;
        sub_23626B698(v74 + v56, (uint64_t)v105);
        result = swift_isUniquelyReferenced_nonNull_native();
        *v93 = v74;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_2362B5FB4(v74);
          v74 = result;
          *v93 = result;
        }
        if (v36 >= *(_QWORD *)(v74 + 16))
          goto LABEL_52;
        result = sub_23626B708((uint64_t)v105, v74 + 16 * v36 + 32);
        if (v57 >= *(_QWORD *)(*v93 + 16))
          goto LABEL_53;
        result = sub_23626B708((uint64_t)v106, *v93 + v56);
      }
      if (__OFADD__(v36++, 1))
        goto LABEL_48;
      goto LABEL_41;
    }
    break;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

id sub_236279120(void *a1)
{
  _BYTE *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  v1[OBJC_IVAR___APExtensionSubjectMonitorRegistry_lastLockedState] = 2;
  *(_QWORD *)&v1[OBJC_IVAR___APExtensionSubjectMonitorRegistry_extensionSubject] = a1;
  v3 = objc_allocWithZone(MEMORY[0x24BDD1880]);
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v3, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR___APExtensionSubjectMonitorRegistry_nsuuid] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A51F8);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 28) = 0;
  *(_QWORD *)(v7 + 16) = MEMORY[0x24BEE4AF8];
  *(_WORD *)(v7 + 24) = 0;
  *(_QWORD *)&v4[OBJC_IVAR___APExtensionSubjectMonitorRegistry_state] = v7;

  v9.receiver = v4;
  v9.super_class = (Class)APExtensionSubjectMonitorRegistry;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_2362791F4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x23B7EE7E4](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_2362CBB18();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_2362792E0(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_2362791F4(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_54;
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v25 = sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (v9 != v25)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v6 + 5; ; ++i)
      {
        v11 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
          break;
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        if (*(_QWORD *)(v12 + 8 * i) != a2)
          goto LABEL_11;
LABEL_31:
        v9 = i - 3;
        if (__OFADD__(v11, 1))
          goto LABEL_46;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v21 = sub_2362CBB18();
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v21)
          return v6;
      }
      v22 = MEMORY[0x23B7EE7E4](i - 4);
      swift_unknownObjectRelease();
      if (v22 == a2)
        goto LABEL_31;
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1))
          goto LABEL_47;
        goto LABEL_31;
      }
      v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v13 = (id)MEMORY[0x23B7EE7E4](v6, *a1);
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v14 = *(id *)(v9 + 8 * i);
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v13 = *(id *)(v9 + 8 * v6 + 32);
        if ((v9 & 0xC000000000000001) == 0)
          goto LABEL_16;
      }
      v14 = (id)MEMORY[0x23B7EE7E4](i - 4, v9);
      v9 = *a1;
LABEL_19:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_2362B5F88(v9);
      }
      v16 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;

      sub_2362CB770();
      v9 = *a1;
      v17 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v17 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
        sub_2362B5F88(v9);
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_52;
      v18 = v9 & 0xFFFFFFFFFFFFFF8;
      if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      v19 = *(void **)(v18 + 8 * i);
      *(_QWORD *)(v18 + 8 * i) = v13;

      sub_2362CB770();
      goto LABEL_30;
    }
    return v6;
  }
  v23 = *a1;
  if (!(v23 >> 62))
    return *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v26 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_2362795F8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t aBlock;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v2 = sub_2362CB428();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_isEffectivelyLocked))
    return 0;
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 1;
  v19 = sub_2362781C0;
  v20 = 0;
  v8 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_2362C96F0;
  v18 = &block_descriptor_7;
  v9 = _Block_copy(&aBlock);
  swift_release();
  v10 = APGetSyncExtensionInfoProxy(v9);
  _Block_release(v9);
  sub_2362CB410();
  v11 = (void *)sub_2362CB3F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v19 = sub_2362797FC;
  v20 = v7;
  aBlock = v8;
  v16 = 1107296256;
  v17 = sub_23624E1A0;
  v18 = &block_descriptor_5_0;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_extensionRequiresAuthentication_completion_, v11, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  swift_beginAccess();
  v13 = *(unsigned __int8 *)(v7 + 16);
  swift_release();
  return v13;
}

uint64_t sub_2362797EC()
{
  return swift_deallocObject();
}

uint64_t sub_2362797FC(char a1, void *a2)
{
  uint64_t v2;

  return sub_236278314(a1, a2, v2);
}

uint64_t sub_236279804()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_236279828()
{
  uint64_t v0;

  sub_236277FFC(*(void **)(v0 + 16));
}

uint64_t sub_236279830()
{
  return swift_deallocObject();
}

uint64_t sub_236279840()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_236279864()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236279888()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 16))(1, 0);
}

uint64_t sub_2362798B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362798D4(char a1, void *a2)
{
  uint64_t v2;

  return sub_236277E80(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2362798E0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23627990C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_236279938()
{
  return swift_deallocObject();
}

uint64_t sub_236279948()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23627996C()
{
  return sub_236275448();
}

uint64_t sub_236279974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2362799BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_236276CD0(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_2362799D4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for WeakMonitorReference(a2, a1);
  return a2;
}

uint64_t sub_236279A10(uint64_t a1)
{
  destroy for APAppInstallationManager.State.ReferenceHolder();
  return a1;
}

void sub_236279A44(unint64_t *a1)
{
  uint64_t v1;

  sub_236276E7C(a1, *(void **)(v1 + 16));
}

uint64_t sub_236279A5C(uint64_t a1)
{
  uint64_t v1;

  return sub_236275D88(a1, *(char **)(v1 + 16)) & 1;
}

uint64_t _s5StateVwxx_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwCP_0_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s5StateVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t _s5StateVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5StateVMa_0()
{
  return &_s5StateVN_0;
}

ValueMetadata *type metadata accessor for ServerBackedExtensionMonitorRegistry.WeakExtensionObserver()
{
  return &type metadata for ServerBackedExtensionMonitorRegistry.WeakExtensionObserver;
}

uint64_t sub_236279C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_2362CB218();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v9 = sub_2362CB494();
  __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v10 = sub_2362CB47C();
  v11 = sub_2362CB848();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v19 = v1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v13 = 136315138;
    v20 = a1;
    sub_23624E3C4((unint64_t *)&qword_2563D3E30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB930], MEMORY[0x24BDCB950]);
    v15 = sub_2362CBBC0();
    v21 = sub_2362AB670(v15, v16, &v22);
    a1 = v20;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl(&dword_23624C000, v10, v11, "received note: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v14, -1, -1);
    v17 = v13;
    v2 = v19;
    MEMORY[0x23B7EF258](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  return (*(uint64_t (**)(uint64_t))(v2 + OBJC_IVAR____TtC13AppProtection28NotificationReceiverObjCShim_callback))(a1);
}

uint64_t type metadata accessor for NotificationReceiverObjCShim()
{
  return objc_opt_self();
}

uint64_t sub_236279F8C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_2362CB86C();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v0, v2);
  v3 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_2362CB878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625DAF8();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5758], v5);
  sub_2362CB578();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v1, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23625DB7C();
  sub_2362CB9F8();
  result = sub_2362CB8B4();
  qword_2563D4120 = result;
  return result;
}

void sub_23627A130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  void *v7;
  _QWORD v8[6];

  v1 = v0;
  if (qword_2563D4178 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB848();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23624C000, v3, v4, "resuming distnoted translator", v5, 2u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  if (qword_2563D4130 != -1)
    swift_once();
  v6 = qword_2563D4120;
  v8[4] = sub_23627A810;
  v8[5] = v1;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_236281684;
  v8[3] = &block_descriptor_8;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.distnoted.matching", v6, v7);
  _Block_release(v7);
}

uint64_t sub_23627A2AC(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[4];

  v37 = a2;
  v3 = sub_2362CB218();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v8 = sub_2362CB494();
  __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
  swift_unknownObjectRetain_n();
  v9 = sub_2362CB47C();
  v10 = sub_2362CB848();
  if (os_log_type_enabled(v9, v10))
  {
    v34 = v8;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v39[0] = v12;
    v36 = v7;
    *(_DWORD *)v11 = 136315138;
    v33 = (uint64_t)(v11 + 4);
    v13 = swift_unknownObjectRetain();
    v14 = (void *)MEMORY[0x23B7EF474](v13);
    v15 = v3;
    v16 = sub_2362CB734();
    v35 = v4;
    v18 = v17;
    free(v14);
    swift_unknownObjectRelease();
    v19 = v16;
    v3 = v15;
    v8 = v34;
    v38 = sub_2362AB670(v19, v18, v39);
    v7 = v36;
    sub_2362CB9C8();
    swift_unknownObjectRelease_n();
    v4 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v9, v10, "Received distnoted event %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v12, -1, -1);
    MEMORY[0x23B7EF258](v11, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  result = (uint64_t)xpc_dictionary_get_string(a1, "Name");
  if (result)
  {
    sub_2362CB734();
    if (xpc_dictionary_get_dictionary(a1, "UserInfo"))
    {
      result = _CFXPCCreateCFObjectFromXPCObject();
      if (!result)
      {
        __break(1u);
        return result;
      }
      v21 = result;
      v39[0] = result;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E48);
      if (swift_dynamicCast())
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        v36 = v7;
        if (qword_2542A53D0 != -1)
          swift_once();
        __swift_project_value_buffer(v8, (uint64_t)qword_2542A58F8);
        swift_unknownObjectRetain_n();
        v22 = sub_2362CB47C();
        v23 = sub_2362CB830();
        if (os_log_type_enabled(v22, v23))
        {
          v34 = v3;
          v24 = swift_slowAlloc();
          v35 = v4;
          v25 = (uint8_t *)v24;
          v33 = swift_slowAlloc();
          v38 = v21;
          v39[0] = v33;
          *(_DWORD *)v25 = 136315138;
          swift_unknownObjectRetain();
          v26 = sub_2362CB6EC();
          v38 = sub_2362AB670(v26, v27, v39);
          v3 = v34;
          sub_2362CB9C8();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23624C000, v22, v23, "unable to cast UserInfo to dictionary: %s", v25, 0xCu);
          v28 = v33;
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v28, -1, -1);
          v29 = v25;
          v4 = v35;
          MEMORY[0x23B7EF258](v29, -1, -1);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();
        }
        v7 = v36;
      }
    }
    sub_2362CB674();
    swift_bridgeObjectRelease();
    v39[3] = type metadata accessor for DistnotedXPCEventStreamTranslator();
    v30 = v37;
    v39[0] = v37;
    swift_retain();
    sub_2362CB1F4();
    v31 = *(void **)(v30 + 16);
    v32 = (void *)sub_2362CB1DC();
    objc_msgSend(v31, sel_postNotification_, v32);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

id sub_23627A7A0()
{
  uint64_t v0;
  id result;

  type metadata accessor for DistnotedXPCEventStreamTranslator();
  v0 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init);
  *(_QWORD *)(v0 + 16) = result;
  qword_2563DB5D0 = v0;
  return result;
}

uint64_t type metadata accessor for DistnotedXPCEventStreamTranslator()
{
  return objc_opt_self();
}

uint64_t sub_23627A810(void *a1)
{
  uint64_t v1;

  return sub_23627A2AC(a1, v1);
}

uint64_t type metadata accessor for WeakReferenceRegistry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakReferenceRegistry);
}

unint64_t APDataSetAccessGrantReason.description.getter(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xD00000000000001ELL;
  if (a1 <= 1)
  {
    if (!a1)
      return 0xD000000000000022;
    if (a1 == 1)
      return v1;
    goto LABEL_8;
  }
  if (a1 == 2)
    return 0xD00000000000002ELL;
  if (a1 != 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_8:
    sub_2362CBA58();
    swift_bridgeObjectRelease();
    sub_2362CBBC0();
    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
    return 0xD000000000000023;
  }
  return 0xD000000000000020;
}

unint64_t sub_23627A940()
{
  uint64_t *v0;

  return APDataSetAccessGrantReason.description.getter(*v0);
}

uint64_t sub_23627A948()
{
  uint64_t result;

  result = sub_23627A968();
  byte_2563DB670 = result & 1;
  return result;
}

uint64_t sub_23627A968()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v0 = xpc_copy_entitlement_for_self();
  if (!v0)
  {
    v3 = 0;
    return v3 & 1;
  }
  v1 = (void *)v0;
  v2 = MEMORY[0x23B7EF594]();
  if (v2 != sub_2362CB4C4())
  {
    v3 = 0;
LABEL_11:
    swift_unknownObjectRelease();
    return v3 & 1;
  }
  v4 = swift_unknownObjectRetain();
  v5 = MEMORY[0x23B7EF594](v4);
  if (v5 == sub_2362CB4C4())
  {
    if (xpc_string_get_string_ptr(v1))
    {
      v6 = sub_2362CB734();
      v8 = v7;
      swift_unknownObjectRelease();
      if (v6 == 0xD000000000000015 && v8 == 0x80000002362D6140)
      {
        swift_bridgeObjectRelease();
        v3 = 1;
      }
      else
      {
        v3 = sub_2362CBBE4();
        swift_bridgeObjectRelease();
      }
      goto LABEL_11;
    }
    __break(1u);
  }
  result = sub_2362CBB00();
  __break(1u);
  return result;
}

id sub_23627AAC4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)APGuard), sel_init);
  qword_2542A52E0 = (uint64_t)result;
  return result;
}

uint64_t sub_23627AAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t result;
  _QWORD v6[2];

  v0 = sub_2362CB878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2362CB86C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8]();
  sub_2362CB590();
  MEMORY[0x24BDAC7A8]();
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  v6[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v4, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_2362CB8B4();
  qword_2542A58F0 = result;
  return result;
}

void sub_23627AD00(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[2];
  __int128 aBlock;
  __int128 v25;
  uint64_t (*v26)();
  uint64_t v27;

  v4 = v3;
  v8 = sub_2362CB560();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2362CB590();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8]();
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isLocked))
  {
    aBlock = 0u;
    v25 = 0u;
    LOBYTE(v26) = 1;
    sub_23627E89C(a1, (uint64_t)&aBlock, a2, a3);
  }
  else
  {
    if (!objc_msgSend(a1, sel_isEffectivelyLocked))
      goto LABEL_12;
    if (qword_2563D69F0 != -1)
      swift_once();
    if (byte_2563DB670 == 1)
    {
      if (qword_2542A53D0 != -1)
        swift_once();
      v16 = sub_2362CB494();
      __swift_project_value_buffer(v16, (uint64_t)qword_2542A58F8);
      v17 = sub_2362CB47C();
      v18 = sub_2362CB848();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_23624C000, v17, v18, "authenticating for dismissal for effectively locked application", v19, 2u);
        MEMORY[0x23B7EF258](v19, -1, -1);
      }

      v26 = (uint64_t (*)())a2;
      v27 = a3;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v25 = sub_23624E1A0;
      *((_QWORD *)&v25 + 1) = &block_descriptor_222;
      v20 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v4, sel_authenticateForShieldDismissalForSubject_completion_, a1, v20);
      _Block_release(v20);
    }
    else
    {
LABEL_12:
      v23[0] = v9;
      if (qword_2542A51E0 != -1)
        swift_once();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = a2;
      *(_QWORD *)(v21 + 24) = a3;
      v26 = sub_236279888;
      v27 = v21;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v25 = sub_23624E13C;
      *((_QWORD *)&v25 + 1) = &block_descriptor_219;
      v22 = _Block_copy(&aBlock);
      swift_retain();
      sub_2362CB578();
      v23[1] = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v15, v11, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v23[0] + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_release();
    }
  }
}

void sub_23627B184(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  void *v30;
  _QWORD *v31;

  v14 = swift_allocObject();
  v23 = a2;
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  v30 = sub_236280F10;
  v31 = (_QWORD *)v14;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_2362C96F0;
  v29 = &block_descriptor_199;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v21 = APGetAsyncGuardProxy(v15);
  _Block_release(v15);
  v22 = a4;
  v16 = objc_msgSend(a4, sel_effectiveBundleIdentifier);
  if (!v16)
  {
    sub_2362CB698();
    v16 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = a4;
  v17[7] = v23;
  v17[8] = a3;
  v30 = sub_236280D60;
  v31 = v17;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_2362BE888;
  v29 = &block_descriptor_205;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  v19 = v22;
  swift_release();
  objc_msgSend(v21, sel_initiateAuthenticationWithShieldingForBundle_onBehalfOfProcessWithAuditToken_accessGrantReason_completion_, v16, a1, a5, v18);
  _Block_release(v18);
  swift_unknownObjectRelease();

}

uint64_t sub_23627B398(id a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t (*a7)(_QWORD, _QWORD))
{
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  unsigned int v32;
  uint64_t v33;
  id v34;
  unsigned int v36;
  _QWORD *v37;
  uint64_t (*v38)(_QWORD, _QWORD);
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  audit_token_t atoken;

  v9 = a5;
  v10 = a4;
  v11 = a3;
  v12 = a2;
  v41 = HIDWORD(a2);
  v42 = HIDWORD(a3);
  v43 = HIDWORD(a4);
  v14 = HIDWORD(a5);
  if (a1)
  {
    v39 = HIDWORD(a5);
    v36 = a5;
    v15 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2542A58F8);
    v17 = a6;
    v18 = a1;
    v19 = v17;
    v20 = a1;
    v21 = sub_2362CB47C();
    v22 = sub_2362CB830();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 67109634;
      v38 = a7;
      atoken.val[0] = v12;
      atoken.val[1] = v41;
      atoken.val[2] = v11;
      atoken.val[3] = v42;
      atoken.val[4] = v10;
      atoken.val[5] = v43;
      atoken.val[6] = v36;
      atoken.val[7] = v39;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v23 + 8) = 2112;
      *(_QWORD *)atoken.val = v19;
      v25 = v19;
      sub_2362CB9C8();
      *v24 = v19;

      *(_WORD *)(v23 + 18) = 2112;
      v26 = a1;
      v27 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)atoken.val = v27;
      sub_2362CB9C8();
      v24[1] = v27;
      a7 = v38;

      _os_log_impl(&dword_23624C000, v21, v22, "could not mark %d as accessing %@: %@", (uint8_t *)v23, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v24, -1, -1);
      MEMORY[0x23B7EF258](v23, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v28 = sub_2362CB494();
    __swift_project_value_buffer(v28, (uint64_t)qword_2542A58F8);
    v29 = a6;
    v30 = sub_2362CB47C();
    v31 = sub_2362CB848();
    if (os_log_type_enabled(v30, v31))
    {
      v40 = v14;
      v32 = v9;
      v33 = swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = 67109378;
      atoken.val[0] = v12;
      atoken.val[1] = v41;
      atoken.val[2] = v11;
      atoken.val[3] = v42;
      atoken.val[4] = v10;
      atoken.val[5] = v43;
      atoken.val[6] = v32;
      atoken.val[7] = v40;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v33 + 8) = 2112;
      *(_QWORD *)atoken.val = v29;
      v34 = v29;
      sub_2362CB9C8();
      *v37 = v29;

      _os_log_impl(&dword_23624C000, v30, v31, "notified %d as accessing %@", (uint8_t *)v33, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v37, -1, -1);
      MEMORY[0x23B7EF258](v33, -1, -1);

    }
    else
    {

    }
  }
  return a7(a1 == 0, a1);
}

void sub_23627B8BC(void (*a1)(id, _QWORD))
{
  id v2;

  sub_23625B534(0, (unint64_t *)&qword_2563D6478);
  v2 = (id)sub_2362CB98C();
  a1(v2, 0);

}

void sub_23627BA68(void *a1, int a2, void *a3, void *aBlock, void (*a5)(id, void *))
{
  void *v8;
  id v9;
  id v10;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  a5(v9, v8);
  _Block_release(v8);
  _Block_release(v8);

}

void sub_23627BAE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, void *);
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v19 = sub_236280F10;
  v20 = v8;
  v9 = MEMORY[0x24BDAC760];
  v15 = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_2362C96F0;
  v18 = &block_descriptor_77;
  v10 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  v11 = APGetAsyncGuardProxy(v10);
  _Block_release(v10);
  v12 = objc_msgSend(a4, sel_effectiveBundleIdentifier);
  if (!v12)
  {
    sub_2362CB698();
    v12 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v19 = sub_236280C10;
  v20 = v13;
  v15 = v9;
  v16 = 1107296256;
  v17 = sub_2362BE888;
  v18 = &block_descriptor_83;
  v14 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_authenticateForBundle_interfacePresentationTarget_completion_, v12, a1, v14);
  _Block_release(v14);
  swift_unknownObjectRelease();

}

void sub_23627BC9C(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v5 = a1;

}

uint64_t sub_23627BD04(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v7;
  id v8;

  v7 = a3;
  v8 = a1;
  a5(v7);

  return 1;
}

void sub_23627BD9C(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  void *v19;
  id v20;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  void *v27;
  _QWORD *v28;

  v27 = sub_236280C60;
  v28 = a2;
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_2362C96F0;
  v26 = &block_descriptor_103;
  v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = APGetSyncGuardProxy(v13);
  _Block_release(v13);
  v19 = a3;
  v14 = objc_msgSend(a3, sel_effectiveBundleIdentifier);
  if (!v14)
  {
    sub_2362CB698();
    v14 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a8;
  v15[6] = a3;
  v15[7] = a2;
  v27 = sub_236280CBC;
  v28 = v15;
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_2362BE888;
  v26 = &block_descriptor_109;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  v17 = v19;
  swift_release();
  objc_msgSend(v20, sel_initiateAuthenticationWithShieldingForBundle_onBehalfOfProcessWithAuditToken_accessGrantReason_completion_, v14, a1, a4, v16);
  _Block_release(v16);
  swift_unknownObjectRelease();

}

void sub_23627BF8C(id a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t a7)
{
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  unsigned int v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  unsigned int v40;
  NSObject *log;
  os_log_t loga;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  audit_token_t atoken;

  v9 = a5;
  v10 = a4;
  v11 = a3;
  v12 = a2;
  v44 = HIDWORD(a2);
  v45 = HIDWORD(a3);
  v46 = HIDWORD(a4);
  v14 = HIDWORD(a5);
  if (a1)
  {
    v15 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2542A58F8);
    v17 = a6;
    v18 = a1;
    v19 = v17;
    v20 = a1;
    v21 = sub_2362CB47C();
    v22 = sub_2362CB830();
    if (os_log_type_enabled(v21, v22))
    {
      log = v21;
      v23 = v9;
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v26 = v14;
      v27 = (_QWORD *)v25;
      *(_DWORD *)v24 = 67109634;
      v43 = a7;
      atoken.val[0] = v12;
      atoken.val[1] = v44;
      atoken.val[2] = v11;
      atoken.val[3] = v45;
      atoken.val[4] = v10;
      atoken.val[5] = v46;
      atoken.val[6] = v23;
      atoken.val[7] = v26;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v24 + 8) = 2112;
      *(_QWORD *)atoken.val = v19;
      v28 = v19;
      sub_2362CB9C8();
      *v27 = v19;

      *(_WORD *)(v24 + 18) = 2112;
      v29 = a1;
      v30 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)atoken.val = v30;
      sub_2362CB9C8();
      v27[1] = v30;
      a7 = v43;

      _os_log_impl(&dword_23624C000, log, v22, "could not mark %d as accessing %@: %@", (uint8_t *)v24, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v27, -1, -1);
      MEMORY[0x23B7EF258](v24, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v31 = sub_2362CB494();
    __swift_project_value_buffer(v31, (uint64_t)qword_2542A58F8);
    v32 = a6;
    v33 = sub_2362CB47C();
    v34 = sub_2362CB848();
    if (os_log_type_enabled(v33, v34))
    {
      v40 = v14;
      v35 = v9;
      v36 = swift_slowAlloc();
      loga = (os_log_t)swift_slowAlloc();
      *(_DWORD *)v36 = 67109378;
      atoken.val[0] = v12;
      atoken.val[1] = v44;
      atoken.val[2] = v11;
      atoken.val[3] = v45;
      atoken.val[4] = v10;
      atoken.val[5] = v46;
      atoken.val[6] = v35;
      atoken.val[7] = v40;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_2362CB9C8();
      *(_WORD *)(v36 + 8) = 2112;
      *(_QWORD *)atoken.val = v32;
      v37 = v32;
      sub_2362CB9C8();
      loga->isa = (Class)v32;

      _os_log_impl(&dword_23624C000, v33, v34, "marked %d as accessing %@", (uint8_t *)v36, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](loga, -1, -1);
      MEMORY[0x23B7EF258](v36, -1, -1);

    }
    else
    {

    }
  }
  swift_beginAccess();
  v38 = *(void **)(a7 + 16);
  *(_QWORD *)(a7 + 16) = a1;
  v39 = a1;

}

id sub_23627C53C(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

void sub_23627C58C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v6 = a2;

}

uint64_t sub_23627C750(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  void *v9;
  uint64_t v10;
  id v11;

  v9 = _Block_copy(aBlock);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = a1;
  a6(a5, v10);

  return swift_release();
}

void sub_23627C7C8(uint64_t a1, uint64_t (*a2)(), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  uint64_t (*v15)();
  uint64_t v16;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v15 = sub_236253F0C;
  v16 = v5;
  v6 = MEMORY[0x24BDAC760];
  v11 = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_2362C96F0;
  v14 = &block_descriptor_9;
  v7 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  v8 = APGetAsyncGuardProxy(v7);
  _Block_release(v7);
  v9 = (void *)sub_2362CB3F8();
  v15 = a2;
  v16 = a3;
  v11 = v6;
  v12 = 1107296256;
  v13 = sub_2362BE888;
  v14 = &block_descriptor_12_0;
  v10 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_endTransactionWithUUID_completion_, v9, v10);
  _Block_release(v10);
  swift_unknownObjectRelease();

}

void sub_23627C90C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_2362CB428();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v33 - v11;
  if (a1)
  {
    v13 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v14 = sub_2362CB494();
    __swift_project_value_buffer(v14, (uint64_t)qword_2542A58F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, a2, v4);
    v15 = a1;
    v16 = a1;
    v17 = sub_2362CB47C();
    v18 = sub_2362CB830();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v36 = v34;
      *(_DWORD *)v19 = 136315394;
      sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v20 = sub_2362CBBC0();
      v35 = sub_2362AB670(v20, v21, &v36);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      *(_WORD *)(v19 + 12) = 2112;
      v22 = a1;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      v35 = v23;
      sub_2362CB9C8();
      v24 = v33;
      *v33 = v23;

      _os_log_impl(&dword_23624C000, v17, v18, "could not invalidate assertion %s: %@", (uint8_t *)v19, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v24, -1, -1);
      v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v25, -1, -1);
      MEMORY[0x23B7EF258](v19, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v26 = sub_2362CB494();
    __swift_project_value_buffer(v26, (uint64_t)qword_2542A58F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, a2, v4);
    v27 = sub_2362CB47C();
    v28 = sub_2362CB848();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v36 = v30;
      *(_DWORD *)v29 = 136315138;
      sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v31 = sub_2362CBBC0();
      v35 = sub_2362AB670(v31, v32, &v36);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
      _os_log_impl(&dword_23624C000, v27, v28, "invalidated assertion %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v30, -1, -1);
      MEMORY[0x23B7EF258](v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }

  }
}

void sub_23627CE3C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_23627CFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_2362CB2D8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_23627D028(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock;
  uint64_t v35;
  void (*v36)(uint64_t, void *);
  void *v37;
  void *v38;
  uint64_t v39;

  v33 = a5;
  v32 = a1;
  v10 = sub_2362CB428();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  v30 = a2;
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v38 = sub_236274218;
  v39 = v15;
  aBlock = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_2362C96F0;
  v37 = &block_descriptor_33;
  v16 = _Block_copy(&aBlock);
  v29 = a3;
  swift_retain();
  swift_release();
  v28 = APGetAsyncGuardProxy(v16);
  _Block_release(v16);
  v31 = a4;
  v17 = objc_msgSend(a4, sel_effectiveBundleIdentifier);
  if (!v17)
  {
    sub_2362CB698();
    v17 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v18 = (void *)sub_2362CB3F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v10);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v19, v14, v10);
  v22 = (_QWORD *)(v21 + v20);
  v23 = v29;
  *v22 = v30;
  v22[1] = v23;
  v24 = v31;
  *(_QWORD *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v31;
  v38 = sub_236280B34;
  v39 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_2362BE888;
  v37 = &block_descriptor_39;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  v26 = v24;
  swift_release();
  objc_msgSend(v28, sel_beginTransactionForAccessOfBundle_onBehalfOfProcessWithAuditToken_accessGrantReason_transactionUUID_completion_, v17, v32, v33, v18, v25);
  _Block_release(v25);
  swift_unknownObjectRelease();

}

void sub_23627D2A4(void *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  _QWORD *v40;
  id v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;

  v10 = sub_2362CB428();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2542A58F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
    v17 = a1;
    v18 = a1;
    v19 = sub_2362CB47C();
    v20 = sub_2362CB830();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v45 = a4;
      v22 = v21;
      v43 = (_QWORD *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v48 = v44;
      *(_DWORD *)v22 = 136315394;
      v46 = a3;
      sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v23 = sub_2362CBBC0();
      v47 = sub_2362AB670(v23, v24, &v48);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      *(_WORD *)(v22 + 12) = 2112;
      v25 = a1;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      v47 = v26;
      sub_2362CB9C8();
      v27 = v43;
      *v43 = v26;
      a3 = v46;

      _os_log_impl(&dword_23624C000, v19, v20, "failed to acquire assertion %s: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v27, -1, -1);
      v28 = v44;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v28, -1, -1);
      MEMORY[0x23B7EF258](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);

    }
    v41 = a1;
    a3(0, a1);

  }
  else
  {
    v29 = a5;
    v30 = (void *)sub_2362CB3F8();
    v31 = objc_msgSend(objc_allocWithZone((Class)APSubjectAccessAssertion), sel_initWithSubject_uuid_, v29, v30);

    if (qword_2542A53D0 != -1)
      swift_once();
    v32 = sub_2362CB494();
    __swift_project_value_buffer(v32, (uint64_t)qword_2542A58F8);
    v33 = v31;
    v34 = sub_2362CB47C();
    v35 = sub_2362CB848();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v46 = a3;
      v38 = (_QWORD *)v37;
      *(_DWORD *)v36 = 138412290;
      v48 = (uint64_t)v33;
      v39 = v33;
      sub_2362CB9C8();
      *v38 = v33;

      _os_log_impl(&dword_23624C000, v34, v35, "acquired assertion %@", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      v40 = v38;
      a3 = v46;
      MEMORY[0x23B7EF258](v40, -1, -1);
      MEMORY[0x23B7EF258](v36, -1, -1);

    }
    else
    {

    }
    v42 = v33;
    a3(v33, 0);

  }
}

id sub_23627D80C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  id v25;
  _QWORD *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t, char *, uint64_t);
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint8_t *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  id v47;
  objc_super v48;

  v1 = sub_2362CB428();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v5 = MEMORY[0x24BDAC7A8](v1, v4);
  v44 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v40 - v8;
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v40 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v40 - v15;
  v46 = v0;
  v17 = *(uint64_t (**)(uint64_t))(**(_QWORD **)&v0[OBJC_IVAR___APSubjectAccessAssertion_invalidated] + 136);
  v18 = swift_retain();
  LOBYTE(v17) = atomic_load((unsigned __int8 *)v17(v18));
  swift_release();
  if ((v17 & 1) == 0)
  {
    v42 = v13;
    if (qword_2542A53D0 != -1)
      swift_once();
    v45 = v9;
    v19 = sub_2362CB494();
    __swift_project_value_buffer(v19, (uint64_t)qword_2542A58F8);
    v20 = v46;
    v21 = sub_2362CB47C();
    v22 = sub_2362CB83C();
    v23 = os_log_type_enabled(v21, v22);
    v43 = v2;
    if (v23)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v40 = v24 + 4;
      v47 = v20;
      v25 = v20;
      sub_2362CB9C8();
      v26 = v41;
      *v41 = v20;

      v2 = v43;
      _os_log_impl(&dword_23624C000, v21, v22, "deallocating valid assertion %@!", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v26, -1, -1);
      MEMORY[0x23B7EF258](v24, -1, -1);

    }
    else
    {

    }
    sub_2362CB410();
    v27 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v28 = v42;
    v27(v42, v16, v1);
    v27(v45, v28, v1);
    v29 = v16;
    v30 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v31 = v1;
    v32 = swift_allocObject();
    v33 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v33(v32 + v30, v28, v1);
    v34 = v44;
    v27(v44, v29, v1);
    v35 = swift_allocObject();
    v33(v35 + v30, v34, v1);
    v36 = (_QWORD *)swift_allocObject();
    v36[2] = 0;
    v36[3] = sub_23627E2A0;
    v36[4] = v32;
    v36[5] = sub_23627E2A8;
    v36[6] = v35;
    swift_retain();
    swift_retain();
    v37 = (uint64_t)v45;
    sub_23627C7C8((uint64_t)v45, sub_23627E2B0, (uint64_t)v36);
    swift_release();
    swift_release();
    v38 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v38(v37, v31);
    swift_release();
    v38((uint64_t)v29, v31);
  }
  v48.receiver = v46;
  v48.super_class = (Class)APSubjectAccessAssertion;
  return objc_msgSendSuper2(&v48, sel_dealloc);
}

unint64_t APSubjectAccessAssertion.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = v0;
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v0 + OBJC_IVAR___APSubjectAccessAssertion_subject);
  v3 = objc_msgSend(v2, sel_description);
  sub_2362CB698();

  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  v4 = *(id *)(v1 + OBJC_IVAR___APSubjectAccessAssertion_uuid);
  v5 = objc_msgSend(v4, sel_description);
  sub_2362CB698();

  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0xD000000000000022;
}

uint64_t sub_23627DDFC()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  id v45;

  v41 = sub_2362CB428();
  v1 = *(char **)(v41 - 8);
  v2 = *((_QWORD *)v1 + 8);
  v4 = MEMORY[0x24BDAC7A8](v41, v3);
  v42 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v44 = (char *)&v38 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v38 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  v43 = (char *)&v38 - v13;
  if (qword_2542A53D0 != -1)
    swift_once();
  v14 = sub_2362CB494();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542A58F8);
  v15 = v0;
  v16 = sub_2362CB47C();
  v17 = sub_2362CB848();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v18 = 138412290;
    v45 = v15;
    v19 = v15;
    v40 = v1;
    v20 = v11;
    v21 = v19;
    sub_2362CB9C8();
    v22 = v39;
    *v39 = v15;

    v11 = v20;
    v1 = v40;
    _os_log_impl(&dword_23624C000, v16, v17, "invalidating %@", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v22, -1, -1);
    MEMORY[0x23B7EF258](v18, -1, -1);

  }
  else
  {

  }
  v23 = v43;
  sub_2362CB410();
  v40 = v15;
  v24 = v1;
  v25 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v1 + 2);
  v26 = v41;
  v25(v11, v23, v41);
  v25(v44, v11, v26);
  v27 = (v24[80] + 16) & ~(unint64_t)v24[80];
  v28 = swift_allocObject();
  v29 = (void (*)(unint64_t, char *, uint64_t))*((_QWORD *)v24 + 4);
  v29(v28 + v27, v11, v26);
  v30 = v42;
  v25(v42, v23, v26);
  v31 = swift_allocObject();
  v29(v31 + v27, v30, v26);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = 0;
  v32[3] = sub_23627E2A0;
  v32[4] = v28;
  v32[5] = sub_23627E2A8;
  v32[6] = v31;
  swift_retain();
  swift_retain();
  v33 = (uint64_t)v44;
  sub_23627C7C8((uint64_t)v44, sub_23627E2B0, (uint64_t)v32);
  swift_release();
  swift_release();
  v34 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v24 + 1);
  v34(v33, v26);
  swift_release();
  v34((uint64_t)v23, v26);
  v35 = *(uint64_t (**)(uint64_t))(**(_QWORD **)&v40[OBJC_IVAR___APSubjectAccessAssertion_invalidated] + 136);
  v36 = swift_retain();
  atomic_store(1u, (unsigned __int8 *)v35(v36));
  return swift_release();
}

void __swiftcall APSubjectAccessAssertion.init()(APSubjectAccessAssertion *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void APSubjectAccessAssertion.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for APGuard(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7500);
}

uint64_t type metadata accessor for APSubjectAccessAssertion(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7510);
}

void sub_23627E2B8(uint64_t (*a1)(), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2362CB428() - 8) + 80);
  sub_23627C7C8(v2 + ((v5 + 16) & ~v5), a1, a2);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2362CB428();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_23627E368(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2362CB428() - 8) + 80);
  sub_23627C90C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23627E3D4(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __CFString *v25;
  __CFString *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  _QWORD v33[2];
  id v34;
  uint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  void *v39;
  void *v40;
  uint64_t v41;

  v4 = sub_2362CB560();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2362CB590();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  _Block_copy(a2);
  if (objc_msgSend(a1, sel_shieldable))
  {
    if ((objc_msgSend(a1, sel_isLocked) & 1) != 0)
    {
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = sub_236274D20;
      *(_QWORD *)(v15 + 24) = v14;
      v40 = sub_236280F10;
      v41 = v15;
      v16 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v37 = 1107296256;
      v38 = sub_2362C96F0;
      v39 = &block_descriptor_238;
      v17 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v18 = APGetAsyncGuardProxy(v17);
      _Block_release(v17);
      v19 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
      if (!v19)
      {
        sub_2362CB698();
        v19 = (id)sub_2362CB674();
        swift_bridgeObjectRelease();
      }
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_236274D20;
      *(_QWORD *)(v20 + 24) = v14;
      v40 = sub_236280D74;
      v41 = v20;
      aBlock = v16;
      v37 = 1107296256;
      v38 = sub_2362BE888;
      v39 = &block_descriptor_244;
      v21 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v18, sel_initiateAuthenticationWithShieldingForBundle_completion_, v19, v21);
      _Block_release(v21);
      swift_release();
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_2542A51E0 != -1)
        swift_once();
      v34 = (id)qword_2542A58F0;
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = sub_236274D20;
      *(_QWORD *)(v30 + 24) = v14;
      v40 = sub_236280F18;
      v41 = v30;
      aBlock = MEMORY[0x24BDAC760];
      v37 = 1107296256;
      v38 = (void (*)(uint64_t, void *))sub_23624E13C;
      v39 = &block_descriptor_232;
      v31 = _Block_copy(&aBlock);
      swift_retain();
      sub_2362CB578();
      v35 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      v33[1] = v14;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v13, v8, v31);
      _Block_release(v31);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      swift_release();
      swift_release();
    }
  }
  else
  {
    v22 = sub_2362CB698();
    v24 = v23;
    v25 = _APErrorCodeDescription(1uLL);
    if (v25)
    {
      v26 = v25;
      v27 = sub_2362CB698();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v32 = sub_236294D50(v22, v24, 1, v27, v29, 62, 0xD000000000000034, 0x80000002362D6160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = (id)sub_2362CB2D8();
    ((void (**)(_QWORD, _QWORD, id))a2)[2](a2, 0, v34);
    swift_release();

  }
}

void sub_23627E89C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _QWORD aBlock[4];
  uint64_t (*v26)();
  uint64_t v27;
  _QWORD v28[7];

  v22 = a3;
  v23 = a4;
  v28[5] = *MEMORY[0x24BDAC8D0];
  sub_236280BC8(a2, (uint64_t)v28);
  v7 = v28[0];
  v6 = v28[1];
  v8 = v28[2];
  v20 = v28[3];
  v9 = sub_2362CB560();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2362CB590();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8]();
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isLocked))
  {
    sub_236280BC8(a2, (uint64_t)aBlock);
    if ((v26 & 1) != 0)
    {
      v16 = 0;
    }
    else
    {
      v24[0] = v7;
      v24[1] = v6;
      v24[2] = v8;
      v24[3] = v20;
      v16 = v24;
    }
    sub_23627BAE0((uint64_t)v16, v22, v23, a1);
  }
  else
  {
    if (qword_2542A51E0 != -1)
      swift_once();
    v17 = swift_allocObject();
    v18 = v23;
    *(_QWORD *)(v17 + 16) = v22;
    *(_QWORD *)(v17 + 24) = v18;
    v26 = sub_236280F18;
    v27 = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_71;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_2362CB578();
    v24[0] = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v15, v11, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
  }
}

void sub_23627EB68(void *a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  unsigned int v31;
  os_log_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __CFString *v38;
  __CFString *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  id v46;
  _QWORD *v47;
  void (*v48)(_QWORD *, _QWORD);
  os_log_t v49;
  _QWORD *v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  audit_token_t atoken;
  uint64_t (*v61)();
  uint64_t v62;
  uint64_t v63;

  v55 = a6;
  v57 = a2;
  v63 = *MEMORY[0x24BDAC8D0];
  v12 = sub_2362CB560();
  v56 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2362CB590();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = a7;
  _Block_copy(a7);
  if (objc_msgSend(a1, sel_shieldable))
  {
    if ((objc_msgSend(a1, sel_isLocked) & 1) != 0)
    {
      v21 = v57;
      v54 = HIDWORD(v57);
      v56 = HIDWORD(a4);
      if (qword_2542A53D0 != -1)
        swift_once();
      v22 = sub_2362CB494();
      __swift_project_value_buffer(v22, (uint64_t)qword_2542A58F8);
      v23 = a1;
      v24 = sub_2362CB47C();
      v25 = sub_2362CB848();
      v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v27 = swift_slowAlloc();
        v52 = v26;
        v28 = v27;
        v50 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v28 = 67109378;
        v53 = a3;
        atoken.val[0] = v21;
        atoken.val[1] = v54;
        *(_QWORD *)&atoken.val[2] = a3;
        atoken.val[4] = a4;
        atoken.val[5] = v56;
        *(_QWORD *)&atoken.val[6] = a5;
        v49 = v24;
        atoken.val[0] = audit_token_to_pid(&atoken);
        sub_2362CB9C8();
        *(_WORD *)(v28 + 8) = 2112;
        v51 = HIDWORD(a3);
        *(_QWORD *)atoken.val = v23;
        v29 = v23;
        v21 = v57;
        a3 = v53;
        sub_2362CB9C8();
        v30 = v50;
        *v50 = v23;

        v31 = v54;
        v32 = v49;
        _os_log_impl(&dword_23624C000, v49, (os_log_type_t)v52, "notifying server %d is accessing %@", (uint8_t *)v28, 0x12u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v30, -1, -1);
        MEMORY[0x23B7EF258](v28, -1, -1);

        LODWORD(v33) = v51;
        v34 = (uint64_t)v58;
      }
      else
      {

        v33 = HIDWORD(a3);
        v34 = (uint64_t)v58;
        v31 = v54;
      }
      atoken.val[0] = v21;
      atoken.val[1] = v31;
      atoken.val[2] = a3;
      atoken.val[3] = v33;
      atoken.val[4] = a4;
      atoken.val[5] = v56;
      *(_QWORD *)&atoken.val[6] = a5;
      sub_23627B184((uint64_t)&atoken, (uint64_t)sub_236274D20, v34, v23, v55, v21, a3, a4, a5);
    }
    else
    {
      if (qword_2542A51E0 != -1)
        swift_once();
      v57 = qword_2542A58F0;
      v43 = swift_allocObject();
      v44 = v58;
      *(_QWORD *)(v43 + 16) = sub_236274D20;
      *(_QWORD *)(v43 + 24) = v44;
      v61 = sub_236280F18;
      v62 = v43;
      *(_QWORD *)atoken.val = MEMORY[0x24BDAC760];
      *(_QWORD *)&atoken.val[2] = 1107296256;
      *(_QWORD *)&atoken.val[4] = sub_23624E13C;
      *(_QWORD *)&atoken.val[6] = &block_descriptor_193;
      v45 = _Block_copy(&atoken);
      swift_retain();
      sub_2362CB578();
      v59 = MEMORY[0x24BEE4AF8];
      sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
      sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
      sub_2362CB9F8();
      MEMORY[0x23B7EE604](0, v20, v15, v45);
      _Block_release(v45);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v12);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      swift_release();
    }
    swift_release();
  }
  else
  {
    v35 = sub_2362CB698();
    v37 = v36;
    v38 = _APErrorCodeDescription(1uLL);
    if (v38)
    {
      v39 = v38;
      v40 = sub_2362CB698();
      v42 = v41;

    }
    else
    {
      v40 = 0;
      v42 = 0;
    }
    v46 = sub_236294D50(v35, v37, 1, v40, v42, 102, 0xD000000000000051, 0x80000002362D60E0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = (_QWORD *)sub_2362CB2D8();
    v48 = (void (*)(_QWORD *, _QWORD))a7[2];
    v58 = v47;
    v48(a7, 0);
    swift_release();

  }
}

void sub_23627F160(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[2];
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)();
  void *v28;
  void *v29;
  uint64_t v30;

  v6 = sub_2362CB560();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2362CB590();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_isLocked) & 1) != 0)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a2;
    *(_QWORD *)(v16 + 24) = a3;
    v29 = sub_236280F14;
    v30 = v16;
    v17 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v26 = 1107296256;
    v27 = (uint64_t (*)())sub_2362C96F0;
    v28 = &block_descriptor_180;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v19 = APGetAsyncGuardProxy(v18);
    _Block_release(v18);
    v20 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
    if (!v20)
    {
      sub_2362CB698();
      v20 = (id)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    v29 = a2;
    v30 = a3;
    aBlock = v17;
    v26 = 1107296256;
    v27 = (uint64_t (*)())sub_23627B924;
    v28 = &block_descriptor_183;
    v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_getIsChallengeCurrentlyRequiredForBundle_completion_, v20, v21);
    _Block_release(v21);
    swift_unknownObjectRelease();

  }
  else
  {
    v24[0] = v7;
    if (qword_2542A51E0 != -1)
      swift_once();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a2;
    *(_QWORD *)(v22 + 24) = a3;
    v29 = sub_236280D2C;
    v30 = v22;
    aBlock = MEMORY[0x24BDAC760];
    v26 = 1107296256;
    v27 = sub_23624E13C;
    v28 = &block_descriptor_174;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    sub_2362CB578();
    v24[1] = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v15, v10, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v24[0] + 8))(v10, v6);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    swift_release();
  }
}

void sub_23627F4C8(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v14 = sub_236280F10;
  v15 = v4;
  v5 = MEMORY[0x24BDAC760];
  v10 = MEMORY[0x24BDAC760];
  v11 = 1107296256;
  v12 = sub_2362C96F0;
  v13 = &block_descriptor_162;
  v6 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  v7 = APGetAsyncGuardProxy(v6);
  _Block_release(v6);
  v8 = (void *)sub_2362CB674();
  v14 = a1;
  v15 = a2;
  v10 = v5;
  v11 = 1107296256;
  v12 = sub_23624E1A0;
  v13 = &block_descriptor_165;
  v9 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_authenticateUnconditionallyWithReason_completion_, v8, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();

}

void sub_23627F610(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  v16 = sub_236280F10;
  v17 = v6;
  v7 = MEMORY[0x24BDAC760];
  v12 = MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_2362C96F0;
  v15 = &block_descriptor_149;
  v8 = _Block_copy(&v12);
  swift_retain();
  swift_release();
  v9 = APGetAsyncGuardProxy(v8);
  _Block_release(v8);
  v10 = (void *)sub_2362CB674();
  v16 = a3;
  v17 = a4;
  v12 = v7;
  v13 = 1107296256;
  v14 = sub_23624E1A0;
  v15 = &block_descriptor_152;
  v11 = _Block_copy(&v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_authenticateUnconditionallyWithReason_completion_, v10, v11);
  _Block_release(v11);
  swift_unknownObjectRelease();

}

void sub_23627F768(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  _Block_copy(a2);
  if (objc_msgSend(a1, sel_isEffectivelyLocked))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_236274D20;
    *(_QWORD *)(v5 + 24) = v4;
    v16 = sub_236280F10;
    v17 = v5;
    v6 = MEMORY[0x24BDAC760];
    v12 = MEMORY[0x24BDAC760];
    v13 = 1107296256;
    v14 = sub_2362C96F0;
    v15 = &block_descriptor_133;
    v7 = _Block_copy(&v12);
    swift_retain();
    swift_release();
    v8 = APGetAsyncGuardProxy(v7);
    _Block_release(v7);
    v9 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
    if (!v9)
    {
      sub_2362CB698();
      v9 = (id)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_236274D20;
    *(_QWORD *)(v10 + 24) = v4;
    v16 = sub_236280D74;
    v17 = v10;
    v12 = v6;
    v13 = 1107296256;
    v14 = sub_2362BE888;
    v15 = &block_descriptor_139;
    v11 = _Block_copy(&v12);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_authenticateForShieldUnlockOfBundle_completion_, v9, v11);
    _Block_release(v11);
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    a2[2](a2, 1, 0);
    swift_release();
  }
}

id sub_23627F974(void *a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __CFString *v14;
  __CFString *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void *v23;
  uint64_t v24;

  if ((objc_msgSend(a1, sel_shieldable) & 1) != 0)
  {
    result = objc_msgSend(a1, sel_isLocked);
    if ((_DWORD)result)
    {
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = 0;
      v23 = sub_236280C60;
      v24 = v3;
      v4 = MEMORY[0x24BDAC760];
      v19 = MEMORY[0x24BDAC760];
      v20 = 1107296256;
      v21 = sub_2362C96F0;
      v22 = &block_descriptor_120;
      v5 = _Block_copy(&v19);
      swift_retain();
      swift_release();
      v6 = APGetSyncGuardProxy(v5);
      _Block_release(v5);
      v7 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
      if (!v7)
      {
        sub_2362CB698();
        v7 = (id)sub_2362CB674();
        swift_bridgeObjectRelease();
      }
      v23 = sub_236280CCC;
      v24 = v3;
      v19 = v4;
      v20 = 1107296256;
      v21 = sub_2362BE888;
      v22 = &block_descriptor_123;
      v8 = _Block_copy(&v19);
      swift_retain();
      swift_release();
      objc_msgSend(v6, sel_initiateAuthenticationWithShieldingForBundle_completion_, v7, v8);
      _Block_release(v8);
      swift_unknownObjectRelease();

      swift_beginAccess();
      v9 = *(void **)(v3 + 16);
      if (v9)
      {
        v10 = v9;
        swift_willThrow();
      }
      return (id)swift_release();
    }
  }
  else
  {
    v11 = sub_2362CB698();
    v13 = v12;
    v14 = _APErrorCodeDescription(1uLL);
    if (v14)
    {
      v15 = v14;
      v16 = sub_2362CB698();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    sub_236294D50(v11, v13, 1, v16, v18, 175, 0xD00000000000002DLL, 0x80000002362D6090);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_willThrow();
  }
  return result;
}

id sub_23627FC08(void *a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  void *v15;
  uint64_t v16;

  result = objc_msgSend(a1, sel_isLocked);
  if ((_DWORD)result)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = 0;
    v15 = sub_236280C60;
    v16 = v3;
    v4 = MEMORY[0x24BDAC760];
    v11 = MEMORY[0x24BDAC760];
    v12 = 1107296256;
    v13 = sub_2362C96F0;
    v14 = &block_descriptor_113;
    v5 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    v6 = APGetSyncGuardProxy(v5);
    _Block_release(v5);
    v7 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
    if (!v7)
    {
      sub_2362CB698();
      v7 = (id)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    v15 = sub_236280CCC;
    v16 = v3;
    v11 = v4;
    v12 = 1107296256;
    v13 = sub_2362BE888;
    v14 = &block_descriptor_116;
    v8 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_authenticateForBundle_completion_, v7, v8);
    _Block_release(v8);
    swift_unknownObjectRelease();

    swift_beginAccess();
    v9 = *(void **)(v3 + 16);
    if (v9)
    {
      v10 = v9;
      swift_willThrow();
    }
    return (id)swift_release();
  }
  return result;
}

id sub_23627FDE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  id result;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __CFString *v22;
  __CFString *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id *v28;
  id v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  audit_token_t atoken;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  if ((objc_msgSend(a1, sel_shieldable) & 1) != 0)
  {
    result = objc_msgSend(a1, sel_isLocked);
    if ((_DWORD)result)
    {
      v13 = HIDWORD(a5);
      if (qword_2542A53D0 != -1)
        swift_once();
      v14 = sub_2362CB494();
      __swift_project_value_buffer(v14, (uint64_t)qword_2542A58F8);
      v33 = a1;
      v15 = sub_2362CB47C();
      v16 = sub_2362CB848();
      if (os_log_type_enabled(v15, v16))
      {
        v32 = HIDWORD(a5);
        v13 = swift_slowAlloc();
        v30 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v13 = 67109378;
        *(_QWORD *)atoken.val = a2;
        *(_QWORD *)&atoken.val[2] = a3;
        *(_QWORD *)&atoken.val[4] = a4;
        *(_QWORD *)&atoken.val[6] = a5;
        atoken.val[0] = audit_token_to_pid(&atoken);
        sub_2362CB9C8();
        *(_WORD *)(v13 + 8) = 2112;
        *(_QWORD *)atoken.val = v33;
        v31 = a5;
        v17 = v33;
        sub_2362CB9C8();
        *v30 = v33;

        a5 = v31;
        _os_log_impl(&dword_23624C000, v15, v16, "marking %d as accessing %@", (uint8_t *)v13, 0x12u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v30, -1, -1);
        v18 = v13;
        LODWORD(v13) = v32;
        MEMORY[0x23B7EF258](v18, -1, -1);

      }
      else
      {

      }
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = 0;
      v28 = (id *)(v27 + 2);
      *(_QWORD *)atoken.val = a2;
      *(_QWORD *)&atoken.val[2] = a3;
      *(_QWORD *)&atoken.val[4] = a4;
      atoken.val[6] = a5;
      atoken.val[7] = v13;
      sub_23627BD9C((uint64_t)&atoken, v27, v33, a6, a2, a3, a4, a5);
      swift_beginAccess();
      if (*v28)
      {
        v29 = *v28;
        swift_willThrow();
      }
      return (id)swift_release();
    }
  }
  else
  {
    v19 = sub_2362CB698();
    v21 = v20;
    v22 = _APErrorCodeDescription(1uLL);
    if (v22)
    {
      v23 = v22;
      v24 = sub_2362CB698();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0;
    }
    sub_236294D50(v19, v21, 1, v24, v26, 205, 0xD00000000000004ALL, 0x80000002362D6040);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_2362801C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v12 = sub_236280C60;
  v13 = v0;
  v1 = MEMORY[0x24BDAC760];
  v8 = MEMORY[0x24BDAC760];
  v9 = 1107296256;
  v10 = sub_2362C96F0;
  v11 = &block_descriptor_96;
  v2 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  v3 = APGetSyncGuardProxy(v2);
  _Block_release(v2);
  v12 = sub_236280C78;
  v13 = v0;
  v8 = v1;
  v9 = 1107296256;
  v10 = sub_23624E1A0;
  v11 = &block_descriptor_99;
  v4 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_authenticateUnconditionallyWithReason_completion_, 0, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v5 = *(void **)(v0 + 16);
  if (v5)
  {
    v6 = v5;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_236280350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v13 = sub_236280C60;
  v14 = v0;
  v1 = MEMORY[0x24BDAC760];
  v9 = MEMORY[0x24BDAC760];
  v10 = 1107296256;
  v11 = sub_2362C96F0;
  v12 = &block_descriptor_89;
  v2 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  v3 = APGetSyncGuardProxy(v2);
  _Block_release(v2);
  v4 = (void *)sub_2362CB674();
  v13 = sub_236280C78;
  v14 = v0;
  v9 = v1;
  v10 = 1107296256;
  v11 = sub_23624E1A0;
  v12 = &block_descriptor_92;
  v5 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_authenticateUnconditionallyWithReason_completion_, v4, v5);
  _Block_release(v5);
  swift_unknownObjectRelease();

  swift_beginAccess();
  v6 = *(void **)(v0 + 16);
  if (v6)
  {
    v7 = v6;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_2362804FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v15 = sub_236273DCC;
  v16 = v4;
  v5 = MEMORY[0x24BDAC760];
  v11 = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_2362C96F0;
  v14 = &block_descriptor_55_0;
  v6 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  v7 = APGetAsyncGuardProxy(v6);
  _Block_release(v6);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v15 = sub_236280B94;
  v16 = v8;
  v11 = v5;
  v12 = 1107296256;
  v13 = sub_2362BE888;
  v14 = &block_descriptor_61;
  v9 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_abortOngoingAuthWithCompletion_, v9);
  _Block_release(v9);
  return swift_unknownObjectRelease();
}

uint64_t sub_23628064C(void *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  unsigned int v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  audit_token_t atoken;
  uint64_t v70[3];

  v66 = a6;
  v67 = a3;
  v9 = (id)a4;
  v60 = HIDWORD(a2);
  v61 = a7;
  v62 = HIDWORD(a3);
  v70[1] = *MEMORY[0x24BDAC8D0];
  v12 = HIDWORD(a4);
  v68 = a5;
  v13 = HIDWORD(a5);
  v14 = sub_2362CB428();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v51 - v21;
  sub_2362CB41C();
  if (qword_2542A53D0 != -1)
    swift_once();
  v63 = v12;
  v64 = v13;
  v65 = a2;
  v23 = sub_2362CB494();
  __swift_project_value_buffer(v23, (uint64_t)qword_2542A58F8);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v22, v14);
  v24 = a1;
  v25 = sub_2362CB47C();
  v26 = sub_2362CB848();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v58 = a8;
    v29 = v28;
    v30 = swift_slowAlloc();
    v52 = v19;
    v31 = v14;
    v32 = (_QWORD *)v30;
    v55 = v30;
    v57 = swift_slowAlloc();
    v70[0] = v57;
    *(_DWORD *)v29 = 138413058;
    v56 = v27;
    *(_QWORD *)atoken.val = v24;
    v53 = v15;
    v54 = v25;
    v33 = v24;
    v59 = v9;
    v9 = v33;
    v34 = v66;
    sub_2362CB9C8();
    *v32 = v24;
    v14 = v31;

    *(_WORD *)(v29 + 12) = 1024;
    v35 = v60;
    atoken.val[0] = v65;
    atoken.val[1] = v60;
    atoken.val[2] = v67;
    atoken.val[3] = v62;
    atoken.val[4] = v59;
    atoken.val[5] = v63;
    atoken.val[6] = v68;
    atoken.val[7] = v64;
    atoken.val[0] = audit_token_to_pid(&atoken);
    sub_2362CB9C8();
    *(_WORD *)(v29 + 18) = 2048;
    *(_QWORD *)atoken.val = v34;
    sub_2362CB9C8();
    *(_WORD *)(v29 + 28) = 2080;
    sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v36 = v52;
    v37 = sub_2362CBBC0();
    *(_QWORD *)atoken.val = sub_2362AB670(v37, v38, v70);
    LODWORD(v9) = (_DWORD)v59;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v53 + 8);
    v39(v36, v31);
    v40 = v54;
    _os_log_impl(&dword_23624C000, v54, (os_log_type_t)v56, "Acquiring access assertion for %@ on behalf of %d reason %ld uuid %s", (uint8_t *)v29, 0x26u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    v41 = v55;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v41, -1, -1);
    v42 = v57;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v42, -1, -1);
    v43 = v29;
    a8 = v58;
    MEMORY[0x23B7EF258](v43, -1, -1);

    v45 = v62;
    v44 = v63;
    v47 = v64;
    v46 = v65;
    v49 = v67;
    v48 = v68;
  }
  else
  {

    v39 = *(void (**)(char *, uint64_t))(v15 + 8);
    v39(v19, v14);

    v49 = v67;
    v48 = v68;
    v47 = v64;
    v46 = v65;
    v45 = v62;
    v44 = v63;
    v35 = v60;
  }
  atoken.val[0] = v46;
  atoken.val[1] = v35;
  atoken.val[2] = v49;
  atoken.val[3] = v45;
  atoken.val[4] = v9;
  atoken.val[5] = v44;
  atoken.val[6] = v48;
  atoken.val[7] = v47;
  sub_23627D028((uint64_t)&atoken, v61, a8, v24, v66, (uint64_t)v22);
  return ((uint64_t (*)(char *, uint64_t))v39)(v22, v14);
}

uint64_t sub_236280AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2362CB428();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_236280B34(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_2362CB428() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23627D2A4(a1, v1 + v4, *(void (**)(_QWORD, _QWORD))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(void **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_236280B94(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(BOOL, uint64_t))(v1 + 16))(a1 == 0, a1);
}

uint64_t sub_236280BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236280C10(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(BOOL, uint64_t))(v1 + 16))(a1 == 0, a1);
}

uint64_t sub_236280C3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_236280C60(void *a1)
{
  uint64_t v1;

  return sub_23627C53C(a1, v1);
}

void sub_236280C78(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23627C58C(a1, a2, v2);
}

uint64_t sub_236280C90()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_236280CBC(void *a1)
{
  uint64_t v1;

  sub_23627BF8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_236280CCC(void *a1)
{
  uint64_t v1;

  sub_23627BC9C(a1, v1);
}

uint64_t sub_236280CE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_236280D08()
{
  swift_release();
  return swift_deallocObject();
}

void sub_236280D2C()
{
  uint64_t v0;

  sub_23627B8BC(*(void (**)(id, _QWORD))(v0 + 16));
}

uint64_t sub_236280D34()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236280D60(void *a1)
{
  uint64_t v1;

  return sub_23627B398(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 56));
}

id sub_236280F1C()
{
  id result;

  result = APGetReadServiceInterface();
  qword_2563DB5F0 = (uint64_t)result;
  return result;
}

id sub_236280FC4()
{
  return sub_2362714C8(type metadata accessor for APReadClient);
}

uint64_t type metadata accessor for APReadClient()
{
  return objc_opt_self();
}

id sub_236281000()
{
  if (qword_2563D5B58 != -1)
    swift_once();
  return (id)qword_2563DB5F0;
}

id sub_23628106C()
{
  return sub_2362714C8(type metadata accessor for APReadService);
}

uint64_t type metadata accessor for APReadService()
{
  return objc_opt_self();
}

uint64_t sub_2362810A8()
{
  return sub_2362811FC(&qword_2563D3E98, (uint64_t)&unk_2362CF18C);
}

uint64_t sub_2362810CC()
{
  return 0;
}

uint64_t sub_2362810D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APReadService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection13APReadService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

id sub_23628114C()
{
  objc_class *v0;
  char *v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for APReadClient();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13AppProtection12APReadClient_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_2507935D0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_2362811C8(uint64_t a1)
{
  uint64_t result;

  result = sub_2362811FC(&qword_2563D3EA0, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2362811FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for APReadClient();
    result = MEMORY[0x23B7EF18C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_236281238(uint64_t a1, uint64_t a2)
{
  char *v4;
  os_unfair_lock_s *v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  char v31[24];
  ValueMetadata *v32;
  unint64_t v33;

  if (qword_2542A53E0 != -1)
    swift_once();
  v4 = (char *)off_2542A5400 + 16;
  v5 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_23626909C((unint64_t)v4, 0, v31);
  os_unfair_lock_unlock(v5);
  v6 = v31[0];
  swift_release();
  if (v6 == 2)
  {
    v32 = &type metadata for AppProtectionFeatures;
    v33 = sub_236264AA0();
    v31[0] = 0;
    LOBYTE(v6) = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  if ((v6 & 1) != 0)
  {
    v16 = MEMORY[0x23B7EF2F4](a1 + OBJC_IVAR____TtC13AppProtection12APReadClient_delegate);
    if (v16)
    {
      v17 = (_QWORD *)(v16 + OBJC_IVAR____TtC13AppProtection13APReadService_policy);
      v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC13AppProtection13APReadService_policy + 24);
      v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC13AppProtection13APReadService_policy + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v16 + OBJC_IVAR____TtC13AppProtection13APReadService_policy), v18);
      (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      v20 = v17[3];
      v21 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v20);
      (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      v22 = v17[3];
      v23 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v22);
      (*(void (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
      v24 = objc_allocWithZone((Class)APClientState);
      v25 = (void *)sub_2362CB7A0();
      swift_bridgeObjectRelease();
      v26 = (void *)sub_2362CB7A0();
      swift_bridgeObjectRelease();
      v27 = (void *)sub_2362CB7A0();
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(v24, sel_initWithLockedAppBundleIdentifiers_hiddenAppBundleIdentifiers_effectivelyLockedBundleIdentifiers_, v25, v26, v27);

      (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v15, 0);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_2362CB698();
      v28 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v29 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(v28, sel_initWithDomain_code_userInfo_, v29, 45, 0);

      v15 = (id)sub_2362CB2D8();
      (*(void (**)(uint64_t, _QWORD, id))(a2 + 16))(a2, 0, v15);

    }
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v7 = sub_2362CB494();
    __swift_project_value_buffer(v7, (uint64_t)qword_2563DB5D8);
    v8 = sub_2362CB47C();
    v9 = sub_2362CB848();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23624C000, v8, v9, "asked for configuration when feature flag is off, which is strange", v10, 2u);
      MEMORY[0x23B7EF258](v10, -1, -1);
    }

    v11 = objc_allocWithZone((Class)APClientState);
    v12 = (void *)sub_2362CB7A0();
    v13 = (void *)sub_2362CB7A0();
    v14 = (void *)sub_2362CB7A0();
    v15 = objc_msgSend(v11, sel_initWithLockedAppBundleIdentifiers_hiddenAppBundleIdentifiers_effectivelyLockedBundleIdentifiers_, v12, v13, v14);

    (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v15, 0);
  }

}

uint64_t sub_236281684(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void *sub_2362816CC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_2362CB2D8();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v1, 1, v6);

  v3 = v6[0];
  if (v2)
  {
    v4 = (void *)sub_2362CB3C8();

  }
  else
  {
    v4 = v3;
    sub_2362CB2E4();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_2362817BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  xpc_object_t empty;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[6];

  v1 = v0;
  v2 = *v0;
  empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_int64(empty, "command", 1);
  if (qword_2563D4178 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
  swift_retain();
  v5 = sub_2362CB47C();
  v6 = sub_2362CB848();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    v12[0] = v1[2];
    sub_2362CB9C8();
    swift_release();
    _os_log_impl(&dword_23624C000, v5, v6, "pinging %llu", v7, 0xCu);
    MEMORY[0x23B7EF258](v7, -1, -1);

  }
  else
  {

    swift_release();
  }
  if (!MEMORY[0x23B7EF2F4](v1 + 3))
    return swift_unknownObjectRelease();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v2;
  v12[4] = sub_236286ED8;
  v12[5] = v9;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_236281684;
  v12[3] = &block_descriptor_60_1;
  v10 = _Block_copy(v12);
  swift_retain_n();
  swift_retain();
  swift_release();
  xpc_event_publisher_fire_with_reply();
  _Block_release(v10);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_release_n();
}

uint64_t sub_236281A20(void *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v3 = result;
  if ((sub_236285E64(a1) & 1) == 0)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v8 = sub_2362CB494();
    __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
    swift_retain();
    v9 = sub_2362CB47C();
    v10 = sub_2362CB830();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v11 = 134217984;
      aBlock[0] = *(_QWORD *)(v3 + 16);
      sub_2362CB9C8();
      swift_release();
      v12 = "subscriber %llu bad pong shape, rejecting";
LABEL_23:
      _os_log_impl(&dword_23624C000, v9, v10, v12, v11, 0xCu);
      MEMORY[0x23B7EF258](v11, -1, -1);

      goto LABEL_25;
    }
LABEL_24:

    swift_release();
LABEL_25:
    if (!MEMORY[0x23B7EF2F4](v3 + 24))
      return swift_release();
    sub_236282728(v3);
    swift_release();
    return swift_unknownObjectRelease();
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
  swift_retain();
  v5 = sub_2362CB47C();
  v6 = sub_2362CB848();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    aBlock[0] = *(_QWORD *)(v3 + 16);
    sub_2362CB9C8();
    swift_release();
    _os_log_impl(&dword_23624C000, v5, v6, "pong from %llu", v7, 0xCu);
    MEMORY[0x23B7EF258](v7, -1, -1);

  }
  else
  {

    swift_release();
  }
  if ((sub_236285964((uint64_t)a1, *(_QWORD *)(v3 + 16)) & 1) == 0)
  {
    swift_retain();
    v9 = sub_2362CB47C();
    v10 = sub_2362CB830();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v11 = 134217984;
      aBlock[0] = *(_QWORD *)(v3 + 16);
      sub_2362CB9C8();
      swift_release();
      v12 = "subscriber %llu does not pass validation";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  v13 = *(_QWORD *)(v3 + 40);
  if (v13)
  {
    *(_QWORD *)(v3 + 40) = 0;
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v3 + 24;
      v16 = (uint64_t *)(v13 + 48);
      do
      {
        v18 = *(v16 - 1);
        v19 = *v16;
        if (MEMORY[0x23B7EF2F4](v15))
        {
          if (v18)
          {
            aBlock[4] = v18;
            aBlock[5] = v19;
            aBlock[0] = MEMORY[0x24BDAC760];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_236281684;
            aBlock[3] = &block_descriptor_63_0;
            v17 = _Block_copy(aBlock);
            sub_236286EE0(v18);
            sub_236286EE0(v18);
            sub_236286EE0(v18);
            swift_unknownObjectRetain();
            swift_release();
            v15 = v3 + 24;
            xpc_event_publisher_fire_with_reply();
            _Block_release(v17);
            sub_23625DAB4(v18);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_23625DAB4(v18);
          }
          else
          {
            swift_unknownObjectRetain();
            xpc_event_publisher_fire();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
        }
        v16 += 3;
        --v14;
      }
      while (v14);
      swift_release();
    }
    else
    {
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_2362CBB00();
    __break(1u);
  }
  return result;
}

uint64_t sub_236281F0C()
{
  uint64_t v0;

  sub_236264B94(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APSystemAppXPCEventStreamClient()
{
  return objc_opt_self();
}

_QWORD *sub_236281F58(void *a1)
{
  _QWORD *v1;
  id v2;
  _QWORD *result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1[4] = MEMORY[0x24BEE4B00];
  v1[2] = a1;
  v2 = a1;
  result = (id)xpc_event_publisher_create();
  if (result)
  {
    v4 = result;
    v1[3] = result;
    v5 = swift_allocObject();
    swift_weakInit();
    v16 = sub_236286EF8;
    v17 = v5;
    v6 = MEMORY[0x24BDAC760];
    v12 = MEMORY[0x24BDAC760];
    v13 = 1107296256;
    v14 = sub_23625C050;
    v15 = &block_descriptor_75;
    v7 = _Block_copy(&v12);
    v8 = v4;
    swift_release();
    xpc_event_publisher_set_handler();
    _Block_release(v7);

    v9 = (void *)v1[3];
    v16 = sub_23625C0B8;
    v17 = 0;
    v12 = v6;
    v13 = 1107296256;
    v14 = sub_23628E7D0;
    v15 = &block_descriptor_78;
    v10 = _Block_copy(&v12);
    v11 = v9;
    xpc_event_publisher_set_error_handler();

    _Block_release(v10);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2362820C0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_236282138(a1, a2, a3);
    return swift_release();
  }
  return result;
}

void sub_236282138(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  NSObject *oslog;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (a1 == 2)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v18 = sub_2362CB494();
    __swift_project_value_buffer(v18, (uint64_t)qword_2563DB5D8);
    oslog = sub_2362CB47C();
    v19 = sub_2362CB848();
    if (os_log_type_enabled(oslog, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_23624C000, oslog, v19, "initial barrier on event stream.", v20, 2u);
      MEMORY[0x23B7EF258](v20, -1, -1);
    }
    goto LABEL_26;
  }
  v4 = v3;
  if (a1 != 1)
  {
    if (!a1)
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v8 = sub_2362CB494();
      __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
      swift_unknownObjectRetain_n();
      v9 = sub_2362CB47C();
      v10 = sub_2362CB848();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        v40 = v12;
        v41 = a2;
        *(_DWORD *)v11 = 134218242;
        sub_2362CB9C8();
        *(_WORD *)(v11 + 12) = 2080;
        if (a3)
        {
          v13 = swift_unknownObjectRetain();
          v14 = (void *)MEMORY[0x23B7EF474](v13);
          v15 = sub_2362CB734();
          v17 = v16;
          free(v14);
          swift_unknownObjectRelease();
        }
        else
        {
          v15 = 0;
          v17 = 0;
        }
        v41 = v15;
        v42 = v17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4358);
        v34 = sub_2362CB6EC();
        v41 = sub_2362AB670(v34, v35, &v40);
        sub_2362CB9C8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23624C000, v9, v10, "adding event subscriber with token %llu desc %s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v12, -1, -1);
        MEMORY[0x23B7EF258](v11, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      type metadata accessor for APSystemAppXPCEventStreamClient();
      v36 = (_QWORD *)swift_allocObject();
      v36[4] = 0;
      swift_unknownObjectWeakInit();
      v37 = MEMORY[0x24BEE4AF8];
      v36[2] = a2;
      v36[4] = &off_250793250;
      v36[5] = v37;
      swift_unknownObjectWeakAssign();
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v4 + 32) = 0x8000000000000000;
      sub_2362979DC((uint64_t)v36, a2, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v4 + 32) = v40;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_2362817BC();
      swift_release();
      return;
    }
    if (qword_2563D4178 != -1)
      swift_once();
    v31 = sub_2362CB494();
    __swift_project_value_buffer(v31, (uint64_t)qword_2563DB5D8);
    oslog = sub_2362CB47C();
    v32 = sub_2362CB83C();
    if (os_log_type_enabled(oslog, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v33 = 67109120;
      LODWORD(v41) = a1;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, oslog, v32, "unknown action %u", v33, 8u);
      MEMORY[0x23B7EF258](v33, -1, -1);

      return;
    }
LABEL_26:

    return;
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v21 = sub_2362CB494();
  __swift_project_value_buffer(v21, (uint64_t)qword_2563DB5D8);
  v22 = sub_2362CB47C();
  v23 = sub_2362CB848();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v24 = 134217984;
    v41 = a2;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v22, v23, "removing subscriber with token %llu", v24, 0xCu);
    MEMORY[0x23B7EF258](v24, -1, -1);
  }

  v25 = (uint64_t *)(v4 + 32);
  swift_beginAccess();
  v26 = sub_236293680(a2);
  if ((v27 & 1) != 0)
  {
    v28 = v26;
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v25;
    v40 = *v25;
    *v25 = 0x8000000000000000;
    if ((v29 & 1) == 0)
    {
      sub_236296D94();
      v30 = v40;
    }
    sub_2362898C4(v28, v30);
    *v25 = v30;
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
}

uint64_t sub_236282728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  if (qword_2563D4178 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
  swift_retain();
  v5 = sub_2362CB47C();
  v6 = sub_2362CB848();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_2362CB9C8();
    swift_release();
    _os_log_impl(&dword_23624C000, v5, v6, "removing tracking for subscriber %llu as it failed to provide a firm handshake", v7, 0xCu);
    MEMORY[0x23B7EF258](v7, -1, -1);

  }
  else
  {

    swift_release();
  }
  v8 = *(_QWORD *)(a1 + 16);
  v9 = (uint64_t *)(v2 + 32);
  swift_beginAccess();
  v10 = sub_236293680(v8);
  if ((v11 & 1) != 0)
  {
    v12 = v10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v9;
    v16 = *v9;
    *v9 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_236296D94();
      v14 = v16;
    }
    sub_2362898C4(v12, v14);
    *v9 = v14;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_2362828E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  dispatch_group_t v10;
  uint64_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  NSObject *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  NSObject *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  NSObject *v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  dispatch_group_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  dispatch_group_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  void (*v66)(void *);
  _QWORD *v67;

  v48 = a3;
  v47 = a2;
  v55 = a1;
  v4 = sub_2362CB560();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v52 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_2362CB590();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v7);
  v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  v10 = dispatch_group_create();
  v11 = (uint64_t *)(v3 + 32);
  swift_beginAccess();
  v46 = v3;
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 32) + 16))
  {
    if (qword_2563D4178 != -1)
LABEL_37:
      swift_once();
    v12 = sub_2362CB494();
    __swift_project_value_buffer(v12, (uint64_t)qword_2563DB5D8);
    v13 = sub_2362CB47C();
    v14 = sub_2362CB830();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23624C000, v13, v14, "System app event stream: no subscribers to send message to!", v15, 2u);
      MEMORY[0x23B7EF258](v15, -1, -1);
    }

  }
  v16 = *v11;
  v17 = *(_QWORD *)(*v11 + 64);
  v57 = *v11 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v58 = (unint64_t)(v18 + 63) >> 6;
  v60 = v16;
  swift_bridgeObjectRetain();
  v21 = 0;
  v59 = v10;
  v11 = v55;
  while (v20)
  {
    v23 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v24 = v23 | (v21 << 6);
LABEL_26:
    v28 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + 8 * v24);
    swift_retain();
    dispatch_group_enter(v10);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v9;
    *(_QWORD *)(v29 + 24) = v10;
    v30 = *(_QWORD **)(v28 + 40);
    if (v30)
    {
      swift_unknownObjectRetain_n();
      swift_retain_n();
      swift_retain();
      v31 = v10;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_2362AAFAC(0, v30[2] + 1, 1, v30);
      v33 = v30[2];
      v32 = v30[3];
      if (v33 >= v32 >> 1)
        v30 = sub_2362AAFAC((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      v30[2] = v33 + 1;
      v34 = &v30[3 * v33];
      v34[4] = v11;
      v34[5] = sub_236286E58;
      v34[6] = v29;
      swift_release();
      swift_unknownObjectRelease();
      *(_QWORD *)(v28 + 40) = v30;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = MEMORY[0x23B7EF2F4](v28 + 24);
      if (v35)
      {
        v56 = *(_QWORD *)(v35 + 16);
        v66 = sub_236286E58;
        v67 = (_QWORD *)v29;
        aBlock = MEMORY[0x24BDAC760];
        v63 = 1107296256;
        v64 = sub_236281684;
        v65 = &block_descriptor_45_0;
        v36 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_retain();
        v37 = v59;
        v10 = v59;
        swift_release();
        v11 = v55;
        xpc_event_publisher_fire_with_reply();
        _Block_release(v36);
        swift_release();
        swift_unknownObjectRelease();
        swift_release_n();
      }
      else
      {
        swift_retain();
        v22 = v10;
        swift_release();
        swift_release();
      }
    }
  }
  v25 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v25 >= v58)
    goto LABEL_34;
  v26 = *(_QWORD *)(v57 + 8 * v25);
  ++v21;
  if (v26)
    goto LABEL_25;
  v21 = v25 + 1;
  if (v25 + 1 >= v58)
    goto LABEL_34;
  v26 = *(_QWORD *)(v57 + 8 * v21);
  if (v26)
    goto LABEL_25;
  v21 = v25 + 2;
  if (v25 + 2 >= v58)
    goto LABEL_34;
  v26 = *(_QWORD *)(v57 + 8 * v21);
  if (v26)
  {
LABEL_25:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
    v10 = v59;
    goto LABEL_26;
  }
  v27 = v25 + 3;
  if (v27 < v58)
  {
    v26 = *(_QWORD *)(v57 + 8 * v27);
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_36;
        if (v21 >= v58)
          goto LABEL_34;
        v26 = *(_QWORD *)(v57 + 8 * v21);
        ++v27;
        if (v26)
          goto LABEL_25;
      }
    }
    v21 = v27;
    goto LABEL_25;
  }
LABEL_34:
  swift_release();
  v38 = (_QWORD *)swift_allocObject();
  v39 = v48;
  v38[2] = v47;
  v38[3] = v39;
  v38[4] = v9;
  v66 = (void (*)(void *))sub_2362871C4;
  v67 = v38;
  aBlock = MEMORY[0x24BDAC760];
  v63 = 1107296256;
  v64 = (uint64_t (*)(uint64_t))sub_23624E13C;
  v65 = &block_descriptor_51;
  v40 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v41 = v49;
  sub_2362CB578();
  v61 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  v42 = v52;
  v43 = v54;
  sub_2362CB9F8();
  v44 = v59;
  sub_2362CB860();
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
  swift_release();
  return swift_release();
}

void sub_236282F78(void *a1, uint64_t a2, NSObject *a3)
{
  _BYTE *data;
  void **v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t inited;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  size_t length[22];

  length[20] = *MEMORY[0x24BDAC8D0];
  length[0] = 0;
  data = xpc_dictionary_get_data(a1, "error", length);
  if (data)
  {
    v6 = (void **)(a2 + 16);
    v7 = sub_23625F58C(data, length[0]);
    v9 = v8;
    sub_23625B534(0, &qword_2563D7540);
    sub_23625B534(0, &qword_2563D7548);
    v10 = sub_2362CB854();
    v20 = (id)v10;
    if (v10)
    {
      sub_23625EFAC(v7, v9);
    }
    else
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v11 = sub_2362CB494();
      __swift_project_value_buffer(v11, (uint64_t)qword_2563DB5D8);
      v12 = sub_2362CB47C();
      v13 = sub_2362CB83C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23624C000, v12, v13, "could not get error from data", v14, 2u);
        MEMORY[0x23B7EF258](v14, -1, -1);
      }

      sub_2362CB698();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5A00);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
      *(_QWORD *)(inited + 32) = 0x656E694C5041;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      v16 = MEMORY[0x24BEE1768];
      *(_QWORD *)(inited + 48) = 222;
      *(_QWORD *)(inited + 72) = v16;
      *(_QWORD *)(inited + 80) = 0x636E75465041;
      *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 88) = 0xE600000000000000;
      *(_QWORD *)(inited + 96) = 0xD00000000000001BLL;
      *(_QWORD *)(inited + 104) = 0x80000002362D64A0;
      sub_2362949BC(inited);
      v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      swift_bridgeObjectRetain();
      v18 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      v19 = (void *)sub_2362CB608();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, 4864, v19);

      sub_23625EFAC(v7, v9);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v21 = *v6;
    *v6 = v20;

  }
  dispatch_group_leave(a3);
}

uint64_t sub_236283290()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APSystemAppXPCEventStreamServer()
{
  return objc_opt_self();
}

uint64_t sub_2362832E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  xpc_object_t empty;
  uint64_t v9;

  empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_int64(empty, "command", 2);
  v9 = sub_2362CB6F8();
  xpc_dictionary_set_string(empty, "bundleid", (const char *)(v9 + 32));
  swift_release();
  xpc_dictionary_set_BOOL(empty, "shield", a3 & 1);
  sub_2362828E8((uint64_t *)empty, a4, a5);
  return swift_unknownObjectRelease();
}

uint64_t sub_236283398(uint64_t a1, uint64_t a2, int64_t a3, uint64_t a4, uint64_t a5)
{
  xpc_object_t empty;
  uint64_t v9;
  uint64_t result;

  empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_int64(empty, "command", 3);
  v9 = sub_2362CB6F8();
  xpc_dictionary_set_string(empty, "bundleid", (const char *)(v9 + 32));
  result = swift_release();
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    xpc_dictionary_set_int64(empty, "shieldStyle", a3);
    sub_2362828E8((uint64_t *)empty, a4, a5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_236283454()
{
  return xpc_event_publisher_activate();
}

uint64_t sub_236283460(void *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = MEMORY[0x23B7EF594](a1);
    if (v3 == sub_2362CB4E8())
    {
      switch(xpc_dictionary_get_int64(a1, "command"))
      {
        case 0:
          if (qword_2542A53D0 != -1)
            swift_once();
          v15 = sub_2362CB494();
          __swift_project_value_buffer(v15, (uint64_t)qword_2542A58F8);
          swift_unknownObjectRetain_n();
          v5 = sub_2362CB47C();
          v6 = sub_2362CB848();
          if (os_log_type_enabled(v5, v6))
          {
            v7 = (uint8_t *)swift_slowAlloc();
            v8 = swift_slowAlloc();
            v27 = v8;
            *(_DWORD *)v7 = 136315138;
            v16 = swift_unknownObjectRetain();
            v17 = (void *)MEMORY[0x23B7EF474](v16);
            v18 = sub_2362CB734();
            v20 = v19;
            free(v17);
            swift_unknownObjectRelease();
            sub_2362AB670(v18, v20, &v27);
            sub_2362CB9C8();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            v14 = "unexpected \"none\" event or no event type: %s";
            goto LABEL_7;
          }

          swift_release();
          result = swift_unknownObjectRelease_n();
          break;
        case 1:
          if (!xpc_dictionary_create_reply(a1))
            return swift_release();
          xpc_dictionary_send_reply();
          swift_release();
          return swift_unknownObjectRelease();
        case 2:
          sub_236283968(a1);
          return swift_release();
        case 3:
          sub_236284110(a1);
          return swift_release();
        default:
          if (qword_2542A53D0 != -1)
            swift_once();
          v21 = sub_2362CB494();
          __swift_project_value_buffer(v21, (uint64_t)qword_2542A58F8);
          swift_unknownObjectRetain_n();
          v5 = sub_2362CB47C();
          v6 = sub_2362CB848();
          if (!os_log_type_enabled(v5, v6))
            goto LABEL_17;
          v7 = (uint8_t *)swift_slowAlloc();
          v8 = swift_slowAlloc();
          v27 = v8;
          *(_DWORD *)v7 = 136315138;
          v22 = swift_unknownObjectRetain();
          v23 = (void *)MEMORY[0x23B7EF474](v22);
          v24 = sub_2362CB734();
          v26 = v25;
          free(v23);
          swift_unknownObjectRelease();
          sub_2362AB670(v24, v26, &v27);
          sub_2362CB9C8();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          v14 = "unexpected event %s";
          goto LABEL_7;
      }
    }
    else
    {
      if (qword_2542A53D0 != -1)
        swift_once();
      v4 = sub_2362CB494();
      __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
      swift_unknownObjectRetain_n();
      v5 = sub_2362CB47C();
      v6 = sub_2362CB83C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        v27 = v8;
        *(_DWORD *)v7 = 136315138;
        v9 = swift_unknownObjectRetain();
        v10 = (void *)MEMORY[0x23B7EF474](v9);
        v11 = sub_2362CB734();
        v13 = v12;
        free(v10);
        swift_unknownObjectRelease();
        sub_2362AB670(v11, v13, &v27);
        sub_2362CB9C8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        v14 = "non-dictionary on event stream %s";
LABEL_7:
        _os_log_impl(&dword_23624C000, v5, v6, v14, v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v8, -1, -1);
        MEMORY[0x23B7EF258](v7, -1, -1);

      }
      else
      {
LABEL_17:

        swift_unknownObjectRelease_n();
      }
      return swift_release();
    }
  }
  return result;
}

void sub_236283968(void *a1)
{
  uint64_t v1;
  xpc_object_t reply;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __CFString *v28;
  __CFString *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  xpc_object_t v39;
  _BOOL4 v40;
  uint64_t bytes[3];

  bytes[2] = *MEMORY[0x24BDAC8D0];
  reply = xpc_dictionary_create_reply(a1);
  if (xpc_dictionary_get_string(a1, "bundleid"))
  {
    v4 = sub_2362CB734();
    v6 = v5;
    v40 = xpc_dictionary_get_BOOL(a1, "shield");
    if (qword_2542A53D0 != -1)
      swift_once();
    v7 = sub_2362CB494();
    __swift_project_value_buffer(v7, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v8 = sub_2362CB47C();
    v9 = sub_2362CB848();
    if (os_log_type_enabled(v8, v9))
    {
      v39 = reply;
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      bytes[0] = v11;
      *(_DWORD *)v10 = 136315394;
      swift_bridgeObjectRetain();
      v12 = v4;
      sub_2362AB670(v4, v6, bytes);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 1024;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v8, v9, "set shielded event: %s shielded -> %{BOOL}d", (uint8_t *)v10, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v11, -1, -1);
      v13 = v10;
      reply = v39;
      MEMORY[0x23B7EF258](v13, -1, -1);

    }
    else
    {
      v12 = v4;

      swift_bridgeObjectRelease_n();
    }
    if (MEMORY[0x23B7EF2F4](v1 + 16))
    {
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = reply;
      swift_unknownObjectRetain();
      sub_236286240(v12, v6, v40, (uint64_t)sub_236286D70, v24);
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (reply)
      {
        v25 = sub_2362CB698();
        v27 = v26;
        swift_unknownObjectRetain();
        v28 = _APErrorCodeDescription(4uLL);
        if (v28)
        {
          v29 = v28;
          v30 = sub_2362CB698();
          v32 = v31;

        }
        else
        {
          v30 = 0;
          v32 = 0;
        }
        v36 = sub_236294D50(v25, v27, 4, v30, v32, 302, 0xD00000000000001ALL, 0x80000002362D6480);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2362816CC();
        v38 = v37;

        __asm { BR              X10 }
      }
      v33 = sub_2362CB47C();
      v34 = sub_2362CB83C();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_23624C000, v33, v34, "no delegate and no reply for set shielded event? Dropping", v35, 2u);
        MEMORY[0x23B7EF258](v35, -1, -1);
      }

    }
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v14 = sub_2362CB494();
    __swift_project_value_buffer(v14, (uint64_t)qword_2542A58F8);
    swift_unknownObjectRetain_n();
    v15 = sub_2362CB47C();
    v16 = sub_2362CB83C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      bytes[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v19 = swift_unknownObjectRetain();
      v20 = (void *)MEMORY[0x23B7EF474](v19);
      v21 = sub_2362CB734();
      v23 = v22;
      free(v20);
      swift_unknownObjectRelease();
      sub_2362AB670(v21, v23, bytes);
      sub_2362CB9C8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v15, v16, "no bundleID in %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v18, -1, -1);
      MEMORY[0x23B7EF258](v17, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();
    }
  }
}

void sub_236284110(void *a1)
{
  uint64_t v1;
  xpc_object_t reply;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t int64;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __CFString *v29;
  __CFString *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  xpc_object_t v40;
  uint64_t bytes[3];

  bytes[2] = *MEMORY[0x24BDAC8D0];
  reply = xpc_dictionary_create_reply(a1);
  if (xpc_dictionary_get_string(a1, "bundleid"))
  {
    v4 = sub_2362CB734();
    v6 = v5;
    int64 = xpc_dictionary_get_int64(a1, "shieldStyle");
    if (int64 < 0)
    {
      sub_2362CBAF4();
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      JUMPOUT(0x2362848BCLL);
    }
    v8 = int64;
    if (qword_2542A53D0 != -1)
      swift_once();
    v9 = sub_2362CB494();
    __swift_project_value_buffer(v9, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v10 = sub_2362CB47C();
    v11 = sub_2362CB848();
    if (os_log_type_enabled(v10, v11))
    {
      v40 = reply;
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      bytes[0] = v13;
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_2362AB670(v4, v6, bytes);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2048;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v10, v11, "set shieldStyle event: %s shieldStyle -> %lld", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v13, -1, -1);
      v14 = v12;
      reply = v40;
      MEMORY[0x23B7EF258](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (MEMORY[0x23B7EF2F4](v1 + 16))
    {
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = reply;
      swift_unknownObjectRetain();
      sub_2362867B8(v4, v6, v8, (uint64_t)sub_23628592C, v25);
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (reply)
      {
        v26 = sub_2362CB698();
        v28 = v27;
        swift_unknownObjectRetain();
        v29 = _APErrorCodeDescription(4uLL);
        if (v29)
        {
          v30 = v29;
          v31 = sub_2362CB698();
          v33 = v32;

        }
        else
        {
          v31 = 0;
          v33 = 0;
        }
        v37 = sub_236294D50(v26, v28, 4, v31, v33, 343, 0xD00000000000001DLL, 0x80000002362D63D0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2362816CC();
        v39 = v38;

        __asm { BR              X10 }
      }
      v34 = sub_2362CB47C();
      v35 = sub_2362CB83C();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_23624C000, v34, v35, "no delegate and no reply for set shielded event? Dropping", v36, 2u);
        MEMORY[0x23B7EF258](v36, -1, -1);
      }

    }
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v15 = sub_2362CB494();
    __swift_project_value_buffer(v15, (uint64_t)qword_2542A58F8);
    swift_unknownObjectRetain_n();
    v16 = sub_2362CB47C();
    v17 = sub_2362CB83C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      bytes[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = swift_unknownObjectRetain();
      v21 = (void *)MEMORY[0x23B7EF474](v20);
      v22 = sub_2362CB734();
      v24 = v23;
      free(v21);
      swift_unknownObjectRelease();
      sub_2362AB670(v22, v24, bytes);
      sub_2362CB9C8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v16, v17, "no bundleID in %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v19, -1, -1);
      MEMORY[0x23B7EF258](v18, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();
    }
  }
}

void sub_236284900(id a1, uint64_t a2, double a3, int16x8_t a4, uint64_t a5, const char *a6)
{
  id v7;
  uint64_t v9;
  id v10;
  id v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *oslog;
  uint64_t bytes;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a1)
    {
      v7 = a1;
      swift_unknownObjectRetain();
      sub_2362816CC();
      __asm { BR              X10 }
    }
    swift_unknownObjectRetain();
    xpc_dictionary_send_reply();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v9 = sub_2362CB494();
    __swift_project_value_buffer(v9, (uint64_t)qword_2542A58F8);
    v10 = a1;
    v11 = a1;
    oslog = sub_2362CB47C();
    v12 = sub_2362CB83C();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      bytes = v14;
      *(_DWORD *)v13 = vmovn_s16(a4).u32[0];
      v22 = (uint64_t)a1;
      v15 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7530);
      v16 = sub_2362CB6EC();
      v22 = sub_2362AB670(v16, v17, &bytes);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23624C000, oslog, v12, a6, v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v14, -1, -1);
      MEMORY[0x23B7EF258](v13, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_236284EE4()
{
  uint64_t v0;

  sub_236264B94(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APSystemAppClientXPCEventStream()
{
  return objc_opt_self();
}

void sub_236284F28(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  _QWORD v10[6];

  v3 = a2;
  MEMORY[0x23B7EE4B4]();
  if (*(_QWORD *)((*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
    sub_2362CB77C();
  sub_2362CB788();
  sub_2362CB770();
  if (!*(_QWORD *)(a1 + 16))
  {
    v4 = *(void **)a1;
    type metadata accessor for APSystemAppClientXPCEventStream();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v5 + 24) = &off_2507931A0;
    swift_unknownObjectWeakAssign();
    v6 = v4;
    swift_retain();
    xpc_dictionary_create_empty();
    xpc_set_event();
    swift_unknownObjectRelease();
    v7 = swift_allocObject();
    swift_weakInit();
    v10[4] = sub_236286EF0;
    v10[5] = v7;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_236281684;
    v10[3] = &block_descriptor_69;
    v8 = _Block_copy(v10);
    v9 = v6;
    swift_release();
    xpc_set_event_stream_handler("com.apple.appprotection.systemappevents", v9, v8);

    swift_release();
    _Block_release(v8);

    *(_QWORD *)(a1 + 16) = v5;
  }
}

void sub_2362850E4(uint64_t a1, void *a2)
{
  unint64_t *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = (unint64_t *)(a1 + 8);
  v4 = a2;
  v5 = sub_2362792E0(v3, (uint64_t)v4);

  v6 = *(_QWORD *)(a1 + 8);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    if (v7 >= v5)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v5)
    {
LABEL_3:
      sub_2362B659C(v5, v7);
      return;
    }
  }
  __break(1u);
}

void sub_23628519C(void *a1, uint64_t a2, dispatch_group_t group)
{
  void *v6;
  id v7;

  if (a1)
  {
    swift_beginAccess();
    v6 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    v7 = a1;

  }
  dispatch_group_leave(group);
}

uint64_t sub_236285208@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;

  v5 = *(_QWORD *)(a1 + 8);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v6)
      goto LABEL_3;
LABEL_9:
    result = swift_bridgeObjectRelease();
    *a3 = v5;
    return result;
  }
  swift_bridgeObjectRetain_n();
  result = sub_2362CBB18();
  v6 = result;
  if (!result)
    goto LABEL_9;
LABEL_3:
  if (v6 >= 1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        MEMORY[0x23B7EE7E4](i, v5);
        swift_unknownObjectRelease();
        dispatch_group_enter(a2);
      }
    }
    else
    {
      do
      {
        dispatch_group_enter(a2);
        --v6;
      }
      while (v6);
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_2362852EC(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  v6 = v5;
  a1(v5);

}

uint64_t type metadata accessor for ServerBackedSystemAppOutletRegistry()
{
  return objc_opt_self();
}

uint64_t destroy for ServerBackedSystemAppOutletRegistry.State(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s13AppProtection35ServerBackedSystemAppOutletRegistryC5StateVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ServerBackedSystemAppOutletRegistry.State(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ServerBackedSystemAppOutletRegistry.State(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ServerBackedSystemAppOutletRegistry.State()
{
  return &type metadata for ServerBackedSystemAppOutletRegistry.State;
}

_QWORD *initializeBufferWithCopyOfBuffer for HandshakeState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HandshakeState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HandshakeState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HandshakeState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_236285610(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_236285628(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeState()
{
  return &type metadata for HandshakeState;
}

uint64_t sub_236285658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_2362CB230();
  v8 = (char *)result;
  if (result)
  {
    result = sub_2362CB248();
    if (__OFSUB__(a1, result))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  result = sub_2362CB23C();
  if (!v8)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  xpc_dictionary_set_data(a4, "error", v8, v11);
  return swift_unknownObjectRelease();
}

uint64_t sub_2362856F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v0 = sub_2362CB878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB86C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  sub_2362CB578();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v0);
  return sub_2362CB8B4();
}

uint64_t sub_2362858C4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_236285908()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_23628592C(void *a1, double a2, int16x8_t a3)
{
  uint64_t v3;

  a3.i64[0] = 0x8002000010002;
  sub_236284900(a1, *(_QWORD *)(v3 + 16), COERCE_DOUBLE(0x8004000010002), a3, (uint64_t)"Could not serialize error %@", "unable to create reply for set shielded event? Dropping %s");
}

uint64_t sub_236285964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  os_log_type_t v23;
  uint8_t *v24;
  audit_token_t atoken;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  xpc_dictionary_get_audit_token();
  if (qword_2563D4178 != -1)
    swift_once();
  v3 = sub_2362CB494();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563DB5D8);
  v4 = sub_2362CB47C();
  v5 = sub_2362CB848();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    *(_DWORD *)v6 = 134218240;
    sub_2362CB9C8();
    *(_WORD *)(v6 + 12) = 1024;
    swift_beginAccess();
    memset(&atoken, 0, sizeof(atoken));
    atoken.val[0] = audit_token_to_pid(&atoken);
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v4, v5, "validating %llu pid %d", (uint8_t *)v6, 0x12u);
    MEMORY[0x23B7EF258](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = (void *)xpc_copy_entitlement_for_token();
  swift_endAccess();
  if (!v7)
    goto LABEL_8;
  v8 = MEMORY[0x23B7EF594](v7);
  if (v8 == sub_2362CB4C4())
  {
    v17 = swift_unknownObjectRetain();
    v18 = MEMORY[0x23B7EF594](v17);
    if (v18 == sub_2362CB4C4())
    {
      if (xpc_string_get_string_ptr(v7))
      {
        v19 = sub_2362CB734();
        v21 = v20;
        swift_unknownObjectRelease();
        if (v19 == 0xD000000000000015 && v21 == 0x80000002362D6140)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v22 = sub_2362CBBE4();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
            goto LABEL_7;
        }
        v10 = sub_2362CB47C();
        v23 = sub_2362CB848();
        if (os_log_type_enabled(v10, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v24 = 134217984;
          *(_QWORD *)atoken.val = a2;
          sub_2362CB9C8();
          _os_log_impl(&dword_23624C000, v10, v23, "tok %llu is SpringBoard", v24, 0xCu);
          MEMORY[0x23B7EF258](v24, -1, -1);
          swift_unknownObjectRelease();

          return 1;
        }
LABEL_24:

        swift_unknownObjectRelease();
        return 1;
      }
      __break(1u);
    }
    result = sub_2362CBB00();
    __break(1u);
    return result;
  }
LABEL_7:
  swift_unknownObjectRelease();
LABEL_8:
  swift_beginAccess();
  v9 = (void *)xpc_copy_entitlement_for_token();
  swift_endAccess();
  if (v9)
  {
    if (xpc_BOOL_get_value(v9))
    {
      v10 = sub_2362CB47C();
      v11 = sub_2362CB848();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v12 = 134217984;
        *(_QWORD *)atoken.val = a2;
        sub_2362CB9C8();
        _os_log_impl(&dword_23624C000, v10, v11, "tok %llu is entitled", v12, 0xCu);
        MEMORY[0x23B7EF258](v12, -1, -1);
      }
      goto LABEL_24;
    }
    swift_unknownObjectRelease();
  }
  v13 = sub_2362CB47C();
  v14 = sub_2362CB848();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    *(_QWORD *)atoken.val = a2;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v13, v14, "tok %llu is NOT ENTITLED!", v15, 0xCu);
    MEMORY[0x23B7EF258](v15, -1, -1);
  }

  return 0;
}

uint64_t sub_236285E64(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  const char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v2 = MEMORY[0x23B7EF594]();
  if (v2 == sub_2362CB4B8())
  {
    v15 = (const char *)sub_2362CB4F4();
    if (xpc_dictionary_get_string(a1, v15))
    {
      v16 = sub_2362CB734();
      v18 = v17;
    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    if (qword_2563D4178 != -1)
      swift_once();
    v20 = sub_2362CB494();
    __swift_project_value_buffer(v20, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain();
    v5 = sub_2362CB47C();
    v21 = sub_2362CB830();
    if (!os_log_type_enabled(v5, v21))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v25 = v23;
    *(_DWORD *)v22 = 134218242;
    sub_2362CB9C8();
    *(_WORD *)(v22 + 12) = 2080;
    if (v18)
    {
      v24 = v18;
    }
    else
    {
      v16 = 0xD000000000000010;
      v24 = 0x80000002362D6530;
    }
    swift_bridgeObjectRetain();
    sub_2362AB670(v16, v24, &v25);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v5, v21, "Error pinging for token %llu! %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v23, -1, -1);
    v14 = v22;
    goto LABEL_19;
  }
  v3 = MEMORY[0x23B7EF594](a1);
  if (v3 == sub_2362CB4E8())
    return 1;
  if (qword_2563D4178 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
  swift_unknownObjectRetain_n();
  v5 = sub_2362CB47C();
  v6 = sub_2362CB83C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v25 = v8;
    *(_DWORD *)v7 = 134218242;
    sub_2362CB9C8();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = swift_unknownObjectRetain();
    v10 = (void *)MEMORY[0x23B7EF474](v9);
    v11 = sub_2362CB734();
    v13 = v12;
    free(v10);
    swift_unknownObjectRelease();
    sub_2362AB670(v11, v13, &v25);
    sub_2362CB9C8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v5, v6, "Bad object type in pong from %llu! %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v8, -1, -1);
    v14 = v7;
LABEL_19:
    MEMORY[0x23B7EF258](v14, -1, -1);

    return 0;
  }

  swift_unknownObjectRelease_n();
  return 0;
}

void sub_236286240(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_unfair_lock_s *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  NSObject *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  id v50;
  NSObject *v51;
  uint64_t v52;
  dispatch_queue_t v53;
  uint64_t v54;
  unint64_t aBlock;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  void *v58;
  void *v59;
  _QWORD *v60;

  v41 = a5;
  LODWORD(v53) = a3;
  v7 = (_QWORD *)sub_2362CB560();
  v45 = *(v7 - 1);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2362CB590();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = 0;
  v14 = dispatch_group_create();
  v40 = v5;
  v15 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v15 + 10);
  v51 = v14;
  sub_236285208((uint64_t)&v15[4], v14, &aBlock);
  os_unfair_lock_unlock(v15 + 10);
  v16 = aBlock;
  swift_release();
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_2362CB674();
  v50 = objc_msgSend(v17, sel_applicationWithBundleIdentifier_, v18);

  if (v16 >> 62)
    goto LABEL_15;
  v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v20 = v45;
    if (!v19)
      break;
    if (v19 < 1)
    {
      __break(1u);
      return;
    }
    v37 = a4;
    v38 = v10;
    v39 = v7;
    a4 = 0;
    v49 = v16 & 0xC000000000000001;
    v48 = v53 & 1;
    v46 = v19;
    v47 = v16;
    v21 = v51;
    v22 = v52;
    while (1)
    {
      v23 = v49 ? (char *)MEMORY[0x23B7EE7E4](a4, v16) : (char *)*(id *)(v16 + 8 * a4 + 32);
      v24 = v23;
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v22;
      *(_QWORD *)(v25 + 24) = v21;
      v53 = *(dispatch_queue_t *)&v24[OBJC_IVAR___APSystemAppOutlet_callbackQueue];
      v26 = swift_allocObject();
      v27 = v50;
      *(_QWORD *)(v26 + 16) = v24;
      *(_QWORD *)(v26 + 24) = v27;
      *(_BYTE *)(v26 + 32) = v48;
      *(_QWORD *)(v26 + 40) = sub_236286DAC;
      *(_QWORD *)(v26 + 48) = v25;
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = sub_236286DE8;
      *(_QWORD *)(v16 + 24) = v26;
      v59 = sub_236279C0C;
      v60 = (_QWORD *)v16;
      aBlock = MEMORY[0x24BDAC760];
      v56 = 1107296256;
      v57 = sub_2362550D4;
      v58 = &block_descriptor_32_0;
      v7 = _Block_copy(&aBlock);
      swift_retain();
      v28 = v21;
      v10 = v24;
      v29 = v27;
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v53, v7);
      _Block_release(v7);
      LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      swift_release();
      if ((v27 & 1) != 0)
        break;
      ++a4;
      v16 = v47;
      if (v46 == a4)
      {
        swift_bridgeObjectRelease();
        v7 = v39;
        v20 = v45;
        v10 = v38;
        a4 = v37;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v19 = sub_2362CBB18();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_13:
  v30 = *(_QWORD *)(v40 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v30 + 40));
  v31 = *(id *)(v30 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v30 + 40));
  swift_release();
  v32 = (_QWORD *)swift_allocObject();
  v33 = v41;
  v32[2] = a4;
  v32[3] = v33;
  v32[4] = v52;
  v59 = sub_236286E0C;
  v60 = v32;
  aBlock = MEMORY[0x24BDAC760];
  v56 = 1107296256;
  v57 = (uint64_t (*)(uint64_t))sub_23624E13C;
  v58 = &block_descriptor_38;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v35 = v42;
  sub_2362CB578();
  v54 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  sub_2362CB9F8();
  v36 = v51;
  sub_2362CB860();
  _Block_release(v34);

  (*(void (**)(char *, _QWORD *))(v20 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
  swift_release();
  swift_release();
}

void sub_2362867B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  void (**v7)(char *, _QWORD *);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  dispatch_group_t v14;
  os_unfair_lock_s *v15;
  unint64_t isEscapingClosureAtFileLocation;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  void *v23;
  NSObject *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  dispatch_group_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (**v45)(char *, _QWORD *);
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  dispatch_group_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  uint64_t (*v58)();
  _QWORD *v59;

  v42 = a5;
  v41 = a4;
  v49 = a3;
  v6 = (_QWORD *)sub_2362CB560();
  v7 = (void (**)(char *, _QWORD *))*(v6 - 1);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2362CB590();
  v44 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v43 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = 0;
  v14 = dispatch_group_create();
  v40 = v5;
  v15 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v15 + 10);
  v51 = v14;
  sub_236285208((uint64_t)&v15[4], v14, &aBlock);
  os_unfair_lock_unlock(v15 + 10);
  isEscapingClosureAtFileLocation = aBlock;
  swift_release();
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_2362CB674();
  v50 = objc_msgSend(v17, sel_applicationWithBundleIdentifier_, v18);

  if (isEscapingClosureAtFileLocation >> 62)
    goto LABEL_15;
  v19 = *(_QWORD *)((isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v45 = v7;
    if (!v19)
      break;
    if (v19 < 1)
    {
      __break(1u);
      return;
    }
    v37 = v11;
    v38 = v10;
    v39 = v6;
    v20 = 0;
    v48 = isEscapingClosureAtFileLocation & 0xC000000000000001;
    v46 = v19;
    v47 = isEscapingClosureAtFileLocation;
    v21 = v50;
    v11 = v52;
    while (1)
    {
      v22 = v48
          ? (char *)MEMORY[0x23B7EE7E4](v20, isEscapingClosureAtFileLocation)
          : (char *)*(id *)(isEscapingClosureAtFileLocation + 8 * v20 + 32);
      v23 = v22;
      v24 = *(NSObject **)&v22[OBJC_IVAR___APSystemAppOutlet_callbackQueue];
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v21;
      v25[3] = v23;
      v25[4] = v49;
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = sub_236286D50;
      *(_QWORD *)(v26 + 24) = v25;
      v58 = sub_236264B8C;
      v59 = (_QWORD *)v26;
      aBlock = MEMORY[0x24BDAC760];
      v55 = 1107296256;
      v56 = sub_2362550D4;
      v57 = &block_descriptor_10;
      v7 = (void (**)(char *, _QWORD *))_Block_copy(&aBlock);
      swift_retain();
      v6 = v51;
      v27 = v21;
      v10 = v23;
      swift_retain();
      swift_release();
      dispatch_sync(v24, v7);
      _Block_release(v7);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        break;
      ++v20;
      isEscapingClosureAtFileLocation = v47;
      if (v46 == v20)
      {
        swift_bridgeObjectRelease();
        v6 = v39;
        v10 = v38;
        v28 = v37;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v19 = sub_2362CBB18();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v28 = v11;
LABEL_13:
  v29 = *(_QWORD *)(v40 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 40));
  v30 = *(id *)(v29 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 40));
  swift_release();
  v31 = (_QWORD *)swift_allocObject();
  v32 = v42;
  v31[2] = v41;
  v31[3] = v32;
  v31[4] = v52;
  v58 = sub_2362871C4;
  v59 = v31;
  aBlock = MEMORY[0x24BDAC760];
  v55 = 1107296256;
  v56 = (uint64_t (*)(uint64_t))sub_23624E13C;
  v57 = &block_descriptor_15;
  v33 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v34 = v43;
  sub_2362CB578();
  v53 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
  sub_2362CB9F8();
  v35 = v51;
  sub_2362CB860();
  _Block_release(v33);

  v45[1](v10, v6);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v28);
  swift_release();
  swift_release();
}

uint64_t sub_236286D00()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_236286D24()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_236286D50()
{
  uint64_t v0;

  return sub_2362639F4(*(void **)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_236286D5C()
{
  return swift_deallocObject();
}

void sub_236286D70(void *a1, double a2, int16x8_t a3)
{
  uint64_t v3;

  a3.i64[0] = 0x8002200010002;
  sub_236284900(a1, *(_QWORD *)(v3 + 16), COERCE_DOUBLE(0x8004200010002), a3, (uint64_t)"Could not serialize error %{public}@", "unable to create reply for set shielded event? Dropping %{public}s");
}

void sub_236286DAC(void *a1)
{
  uint64_t v1;

  sub_23628519C(a1, *(_QWORD *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_236286DB4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_236286DE8()
{
  uint64_t v0;

  sub_2362639C4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void (**)(_QWORD))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_236286DF8()
{
  return swift_deallocObject();
}

void sub_236286E0C()
{
  uint64_t v0;

  sub_2362852EC(*(void (**)(void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_236286E58(void *a1)
{
  uint64_t v1;

  sub_236282F78(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t objectdestroy_11Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236286E90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236286EB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236286ED8(void *a1)
{
  return sub_236281A20(a1);
}

uint64_t sub_236286EE0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_236286EF0(void *a1)
{
  return sub_236283460(a1);
}

uint64_t sub_236286EF8(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2362820C0(a1, a2, a3);
}

uint64_t destroy for QueuedStreamMessage(uint64_t a1)
{
  uint64_t result;

  result = swift_unknownObjectRelease();
  if (*(_QWORD *)(a1 + 8))
    return swift_release();
  return result;
}

_QWORD *_s13AppProtection19QueuedStreamMessageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  swift_unknownObjectRetain();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *assignWithCopy for QueuedStreamMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for QueuedStreamMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t _s13AppProtection19QueuedStreamMessageVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_236287114(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueuedStreamMessage()
{
  return &type metadata for QueuedStreamMessage;
}

uint64_t sub_2362871C8(uint64_t a1, uint64_t (*a2)(BOOL, uint64_t))
{
  return a2(a1 == 0, a1);
}

uint64_t sub_236287314(void *a1, uint64_t a2, uint64_t a3, const void *a4, void (*a5)(char *, id, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v16;

  v8 = sub_2362CB428();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _Block_copy(a4);
  sub_2362CB410();
  _Block_copy(v13);
  v14 = a1;
  a5(v12, v14, v13);
  _Block_release(v13);
  _Block_release(v13);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

id sub_2362873EC()
{
  id result;

  result = APGetExtensionInfoServiceInterface();
  qword_2563DB5C8 = (uint64_t)result;
  return result;
}

id sub_23628743C()
{
  return sub_2362714C8(type metadata accessor for APExtensionInfoClient);
}

uint64_t type metadata accessor for APExtensionInfoClient()
{
  return objc_opt_self();
}

id sub_2362874A0()
{
  if (qword_2563D4090 != -1)
    swift_once();
  return (id)qword_2563DB5C8;
}

id sub_23628750C()
{
  return sub_2362714C8(type metadata accessor for APExtensionInfoService);
}

uint64_t type metadata accessor for APExtensionInfoService()
{
  return objc_opt_self();
}

uint64_t sub_236287548(uint64_t a1, uint64_t a2)
{
  return sub_236288674(&qword_2563D4098, a2, (uint64_t (*)(uint64_t))type metadata accessor for APExtensionInfoClient, (uint64_t)&unk_2362CF414);
}

uint64_t sub_236287574()
{
  return 5;
}

uint64_t sub_23628757C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APExtensionInfoService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection22APExtensionInfoService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

id sub_2362875F4(void *a1)
{
  objc_class *v2;
  char *v3;
  id v4;
  objc_super v6;

  v2 = (objc_class *)type metadata accessor for APExtensionInfoClient();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_250794258;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v3[OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_connection] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_236287688(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_236288674((unint64_t *)&unk_2563D40A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for APExtensionInfoClient, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2362876C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t ObjCClassFromMetadata;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _WORD v91[22];
  int v92;
  _QWORD v93[5];
  uint64_t v94[4];
  char v95;

  v83 = a4;
  v81 = a2;
  v8 = sub_2362CB440();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_2362CB668();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = sub_2362CB428();
  v84 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)&v75 - v19;
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v82 = (char *)&v75 - v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v75 - v25;
  _Block_copy(a5);
  v27 = sub_236261124(a1);
  if (!v28)
    goto LABEL_11;
  v29 = v28;
  v78 = v27;
  v79 = sub_236260C14(a1);
  v80 = v30;
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_2563D4178 != -1)
      swift_once();
    v41 = sub_2362CB494();
    __swift_project_value_buffer(v41, (uint64_t)qword_2563DB5D8);
    v42 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v16, a1, v12);
    v43 = sub_2362CB47C();
    v44 = sub_2362CB848();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      *(_QWORD *)&v86 = v46;
      *(_DWORD *)v45 = 136446210;
      v83 = (uint64_t)a5;
      sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v47 = sub_2362CBBC0();
      v93[0] = sub_2362AB670(v47, v48, (uint64_t *)&v86);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      a5 = (void (**)(_QWORD, _QWORD, _QWORD))v83;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v12);
      _os_log_impl(&dword_23624C000, v43, v44, "no containing bundle record for extension uuid %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v46, -1, -1);
      MEMORY[0x23B7EF258](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v12);
    }

    goto LABEL_17;
  }
  if (!a3)
  {
    v77 = 0;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
    v31(v26, a1, v12);
    v32 = objc_allocWithZone(MEMORY[0x24BDC1528]);
    v33 = sub_236261478((uint64_t)v26);
    v49 = v33;
    if (v33)
    {
      sub_2362CB65C();
      type metadata accessor for APSettingsManager(0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v51 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_2362CB434();
      v52 = sub_2362CB6E0();
      v54 = HIBYTE(v53) & 0xF;
      if ((v53 & 0x2000000000000000) == 0)
        v54 = v52 & 0xFFFFFFFFFFFFLL;
      if (v54)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
        v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_2362CE0F0;
        v56 = objc_msgSend(v49, sel_localizedName);
        v57 = sub_2362CB698();
        v76 = v58;

        *(_QWORD *)(v55 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v55 + 64) = sub_2362741BC();
        v59 = v76;
        *(_QWORD *)(v55 + 32) = v57;
        *(_QWORD *)(v55 + 40) = v59;
        sub_2362CB6BC();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();

      }
    }
    else
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v34 = sub_2362CB494();
      __swift_project_value_buffer(v34, (uint64_t)qword_2563DB5D8);
      v31(v20, a1, v12);
      v35 = sub_2362CB47C();
      v36 = sub_2362CB848();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        *(_QWORD *)&v86 = v76;
        *(_DWORD *)v37 = 136446210;
        v75 = v37 + 4;
        sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v38 = sub_2362CBBC0();
        v93[0] = sub_2362AB670(v38, v39, (uint64_t *)&v86);
        sub_2362CB9C8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v12);
        _os_log_impl(&dword_23624C000, v35, v36, "could not find extension record for %{public}s while generating authentication description", v37, 0xCu);
        v40 = v76;
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v40, -1, -1);
        MEMORY[0x23B7EF258](v37, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v12);
      }

    }
    a3 = v77;
  }
  v60 = v83;
  v61 = MEMORY[0x23B7EF2F4](v83 + OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_delegate);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_17:
    a5[2](a5, 1, 0);
    goto LABEL_34;
  }
  sub_23624E76C(v61 + OBJC_IVAR____TtC13AppProtection22APExtensionInfoService_policy, (uint64_t)&v86);
  swift_unknownObjectRelease();
  sub_23625AD00(&v86, (uint64_t)v93);
  v62 = *(void **)(v60 + OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_connection);
  v63 = v80;
  swift_bridgeObjectRetain();
  LODWORD(v62) = objc_msgSend(v62, sel_processIdentifier);
  sub_23624E76C((uint64_t)v93, (uint64_t)v91);
  *(_QWORD *)&v86 = v79;
  *((_QWORD *)&v86 + 1) = v63;
  v87 = v78;
  v88 = v29;
  v89 = 0;
  v90 = 0;
  v91[20] = 257;
  v92 = (int)v62;
  if (qword_2563D4178 != -1)
    swift_once();
  v64 = sub_2362CB494();
  __swift_project_value_buffer(v64, (uint64_t)qword_2563DB5D8);
  v65 = v84;
  v66 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v82, a1, v12);
  swift_bridgeObjectRetain();
  v67 = sub_2362CB47C();
  v68 = sub_2362CB848();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    v94[0] = v83;
    *(_DWORD *)v69 = 136446466;
    v78 = v69 + 4;
    sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v70 = sub_2362CBBC0();
    v85 = sub_2362AB670(v70, v71, v94);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v12);
    *(_WORD *)(v69 + 12) = 2080;
    v72 = v80;
    swift_bridgeObjectRetain();
    v85 = sub_2362AB670(v79, v72, v94);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23624C000, v67, v68, "Authenticating for extension %{public}s inside %s", (uint8_t *)v69, 0x16u);
    v73 = v83;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v73, -1, -1);
    MEMORY[0x23B7EF258](v69, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v12);

    swift_bridgeObjectRelease_n();
  }
  v74 = v81;
  memset(v94, 0, sizeof(v94));
  v95 = -2;
  _Block_copy(a5);
  sub_2362716D0((uint64_t)v94, v74, a3, 1, (uint64_t)&v86, a5);
  _Block_release(a5);
  sub_2362724E0((uint64_t)&v86);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
LABEL_34:
  _Block_release(a5);
}

uint64_t sub_23628811C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  __int128 v25[2];
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;

  v6 = sub_2362CB428();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236260C14(a1);
  if (v11)
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x23B7EF2F4](a2 + OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_delegate);
    if (v12)
    {
      sub_23624E76C(v12 + OBJC_IVAR____TtC13AppProtection22APExtensionInfoService_policy, (uint64_t)v25);
      swift_unknownObjectRelease();
      sub_23625AD00(v25, (uint64_t)v26);
      v13 = v27;
      v14 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v13, v14);
      (*(void (**)(uint64_t, BOOL, _QWORD))(a3 + 16))(a3, (v15 & 1) == 0, 0);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 1, 0);
    }
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v17 = sub_2362CB494();
    __swift_project_value_buffer(v17, (uint64_t)qword_2563DB5D8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    v18 = sub_2362CB47C();
    v19 = sub_2362CB848();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v26[0] = v21;
      *(_DWORD *)v20 = 136446210;
      v24[1] = v20 + 4;
      sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = sub_2362CBBC0();
      *(_QWORD *)&v25[0] = sub_2362AB670(v22, v23, v26);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      _os_log_impl(&dword_23624C000, v18, v19, "no containing bundle record for extension uuid %{public}s assuming unlocked", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v21, -1, -1);
      MEMORY[0x23B7EF258](v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }

    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a3 + 16))(a3, 0, 0);
  }
}

void sub_23628841C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v6 = sub_236261124(a1);
  if (!v7)
    goto LABEL_7;
  v8 = v6;
  v9 = v7;
  v10 = sub_236260C14(a1);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_236288638();
    v25 = (id)sub_2362CB98C();
    (*(void (**)(uint64_t, id, _QWORD))(a3 + 16))(a3, v25, 0);

    return;
  }
  v12 = v10;
  v13 = v11;
  v14 = a2 + OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_delegate;
  v15 = MEMORY[0x23B7EF2F4](a2 + OBJC_IVAR____TtC13AppProtection21APExtensionInfoClient_delegate);
  if (v15)
  {
    sub_23624E76C(v15 + OBJC_IVAR____TtC13AppProtection22APExtensionInfoService_policy, (uint64_t)v26);
    swift_unknownObjectRelease();
    v16 = v27;
    v17 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    v19 = sub_23624EC88(v12, v13, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if ((v19 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v20 = MEMORY[0x23B7EF2F4](v14);
  if (!v20)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_23624E76C(v20 + OBJC_IVAR____TtC13AppProtection22APExtensionInfoService_policy, (uint64_t)v26);
  swift_unknownObjectRelease();
  v21 = v27;
  v22 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 40))(v21, v22);
  sub_23624EC88(v8, v9, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
LABEL_12:
  v24 = (void *)sub_2362CB794();
  (*(void (**)(uint64_t, void *, _QWORD))(a3 + 16))(a3, v24, 0);

}

unint64_t sub_236288638()
{
  unint64_t result;

  result = qword_2563D6478;
  if (!qword_2563D6478)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563D6478);
  }
  return result;
}

uint64_t sub_236288674(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B7EF18C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2362886B4(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23625AD00((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_236297B14(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23625B4F8(a1, &qword_2542A51F0);
    sub_236289CE8((uint64_t)a2, (uint64_t)v7);

    return sub_23625B4F8((uint64_t)v7, &qword_2542A51F0);
  }
}

uint64_t sub_23628876C()
{
  return swift_unknownObjectRetain();
}

void sub_236288774()
{
  JUMPOUT(0x23B7EF2F4);
}

id sub_2362887EC()
{
  return sub_2362714C8(type metadata accessor for DefaultSubjectMonitorToken);
}

uint64_t type metadata accessor for DefaultSubjectMonitorToken()
{
  return objc_opt_self();
}

uint64_t sub_23628882C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  __int128 v33[3];

  v1 = swift_bridgeObjectRetain();
  v3 = sub_236289DD4(v1, v2);
  swift_bridgeObjectRelease_n();
  *v0 = v3;
  v27 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v28 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
LABEL_8:
      v13 = *(_QWORD *)(v3 + 56);
      *(_QWORD *)&v29 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
      v14 = (void *)v29;
      sub_23624E76C(v13 + 40 * v12, (uint64_t)&v29 + 8);
      v15 = v14;
      goto LABEL_27;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v16 < v28)
    {
      v17 = *(_QWORD *)(v27 + 8 * v16);
      if (v17)
        goto LABEL_12;
      v18 = v8 + 2;
      ++v8;
      if (v16 + 1 < v28)
      {
        v17 = *(_QWORD *)(v27 + 8 * v18);
        if (v17)
          goto LABEL_15;
        v8 = v16 + 1;
        if (v16 + 2 < v28)
        {
          v17 = *(_QWORD *)(v27 + 8 * (v16 + 2));
          if (v17)
          {
            v16 += 2;
            goto LABEL_12;
          }
          v18 = v16 + 3;
          v8 = v16 + 2;
          if (v16 + 3 < v28)
            break;
        }
      }
    }
LABEL_26:
    v6 = 0;
    v30 = 0u;
    v31 = 0u;
    v29 = 0u;
LABEL_27:
    sub_23628A420((uint64_t)&v29, (uint64_t)&v32);
    v19 = v32;
    if (!v32)
    {
      swift_release();
      return (uint64_t)v9;
    }
    sub_23625AD00(v33, (uint64_t)&v29);
    v20 = *((_QWORD *)&v30 + 1);
    v21 = v31;
    __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    if (v22)
    {
      v23 = v22;
      v24 = v19;
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_2362AB0E4(0, v9[2] + 1, 1, v9);
      v26 = v9[2];
      v25 = v9[3];
      if (v26 >= v25 >> 1)
        v9 = sub_2362AB0E4((_QWORD *)(v25 > 1), v26 + 1, 1, v9);
      v9[2] = v26 + 1;
      v10 = &v9[2 * v26];
      v10[4] = v24;
      v10[5] = v23;
      swift_unknownObjectRelease();
    }

    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_15:
    v16 = v18;
LABEL_12:
    v6 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v16 << 6);
    v8 = v16;
    goto LABEL_8;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v28)
    {
      v8 = v28 - 1;
      goto LABEL_26;
    }
    v17 = *(_QWORD *)(v27 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_12;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_236288B0C(_BYTE *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  void *v12;
  void *v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  _BYTE *v37;
  char *v38;
  unint64_t v39;

  v2 = v1;
  v4 = sub_2362C9740();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v37 = a1;
    v38 = v2;
    v39 = MEMORY[0x24BEE4AF8];
    sub_2362CBAB8();
    v7 = sub_2362C3070(v4);
    v9 = v8;
    v11 = v10 & 1;
    a1 = (_BYTE *)(v4 + 56);
    v12 = (void *)objc_opt_self();
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v4 + 32))
    {
      if (((*(_QWORD *)&a1[((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8] >> v7) & 1) == 0)
        goto LABEL_37;
      if (*(_DWORD *)(v4 + 36) != v9)
        goto LABEL_38;
      swift_bridgeObjectRetain();
      v13 = (void *)sub_2362CB674();
      v2 = (char *)objc_msgSend(v12, sel_applicationWithBundleIdentifier_, v13);
      swift_bridgeObjectRelease();

      sub_2362CBAA0();
      sub_2362CBAC4();
      sub_2362CBAD0();
      sub_2362CBAAC();
      v14 = sub_2362C3110(v7, v9, v11 & 1, v4);
      v7 = v14;
      v9 = v15;
      v11 = v16 & 1;
      if (!--v5)
      {
        sub_23628A414(v14, v15, v16 & 1);
        v36 = v39;
        swift_bridgeObjectRelease();
        a1 = v37;
        v2 = v38;
        v6 = MEMORY[0x24BEE4AF8];
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  v36 = MEMORY[0x24BEE4AF8];
LABEL_10:
  v39 = v6;
  if (((a1[49] ^ a1[48]) & 1) != 0)
  {
    v17 = objc_msgSend((id)objc_opt_self(), sel_lockedMetaSubject);
    MEMORY[0x23B7EE4B4]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_12:
      sub_2362CB788();
      sub_2362CB770();
      goto LABEL_13;
    }
LABEL_39:
    sub_2362CB77C();
    goto LABEL_12;
  }
LABEL_13:
  if ((a1[51] & 1) != (a1[50] & 1))
  {
    v18 = objc_msgSend((id)objc_opt_self(), sel_hiddenMetaSubject);
    MEMORY[0x23B7EE4B4]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2362CB77C();
    sub_2362CB788();
    sub_2362CB770();
  }
  v19 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState];
  swift_retain();
  os_unfair_lock_lock(v19 + 6);
  v20 = sub_23628882C();
  os_unfair_lock_unlock(v19 + 6);
  swift_release();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = (void **)(v20 + 40);
    v23 = (_QWORD *)&unk_2563D7000;
    while (1)
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = v23[174];
      if ((*((_BYTE *)v24 + v26) & 1) == 0)
      {
        v27 = v24;
        swift_unknownObjectRetain();
        goto LABEL_27;
      }
      if (!(v36 >> 62))
        break;
      v32 = v24;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v33 = sub_2362CBB18();
      v23 = (_QWORD *)&unk_2563D7000;
      swift_bridgeObjectRelease();
      if (v33)
      {
        type metadata accessor for APSubject(0);
        swift_bridgeObjectRetain();
        sub_2362CBB0C();
        swift_bridgeObjectRelease();
LABEL_26:
        type metadata accessor for APSubject(0);
        v30 = (void *)sub_2362CB758();
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_appProtectionSubjectsChanged_forSubscription_, v30, v24);

        v23 = &unk_2563D7000;
      }
LABEL_27:
      if ((*((_BYTE *)v24 + v26) & 2) != 0)
      {
        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          v34 = sub_2362CBB18();
          swift_bridgeObjectRelease();
          if (v34)
          {
LABEL_30:
            type metadata accessor for APSubject(0);
            swift_bridgeObjectRetain();
            v31 = (void *)sub_2362CB758();
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_appProtectionSubjectsChanged_forSubscription_, v31, v24);
            swift_unknownObjectRelease();

            goto LABEL_20;
          }
        }
        else if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_30;
        }
      }

      swift_unknownObjectRelease();
LABEL_20:
      v22 += 2;
      if (!--v21)
        goto LABEL_35;
    }
    v28 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v29 = v24;
    swift_unknownObjectRetain();
    if (!v28)
      goto LABEL_27;
    swift_bridgeObjectRetain();
    sub_2362CBBF0();
    type metadata accessor for APSubject(0);
    goto LABEL_26;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236289044(_BYTE *a1)
{
  return sub_236288B0C(a1);
}

id sub_236289064(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  os_unfair_lock_s *v9;
  objc_super v11;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (objc_class *)type metadata accessor for DefaultSubjectMonitorToken();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_subjectMask] = -1;
  v6 = &v5[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_invalidationHandler];
  *(_QWORD *)v6 = sub_23628A478;
  *((_QWORD *)v6 + 1) = v3;
  v11.receiver = v5;
  v11.super_class = v4;
  v7 = v1;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = *(os_unfair_lock_s **)&v7[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState];
  swift_retain();
  os_unfair_lock_lock(v9 + 6);
  sub_236289478((uint64_t)&v9[4], 0, v8, a1);
  os_unfair_lock_unlock(v9 + 6);
  swift_release();
  return v8;
}

id sub_2362891B0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  os_unfair_lock_s *v11;
  objc_super v13;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  v6 = (objc_class *)type metadata accessor for DefaultSubjectMonitorToken();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_subjectMask] = a2;
  v8 = &v7[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_invalidationHandler];
  *(_QWORD *)v8 = sub_23628A478;
  *((_QWORD *)v8 + 1) = v5;
  v13.receiver = v7;
  v13.super_class = v6;
  v9 = v2;
  v10 = objc_msgSendSuper2(&v13, sel_init);
  v11 = *(os_unfair_lock_s **)&v9[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState];
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_236289478((uint64_t)&v11[4], 0, v10, a1);
  os_unfair_lock_unlock(v11 + 6);
  swift_release();
  return v10;
}

id sub_236289304(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  uint64_t (**v10)(void *);
  char *v11;
  id v12;
  os_unfair_lock_s *v13;
  objc_super v15;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  v8 = (objc_class *)type metadata accessor for DefaultSubjectMonitorToken();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_subjectMask] = a2;
  v10 = (uint64_t (**)(void *))&v9[OBJC_IVAR____TtC13AppProtection26DefaultSubjectMonitorToken_invalidationHandler];
  *v10 = sub_2362896C0;
  v10[1] = (uint64_t (*)(void *))v7;
  v15.receiver = v9;
  v15.super_class = v8;
  v11 = v3;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  v13 = *(os_unfair_lock_s **)&v11[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState];
  swift_retain();
  os_unfair_lock_lock(v13 + 6);
  sub_236289478((uint64_t)&v13[4], a3, v12, a1);
  os_unfair_lock_unlock(v13 + 6);
  swift_release();
  return v12;
}

uint64_t sub_236289400(void *a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  _OWORD v5[2];
  uint64_t v6;

  v3 = *(os_unfair_lock_s **)(a2 + OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  sub_2362886B4((uint64_t)v5, a1);
  os_unfair_lock_unlock(v3 + 6);
  return swift_release();
}

uint64_t sub_236289478(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  id v5;
  _BYTE v7[8];
  _BYTE v8[40];
  _QWORD v9[3];
  ValueMetadata *v10;
  _UNKNOWN **v11;

  if ((a2 & 1) != 0)
  {
    swift_unknownObjectWeakInit();
    v10 = &type metadata for WeakMonitorReference;
    v11 = &off_250793FF8;
    v9[0] = swift_allocObject();
    sub_2362799D4((uint64_t)v7, v9[0] + 16);
    sub_23624E76C((uint64_t)v9, (uint64_t)v8);
    sub_2362886B4((uint64_t)v8, a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return sub_236279A10((uint64_t)v7);
  }
  else
  {
    v10 = &type metadata for StrongMonitorReference;
    v11 = &off_2507943C8;
    v9[0] = a4;
    sub_23624E76C((uint64_t)v9, (uint64_t)v8);
    v5 = a3;
    swift_unknownObjectRetain();
    sub_2362886B4((uint64_t)v8, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
}

id sub_236289608()
{
  return sub_2362714C8(type metadata accessor for DefaultSubjectMonitorRegistry);
}

uint64_t type metadata accessor for DefaultSubjectMonitorRegistry()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DefaultSubjectMonitorRegistry.State()
{
  return &type metadata for DefaultSubjectMonitorRegistry.State;
}

ValueMetadata *type metadata accessor for WeakMonitorReference()
{
  return &type metadata for WeakMonitorReference;
}

uint64_t sub_23628969C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362896C0(void *a1)
{
  uint64_t v1;

  return sub_236289400(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2362896C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

unint64_t sub_2362896F0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2362CBA04();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2362CBC8C();
        swift_bridgeObjectRetain();
        sub_2362CB710();
        v9 = sub_2362CBCBC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2362898C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2362CBA04();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_2362CBC80();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_236289A58(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_2362CBA04();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v13 = sub_2362CB9A4();

        v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = *(_QWORD *)(a2 + 48);
            v18 = (_QWORD *)(v17 + 8 * v3);
            v19 = (_QWORD *)(v17 + 8 * v6);
            if (v3 != v6 || v18 >= v19 + 1)
              *v18 = *v19;
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 40 * v3;
            v22 = (__int128 *)(v20 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              v10 = *v22;
              v11 = v22[1];
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
              *(_OWORD *)v21 = v10;
              *(_OWORD *)(v21 + 16) = v11;
              v3 = v6;
            }
          }
        }
        else if (v14 >= v9 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_236289C1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2362934D8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_236296858();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_2362896F0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_236289CE8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2362936B0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236296F34();
      v9 = v11;
    }

    sub_23625AD00((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_236289A58(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_236289DD4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v11 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_236289F24((_QWORD *)((char *)v11 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    if (v2)
      swift_willThrow();
    else
      return v7;
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    sub_236289F24((unint64_t *)v8, v5, v3);
    v3 = v9;
    MEMORY[0x23B7EF258](v8, -1, -1);
  }
  return v3;
}

void sub_236289F24(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void *v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31;

  v23 = 0;
  v3 = 0;
  v31 = a3;
  v6 = *(_QWORD *)(a3 + 64);
  v4 = a3 + 64;
  v5 = v6;
  v7 = 1 << *(_BYTE *)(v4 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v5;
  v24 = v4;
  v25 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v3 << 6);
LABEL_5:
    v12 = *(void **)(*(_QWORD *)(v31 + 48) + 8 * v11);
    sub_23624E76C(*(_QWORD *)(v31 + 56) + 40 * v11, (uint64_t)v30);
    v26 = v12;
    sub_23624E76C((uint64_t)v30, (uint64_t)v27);
    v13 = v28;
    v14 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    v16 = v12;
    if (v15(v13, v14))
    {
      swift_unknownObjectRelease();
      sub_23625B4F8((uint64_t)&v26, (uint64_t *)&unk_2563D7610);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_25:
        sub_23628A170(a1, a2, v23, v31);
        return;
      }
    }
    else
    {
      sub_23625B4F8((uint64_t)&v26, (uint64_t *)&unk_2563D7610);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

    }
  }
  v17 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v17 >= v25)
    goto LABEL_25;
  v18 = *(_QWORD *)(v24 + 8 * v17);
  ++v3;
  if (v18)
    goto LABEL_21;
  v3 = v17 + 1;
  if (v17 + 1 >= v25)
    goto LABEL_25;
  v18 = *(_QWORD *)(v24 + 8 * v3);
  if (v18)
    goto LABEL_21;
  v3 = v17 + 2;
  if (v17 + 2 >= v25)
    goto LABEL_25;
  v18 = *(_QWORD *)(v24 + 8 * v3);
  if (v18)
  {
LABEL_21:
    v9 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v3 << 6);
    goto LABEL_5;
  }
  v19 = v17 + 3;
  if (v19 >= v25)
    goto LABEL_25;
  v18 = *(_QWORD *)(v24 + 8 * v19);
  if (v18)
  {
    v3 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v3 >= v25)
      goto LABEL_25;
    v18 = *(_QWORD *)(v24 + 8 * v3);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_23628A170(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  __int128 v30[2];
  __int128 v31[2];

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5378);
  result = sub_2362CBB3C();
  v8 = result;
  v28 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v28)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v28)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v28)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v28)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v28)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v13);
    sub_23624E76C(*(_QWORD *)(v4 + 56) + 40 * v13, (uint64_t)v31);
    sub_23625AD00(v31, (uint64_t)v30);
    v18 = v17;
    result = sub_2362CB9A4();
    v19 = -1 << *(_BYTE *)(v8 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v22) = v18;
    result = sub_23625AD00(v30, *(_QWORD *)(v8 + 56) + 40 * v22);
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23628A414(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23628A420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for StrongMonitorReference()
{
  return &type metadata for StrongMonitorReference;
}

uint64_t sub_23628A484()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23628A4B8 + 4 * byte_2362CF500[*v0]))(0x55556E696769726FLL, 0xEA00000000004449);
}

unint64_t sub_23628A4B8()
{
  return 0xD000000000000017;
}

uint64_t sub_23628A4E0()
{
  return 0x6E6F6973726576;
}

uint64_t sub_23628A4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23628C934(a1, a2);
  *a3 = result;
  return result;
}

void sub_23628A51C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23628A528()
{
  sub_23628CD60();
  return sub_2362CBD04();
}

uint64_t sub_23628A550()
{
  sub_23628CD60();
  return sub_2362CBD10();
}

uint64_t sub_23628A578@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v22 = a2;
  v23 = sub_2362CB428();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v4);
  v24 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7620);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Backup(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23628CD60();
  v26 = v9;
  v14 = v27;
  sub_2362CBCEC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v10;
  v15 = (uint64_t)a1;
  LOBYTE(v29) = 0;
  sub_23624E3C4((unint64_t *)&unk_2563D7630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v23;
  v16 = v24;
  sub_2362CBB6C();
  v21 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v13, v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B8);
  v28 = 1;
  sub_23628CE24(&qword_2563D7640, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
  sub_2362CBB6C();
  v18 = v27;
  *(_QWORD *)&v13[*(int *)(v27 + 20)] = v29;
  v28 = 2;
  v19 = v26;
  sub_2362CBB6C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v25);
  *(_QWORD *)&v13[*(int *)(v18 + 24)] = v29;
  sub_23628CDA4((uint64_t)v13, v22);
  __swift_destroy_boxed_opaque_existential_1(v15);
  return sub_23628CDE8((uint64_t)v13);
}

uint64_t sub_23628A898(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7648);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23628CD60();
  sub_2362CBCF8();
  LOBYTE(v14) = 0;
  sub_2362CB428();
  sub_23624E3C4(&qword_2563D7650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2362CBB9C();
  if (!v2)
  {
    v10 = type metadata accessor for Backup(0);
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 20));
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B8);
    sub_23628CE24((unint64_t *)&unk_2563D7658, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    sub_2362CBB9C();
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_2362CBB9C();
    LOBYTE(v14) = 3;
    sub_2362CBB90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_23628AA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_2362CB2A8();
  swift_allocObject();
  sub_2362CB29C();
  v2 = type metadata accessor for Backup(0);
  sub_23624E3C4((unint64_t *)&unk_2563D7668, type metadata accessor for Backup, (uint64_t)&unk_2362CF5E8);
  sub_2362CB290();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_23628AD28()
{
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  type metadata accessor for Backup(0);
  swift_bridgeObjectRetain();
  sub_2362CB7B8();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  swift_bridgeObjectRetain();
  sub_2362CB7B8();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB428();
  sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_2362CBBC0();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0x6C2870756B636142;
}

uint64_t sub_23628AED0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23628A578(a1, a2);
}

uint64_t sub_23628AEE4(_QWORD *a1)
{
  return sub_23628A898(a1);
}

uint64_t sub_23628AEFC()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_transaction);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
    *(_QWORD *)(v1 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
    sub_23628AFCC();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

_QWORD *sub_23628AF90(_QWORD *result)
{
  _QWORD *v1;

  if (!*result)
  {
    v1 = result;
    result = (_QWORD *)os_transaction_create();
    *v1 = result;
  }
  return result;
}

uint64_t sub_23628AFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  char *v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t result;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v1 = sub_2362CB308();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_2362CB38C();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Backup(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v36 - v19;
  sub_2362CB890();
  sub_23628CF20((uint64_t)v20, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
  {
    sub_23628CE84((uint64_t)v20);
    v20 = v17;
    return sub_23628CE84((uint64_t)v20);
  }
  sub_23628CEC4((uint64_t)v17, (uint64_t)v12);
  sub_2362CB2CC();
  swift_allocObject();
  sub_2362CB2C0();
  sub_23624E3C4(&qword_2563D7678, type metadata accessor for Backup, (uint64_t)&unk_2362CF5C0);
  v21 = sub_2362CB2B4();
  if (!v0)
  {
    v23 = v21;
    v37 = v22;
    v38 = v12;
    swift_release();
    v24 = v44;
    if (qword_2563D5D60 != -1)
      swift_once();
    __swift_project_value_buffer(v24, (uint64_t)qword_2563D4278);
    v42 = 0xD000000000000019;
    v43 = 0x80000002362D6810;
    v26 = v39;
    v25 = v40;
    (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v4, *MEMORY[0x24BDCD7A0], v40);
    sub_23628CD04();
    sub_2362CB380();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
    swift_bridgeObjectRelease();
    v27 = v37;
    sub_2362CB3D4();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v24);
    sub_23625EFAC(v23, v27);
    v28 = (uint64_t)v38;
    if (qword_2563D4178 != -1)
      swift_once();
    v29 = sub_2362CB494();
    __swift_project_value_buffer(v29, (uint64_t)qword_2563DB5D8);
    v30 = sub_2362CB47C();
    v31 = sub_2362CB848();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = v20;
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23624C000, v30, v31, "Wrote backup.", v33, 2u);
      v34 = v33;
      v20 = v32;
      MEMORY[0x23B7EF258](v34, -1, -1);
    }

    sub_23628CDE8(v28);
    return sub_23628CE84((uint64_t)v20);
  }
  swift_release();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_23628B57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = sub_2362CB428();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1 + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_originUUID, v5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  sub_2362BA1B8((uint64_t)sub_2362BAA9C, 0);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (qword_2563D4178 != -1)
      swift_once();
    v12 = sub_2362CB494();
    __swift_project_value_buffer(v12, (uint64_t)qword_2563DB5D8);
    v13 = v2;
    v14 = v2;
    v15 = sub_2362CB47C();
    v16 = sub_2362CB83C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v18 = v2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v28 = v19;
      sub_2362CB9C8();
      v20 = v27;
      *v27 = v19;

      _os_log_impl(&dword_23624C000, v15, v16, "couldn't get locked or hidden bundle identifiers to backup: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v20, -1, -1);
      MEMORY[0x23B7EF258](v17, -1, -1);

    }
    else
    {

    }
    v21 = type metadata accessor for Backup(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
  else
  {
    v11 = v10;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
    sub_2362BA1B8((uint64_t)sub_2362BAAEC, 0);
    v23 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v9, v5);
    v24 = type metadata accessor for Backup(0);
    *(_QWORD *)(a2 + *(int *)(v24 + 20)) = v11;
    *(_QWORD *)(a2 + *(int *)(v24 + 24)) = v23;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a2, 0, 1, v24);
  }
}

uint64_t sub_23628B8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  _QWORD *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  int v77;
  _BOOL4 v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  unint64_t v96;
  unint64_t v97;
  void (*v98)(_QWORD, _QWORD, _QWORD);
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109[2];
  uint64_t v110;
  unint64_t v111;

  v94 = sub_2362CB428();
  v91 = *(_QWORD *)(v94 - 8);
  v3 = MEMORY[0x24BDAC7A8](v94, v2);
  v90 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v93 = (uint64_t)&v88 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Backup(0);
  v108 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v88 - v17;
  v107 = sub_2362CB308();
  v19 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107, v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2362CB38C();
  v105 = *(uint8_t **)(v23 - 8);
  v106 = v23;
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v101 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v100 = (char *)&v88 - v28;
  if (qword_2563D4178 != -1)
    swift_once();
  v29 = sub_2362CB494();
  v102 = __swift_project_value_buffer(v29, (uint64_t)qword_2563DB5D8);
  v30 = sub_2362CB47C();
  v31 = sub_2362CB848();
  v32 = os_log_type_enabled(v30, v31);
  v33 = &unk_2563D5000;
  v92 = v18;
  v103 = v11;
  v104 = a1;
  v89 = v15;
  if (v32)
  {
    v99 = v10;
    v34 = (uint8_t *)swift_slowAlloc();
    v98 = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
    v109[0] = (uint64_t)v98;
    *(_DWORD *)v34 = 136315138;
    if (qword_2563D5D60 != -1)
      swift_once();
    v35 = v106;
    __swift_project_value_buffer(v106, (uint64_t)qword_2563D4278);
    v110 = 0xD000000000000019;
    v111 = 0x80000002362D6810;
    v36 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v22, *MEMORY[0x24BDCD7A0], v107);
    sub_23628CD04();
    v37 = v100;
    sub_2362CB380();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v36);
    swift_bridgeObjectRelease();
    sub_23624E3C4((unint64_t *)&qword_2563D3E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v38 = sub_2362CBBC0();
    v40 = v39;
    (*((void (**)(char *, uint64_t))v105 + 1))(v37, v35);
    v110 = sub_2362AB670(v38, v40, v109);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v30, v31, "Checking for remote backup info in %s", v34, 0xCu);
    v41 = v98;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v41, -1, -1);
    MEMORY[0x23B7EF258](v34, -1, -1);

    v11 = v103;
    v10 = v99;
    v33 = (_QWORD *)&unk_2563D5000;
  }
  else
  {

  }
  if (v33[428] != -1)
    swift_once();
  v42 = v106;
  v43 = __swift_project_value_buffer(v106, (uint64_t)qword_2563D4278);
  v97 = (unint64_t)"ntStore";
  v110 = 0xD000000000000019;
  v111 = 0x80000002362D6810;
  v44 = *MEMORY[0x24BDCD7A0];
  v45 = v107;
  v98 = *(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 104);
  v98(v22, v44, v107);
  v46 = sub_23628CD04();
  v47 = v101;
  v96 = v46;
  v99 = (char *)v43;
  sub_2362CB380();
  v95 = *(void (**)(char *, uint64_t))(v19 + 8);
  v95(v22, v45);
  swift_bridgeObjectRelease();
  v48 = sub_2362CB398();
  v50 = v49;
  v51 = (void (*)(char *, uint64_t))*((_QWORD *)v105 + 1);
  v51(v47, v42);
  sub_23628AA98((uint64_t)v10);
  sub_23625EFAC(v48, v50);
  v52 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v10, 1, v11) == 1)
  {
    sub_23628CE84((uint64_t)v10);
    v53 = sub_2362CB47C();
    v54 = sub_2362CB848();
    v55 = os_log_type_enabled(v53, v54);
    v56 = v104;
    if (v55)
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v106 = v58;
      *(_DWORD *)v57 = 136446210;
      v109[0] = v58;
      v105 = v57 + 4;
      v110 = 0xD000000000000019;
      v111 = v97 | 0x8000000000000000;
      v59 = v44;
      v60 = v107;
      v98(v22, v59, v107);
      v61 = v100;
      sub_2362CB380();
      v95(v22, v60);
      swift_bridgeObjectRelease();
      sub_23624E3C4((unint64_t *)&qword_2563D3E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v62 = sub_2362CBBC0();
      v64 = v63;
      v51(v61, v52);
      v110 = sub_2362AB670(v62, v64, v109);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v53, v54, "No backup at %{public}s", v57, 0xCu);
      v65 = 1;
      v66 = v106;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v66, -1, -1);
      v67 = v57;
      v56 = v104;
      MEMORY[0x23B7EF258](v67, -1, -1);

    }
    else
    {

      v65 = 1;
    }
    v11 = v103;
  }
  else
  {
    v69 = (uint64_t)v92;
    sub_23628CEC4((uint64_t)v10, (uint64_t)v92);
    v70 = v93;
    sub_23629886C(v93);
    v71 = (uint64_t)v89;
    sub_23628CDA4(v69, (uint64_t)v89);
    v72 = v91;
    v73 = v90;
    v74 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v70, v94);
    v75 = sub_2362CB47C();
    v76 = sub_2362CB848();
    v77 = v76;
    v78 = os_log_type_enabled(v75, v76);
    v56 = v104;
    if (v78)
    {
      v79 = swift_slowAlloc();
      v107 = swift_slowAlloc();
      v110 = v107;
      *(_DWORD *)v79 = 136446466;
      sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      LODWORD(v106) = v77;
      v80 = sub_2362CBBC0();
      v109[0] = sub_2362AB670(v80, v81, &v110);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      sub_23628CDE8(v71);
      *(_WORD *)(v79 + 12) = 2082;
      v82 = sub_2362CBBC0();
      v109[0] = sub_2362AB670(v82, v83, &v110);
      v74 = v94;
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      v84 = *(void (**)(char *, uint64_t))(v91 + 8);
      v84(v73, v74);
      _os_log_impl(&dword_23624C000, v75, (os_log_type_t)v106, "Backup origin UUID is %{public}s, container instance UUID is %{public}s", (uint8_t *)v79, 0x16u);
      v85 = v107;
      swift_arrayDestroy();
      v69 = (uint64_t)v92;
      MEMORY[0x23B7EF258](v85, -1, -1);
      v86 = v79;
      v70 = v93;
      MEMORY[0x23B7EF258](v86, -1, -1);
    }
    else
    {
      sub_23628CDE8(v71);
      v84 = *(void (**)(char *, uint64_t))(v72 + 8);
      v84(v73, v74);
    }

    sub_23624E3C4(&qword_2542A51C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v87 = sub_2362CB650();
    v84((char *)v70, v74);
    if ((v87 & 1) != 0)
    {
      sub_23628CDE8(v69);
      v65 = 1;
    }
    else
    {
      sub_23628CEC4(v69, v56);
      v65 = 0;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56))(v56, v65, 1, v11);
}

uint64_t sub_23628C2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  v1 = v0 + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_originUUID;
  v2 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23628C33C()
{
  return type metadata accessor for ContainerBasedBackupManager(0);
}

uint64_t type metadata accessor for ContainerBasedBackupManager(uint64_t a1)
{
  return sub_23628C7CC(a1, qword_2563D5DF8);
}

uint64_t sub_23628C358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2362CB428();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_23628C3EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2362CB428();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23628C488(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23628C4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23628C548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23628C5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23628C634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23628C6AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23628C6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2362CB428();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23628C734()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23628C740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2362CB428();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for Backup(uint64_t a1)
{
  return sub_23628C7CC(a1, qword_2563D4320);
}

uint64_t sub_23628C7CC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23628C800()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2362CB428();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23628C878()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC13AppProtection27ContainerBasedBackupManager_transaction);
  v3 = v2 + 4;
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_23628AF90(v3);
  os_unfair_lock_unlock(v4);
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_state);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 7;
  os_unfair_lock_lock(v5 + 7);
  sub_23628CD48(v6);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_23628C90C@<X0>(uint64_t a1@<X8>)
{
  return sub_23628B8B0(a1);
}

id sub_23628C920()
{
  return sub_23628CAE8();
}

uint64_t sub_23628C934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x55556E696769726FLL && a2 == 0xEA00000000004449;
  if (v2 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002362D6870 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002362D6890 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id sub_23628CAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  id result;
  void *v14;
  id v16[3];

  v16[2] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_2362CB308();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB38C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_2563D5D60 != -1)
    swift_once();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563D4278);
  v16[0] = (id)0xD000000000000019;
  v16[1] = (id)0x80000002362D6810;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BDCD7A0], v0);
  sub_23628CD04();
  sub_2362CB380();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  v11 = (void *)sub_2362CB338();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v16[0] = 0;
  v12 = objc_msgSend(v10, sel_removeItemAtURL_error_, v11, v16);

  result = v16[0];
  if ((v12 & 1) == 0)
  {
    v14 = result;
    sub_2362CB2E4();

    return (id)swift_willThrow();
  }
  return result;
}

unint64_t sub_23628CD04()
{
  unint64_t result;

  result = qword_2563D4190;
  if (!qword_2563D4190)
  {
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2563D4190);
  }
  return result;
}

uint64_t sub_23628CD48(uint64_t a1)
{
  uint64_t v1;

  return sub_23629F0DC(a1, v1);
}

unint64_t sub_23628CD60()
{
  unint64_t result;

  result = qword_2563D7628;
  if (!qword_2563D7628)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CF6E8, &type metadata for Backup.BackupCodingKey);
    atomic_store(result, (unint64_t *)&qword_2563D7628);
  }
  return result;
}

uint64_t sub_23628CDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Backup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23628CDE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Backup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23628CE24(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D41B8);
    v8 = a2;
    result = MEMORY[0x23B7EF18C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23628CE84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23628CEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Backup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23628CF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23628B57C(v1, a1);
}

uint64_t sub_23628CF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for Backup.BackupCodingKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Backup.BackupCodingKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23628D044 + 4 * byte_2362CF509[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23628D078 + 4 * byte_2362CF504[v4]))();
}

uint64_t sub_23628D078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23628D080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23628D088);
  return result;
}

uint64_t sub_23628D094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23628D09CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23628D0A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23628D0A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Backup.BackupCodingKey()
{
  return &type metadata for Backup.BackupCodingKey;
}

unint64_t sub_23628D0C8()
{
  unint64_t result;

  result = qword_2563D7680;
  if (!qword_2563D7680)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CF6C0, &type metadata for Backup.BackupCodingKey);
    atomic_store(result, (unint64_t *)&qword_2563D7680);
  }
  return result;
}

unint64_t sub_23628D110()
{
  unint64_t result;

  result = qword_2563D7688;
  if (!qword_2563D7688)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CF630, &type metadata for Backup.BackupCodingKey);
    atomic_store(result, (unint64_t *)&qword_2563D7688);
  }
  return result;
}

unint64_t sub_23628D158()
{
  unint64_t result;

  result = qword_2563D7690;
  if (!qword_2563D7690)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CF658, &type metadata for Backup.BackupCodingKey);
    atomic_store(result, (unint64_t *)&qword_2563D7690);
  }
  return result;
}

void sub_23628D1B4(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);

}

id sub_23628D218()
{
  id result;

  result = APGetMaintenanceServiceInterface();
  qword_2563DB630 = (uint64_t)result;
  return result;
}

id sub_23628D268()
{
  return sub_2362714C8(type metadata accessor for APMaintenanceClient);
}

uint64_t type metadata accessor for APMaintenanceClient()
{
  return objc_opt_self();
}

id sub_23628D2A4()
{
  if (qword_2563D5D48 != -1)
    swift_once();
  return (id)qword_2563DB630;
}

id sub_23628D310()
{
  return sub_2362714C8(type metadata accessor for APMaintenanceService);
}

uint64_t type metadata accessor for APMaintenanceService()
{
  return objc_opt_self();
}

uint64_t sub_23628D34C()
{
  return sub_23628D4A0(&qword_2563D3FD0, (uint64_t)&unk_2362CF7C4);
}

uint64_t sub_23628D370()
{
  return 3;
}

uint64_t sub_23628D378@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APMaintenanceService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

id sub_23628D3F0()
{
  objc_class *v0;
  char *v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for APMaintenanceClient();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13AppProtection19APMaintenanceClient_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_250793EA0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_23628D46C(uint64_t a1)
{
  uint64_t result;

  result = sub_23628D4A0(&qword_2563D3FD8, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23628D4A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for APMaintenanceClient();
    result = MEMORY[0x23B7EF18C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23628D4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = MEMORY[0x23B7EF2F4](a1 + OBJC_IVAR____TtC13AppProtection19APMaintenanceClient_delegate);
  if (v3)
  {
    sub_23624E76C(v3 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy, (uint64_t)v11);
    swift_unknownObjectRelease();
    v4 = v12;
    v5 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v5 + 120))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v6 = sub_2362CB494();
  __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
  v7 = sub_2362CB47C();
  v8 = sub_2362CB848();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23624C000, v7, v8, "all accesses cleared.", v9, 2u);
    MEMORY[0x23B7EF258](v9, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, 0);
}

void sub_23628D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  objc_class *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v29;

  v3 = MEMORY[0x23B7EF2F4](a1 + OBJC_IVAR____TtC13AppProtection19APMaintenanceClient_delegate);
  if (v3)
  {
    v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy);
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy + 24);
    v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC13AppProtection20APMaintenanceService_policy), v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    v7 = v4[3];
    v8 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    v9 = v4[3];
    v10 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    v11 = v4[3];
    v12 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v11);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 128))(v11, v12);
    v17 = objc_allocWithZone((Class)APClientState);
    v18 = (void *)sub_2362CB7A0();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_2362CB7A0();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_2362CB7A0();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v17, sel_initWithLockedAppBundleIdentifiers_hiddenAppBundleIdentifiers_effectivelyLockedBundleIdentifiers_, v18, v19, v20);

    v22 = objc_allocWithZone((Class)APStateDump);
    v23 = (objc_class *)_s17AccessListWrapperCMa();
    v24 = (char *)objc_allocWithZone(v23);
    *(_QWORD *)&v24[OBJC_IVAR____TtCE13AppProtectionCSo11APStateDumpP33_08AD371E34EDC7245D13D99B4228357017AccessListWrapper_accesses] = v16;
    v29.receiver = v24;
    v29.super_class = v23;
    v25 = v21;
    v26 = objc_msgSendSuper2(&v29, sel_init);
    v27 = objc_msgSend(v22, sel_initWithState_accesses_, v25, v26);

    (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v27, 0);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_2362CB698();
    v13 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v14 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 45, 0);

    v28 = (id)sub_2362CB2D8();
    (*(void (**)(uint64_t, _QWORD, id))(a2 + 16))(a2, 0, v28);

  }
}

uint64_t sub_23628DB54()
{
  unsigned int v0;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  MKBGetDeviceLockState();
  v0 = MKBGetDeviceLockState();
  if (v0 < 4)
    return (7u >> (v0 & 0xF)) & 1;
  if (qword_2542A53D0 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2542A58F8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB830();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v3, v4, "unknown return %d from MKBGetDeviceLockState", v5, 8u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  return 0;
}

unint64_t sub_23628DC8C()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  unint64_t result;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v0 = (void *)xpc_copy_entitlement_for_self();
  if (!v0 || !xpc_BOOL_get_value(v0))
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v1 = sub_2362CB494();
    __swift_project_value_buffer(v1, (uint64_t)qword_2542A58F8);
    v2 = sub_2362CB47C();
    v3 = sub_2362CB830();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_23624C000, v2, v3, "Client is missing com.apple.private.accounts.allaccounts entitlement", v4, 2u);
      MEMORY[0x23B7EF258](v4, -1, -1);
    }

  }
  result = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (result)
  {
    v6 = (void *)result;
    v7 = objc_msgSend((id)result, sel_aa_primaryAppleAccount);

    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v8, sel_aa_ageCategory);

      swift_unknownObjectRelease();
      if ((unint64_t)v9 < 8)
        return 0x101000000000202uLL >> (8 * v9);
    }
    else
    {
      if (qword_2542A53D0 != -1)
        swift_once();
      v11 = sub_2362CB494();
      __swift_project_value_buffer(v11, (uint64_t)qword_2542A58F8);
      v12 = sub_2362CB47C();
      v13 = sub_2362CB848();
      if (os_log_type_enabled(v12, v13))
      {
        v10 = 2;
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23624C000, v12, v13, "primary account is nil", v14, 2u);
        MEMORY[0x23B7EF258](v14, -1, -1);
        swift_unknownObjectRelease();

        return v10;
      }

      swift_unknownObjectRelease();
    }
    return 2;
  }
  __break(1u);
  return result;
}

void sub_23628DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_2362CB2D8();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id sub_23628DF28()
{
  id result;

  result = APGetWriteServiceInterface();
  qword_2563DB678 = (uint64_t)result;
  return result;
}

uint64_t sub_23628DF64(void *a1, int a2, int a3, uint64_t a4, void *aBlock, void (*a6)(uint64_t, uint64_t, uint64_t, id, void *))
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v9 = _Block_copy(aBlock);
  v10 = sub_2362CB698();
  v12 = v11;
  _Block_copy(v9);
  v13 = a1;
  a6(v10, v12, a4, v13, v9);
  _Block_release(v9);
  _Block_release(v9);

  return swift_bridgeObjectRelease();
}

id sub_23628E024()
{
  return sub_2362714C8(type metadata accessor for APWriteClient);
}

uint64_t type metadata accessor for APWriteClient()
{
  return objc_opt_self();
}

id sub_23628E060()
{
  if (qword_2563D6A00 != -1)
    swift_once();
  return (id)qword_2563DB678;
}

id sub_23628E0CC()
{
  return sub_2362714C8(type metadata accessor for APWriteService);
}

uint64_t type metadata accessor for APWriteService()
{
  return objc_opt_self();
}

uint64_t sub_23628E108()
{
  return sub_23628E25C(&qword_2563D3F90, (uint64_t)&unk_2362CF840);
}

uint64_t sub_23628E12C()
{
  return 1;
}

uint64_t sub_23628E134@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APWriteService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection14APWriteService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

id sub_23628E1AC()
{
  objc_class *v0;
  char *v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for APWriteClient();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13AppProtection13APWriteClient_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_250793798;
  swift_unknownObjectWeakAssign();
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_23628E228(uint64_t a1)
{
  uint64_t result;

  result = sub_23628E25C(&qword_2563D3F98, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23628E25C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for APWriteClient();
    result = MEMORY[0x23B7EF18C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23628E298(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char *v10;
  os_unfair_lock_s *v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __CFString *v17;
  __CFString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  unint64_t v24;
  id v25;
  void *v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;

  if (qword_2542A53E0 != -1)
    swift_once();
  v10 = (char *)off_2542A5400 + 16;
  v11 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_23626909C((unint64_t)v10, 0, (char *)v27);
  os_unfair_lock_unlock(v11);
  v12 = LOBYTE(v27[0]);
  swift_release();
  if (v12 == 2)
  {
    v28 = &type metadata for AppProtectionFeatures;
    v29 = sub_236264AA0();
    LOBYTE(v27[0]) = 0;
    v13 = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    if ((v13 & 1) == 0)
    {
LABEL_5:
      v14 = sub_2362CB698();
      v16 = v15;
      v17 = _APErrorCodeDescription(2uLL);
      if (v17)
      {
        v18 = v17;
        v19 = sub_2362CB698();
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      v25 = sub_236294D50(v14, v16, 2, v19, v21, 32, 0xD000000000000029, 0x80000002362D6A70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (void *)sub_2362CB2D8();
      (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v26);

      return;
    }
  }
  else if ((v12 & 1) == 0)
  {
    goto LABEL_5;
  }
  v22 = MEMORY[0x23B7EF2F4](a4 + OBJC_IVAR____TtC13AppProtection13APWriteClient_delegate);
  if (v22)
  {
    sub_23624E76C(v22 + OBJC_IVAR____TtC13AppProtection14APWriteService_policy, (uint64_t)v27);
    swift_unknownObjectRelease();
    v23 = v28;
    v24 = v29;
    __swift_project_boxed_opaque_existential_1(v27, (uint64_t)v28);
    (*(void (**)(uint64_t, uint64_t, _QWORD, ValueMetadata *, unint64_t))(v24 + 56))(a1, a2, a3 & 1, v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  (*(void (**)(uint64_t, _QWORD))(a5 + 16))(a5, 0);
}

void sub_23628E534(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char *v10;
  os_unfair_lock_s *v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __CFString *v17;
  __CFString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  unint64_t v24;
  id v25;
  void *v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;

  if (qword_2542A53E0 != -1)
    swift_once();
  v10 = (char *)off_2542A5400 + 16;
  v11 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_23626909C((unint64_t)v10, 0, (char *)v27);
  os_unfair_lock_unlock(v11);
  v12 = LOBYTE(v27[0]);
  swift_release();
  if (v12 == 2)
  {
    v28 = &type metadata for AppProtectionFeatures;
    v29 = sub_236264AA0();
    LOBYTE(v27[0]) = 0;
    v13 = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    if ((v13 & 1) == 0)
    {
LABEL_5:
      v14 = sub_2362CB698();
      v16 = v15;
      v17 = _APErrorCodeDescription(2uLL);
      if (v17)
      {
        v18 = v17;
        v19 = sub_2362CB698();
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      v25 = sub_236294D50(v14, v16, 2, v19, v21, 46, 0xD000000000000029, 0x80000002362D6A40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (void *)sub_2362CB2D8();
      (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v26);

      return;
    }
  }
  else if ((v12 & 1) == 0)
  {
    goto LABEL_5;
  }
  v22 = MEMORY[0x23B7EF2F4](a4 + OBJC_IVAR____TtC13AppProtection13APWriteClient_delegate);
  if (v22)
  {
    sub_23624E76C(v22 + OBJC_IVAR____TtC13AppProtection14APWriteService_policy, (uint64_t)v27);
    swift_unknownObjectRelease();
    v23 = v28;
    v24 = v29;
    __swift_project_boxed_opaque_existential_1(v27, (uint64_t)v28);
    (*(void (**)(uint64_t, uint64_t, _QWORD, ValueMetadata *, unint64_t))(v24 + 48))(a1, a2, a3 & 1, v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  (*(void (**)(uint64_t, _QWORD))(a5 + 16))(a5, 0);
}

uint64_t sub_23628E7D0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

int8x8_t sub_23628E80C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  int64x2_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  int64x2_t v40;
  int16x8_t v41;
  int8x8_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64x2_t v49;
  uint64_t v50;
  int64x2_t v51;

  v3 = v2;
  v6 = objc_msgSend(v2, sel_hiddenAppBundleIdentifiers);
  v7 = sub_2362CB7AC();

  v8 = objc_msgSend(a1, sel_hiddenAppBundleIdentifiers);
  v9 = sub_2362CB7AC();

  if (*(_QWORD *)(v9 + 16) <= *(_QWORD *)(v7 + 16) >> 3)
  {
    sub_2362AC28C(v9);
    swift_bridgeObjectRelease();
    v47 = v7;
  }
  else
  {
    v47 = sub_2362AC420(v9, v7);
    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend(a1, sel_hiddenAppBundleIdentifiers);
  v11 = sub_2362CB7AC();

  v12 = objc_msgSend(v3, sel_hiddenAppBundleIdentifiers);
  v13 = sub_2362CB7AC();

  if (*(_QWORD *)(v13 + 16) <= *(_QWORD *)(v11 + 16) >> 3)
  {
    sub_2362AC28C(v13);
    swift_bridgeObjectRelease();
    v46 = v11;
  }
  else
  {
    v46 = sub_2362AC420(v13, v11);
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(v3, sel_lockedAppBundleIdentifiers);
  v15 = sub_2362CB7AC();

  v16 = objc_msgSend(a1, sel_lockedAppBundleIdentifiers);
  v17 = sub_2362CB7AC();

  if (*(_QWORD *)(v17 + 16) <= *(_QWORD *)(v15 + 16) >> 3)
  {
    sub_2362AC28C(v17);
    swift_bridgeObjectRelease();
    v45 = v15;
  }
  else
  {
    v45 = sub_2362AC420(v17, v15);
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend(a1, sel_lockedAppBundleIdentifiers);
  v19 = sub_2362CB7AC();

  v20 = objc_msgSend(v3, sel_lockedAppBundleIdentifiers);
  v21 = sub_2362CB7AC();

  if (*(_QWORD *)(v21 + 16) <= *(_QWORD *)(v19 + 16) >> 3)
  {
    sub_2362AC28C(v21);
    swift_bridgeObjectRelease();
    v43 = v19;
  }
  else
  {
    v43 = sub_2362AC420(v21, v19);
    swift_bridgeObjectRelease();
  }
  v22 = objc_msgSend(v3, sel_effectivelyLockedAppBundleIdentifiers, v43);
  v23 = sub_2362CB7AC();

  v24 = objc_msgSend(a1, sel_effectivelyLockedAppBundleIdentifiers);
  v25 = sub_2362CB7AC();

  if (*(_QWORD *)(v25 + 16) <= *(_QWORD *)(v23 + 16) >> 3)
  {
    sub_2362AC28C(v25);
    swift_bridgeObjectRelease();
    v26 = v23;
  }
  else
  {
    v26 = sub_2362AC420(v25, v23);
    swift_bridgeObjectRelease();
  }
  v27 = objc_msgSend(a1, sel_effectivelyLockedAppBundleIdentifiers);
  v28 = sub_2362CB7AC();

  v29 = objc_msgSend(v3, sel_effectivelyLockedAppBundleIdentifiers);
  v30 = sub_2362CB7AC();

  if (*(_QWORD *)(v30 + 16) <= *(_QWORD *)(v28 + 16) >> 3)
    sub_2362AC28C(v30);
  else
    v28 = sub_2362AC420(v30, v28);
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(a1, sel_lockedAppBundleIdentifiers);
  v32 = sub_2362CB7AC();

  v50 = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v3, sel_lockedAppBundleIdentifiers);
  v34 = sub_2362CB7AC();

  v35.i64[0] = v50;
  v35.i64[1] = *(_QWORD *)(v34 + 16);
  v51 = v35;
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(a1, sel_hiddenAppBundleIdentifiers);
  v37 = sub_2362CB7AC();

  v48 = *(_QWORD *)(v37 + 16);
  swift_bridgeObjectRelease();
  v38 = objc_msgSend(v3, sel_hiddenAppBundleIdentifiers);
  v39 = sub_2362CB7AC();

  v40.i64[0] = v48;
  v40.i64[1] = *(_QWORD *)(v39 + 16);
  v49 = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v46;
  *(_QWORD *)(a2 + 16) = v45;
  *(_QWORD *)(a2 + 24) = v44;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v28;
  v41 = (int16x8_t)vuzp1q_s32((int32x4_t)vtstq_s64(v51, v51), (int32x4_t)vtstq_s64(v49, v49));
  *(int8x8_t *)v41.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v41), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v41);
  *(_DWORD *)(a2 + 48) = result.i32[0];
  return result;
}

void sub_23628EDD4(int a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (notify_is_valid_token(a1) && notify_cancel(a1))
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v2 = sub_2362CB494();
    __swift_project_value_buffer(v2, (uint64_t)qword_2542A58F8);
    oslog = sub_2362CB47C();
    v3 = sub_2362CB83C();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v4 = 67109120;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, oslog, v3, "could not unregister for changes: %u", v4, 8u);
      MEMORY[0x23B7EF258](v4, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_23628EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  int out_token;
  uint64_t v15;

  v3 = v2;
  v15 = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5418);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 32) = 0;
  v7 = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(v6 + 16) = -1;
  *(_QWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v3 + 40) = v6;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  out_token = -1;
  v8 = sub_2362CB6F8();
  LODWORD(a1) = notify_register_check((const char *)(v8 + 32), &out_token);
  swift_release();
  *(_DWORD *)(v3 + 32) = out_token;
  if ((_DWORD)a1)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v9 = sub_2362CB494();
    __swift_project_value_buffer(v9, (uint64_t)qword_2542A58F8);
    v10 = sub_2362CB47C();
    v11 = sub_2362CB83C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 67109120;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v10, v11, "could not register for changes: %u", v12, 8u);
      MEMORY[0x23B7EF258](v12, -1, -1);
    }

  }
  return v3;
}

void sub_23628F0B8(int *a1)
{
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = *a1;
  if (notify_is_valid_token(*a1) && notify_cancel(v1))
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v2 = sub_2362CB494();
    __swift_project_value_buffer(v2, (uint64_t)qword_2542A58F8);
    v3 = sub_2362CB47C();
    v4 = sub_2362CB83C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 67109120;
      sub_2362CB9C8();
      _os_log_impl(&dword_23624C000, v3, v4, "could not unregister for changes: %u", v5, 8u);
      MEMORY[0x23B7EF258](v5, -1, -1);
    }

  }
}

uint64_t sub_23628F1E4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  int *v2;
  os_unfair_lock_s *v3;

  sub_23628EDD4(*(_DWORD *)(v0 + 32));
  v1 = *(os_unfair_lock_s **)(v0 + 40);
  v2 = (int *)&v1[4];
  v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_23628F0B8(v2);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServerNotificationHandle()
{
  return objc_opt_self();
}

void sub_23628F280(int *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint32_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD v13[6];
  int out_token;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  if (*a1 == -1)
  {
    out_token = -1;
    v5 = swift_allocObject();
    swift_weakInit();
    v13[4] = sub_236290E60;
    v13[5] = v5;
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 1107296256;
    v13[2] = sub_23628E7D0;
    v13[3] = &block_descriptor_11;
    v6 = _Block_copy(v13);
    swift_release();
    v7 = sub_2362CB6F8();
    v8 = notify_register_dispatch((const char *)(v7 + 32), &out_token, a3, v6);
    swift_release();
    _Block_release(v6);
    if (v8)
    {
      if (qword_2542A53D0 != -1)
        swift_once();
      v9 = sub_2362CB494();
      __swift_project_value_buffer(v9, (uint64_t)qword_2542A58F8);
      v10 = sub_2362CB47C();
      v11 = sub_2362CB83C();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v12 = 67109120;
        LODWORD(v13[0]) = v8;
        sub_2362CB9C8();
        _os_log_impl(&dword_23624C000, v10, v11, "could not register for notification: %u", v12, 8u);
        MEMORY[0x23B7EF258](v12, -1, -1);
      }

    }
    else
    {
      *a1 = out_token;
    }
  }
}

uint64_t sub_23628F490()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 40);
    swift_retain();
    swift_release();
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
    v2 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
    swift_release();
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = v2 + 40;
      do
      {
        v5 = *(void (**)(uint64_t))(v4 - 8);
        v6 = swift_retain();
        v5(v6);
        swift_release();
        v4 += 16;
        --v3;
      }
      while (v3);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23628F55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = *(_QWORD **)(a1 + 8);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_2362AB1F0(0, v7[2] + 1, 1, v7);
    v7 = (_QWORD *)result;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_2362AB1F0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    v7 = (_QWORD *)result;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_236253F0C;
  v11[5] = v6;
  *(_QWORD *)(a1 + 8) = v7;
  return result;
}

_QWORD *sub_23628F634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v28 = a2;
  v29 = a3;
  v27 = a1;
  v5 = sub_2362CB878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2362CB86C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10, v12);
  v13 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v13, v14);
  v26 = sub_23625DAF8();
  sub_2362CB578();
  v30 = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v11, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E384((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5750], v5);
  v3[3] = sub_2362CB8B4();
  v15 = objc_allocWithZone((Class)APClientState);
  v16 = v27;
  swift_retain();
  v17 = objc_msgSend(v15, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5430);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 48) = 0;
  *(_QWORD *)(v18 + 16) = v17;
  v19 = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v16;
  v4[2] = v18;
  v20 = v29;
  v4[4] = v28;
  v4[5] = v20;
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = *(os_unfair_lock_s **)(v16 + 40);
  v23 = (uint64_t)&v22[4];
  v24 = v22 + 8;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v24);
  sub_23628F55C(v23, (uint64_t)sub_236290DF0, v21);
  os_unfair_lock_unlock(v24);
  swift_release_n();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_23628F8EC()
{
  uint64_t result;
  os_unfair_lock_s *v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(os_unfair_lock_s **)(result + 16);
    swift_retain();
    os_unfair_lock_lock(v1 + 12);
    sub_23624EE74((uint64_t)&v1[4]);
    os_unfair_lock_unlock(v1 + 12);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23628F978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[7];
  _OWORD v33[3];
  int v34;

  v2 = v1;
  v4 = sub_2362CB560();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB590();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)a1;
  swift_retain();
  v13 = v12;
  sub_2362600B0(v2, (void **)a1);
  v26 = v11;
  v27 = v7;
  v28 = v9;
  v29 = v8;
  v30 = v5;
  *(_BYTE *)(a1 + 8) = 0;
  v14 = *(id *)a1;
  v15 = v13;
  v16 = v14;
  v17 = v15;
  sub_23628E80C(v15, (uint64_t)v33);

  if (sub_2362C9860())
  {

    return sub_236290EC8((uint64_t)v33);
  }
  else
  {
    v19 = *(_QWORD *)(a1 + 16);
    v20 = swift_allocObject();
    v21 = v33[1];
    *(_OWORD *)(v20 + 16) = v33[0];
    *(_OWORD *)(v20 + 32) = v21;
    *(_OWORD *)(v20 + 48) = v33[2];
    *(_DWORD *)(v20 + 64) = v34;
    *(_QWORD *)(v20 + 72) = v19;
    aBlock[4] = sub_236290EBC;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_15_0;
    v22 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v23 = v26;
    sub_2362CB578();
    v31 = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E384((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0);
    v24 = v27;
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v23, v24, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v4);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v29);
    return swift_release();
  }
}

void sub_23628FD84(uint64_t a1, void **a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v17)(id (*)(void *), uint64_t);
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  void **v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  void *v38;
  id v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  os_log_t v42;
  uint64_t v43;
  void **v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  void **v54;
  uint64_t v55;
  char *v56;
  void **v57;
  uint64_t v58;
  _QWORD aBlock[3];
  ValueMetadata *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63[4];
  uint64_t v64;

  v54 = a2;
  v55 = sub_2362CB494();
  v4 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8]();
  v56 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  v58 = v6;
  *(_QWORD *)(v6 + 16) = 0;
  v7 = (void **)(v6 + 16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v57 = (void **)(v8 + 16);
  if (qword_2542A53E0 != -1)
    swift_once();
  v9 = (char *)off_2542A5400 + 16;
  v10 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_23626909C((unint64_t)v9, 0, (char *)aBlock);
  if (v2)
    goto LABEL_25;
  os_unfair_lock_unlock(v10);
  v11 = LOBYTE(aBlock[0]);
  swift_release();
  if (v11 == 2)
  {
    v60 = &type metadata for AppProtectionFeatures;
    v61 = sub_236264AA0();
    LOBYTE(aBlock[0]) = 0;
    LOBYTE(v11) = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }
  v12 = v4;
  v13 = v58;
  if ((v11 & 1) != 0)
  {
    v17 = *(uint64_t (**)(id (*)(void *), uint64_t))(a1 + 32);
    swift_retain();
    v18 = (void *)v17(sub_236290FE4, v13);
    swift_release();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v13;
    *(_QWORD *)(v19 + 24) = v8;
    v16 = v8;
    v61 = (unint64_t)sub_236291018;
    v62 = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23627CE3C;
    v60 = (ValueMetadata *)&block_descriptor_27_0;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_getConfiguration_, v20);
    _Block_release(v20);
    swift_unknownObjectRelease();
  }
  else
  {
    v14 = objc_msgSend(objc_allocWithZone((Class)APClientState), sel_init);
    v15 = *v57;
    *v57 = v14;

    v16 = v8;
  }
  swift_beginAccess();
  v21 = *v7;
  v22 = v56;
  if (v21)
  {
    v23 = v21;
    swift_willThrow();
    swift_release();
    swift_release();
    return;
  }
  if (qword_2542A53D0 != -1)
    swift_once();
  v24 = v55;
  v25 = __swift_project_value_buffer(v55, (uint64_t)qword_2542A58F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v22, v25, v24);
  swift_retain_n();
  v26 = sub_2362CB47C();
  v10 = (os_unfair_lock_s *)sub_2362CB848();
  if (!os_log_type_enabled(v26, (os_log_type_t)v10))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v24);
    goto LABEL_19;
  }
  v49 = v12;
  v51 = (int)v10;
  v52 = v26;
  v27 = swift_slowAlloc();
  v50 = swift_slowAlloc();
  v63[0] = v50;
  *(_DWORD *)v27 = 136315650;
  v28 = v57;
  swift_beginAccess();
  v29 = *v28;
  if (!*v28)
  {
LABEL_22:
    swift_release_n();
    __break(1u);
    goto LABEL_23;
  }
  v53 = v27 + 4;
  v30 = objc_msgSend(v29, sel_hiddenAppBundleIdentifiers);
  v10 = (os_unfair_lock_s *)sub_2362CB7AC();

  v31 = sub_2362CB7B8();
  v33 = v32;
  swift_bridgeObjectRelease();
  v64 = sub_2362AB670(v31, v33, v63);
  sub_2362CB9C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 12) = 2080;
  v34 = *(void **)(v16 + 16);
  if (!v34)
  {
LABEL_23:
    swift_release_n();
    __break(1u);
    goto LABEL_24;
  }
  v53 = v27 + 14;
  v35 = objc_msgSend(v34, sel_lockedAppBundleIdentifiers);
  sub_2362CB7AC();

  v36 = sub_2362CB7B8();
  v10 = v37;
  swift_bridgeObjectRelease();
  v64 = sub_2362AB670(v36, (unint64_t)v10, v63);
  sub_2362CB9C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 22) = 2080;
  v38 = *(void **)(v16 + 16);
  if (v38)
  {
    v39 = objc_msgSend(v38, sel_effectivelyLockedAppBundleIdentifiers);
    sub_2362CB7AC();

    v40 = sub_2362CB7B8();
    v10 = v41;
    swift_bridgeObjectRelease();
    v64 = sub_2362AB670(v40, (unint64_t)v10, v63);
    sub_2362CB9C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    v42 = v52;
    _os_log_impl(&dword_23624C000, v52, (os_log_type_t)v51, "hidden: %s, locked: %s effectivelyLocked: %s", (uint8_t *)v27, 0x20u);
    v43 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v43, -1, -1);
    MEMORY[0x23B7EF258](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v55);
LABEL_19:
    v44 = v57;
    swift_beginAccess();
    v45 = *v44;
    if (*v44)
    {
      v46 = *v54;
      *v54 = v45;
      v47 = v45;
      swift_release();
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_24:
  swift_release();
  __break(1u);
LABEL_25:
  os_unfair_lock_unlock(v10);
  __break(1u);
}

void sub_236290460(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  id v9;
  void *v10;
  id v11;

  swift_beginAccess();
  v8 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v9 = a2;

  swift_beginAccess();
  v10 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = a1;
  v11 = a1;

}

uint64_t sub_2362904F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(__int128 *);
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int v30;

  if (qword_2542A53D0 != -1)
LABEL_28:
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
  sub_236290F30(a1);
  sub_236290F30(a1);
  v5 = sub_2362CB47C();
  v6 = sub_2362CB848();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v26 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = *(_OWORD *)(a1 + 16);
    v27 = *(_OWORD *)a1;
    v28 = v9;
    v29 = *(_OWORD *)(a1 + 32);
    v30 = *(_DWORD *)(a1 + 48);
    sub_236290F30(a1);
    v10 = sub_2362CB6EC();
    *(_QWORD *)&v27 = sub_2362AB670(v10, v11, &v26);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_236290EC8(a1);
    sub_236290EC8(a1);
    _os_log_impl(&dword_23624C000, v5, v6, "diff is %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v8, -1, -1);
    MEMORY[0x23B7EF258](v7, -1, -1);
  }
  else
  {
    sub_236290EC8(a1);
    sub_236290EC8(a1);
  }

  v12 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a2 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_9;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v16)
      return swift_release();
    v23 = *(_QWORD *)(v12 + 8 * v22);
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v16)
        return swift_release();
      v23 = *(_QWORD *)(v12 + 8 * v17);
      if (!v23)
      {
        v17 = v22 + 2;
        if (v22 + 2 >= v16)
          return swift_release();
        v23 = *(_QWORD *)(v12 + 8 * v17);
        if (!v23)
          break;
      }
    }
LABEL_24:
    v15 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_9:
    v20 = *(void (**)(__int128 *))(*(_QWORD *)(a2 + 56) + 16 * v19);
    v21 = *(_OWORD *)(a1 + 16);
    v27 = *(_OWORD *)a1;
    v28 = v21;
    v29 = *(_OWORD *)(a1 + 32);
    v30 = *(_DWORD *)(a1 + 48);
    swift_retain();
    v20(&v27);
    swift_release();
  }
  v24 = v22 + 3;
  if (v24 < v16)
  {
    v23 = *(_QWORD *)(v12 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_27;
        if (v17 >= v16)
          return swift_release();
        v23 = *(_QWORD *)(v12 + 8 * v17);
        ++v24;
        if (v23)
          goto LABEL_24;
      }
    }
    v17 = v24;
    goto LABEL_24;
  }
  return swift_release();
}

void sub_236290804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_unfair_lock_s *v5;
  int *v6;
  os_unfair_lock_s *v7;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(NSObject **)(a2 + 24);
  v5 = *(os_unfair_lock_s **)(v3 + 40);
  v6 = (int *)&v5[4];
  v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_23628F280(v6, v3, v4);
  os_unfair_lock_unlock(v7);
  if (v2)
    __break(1u);
}

void sub_236290880(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23624EDF4(a1, (SEL *)&selRef_effectivelyLockedAppBundleIdentifiers, a2);
}

uint64_t sub_23629089C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v3 = v2;
  v6 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v6 + 12);
  sub_236290804((uint64_t)&v6[4], v3);
  os_unfair_lock_unlock(v6 + 12);
  swift_release();
  type metadata accessor for ClientPolicyObservationToken();
  v7 = swift_allocObject();
  v8 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v8 + 12);
  sub_236290978((uint64_t)&v8[4], v7, a1, a2);
  os_unfair_lock_unlock(v8 + 12);
  swift_release();
  return v7;
}

uint64_t sub_236290978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  sub_236297C38((uint64_t)sub_236290E1C, v8, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 16) = v11;
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236290A3C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServerBackedClientPolicyStore()
{
  return objc_opt_self();
}

uint64_t destroy for ServerBackedClientPolicyStore.State(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ServerBackedClientPolicyStore.State(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ServerBackedClientPolicyStore.State(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ServerBackedClientPolicyStore.State(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerBackedClientPolicyStore.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerBackedClientPolicyStore.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerBackedClientPolicyStore.State()
{
  return &type metadata for ServerBackedClientPolicyStore.State;
}

uint64_t initializeBufferWithCopyOfBuffer for ServerNotificationHandle.State(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServerNotificationHandle.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ServerNotificationHandle.State(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerNotificationHandle.State(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerNotificationHandle.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerNotificationHandle.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerNotificationHandle.State()
{
  return &type metadata for ServerNotificationHandle.State;
}

uint64_t sub_236290DCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236290DF0()
{
  return sub_23628F8EC();
}

uint64_t sub_236290DF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236290E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  _OWORD v5[3];
  int v6;

  v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 48);
  return v2(v5);
}

uint64_t sub_236290E60()
{
  return sub_23628F490();
}

uint64_t sub_236290E68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236290EBC()
{
  uint64_t v0;

  return sub_2362904F4(v0 + 16, *(_QWORD *)(v0 + 72));
}

uint64_t sub_236290EC8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236290F30(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_236290F9C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_236290FC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_236290FE4(void *a1)
{
  uint64_t v1;

  return sub_23627C53C(a1, v1);
}

uint64_t sub_236290FEC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_236291018(void *a1, void *a2)
{
  uint64_t v2;

  sub_236290460(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23629103C()
{
  sub_2362CBA58();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0;
}

BOOL sub_236291148(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_236291170()
{
  return sub_23629103C();
}

void sub_23629118C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_2362911EC()
{
  uint64_t v1;

  sub_2362CBA58();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_236291348()
{
  uint64_t v0;

  sub_23629118C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

_QWORD *sub_236291354(void *a1, void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4350);
  swift_allocObject();
  v3[2] = sub_2362CB524();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D6040);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  v8 = (os_unfair_lock_s *)(v7 + 40);
  *(_QWORD *)(v7 + 16) = 0;
  v9 = v7 + 16;
  *(_WORD *)(v7 + 24) = 257;
  *(_QWORD *)(v7 + 32) = MEMORY[0x24BEE4B00];
  v3[3] = a1;
  v3[4] = v7;
  v10 = a1;
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_236291450(v9, (uint64_t)v3, a2);
  os_unfair_lock_unlock(v8);
  swift_release();

  return v3;
}

id sub_236291450(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)(uint64_t);
  id v9;
  _QWORD *v10;
  void *v11;
  id result;
  void *v13;
  unsigned int v14;
  void *v15;
  unsigned __int8 v16;
  unint64_t v17;
  objc_super v18;

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (objc_class *)type metadata accessor for NotificationReceiverObjCShim();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)(uint64_t))&v7[OBJC_IVAR____TtC13AppProtection28NotificationReceiverObjCShim_callback];
  *v8 = sub_236293EC8;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  v18.receiver = v7;
  v18.super_class = v6;
  v9 = objc_msgSendSuper2(&v18, sel_init);

  v10 = (_QWORD *)MEMORY[0x24BE63740];
  *(_QWORD *)a1 = v9;
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v9, sel_receivedNotification_, *v10, 0);
  v11 = (void *)objc_opt_self();
  result = objc_msgSend(v11, sel_sharedConnection);
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(result, sel_isLockingAppsAllowed);

    *(_BYTE *)(a1 + 8) = v14;
    if (!v14)
    {
      v16 = 0;
      goto LABEL_6;
    }
    result = objc_msgSend(v11, sel_sharedConnection);
    if (result)
    {
      v15 = result;
      v16 = objc_msgSend(result, sel_isHidingAppsAllowed);

LABEL_6:
      *(_BYTE *)(a1 + 9) = v16;
      v17 = sub_236294C30(MEMORY[0x24BEE4AF8]);
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = v17;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2362915DC(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23629180C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_236291638(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v3 = *(NSObject **)(v1 + 24);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_236293E44;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_236264B8C;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_2362550D4;
  v8[3] = &block_descriptor_12;
  v6 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_236291774(uint64_t result)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = (char *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v3 = *((_QWORD *)v2 - 2);
      v4 = *((_QWORD *)v2 - 1);
      v5 = *v2;
      v2 += 24;
      sub_2362931B4(v3, v4, v5);
      sub_2362CB50C();
      sub_2362931D4(v3, v4, v5);
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23629180C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_2362CB218();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2362CB200();
  v8 = sub_2362CB698();
  v10 = v9;
  if (v8 == sub_2362CB698() && v10 == v11)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  v13 = sub_2362CBBE4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_16:
    sub_236292004();
    return;
  }
  v14 = (void *)sub_2362CB200();
  v15 = sub_2362CB698();
  v17 = v16;
  if (v15 == sub_2362CB698() && v17 == v18)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v20 = sub_2362CBBE4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_18:
    sub_236291B40();
    return;
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v21 = sub_2362CB494();
  __swift_project_value_buffer(v21, (uint64_t)qword_2563DB5D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  v22 = sub_2362CB47C();
  v23 = sub_2362CB848();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v24 = 136315138;
    sub_236293E5C();
    v26 = sub_2362CBBC0();
    v28 = sub_2362AB670(v26, v27, &v29);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    _os_log_impl(&dword_23624C000, v22, v23, "ServerManagementManager: unknown notification: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v25, -1, -1);
    MEMORY[0x23B7EF258](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }

}

id sub_236291B40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id result;
  void *v4;
  unsigned int v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  result = objc_msgSend(v2, sel_sharedConnection);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = result;
  v5 = objc_msgSend(result, sel_isLockingAppsAllowed);

  if (!v5)
  {
    v7 = 0;
    goto LABEL_6;
  }
  result = objc_msgSend(v2, sel_sharedConnection);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = objc_msgSend(result, sel_isHidingAppsAllowed);

LABEL_6:
  if (qword_2563D4178 != -1)
    swift_once();
  v8 = sub_2362CB494();
  __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
  v9 = sub_2362CB47C();
  v10 = sub_2362CB848();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 67109376;
    sub_2362CB9C8();
    *(_WORD *)(v11 + 8) = 1024;
    LODWORD(v15) = v7;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v9, v10, "Effective settings changed. Locking allowed: %{BOOL}d, hiding allowed: %{BOOL}d", (uint8_t *)v11, 0xEu);
    MEMORY[0x23B7EF258](v11, -1, -1);
  }

  v12 = *(os_unfair_lock_s **)(v1 + 32);
  v13 = (uint64_t)&v12[4];
  v14 = v12 + 10;
  os_unfair_lock_lock(v12 + 10);
  sub_236291D48(v13, v5, v7, &v15);
  os_unfair_lock_unlock(v14);
  sub_236291638(v15);
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_236291D48@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v5 = result;
  if (*(_BYTE *)(result + 8) == (a2 & 1))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    *(_BYTE *)(result + 8) = a2 & 1;
    if (qword_2563D4178 != -1)
      swift_once();
    v8 = sub_2362CB494();
    __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
    v9 = sub_2362CB47C();
    v10 = sub_2362CB848();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23624C000, v9, v10, "locking apps capability changed", v11, 2u);
      MEMORY[0x23B7EF258](v11, -1, -1);
    }

    result = (uint64_t)sub_2362AB204(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v12 = (_QWORD *)result;
    v14 = *(_QWORD *)(result + 16);
    v13 = *(_QWORD *)(result + 24);
    if (v14 >= v13 >> 1)
    {
      result = (uint64_t)sub_2362AB204((_QWORD *)(v13 > 1), v14 + 1, 1, (_QWORD *)result);
      v12 = (_QWORD *)result;
    }
    v12[2] = v14 + 1;
    v15 = &v12[3 * v14];
    v15[4] = a2 & 1;
    v15[5] = 0;
    *((_BYTE *)v15 + 48) = 0;
  }
  if (*(_BYTE *)(v5 + 9) != (a3 & 1))
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2563DB5D8);
    v17 = sub_2362CB47C();
    v18 = sub_2362CB848();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23624C000, v17, v18, "hiding apps capability changed", v19, 2u);
      MEMORY[0x23B7EF258](v19, -1, -1);
    }

    *(_BYTE *)(v5 + 9) = a3 & 1;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2362AB204(0, v12[2] + 1, 1, v12);
      v12 = (_QWORD *)result;
    }
    v21 = v12[2];
    v20 = v12[3];
    if (v21 >= v20 >> 1)
    {
      result = (uint64_t)sub_2362AB204((_QWORD *)(v20 > 1), v21 + 1, 1, v12);
      v12 = (_QWORD *)result;
    }
    v12[2] = v21 + 1;
    v22 = &v12[3 * v21];
    v22[4] = a3 & 1;
    v22[5] = 0;
    *((_BYTE *)v22 + 48) = 64;
  }
  *a4 = v12;
  return result;
}

uint64_t sub_236292004()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_236294C30(MEMORY[0x24BEE4AF8]);
  if (qword_2563D4178 != -1)
    swift_once();
  v3 = sub_2362CB494();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563DB5D8);
  swift_bridgeObjectRetain_n();
  v4 = sub_2362CB47C();
  v5 = sub_2362CB848();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    v8 = sub_2362CB620();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_2362AB670(v8, v10, &v16);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v4, v5, "Apps changed. New protectability: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v7, -1, -1);
    MEMORY[0x23B7EF258](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = *(os_unfair_lock_s **)(v1 + 32);
  v12 = (uint64_t)&v11[4];
  v13 = v11 + 10;
  os_unfair_lock_lock(v11 + 10);
  sub_236292240(v12, v2, &v16);
  os_unfair_lock_unlock(v13);
  v14 = v16;
  swift_bridgeObjectRelease();
  sub_236291638(v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236292240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t i;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char *v79;
  char v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t result;
  int v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  int64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;

  v92 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v94 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v97 = v6;
      v9 = v8 | (v6 << 6);
      goto LABEL_21;
    }
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_103;
    if (v10 >= v94)
      break;
    v11 = *(_QWORD *)(v92 + 8 * v10);
    v12 = v6 + 1;
    if (!v11)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v94)
        break;
      v11 = *(_QWORD *)(v92 + 8 * v12);
      if (!v11)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v94)
          break;
        v11 = *(_QWORD *)(v92 + 8 * v12);
        if (!v11)
        {
          v13 = v6 + 4;
          if (v6 + 4 >= v94)
            break;
          v11 = *(_QWORD *)(v92 + 8 * v13);
          if (!v11)
          {
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_106;
              if (v12 >= v94)
                goto LABEL_63;
              v11 = *(_QWORD *)(v92 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_20;
            }
          }
          v12 = v6 + 4;
        }
      }
    }
LABEL_20:
    v5 = (v11 - 1) & v11;
    v97 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_21:
    v14 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v9);
    v16 = *v14;
    v15 = v14[1];
    v17 = (unsigned __int8 *)(*(_QWORD *)(a2 + 56) + 2 * v9);
    v18 = *v17;
    v98 = v17[1];
    v19 = *(_QWORD *)(a1 + 16);
    v20 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRetain();
    if (!v20)
      goto LABEL_29;
    swift_bridgeObjectRetain();
    v21 = sub_2362934D8(v16, v15);
    if ((v22 & 1) != 0)
    {
      v23 = (unsigned __int8 *)(*(_QWORD *)(v19 + 56) + 2 * v21);
      v24 = *v23;
      v25 = v23[1];
      swift_bridgeObjectRelease();
      if (v18 != v24)
      {
        v90 = v25;
        if (qword_2563D4178 != -1)
          swift_once();
        v26 = sub_2362CB494();
        __swift_project_value_buffer(v26, (uint64_t)qword_2563DB5D8);
        swift_bridgeObjectRetain_n();
        v27 = sub_2362CB47C();
        v28 = sub_2362CB848();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = swift_slowAlloc();
          v30 = swift_slowAlloc();
          v100 = v30;
          *(_DWORD *)v29 = 136315394;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v29 + 4) = sub_2362AB670(v16, v15, &v100);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v29 + 12) = 1024;
          *(_DWORD *)(v29 + 14) = v18;
          _os_log_impl(&dword_23624C000, v27, v28, "%s lockability changed to %{BOOL}d", (uint8_t *)v29, 0x12u);
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v30, -1, -1);
          MEMORY[0x23B7EF258](v29, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
        v43 = v7[2];
        v42 = v7[3];
        if (v43 >= v42 >> 1)
          v7 = sub_2362AB204((_QWORD *)(v42 > 1), v43 + 1, 1, v7);
        v7[2] = v43 + 1;
        v44 = &v7[3 * v43];
        v44[4] = v16;
        v44[5] = v15;
        *((_BYTE *)v44 + 48) = v18 | 0x80;
        v25 = v90;
      }
      if (v98 == v25)
      {
LABEL_4:
        swift_bridgeObjectRelease();
        v6 = v97;
      }
      else
      {
        if (qword_2563D4178 != -1)
          swift_once();
        v45 = sub_2362CB494();
        __swift_project_value_buffer(v45, (uint64_t)qword_2563DB5D8);
        swift_bridgeObjectRetain_n();
        v46 = sub_2362CB47C();
        v47 = sub_2362CB848();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc();
          v49 = swift_slowAlloc();
          v100 = v49;
          *(_DWORD *)v48 = 136315394;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v48 + 4) = sub_2362AB670(v16, v15, &v100);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v48 + 12) = 1024;
          *(_DWORD *)(v48 + 14) = v98;
          _os_log_impl(&dword_23624C000, v46, v47, "%s hideability changed to %{BOOL}d", (uint8_t *)v48, 0x12u);
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v49, -1, -1);
          MEMORY[0x23B7EF258](v48, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
        v51 = v7[2];
        v50 = v7[3];
        if (v51 >= v50 >> 1)
          v7 = sub_2362AB204((_QWORD *)(v50 > 1), v51 + 1, 1, v7);
        v7[2] = v51 + 1;
        v52 = &v7[3 * v51];
        v52[4] = v16;
        v52[5] = v15;
        *((_BYTE *)v52 + 48) = v98 | 0xC0;
        v6 = v97;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_29:
      if (qword_2563D4178 != -1)
        swift_once();
      v31 = sub_2362CB494();
      __swift_project_value_buffer(v31, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v32 = sub_2362CB47C();
      v33 = sub_2362CB848();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v100 = v35;
        *(_DWORD *)v34 = 136315650;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v34 + 4) = sub_2362AB670(v16, v15, &v100);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 1024;
        *(_DWORD *)(v34 + 14) = v18;
        *(_WORD *)(v34 + 18) = 1024;
        *(_DWORD *)(v34 + 20) = v98;
        _os_log_impl(&dword_23624C000, v32, v33, "%s now has protectability info, lockable: %{BOOL}d, hideable: %{BOOL}d", (uint8_t *)v34, 0x18u);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v35, -1, -1);
        MEMORY[0x23B7EF258](v34, -1, -1);

        if ((v18 & 1) != 0)
          goto LABEL_40;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        if ((v18 & 1) != 0)
          goto LABEL_40;
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
      v37 = v7[2];
      v36 = v7[3];
      if (v37 >= v36 >> 1)
        v7 = sub_2362AB204((_QWORD *)(v36 > 1), v37 + 1, 1, v7);
      v7[2] = v37 + 1;
      v38 = &v7[3 * v37];
      v38[4] = v16;
      v38[5] = v15;
      *((_BYTE *)v38 + 48) = 0x80;
LABEL_40:
      if ((v98 & 1) != 0)
        goto LABEL_4;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
      v40 = v7[2];
      v39 = v7[3];
      if (v40 >= v39 >> 1)
        v7 = sub_2362AB204((_QWORD *)(v39 > 1), v40 + 1, 1, v7);
      v7[2] = v40 + 1;
      v41 = &v7[3 * v40];
      v41[4] = v16;
      v41[5] = v15;
      *((_BYTE *)v41 + 48) = -64;
      v6 = v97;
    }
  }
LABEL_63:
  swift_release();
  v53 = swift_bridgeObjectRetain();
  v54 = sub_2362A0CCC(v53);
  v55 = swift_bridgeObjectRetain();
  v56 = sub_2362AC888(v55, v54);
  swift_bridgeObjectRelease();
  v57 = 0;
  v58 = *(_QWORD *)(v56 + 56);
  v93 = v56 + 56;
  v99 = v56;
  v59 = 1 << *(_BYTE *)(v56 + 32);
  v60 = -1;
  if (v59 < 64)
    v60 = ~(-1 << v59);
  v61 = v60 & v58;
  v91 = (unint64_t)(v59 + 63) >> 6;
  if ((v60 & v58) != 0)
    goto LABEL_68;
LABEL_69:
  v64 = v57 + 1;
  if (__OFADD__(v57, 1))
    goto LABEL_104;
  if (v64 >= v91)
    goto LABEL_101;
  v65 = *(_QWORD *)(v93 + 8 * v64);
  ++v57;
  if (v65)
    goto LABEL_80;
  v57 = v64 + 1;
  if (v64 + 1 >= v91)
    goto LABEL_101;
  v65 = *(_QWORD *)(v93 + 8 * v57);
  if (v65)
    goto LABEL_80;
  v66 = v64 + 2;
  if (v66 >= v91)
  {
LABEL_101:
    swift_release();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = a2;
    *a3 = v7;
    return result;
  }
  v65 = *(_QWORD *)(v93 + 8 * v66);
  if (v65)
  {
    v57 = v66;
LABEL_80:
    v61 = (v65 - 1) & v65;
    for (i = __clz(__rbit64(v65)) + (v57 << 6); ; i = v62 | (v57 << 6))
    {
      v67 = (uint64_t *)(*(_QWORD *)(v99 + 48) + 16 * i);
      v69 = *v67;
      v68 = v67[1];
      v70 = qword_2563D4178;
      swift_bridgeObjectRetain();
      if (v70 != -1)
        swift_once();
      v71 = sub_2362CB494();
      __swift_project_value_buffer(v71, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v72 = sub_2362CB47C();
      v73 = sub_2362CB848();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v100 = v75;
        *(_DWORD *)v74 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v74 + 4) = sub_2362AB670(v69, v68, &v100);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23624C000, v72, v73, "%s lost protectability management", (uint8_t *)v74, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v75, -1, -1);
        MEMORY[0x23B7EF258](v74, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v76 = *(_QWORD *)(a1 + 16);
      if (!*(_QWORD *)(v76 + 16))
        break;
      swift_bridgeObjectRetain();
      v77 = sub_2362934D8(v69, v68);
      if ((v78 & 1) == 0)
        goto LABEL_107;
      v79 = (char *)(*(_QWORD *)(v76 + 56) + 2 * v77);
      v80 = *v79;
      v81 = v79[1];
      swift_bridgeObjectRelease();
      if ((v80 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
        v83 = v7[2];
        v82 = v7[3];
        if (v83 >= v82 >> 1)
          v7 = sub_2362AB204((_QWORD *)(v82 > 1), v83 + 1, 1, v7);
        v7[2] = v83 + 1;
        v84 = &v7[3 * v83];
        v84[4] = v69;
        v84[5] = v68;
        *((_BYTE *)v84 + 48) = -127;
      }
      if ((v81 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (!v61)
          goto LABEL_69;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2362AB204(0, v7[2] + 1, 1, v7);
        v86 = v7[2];
        v85 = v7[3];
        if (v86 >= v85 >> 1)
          v7 = sub_2362AB204((_QWORD *)(v85 > 1), v86 + 1, 1, v7);
        v7[2] = v86 + 1;
        v87 = &v7[3 * v86];
        v87[4] = v69;
        v87[5] = v68;
        *((_BYTE *)v87 + 48) = -63;
        if (!v61)
          goto LABEL_69;
      }
LABEL_68:
      v62 = __clz(__rbit64(v61));
      v61 &= v61 - 1;
    }
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
  }
  else
  {
    while (1)
    {
      v57 = v66 + 1;
      if (__OFADD__(v66, 1))
        break;
      if (v57 >= v91)
        goto LABEL_101;
      v65 = *(_QWORD *)(v93 + 8 * v57);
      ++v66;
      if (v65)
        goto LABEL_80;
    }
  }
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_236292E70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  char v10;

  if (*(_BYTE *)(result + 8) != 1)
  {
    v10 = 0;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_7:
    v10 = 1;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_2362934D8(a2, a3);
  if ((v9 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v10 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + 2 * v8);
  result = swift_bridgeObjectRelease();
LABEL_8:
  *a4 = v10;
  return result;
}

uint64_t sub_236292F04@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  char v10;

  if (*(_BYTE *)(result + 9) != 1)
  {
    v10 = 0;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_7:
    v10 = 1;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_2362934D8(a2, a3);
  if ((v9 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v10 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + 2 * v8 + 1);
  result = swift_bridgeObjectRelease();
LABEL_8:
  *a4 = v10;
  return result;
}

uint64_t sub_236292F98()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServerMangementManager()
{
  return objc_opt_self();
}

uint64_t destroy for ServerMangementManager.State(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t _s13AppProtection22ServerMangementManagerC5StateVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerMangementManager.State(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerMangementManager.State(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerMangementManager.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerMangementManager.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerMangementManager.State()
{
  return &type metadata for ServerMangementManager.State;
}

uint64_t sub_2362931B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 < 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ManagementInterfaceEvent(uint64_t a1)
{
  return sub_2362931D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2362931D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13AppProtection24ManagementInterfaceEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2362931B4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ManagementInterfaceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2362931B4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2362931D4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ManagementInterfaceEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2362931D4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagementInterfaceEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ManagementInterfaceEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_236293380(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_23629338C(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_23629339C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ManagementInterfaceEvent()
{
  return &type metadata for ManagementInterfaceEvent;
}

unint64_t sub_2362933C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D5F88;
  if (!qword_2563D5F88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D4350);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDB9CB0], v1);
    atomic_store(result, (unint64_t *)&qword_2563D5F88);
  }
  return result;
}

uint64_t sub_236293410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236293428(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_2362938DC);
}

uint64_t sub_23629341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236293428(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_236293490);
}

uint64_t sub_236293428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v5;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;
  uint64_t v11;

  v7 = *(os_unfair_lock_s **)(*(_QWORD *)v5 + 32);
  v8 = v7 + 4;
  v9 = v7 + 10;
  os_unfair_lock_lock(v7 + 10);
  a5(&v11, v8);
  os_unfair_lock_unlock(v9);
  return v11;
}

uint64_t sub_236293490@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_236292F04(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_2362934A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2362CBA10();
  return sub_236293738(a1, v2);
}

unint64_t sub_2362934D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2362CBC8C();
  sub_2362CB710();
  v4 = sub_2362CBCBC();
  return sub_2362937FC(a1, a2, v4);
}

unint64_t sub_23629353C(uint64_t a1)
{
  uint64_t v2;

  sub_2362CB698();
  sub_2362CBC8C();
  sub_2362CB710();
  v2 = sub_2362CBCBC();
  swift_bridgeObjectRelease();
  return sub_236293930(a1, v2);
}

unint64_t sub_2362935BC(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_2362CBC8C();
  sub_2362CBC98();
  v2 = sub_2362CBCBC();
  return sub_236293AA4(v1, v2);
}

unint64_t sub_236293618(uint64_t a1)
{
  uint64_t v2;

  sub_2362CBC8C();
  sub_2362CBCB0();
  sub_2362CBCB0();
  v2 = sub_2362CBCBC();
  return sub_236293B60(a1, v2);
}

unint64_t sub_236293680(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2362CBC80();
  return sub_236293BD8(a1, v2);
}

unint64_t sub_2362936B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2362CB9A4();
  return sub_236293C74(a1, v2);
}

unint64_t sub_2362936E0(uint64_t a1)
{
  uint64_t v2;

  sub_2362CBC8C();
  sub_2362CBC98();
  v2 = sub_2362CBCBC();
  return sub_236293D7C(a1, v2);
}

unint64_t sub_236293738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2362938F4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x23B7EE784](v9, a1);
      sub_236253FC8((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2362937FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2362CBBE4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2362CBBE4() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2362938DC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_236292E70(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2362938F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_236293930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2362CB698();
    v8 = v7;
    if (v6 == sub_2362CB698() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2362CB698();
          v15 = v14;
          if (v13 == sub_2362CB698() && v15 == v16)
            break;
          v18 = sub_2362CBBE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_236293AA4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_236293B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int *v7;
  int v8;
  int v9;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (int *)(*(_QWORD *)(v2 + 48) + 8 * result);
      v9 = *v7;
      v8 = v7[1];
      if (v9 == (_DWORD)a1 && v8 == HIDWORD(a1))
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_236293BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_236293C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for DefaultSubjectMonitorToken();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_2362CB9B0();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_2362CB9B0();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_236293D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_236293E18()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236293E44()
{
  uint64_t v0;

  return sub_236291774(*(_QWORD *)(v0 + 16));
}

uint64_t sub_236293E4C()
{
  return swift_deallocObject();
}

unint64_t sub_236293E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D3E30;
  if (!qword_2563D3E30)
  {
    v1 = sub_2362CB218();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCB950], v1);
    atomic_store(result, (unint64_t *)&qword_2563D3E30);
  }
  return result;
}

uint64_t sub_236293EA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236293EC8(uint64_t a1)
{
  return sub_2362915DC(a1);
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ManagedAppProtectability(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedAppProtectability(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236293FCC + 4 * byte_2362CF919[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_236294000 + 4 * byte_2362CF914[v4]))();
}

uint64_t sub_236294000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_236294008(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x236294010);
  return result;
}

uint64_t sub_23629401C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x236294024);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236294028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_236294030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppProtectability()
{
  return &type metadata for ManagedAppProtectability;
}

uint64_t sub_23629404C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_2362CB878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625DAF8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE5758], v4);
  sub_2362CB578();
  v10[1] = MEMORY[0x24BEE4AF8];
  sub_23625DB34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23625DB7C();
  sub_2362CB9F8();
  result = sub_2362CB8B4();
  qword_2563D5F48 = result;
  return result;
}

void sub_2362941D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  void *v7;
  _QWORD v8[6];

  v1 = v0;
  if (qword_2563D4178 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB848();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23624C000, v3, v4, "resuming accountsd translator", v5, 2u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedSubscriber);
  v8[4] = sub_236294624;
  v8[5] = v1;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_236294554;
  v8[3] = &block_descriptor_13;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_registerAccountChangeEventHandler_, v7);
  _Block_release(v7);

}

uint64_t sub_236294348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  if (qword_2563D4318 != -1)
    swift_once();
  v4 = qword_2563D5F48;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_23629462C;
  *(_QWORD *)(v5 + 24) = a3;
  v8[4] = sub_236264B8C;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_2362550D4;
  v8[3] = &block_descriptor_3_0;
  v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v6);
  _Block_release(v6);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_236294480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  _OWORD v10[2];

  v2 = sub_2362CB218();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2362CB674();
  memset(v10, 0, sizeof(v10));
  sub_2362CB1F4();
  v7 = *(void **)(a1 + 16);
  v8 = (void *)sub_2362CB1DC();
  objc_msgSend(v7, sel_postNotification_, v8);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_236294554(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(void *, uint64_t);
  id v6;

  v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a2, a3);
  swift_release();

}

id sub_2362945B4()
{
  uint64_t v0;
  id result;

  type metadata accessor for AccountsdXPCEventStreamTranslator();
  v0 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init);
  *(_QWORD *)(v0 + 16) = result;
  qword_2563DB5F8 = v0;
  return result;
}

uint64_t type metadata accessor for AccountsdXPCEventStreamTranslator()
{
  return objc_opt_self();
}

uint64_t sub_236294624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_236294348(a1, a2, v2);
}

uint64_t sub_23629462C()
{
  uint64_t v0;

  return sub_236294480(v0);
}

uint64_t sub_236294634()
{
  return swift_deallocObject();
}

unint64_t sub_23629464C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4208);
  v2 = (_QWORD *)sub_2362CBB3C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_2362934D8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236294764(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76D8);
  v2 = sub_2362CBB3C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236273F78(v6, (uint64_t)&v13, &qword_2563D76E0);
    v7 = v13;
    result = sub_23629353C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_236274200(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236294890(uint64_t a1)
{
  return sub_2362948A8(a1, &qword_2563D6060);
}

unint64_t sub_23629489C(uint64_t a1)
{
  return sub_2362948A8(a1, &qword_2563D76F0);
}

unint64_t sub_2362948A8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_2362CBB3C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2362934D8(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2362949BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59F0);
  v2 = sub_2362CBB3C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236273F78(v6, (uint64_t)&v15, (uint64_t *)&unk_2563D59B0);
    v7 = v15;
    v8 = v16;
    result = sub_2362934D8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_236274200(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236294AF0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D3E58);
  v2 = sub_2362CBB3C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236273F78(v6, (uint64_t)v15, &qword_2563D41E0);
    result = sub_2362934A8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_236274200(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236294C30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _BYTE *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76D0);
  v2 = (_QWORD *)sub_2362CBB3C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 49);
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 17);
    v6 = *(_QWORD *)(v4 - 9);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2362934D8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_BYTE *)(v2[7] + 2 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_236294D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  void *v22;
  void *v23;
  id v24;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5A00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
  *(_QWORD *)(inited + 32) = 0x656E694C5041;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v15 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = a6;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = 0x636E75465041;
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(_QWORD *)(inited + 96) = a7;
  *(_QWORD *)(inited + 104) = a8;
  swift_bridgeObjectRetain();
  sub_2362949BC(inited);
  if (a5)
  {
    v17 = sub_2362CB698();
    v19 = v18;
    v28 = v16;
    *(_QWORD *)&v27 = a4;
    *((_QWORD *)&v27 + 1) = a5;
    sub_236274200(&v27, v26);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_236297798(v26, v17, v19, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v21 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  swift_bridgeObjectRetain();
  v22 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_2362CB608();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, a3, v23);

  return v24;
}

uint64_t sub_236294F28(uint64_t a1, char a2)
{
  return sub_236294F40(a1, a2, &qword_2563D6060);
}

uint64_t sub_236294F34(uint64_t a1, char a2)
{
  return sub_236294F40(a1, a2, &qword_2563D76F8);
}

uint64_t sub_236294F40(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_2362CBB30();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2362CBC8C();
    sub_2362CB710();
    result = sub_2362CBCBC();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_236295250(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59F0);
  v6 = sub_2362CBB30();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_236274200(v24, v35);
      }
      else
      {
        sub_23625403C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2362CBC8C();
      sub_2362CB710();
      result = sub_2362CBCBC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_236274200(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23629554C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76E8);
  result = sub_2362CBB30();
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v22 >= v13)
          goto LABEL_33;
        v23 = v32[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v13)
            goto LABEL_33;
          v23 = v32[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v32[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v13)
                  goto LABEL_33;
                v23 = v32[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      *(_QWORD *)&v7 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
      v33 = v7;
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_2362CBC8C();
      sub_2362CBCB0();
      sub_2362CBCB0();
      result = sub_2362CBCBC();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        v7 = v33;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        v7 = v33;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v7;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v8;
  return result;
}

uint64_t sub_23629583C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_2563D4380);
  result = sub_2362CBB30();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_2362CBC80();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_236295AF0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  __int128 *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5378);
  v6 = sub_2362CBB30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((a2 & 1) != 0)
    {
      sub_23625AD00(v23, (uint64_t)v34);
    }
    else
    {
      sub_23624E76C((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    result = sub_2362CB9A4();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = sub_23625AD00(v34, *(_QWORD *)(v7 + 56) + 40 * v15);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_236295DCC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76C8);
  v42 = a2;
  v6 = sub_2362CBB30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = (char *)(*(_QWORD *)(v5 + 56) + 3 * v21);
    v34 = *v33;
    v35 = v33[1];
    v36 = v33[2];
    if ((v42 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_2362CBC8C();
    sub_2362CB710();
    result = sub_2362CBCBC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = (_BYTE *)(*(_QWORD *)(v7 + 56) + 3 * v17);
    *v19 = v34;
    v19[1] = v35;
    v19[2] = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_236296100(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5440);
  result = sub_2362CBB30();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      sub_2362CBC8C();
      sub_2362CBC98();
      result = sub_2362CBCBC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2362963DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76C0);
  v38 = a2;
  v6 = sub_2362CBB30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_2362CBC8C();
    sub_2362CB710();
    result = sub_2362CBCBC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2362966EC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_236296734(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_236274200(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_23629679C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_2362967E4(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_23625AD00(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_23629684C()
{
  return sub_236296864(&qword_2563D6060);
}

void *sub_236296858()
{
  return sub_236296864(&qword_2563D76F8);
}

void *sub_236296864(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_2362CBB24();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236296A10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59F0);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23625403C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_236274200(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236296BF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76E8);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236296D94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_2563D4380);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_236296F34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5378);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_23624E76C(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_23625AD00(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2362970FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  _QWORD *v24;
  _BYTE *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76C8);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 3 * v15;
    v21 = (char *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    LOBYTE(v21) = v21[2];
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = v19;
    v24[1] = v18;
    v25 = (_BYTE *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v22;
    v25[1] = v23;
    v25[2] = (_BYTE)v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2362972C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5440);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    swift_retain();
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23629747C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D76C0);
  v2 = *v0;
  v3 = sub_2362CBB24();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23629762C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2362934D8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_236296864(&qword_2563D76F8);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_236294F40(v15, a4 & 1, &qword_2563D76F8);
  v21 = sub_2362934D8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

_OWORD *sub_236297798(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2362934D8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_236274200(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236296A10();
      goto LABEL_7;
    }
    sub_236295250(v15, a4 & 1);
    v21 = sub_2362934D8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236296734(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_2362CBC20();
  __break(1u);
  return result;
}

uint64_t sub_2362978C8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_236293618(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_release();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_23629679C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_236296BF4();
      goto LABEL_7;
    }
    sub_23629554C(v13, a3 & 1);
    v19 = sub_236293618(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23629679C(v10, a2, a1, v16);
    }
  }
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

uint64_t sub_2362979DC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_236293680(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_236296D94();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_23629583C(result, a3 & 1);
  result = sub_236293680(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

id sub_236297B14(__int128 *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_2362936B0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7] + 40 * v9;
        __swift_destroy_boxed_opaque_existential_1(v16);
        return (id)sub_23625AD00(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_236296F34();
      goto LABEL_7;
    }
    sub_236295AF0(v12, a3 & 1);
    v18 = sub_2362936B0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2362967E4(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for DefaultSubjectMonitorToken();
  result = (id)sub_2362CBC20();
  __break(1u);
  return result;
}

uint64_t sub_236297C38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2362936E0(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2362972C0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v23 = (_QWORD *)(v18[7] + 16 * v12);
    *v23 = a1;
    v23[1] = a2;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_retain();
    }
    goto LABEL_14;
  }
  sub_236296100(v15, a4 & 1);
  v21 = sub_2362936E0(a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for ClientPolicyObservationToken();
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

void sub_236297D8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2362934D8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23629747C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_2362963DC(v15, a4 & 1);
  v20 = sub_2362934D8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_2362CBC20();
  __break(1u);
}

unint64_t sub_236297EE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  char v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7700);
    v3 = (_QWORD *)sub_2362CBB3C();
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_2362935BC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_236297FBC()
{
  container_error_free();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContainerErrorCopy()
{
  return objc_opt_self();
}

uint64_t sub_236298000()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v0 = container_error_copy_unlocalized_description();
  if (!v0)
    return 0x296C6C756E28;
  v1 = (void *)v0;
  v2 = sub_2362CB734();
  free(v1);
  return v2;
}

unint64_t sub_236298064(unint64_t __errnum)
{
  uint64_t v2;
  void *v3;
  unint64_t v5;

  if (__errnum >> 62)
  {
    if (__errnum >> 62 != 1)
      return 0xD000000000000032;
    if (strerror(__errnum))
    {
      sub_2362CB734();
    }
    else
    {
      sub_2362CBA58();
      swift_bridgeObjectRelease();
      sub_2362CBBC0();
      sub_2362CB728();
      swift_bridgeObjectRelease();
    }
    sub_2362CBA58();
    swift_bridgeObjectRelease();
    v5 = 0xD00000000000002CLL;
    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
  }
  else
  {
    swift_retain();
    sub_2362CBA58();
    swift_bridgeObjectRelease();
    v5 = 0xD000000000000022;
    v2 = container_error_copy_unlocalized_description();
    if (v2)
    {
      v3 = (void *)v2;
      sub_2362CB734();
      free(v3);
    }
    sub_2362CB728();
    swift_bridgeObjectRelease();
    sub_2362CB728();
    sub_23629A230(__errnum);
  }
  return v5;
}

unint64_t sub_236298264()
{
  unint64_t *v0;

  return sub_236298064(*v0);
}

uint64_t sub_23629826C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB38C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!container_query_create())
  {
    sub_236298828();
    swift_allocError();
    *v16 = 0x8000000000000000;
    return swift_willThrow();
  }
  container_query_set_class();
  container_query_operation_set_flags();
  if (a1)
    container_query_set_persona_unique_string();
  if (container_query_get_single_result())
  {
    result = container_get_path();
    if (result)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      sub_2362CB344();
      sub_23625B4F8((uint64_t)v7, &qword_2563D3E90);
      v14 = container_copy_sandbox_token();
      if (v14)
      {
        v15 = (void *)v14;
        if (sandbox_extension_consume() < 0)
        {
          v23 = MEMORY[0x23B7EE268]() | 0x4000000000000000;
          sub_236298828();
          swift_allocError();
          *v24 = v23;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
          return container_query_free();
        }
        free(v15);
      }
      else
      {
        if (qword_2563D4178 != -1)
          swift_once();
        v19 = sub_2362CB494();
        __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
        v20 = sub_2362CB47C();
        v21 = sub_2362CB848();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_23624C000, v20, v21, "No sandbox token in container, hoping for the best", v22, 2u);
          MEMORY[0x23B7EF258](v22, -1, -1);
        }

      }
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v12, v8);
      return container_query_free();
    }
    __break(1u);
  }
  else
  {
    result = container_query_get_last_error();
    if (result)
    {
      type metadata accessor for ContainerErrorCopy();
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = container_error_copy();
      sub_236298828();
      swift_allocError();
      *v18 = v17;
      swift_willThrow();
      return container_query_free();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_236298590()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2362CB38C();
  __swift_allocate_value_buffer(v0, qword_2563D3FA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2563D3FA0);
  return sub_23629826C(*MEMORY[0x24BDAC3E0], v1);
}

uint64_t sub_2362986C0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2362CB38C();
  __swift_allocate_value_buffer(v0, qword_2563D4278);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2563D4278);
  return sub_23629826C(0, v1);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_236298828()
{
  unint64_t result;

  result = qword_2563D7708;
  if (!qword_2563D7708)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362CFB2C, &type metadata for ContainerFetchError);
    atomic_store(result, (unint64_t *)&qword_2563D7708);
  }
  return result;
}

uint64_t sub_23629886C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[3];
  uint64_t v84;

  v78 = a1;
  v1 = sub_2362CB284();
  v71 = *(_QWORD *)(v1 - 8);
  v72 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v76 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB6D4();
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v73 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2362CB428();
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v70 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v70 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v70 - v25;
  v27 = sub_2362CB308();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_2362CB38C();
  v77 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = ((char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2563D3FB8 != -1)
    swift_once();
  v80 = v32;
  __swift_project_value_buffer(v32, (uint64_t)qword_2563D3FA0);
  strcpy((char *)v83, "InstanceUUID");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v31, *MEMORY[0x24BDCD7A0], v27);
  sub_23628CD04();
  sub_2362CB380();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  swift_bridgeObjectRelease();
  v36 = sub_236299418();
  if (v37 >> 60 == 15)
  {
    v38 = v81;
    v39 = v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v10, 1, 1, v82);
LABEL_6:
    sub_23625B4F8((uint64_t)v10, &qword_2542A5220);
    sub_2362CB41C();
    if (qword_2563D4178 != -1)
      swift_once();
    v42 = sub_2362CB494();
    __swift_project_value_buffer(v42, (uint64_t)qword_2563DB5D8);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v15, v19, v39);
    v43 = sub_2362CB47C();
    v44 = sub_2362CB848();
    v45 = os_log_type_enabled(v43, v44);
    v79 = v19;
    if (v45)
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v83[0] = v47;
      *(_DWORD *)v46 = 136315138;
      v70 = v35;
      sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v48 = sub_2362CBBC0();
      v84 = sub_2362AB670(v48, v49, v83);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      v35 = v70;
      v19 = v79;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v82);
      _os_log_impl(&dword_23624C000, v43, v44, "saving new container instance UUID %s", v46, 0xCu);
      swift_arrayDestroy();
      v50 = v47;
      v39 = v82;
      MEMORY[0x23B7EF258](v50, -1, -1);
      MEMORY[0x23B7EF258](v46, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
    }

    sub_2362CB3EC();
    v51 = v73;
    sub_2362CB6C8();
    v52 = sub_2362CB6A4();
    v54 = v53;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v75);
    if (v54 >> 60 == 15)
    {
      v55 = sub_2362CB47C();
      v56 = sub_2362CB83C();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v57 = 0;
        _os_log_impl(&dword_23624C000, v55, v56, "could not convert container instance UUID to string data!?", v57, 2u);
        MEMORY[0x23B7EF258](v57, -1, -1);
      }

      v58 = v76;
      v19 = v79;
    }
    else
    {
      sub_2362CB3D4();
      sub_23629A1D4(v52, v54);
      v58 = v76;
    }
    sub_2362CB278();
    sub_2362CB26C();
    sub_2362CB32C();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v72);
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v78, v19, v39);
    v68 = v80;
    return (*(uint64_t (**)(NSObject *, uint64_t))(v77 + 8))(v35, v68);
  }
  v40 = v36;
  v41 = v37;
  sub_236299700((uint64_t)v10);
  sub_23629A1D4(v40, v41);
  v38 = v81;
  v39 = v82;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v10, 1, v82) == 1)
    goto LABEL_6;
  v59 = *(char **)(v38 + 32);
  ((void (*)(char *, char *, uint64_t))v59)(v26, v10, v39);
  if (qword_2563D4178 != -1)
    swift_once();
  v60 = sub_2362CB494();
  __swift_project_value_buffer(v60, (uint64_t)qword_2563DB5D8);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v23, v26, v39);
  v61 = sub_2362CB47C();
  v62 = sub_2362CB848();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    v83[0] = v64;
    *(_DWORD *)v63 = 136315138;
    v79 = v59;
    sub_23624E3C4((unint64_t *)&qword_2542A52A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v65 = sub_2362CBBC0();
    v84 = sub_2362AB670(v65, v66, v83);
    v59 = v79;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v23, v82);
    _os_log_impl(&dword_23624C000, v61, v62, "loaded container instance UUID %s", v63, 0xCu);
    swift_arrayDestroy();
    v67 = v64;
    v39 = v82;
    MEMORY[0x23B7EF258](v67, -1, -1);
    MEMORY[0x23B7EF258](v63, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v39);
  }

  v68 = v80;
  sub_236299A70(v35);
  ((void (*)(uint64_t, char *, uint64_t))v59)(v78, v26, v39);
  return (*(uint64_t (**)(NSObject *, uint64_t))(v77 + 8))(v35, v68);
}

uint64_t sub_236299418()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2362CB38C();
  MEMORY[0x24BDAC7A8](v0, v1);
  return sub_2362CB398();
}

uint64_t sub_236299700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2362CB6D4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2362CB6C8();
  v8 = sub_2362CB6B0();
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    sub_2362CB3E0();
    v12 = sub_2362CB428();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12) != 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v5, v12);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
    sub_23625B4F8((uint64_t)v5, &qword_2542A5220);
    if (qword_2563D4178 != -1)
      swift_once();
    v14 = sub_2362CB494();
    __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain();
    v15 = sub_2362CB47C();
    v16 = sub_2362CB830();
    if (!os_log_type_enabled(v15, v16))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v26 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v25 = sub_2362AB670(v10, v11, &v26);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23624C000, v15, v16, "Could not parse %s as a UUID", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v18, -1, -1);
    v19 = v17;
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v20 = sub_2362CB494();
    __swift_project_value_buffer(v20, (uint64_t)qword_2563DB5D8);
    v15 = sub_2362CB47C();
    v21 = sub_2362CB830();
    if (!os_log_type_enabled(v15, v21))
      goto LABEL_12;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23624C000, v15, v21, "could not parse data as UTF-8", v22, 2u);
    v19 = v22;
  }
  MEMORY[0x23B7EF258](v19, -1, -1);
LABEL_12:

LABEL_15:
  v24 = sub_2362CB428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
}

void sub_236299A70(NSObject *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void **v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  NSObject *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  NSObject *v66;
  __int128 v67;
  uint64_t v68;
  id v69[17];

  v69[15] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_2362CB38C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2362CB284();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6070);
  inited = swift_initStackObject();
  v67 = xmmword_2362CE0F0;
  *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
  v13 = (void *)*MEMORY[0x24BDBCC20];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC20];
  v14 = v13;
  sub_2362B7714(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_2362CB314();
  swift_bridgeObjectRelease();
  v54 = sub_2362CB260();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (v54)
  {
    v55 = sub_2362CB698();
    v57 = v56;
    if (v55 == sub_2362CB698() && v57 == v58)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    v60 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
      goto LABEL_20;
  }
  v66 = a1;
  if (qword_2563D4178 != -1)
    swift_once();
  v64 = v6;
  v15 = sub_2362CB494();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_2563DB5D8);
  v17 = v54;
  v63 = v16;
  v18 = sub_2362CB47C();
  v19 = sub_2362CB830();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (void *)swift_slowAlloc();
    v65 = v3;
    v62 = v2;
    v22 = v21;
    v68 = (uint64_t)v54;
    v69[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v23 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7718);
    v24 = sub_2362CB6EC();
    v68 = sub_2362AB670(v24, v25, (uint64_t *)v69);
    sub_2362CB9C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v18, v19, "File protection on instance UUID file was %{public}s, trying to correct...", v20, 0xCu);
    swift_arrayDestroy();
    v26 = v22;
    v2 = v62;
    v3 = v65;
    MEMORY[0x23B7EF258](v26, -1, -1);
    MEMORY[0x23B7EF258](v20, -1, -1);

  }
  else
  {

  }
  v27 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7710);
  v28 = swift_initStackObject();
  v29 = (void **)MEMORY[0x24BDD0CF0];
  *(_OWORD *)(v28 + 16) = v67;
  v30 = *v29;
  *(_QWORD *)(v28 + 32) = *v29;
  v31 = (void *)*MEMORY[0x24BDD0CF8];
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(v28 + 64) = v32;
  *(_QWORD *)(v28 + 40) = v31;
  v33 = v30;
  v34 = v31;
  sub_236294764(v28);
  type metadata accessor for FileAttributeKey(0);
  sub_23624E3C4(&qword_2563D6EC0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2362CE040);
  v35 = (void *)sub_2362CB608();
  swift_bridgeObjectRelease();
  v36 = v66;
  sub_2362CB368();
  v37 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v69[0] = 0;
  LODWORD(v28) = objc_msgSend(v27, sel_setAttributes_ofItemAtPath_error_, v35, v37, v69);

  if ((_DWORD)v28)
  {
    v38 = v69[0];

    return;
  }
  v39 = v69[0];
  v40 = (void *)sub_2362CB2E4();

  swift_willThrow();
  v41 = v64;
  (*(void (**)(char *, NSObject *, uint64_t))(v3 + 16))(v64, v36, v2);
  v42 = v40;
  v43 = v40;
  v54 = sub_2362CB47C();
  v44 = sub_2362CB830();
  if (os_log_type_enabled(v54, v44))
  {
    v45 = swift_slowAlloc();
    v65 = v3;
    v46 = v45;
    v47 = v2;
    v48 = (_QWORD *)swift_slowAlloc();
    *(_QWORD *)&v67 = swift_slowAlloc();
    v69[0] = (id)v67;
    *(_DWORD *)v46 = 136446466;
    sub_23624E3C4((unint64_t *)&qword_2563D3E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v49 = sub_2362CBBC0();
    v68 = sub_2362AB670(v49, v50, (uint64_t *)v69);
    v66 = v17;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v47);
    *(_WORD *)(v46 + 12) = 2112;
    v51 = v40;
    v52 = _swift_stdlib_bridgeErrorToNSError();
    v68 = v52;
    sub_2362CB9C8();
    *v48 = v52;

    _os_log_impl(&dword_23624C000, v54, v44, "Could not set file protection of %{public}s: %@", (uint8_t *)v46, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v48, -1, -1);
    v53 = v67;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v53, -1, -1);
    MEMORY[0x23B7EF258](v46, -1, -1);

    return;
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v2);
LABEL_20:

}

uint64_t sub_23629A1D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23625EFAC(a1, a2);
  return a1;
}

unint64_t *initializeBufferWithCopyOfBuffer for ContainerFetchError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_23629A218(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_23629A218(unint64_t result)
{
  if (!(result >> 62))
    return swift_retain();
  return result;
}

unint64_t destroy for ContainerFetchError(unint64_t *a1)
{
  return sub_23629A230(*a1);
}

unint64_t sub_23629A230(unint64_t result)
{
  if (!(result >> 62))
    return swift_release();
  return result;
}

unint64_t *assignWithCopy for ContainerFetchError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_23629A218(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_23629A230(v4);
  return a1;
}

unint64_t *assignWithTake for ContainerFetchError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_23629A230(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerFetchError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xE && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 14);
  v3 = (((*(_QWORD *)a1 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)a1 >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xD)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ContainerFetchError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD)
  {
    *(_QWORD *)result = a2 - 14;
    if (a3 >= 0xE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_23629A348(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return *a1 + 2;
}

_QWORD *sub_23629A360(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_23629A370(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
    *result = *result & 0xFFFFFFFFFFFFFFFLL | (a2 << 62);
  else
    *result = (a2 - 2) | 0x8000000000000000;
  return result;
}

ValueMetadata *type metadata accessor for ContainerFetchError()
{
  return &type metadata for ContainerFetchError;
}

void sub_23629A3AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD, id), uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void (*v32)(_QWORD, id);
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __CFString *v40;
  __CFString *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  int v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  id v59;
  id v60;
  id v61;
  uint64_t ObjCClassFromMetadata;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  os_unfair_lock_s *v85;
  int v86;
  char v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  double v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint8_t *v99;
  uint8_t *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  unsigned int v105;
  void *v106;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint8_t *v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  _QWORD *v120;
  void *v121;
  id v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  void *v130;
  id v131;
  void *v132;
  void *v133;
  uint64_t v134;
  _QWORD *v135;
  void (*v136)(_QWORD, _QWORD);
  uint64_t v137;
  void *v138;
  id v139;
  _QWORD *v140;
  void *v141;
  char *v142;
  uint64_t v143;
  uint8_t *v144;
  void *v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint64_t v157;
  uint8_t *v158;
  uint64_t v159;
  id v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint8_t *v164;
  NSObject *v165;
  os_log_type_t v166;
  uint8_t *v167;
  uint8_t *v168;
  uint64_t v169;
  os_log_type_t v170;
  uint8_t *v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  void *v175;
  id v176;
  void *v177;
  uint64_t v178;
  unint64_t v179;
  void *v180;
  id v181;
  id v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  void *v186;
  id v187;
  void *v188;
  void *v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  id v199;
  int v200;
  void (*v201)(_QWORD, _QWORD);
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  uint8_t *v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  audit_token_t v212;
  audit_token_t v213;
  unint64_t v214;
  _QWORD *v215;
  _QWORD v216[4];
  char v217;
  __int128 v218[2];
  unsigned __int8 v219;
  __int128 v220[2];
  audit_token_t v221;
  char v222;
  __int128 v223[2];
  unsigned __int8 v224;
  __int128 v225[2];
  _OWORD v226[2];
  char v227;
  uint64_t v228;

  v11 = a1;
  v228 = *MEMORY[0x24BDAC8D0];
  sub_23629C538(a1, (uint64_t)v216);
  v199 = (id)v216[0];
  v195 = v216[2];
  v196 = v216[1];
  v194 = v216[3];
  v200 = v217;
  v208 = (uint8_t *)sub_2362CB560();
  *(_QWORD *)&v207 = *((_QWORD *)v208 - 1);
  MEMORY[0x24BDAC7A8](v208, v12);
  *(_QWORD *)&v206 = (char *)&v190 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2362CB590();
  v204 = *(_QWORD *)(v14 - 8);
  v205 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v203 = (char *)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2362CB440();
  MEMORY[0x24BDAC7A8](v17, v18);
  v198 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2362CB668();
  MEMORY[0x24BDAC7A8](v20, v21);
  v197 = (char *)&v190 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = os_transaction_create();
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  v24 = *(void **)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v23;

  v25 = *(id *)(v6 + 16);
  if (!v25)
  {
    v32 = a5;
    if (qword_2563D4178 != -1)
      swift_once();
    v33 = sub_2362CB494();
    __swift_project_value_buffer(v33, (uint64_t)qword_2563DB5D8);
    v34 = sub_2362CB47C();
    v35 = sub_2362CB830();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_23624C000, v34, v35, "Unexpected nil LAContext", v36, 2u);
      MEMORY[0x23B7EF258](v36, -1, -1);
    }

    v37 = sub_2362CB698();
    v39 = v38;
    v40 = _APErrorCodeDescription(0xBuLL);
    if (v40)
    {
      v41 = v40;
      v42 = sub_2362CB698();
      v44 = v43;

    }
    else
    {
      v42 = 0;
      v44 = 0;
    }
    v51 = sub_236294D50(v37, v39, 11, v42, v44, 73, 0xD000000000000051, 0x80000002362D7050);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32(0, v51);
    swift_unknownObjectRelease();

    return;
  }
  v211 = *(id *)(v6 + 16);
  v201 = (void (*)(_QWORD, _QWORD))a5;
  v202 = v11;
  v193 = a4;
  v209 = v6;
  if ((a4 & 1) != 0)
  {
    sub_236288638();
    v26 = v25;
    v27 = (void *)sub_2362CB98C();
    objc_msgSend(v26, sel_setOptionNoFailureUI_, v27);

    v28 = a6;
    v11 = v202;
    v29 = (void *)sub_2362CB998();
    v30 = v26;
    v25 = v211;
    objc_msgSend(v30, sel_setOptionMaxBiometryFailures_, v29);

    if (a3)
    {
LABEL_4:
      v31 = (void *)sub_2362CB674();
      objc_msgSend(v25, sel_setOptionAuthenticationReason_, v31);

      goto LABEL_31;
    }
  }
  else
  {
    v45 = v25;
    v28 = a6;
    if (a3)
      goto LABEL_4;
  }
  sub_23629C538(v11, (uint64_t)v223);
  if (v224 <= 0xFDu)
  {
    v192 = v28;
    sub_23625B970(v223, (uint64_t)v225);
    sub_23625B970(v225, (uint64_t)v226);
    v46 = v227;
    if (v227 < 0)
    {
      v227 &= ~0x80u;
      v52 = *(void **)&v226[0];
      v53 = BYTE8(v226[0]);
      *(_QWORD *)v213.val = 0;
      v54 = v199;
      v56 = v195;
      v55 = v196;
      v57 = v194;
      v58 = v200;
      sub_23625B5FC(v199, v196, v195, v194, v200);
      sub_23625B5FC(v54, v55, v56, v57, v58);
      v59 = objc_msgSend(v52, sel_findApplicationRecordWithError_, &v213);
      if (!v59)
      {
        v80 = *(id *)v213.val;
        v81 = (void *)sub_2362CB2E4();

        swift_willThrow();
        sub_236272520(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);

        sub_236272520(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
        goto LABEL_30;
      }
      v49 = v59;
      LODWORD(v191) = v53;
      v60 = *(id *)v213.val;
      sub_236272520(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    }
    else
    {
      v190 = v226[1];
      v191 = v226[0];
      v47 = (void *)objc_opt_self();
      *(_QWORD *)v221.val = 0;
      *(_OWORD *)v213.val = v191;
      *(_OWORD *)&v213.val[4] = v190;
      v48 = objc_msgSend(v47, sel_bundleRecordForAuditToken_error_, &v213, &v221);
      if (!v48)
      {
        v74 = *(id *)v221.val;
        v75 = (void *)sub_2362CB2E4();

        swift_willThrow();
        goto LABEL_30;
      }
      v49 = v48;
      LODWORD(v191) = v46 & 1;
      v50 = *(id *)v221.val;
    }
    v61 = v49;
    sub_2362CB65C();
    type metadata accessor for APSettingsManager(0);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v63 = (void *)objc_opt_self();
    v64 = ObjCClassFromMetadata;
    v65 = objc_msgSend(v63, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_2362CB434();
    v66 = sub_2362CB6E0();
    v68 = HIBYTE(v67) & 0xF;
    if ((v67 & 0x2000000000000000) == 0)
      v68 = v66 & 0xFFFFFFFFFFFFLL;
    if (v68)
    {
      *(_QWORD *)&v190 = v66;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_2362CE0F0;
      if ((_DWORD)v191)
      {
        sub_2362CB65C();
        v70 = objc_msgSend(v63, sel_bundleForClass_, v64);
        sub_2362CB434();
        v71 = sub_2362CB6E0();
        v73 = v72;
      }
      else
      {
        v76 = objc_msgSend(v61, sel_localizedName);
        v71 = sub_2362CB698();
        v73 = v77;

      }
      v78 = v61;
      v28 = v192;
      *(_QWORD *)(v69 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v69 + 64) = sub_2362741BC();
      *(_QWORD *)(v69 + 32) = v71;
      *(_QWORD *)(v69 + 40) = v73;
      sub_2362CB6BC();
      swift_bridgeObjectRelease();
      v79 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      objc_msgSend(v211, sel_setOptionAuthenticationReason_, v79);

      sub_236272520(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();

    sub_236272520(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
LABEL_30:
    v28 = v192;
  }
LABEL_31:
  v82 = swift_allocObject();
  *(_QWORD *)(v82 + 16) = 0;
  v83 = (_QWORD *)(v82 + 16);
  if (qword_2542A53E0 != -1)
    swift_once();
  v84 = (char *)off_2542A5400 + 16;
  v85 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v85);
  sub_23626909C((unint64_t)v84, 1, (char *)&v213);
  os_unfair_lock_unlock(v85);
  v86 = LOBYTE(v213.val[0]);
  swift_release();
  if (v86 == 2)
  {
    *(_QWORD *)&v213.val[6] = &type metadata for AppProtectionFeatures;
    v214 = sub_236264AA0();
    LOBYTE(v213.val[0]) = 1;
    v87 = sub_2362CB44C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v213);
    v88 = v211;
    if ((v87 & 1) == 0)
    {
LABEL_35:
      v89 = 1025;
      goto LABEL_50;
    }
  }
  else
  {
    v88 = v211;
    if ((v86 & 1) == 0)
      goto LABEL_35;
  }
  v90 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA958]), sel_initWithDomain_authenticationContext_, 0, 0);
  *(_QWORD *)v213.val = 0;
  v91 = objc_msgSend(v90, sel_numberForKey_error_, 14, &v213);
  v92 = *(id *)v213.val;
  if (v91)
  {
    v93 = v91;
    objc_msgSend(v93, sel_doubleValue);
    if (v94 / 1000.0 <= 86400.0)
    {
      v101 = 1;
    }
    else
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v95 = sub_2362CB494();
      __swift_project_value_buffer(v95, (uint64_t)qword_2563DB5D8);
      v96 = sub_2362CB47C();
      v97 = sub_2362CB824();
      if (os_log_type_enabled(v96, v97))
      {
        v98 = (uint8_t *)swift_slowAlloc();
        v192 = v28;
        v99 = v98;
        *(_WORD *)v98 = 0;
        _os_log_impl(&dword_23624C000, v96, v97, "Allowing passcode fallback after 24 hrs without successful bioauth", v98, 2u);
        v100 = v99;
        v28 = v192;
        MEMORY[0x23B7EF258](v100, -1, -1);
      }

      v101 = 2;
      v88 = v211;
    }

    v89 = v101;
    if ((v193 & 1) == 0)
      goto LABEL_49;
  }
  else
  {
    v89 = 1;
    if ((v193 & 1) == 0)
      goto LABEL_49;
  }
  sub_236288638();
  v102 = (void *)sub_2362CB98C();
  objc_msgSend(v88, sel_setOptionPresentingEmbeddedUI_, v102);

LABEL_49:
  v103 = (void *)sub_2362CB674();
  objc_msgSend(v88, sel_setLocalizedFallbackTitle_, v103);

LABEL_50:
  v104 = v82;
  *(_QWORD *)v213.val = *v83;
  v105 = objc_msgSend(v88, sel_canEvaluatePolicy_error_, v89, &v213);
  v106 = *(void **)v213.val;
  v107 = (void *)*v83;
  *v83 = *(_QWORD *)v213.val;
  v108 = v106;

  if (v105)
  {
    if (v89 == 1025)
    {
      sub_236288638();
      v109 = (void *)sub_2362CB98C();
      objc_msgSend(v88, sel_setOptionUseShortExpirationTimer_, v109);

    }
    if (!_AXSClarityBoardEnabled())
    {
      v110 = (void *)sub_2362CB7F4();
      objc_msgSend(v88, sel_setOptionLightweightUIMode_, v110);

    }
    sub_23629C538(v202, (uint64_t)v218);
    if (v219 >= 0xFEu)
      goto LABEL_56;
    sub_23625B970(v218, (uint64_t)v220);
    sub_23625B970(v220, (uint64_t)&v221);
    if ((v222 & 0x80000000) == 0)
    {
      v213 = v221;
      if (qword_2563D4178 != -1)
        swift_once();
      v123 = sub_2362CB494();
      __swift_project_value_buffer(v123, (uint64_t)qword_2563DB5D8);
      v124 = sub_2362CB47C();
      v125 = sub_2362CB848();
      if (os_log_type_enabled(v124, v125))
      {
        v126 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v126 = 67109120;
        swift_beginAccess();
        v212 = v213;
        v212.val[0] = audit_token_to_pid(&v212);
        sub_2362CB9C8();
        _os_log_impl(&dword_23624C000, v124, v125, "Requesting LocalAuthentication bind UI to pid %d", v126, 8u);
        MEMORY[0x23B7EF258](v126, -1, -1);
      }

      swift_beginAccess();
      v127 = sub_23625F58C(&v213, 32);
      v129 = v128;
      swift_endAccess();
      v130 = (void *)sub_2362CB3BC();
      v131 = v211;
      objc_msgSend(v211, sel_setOptionCallerAuditToken_, v130);

      v132 = (void *)sub_2362CB7F4();
      objc_msgSend(v131, sel_setOptionCallerAuditTokenUsage_, v132);

      v88 = v131;
      sub_23625EFAC(v127, v129);
      goto LABEL_72;
    }
    v222 &= ~0x80u;
    if ((v200 & 0x80000000) == 0)
    {
LABEL_56:
      if (qword_2563D4178 != -1)
        swift_once();
      v111 = sub_2362CB494();
      __swift_project_value_buffer(v111, (uint64_t)qword_2563DB5D8);
      v112 = sub_2362CB47C();
      v113 = sub_2362CB848();
      if (os_log_type_enabled(v112, v113))
      {
        v114 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v114 = 0;
        _os_log_impl(&dword_23624C000, v112, v113, "will not bind authentication UI", v114, 2u);
        v115 = v114;
        v88 = v211;
        MEMORY[0x23B7EF258](v115, -1, -1);
      }

      goto LABEL_72;
    }
    v145 = (void *)objc_opt_self();
    v146 = v199;
    v208 = (uint8_t *)v199;
    v147 = objc_msgSend(v145, sel_predicateMatchingLSApplicationIdentity_);
    v148 = (void *)objc_opt_self();
    *(_QWORD *)v212.val = 0;
    v149 = v147;
    v150 = objc_msgSend(v148, sel_handleForPredicate_error_, v149, &v212);
    if (v150)
    {
      v151 = v150;
      v152 = *(id *)v212.val;

      objc_msgSend(v151, sel_auditToken);
      v206 = *(_OWORD *)&v212.val[4];
      v207 = *(_OWORD *)v212.val;

      *(_OWORD *)v213.val = v207;
      *(_OWORD *)&v213.val[4] = v206;
      if (qword_2563D4178 != -1)
        swift_once();
      v153 = sub_2362CB494();
      __swift_project_value_buffer(v153, (uint64_t)qword_2563DB5D8);
      v154 = v202;
      sub_236272520(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
      sub_23625B5FC(v146, v196, v195, v194, v200);
      v155 = sub_2362CB47C();
      v156 = sub_2362CB848();
      if (os_log_type_enabled(v155, v156))
      {
        v157 = swift_slowAlloc();
        *(_QWORD *)&v206 = swift_slowAlloc();
        *(_DWORD *)v157 = 67109378;
        *(_QWORD *)&v207 = v89;
        swift_beginAccess();
        v212 = v213;
        v212.val[0] = audit_token_to_pid(&v212);
        sub_2362CB9C8();
        *(_WORD *)(v157 + 8) = 2114;
        *(_QWORD *)v212.val = v208;
        v158 = v208;
        v89 = v207;
        sub_2362CB9C8();
        v159 = v206;
        *(_QWORD *)v206 = v199;
        sub_236272520(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
        sub_236272520(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
        _os_log_impl(&dword_23624C000, v155, v156, "Requesting LocalAuthentication bind UI to pid %d from identity %{public}@", (uint8_t *)v157, 0x12u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v159, -1, -1);
        MEMORY[0x23B7EF258](v157, -1, -1);
      }
      else
      {
        sub_236272520(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
        sub_236272520(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
      }

      swift_beginAccess();
      v172 = sub_23625F58C(&v213, 32);
      v174 = v173;
      swift_endAccess();
      v175 = (void *)sub_2362CB3BC();
      v176 = v211;
      objc_msgSend(v211, sel_setOptionCallerAuditToken_, v175);

      v177 = (void *)sub_2362CB7F4();
      objc_msgSend(v176, sel_setOptionCallerAuditTokenUsage_, v177);
      sub_236272520(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);

      v88 = v176;
      v178 = v172;
      v179 = v174;
      goto LABEL_92;
    }
    v160 = *(id *)v212.val;
    v161 = (void *)sub_2362CB2E4();

    swift_willThrow();
    if (qword_2563D4178 != -1)
      swift_once();
    v162 = sub_2362CB494();
    __swift_project_value_buffer(v162, (uint64_t)qword_2563DB5D8);
    v163 = v202;
    sub_236272520(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23627250C);
    v164 = v208;
    v165 = sub_2362CB47C();
    v166 = sub_2362CB848();
    if (os_log_type_enabled(v165, v166))
    {
      v167 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v206 = swift_slowAlloc();
      *(_QWORD *)&v207 = v89;
      v208 = v167;
      *(_DWORD *)v167 = 138412290;
      *(_QWORD *)v213.val = v164;
      v168 = v164;
      sub_2362CB9C8();
      v169 = v206;
      *(_QWORD *)v206 = v199;
      sub_236272520(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
      v89 = v207;
      sub_236272520(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
      v170 = v166;
      v171 = v208;
      _os_log_impl(&dword_23624C000, v165, v170, "Requesting LocalAuthentication bind UI to identity %@", v208, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v169, -1, -1);
      MEMORY[0x23B7EF258](v171, -1, -1);
    }
    else
    {
      sub_236272520(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
      sub_236272520(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);
    }

    v180 = (void *)objc_opt_self();
    *(_QWORD *)v213.val = 0;
    v181 = objc_msgSend(v180, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v164, 1, &v213);
    v182 = *(id *)v213.val;
    if (v181)
    {
      v183 = sub_2362CB3C8();
      v185 = v184;

      v186 = (void *)sub_2362CB3BC();
      v187 = v211;
      objc_msgSend(v211, sel_setOptionCallerAuditToken_, v186);

      v188 = (void *)sub_2362CB7F4();
      objc_msgSend(v187, sel_setOptionCallerAuditTokenUsage_, v188);
      sub_236272520(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236272558);

      v178 = v183;
      v179 = v185;
      v88 = v187;
LABEL_92:
      sub_23625EFAC(v178, v179);
LABEL_72:
      sub_236294AF0(MEMORY[0x24BEE4AF8]);
      v133 = (void *)sub_2362CB608();
      swift_bridgeObjectRelease();
      v134 = swift_allocObject();
      swift_weakInit();
      v135 = (_QWORD *)swift_allocObject();
      v136 = v201;
      v135[2] = v134;
      v135[3] = v136;
      v137 = v210;
      v135[4] = v28;
      v135[5] = v137;
      v135[6] = v88;
      v214 = (unint64_t)sub_23629C6D0;
      v215 = v135;
      *(_QWORD *)v213.val = MEMORY[0x24BDAC760];
      *(_QWORD *)&v213.val[2] = 1107296256;
      *(_QWORD *)&v213.val[4] = sub_23629C088;
      *(_QWORD *)&v213.val[6] = &block_descriptor_12_1;
      v138 = _Block_copy(&v213);
      v139 = v88;
      swift_retain();
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v139, sel_evaluatePolicy_options_reply_, v89, v133, v138);

      swift_unknownObjectRelease();
      _Block_release(v138);
      swift_release();

      return;
    }
    v189 = v182;
    sub_2362CB2E4();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v116 = sub_2362CB494();
    __swift_project_value_buffer(v116, (uint64_t)qword_2563DB5D8);
    swift_retain_n();
    v117 = sub_2362CB47C();
    v118 = sub_2362CB830();
    if (os_log_type_enabled(v117, v118))
    {
      v192 = v28;
      v119 = (uint8_t *)swift_slowAlloc();
      v120 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v119 = 138412290;
      swift_beginAccess();
      v121 = (void *)*v83;
      if (*v83)
      {
        *(_QWORD *)v213.val = *v83;
        v122 = v121;
      }
      else
      {
        *(_QWORD *)v213.val = 0;
      }
      sub_2362CB9C8();
      *v120 = v121;
      v104 = v82;
      swift_release_n();
      _os_log_impl(&dword_23624C000, v117, v118, "Can't evaluate device owner auth! Cannot continue. %@", v119, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v120, -1, -1);
      MEMORY[0x23B7EF258](v119, -1, -1);

      v28 = v192;
    }
    else
    {

      swift_release_n();
    }
    v140 = (_QWORD *)swift_allocObject();
    v140[2] = v201;
    v140[3] = v28;
    v140[4] = v104;
    v214 = (unint64_t)sub_23629C5D0;
    v215 = v140;
    *(_QWORD *)v213.val = MEMORY[0x24BDAC760];
    *(_QWORD *)&v213.val[2] = 1107296256;
    *(_QWORD *)&v213.val[4] = sub_23624E13C;
    *(_QWORD *)&v213.val[6] = &block_descriptor_14;
    v141 = _Block_copy(&v213);
    swift_retain();
    swift_retain();
    v142 = v203;
    sub_2362CB578();
    *(_QWORD *)&v220[0] = MEMORY[0x24BEE4AF8];
    sub_23629C5DC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23629C624();
    v143 = v206;
    v144 = v208;
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v142, v143, v141);
    _Block_release(v141);
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint8_t *))(v207 + 8))(v143, v144);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v142, v205);
    swift_release();
    swift_release();
  }
}

uint64_t sub_23629BC00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t result;
  NSObject *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = *(id *)(result + 24);
    swift_release();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a1;
    v15[3] = a2;
    v15[4] = a4;
    v15[5] = a5;
    v15[6] = a6;
    v15[7] = a7;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23629C724;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_236264B8C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2362550D4;
    aBlock[3] = &block_descriptor_21;
    v17 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v18 = a2;
    swift_unknownObjectRetain();
    v19 = a7;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v14, v17);

    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_23629BDAC(uint64_t a1, void *a2, uint64_t (*a3)(BOOL, void *))
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19[2];

  v19[1] = *MEMORY[0x24BDAC8D0];
  if (qword_2563D4178 != -1)
    swift_once();
  v6 = sub_2362CB494();
  __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
  swift_bridgeObjectRetain();
  v7 = a2;
  swift_bridgeObjectRetain();
  v8 = a2;
  v9 = sub_2362CB47C();
  v10 = sub_2362CB848();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19[0] = v13;
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7720);
    v14 = sub_2362CB6EC();
    sub_2362AB670(v14, v15, v19);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2114;
    if (a2)
    {
      v16 = a2;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
    }
    else
    {
      sub_2362CB9C8();
      v17 = 0;
    }
    *v12 = v17;

    _os_log_impl(&dword_23624C000, v9, v10, "Authentication result: %{public}s err: %{public}@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v13, -1, -1);
    MEMORY[0x23B7EF258](v11, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  return a3(a1 != 0, a2);
}

uint64_t sub_23629C088(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_2362CB614();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_23629C11C(void (*a1)(_QWORD, void *), uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  v6 = v5;
  a1(0, v5);

}

uint64_t sub_23629C180()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalAuthenticationAuthProvider()
{
  return objc_opt_self();
}

void sub_23629C1CC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  objc_msgSend(*(id *)(*v0 + 16), sel_invalidate);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

}

void sub_23629C200()
{
  sub_23629C2B4();
}

uint64_t sub_23629C214()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2362CB698();
  sub_236294D50(v0, v1, 2, 0xD000000000000030, 0x80000002362D6FA0, 61, 0x65674165636E6566, 0xEA00000000002928);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

void sub_23629C294(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD, id), uint64_t a6)
{
  sub_23629A3AC(a1, a2, a3, a4, a5, a6);
}

void sub_23629C2B4()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA958]), sel_initWithDomain_authenticationContext_, 0, 0);
  v16[0] = 0;
  v1 = objc_msgSend(v0, sel_numberForKey_error_, 14, v16);
  v2 = v16[0];
  v16[0] = 0;
  v3 = v2;
  v4 = objc_msgSend(v0, sel_numberForKey_error_, 21, v16);
  v5 = v4;
  v6 = v16[0];
  if (v1)
  {
    v7 = v16[0];
    if (v5)
    {
      v8 = v1;
      v9 = v5;
      objc_msgSend(v8, sel_doubleValue);
      objc_msgSend(v9, sel_doubleValue);

      return;
    }
    objc_msgSend(v1, sel_doubleValue);

  }
  else if (v4)
  {
    v10 = v16[0];
    objc_msgSend(v5, sel_doubleValue);

  }
  else
  {
    if (v3)
    {
      v11 = v3;
      v12 = v6;
      v13 = v11;
      swift_willThrow();

    }
    else
    {
      if (!v16[0])
      {
        v14 = sub_2362CB698();
        sub_236294D50(v14, v15, 2, 0xD000000000000018, 0x80000002362D6FE0, 53, 0xD000000000000013, 0x80000002362D7000);
        swift_bridgeObjectRelease();
        swift_willThrow();
        goto LABEL_7;
      }
      v13 = v16[0];
      swift_willThrow();
    }

  }
LABEL_7:

}

uint64_t sub_23629C538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D73D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23629C580()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23629C5A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23629C5D0()
{
  uint64_t v0;

  sub_23629C11C(*(void (**)(_QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_23629C5DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A52B0;
  if (!qword_2542A52B0)
  {
    v1 = sub_2362CB560();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2542A52B0);
  }
  return result;
}

unint64_t sub_23629C624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A52D0;
  if (!qword_2542A52D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A52C0);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542A52D0);
  }
  return result;
}

uint64_t sub_23629C670()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23629C694()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23629C6D0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_23629BC00(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_23629C6E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23629C724()
{
  uint64_t v0;

  return sub_23629BDAC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(BOOL, void *))(v0 + 32));
}

uint64_t sub_23629C734()
{
  return swift_deallocObject();
}

id sub_23629C754()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for APDaemonPersistentContainer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2563D40C8 = (uint64_t)result;
  return result;
}

uint64_t sub_23629C7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v0 = sub_2362CB308();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB38C();
  __swift_allocate_value_buffer(v5, qword_2563D40E0);
  __swift_project_value_buffer(v5, (uint64_t)qword_2563D40E0);
  if (qword_2563D3FB8 != -1)
    swift_once();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563D3FA0);
  v7[0] = 0xD000000000000015;
  v7[1] = 0x80000002362D71E0;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BDCD798], v0);
  sub_23628CD04();
  sub_2362CB380();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return swift_bridgeObjectRelease();
}

void *sub_23629C8E8()
{
  void *result;

  result = (void *)sub_23629C904();
  off_2563D7730 = result;
  return result;
}

uint64_t sub_23629C904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = sub_2362CB38C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7738);
  v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2362CFBC0;
  if (qword_2563D4100 != -1)
    swift_once();
  v7 = v6 + v5;
  v8 = __swift_project_value_buffer(v0, (uint64_t)qword_2563D40E0);
  v19 = v6;
  v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 16);
  v9(v7, v8, v0);
  v9((unint64_t)v4, v8, v0);
  v10 = sub_2362CB35C();
  v12 = v11;
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v20 = v10;
  v21 = v12;
  swift_bridgeObjectRetain();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB320();
  swift_bridgeObjectRelease();
  v9((unint64_t)v4, v8, v0);
  v14 = sub_2362CB368();
  v16 = v15;
  v13(v4, v0);
  v20 = v14;
  v21 = v16;
  swift_bridgeObjectRetain();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB320();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_23629CAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void (**v30)(_QWORD, _QWORD);
  char *v31;
  NSObject *v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t ErrorValue;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  id v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  id v62;
  void *v63;
  unsigned int v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  void *v75;
  char *v76;
  id v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t result;
  _QWORD v92[2];
  id v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  char *v100;
  NSObject *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  _QWORD aBlock[8];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E90);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB38C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v106 = (char *)v92 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v107 = (char *)v92 - v14;
  v15 = sub_2362CB494();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v100 = v3;
  v102 = __swift_project_value_buffer(v15, (uint64_t)qword_2563DB5D8);
  v20 = sub_2362CB47C();
  v21 = sub_2362CB848();
  v22 = os_log_type_enabled(v20, v21);
  v104 = v5;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23624C000, v20, v21, "creating container for daemon", v23, 2u);
    MEMORY[0x23B7EF258](v23, -1, -1);
  }

  v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for APDaemonPersistentContainer()), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5210);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2362CEEC0;
  v26 = v24;
  *(_QWORD *)(v25 + 32) = sub_23629DA88();
  aBlock[0] = v25;
  sub_2362CB770();
  sub_23629E144();
  v27 = (void *)sub_2362CB758();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setPersistentStoreDescriptions_, v27);

  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  aBlock[4] = sub_23629E1A4;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23629D904;
  aBlock[3] = &block_descriptor_15;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_loadPersistentStoresWithCompletionHandler_, v29);
  _Block_release(v29);
  swift_beginAccess();
  if (!*(_QWORD *)(v28 + 16))
  {
LABEL_33:
    swift_release();
    return (uint64_t)v26;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v102, v15);
  swift_retain_n();
  v30 = (void (**)(_QWORD, _QWORD))v16;
  v31 = v9;
  v32 = sub_2362CB47C();
  LODWORD(v105) = sub_2362CB83C();
  v33 = os_log_type_enabled(v32, (os_log_type_t)v105);
  v99 = v31;
  v96 = v4;
  v93 = v26;
  v97 = v28;
  if (!v33)
  {

    swift_release_n();
    ((void (**)(char *, uint64_t))v30)[1](v19, v15);
    v51 = MEMORY[0x24BEE4AD8];
LABEL_13:
    v53 = v100;
    v54 = v106;
    if (qword_2563D6A08 != -1)
      swift_once();
    v55 = *((_QWORD *)off_2563D7730 + 2);
    v56 = v96;
    v57 = v104;
    v92[1] = off_2563D7730;
    if (v55)
    {
      v58 = (char *)off_2563D7730
          + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
      v105 = *(_QWORD *)(v104 + 72);
      v107 = *(char **)(v104 + 16);
      v101 = *MEMORY[0x24BDD0B88];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v59 = 136315394;
      v95 = v59;
      v94 = v51 + 8;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v107)(v53, v58, v56);
        v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
        v61(v53, 0, 1, v56);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v53, 1, v56) == 1)
          goto LABEL_32;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v53, v56);
        v62 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v63 = (void *)sub_2362CB338();
        v111 = 0;
        v64 = objc_msgSend(v62, sel_removeItemAtURL_error_, v63, &v111);

        if (v64)
        {
          v60 = v111;
          (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
        }
        else
        {
          v65 = v111;
          v66 = (void *)sub_2362CB2E4();

          swift_willThrow();
          v67 = (void *)sub_2362CB2D8();
          v68 = objc_msgSend(v67, sel_domain);
          v69 = sub_2362CB698();
          v71 = v70;

          if (v69 == sub_2362CB698() && v71 == v72)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v73 = sub_2362CBBE4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v73 & 1) == 0)
              goto LABEL_27;
          }
          if (objc_msgSend(v67, sel_code) != (id)4)
          {
LABEL_27:
            v103 = v67;
            v76 = v99;
            ((void (*)(char *, char *, uint64_t))v107)(v99, v106, v56);
            v77 = v66;
            v78 = v66;
            v79 = sub_2362CB47C();
            v80 = sub_2362CB83C();
            if (os_log_type_enabled(v79, v80))
            {
              v81 = swift_slowAlloc();
              v98 = (void *)swift_slowAlloc();
              v111 = v98;
              *(_DWORD *)v81 = v95;
              sub_23629E1AC();
              v82 = sub_2362CBBC0();
              *(_QWORD *)(v81 + 4) = sub_2362AB670(v82, v83, (uint64_t *)&v111);
              swift_bridgeObjectRelease();
              v84 = *(void (**)(char *, uint64_t))(v104 + 8);
              v84(v76, v56);
              *(_WORD *)(v81 + 12) = 2080;
              swift_getErrorValue();
              v85 = sub_2362CBC2C();
              *(_QWORD *)(v81 + 14) = sub_2362AB670(v85, v86, (uint64_t *)&v111);
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_23624C000, v79, v80, "Could not remove store file %s: %s", (uint8_t *)v81, 0x16u);
              v87 = v98;
              swift_arrayDestroy();
              MEMORY[0x23B7EF258](v87, -1, -1);
              v88 = v81;
              v53 = v100;
              MEMORY[0x23B7EF258](v88, -1, -1);

              v57 = v104;
              v54 = v106;
              v84(v106, v56);
            }
            else
            {

              v57 = v104;
              v89 = *(void (**)(char *, uint64_t))(v104 + 8);
              v89(v76, v56);

              v54 = v106;
              v89(v106, v56);
            }
            goto LABEL_18;
          }
          v57 = v104;
          v74 = v106;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v106, v56);
          v75 = v66;
          v54 = v74;

        }
LABEL_18:
        v58 += v105;
        if (!--v55)
          goto LABEL_31;
      }
    }
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56);
    swift_bridgeObjectRetain();
LABEL_31:
    v61(v53, 1, 1, v56);
LABEL_32:
    v90 = swift_bridgeObjectRelease();
    v26 = (id)sub_23629CAFC(v90);

    goto LABEL_33;
  }
  v101 = v32;
  *(_QWORD *)&v95 = v15;
  v103 = v30;
  v34 = swift_slowAlloc();
  v98 = (void *)swift_slowAlloc();
  v111 = v98;
  *(_DWORD *)v34 = 136315394;
  if (*(_QWORD *)(v28 + 16))
  {
    ErrorValue = swift_getErrorValue();
    v36 = v110;
    v37 = *(_QWORD *)(v110 - 8);
    MEMORY[0x24BDAC7A8](ErrorValue, v109);
    v39 = (char *)v92 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v39);
    v40 = sub_2362CBC2C();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    v108 = sub_2362AB670(v40, v42, (uint64_t *)&v111);
    sub_2362CB9C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    v43 = v101;
    if (qword_2563D4100 != -1)
      swift_once();
    v44 = v96;
    v45 = __swift_project_value_buffer(v96, (uint64_t)qword_2563D40E0);
    v46 = v104;
    v47 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v107, v45, v44);
    sub_23629E1AC();
    v48 = sub_2362CBBC0();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v44);
    v108 = sub_2362AB670(v48, v50, (uint64_t *)&v111);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v43, (os_log_type_t)v105, "Couldn't load persistent store: %s, deleting %s and retrying", (uint8_t *)v34, 0x16u);
    v51 = MEMORY[0x24BEE4AD8];
    v52 = v98;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v52, -1, -1);
    MEMORY[0x23B7EF258](v34, -1, -1);

    (*((void (**)(char *, _QWORD))v103 + 1))(v19, v95);
    goto LABEL_13;
  }
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23629D67C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  if (qword_2563D4178 != -1)
    swift_once();
  v6 = sub_2362CB494();
  __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = a2;
  v11 = sub_2362CB47C();
  v12 = sub_2362CB848();
  if (os_log_type_enabled(v11, v12))
  {
    v20 = a3;
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    v15 = v9;
    sub_2362CB9C8();
    *v14 = v9;

    *(_WORD *)(v13 + 12) = 2112;
    if (a2)
    {
      v16 = a2;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
    }
    else
    {
      sub_2362CB9C8();
      v17 = 0;
    }
    a3 = v20;
    v14[1] = v17;

    _os_log_impl(&dword_23624C000, v11, v12, "container description %@ load error %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v14, -1, -1);
    MEMORY[0x23B7EF258](v13, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  v18 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v19 = a2;

}

void sub_23629D904(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

id sub_23629DA34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for APDaemonPersistentContainer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for APDaemonPersistentContainer()
{
  return objc_opt_self();
}

id sub_23629DA88()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  _QWORD v35[2];
  uint64_t v36;

  v0 = (_QWORD *)sub_2362CB38C();
  v1 = *(v0 - 1);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
LABEL_32:
    swift_once();
  v5 = sub_2362CB494();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563DB5D8);
  v6 = sub_2362CB47C();
  v7 = sub_2362CB848();
  v8 = &qword_2563D3FE0[4];
  if (os_log_type_enabled(v6, v7))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v36 = v10;
    *(_DWORD *)v9 = 136315138;
    if (qword_2563D4100 != -1)
      swift_once();
    v11 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_2563D40E0);
    (*(void (**)(char *, uint64_t, _QWORD *))(v1 + 16))(v4, v11, v0);
    sub_23629E1AC();
    v12 = sub_2362CBBC0();
    v14 = v13;
    (*(void (**)(char *, _QWORD *))(v1 + 8))(v4, v0);
    v35[1] = sub_2362AB670(v12, v14, &v36);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v6, v7, "creating store description for store at %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v10, -1, -1);
    MEMORY[0x23B7EF258](v9, -1, -1);

    v8 = qword_2563D3FE0 + 32;
  }
  else
  {

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(inited + 32) = sub_2362CB698();
  *(_QWORD *)(inited + 40) = v16;
  sub_2362CB698();
  v17 = sub_2362CB674();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v17;
  v18 = sub_23629464C(inited);
  if (v8[32] != -1)
    swift_once();
  v19 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_2563D40E0);
  (*(void (**)(char *, uint64_t, _QWORD *))(v1 + 16))(v4, v19, v0);
  v20 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  v21 = (void *)sub_2362CB338();
  v22 = objc_msgSend(v20, sel_initWithURL_, v21);

  (*(void (**)(char *, _QWORD *))(v1 + 8))(v4, v0);
  v23 = 0;
  v24 = v18 + 64;
  v25 = 1 << *(_BYTE *)(v18 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v1 = v26 & *(_QWORD *)(v18 + 64);
  v27 = (unint64_t)(v25 + 63) >> 6;
  while (1)
  {
    if (v1)
    {
      v28 = __clz(__rbit64(v1));
      v1 &= v1 - 1;
      v29 = v28 | (v23 << 6);
      goto LABEL_13;
    }
    v31 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v31 >= v27)
      goto LABEL_29;
    v32 = *(_QWORD *)(v24 + 8 * v31);
    ++v23;
    if (!v32)
    {
      v23 = v31 + 1;
      if (v31 + 1 >= v27)
        goto LABEL_29;
      v32 = *(_QWORD *)(v24 + 8 * v23);
      if (!v32)
      {
        v23 = v31 + 2;
        if (v31 + 2 >= v27)
          goto LABEL_29;
        v32 = *(_QWORD *)(v24 + 8 * v23);
        if (!v32)
          break;
      }
    }
LABEL_28:
    v1 = (v32 - 1) & v32;
    v29 = __clz(__rbit64(v32)) + (v23 << 6);
LABEL_13:
    v4 = *(char **)(*(_QWORD *)(v18 + 48) + 16 * v29 + 8);
    v30 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v29);
    swift_bridgeObjectRetain();
    v0 = (_QWORD *)sub_2362CB674();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_setOption_forKey_, v30, v0);

  }
  v33 = v31 + 3;
  if (v33 < v27)
  {
    v32 = *(_QWORD *)(v24 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        v23 = v33 + 1;
        if (__OFADD__(v33, 1))
          goto LABEL_31;
        if (v23 >= v27)
          goto LABEL_29;
        v32 = *(_QWORD *)(v24 + 8 * v23);
        ++v33;
        if (v32)
          goto LABEL_28;
      }
    }
    v23 = v33;
    goto LABEL_28;
  }
LABEL_29:
  swift_release();
  return v22;
}

void sub_23629DF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  void *v19;
  id v20;
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E90);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2362CB38C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v21 - v11;
  if (qword_2563D40D8 != -1)
    swift_once();
  v13 = (id)qword_2563D40C8;
  v14 = (void *)sub_2362CB674();
  v15 = (void *)sub_2362CB674();
  v16 = objc_msgSend(v13, sel_URLForResource_withExtension_, v14, v15);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_8;
  }
  sub_2362CB350();

  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v17(v3, v9, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17(v12, v3, v4);
  v18 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v19 = (void *)sub_2362CB338();
  v20 = objc_msgSend(v18, sel_initWithContentsOfURL_, v19);

  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    return;
  }
LABEL_9:
  __break(1u);
}

unint64_t sub_23629E144()
{
  unint64_t result;

  result = qword_2563D41D8;
  if (!qword_2563D41D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563D41D8);
  }
  return result;
}

uint64_t sub_23629E180()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23629E1A4(void *a1, void *a2)
{
  uint64_t v2;

  sub_23629D67C(a1, a2, v2);
}

unint64_t sub_23629E1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D3E88;
  if (!qword_2563D3E88)
  {
    v1 = sub_2362CB38C();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2563D3E88);
  }
  return result;
}

uint64_t sub_23629E1F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23629E270(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_23629E2FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_23629E32C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_23629E35C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

void sub_23629E38C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(char, uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v31[2];

  v7 = v6;
  v13 = *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 104));
  v14 = *(_QWORD *)(*(_QWORD *)v7 + 80);
  v15 = *(_QWORD *)(*(_QWORD *)v7 + 88);
  v16 = v13 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v13 + 16);
  v17 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v17);
  sub_23629E674(v16, a5, a6, (BOOL *)v31);
  os_unfair_lock_unlock(v17);
  v18 = LOBYTE(v31[0]);
  if (qword_2563D4178 != -1)
    swift_once();
  v19 = sub_2362CB494();
  __swift_project_value_buffer(v19, (uint64_t)qword_2563DB5D8);
  v20 = sub_2362CB47C();
  v21 = sub_2362CB848();
  if (os_log_type_enabled(v20, v21))
  {
    v29 = a3;
    v22 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v31[0] = v28;
    *(_DWORD *)v22 = 136446210;
    if (v18)
      v23 = 0;
    else
      v23 = 2125678;
    if (v18)
      v24 = 0xE000000000000000;
    else
      v24 = 0xE300000000000000;
    sub_2362AB670(v23, v24, v31);
    sub_2362CB9C8();
    a3 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v20, v21, "%{public}sneed to kick off authentication for queued provider.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v28, -1, -1);
    MEMORY[0x23B7EF258](v22, -1, -1);
  }

  if (v18)
  {
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v14;
    v26[3] = v15;
    v26[4] = v25;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(char, uint64_t), _QWORD *, uint64_t, uint64_t))(v15 + 40);
    swift_retain();
    v27(a1, a2, a3, a4 & 1, sub_23629EAC4, v26, v14, v15);
    swift_release();
    swift_release();
  }
}

uint64_t sub_23629E674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *(_QWORD **)(a1 + 8);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_2362AB344(0, v9[2] + 1, 1, v9);
    v9 = (_QWORD *)result;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_2362AB344((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    v9 = (_QWORD *)result;
  }
  v9[2] = v12 + 1;
  v13 = &v9[2 * v12];
  v13[4] = sub_23629EAF4;
  v13[5] = v8;
  *(_QWORD *)(a1 + 8) = v9;
  LOBYTE(v13) = *(_BYTE *)a1;
  *(_BYTE *)a1 = 1;
  *a4 = (v13 & 1) == 0;
  return result;
}

uint64_t sub_23629E76C(char a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t *);
  uint64_t v12;
  char v13;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = *(_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 104));
    v6 = v5 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v5 + 16);
    v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v7);
    v8 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v6 + 8) = MEMORY[0x24BEE4AF8];
    *(_BYTE *)v6 = 0;
    os_unfair_lock_unlock(v7);
    swift_release();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = v8 + 40;
      do
      {
        v11 = *(void (**)(char *, uint64_t *))(v10 - 8);
        v13 = a1 & 1;
        v12 = a2;
        swift_retain();
        v11(&v13, &v12);
        swift_release();
        v10 += 16;
        --v9;
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23629E89C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 8))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_23629E8CC()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QueuedAuthenticationProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for QueuedAuthenticationProvider);
}

uint64_t sub_23629E924(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23629E958(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23629E998(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for QueuedAuthenticationProvider.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for QueuedAuthenticationProvider.State);
}

uint64_t sub_23629E9DC()
{
  return sub_23629E89C();
}

uint64_t sub_23629E9FC()
{
  return sub_23629E2FC();
}

uint64_t sub_23629EA1C()
{
  return sub_23629E32C();
}

uint64_t sub_23629EA3C()
{
  return sub_23629E35C();
}

void sub_23629EA5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  sub_23629E38C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23629EA7C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23629EAA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23629EAC4(char a1, uint64_t a2)
{
  return sub_23629E76C(a1, a2);
}

uint64_t sub_23629EAD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23629EAF4(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_23629EB20(uint64_t a1)
{
  return sub_23629EB60(a1, qword_2542A58F8);
}

uint64_t sub_23629EB44(uint64_t a1)
{
  return sub_23629EB60(a1, qword_2563DB5D8);
}

uint64_t sub_23629EB60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2362CB494();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2362CB488();
}

uint64_t type metadata accessor for ServerActivityScheduler()
{
  return objc_opt_self();
}

uint64_t sub_23629EBF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2362CB9BC();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id *sub_23629EC88()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_release();

  v1 = (char *)v0 + *((_QWORD *)*v0 + 14);
  v2 = sub_2362CB9BC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_23629ECEC()
{
  sub_23629EC88();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DispatchFuture(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DispatchFuture);
}

uint64_t sub_23629ED1C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  void *v26;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v3 = v2;
  v28 = a1;
  v29 = a2;
  v4 = sub_2362CB560();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB590();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2362CB8CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC13AppProtection15SaturatingTimer_state;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6030);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 28) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  *(_BYTE *)(v18 + 24) = 0;
  *(_QWORD *)(v3 + v17) = v18;
  sub_23626B264();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23629F56C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5FE8);
  sub_23629F5B4();
  sub_2362CB9F8();
  v19 = sub_2362CB8F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  *(_QWORD *)(v3 + 16) = v19;
  v20 = v3 + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_duration;
  v21 = sub_2362CB554();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v29, v21);
  ObjectType = swift_getObjectType();
  v25 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_23629F624;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_16;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_23626A200();
  sub_23626A204(ObjectType);
  sub_2362CB908();
  _Block_release(v26);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_23629EFF4()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void (**v3)(_QWORD);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_state);
    v2 = (os_unfair_lock_s *)(v1 + 28);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 28));
    *(_BYTE *)(v1 + 24) = 0;
    v3 = *(void (***)(_QWORD))(v1 + 16);
    _Block_copy(v3);
    os_unfair_lock_unlock(v2);
    if (v3)
    {
      v3[2](v3);
      _Block_release(v3);
    }
    return swift_release();
  }
  return result;
}

void sub_23629F094(const void **a1, void *aBlock)
{
  const void *v4;

  v4 = *a1;
  _Block_copy(aBlock);
  _Block_release(v4);
  *a1 = aBlock;
}

uint64_t sub_23629F0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t);
  void (*v25)(char *, uint64_t);
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v3 = sub_2362CB554();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v26 - v10;
  v12 = sub_2362CB5A8();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)v26 - v20;
  v28 = a1;
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    v22 = v27;
    v26[1] = *(_QWORD *)(v27 + 16);
    v26[0] = swift_getObjectType();
    sub_2362CB59C();
    MEMORY[0x23B7EE34C](v17, v22 + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_duration);
    v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v17, v12);
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
    v24(v11, *MEMORY[0x24BEE5418], v3);
    *(_QWORD *)v8 = 0;
    v24(v8, *MEMORY[0x24BEE5400], v3);
    MEMORY[0x23B7EE6D0](v21, v11, v8, v26[0]);
    v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v8, v3);
    v25(v11, v3);
    result = ((uint64_t (*)(char *, uint64_t))v23)(v21, v12);
    *(_BYTE *)(v28 + 8) = 1;
  }
  return result;
}

uint64_t sub_23629F2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13AppProtection15SaturatingTimer_duration;
  v2 = sub_2362CB554();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23629F30C()
{
  return type metadata accessor for SaturatingTimer();
}

uint64_t type metadata accessor for SaturatingTimer()
{
  uint64_t result;

  result = qword_2563D5D18;
  if (!qword_2563D5D18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23629F350()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2362CB554();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SaturatingTimer.MutableState(uint64_t a1, uint64_t a2)
{
  const void *v4;

  v4 = *(const void **)a2;
  _Block_copy(*(const void **)a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

void destroy for SaturatingTimer.MutableState(const void **a1)
{
  _Block_release(*a1);
}

uint64_t assignWithCopy for SaturatingTimer.MutableState(uint64_t a1, uint64_t a2)
{
  const void *v4;
  const void *v5;

  v4 = *(const void **)a1;
  v5 = *(const void **)a2;
  _Block_copy(*(const void **)a2);
  *(_QWORD *)a1 = v5;
  _Block_release(v4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SaturatingTimer.MutableState(uint64_t a1, uint64_t a2)
{
  const void *v4;

  v4 = *(const void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _Block_release(v4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaturatingTimer.MutableState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SaturatingTimer.MutableState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SaturatingTimer.MutableState()
{
  return &type metadata for SaturatingTimer.MutableState;
}

unint64_t sub_23629F56C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D6010;
  if (!qword_2563D6010)
  {
    v1 = sub_2362CB8CC();
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE57D0], v1);
    atomic_store(result, (unint64_t *)&qword_2563D6010);
  }
  return result;
}

unint64_t sub_23629F5B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D5FF0[0];
  if (!qword_2563D5FF0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D5FE8);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, qword_2563D5FF0);
  }
  return result;
}

uint64_t sub_23629F600()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23629F624()
{
  return sub_23629EFF4();
}

void sub_23629F630(void *a1)
{
  sub_23629F648(a1, "could not push locked app changes to lsd %@");
}

void sub_23629F63C(void *a1)
{
  sub_23629F648(a1, "could not push hidden app changes to lsd %@");
}

void sub_23629F648(void *a1, const char *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  NSObject *oslog;
  uint64_t v12;

  if (a1)
  {
    if (qword_2542A53D0 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542A58F8);
    v5 = a1;
    v6 = a1;
    oslog = sub_2362CB47C();
    v7 = sub_2362CB830();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v10 = a1;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v9 = v12;

      _os_log_impl(&dword_23624C000, oslog, v7, a2, v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v9, -1, -1);
      MEMORY[0x23B7EF258](v8, -1, -1);

    }
    else
    {

    }
  }
}

void sub_23629F80C(uint64_t a1)
{
  sub_23629F8AC(a1, (uint64_t)sub_23629F630, (uint64_t)&block_descriptor_3_1, (SEL *)&selRef_setLockedApplications_completion_);
}

void sub_23629F838(uint64_t a1)
{
  sub_23629F8AC(a1, (uint64_t)sub_23629F63C, (uint64_t)&block_descriptor_17, (SEL *)&selRef_setHiddenApplications_completion_);
}

void sub_23629F864(uint64_t a1, uint64_t a2, char a3)
{
  sub_23629F9B0(a1, a2, a3, "Setting siri settings for locked app. Shown: %{BOOL}d", MEMORY[0x24BE28618]);
}

void sub_23629F888(uint64_t a1, uint64_t a2, char a3)
{
  sub_23629F9B0(a1, a2, a3, "Setting siri settings for hidden app. Shown: %{BOOL}d", MEMORY[0x24BE28610]);
}

void sub_23629F8AC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[6];

  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v7)
  {
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    sub_236259A3C(v9);
    swift_bridgeObjectRelease();
    v10 = (void *)sub_2362CB758();
    swift_release();
    v12[4] = a2;
    v12[5] = 0;
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 1107296256;
    v12[2] = sub_2362BE888;
    v12[3] = a3;
    v11 = _Block_copy(v12);
    objc_msgSend(v8, *a4, v10, v11);
    _Block_release(v11);

  }
}

void sub_23629F9B0(uint64_t a1, uint64_t a2, char a3, const char *a4, void (*a5)(void *, BOOL))
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;

  if (qword_2542A53D0 != -1)
    swift_once();
  v8 = sub_2362CB494();
  __swift_project_value_buffer(v8, (uint64_t)qword_2542A58F8);
  v9 = sub_2362CB47C();
  v10 = sub_2362CB824();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 67109120;
    sub_2362CB9C8();
    _os_log_impl(&dword_23624C000, v9, v10, a4, v11, 8u);
    MEMORY[0x23B7EF258](v11, -1, -1);
  }

  v12 = (void *)sub_2362CB674();
  a5(v12, (a3 & 1) == 0);

}

ValueMetadata *type metadata accessor for APExternalSystemStateManager()
{
  return &type metadata for APExternalSystemStateManager;
}

uint64_t sub_23629FB10(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  id *v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4368);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  v6 = (os_unfair_lock_s *)(v5 + 24);
  *(_QWORD *)(v5 + 16) = 0;
  v7 = (id *)(v5 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v5;
  v8 = a1;
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_23629FBC8(v7, v2, a2);
  os_unfair_lock_unlock(v6);
  swift_release();

  return v2;
}

void sub_23629FBC8(id *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)(uint64_t);
  id v9;
  void *v10;
  objc_super v11;

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (objc_class *)type metadata accessor for NotificationReceiverObjCShim();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)(uint64_t))&v7[OBJC_IVAR____TtC13AppProtection28NotificationReceiverObjCShim_callback];
  *v8 = sub_23629FE10;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  v11.receiver = v7;
  v11.super_class = v6;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  *a1 = v9;
  v10 = (void *)sub_2362CB674();
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v9, sel_receivedNotification_, v10, 0);

}

uint64_t sub_23629FCC8(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23629FE18(a1);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for LanguageChangeManager()
{
  return objc_opt_self();
}

void **initializeBufferWithCopyOfBuffer for LanguageChangeManager.State(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for LanguageChangeManager.State(id *a1)
{

}

void **assignWithCopy for LanguageChangeManager.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for LanguageChangeManager.State(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for LanguageChangeManager.State()
{
  return &type metadata for LanguageChangeManager.State;
}

uint64_t sub_23629FDEC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23629FE10(uint64_t a1)
{
  return sub_23629FCC8(a1);
}

void sub_23629FE18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_2362CB218();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2362CB200();
  v8 = (void *)sub_2362CB674();
  v9 = sub_2362CB698();
  v11 = v10;
  if (v9 == sub_2362CB698() && v11 == v12)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v14 = sub_2362CBBE4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_11:
    xpc_transaction_exit_clean();
    return;
  }
  if (qword_2563D4178 != -1)
    swift_once();
  v15 = sub_2362CB494();
  __swift_project_value_buffer(v15, (uint64_t)qword_2563DB5D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  v16 = sub_2362CB47C();
  v17 = sub_2362CB848();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_236293E5C();
    v20 = sub_2362CBBC0();
    v22 = sub_2362AB670(v20, v21, &v23);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    _os_log_impl(&dword_23624C000, v16, v17, "LanguageChangeManager: unknown notification: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v19, -1, -1);
    MEMORY[0x23B7EF258](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }

}

void sub_2362A00D0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2362A00FC()
{
  __CFString *v0;
  uint64_t v1;

  v0 = (id)APGetReadServiceName();
  v1 = sub_2362CB698();

  return v1;
}

ValueMetadata *type metadata accessor for DefaultClientAuthorizer()
{
  return &type metadata for DefaultClientAuthorizer;
}

uint64_t sub_2362A0184(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  id *v12;
  void *v13;
  _QWORD v15[2];
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v2 = (uint64_t)v1;
  v19 = a1;
  v3 = sub_2362CB878();
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v16 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2362CB86C();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5F70);
  swift_allocObject();
  v1[3] = sub_2362CB524();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6038);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  v11 = (os_unfair_lock_s *)(v10 + 24);
  *(_QWORD *)(v10 + 16) = 0;
  v12 = (id *)(v10 + 16);
  v1[4] = v10;
  v15[1] = sub_23625DAF8();
  sub_2362CB578();
  v20 = MEMORY[0x24BEE4AF8];
  sub_23625DB34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E344((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v16, *MEMORY[0x24BEE5750], v18);
  v1[2] = sub_2362CB8B4();
  swift_retain();
  os_unfair_lock_lock(v11);
  v13 = v19;
  sub_2362A03D0(v12, v2, v19);
  os_unfair_lock_unlock(v11);
  swift_release();

  return v2;
}

void sub_2362A03D0(id *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t (**v8)();
  id v9;
  void *v10;
  objc_super v11;

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (objc_class *)type metadata accessor for NotificationReceiverObjCShim();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t (**)())&v7[OBJC_IVAR____TtC13AppProtection28NotificationReceiverObjCShim_callback];
  *v8 = sub_2362A0964;
  v8[1] = (uint64_t (*)())v5;
  v11.receiver = v7;
  v11.super_class = v6;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  *a1 = v9;
  v10 = (void *)sub_2362CB674();
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v9, sel_receivedNotification_, v10, 0);

}

uint64_t sub_2362A04D0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2362A0524();
    return swift_release();
  }
  return result;
}

uint64_t sub_2362A0524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v1 = v0;
  if (qword_2563D4178 != -1)
    swift_once();
  v2 = sub_2362CB494();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563DB5D8);
  v3 = sub_2362CB47C();
  v4 = sub_2362CB848();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23624C000, v3, v4, "received accountsd event", v5, 2u);
    MEMORY[0x23B7EF258](v5, -1, -1);
  }

  v6 = *(NSObject **)(v1 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2362A08F4;
  *(_QWORD *)(v7 + 24) = v1;
  v10[4] = sub_236264B8C;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2362550D4;
  v10[3] = &block_descriptor_18;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v8);
  _Block_release(v8);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2362A06DC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServerAccountsManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ServerAccountsManager.State()
{
  return &type metadata for ServerAccountsManager.State;
}

uint64_t getEnumTagSinglePayload for AccountsEvent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountsEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2362A082C + 4 * byte_2362CFE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2362A0860 + 4 * byte_2362CFE60[v4]))();
}

uint64_t sub_2362A0860(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362A0868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2362A0870);
  return result;
}

uint64_t sub_2362A087C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2362A0884);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2362A0888(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362A0890(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountsEvent()
{
  return &type metadata for AccountsEvent;
}

uint64_t sub_2362A08AC()
{
  return sub_23624E344(&qword_2563D5F68, (uint64_t *)&unk_2563D5F70, MEMORY[0x24BDB9CB0]);
}

BOOL sub_2362A08D8()
{
  return sub_23628DC8C() == 0;
}

uint64_t sub_2362A08F4()
{
  sub_23628DC8C();
  return sub_2362CB50C();
}

uint64_t sub_2362A0930()
{
  return swift_deallocObject();
}

uint64_t sub_2362A0940()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2362A0964()
{
  return sub_2362A04D0();
}

uint64_t sub_2362A096C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                result = swift_checkMetadataState();
                if (v8 <= 0x3F)
                {
                  result = swift_checkMetadataState();
                  if (v9 <= 0x3F)
                  {
                    result = sub_2362CB9BC();
                    if (v10 <= 0x3F)
                      return swift_initClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2362A0B24(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_2362A0B50(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_236252958(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2362A0CD0(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_2362CB7C4();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_236252958(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2362A0E64(uint64_t a1, void *aBlock)
{
  void (*v2)(uint64_t (*)(), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_2362AA890, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_2362A0ED4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  _QWORD aBlock[6];

  v5 = (_QWORD *)v4;
  v9 = sub_2362CB560();
  MEMORY[0x24BDAC7A8](v9, v10);
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 32) = 0;
  v11 = (char *)v5 + *(_QWORD *)(*v5 + 112);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v4 + 24) = a2;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a3;
  v14[4] = a4;
  aBlock[4] = sub_2362AFCCC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_48_0;
  _Block_copy(aBlock);
  sub_23629C5DC();
  v15 = a2;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23624E344((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  sub_2362CB5CC();
  swift_allocObject();
  v16 = sub_2362CB5C0();
  swift_release();
  swift_release();
  v5[2] = v16;
  result = swift_release();
  if (v5[2])
  {
    swift_retain();
    sub_2362CB8A8();
    swift_release();

    swift_release();
    return (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2362A1118(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F58);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = &v15[-v9];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    a2();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 0, 1, v13);
    sub_23625F248((uint64_t)v10, (uint64_t)v7, &qword_2563D5F58);
    v14 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 112);
    swift_beginAccess();
    sub_2362AFCD8((uint64_t)v7, v14);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_2362A1250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F58);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB5D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v2 + 24);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BEE5610], v8);
  v14 = v13;
  LOBYTE(v13) = sub_2362CB5F0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
LABEL_5:
    v16 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
    swift_beginAccess();
    sub_2362AFD24(v16, (uint64_t)v7);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17);
    if ((_DWORD)result != 1)
      return sub_23625F248((uint64_t)v7, a1, &qword_2563D5F50);
    goto LABEL_8;
  }
  if (*(_QWORD *)(v2 + 16))
  {
    swift_retain();
    sub_2362CB5B4();
    swift_release();
    *(_BYTE *)(v2 + 32) = 1;
    goto LABEL_5;
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_2362A13EC()
{
  double v0;
  os_unfair_lock_s *v1;
  double v3;

  v0 = 3.0;
  if (os_variant_has_internal_content())
  {
    if (qword_2563D5A18 != -1)
      swift_once();
    v1 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 16) + 104);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v1 + 4);
    sub_2362AFF04(&v3);
    v0 = v3;
    os_unfair_lock_unlock(v1 + 4);
    swift_release();
    swift_release();
  }
  return v0;
}

uint64_t sub_2362A14B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 336));
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4188);
  a1[4] = sub_23624E344(&qword_2563D4180, &qword_2563D4188, MEMORY[0x24BDB9CB0]);
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_2362A151C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v2 + *(_QWORD *)(v3 + 256), v4);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 160) + 48))(v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_2362A175C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_2362A1788(v2, a2);
  v5 = sub_2362A151C(v3, v4);
  return sub_2362A0B50(v5, v3);
}

uint64_t sub_2362A1788(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v5 + *(_QWORD *)(v2 + 256), v3);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 160) + 40))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8;
}

uint64_t sub_2362A19C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_2362A175C(a1, a2);
  v4 = sub_2362A1AE0((uint64_t)sub_23625B2E8, v3);
  return sub_2362A0B50(v4, v2);
}

id sub_2362A19F4(void *a1, uint64_t a2)
{
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = objc_msgSend(a1, sel_raw_accessor_type);
  if ((_DWORD)result == 1)
  {
    result = objc_msgSend(a1, sel_accessed_bundle_id);
    if (result)
    {
      v5 = result;
      v6 = sub_2362CB698();
      v8 = v7;

      v9 = sub_23624EC88(v6, v8, a2);
      result = (id)swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        result = objc_msgSend(a1, sel_accessor_bundle_id);
        if (result)
        {
          v10 = result;
          v11 = sub_2362CB698();
          v13 = v12;

          sub_236252958(&v14, v11, v13);
          return (id)swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2362A1AE0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BEE4B08];
  v11 = sub_2362A175C(v7, v10);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v9, (uint64_t)v2 + *(_QWORD *)(*v2 + 256), v5);
  v14 = v11;
  v15 = &v16;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v4 + 160) + 72))(a1, v13, v5);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease();
  return v16;
}

id sub_2362A1BC0(void *a1, uint64_t a2)
{
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = objc_msgSend(a1, sel_raw_accessor_type);
  if ((_DWORD)result == 2)
  {
    result = objc_msgSend(a1, sel_accessed_bundle_id);
    if (result)
    {
      v5 = result;
      v6 = sub_2362CB698();
      v8 = v7;

      v9 = sub_23624EC88(v6, v8, a2);
      result = (id)swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        result = objc_msgSend(a1, sel_accessor_bundle_id);
        if (result)
        {
          v10 = result;
          v11 = sub_2362CB698();
          v13 = v12;

          sub_236252958(&v14, v11, v13);
          return (id)swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_2362A1CAC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(uint64_t *);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t *v22;
  void (*v23)(uint64_t *, uint64_t);
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  BOOL v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  os_unfair_lock_s *v55;
  uint64_t inited;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  NSObject *v77;
  unint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  _QWORD *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[12];
  int v86;
  uint64_t v87;
  void (*v88)(uint64_t *, _BYTE *, _QWORD);
  uint64_t v89;
  void (*v90)(uint64_t *, uint64_t);
  uint64_t *v91;
  uint64_t *v92;
  _BYTE *v93;
  _QWORD *v94;
  int v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99[8];
  uint64_t v100;

  v4 = v3;
  v95 = a3;
  v98 = a2;
  v6 = (_QWORD *)*v3;
  v7 = *(_QWORD *)(*v3 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1, a2);
  v91 = (uint64_t *)&v85[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v92 = (uint64_t *)&v85[-v13];
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (uint64_t *)&v85[-v15];
  sub_2362A271C();
  v17 = *(void (**)(_BYTE *))(v8 + 16);
  v93 = (char *)v3 + *(_QWORD *)(*v3 + 256);
  v17(v16);
  v94 = v6;
  v18 = v6[20];
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
  v96 = a1;
  v20 = v97;
  v21 = v19(a1, v98, v7, v18);
  v22 = v16;
  v23 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v23(v22, v7);
  if (!v20)
  {
    v88 = (void (*)(uint64_t *, _BYTE *, _QWORD))v17;
    v89 = v18;
    v90 = v23;
    *(_QWORD *)&v97 = v7;
    v87 = 0;
    v24 = v95;
    v25 = v95 & 1;
    v26 = v96;
    v27 = v98;
    if ((*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(v94[29] + 40))(v95 & 1, v96, v98, v21 & 0x10101, v94[19]))
    {
      swift_willThrow();
      return;
    }
    if ((v21 & 0x100) != 0)
    {
      v44 = sub_2362CB698();
      sub_236294D50(v44, v45, 3, 0xD000000000000026, 0x80000002362D7990, 167, 0xD000000000000021, 0x80000002362D79C0);
      swift_bridgeObjectRelease();
      swift_willThrow();
      return;
    }
    v86 = v25;
    v28 = v92;
    v29 = v97;
    v88(v92, v93, v97);
    v30 = v4;
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 16);
    v32 = v24 & 1;
    v33 = v87;
    v34 = v31(v26, v27, v32, v29);
    v90(v28, v29);
    if (!v33)
    {
      v92 = v30;
      if ((v34 & 1) != 0)
      {
        v35 = v32;
        v36 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v31;
        v37 = v96;
        v38 = v98;
        v39 = (void *)sub_2362CB674();
        v40 = (id)_AXSClarityBundleIdentifierForStandardBundleIdentifier();

        if (v40)
        {
          v41 = sub_2362CB698();
          v43 = v42;

          if ((v41 != v37 || v43 != v38) && (sub_2362CBBE4() & 1) == 0)
          {
            v72 = v91;
            v73 = v97;
            v88(v91, v93, v97);
            v36(v41, v43, v35, v73, v89);
            v46 = v95;
            v90(v72, v73);
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
          swift_bridgeObjectRelease();
        }
        while (1)
        {
          v46 = v95;
LABEL_16:
          v47 = qword_2563D5A18 == -1;
          if ((v46 & 1) != 0)
          {
            if (qword_2563D5A18 != -1)
              swift_once();
            v48 = *(_QWORD *)(qword_2563DB628 + 48);
            v49 = *(os_unfair_lock_s **)(v48 + 104);
            swift_retain();
            swift_retain();
            os_unfair_lock_lock(v49 + 4);
            sub_2362AD788(v99);
            v50 = v99[0];
            os_unfair_lock_unlock(v49 + 4);
            swift_release();
            v51 = __OFADD__(v50, 1);
            v52 = v50 + 1;
            v47 = v52 == 0;
            if (!v51)
            {
LABEL_25:
              v55 = *(os_unfair_lock_s **)(v48 + 104);
              swift_retain();
              os_unfair_lock_lock(v55 + 4);
              sub_2362AA40C(v48, v52, MEMORY[0x24BEE1768]);
              os_unfair_lock_unlock(v55 + 4);
              swift_release();
              swift_release();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
              inited = swift_initStackObject();
              v97 = xmmword_2362CE0F0;
              *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
              v57 = v96;
              *(_QWORD *)(inited + 32) = v96;
              v58 = v98;
              *(_QWORD *)(inited + 40) = v98;
              swift_bridgeObjectRetain();
              v59 = sub_2362B7940(inited);
              swift_setDeallocating();
              swift_arrayDestroy();
              if ((v95 & 1) != 0)
              {
                v60 = swift_initStackObject();
                *(_OWORD *)(v60 + 16) = v97;
                *(_QWORD *)(v60 + 32) = v57;
                *(_QWORD *)(v60 + 40) = v58;
                swift_bridgeObjectRetain();
                v61 = sub_2362B7940(v60);
                swift_setDeallocating();
                swift_arrayDestroy();
                v62 = 0;
              }
              else
              {
                v63 = swift_initStackObject();
                *(_OWORD *)(v63 + 16) = v97;
                *(_QWORD *)(v63 + 32) = v57;
                *(_QWORD *)(v63 + 40) = v58;
                swift_bridgeObjectRetain();
                v62 = sub_2362B7940(v63);
                swift_setDeallocating();
                swift_arrayDestroy();
                v61 = 0;
              }
              LODWORD(v99[0]) = 2;
              v99[1] = v59;
              v99[2] = 0;
              v99[3] = 0;
              v99[4] = v61;
              v99[6] = 0;
              v99[7] = 0;
              v99[5] = v62;
              sub_2362CB50C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v64 = v92;
              if ((v95 & 1) != 0)
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, _QWORD))(*(_QWORD *)(*v92 + 184) + 8))(v96, v98, 1, nullsub_1, 0, *(_QWORD *)(*v92 + 104));
              v65 = v94;
              (*(void (**)(_QWORD))(v94[27] + 8))(v94[17]);
              (*(void (**)(_QWORD))(v65[21] + 32))(v65[11]);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4260);
              v66 = swift_initStackObject();
              *(_OWORD *)(v66 + 16) = xmmword_2362CE0E0;
              *(_QWORD *)(v66 + 32) = sub_2362AFF40;
              *(_QWORD *)(v66 + 40) = v64;
              v67 = swift_allocObject();
              v68 = v96;
              *(_QWORD *)(v67 + 16) = v64;
              *(_QWORD *)(v67 + 24) = v68;
              *(_QWORD *)(v67 + 32) = v98;
              *(_BYTE *)(v67 + 40) = v86;
              *(_QWORD *)(v66 + 48) = sub_2362B0004;
              *(_QWORD *)(v66 + 56) = v67;
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_2362A33B4(v64, v69);
              swift_release();
              v70 = *(void (**)(uint64_t))(v66 + 48);
              v71 = swift_retain();
              v70(v71);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
            __break(1u);
          }
          if (!v47)
            swift_once();
          v48 = *(_QWORD *)(qword_2563DB628 + 64);
          v53 = *(os_unfair_lock_s **)(v48 + 104);
          swift_retain();
          swift_retain();
          os_unfair_lock_lock(v53 + 4);
          sub_2362AD788(v99);
          v54 = v99[0];
          os_unfair_lock_unlock(v53 + 4);
          swift_release();
          v51 = __OFADD__(v54, 1);
          v52 = v54 + 1;
          if (!v51)
            goto LABEL_25;
          __break(1u);
          swift_once();
          v74 = sub_2362CB494();
          __swift_project_value_buffer(v74, (uint64_t)qword_2542A58F8);
          swift_bridgeObjectRetain();
          v75 = 0;
          swift_bridgeObjectRetain();
          v76 = 0;
          v77 = sub_2362CB47C();
          v78 = (unint64_t)&v53[4];
          v79 = sub_2362CB848();
          if (os_log_type_enabled(v77, v79))
          {
            v80 = swift_slowAlloc();
            v81 = (_QWORD *)swift_slowAlloc();
            *(_QWORD *)&v97 = swift_slowAlloc();
            v99[0] = v97;
            *(_DWORD *)v80 = 136315394;
            swift_bridgeObjectRetain();
            v100 = sub_2362AB670(v96, v78, v99);
            sub_2362CB9C8();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v80 + 12) = 2112;
            v82 = 0;
            v83 = _swift_stdlib_bridgeErrorToNSError();
            v100 = v83;
            sub_2362CB9C8();
            *v81 = v83;

            _os_log_impl(&dword_23624C000, v77, v79, "Could not set clarity version of %s error: %@", (uint8_t *)v80, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
            swift_arrayDestroy();
            MEMORY[0x23B7EF258](v81, -1, -1);
            v84 = v97;
            swift_arrayDestroy();
            MEMORY[0x23B7EF258](v84, -1, -1);
            MEMORY[0x23B7EF258](v80, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
}

uint64_t sub_2362A271C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint8_t *v26;
  uint8_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F50);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Backup(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2362CB5D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (uint64_t *)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v1[3];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BEE5610], v12);
  v18 = v17;
  LOBYTE(v17) = sub_2362CB5F0();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  if (!v1[2])
    goto LABEL_13;
  v19 = qword_2563D4178;
  swift_retain();
  if (v19 != -1)
    goto LABEL_15;
LABEL_4:
  v20 = sub_2362CB494();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563DB5D8);
  v21 = sub_2362CB47C();
  v22 = sub_2362CB848();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v37 = v8;
    v24 = v2;
    v25 = v11;
    v26 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23624C000, v21, v22, "Waiting for remote backup info.", v23, 2u);
    v27 = v26;
    v11 = v25;
    v2 = v24;
    v8 = v37;
    MEMORY[0x23B7EF258](v27, -1, -1);
  }

  sub_2362A1250((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23628CE84((uint64_t)v6);
    v28 = sub_2362CB47C();
    v29 = sub_2362CB848();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_23624C000, v28, v29, "Waited for remote backup info but there was none.", v30, 2u);
      MEMORY[0x23B7EF258](v30, -1, -1);
    }

    swift_release();
  }
  else
  {
    sub_2362AFDA0((uint64_t)v6, (uint64_t)v11, type metadata accessor for Backup);
    sub_2362A8730((uint64_t)v11, v31);
    (*(void (**)(_QWORD))(*(_QWORD *)(v2 + 216) + 24))(*(_QWORD *)(v2 + 136));
    v32 = sub_2362CB47C();
    v33 = sub_2362CB848();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23624C000, v32, (os_log_type_t)v33, "removed current backup info.", v34, 2u);
      MEMORY[0x23B7EF258](v34, -1, -1);
    }

    swift_release();
    sub_23628CDE8((uint64_t)v11);
  }
LABEL_13:
  v1[2] = 0;
  return swift_release();
}

uint64_t sub_2362A2C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v5 + 184)
                                                                                        + 8))(a1, a2, a3, a4, a5, *(_QWORD *)(*(_QWORD *)v5 + 104));
}

void sub_2362A2C50(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  os_unfair_lock_s *v42;
  char *v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  void (*v62)(char *, char *, _QWORD);
  char *v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69[4];
  __int128 v70;
  __int128 v71;
  int v72;

  v4 = v3;
  v72 = a3;
  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1, a2);
  v63 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v62 - v13;
  sub_2362A271C();
  v15 = *(void (**)(_QWORD))(v9 + 16);
  v64 = (char *)v3 + *(_QWORD *)(*v3 + 256);
  v62 = (void (*)(char *, char *, _QWORD))v15;
  v15(v14);
  v65 = (_QWORD *)v7;
  v66 = a2;
  v16 = *(_QWORD *)(v7 + 160);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  v67 = a1;
  v18 = v68;
  v19 = v8;
  v20 = v17(a1, a2, v8, v16);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v18)
    return;
  v22 = v64;
  *(_QWORD *)&v68 = v19;
  v23 = v20 & 0x10101;
  v24 = v66;
  v25 = v67;
  if ((*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))(v65[29] + 40))(v72 & 1 | 0x40u, v67, v66, v23, v65[19]))
  {
    swift_willThrow();
    return;
  }
  v26 = v63;
  v27 = v22;
  v28 = v68;
  v62(v63, v27, v68);
  if ((v72 & 1) != 0)
    v29 = 256;
  else
    v29 = 0;
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 16))(v25, v24, v29 | v72 & 1u, v28, v16);
  v21(v26, v28);
  v64 = 0;
  if ((v30 & 1) != 0)
  {
    if ((v72 & 1) == 0)
    {
      if (qword_2563D5A18 != -1)
        swift_once();
      v31 = *(_QWORD *)(qword_2563DB628 + 56);
      v39 = *(os_unfair_lock_s **)(v31 + 104);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v39 + 4);
      sub_2362AD788(v69);
      v40 = v69[0];
      os_unfair_lock_unlock(v39 + 4);
      v41 = (os_unfair_lock_s *)swift_release();
      v34 = __OFADD__(v40, 1);
      v35 = v40 + 1;
      if (v34)
      {
        __break(1u);
        goto LABEL_33;
      }
LABEL_18:
      v42 = *(os_unfair_lock_s **)(v31 + 104);
      swift_retain();
      os_unfair_lock_lock(v42 + 4);
      v43 = v64;
      sub_2362AA40C(v31, v35, MEMORY[0x24BEE1768]);
      v64 = v43;
      v41 = v42 + 4;
      if (!v43)
      {
        os_unfair_lock_unlock(v41);
        swift_release();
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
        inited = swift_initStackObject();
        v68 = xmmword_2362CE0F0;
        *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
        v45 = v66;
        v46 = v67;
        *(_QWORD *)(inited + 32) = v67;
        *(_QWORD *)(inited + 40) = v45;
        swift_bridgeObjectRetain();
        v47 = sub_2362B7940(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        if ((v72 & 1) != 0)
        {
          v48 = swift_initStackObject();
          *(_OWORD *)(v48 + 16) = v68;
          *(_QWORD *)(v48 + 32) = v46;
          *(_QWORD *)(v48 + 40) = v45;
          swift_bridgeObjectRetain();
          v49 = sub_2362B7940(v48);
          swift_setDeallocating();
          swift_arrayDestroy();
          v50 = 0;
        }
        else
        {
          v51 = swift_initStackObject();
          *(_OWORD *)(v51 + 16) = v68;
          *(_QWORD *)(v51 + 32) = v46;
          *(_QWORD *)(v51 + 40) = v45;
          swift_bridgeObjectRetain();
          v50 = sub_2362B7940(v51);
          swift_setDeallocating();
          swift_arrayDestroy();
          v49 = 0;
        }
        LODWORD(v69[0]) = 3;
        v69[1] = v47;
        v69[2] = v49;
        v69[3] = v50;
        v70 = 0u;
        v71 = 0u;
        sub_2362CB50C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v72;
        v36 = v66;
        if ((v72 & 1) != 0)
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, _QWORD))(*(_QWORD *)(*v4 + 184) + 8))(v67, v66, 1, nullsub_1, 0, *(_QWORD *)(*v4 + 104));
        v37 = v65;
        goto LABEL_25;
      }
LABEL_33:
      os_unfair_lock_unlock(v41);
      __break(1u);
      return;
    }
    if (qword_2563D5A18 != -1)
      swift_once();
    v31 = *(_QWORD *)(qword_2563DB628 + 40);
    v32 = *(os_unfair_lock_s **)(v31 + 104);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v32 + 4);
    sub_2362AD788(v69);
    v33 = v69[0];
    os_unfair_lock_unlock(v32 + 4);
    swift_release();
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (!v34)
      goto LABEL_18;
    __break(1u);
  }
  v37 = v65;
  v36 = v66;
  v38 = v72;
LABEL_25:
  (*(void (**)(_QWORD))(v37[27] + 8))(v37[17]);
  (*(void (**)(_QWORD))(v37[21] + 32))(v37[11]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4260);
  v52 = swift_initStackObject();
  *(_QWORD *)(v52 + 32) = sub_2362AFF28;
  *(_OWORD *)(v52 + 16) = xmmword_2362CFBC0;
  *(_QWORD *)(v52 + 40) = v4;
  *(_QWORD *)(v52 + 48) = sub_2362AFF40;
  *(_QWORD *)(v52 + 56) = v4;
  v53 = swift_allocObject();
  v54 = v67;
  *(_QWORD *)(v53 + 16) = v4;
  *(_QWORD *)(v53 + 24) = v54;
  *(_QWORD *)(v53 + 32) = v36;
  *(_BYTE *)(v53 + 40) = v38 & 1;
  *(_QWORD *)(v52 + 64) = sub_2362AFF68;
  *(_QWORD *)(v52 + 72) = v53;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = v64;
  sub_2362A3348(v4, v56);
  if (v55)
  {

    swift_release();
    v57 = v55;
  }
  else
  {
    swift_release();
    v57 = 0;
  }
  v58 = *(void (**)(uint64_t))(v52 + 48);
  v59 = swift_retain();
  v58(v59);
  swift_release();
  v60 = *(void (**)(uint64_t))(v52 + 64);
  v61 = swift_retain();
  v60(v61);
  swift_release();
  swift_bridgeObjectRelease();
  if (v57)
  {
    swift_willThrow();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5420);
    swift_arrayDestroy();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2362A3348(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  sub_2362A151C((uint64_t)a1, a2);
  (*(void (**)(void))(*(_QWORD *)(v2 + 208) + 16))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2362A33B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  sub_2362A175C((uint64_t)a1, a2);
  (*(void (**)(void))(*(_QWORD *)(v2 + 208) + 8))();
  return swift_bridgeObjectRelease();
}

BOOL sub_2362A3420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
  v4 = v3;
  if (v3 >= sub_2362A13EC())
    return 0;
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
  return v4 < v5;
}

uint64_t sub_2362A364C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v6 + 168)
                                                                                                 + 40))(a1, a2, a3, a4, a5, a6, *(_QWORD *)(*(_QWORD *)v6 + 88));
}

uint64_t sub_2362A3680()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 168) + 8))(*(_QWORD *)(*(_QWORD *)v0 + 88));
}

uint64_t sub_2362A36B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  uint64_t v18;

  v14 = *v8;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v8;
  v15[3] = a7;
  v15[4] = a8;
  v16 = *(_QWORD *)(v14 + 192);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void *, char), _QWORD *, uint64_t, uint64_t))(v16 + 8);
  v18 = *(_QWORD *)(v14 + 112);
  swift_retain();
  swift_retain();
  v17(a1, a2, a3, a4, a5, a6, sub_2362AFE88, v15, v18, v16);
  return swift_release();
}

uint64_t sub_2362A3788(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v10 = sub_2362CB5D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (_QWORD *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(a3 + 24);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BEE5608], v10);
  v16 = v15;
  v17 = sub_2362CB5F0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a4;
  *(_QWORD *)(v19 + 24) = a5;
  *(_QWORD *)(v19 + 32) = a1;
  *(_BYTE *)(v19 + 40) = a2 & 1;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_2362AFEC8;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_236279C0C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2362550D4;
  aBlock[3] = &block_descriptor_67;
  v21 = _Block_copy(aBlock);
  swift_retain();
  sub_2362741A4(a1, a2 & 1);
  swift_retain();
  swift_release();
  dispatch_sync(v16, v21);
  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

BOOL sub_2362A396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v6 + 192)
                                                                                                  + 16))(a1, a2, a3, a4, a5, a6, *(_QWORD *)(*(_QWORD *)v6 + 112)) & 1) == 0;
}

uint64_t sub_2362A39A8(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, unint64_t, _QWORD, void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41[2];
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t i;

  v4 = v2;
  v6 = sub_2362A1AE0((uint64_t)sub_23625B2E8, a2);
  v8 = sub_2362A1AE0((uint64_t)sub_2362AFE34, v7);
  a1();
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v11 = sub_2362A1AE0((uint64_t)sub_23625B2E8, v9);
  v13 = sub_2362A1AE0((uint64_t)sub_2362AFE34, v12);
  v41[0] = v6;
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  sub_2362AD260(v14);
  if ((sub_2362AA908(v6, v11) & 1) != 0)
  {
    v15 = sub_2362AA908(v8, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  LODWORD(v41[0]) = 4;
  v41[1] = v6;
  v42 = 0u;
  v43 = 0u;
  v44 = sub_2362A1AE0((uint64_t)sub_2362AFE34, v16);
  v45 = 0;
  sub_2362CB50C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_8:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + 16) <= *(_QWORD *)(v6 + 16) >> 3)
  {
    v41[0] = v6;
    sub_2362AC28C(v11);
  }
  else
  {
    v6 = sub_2362AC420(v11, v6);
  }
  result = swift_bridgeObjectRelease();
  v17 = 0;
  v39 = v6 + 56;
  v18 = 1 << *(_BYTE *)(v6 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v6 + 56);
  v40 = (unint64_t)(v18 + 63) >> 6;
  for (i = v6; ; v6 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v17 << 6);
      goto LABEL_30;
    }
    v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v27 >= v40)
      return swift_release();
    v28 = *(_QWORD *)(v39 + 8 * v27);
    ++v17;
    if (!v28)
    {
      v17 = v27 + 1;
      if (v27 + 1 >= v40)
        return swift_release();
      v28 = *(_QWORD *)(v39 + 8 * v17);
      if (!v28)
        break;
    }
LABEL_29:
    v20 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_30:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v26);
    v32 = *v30;
    v31 = v30[1];
    v33 = qword_2542A53D0;
    swift_bridgeObjectRetain();
    if (v33 != -1)
      swift_once();
    v34 = sub_2362CB494();
    __swift_project_value_buffer(v34, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v35 = sub_2362CB47C();
    v36 = sub_2362CB848();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v41[0] = v38;
      *(_DWORD *)v37 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v37 + 4) = sub_2362AB670(v32, v31, v41);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v35, v36, "trying to unshield %s as it is no longer effectively locked", (uint8_t *)v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v38, -1, -1);
      MEMORY[0x23B7EF258](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v32;
    *(_QWORD *)(v21 + 24) = v31;
    v22 = *(_QWORD *)(*(_QWORD *)v4 + 184);
    v23 = *(void (**)(uint64_t, unint64_t, _QWORD, void (*)(void *), uint64_t, uint64_t, uint64_t))(v22 + 8);
    v24 = *(_QWORD *)(*(_QWORD *)v4 + 104);
    swift_bridgeObjectRetain();
    v23(v32, v31, 0, sub_2362AFDFC, v21, v24, v22);
    swift_bridgeObjectRelease();
    result = swift_release();
  }
  v29 = v27 + 2;
  if (v29 >= v40)
    return swift_release();
  v28 = *(_QWORD *)(v39 + 8 * v29);
  if (v28)
  {
    v17 = v29;
    goto LABEL_29;
  }
  while (1)
  {
    v17 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v17 >= v40)
      return swift_release();
    v28 = *(_QWORD *)(v39 + 8 * v17);
    ++v29;
    if (v28)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2362A3E44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v23)(char *, uint64_t);
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  audit_token_t atoken;
  uint64_t v40;

  v37 = a7;
  v38 = a8;
  v35 = a5;
  v36 = a6;
  v33 = a3;
  v34 = a4;
  v31 = a13;
  v32 = a2;
  v14 = *(_QWORD **)a1;
  v15 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](a1, a2);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v17 + v14[32], v15);
  v20 = *(void (**)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v14[20] + 64);
  v30 = v14[20];
  v29 = v31;
  v31 = a12;
  v21 = v40;
  v20(v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, v29, v15, v30);
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v37 = HIDWORD(a11);
  v38 = HIDWORD(v31);
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34 = HIDWORD(a9);
  v35 = HIDWORD(a10);
  v23(v19, v15);
  v40 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 272);
  *(_QWORD *)atoken.val = a9;
  v24 = v35;
  atoken.val[2] = a10;
  atoken.val[3] = v35;
  v25 = v37;
  v26 = v38;
  atoken.val[4] = a11;
  atoken.val[5] = v37;
  v27 = v31;
  atoken.val[6] = v31;
  atoken.val[7] = v38;
  LODWORD(v36) = audit_token_to_pid(&atoken);
  atoken.val[0] = a9;
  atoken.val[1] = v34;
  atoken.val[2] = a10;
  atoken.val[3] = v24;
  atoken.val[4] = a11;
  atoken.val[5] = v25;
  atoken.val[6] = v27;
  atoken.val[7] = v26;
  v28 = audit_token_to_pidversion(&atoken);
  return (*(uint64_t (**)(unint64_t, _QWORD))(v14[22] + 24))(v36 | (unint64_t)(v28 << 32), v14[12]);
}

uint64_t sub_2362A4004(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v2 = v1;
  v3 = a1;
  v4 = HIDWORD(a1);
  v5 = *(NSObject **)(v2 + 24);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = v3;
  *(_DWORD *)(v6 + 20) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2362B004C;
  *(_QWORD *)(v7 + 24) = v6;
  v10[4] = sub_236279C0C;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2362550D4;
  v10[3] = &block_descriptor_99_0;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2362A4138(int a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD v15[3];
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_2563D4178 != -1)
    swift_once();
  v4 = sub_2362CB494();
  __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
  v5 = sub_2362CB47C();
  v6 = sub_2362CB848();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v19 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_2362697EC();
    v18 = sub_2362AB670(v9, v10, &v19);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23624C000, v5, v6, "removing accesses matching %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v8, -1, -1);
    MEMORY[0x23B7EF258](v7, -1, -1);
  }

  MEMORY[0x24BDAC7A8](v11, v12);
  v15[2] = a2;
  v16 = a1;
  v17 = v13;
  return sub_2362A39A8(sub_2362B0064, (uint64_t)v15);
}

void sub_2362A42F0(uint64_t *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v7 + *(_QWORD *)(v4 + 256), v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 160) + 96))(a2, v5);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (qword_2563D4178 != -1)
      swift_once();
    v10 = sub_2362CB494();
    __swift_project_value_buffer(v10, (uint64_t)qword_2563DB5D8);
    v11 = v2;
    v12 = v2;
    v13 = sub_2362CB47C();
    v14 = sub_2362CB830();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v24 = v17;
      *(_DWORD *)v15 = 136315394;
      v18 = sub_2362697EC();
      v23 = sub_2362AB670(v18, v19, &v24);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2112;
      v20 = v2;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v21;
      sub_2362CB9C8();
      *v16 = v21;

      _os_log_impl(&dword_23624C000, v13, v14, "Could not remove access record matching %s: %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v17, -1, -1);
      MEMORY[0x23B7EF258](v15, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t sub_2362A45C0(uint64_t a1)
{
  _QWORD v2[4];

  v2[3] = a1;
  return sub_2362A39A8((void (*)(void))sub_2362AFDE4, (uint64_t)v2);
}

uint64_t sub_2362A45EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v6 + *(_QWORD *)(v3 + 256), v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 160) + 88))(a2, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2362A46A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v4 = v2;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)v4 + *(_QWORD *)(v5 + 256), v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 + 160) + 80))(v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
  {
    v11 = 4;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
    return sub_2362CB50C();
  }
  return result;
}

uint64_t sub_2362A4784(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t *v10;
  uint64_t v11;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BEE4AF8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v2 + *(_QWORD *)(v3 + 256), v4);
  v10 = &v11;
  (*(void (**)(uint64_t (*)(void *), _BYTE *, uint64_t))(*(_QWORD *)(v3 + 160) + 72))(sub_2362AFD98, v9, v4);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_2362A4850(void *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for DataAccessRecord();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625F070(a1, (uint64_t)v8);
  v9 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_2362AB464(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, (uint64_t *)&unk_2563D7748, (uint64_t (*)(_QWORD))type metadata accessor for DataAccessRecord);
    *a2 = v9;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    v9 = sub_2362AB464(v11 > 1, v12 + 1, 1, v9, (uint64_t *)&unk_2563D7748, (uint64_t (*)(_QWORD))type metadata accessor for DataAccessRecord);
    *a2 = v9;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  return sub_2362AFDA0((uint64_t)v8, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for DataAccessRecord);
}

uint64_t sub_2362A497C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v2 + *(_QWORD *)(v3 + 256), v4);
  (*(void (**)(unint64_t (*)(uint64_t), uint64_t *, uint64_t))(*(_QWORD *)(v3 + 160) + 72))(sub_2362AFD90, v2, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2362A4A24(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t result;
  char v4;

  v2 = *a2;
  result = sub_2362B9858();
  if ((v4 & 1) == 0)
    return (*(uint64_t (**)(unint64_t, _QWORD))(*(_QWORD *)(v2 + 176) + 24))(result, *(_QWORD *)(v2 + 96));
  return result;
}

void sub_2362A4A74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  void *v27;
  uint32_t *p_ivar_base_size;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD v48[6];
  __int128 v49;
  uint64_t v50;
  _BYTE v51[16];
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t aBlock;
  uint64_t v56;
  void (*v57)(uint64_t, void *);
  void *v58;
  void (*v59)(void *);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v52 = *(_QWORD *)(a1 + 32);
  v53 = a2;
  v54 = a3;
  swift_retain();
  sub_2362BA440((uint64_t)sub_2362B01B8, (uint64_t)v51);
  if (!v3)
  {
    v8 = v7;
    v9 = v7 & 0xFFFFFF;
    v10 = swift_release();
    v12 = v9 != 2 && (v9 & 0x100 | v8 & 1) != 0;
    if (v9 == 2)
      v13 = 0;
    else
      v13 = (v9 >> 8) & 1;
    v14 = *(_QWORD *)(a1 + 32);
    MEMORY[0x24BDAC7A8](v10, v11);
    v48[2] = v14;
    v48[3] = a2;
    v48[4] = a3;
    swift_retain();
    v15 = sub_2362BA300((uint64_t)sub_23625B274, (uint64_t)v48);
    v26 = v15;
    v50 = 0;
    swift_release();
    if ((v26 & 1) == 0)
      return;
    if (v13)
    {
      sub_236256C74();
      v27 = (void *)objc_opt_self();
      p_ivar_base_size = &_PreferenceUtilities.ivar_base_size;
      v29 = objc_msgSend(v27, sel_defaultWorkspace);
      if (v29)
      {
        v30 = v29;
        v31 = swift_bridgeObjectRetain();
        sub_236259A3C(v31);
        swift_bridgeObjectRelease();
        v32 = sub_2362CB758();
        *(_QWORD *)&v49 = v27;
        v33 = (void *)v32;
        swift_release();
        v59 = sub_23629F63C;
        v60 = 0;
        aBlock = MEMORY[0x24BDAC760];
        v56 = 1107296256;
        v57 = sub_2362BE888;
        v58 = &block_descriptor_118;
        v34 = _Block_copy(&aBlock);
        objc_msgSend(v30, sel_setHiddenApplications_completion_, v33, v34);
        v35 = v34;
        p_ivar_base_size = (_DWORD *)(&_PreferenceUtilities + 8);
        _Block_release(v35);
        swift_bridgeObjectRelease();

        v27 = (void *)v49;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v36 = sub_236256E54();
      v37 = sub_236256C74();
      sub_2362A0B50(v37, v36);
      v38 = objc_msgSend(v27, *((SEL *)p_ivar_base_size + 243));
      if (!v38)
      {
        swift_bridgeObjectRelease();
        if (!v12)
          return;
        goto LABEL_23;
      }
      v39 = v38;
      v40 = swift_bridgeObjectRetain();
      sub_236259A3C(v40);
      swift_bridgeObjectRelease();
      v41 = (void *)sub_2362CB758();
      swift_release();
      v59 = sub_23629F630;
      v60 = 0;
      aBlock = MEMORY[0x24BDAC760];
      v56 = 1107296256;
      v57 = sub_2362BE888;
      v58 = &block_descriptor_115;
      v42 = _Block_copy(&aBlock);
      objc_msgSend(v39, sel_setLockedApplications_completion_, v41, v42);
      _Block_release(v42);
      swift_bridgeObjectRelease();

    }
    if (!v12)
      return;
LABEL_23:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
    inited = swift_initStackObject();
    v49 = xmmword_2362CE0F0;
    *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
    *(_QWORD *)(inited + 32) = a2;
    *(_QWORD *)(inited + 40) = a3;
    swift_bridgeObjectRetain();
    v44 = sub_2362B7940(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    if (v13)
    {
      v45 = swift_initStackObject();
      *(_OWORD *)(v45 + 16) = v49;
      *(_QWORD *)(v45 + 32) = a2;
      *(_QWORD *)(v45 + 40) = a3;
      swift_bridgeObjectRetain();
      v46 = sub_2362B7940(v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      v47 = 3;
    }
    else
    {
      v46 = MEMORY[0x24BEE4B08];
      v47 = 2;
    }
    LODWORD(aBlock) = v47;
    v56 = v44;
    v57 = 0;
    v58 = (void *)v46;
    v59 = 0;
    v61 = 0;
    v62 = 0;
    v60 = v44;
    swift_bridgeObjectRetain();
    sub_2362CB50C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  swift_release();
  if (qword_2563D4178 != -1)
    swift_once();
  v16 = sub_2362CB494();
  __swift_project_value_buffer(v16, (uint64_t)qword_2563DB5D8);
  swift_bridgeObjectRetain();
  v17 = v3;
  swift_bridgeObjectRetain();
  v18 = v3;
  v19 = sub_2362CB47C();
  v20 = sub_2362CB830();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock = v23;
    *(_DWORD *)v21 = 136315394;
    v50 = 0;
    swift_bridgeObjectRetain();
    v63 = sub_2362AB670(a2, a3, &aBlock);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2112;
    v24 = v3;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    v63 = v25;
    sub_2362CB9C8();
    *v22 = v25;

    _os_log_impl(&dword_23624C000, v19, v20, "Couldn't handle app %s no longer lockable: %@", (uint8_t *)v21, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v23, -1, -1);
    MEMORY[0x23B7EF258](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_2362A5114(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  int v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint32_t *p_ivar_base_size;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t inited;
  uint64_t v41;
  _QWORD v42[7];
  void *v43;
  _BYTE v44[16];
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *);
  void *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v45 = *(_QWORD *)(a1 + 32);
  v46 = a2;
  v47 = a3;
  swift_retain();
  sub_2362BA440((uint64_t)sub_2362B2234, (uint64_t)v44);
  if (!v3)
  {
    v18 = v7;
    v19 = a2;
    v20 = v7;
    v21 = swift_release();
    if (v20 == 2 || (v20 & 0x100) == 0)
      return;
    v23 = *(_QWORD *)(a1 + 32);
    if ((v18 & 1) != 0)
    {
      swift_retain();
      sub_2362BA650(v19, a3, v18 & 0x10000 | 1);
      swift_release();
    }
    else
    {
      MEMORY[0x24BDAC7A8](v21, v22);
      v42[2] = v23;
      v42[3] = v19;
      v42[4] = a3;
      swift_retain();
      sub_2362BA300((uint64_t)sub_2362B2248, (uint64_t)v42);
      swift_release();
    }
    sub_236256C74();
    v24 = (void *)objc_opt_self();
    p_ivar_base_size = &_PreferenceUtilities.ivar_base_size;
    v26 = objc_msgSend(v24, sel_defaultWorkspace);
    if (v26)
    {
      v27 = v26;
      v28 = swift_bridgeObjectRetain();
      sub_236259A3C(v28);
      swift_bridgeObjectRelease();
      v29 = sub_2362CB758();
      v43 = v24;
      v30 = (void *)v29;
      swift_release();
      *(_QWORD *)&v52 = sub_23629F63C;
      *((_QWORD *)&v52 + 1) = 0;
      aBlock = MEMORY[0x24BDAC760];
      v49 = 1107296256;
      v50 = sub_2362BE888;
      v51 = &block_descriptor_140;
      v31 = _Block_copy(&aBlock);
      objc_msgSend(v27, sel_setHiddenApplications_completion_, v30, v31);
      v32 = v31;
      p_ivar_base_size = (_DWORD *)(&_PreferenceUtilities + 8);
      _Block_release(v32);
      swift_bridgeObjectRelease();

      v24 = v43;
      if ((v18 & 1) == 0)
        goto LABEL_20;
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
LABEL_20:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
        *(_QWORD *)(inited + 32) = v19;
        *(_QWORD *)(inited + 40) = a3;
        swift_bridgeObjectRetain();
        v41 = sub_2362B7940(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        LODWORD(aBlock) = 3;
        v49 = 0;
        v50 = 0;
        v51 = (void *)v41;
        v52 = 0u;
        v53 = 0u;
        sub_2362CB50C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    v33 = sub_236256E54();
    v34 = sub_236256C74();
    sub_2362A0B50(v34, v33);
    v35 = objc_msgSend(v24, *((SEL *)p_ivar_base_size + 243));
    if (v35)
    {
      v36 = v35;
      v37 = swift_bridgeObjectRetain();
      sub_236259A3C(v37);
      swift_bridgeObjectRelease();
      v38 = (void *)sub_2362CB758();
      swift_release();
      *(_QWORD *)&v52 = sub_23629F630;
      *((_QWORD *)&v52 + 1) = 0;
      aBlock = MEMORY[0x24BDAC760];
      v49 = 1107296256;
      v50 = sub_2362BE888;
      v51 = &block_descriptor_137;
      v39 = _Block_copy(&aBlock);
      objc_msgSend(v36, sel_setLockedApplications_completion_, v38, v39);
      _Block_release(v39);
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  swift_release();
  if (qword_2563D4178 != -1)
    swift_once();
  v8 = sub_2362CB494();
  __swift_project_value_buffer(v8, (uint64_t)qword_2563DB5D8);
  swift_bridgeObjectRetain();
  v9 = v3;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = sub_2362CB47C();
  v12 = sub_2362CB830();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    aBlock = v15;
    *(_DWORD *)v13 = 136315394;
    v43 = 0;
    swift_bridgeObjectRetain();
    v54 = sub_2362AB670(a2, a3, &aBlock);
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2112;
    v16 = v3;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    v54 = v17;
    sub_2362CB9C8();
    *v14 = v17;

    _os_log_impl(&dword_23624C000, v11, v12, "Couldn't handle app %s no longer hideable: %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v15, -1, -1);
    MEMORY[0x23B7EF258](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_2362A5724(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD v12[4];
  char v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v12[2] = sub_2362B01D4;
  v12[3] = &v13;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B01E8, (uint64_t)v12);
  if (v2)
  {
    swift_release();
    if (qword_2563D4178 != -1)
      swift_once();
    v3 = sub_2362CB494();
    __swift_project_value_buffer(v3, (uint64_t)qword_2563DB5D8);
    v4 = v2;
    v5 = v2;
    v6 = sub_2362CB47C();
    v7 = sub_2362CB830();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v10 = v2;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      v15 = v11;
      sub_2362CB9C8();
      *v9 = v11;

      _os_log_impl(&dword_23624C000, v6, v7, "could not clear preferences for non hideable apps! %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v9, -1, -1);
      MEMORY[0x23B7EF258](v8, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_2362A5924(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8[8];

  if ((a3 & 0x100) == 0)
    return a3 & 0x10001;
  v8[6] = v3;
  v8[7] = v4;
  swift_bridgeObjectRetain();
  sub_236252958(v8, a1, a2);
  swift_bridgeObjectRelease();
  return 2;
}

void sub_2362A5988(void *a1, uint64_t a2, unint64_t a3)
{
  sub_2362A59AC(a1, a2, a3, &qword_2563D4178, (uint64_t)qword_2563DB5D8, "couldn't set %s unshielded when clearing preferences and accesses: %@");
}

void sub_2362A59AC(void *a1, uint64_t a2, unint64_t a3, _QWORD *a4, uint64_t a5, const char *a6)
{
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  NSObject *oslog;
  uint64_t v22;
  uint64_t v23;

  if (a1)
  {
    v12 = a1;
    if (*a4 != -1)
      swift_once();
    v13 = sub_2362CB494();
    __swift_project_value_buffer(v13, a5);
    v14 = a1;
    swift_bridgeObjectRetain();
    v15 = a1;
    swift_bridgeObjectRetain();
    oslog = sub_2362CB47C();
    v16 = sub_2362CB830();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v17 = 136315394;
      swift_bridgeObjectRetain();
      sub_2362AB670(a2, a3, &v23);
      sub_2362CB9C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2112;
      v20 = a1;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v18 = v22;

      _os_log_impl(&dword_23624C000, oslog, v16, a6, (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v19, -1, -1);
      MEMORY[0x23B7EF258](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_2362A5C30(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t (*v16)(char *, char *, uint64_t);
  void (*v17)(_QWORD, char *, uint64_t);
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  unint64_t *v76;
  __int128 v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t i;
  _QWORD *v84;
  uint64_t v85;
  uint64_t (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  char v89[16];
  unint64_t *v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95[8];
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1, a2);
  v88 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v75 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v75 - v13;
  v15 = MEMORY[0x24BEE4B08];
  v99 = MEMORY[0x24BEE4B08];
  v100 = MEMORY[0x24BEE4B08];
  v97 = MEMORY[0x24BEE4B08];
  v98 = MEMORY[0x24BEE4B08];
  v16 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 16);
  v87 = (char *)v2 + *(_QWORD *)(v3 + 256);
  v86 = v16;
  ((void (*)(char *))v16)((char *)&v75 - v13);
  v76 = v2;
  v90 = v2;
  v91 = &v100;
  v92 = &v98;
  v93 = &v99;
  v94 = &v97;
  v17 = *(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v3 + 160) + 56);
  v85 = *(_QWORD *)(v3 + 160);
  v17(sub_2362AFD6C, v89, v4);
  v82 = v4;
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v14, v4);
LABEL_6:
  v96 = (char *)v15;
  v28 = v86(v11, v87, v4);
  MEMORY[0x24BDAC7A8](v28, v29);
  *(&v75 - 2) = (uint64_t)&v96;
  (*(void (**)(id (*)(void *)))(v85 + 72))(sub_2362AFD88);
  v27(v11, v4);
  v11 = v96;
  v30 = *(_QWORD *)(v3 + 200);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 24);
  v32 = *(_QWORD *)(v3 + 120);
  v33 = swift_bridgeObjectRetain();
  v34 = v31(v33, v32, v30);
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = *((_QWORD *)v11 + 2);
  v84 = v27;
  if (v35 > v36 >> 3)
  {
    swift_bridgeObjectRetain();
    v37 = sub_2362AC420(v34, (uint64_t)v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v95[0] = (uint64_t)v11;
    swift_bridgeObjectRetain();
    sub_2362AC28C(v34);
    swift_bridgeObjectRelease();
    v37 = v95[0];
  }
  v38 = v88;
  v39 = *(_QWORD *)(v37 + 56);
  v79 = v37 + 56;
  v40 = 1 << *(_BYTE *)(v37 + 32);
  v41 = -1;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  v3 = v41 & v39;
  v78 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  *(_QWORD *)&v42 = 136315138;
  v81 = v42;
  v80 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v42 = 136315394;
  v77 = v42;
  v43 = v82;
  v44 = qword_2563D3FE0 + 32;
  for (i = v37; ; v37 = i)
  {
    if (v3)
    {
      v45 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v46 = v45 | (v15 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      swift_once();
      v18 = sub_2362CB494();
      __swift_project_value_buffer(v18, (uint64_t)qword_2563DB5D8);
      v19 = 0;
      v20 = 0;
      v21 = sub_2362CB47C();
      v22 = sub_2362CB830();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v84 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 138412290;
        v24 = 0;
        v25 = _swift_stdlib_bridgeErrorToNSError();
        v95[0] = v25;
        v15 = MEMORY[0x24BEE4B08];
        sub_2362CB9C8();
        v26 = v84;
        *v84 = v25;

        _os_log_impl(&dword_23624C000, v21, v22, "Could not map preferences! %@", v23, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v26, -1, -1);
        MEMORY[0x23B7EF258](v23, -1, -1);

      }
      else
      {

      }
      v4 = v82;
      goto LABEL_6;
    }
    if (v15 >= v78)
      goto LABEL_33;
    v48 = *(_QWORD *)(v79 + 8 * v15);
    if (!v48)
      break;
LABEL_22:
    v3 = (v48 - 1) & v48;
    v46 = __clz(__rbit64(v48)) + (v15 << 6);
LABEL_23:
    v50 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * v46);
    v51 = *v50;
    v27 = (void (*)(char *, uint64_t))v50[1];
    v52 = v44[47];
    swift_bridgeObjectRetain();
    if (v52 != -1)
      swift_once();
    v53 = sub_2362CB494();
    v11 = (char *)__swift_project_value_buffer(v53, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain_n();
    v54 = sub_2362CB47C();
    v55 = sub_2362CB848();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v95[0] = v57;
      *(_DWORD *)v56 = v81;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v56 + 4) = sub_2362AB670(v51, (unint64_t)v27, v95);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v54, v55, "removing access for uninstalled application %s", (uint8_t *)v56, 0xCu);
      swift_arrayDestroy();
      v58 = v57;
      v38 = v88;
      MEMORY[0x23B7EF258](v58, -1, -1);
      v59 = v56;
      v43 = v82;
      MEMORY[0x23B7EF258](v59, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v86(v38, v87, v43);
    (*(void (**)(uint64_t, void (*)(char *, uint64_t), uint64_t))(v85 + 104))(v51, v27, v43);
    ((void (*)(char *, uint64_t))v84)(v38, v43);
    swift_bridgeObjectRelease();
    v44 = &qword_2563D3FE0[4];
  }
  v49 = v15 + 1;
  if (v15 + 1 >= v78)
    goto LABEL_33;
  v48 = *(_QWORD *)(v79 + 8 * v49);
  if (v48)
  {
LABEL_21:
    v15 = v49;
    goto LABEL_22;
  }
  v49 = v15 + 2;
  if (v15 + 2 < v78)
  {
    v48 = *(_QWORD *)(v79 + 8 * v49);
    if (!v48)
    {
      while (1)
      {
        v15 = v49 + 1;
        if (__OFADD__(v49, 1))
          goto LABEL_46;
        if (v15 >= v78)
          goto LABEL_33;
        v48 = *(_QWORD *)(v79 + 8 * v15);
        ++v49;
        if (v48)
          goto LABEL_22;
      }
    }
    goto LABEL_21;
  }
LABEL_33:
  swift_release();
  v60 = v100;
  if (*(_QWORD *)(v100 + 16) || (v61 = *(_QWORD *)(v98 + 16)) != 0)
    LODWORD(v61) = 2;
  v62 = v99;
  if (*(_QWORD *)(v99 + 16) || *(_QWORD *)(v97 + 16))
    LODWORD(v61) = v61 | 1;
  if (*(_QWORD *)(v37 + 16))
    v63 = v61 | 4;
  else
    v63 = v61;
  if (v63)
  {
    v64 = swift_bridgeObjectRetain();
    v65 = sub_2362A0B50(v64, v37);
    v66 = v98;
    v67 = swift_bridgeObjectRetain();
    v68 = sub_2362A0B50(v67, v65);
    v69 = swift_bridgeObjectRetain();
    v70 = sub_2362A0B50(v69, v68);
    v71 = v97;
    v72 = swift_bridgeObjectRetain();
    v73 = sub_2362A0B50(v72, v70);
    LODWORD(v95[0]) = v63;
    v95[1] = v73;
    v95[2] = v62;
    v95[3] = v71;
    v95[4] = v60;
    v95[6] = 0;
    v95[7] = 0;
    v95[5] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2362CB50C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2362A668C(uint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  uint64_t i;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  const char *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int16 v65;
  int v66;
  uint64_t v67;
  int v69;
  uint64_t v70;
  uint64_t v71;

  v4 = a2;
  v65 = a3;
  v5 = a3 & 0x10101;
  v6 = (*(uint64_t (**)(uint64_t, unint64_t, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a4 + 232) + 48))(a1, a2, a3 & 0x10101, *(_QWORD *)(*(_QWORD *)a4 + 152));
  v7 = v6;
  v70 = *(_QWORD *)(v6 + 16);
  if (!v70)
    goto LABEL_60;
  v66 = 2;
  v8 = &qword_2563D3FE0[4];
  v9 = 2;
  v67 = v6;
  for (i = 0; ; i = v11)
  {
    while (1)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
        return;
      }
      v12 = *(unsigned __int8 *)(v7 + i + 32);
      v13 = v12 >> 6;
      if (v12 >> 6)
        break;
      v69 = v9;
      if (v8[47] != -1)
        swift_once();
      v14 = v12 & 1;
      v15 = sub_2362CB494();
      __swift_project_value_buffer(v15, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v16 = sub_2362CB47C();
      v17 = sub_2362CB848();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v71 = v19;
        *(_DWORD *)v18 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v18 + 4) = sub_2362AB670(a1, v4, &v71);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 1024;
        *(_DWORD *)(v18 + 14) = v14;
        _os_log_impl(&dword_23624C000, v16, v17, "Setting %s locked: %{BOOL}d", (uint8_t *)v18, 0x12u);
        swift_arrayDestroy();
        v20 = v19;
        v7 = v67;
        MEMORY[0x23B7EF258](v20, -1, -1);
        v21 = v18;
        v8 = qword_2563D3FE0 + 32;
        MEMORY[0x23B7EF258](v21, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (v5 != 2)
      {
        v5 = v5 & 0x10100 | v14;
        v9 = !(v12 & 1);
        goto LABEL_55;
      }
      if ((v12 & 1) == 0)
      {
        swift_bridgeObjectRetain_n();
        v47 = sub_2362CB47C();
        v48 = sub_2362CB848();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc();
          v50 = swift_slowAlloc();
          v71 = v50;
          *(_DWORD *)v49 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v49 + 4) = sub_2362AB670(a1, v4, &v71);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23624C000, v47, v48, "not setting locked to false for deleted preference for %s", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          v51 = v50;
          v7 = v67;
          MEMORY[0x23B7EF258](v51, -1, -1);
          v52 = v49;
          v8 = qword_2563D3FE0 + 32;
          MEMORY[0x23B7EF258](v52, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v9 = v69;
        goto LABEL_55;
      }
      v9 = 0;
      ++i;
      v5 = 1;
      if (v11 == v70)
      {
        swift_bridgeObjectRelease();
        v64 = v66;
LABEL_57:
        swift_bridgeObjectRetain();
        sub_236252958(&v71, a1, v4);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    if (v13 == 1)
    {
      if (v8[47] != -1)
        swift_once();
      v31 = v12 & 1;
      v32 = sub_2362CB494();
      __swift_project_value_buffer(v32, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v33 = v4;
      v34 = sub_2362CB47C();
      v35 = sub_2362CB848();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        v37 = swift_slowAlloc();
        v71 = v37;
        *(_DWORD *)v36 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v36 + 4) = sub_2362AB670(a1, v33, &v71);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v36 + 12) = 1024;
        *(_DWORD *)(v36 + 14) = v31;
        _os_log_impl(&dword_23624C000, v34, v35, "Setting %s hidden: %{BOOL}d", (uint8_t *)v36, 0x12u);
        swift_arrayDestroy();
        v38 = v37;
        v7 = v67;
        MEMORY[0x23B7EF258](v38, -1, -1);
        v39 = v36;
        v8 = qword_2563D3FE0 + 32;
        MEMORY[0x23B7EF258](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v4 = v33;
      if (v5 != 2)
      {
        v5 = v5 & 0x10001 | (v31 << 8);
        v66 = !(v12 & 1);
        goto LABEL_55;
      }
      if ((v12 & 1) != 0)
      {
        v66 = 0;
        v5 = 256;
        goto LABEL_55;
      }
      swift_bridgeObjectRetain_n();
      v54 = sub_2362CB47C();
      v61 = sub_2362CB848();
      if (os_log_type_enabled(v54, v61))
      {
        v56 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        v71 = v57;
        *(_DWORD *)v56 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v56 + 4) = sub_2362AB670(a1, v33, &v71);
        swift_bridgeObjectRelease_n();
        v58 = v54;
        v59 = v61;
        v60 = "not setting hidden to false for deleted preference for %s";
        goto LABEL_53;
      }
      goto LABEL_54;
    }
    if (v13 == 2)
    {
      if (v8[47] != -1)
        swift_once();
      v22 = v12 & 1;
      v23 = sub_2362CB494();
      __swift_project_value_buffer(v23, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v24 = v4;
      v25 = sub_2362CB47C();
      v26 = sub_2362CB848();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v71 = v28;
        *(_DWORD *)v27 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v27 + 4) = sub_2362AB670(a1, v24, &v71);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 1024;
        *(_DWORD *)(v27 + 14) = v22;
        _os_log_impl(&dword_23624C000, v25, v26, "Setting %s provisional: %{BOOL}d", (uint8_t *)v27, 0x12u);
        swift_arrayDestroy();
        v29 = v28;
        v7 = v67;
        MEMORY[0x23B7EF258](v29, -1, -1);
        v30 = v27;
        v8 = qword_2563D3FE0 + 32;
        MEMORY[0x23B7EF258](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v4 = v24;
      if (v5 != 2)
      {
        v5 = v5 & 0x101 | (v22 << 16);
        goto LABEL_55;
      }
      if ((v12 & 1) != 0)
      {
        v5 = 0x10000;
        goto LABEL_55;
      }
      swift_bridgeObjectRetain_n();
      v54 = sub_2362CB47C();
      v55 = sub_2362CB848();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        v71 = v57;
        *(_DWORD *)v56 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v56 + 4) = sub_2362AB670(a1, v24, &v71);
        swift_bridgeObjectRelease_n();
        v58 = v54;
        v59 = v55;
        v60 = "not setting provisional to false for deleted preference for %s";
LABEL_53:
        _os_log_impl(&dword_23624C000, v58, v59, v60, (uint8_t *)v56, 0xCu);
        swift_arrayDestroy();
        v62 = v57;
        v7 = v67;
        MEMORY[0x23B7EF258](v62, -1, -1);
        v63 = v56;
        v8 = qword_2563D3FE0 + 32;
        MEMORY[0x23B7EF258](v63, -1, -1);

        goto LABEL_55;
      }
LABEL_54:

      swift_bridgeObjectRelease_n();
      goto LABEL_55;
    }
    if (v8[47] != -1)
      swift_once();
    v40 = sub_2362CB494();
    __swift_project_value_buffer(v40, (uint64_t)qword_2563DB5D8);
    swift_bridgeObjectRetain_n();
    v41 = sub_2362CB47C();
    v42 = sub_2362CB848();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = v4;
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v71 = v45;
      *(_DWORD *)v44 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v44 + 4) = sub_2362AB670(a1, v43, &v71);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v41, v42, "removing preference for %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v45, -1, -1);
      v46 = v44;
      v4 = v43;
      MEMORY[0x23B7EF258](v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if ((v65 & 1) != 0)
      v9 = 1;
    v53 = v66;
    if ((v65 & 0x100) != 0)
      v53 = 1;
    v66 = v53;
    v5 = 2;
LABEL_55:
    if (v11 == v70)
      break;
  }
  swift_bridgeObjectRelease();
  if (v9 != 2)
  {
    v64 = v66;
    goto LABEL_57;
  }
  v64 = v66;
LABEL_58:
  if (v64 == 2)
    return;
  swift_bridgeObjectRetain();
  sub_236252958(&v71, a1, v4);
LABEL_60:
  swift_bridgeObjectRelease();
}

id sub_2362A70F4(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_msgSend(a1, sel_accessed_bundle_id);
  if (v2)
  {
    v3 = v2;
    v4 = sub_2362CB698();
    v6 = v5;

    sub_236252958(&v12, v4, v6);
    swift_bridgeObjectRelease();
  }
  result = objc_msgSend(a1, sel_accessor_bundle_id);
  if (result)
  {
    v8 = result;
    v9 = sub_2362CB698();
    v11 = v10;

    sub_236252958(&v12, v9, v11);
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2362A71B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(void **)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320) + 24))+ 16);
  swift_retain();
  v2 = (void *)sub_2362CB674();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_2362AA840;
  *(_QWORD *)(v3 + 24) = v0;
  v5[4] = sub_236253F0C;
  v5[5] = v3;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_2362A0E64;
  v5[3] = &block_descriptor_19;
  v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_registerWeeklyActivityWithName_work_, v2, v4);
  _Block_release(v4);
  swift_release();

}

uint64_t sub_2362A72D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v16[6];

  if (qword_2563D4178 != -1)
    swift_once();
  v6 = sub_2362CB494();
  __swift_project_value_buffer(v6, (uint64_t)qword_2563DB5D8);
  v7 = sub_2362CB47C();
  v8 = sub_2362CB848();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23624C000, v7, v8, "Sending appprotection analytics", v9, 2u);
    MEMORY[0x23B7EF258](v9, -1, -1);
  }

  v10 = *(NSObject **)(a3 + 24);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a1;
  v11[4] = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_2362AA8C0;
  *(_QWORD *)(v12 + 24) = v11;
  v16[4] = sub_236264B8C;
  v16[5] = v12;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2362550D4;
  v16[3] = &block_descriptor_12_2;
  v13 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2362A74B0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t aBlock[6];
  uint64_t v61;
  uint64_t v62;

  v1 = v0;
  if (qword_2563D5A18 != -1)
    swift_once();
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 40) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_2362AD788(aBlock);
  os_unfair_lock_unlock(v2 + 4);
  swift_release();
  swift_release();
  v3 = sub_2362CB7F4();
  v4 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v4;
  sub_236297D8C(v3, 0xD00000000000001ALL, 0x80000002362D7550, isUniquelyReferenced_nonNull_native);
  v6 = aBlock[0];
  swift_bridgeObjectRelease();
  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 48) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  sub_2362AD788(aBlock);
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  swift_release();
  v8 = sub_2362CB7F4();
  v9 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v6;
  sub_236297D8C(v8, 0xD00000000000001CLL, 0x80000002362D7570, v9);
  v10 = aBlock[0];
  swift_bridgeObjectRelease();
  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 56) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v11 + 4);
  sub_2362AD788(aBlock);
  os_unfair_lock_unlock(v11 + 4);
  swift_release();
  swift_release();
  v12 = sub_2362CB7F4();
  v13 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v10;
  sub_236297D8C(v12, 0xD00000000000001CLL, 0x80000002362D7590, v13);
  v14 = aBlock[0];
  swift_bridgeObjectRelease();
  v15 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 64) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  sub_2362AD788(aBlock);
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  swift_release();
  v16 = sub_2362CB7F4();
  v17 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v14;
  sub_236297D8C(v16, 0xD00000000000001CLL, 0x80000002362D75B0, v17);
  v18 = aBlock[0];
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(qword_2563DB628 + 40);
  v20 = *(os_unfair_lock_s **)(v19 + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v20 + 4);
  v21 = MEMORY[0x24BEE1768];
  sub_2362AA40C(v19, 0, MEMORY[0x24BEE1768]);
  os_unfair_lock_unlock(v20 + 4);
  swift_release();
  swift_release();
  v22 = *(_QWORD *)(qword_2563DB628 + 48);
  v23 = *(os_unfair_lock_s **)(v22 + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v23 + 4);
  sub_2362AA40C(v22, 0, v21);
  os_unfair_lock_unlock(v23 + 4);
  swift_release();
  swift_release();
  v24 = *(_QWORD *)(qword_2563DB628 + 56);
  v25 = *(os_unfair_lock_s **)(v24 + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v25 + 4);
  sub_2362AA40C(v24, 0, v21);
  os_unfair_lock_unlock(v25 + 4);
  swift_release();
  swift_release();
  v26 = *(_QWORD *)(qword_2563DB628 + 64);
  v27 = *(os_unfair_lock_s **)(v26 + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v27 + 4);
  sub_2362AA40C(v26, 0, v21);
  os_unfair_lock_unlock(v27 + 4);
  swift_release();
  v28 = swift_release();
  v61 = 0;
  v62 = 0;
  v30 = sub_2362A175C(v28, v29);
  v32 = sub_2362A151C(v30, v31);
  v33 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 128);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v32;
  v34[3] = &v62;
  v34[4] = &v61;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_2362AD7D8;
  *(_QWORD *)(v35 + 24) = v34;
  aBlock[4] = (uint64_t)sub_236272798;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_236251E08;
  aBlock[3] = (uint64_t)&block_descriptor_33_0;
  v36 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_swift_forEach_, v36);
  _Block_release(v36);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v39 = sub_2362CB7F4();
    v40 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v18;
    sub_236297D8C(v39, 0xD000000000000012, 0x80000002362D75D0, v40);
    v41 = aBlock[0];
    swift_bridgeObjectRelease();
    v42 = sub_2362CB7F4();
    v43 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v41;
    sub_236297D8C(v42, 0xD000000000000012, 0x80000002362D75F0, v43);
    v44 = aBlock[0];
    swift_bridgeObjectRelease();
    v45 = sub_2362CB7F4();
    v46 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v44;
    sub_236297D8C(v45, 0xD000000000000013, 0x80000002362D7610, v46);
    v47 = aBlock[0];
    swift_bridgeObjectRelease();
    v48 = swift_bridgeObjectRetain();
    sub_2362AFA20(v48, v32);
    swift_bridgeObjectRelease();
    swift_release();
    v49 = sub_2362CB7F4();
    v50 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v47;
    sub_236297D8C(v49, 0xD000000000000013, 0x80000002362D7630, v50);
    v51 = aBlock[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2362AD408((uint64_t)sub_2362AFBE4, v1, v30);
    swift_release();
    v52 = sub_2362CB7F4();
    v53 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v51;
    sub_236297D8C(v52, 0xD00000000000001ELL, 0x80000002362D7650, v53);
    v54 = aBlock[0];
    swift_bridgeObjectRelease();
    sub_2362AD408((uint64_t)sub_2362AFC00, v1, v30);
    swift_release();
    v55 = sub_2362CB7F4();
    v56 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v54;
    sub_236297D8C(v55, 0xD00000000000001ALL, 0x80000002362D7670, v56);
    v57 = aBlock[0];
    swift_bridgeObjectRelease();
    v58 = (void *)sub_2362CB674();
    sub_2362A8080(v57);
    swift_bridgeObjectRelease();
    sub_23625B534(0, &qword_2563D3E50);
    v59 = (void *)sub_2362CB608();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    return swift_release();
  }
  return result;
}

void sub_2362A7D10(void *a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;

  v8 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_2362CB698();
    v12 = v11;

    v13 = sub_23624EC88(v10, v12, a2);
    swift_bridgeObjectRelease();
    v14 = sub_2362B7AE0(a1, v13 & 1);

    if (!v14)
    {
      if (__OFADD__(*a3, 1))
      {
        __break(1u);
        goto LABEL_10;
      }
      ++*a3;
    }
    v15 = sub_2362B7ED4(a1);

    if (v15)
      return;
    if (!__OFADD__(*a4, 1))
    {
      ++*a4;
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_2362A7DEC(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v5 = sub_2362AA768(v2, v3, 0);
  if (v1)
  {

    v6 = 0;
    return v6 & 1;
  }
  v8 = v5;
  if (!v5)
  {
    v6 = 0;
    return v6 & 1;
  }
  v9 = objc_msgSend(v5, sel_typeForInstallMachinery);
  if (!v9)
  {
    sub_2362CB698();
    goto LABEL_14;
  }
  v10 = v9;
  v11 = sub_2362CB698();
  v13 = v12;

  v14 = sub_2362CB698();
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();

    v6 = 0;
    return v6 & 1;
  }
  if (v11 == v14 && v13 == v15)
    v6 = 1;
  else
    v6 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v6 & 1;
}

BOOL sub_2362A7F34(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v5 = sub_2362AA768(v2, v3, 0);
  if (v1)
  {

    v6 = 0;
    return (v6 & 1) == 0;
  }
  v8 = v5;
  if (!v5)
  {
    v6 = 0;
    return (v6 & 1) == 0;
  }
  v9 = objc_msgSend(v5, sel_typeForInstallMachinery);
  if (!v9)
  {
    sub_2362CB698();
    goto LABEL_14;
  }
  v10 = v9;
  v11 = sub_2362CB698();
  v13 = v12;

  v14 = sub_2362CB698();
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();

    v6 = 0;
    return (v6 & 1) == 0;
  }
  if (v11 == v14 && v13 == v15)
    v6 = 1;
  else
    v6 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (v6 & 1) == 0;
}

void sub_2362A8080(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4208);
    v2 = (_QWORD *)sub_2362CBB3C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23625B290();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_2362934D8(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_2362A8320()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = *v0;
  v3 = sub_2362CB56C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23625B534(0, (unint64_t *)&qword_2542A5588);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE5480], v3);
  v8 = (void *)sub_2362CB8C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v9 = (void *)v1[3];
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v2 + 96);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v2 + 104);
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(v2 + 120);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v2 + 128);
  *(_QWORD *)(v11 + 80) = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v2 + 152);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v2 + 160);
  *(_QWORD *)(v11 + 104) = *(_QWORD *)(v2 + 168);
  *(_QWORD *)(v11 + 112) = *(_QWORD *)(v2 + 176);
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v2 + 184);
  *(_QWORD *)(v11 + 128) = *(_QWORD *)(v2 + 192);
  *(_QWORD *)(v11 + 136) = *(_QWORD *)(v2 + 200);
  *(_QWORD *)(v11 + 144) = *(_QWORD *)(v2 + 208);
  *(_QWORD *)(v11 + 152) = *(_QWORD *)(v2 + 216);
  *(_QWORD *)(v11 + 160) = *(_QWORD *)(v2 + 224);
  *(_QWORD *)(v11 + 168) = *(_QWORD *)(v2 + 232);
  *(_QWORD *)(v11 + 176) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5D00);
  swift_allocObject();
  v1[2] = sub_2362A0ED4(v8, v9, (uint64_t)sub_2362AFC64, v11);
  return swift_release();
}

uint64_t sub_2362A84F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v13 = sub_2362CB560();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2362CB590();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v24 = Strong;
    v30 = v14;
    (*(void (**)(uint64_t))(a12 + 16))(a2);
    v29[1] = *(_QWORD *)(v24 + 24);
    aBlock[4] = sub_2362AFD20;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_51_0;
    v25 = v18;
    v26 = _Block_copy(aBlock);
    swift_retain();
    sub_2362CB578();
    v31 = MEMORY[0x24BEE4AF8];
    sub_23629C5DC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E344((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0, MEMORY[0x24BEE12C8]);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v22, v17, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v13);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v25);
    swift_release();
    return swift_release();
  }
  else
  {
    v28 = type metadata accessor for Backup(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 1, 1, v28);
  }
}

uint64_t sub_2362A8730(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  unint64_t v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  uint64_t *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  char v99;
  unsigned __int8 *v100;
  unsigned int v101;
  int v102;
  int v103;
  uint64_t v104;
  void *v105;
  BOOL v106;
  int v107;
  id v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  _QWORD *v113;
  id v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unsigned __int8 *v135;
  int v136;
  int v137;
  int v138;
  int64_t v139;
  uint64_t v140;
  void *v141;
  int v142;
  id v143;
  id v144;
  NSObject *v145;
  os_log_type_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t result;
  _QWORD v159[2];
  uint64_t v160;
  uint64_t v161;
  int v162;
  unsigned int v163;
  uint64_t v164;
  int64_t v165;
  int64_t v166;
  int64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  uint64_t v176;
  uint64_t v177;
  int64_t v178;
  uint64_t v179;
  _QWORD *v180;
  void *v181;
  uint64_t v182[8];
  uint64_t v183;
  uint64_t v184;

  v180 = (_QWORD *)*v2;
  isUniquelyReferenced_nonNull_native = v180[10];
  v165 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  v5 = MEMORY[0x24BDAC7A8](0, a2);
  v7 = (int64_t)v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v172 = (char *)v159 - v10;
  v181 = 0;
  v174 = type metadata accessor for Backup(v9);
  MEMORY[0x24BDAC7A8](v174, v11);
  v13 = (uint64_t)v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    goto LABEL_156;
LABEL_2:
  v14 = sub_2362CB494();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
  sub_23628CDA4(a1, v13);
  v177 = v15;
  v16 = sub_2362CB47C();
  v17 = sub_2362CB848();
  v18 = os_log_type_enabled(v16, v17);
  v176 = isUniquelyReferenced_nonNull_native;
  v167 = v7;
  if (v18)
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v182[0] = v20;
    *(_DWORD *)v19 = 136315138;
    isUniquelyReferenced_nonNull_native = (uint64_t)(v19 + 12);
    v21 = sub_23628AD28();
    v184 = sub_2362AB670(v21, v22, v182);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    sub_23628CDE8(v13);
    _os_log_impl(&dword_23624C000, v16, v17, "processing backup: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v20, -1, -1);
    MEMORY[0x23B7EF258](v19, -1, -1);
  }
  else
  {
    sub_23628CDE8(v13);
  }

  v23 = *(int *)(v174 + 24);
  v171 = a1;
  v168 = v23;
  v24 = *(_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(v24 + 56);
  v178 = v24 + 56;
  v179 = v24;
  a1 = 1;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v13 = v27 & v25;
  v175 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v28 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v13)
    {
      v30 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v31 = v30 | (v7 << 6);
      goto LABEL_24;
    }
    v32 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_148;
    if (v32 >= v175)
      break;
    v33 = *(_QWORD *)(v178 + 8 * v32);
    ++v7;
    if (!v33)
    {
      v7 = v32 + 1;
      if (v32 + 1 >= v175)
        break;
      v33 = *(_QWORD *)(v178 + 8 * v7);
      if (!v33)
      {
        v34 = v32 + 2;
        if (v34 >= v175)
          break;
        v33 = *(_QWORD *)(v178 + 8 * v34);
        if (!v33)
        {
          while (1)
          {
            v7 = v34 + 1;
            if (__OFADD__(v34, 1))
              goto LABEL_152;
            if (v7 >= v175)
              goto LABEL_35;
            v33 = *(_QWORD *)(v178 + 8 * v7);
            ++v34;
            if (v33)
              goto LABEL_23;
          }
        }
        v7 = v34;
      }
    }
LABEL_23:
    v13 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_24:
    v35 = (uint64_t *)(*(_QWORD *)(v179 + 48) + 16 * v31);
    v36 = *v35;
    v37 = v35[1];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v182[0] = (uint64_t)v28;
    v39 = sub_2362934D8(v36, v37);
    v40 = v28[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    v43 = v38;
    if (v28[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v28 = (_QWORD *)v182[0];
        if ((v38 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_2362970FC();
        v28 = (_QWORD *)v182[0];
        if ((v43 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_236295DCC(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_2362934D8(v36, v37);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_160;
      v39 = v44;
      v28 = (_QWORD *)v182[0];
      if ((v43 & 1) != 0)
      {
LABEL_8:
        v29 = v28[7] + 3 * v39;
        *(_WORD *)v29 = 256;
        *(_BYTE *)(v29 + 2) = 1;
        goto LABEL_9;
      }
    }
    v28[(v39 >> 6) + 8] |= 1 << v39;
    v46 = (uint64_t *)(v28[6] + 16 * v39);
    *v46 = v36;
    v46[1] = v37;
    v47 = v28[7] + 3 * v39;
    *(_WORD *)v47 = 256;
    a1 = 1;
    *(_BYTE *)(v47 + 2) = 1;
    v48 = v28[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_146;
    v28[2] = v50;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_35:
  swift_release();
  v161 = *(int *)(v174 + 20);
  v51 = *(_QWORD *)(v171 + v161);
  v52 = *(_QWORD *)(v51 + 56);
  v175 = v51 + 56;
  v53 = 1 << *(_BYTE *)(v51 + 32);
  v54 = -1;
  if (v53 < 64)
    v54 = ~(-1 << v53);
  v7 = v54 & v52;
  v178 = (unint64_t)(v53 + 63) >> 6;
  v179 = v51;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = 0;
  while (2)
  {
    if (v7)
    {
      v56 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v57 = v56 | (isUniquelyReferenced_nonNull_native << 6);
      goto LABEL_54;
    }
    v58 = isUniquelyReferenced_nonNull_native + 1;
    if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
      goto LABEL_149;
    v13 = MEMORY[0x24BEE4AD8];
    v7 = v165;
    if (v58 < v178)
    {
      v59 = *(_QWORD *)(v175 + 8 * v58);
      ++isUniquelyReferenced_nonNull_native;
      if (!v59)
      {
        isUniquelyReferenced_nonNull_native = v58 + 1;
        if (v58 + 1 >= v178)
          break;
        v59 = *(_QWORD *)(v175 + 8 * isUniquelyReferenced_nonNull_native);
        if (!v59)
        {
          v60 = v58 + 2;
          if (v60 >= v178)
            break;
          v59 = *(_QWORD *)(v175 + 8 * v60);
          if (!v59)
          {
            while (1)
            {
              isUniquelyReferenced_nonNull_native = v60 + 1;
              if (__OFADD__(v60, 1))
                break;
              if (isUniquelyReferenced_nonNull_native >= v178)
                goto LABEL_69;
              v59 = *(_QWORD *)(v175 + 8 * isUniquelyReferenced_nonNull_native);
              ++v60;
              if (v59)
                goto LABEL_53;
            }
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
          isUniquelyReferenced_nonNull_native = v60;
        }
      }
LABEL_53:
      v7 = (v59 - 1) & v59;
      v57 = __clz(__rbit64(v59)) + (isUniquelyReferenced_nonNull_native << 6);
LABEL_54:
      v61 = (uint64_t *)(*(_QWORD *)(v179 + 48) + 16 * v57);
      v62 = *v61;
      v13 = v61[1];
      v63 = v28[2];
      swift_bridgeObjectRetain();
      if (v63 && (v64 = sub_2362934D8(v62, v13), (v65 & 1) != 0))
        a1 = *(unsigned __int8 *)(v28[7] + 3 * v64 + 1);
      else
        a1 = 0;
      v66 = swift_isUniquelyReferenced_nonNull_native();
      v182[0] = (uint64_t)v28;
      v68 = sub_2362934D8(v62, v13);
      v69 = v28[2];
      v70 = (v67 & 1) == 0;
      v71 = v69 + v70;
      if (__OFADD__(v69, v70))
        goto LABEL_144;
      v72 = v67;
      if (v28[3] >= v71)
      {
        if ((v66 & 1) != 0)
        {
          v28 = (_QWORD *)v182[0];
          if ((v67 & 1) == 0)
            goto LABEL_65;
        }
        else
        {
          sub_2362970FC();
          v28 = (_QWORD *)v182[0];
          if ((v72 & 1) == 0)
            goto LABEL_65;
        }
      }
      else
      {
        sub_236295DCC(v71, v66);
        v73 = sub_2362934D8(v62, v13);
        if ((v72 & 1) != (v74 & 1))
          goto LABEL_160;
        v68 = v73;
        v28 = (_QWORD *)v182[0];
        if ((v72 & 1) == 0)
        {
LABEL_65:
          v28[(v68 >> 6) + 8] |= 1 << v68;
          v75 = (uint64_t *)(v28[6] + 16 * v68);
          *v75 = v62;
          v75[1] = v13;
          v76 = (_BYTE *)(v28[7] + 3 * v68);
          *v76 = 1;
          v76[1] = a1;
          v76[2] = 1;
          v77 = v28[2];
          v49 = __OFADD__(v77, 1);
          v78 = v77 + 1;
          if (v49)
            goto LABEL_147;
          v28[2] = v78;
          swift_bridgeObjectRetain();
          goto LABEL_39;
        }
      }
      v55 = (_BYTE *)(v28[7] + 3 * v68);
      *v55 = 1;
      v55[1] = a1;
      v55[2] = 1;
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
LABEL_69:
  swift_release();
  v79 = swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = sub_2362A0CD0(v79);
  a1 = (*(uint64_t (**)(uint64_t, _QWORD))(v180[25] + 24))(isUniquelyReferenced_nonNull_native, v180[15]);
  swift_bridgeObjectRelease();
  v80 = swift_bridgeObjectRetain();
  v81 = sub_2362A0CD0(v80);
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v81 + 16) >> 3)
  {
    v182[0] = v81;
    sub_2362AC28C(a1);
    v173 = v182[0];
  }
  else
  {
    v173 = sub_2362AC420(a1, v81);
  }
  v83 = 0;
  v84 = *(_QWORD *)(a1 + 56);
  v160 = a1 + 56;
  v85 = 1 << *(_BYTE *)(a1 + 32);
  v86 = -1;
  if (v85 < 64)
    v86 = ~(-1 << v85);
  v87 = v86 & v84;
  v175 = v159[0] + *(_QWORD *)(*(_QWORD *)v159[0] + 256);
  v166 = (unint64_t)(v85 + 63) >> 6;
  *(_QWORD *)&v82 = 136315394;
  v169 = v82;
  v159[1] = v13 + 8;
  v170 = a1;
  v174 = (uint64_t)v28;
  while (2)
  {
    if (v87)
    {
      v88 = __clz(__rbit64(v87));
      v89 = (v87 - 1) & v87;
      v90 = v88 | (v83 << 6);
      goto LABEL_89;
    }
    v49 = __OFADD__(v83++, 1);
    if (v49)
      goto LABEL_150;
    if (v83 >= v166)
    {
LABEL_104:
      swift_release();
      v183 = MEMORY[0x24BEE4B08];
      v184 = MEMORY[0x24BEE4B08];
      v121 = *(_QWORD *)(v173 + 56);
      v170 = v173 + 56;
      v122 = 1 << *(_BYTE *)(v173 + 32);
      v123 = -1;
      if (v122 < 64)
        v123 = ~(-1 << v122);
      v124 = v123 & v121;
      v166 = (unint64_t)(v122 + 63) >> 6;
      swift_bridgeObjectRetain();
      a1 = 0;
      v164 = v13 + 8;
      while (1)
      {
        if (v124)
        {
          v125 = __clz(__rbit64(v124));
          v126 = (v124 - 1) & v124;
          v127 = v125 | (a1 << 6);
        }
        else
        {
          v49 = __OFADD__(a1++, 1);
          if (v49)
            goto LABEL_151;
          if (a1 >= v166)
          {
LABEL_139:
            v157 = v173;
            swift_release();
            if (*(_QWORD *)(v157 + 16))
            {
              LODWORD(v182[0]) = 3;
              v182[1] = v157;
              v182[2] = 0;
              v182[3] = v184;
              v182[4] = 0;
              v182[6] = 0;
              v182[7] = 0;
              v182[5] = v183;
              sub_2362CB50C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v128 = *(_QWORD *)(v170 + 8 * a1);
          if (!v128)
          {
            v129 = a1 + 1;
            if (a1 + 1 >= v166)
              goto LABEL_139;
            v128 = *(_QWORD *)(v170 + 8 * v129);
            if (!v128)
            {
              v129 = a1 + 2;
              if (a1 + 2 >= v166)
                goto LABEL_139;
              v128 = *(_QWORD *)(v170 + 8 * v129);
              if (!v128)
              {
                while (1)
                {
                  a1 = v129 + 1;
                  if (__OFADD__(v129, 1))
                    break;
                  if (a1 >= v166)
                    goto LABEL_139;
                  v128 = *(_QWORD *)(v170 + 8 * a1);
                  ++v129;
                  if (v128)
                    goto LABEL_120;
                }
LABEL_155:
                __break(1u);
LABEL_156:
                swift_once();
                goto LABEL_2;
              }
            }
            a1 = v129;
          }
LABEL_120:
          v126 = (v128 - 1) & v128;
          v127 = __clz(__rbit64(v128)) + (a1 << 6);
        }
        v130 = (uint64_t *)(*(_QWORD *)(v173 + 48) + 16 * v127);
        v13 = *v130;
        v131 = v130[1];
        v132 = v171;
        isUniquelyReferenced_nonNull_native = *(_QWORD *)(v171 + v168);
        swift_bridgeObjectRetain();
        if ((sub_23624EC88(v13, v131, isUniquelyReferenced_nonNull_native) & 1) != 0
          || (sub_23624EC88(v13, v131, *(_QWORD *)(v132 + v161)) & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_236252958(v182, v13, v131);
          swift_bridgeObjectRelease();
        }
        if (!v28[2])
          goto LABEL_145;
        v178 = v126;
        v179 = a1;
        swift_bridgeObjectRetain();
        v133 = sub_2362934D8(v13, v131);
        if ((v134 & 1) == 0)
          goto LABEL_159;
        v135 = (unsigned __int8 *)(v28[7] + 3 * v133);
        v136 = *v135;
        v137 = v135[1];
        v138 = v135[2];
        swift_bridgeObjectRelease();
        v139 = v167;
        v140 = v176;
        (*(void (**)(int64_t, int64_t, uint64_t))(v7 + 16))(v167, v175, v176);
        v141 = v181;
        v106 = v137 == 0;
        isUniquelyReferenced_nonNull_native = v140;
        if (v106)
          v142 = 0;
        else
          v142 = 256;
        (*(void (**)(uint64_t, unint64_t, _QWORD, uint64_t))(v180[20] + 16))(v13, v131, v142 | v136 | 0x10000u, v140);
        if (v141)
        {
          (*(void (**)(int64_t, uint64_t))(v7 + 8))(v139, v140);
          v143 = v141;
          swift_bridgeObjectRetain();
          v144 = v141;
          v145 = sub_2362CB47C();
          v146 = sub_2362CB830();
          isUniquelyReferenced_nonNull_native = v146;
          if (os_log_type_enabled(v145, v146))
          {
            v147 = swift_slowAlloc();
            v148 = (_QWORD *)swift_slowAlloc();
            v149 = swift_slowAlloc();
            v182[0] = v149;
            *(_DWORD *)v147 = v169;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v147 + 4) = sub_2362AB670(v13, v131, v182);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v147 + 12) = 2112;
            v150 = v141;
            v151 = _swift_stdlib_bridgeErrorToNSError();
            *(_QWORD *)(v147 + 14) = v151;
            *v148 = v151;

            _os_log_impl(&dword_23624C000, v145, (os_log_type_t)isUniquelyReferenced_nonNull_native, "could not set provisional preferences for %s: %@", (uint8_t *)v147, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
            swift_arrayDestroy();
            MEMORY[0x23B7EF258](v148, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x23B7EF258](v149, -1, -1);
            MEMORY[0x23B7EF258](v147, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v181 = 0;
        }
        else
        {
          LODWORD(v172) = v138;
          v181 = 0;
          (*(void (**)(int64_t, uint64_t))(v7 + 8))(v139, v140);
          swift_bridgeObjectRetain();
          v152 = sub_2362CB47C();
          v153 = sub_2362CB848();
          if (os_log_type_enabled(v152, v153))
          {
            isUniquelyReferenced_nonNull_native = swift_slowAlloc();
            v154 = swift_slowAlloc();
            v182[0] = v154;
            *(_DWORD *)isUniquelyReferenced_nonNull_native = v169;
            swift_bridgeObjectRetain();
            *(_QWORD *)(isUniquelyReferenced_nonNull_native + 4) = sub_2362AB670(v13, v131, v182);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(isUniquelyReferenced_nonNull_native + 12) = 2080;
            v155 = sub_2362B9EC4();
            v13 = v156;
            *(_QWORD *)(isUniquelyReferenced_nonNull_native + 14) = sub_2362AB670(v155, v156, v182);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23624C000, v152, v153, "Set provisional preferences for %s to %s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0x16u);
            swift_arrayDestroy();
            v7 = v165;
            MEMORY[0x23B7EF258](v154, -1, -1);
            MEMORY[0x23B7EF258](isUniquelyReferenced_nonNull_native, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
        }
        v124 = v178;
        a1 = v179;
        v28 = (_QWORD *)v174;
      }
    }
    v91 = *(_QWORD *)(v160 + 8 * v83);
    if (!v91)
    {
      v92 = v83 + 1;
      if (v83 + 1 >= v166)
        goto LABEL_104;
      v91 = *(_QWORD *)(v160 + 8 * v92);
      if (!v91)
      {
        v92 = v83 + 2;
        if (v83 + 2 >= v166)
          goto LABEL_104;
        v91 = *(_QWORD *)(v160 + 8 * v92);
        if (!v91)
        {
          while (1)
          {
            v83 = v92 + 1;
            if (__OFADD__(v92, 1))
              goto LABEL_154;
            if (v83 >= v166)
              goto LABEL_104;
            v91 = *(_QWORD *)(v160 + 8 * v83);
            ++v92;
            if (v91)
              goto LABEL_88;
          }
        }
      }
      v83 = v92;
    }
LABEL_88:
    v89 = (v91 - 1) & v91;
    v90 = __clz(__rbit64(v91)) + (v83 << 6);
LABEL_89:
    v93 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v90);
    v94 = *v93;
    v95 = v93[1];
    v96 = v28[2];
    swift_bridgeObjectRetain();
    v97 = v172;
    if (!v96)
      goto LABEL_158;
    v178 = v89;
    v179 = v83;
    swift_bridgeObjectRetain();
    v98 = sub_2362934D8(v94, v95);
    if ((v99 & 1) != 0)
    {
      v100 = (unsigned __int8 *)(v28[7] + 3 * v98);
      v101 = *v100;
      v102 = v100[1];
      v103 = v100[2];
      swift_bridgeObjectRelease();
      v104 = v176;
      (*(void (**)(char *, int64_t, uint64_t))(v7 + 16))(v97, v175, v176);
      v105 = v181;
      v106 = v102 == 0;
      isUniquelyReferenced_nonNull_native = v104;
      if (v106)
        v107 = 0;
      else
        v107 = 256;
      (*(void (**)(uint64_t, unint64_t, _QWORD, uint64_t))(v180[20] + 16))(v94, v95, v107 | v101, v104);
      if (v105)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v97, v104);
        v108 = v105;
        swift_bridgeObjectRetain();
        v109 = v105;
        v110 = sub_2362CB47C();
        v111 = sub_2362CB830();
        if (os_log_type_enabled(v110, v111))
        {
          v112 = swift_slowAlloc();
          v113 = (_QWORD *)swift_slowAlloc();
          isUniquelyReferenced_nonNull_native = swift_slowAlloc();
          v182[0] = isUniquelyReferenced_nonNull_native;
          *(_DWORD *)v112 = v169;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v112 + 4) = sub_2362AB670(v94, v95, v182);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v112 + 12) = 2112;
          v114 = v105;
          v115 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v112 + 14) = v115;
          *v113 = v115;

          _os_log_impl(&dword_23624C000, v110, v111, "could not set recover preferences for %s: %@", (uint8_t *)v112, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v113, -1, -1);
          v13 = MEMORY[0x24BEE4AD8];
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](isUniquelyReferenced_nonNull_native, -1, -1);
          MEMORY[0x23B7EF258](v112, -1, -1);

          v181 = 0;
          goto LABEL_77;
        }

        swift_bridgeObjectRelease_n();
        v181 = 0;
      }
      else
      {
        v162 = v107;
        v163 = v101;
        LODWORD(v164) = v103;
        v181 = 0;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v97, v104);
        swift_bridgeObjectRetain();
        v116 = sub_2362CB47C();
        v117 = sub_2362CB848();
        if (os_log_type_enabled(v116, v117))
        {
          isUniquelyReferenced_nonNull_native = swift_slowAlloc();
          v118 = swift_slowAlloc();
          v182[0] = v118;
          *(_DWORD *)isUniquelyReferenced_nonNull_native = v169;
          swift_bridgeObjectRetain();
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 4) = sub_2362AB670(v94, v95, v182);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(isUniquelyReferenced_nonNull_native + 12) = 2080;
          v119 = sub_2362B9EC4();
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 14) = sub_2362AB670(v119, v120, v182);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23624C000, v116, v117, "Recovered preferences for %s: %s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0x16u);
          swift_arrayDestroy();
          v7 = v165;
          MEMORY[0x23B7EF258](v118, -1, -1);
          MEMORY[0x23B7EF258](isUniquelyReferenced_nonNull_native, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      v13 = MEMORY[0x24BEE4AD8];
LABEL_77:
      a1 = v170;
      v87 = v178;
      v83 = v179;
      v28 = (_QWORD *)v174;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_158:
  __break(1u);
LABEL_159:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_160:
  result = sub_2362CBC20();
  __break(1u);
  return result;
}

uint64_t sub_2362A9A68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v4 = sub_2362CB9BC();
  v44 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v42 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v6, v10);
  v43 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v12 = sub_2362CB494();
  __swift_project_value_buffer(v12, (uint64_t)qword_2563DB5D8);
  v13 = sub_2362CB47C();
  v14 = sub_2362CB848();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23624C000, v13, v14, "start monitoring interesting pids", v15, 2u);
    MEMORY[0x23B7EF258](v15, -1, -1);
  }

  sub_2362A497C(v16, v17);
  v18 = sub_2362CB47C();
  v19 = sub_2362CB848();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23624C000, v18, v19, "resuming shield state manager", v20, 2u);
    MEMORY[0x23B7EF258](v20, -1, -1);
  }

  (*(void (**)(_QWORD))(v2[23] + 24))(v2[13]);
  v21 = sub_2362CB47C();
  v22 = sub_2362CB848();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23624C000, v21, v22, "checking for required settings actions and pruning irrelevant access records", v23, 2u);
    MEMORY[0x23B7EF258](v23, -1, -1);
  }

  sub_2362A5C30(v24, v25);
  v26 = sub_2362CB47C();
  v27 = sub_2362CB848();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_23624C000, v26, v27, "kicking off backup load", v28, 2u);
    MEMORY[0x23B7EF258](v28, -1, -1);
  }

  sub_2362A8320();
  v29 = sub_2362CB47C();
  v30 = sub_2362CB848();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_23624C000, v29, v30, "registering analytics background task", v31, 2u);
    MEMORY[0x23B7EF258](v31, -1, -1);
  }

  sub_2362A71B8();
  v32 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 344);
  swift_beginAccess();
  v33 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v8, v32, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v4);
  }
  else
  {
    v34 = v43;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v43, v8, v3);
    v35 = sub_2362CB47C();
    v36 = sub_2362CB848();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_23624C000, v35, v36, "setting up change event service", v37, 2u);
      MEMORY[0x23B7EF258](v37, -1, -1);
    }

    (*(void (**)(uint64_t))(v2[28] + 32))(v3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v34, v3);
  }
  v38 = sub_2362CB47C();
  v39 = sub_2362CB848();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_23624C000, v38, v39, "Asking settings authority to generate startup events", v40, 2u);
    MEMORY[0x23B7EF258](v40, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v2[29] + 32))(v2[19]);
}

uint64_t sub_2362A9F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v5 + 184)
                                                                                        + 16))(a1, a2, a3, a4, a5, *(_QWORD *)(*(_QWORD *)v5 + 104));
}

id *sub_2362A9F9C()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 32));
  (*(void (**)(char *))(*(_QWORD *)(v1[11] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 33));
  (*(void (**)(char *))(*(_QWORD *)(v1[12] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 34));
  (*(void (**)(char *))(*(_QWORD *)(v1[13] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 35));
  (*(void (**)(char *))(*(_QWORD *)(v1[14] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 36));
  (*(void (**)(char *))(*(_QWORD *)(v1[15] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 37));
  (*(void (**)(char *))(*(_QWORD *)(v1[16] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 38));
  (*(void (**)(char *))(*(_QWORD *)(v1[17] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 39));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *((_QWORD *)*v0 + 40));
  (*(void (**)(char *))(*(_QWORD *)(v1[19] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 41));
  swift_release();
  v2 = (char *)v0 + *((_QWORD *)*v0 + 43);
  v3 = sub_2362CB9BC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v0;
}

uint64_t sub_2362AA12C()
{
  sub_2362A9F9C();
  return swift_deallocClassInstance();
}

void type metadata accessor for APPolicyEngine()
{
  JUMPOUT(0x23B7EF12CLL);
}

uint64_t sub_2362AA15C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2362A14B4(a1);
}

uint64_t sub_2362AA17C(uint64_t a1, uint64_t a2)
{
  return sub_2362A151C(a1, a2);
}

uint64_t sub_2362AA19C(uint64_t a1, uint64_t a2)
{
  return sub_2362A175C(a1, a2);
}

uint64_t sub_2362AA1BC(uint64_t a1, uint64_t a2)
{
  return sub_2362A19C4(a1, a2);
}

uint64_t sub_2362AA1DC(uint64_t a1, uint64_t a2)
{
  return sub_2362A1AE0((uint64_t)sub_2362AFE34, a2);
}

void sub_2362AA204(uint64_t a1, uint64_t a2, int a3)
{
  sub_2362A1CAC(a1, a2, a3);
}

void sub_2362AA224(uint64_t a1, uint64_t a2, int a3)
{
  sub_2362A2C50(a1, a2, a3);
}

BOOL sub_2362AA244()
{
  return sub_2362A3420();
}

uint64_t sub_2362AA268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2362A364C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2362AA288()
{
  return sub_2362A3680();
}

uint64_t sub_2362AA2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_2362A36B4(a1, a2, a3, a4, a5, a6, a7, a8);
}

BOOL sub_2362AA2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2362A396C(a1, a2, a3, a4, a5, a6);
}

__n128 sub_2362AA2EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  __n128 result;

  sub_2362ADA6C(a1, a2, a3, a4, a5, a6, a8, a9);
  return result;
}

uint64_t sub_2362AA32C(uint64_t a1)
{
  return sub_2362A45C0(a1);
}

uint64_t sub_2362AA34C(uint64_t a1, uint64_t a2)
{
  return sub_2362A46A0(a1, a2);
}

uint64_t sub_2362AA36C(uint64_t a1, uint64_t a2)
{
  return sub_2362A4784(a1, a2);
}

uint64_t sub_2362AA38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2362A2C1C(a1, a2, a3, a4, a5);
}

uint64_t sub_2362AA3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2362A9F68(a1, a2, a3, a4, a5);
}

uint64_t sub_2362AA3CC()
{
  return sub_2362A9A68();
}

uint64_t sub_2362AA3F0(uint64_t a1, uint64_t a2)
{
  return sub_2362AA40C(a1, a2, MEMORY[0x24BEE4568]);
}

uint64_t sub_2362AA40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[9];

  result = swift_beginAccess();
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    result = sub_2362AA63C();
    if (result != a2)
    {
      v11[3] = a3;
      v11[0] = a2;
      v7 = *(void **)(a1 + 16);
      v11[8] = *__swift_project_boxed_opaque_existential_1(v11, a3);
      v8 = v7;
      v9 = sub_2362CBC08();
      swift_bridgeObjectRetain();
      v10 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_2362AA50C()
{
  return sub_2362AA63C();
}

double sub_2362AA518()
{
  uint64_t v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  __int128 v6;
  char v7;
  _OWORD v8[2];

  v1 = (char *)(v0 + 64);
  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
  {
    v2 = *(id *)(v0 + 16);
    swift_bridgeObjectRetain();
    v3 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v2, sel_valueForKey_, v3);

    if (v4)
    {
      sub_2362CB9E0();
      swift_unknownObjectRelease();
      sub_236274200(&v6, v8);
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D60A0);
    v1 = &v7;
    if ((swift_dynamicCast() & 1) == 0)
    {
      v1 = (char *)(v0 + 56);
      swift_beginAccess();
    }
  }
  return *(double *)v1;
}

uint64_t sub_2362AA63C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  char *v5;
  __int128 v6;
  char v7;
  _OWORD v8[2];

  swift_beginAccess();
  if (*(_BYTE *)(v0 + 72) != 1)
    return *(_QWORD *)(v0 + 64);
  v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
    sub_236274200(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D60A0);
  v5 = &v7;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v5 = (char *)(v0 + 56);
    swift_beginAccess();
  }
  return *(_QWORD *)v5;
}

id sub_2362AA768(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_2362CB2E4();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_2362AA840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2362A72D0(a1, a2, v2);
}

uint64_t sub_2362AA848()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362AA86C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2362AA890()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_2362AA89C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362AA8C0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  v2 = sub_2362A74B0();
  return v1(v2);
}

uint64_t sub_2362AA8F8()
{
  return swift_deallocObject();
}

uint64_t sub_2362AA908(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_2362CBC8C();
    swift_bridgeObjectRetain();
    sub_2362CB710();
    v18 = sub_2362CBCBC();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_2362CBBE4() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_2362CBBE4() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_2362AABA8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

_QWORD *sub_2362AABC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AAD24(a1, a2, a3, a4, (uint64_t *)&unk_2563D3E70, (uint64_t *)&unk_2563D4108);
}

_QWORD *sub_2362AABDC(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2362AAE50(a1, a2, a3, a4, &qword_2563D4228);
}

_QWORD *sub_2362AABF0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AB218(a1, a2, a3, a4, &qword_2563D77A8);
}

_QWORD *sub_2362AAC04(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2362AD888(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AAD10(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AAD24(a1, a2, a3, a4, &qword_2563D77B0, &qword_2563D77B8);
}

_QWORD *sub_2362AAD24(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2362ADE30(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AAE3C(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2362AAE50(a1, a2, a3, a4, &qword_2563D4240);
}

_QWORD *sub_2362AAE50(_QWORD *result, int64_t a2, char a3, unint64_t a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a4 + 24);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *(_QWORD *)(a4 + 16);
    if (v8 <= v9)
      v10 = *(_QWORD *)(a4 + 16);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = (unint64_t)(v11 + 4);
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = MEMORY[0x24BEE4AF8] + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if ((unint64_t)v11 < a4 || v14 >= a4 + 32 + 16 * v9)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v11 != (_QWORD *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_2362ADC3C(0, v9, v14, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AAF84(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2362AAE50(a1, a2, a3, a4, (uint64_t *)&unk_2563D4230);
}

_QWORD *sub_2362AAF98(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AAD24(a1, a2, a3, a4, &qword_2563D7790, (uint64_t *)&unk_2563D7798);
}

_QWORD *sub_2362AAFAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7780);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2362AD978(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AB0D0(_QWORD *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2362AAE50(a1, a2, a3, a4, &qword_2542A5208);
}

_QWORD *sub_2362AB0E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7770);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2362ADD28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AB1F0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AAD24(a1, a2, a3, a4, &qword_2542A5450, &qword_2542A5420);
}

_QWORD *sub_2362AB204(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AB218(a1, a2, a3, a4, &qword_2563D7768);
}

_QWORD *sub_2362AB218(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2362B0200(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362AB344(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2362AAD24(a1, a2, a3, a4, &qword_2563D7760, &qword_2542A5420);
}

char *sub_2362AB358(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7758);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2362AF67C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2362AB450(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2362AB464(a1, a2, a3, a4, &qword_2563D3E68, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMonitorPair);
}

uint64_t sub_2362AB464(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2362CBAF4();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2362B007C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2362AB670(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2362AB740(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23625403C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23625403C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2362AB740(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2362CB9D4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2362AB8F8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2362CBA94();
  if (!v8)
  {
    sub_2362CBAF4();
    __break(1u);
LABEL_17:
    result = sub_2362CBB48();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2362AB8F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2362AB98C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2362ABB64(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2362ABB64(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2362AB98C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2362ABB00(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2362CBA64();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2362CBAF4();
      __break(1u);
LABEL_10:
      v2 = sub_2362CB740();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2362CBB48();
    __break(1u);
LABEL_14:
    result = sub_2362CBAF4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2362ABB00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5380);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2362ABB64(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5380);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362ABCB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_2362CBC8C();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  v6 = sub_2362CBCBC();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_2362CBBE4() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_2362CBBE4() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_236253410();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_2362ABF44(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2362ABE3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_2362CBC80();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2362535C0();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_2362AC108(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_2362ABF44(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2362CBA04();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2362CBC8C();
        swift_bridgeObjectRetain();
        sub_2362CB710();
        v10 = sub_2362CBCBC();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_2362AC108(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2362CBA04();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_2362CBC80() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2362AC28C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2362ABCB0(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2362AC420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  char v28;
  unint64_t v29;
  size_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;

  v2 = a2;
  v42 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v36 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v34 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v35 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v35)
          goto LABEL_47;
        v13 = *(_QWORD *)(v36 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v35)
            goto LABEL_47;
          v13 = *(_QWORD *)(v36 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v35)
              goto LABEL_47;
            v13 = *(_QWORD *)(v36 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v35)
                goto LABEL_47;
              v13 = *(_QWORD *)(v36 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v35)
                {
LABEL_47:
                  sub_23625B290();
                  return v2;
                }
                v13 = *(_QWORD *)(v36 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v35)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v36 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_2362CBC8C();
      swift_bridgeObjectRetain();
      sub_2362CB710();
      v19 = sub_2362CBCBC();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_2362CBBE4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v37 = a1;
      v38 = v36;
      v39 = v34;
      v40 = v9;
      v41 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_2362CBBE4() & 1) == 0);
      v37 = a1;
      v38 = v36;
      v39 = v34;
      v40 = v9;
      v41 = v7;
      swift_bridgeObjectRelease();
    }
    v28 = *(_BYTE *)(v2 + 32);
    v29 = (unint64_t)((1 << v28) + 63) >> 6;
    v30 = 8 * v29;
    if ((v28 & 0x3Fu) < 0xE || swift_stdlib_isStackAllocationSafe())
    {
      MEMORY[0x24BDAC7A8]();
      memcpy((char *)&v34 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v30);
      v31 = sub_2362ACCF0((uint64_t)&v34 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0), v29, v2, v21, &v37);
      swift_release();
      sub_23625B290();
    }
    else
    {
      v32 = (void *)swift_slowAlloc();
      memcpy(v32, (const void *)(v2 + 56), v30);
      v31 = sub_2362ACCF0((uint64_t)v32, v29, v2, v21, &v37);
      swift_release();
      sub_23625B290();
      MEMORY[0x23B7EF258](v32, -1, -1);
    }
    return v31;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2362AC888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 64);
    v38 = a1 + 64;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37)
          goto LABEL_47;
        v13 = *(_QWORD *)(v38 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_47;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_47;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_47;
              v13 = *(_QWORD *)(v38 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_23625B290();
                  return v2;
                }
                v13 = *(_QWORD *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v37)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v38 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_2362CBC8C();
      swift_bridgeObjectRetain();
      sub_2362CB710();
      v19 = sub_2362CBCBC();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_2362CBBE4() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_2362CBBE4() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_2362ACCF0((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_23625B290();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_2362ACCF0((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_23625B290();
      MEMORY[0x23B7EF258](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2362ACCF0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_2362ACFCC(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_2362CBC8C();
        swift_bridgeObjectRetain();
        sub_2362CB710();
        v22 = sub_2362CBCBC();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_2362CBBE4() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_2362CBBE4() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2362ACFCC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59D0);
  result = sub_2362CBA4C();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_2362CBC8C();
    swift_bridgeObjectRetain();
    sub_2362CB710();
    result = sub_2362CBCBC();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2362AD260(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = result;
  i = 0;
  v4 = result + 56;
  v5 = -1 << *(_BYTE *)(result + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(63 - v5) >> 6;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v11 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v11 < v8)
    {
      v12 = *(_QWORD *)(v4 + 8 * v11);
      v13 = i + 1;
      if (v12)
        goto LABEL_19;
      v13 = i + 2;
      if (i + 2 >= v8)
        return sub_23625B290();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
      {
LABEL_19:
        v7 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        for (i = v13; ; v10 = v9 | (i << 6))
        {
          v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
          v17 = *v15;
          v16 = v15[1];
          v18 = *v1;
          swift_bridgeObjectRetain();
          if ((sub_23624EC88(v17, v16, v18) & 1) != 0)
          {
            sub_2362ABCB0(v17, v16);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if (!v7)
              goto LABEL_8;
          }
          else
          {
            sub_236252958(&v19, v17, v16);
            result = swift_bridgeObjectRelease();
            if (!v7)
              goto LABEL_8;
          }
LABEL_7:
          v9 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = i + 3;
      if (i + 3 < v8)
      {
        v12 = *(_QWORD *)(v4 + 8 * v14);
        if (v12)
        {
          v13 = i + 3;
          goto LABEL_19;
        }
        while (1)
        {
          v13 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_25;
          if (v13 >= v8)
            return sub_23625B290();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          ++v14;
          if (v12)
            goto LABEL_19;
        }
      }
    }
    return sub_23625B290();
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2362AD408(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(_QWORD *);
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = (uint64_t (*)(_QWORD *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_2362AD584((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = sub_2362AD584((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x23B7EF258](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_2362AD584(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int64_t v24;

  v20 = (unint64_t *)result;
  v7 = 0;
  v21 = 0;
  v22 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    v18 = a4(v23);
    result = swift_bridgeObjectRelease();
    if (v4)
      return result;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v21++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    return sub_2362ACFCC(v20, a2, v21, a3);
  }
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v24)
      goto LABEL_26;
    v14 = *(_QWORD *)(v22 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2362AD788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2362AA63C();
  *a1 = result;
  return result;
}

uint64_t sub_2362AD7B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2362AD7D8(void *a1)
{
  uint64_t v1;

  sub_2362A7D10(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_2362AD7E4()
{
  return swift_deallocObject();
}

uint64_t sub_2362AD7F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_2362CB7C4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_236252958(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2362AD888(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362AD978(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

void sub_2362ADA6C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  id v14;
  id v15;
  void *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  _QWORD v27[5];
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  void *v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  _QWORD v45[2];
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[4];
  id v54[2];

  v46 = a7;
  v50 = a5;
  v51 = a6;
  v9 = a4;
  v10 = a3;
  v11 = a2;
  v12 = a1;
  v54[1] = *(id *)MEMORY[0x24BDAC8D0];
  v13 = HIDWORD(a4);
  v54[0] = 0;
  v53[0] = a1;
  v48 = HIDWORD(a2);
  v49 = HIDWORD(a1);
  v53[1] = a2;
  v53[2] = a3;
  v47 = HIDWORD(a3);
  v53[3] = a4;
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForAuditToken_error_, v53, v54);
  v15 = v54[0];
  if (v14)
  {
    v16 = v14;
    v45[1] = v45;
    v17 = MEMORY[0x24BDAC7A8](HIDWORD(v46), v46);
    v27[2] = v52;
    v27[3] = v50;
    v27[4] = v51;
    v28 = v12;
    v29 = v49;
    v30 = v11;
    v31 = v48;
    v32 = v10;
    v33 = v47;
    v34 = v9;
    v35 = v13;
    v36 = v16;
    v37 = v18;
    v38 = v17;
    v39 = a8;
    v40 = v19;
    v41 = v20;
    v42 = v21;
    v43 = v22;
    v44 = v23;
    v24 = v15;
    sub_2362A39A8((void (*)(void))sub_2362AFE3C, (uint64_t)v27);

  }
  else
  {
    v25 = v54[0];
    v26 = (void *)sub_2362CB2E4();

    swift_willThrow();
  }
}

uint64_t sub_2362ADC3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362ADD28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7778);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362ADE30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362ADF34(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  xpc_object_t empty;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[16];
  uint64_t (*v66)();
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  __int128 v74;
  char v75[16];
  uint64_t (*v76)();
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t *v80;
  char v81[16];
  uint64_t (*v82)();
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87[2];
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;

  v92 = a4;
  v8 = MEMORY[0x24BEE4B08];
  v87[0] = MEMORY[0x24BEE4B08];
  v9 = sub_236256E54();
  v10 = sub_236256C74();
  v85 = sub_2362A0B50(v10, v9);
  v86 = v87;
  v82 = sub_2362B225C;
  v83 = &v84;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_23625B2F0, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v87[0];
  v87[0] = v8;
  v12 = sub_236256E54();
  v13 = sub_236256C74();
  v79 = sub_2362A0B50(v13, v12);
  v80 = v87;
  v76 = sub_2362B2260;
  v77 = &v78;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v75);
  swift_bridgeObjectRelease();
  swift_release();
  v14 = v87[0];
  sub_2362A4A74(a2, a3, v92);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v16 = MEMORY[0x24BEE4B08];
  v87[0] = MEMORY[0x24BEE4B08];
  v17 = sub_236256E54();
  v18 = sub_236256C74();
  v19 = sub_2362A0B50(v18, v17);
  v68 = MEMORY[0x24BDAC7A8](v19, v20);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v21);
  v66 = sub_2362B225C;
  v67 = v22;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  swift_bridgeObjectRelease();
  swift_release();
  v23 = v87[0];
  v87[0] = v16;
  v24 = sub_236256E54();
  v25 = sub_236256C74();
  v26 = sub_2362A0B50(v25, v24);
  v92 = a1;
  v68 = MEMORY[0x24BDAC7A8](v26, v27);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v28);
  v66 = sub_2362B2260;
  v67 = v29;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  v70 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v30 = v87[0];
  v87[0] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2362AD260(v23);
  v31 = v87[0];
  if ((sub_2362AA908(v11, v23) & 1) != 0)
  {
    v32 = sub_2362AA908(v14, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v87[0] = MEMORY[0x24BEE4B08];
  v33 = sub_236256E54();
  v34 = sub_236256C74();
  v35 = sub_2362A0B50(v34, v33);
  v68 = MEMORY[0x24BDAC7A8](v35, v36);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v37);
  v66 = sub_2362B2260;
  v67 = v38;
  swift_retain();
  v39 = v70;
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  v70 = v39;
  swift_bridgeObjectRelease();
  swift_release();
  v40 = v87[0];
  LODWORD(v87[0]) = 4;
  v87[1] = v31;
  v88 = 0u;
  v89 = 0u;
  v90 = v40;
  v91 = 0;
  sub_2362CB50C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_8:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v23 + 16) <= *(_QWORD *)(v11 + 16) >> 3)
  {
    v87[0] = v11;
    sub_2362AC28C(v23);
    result = swift_bridgeObjectRelease();
    v41 = v87[0];
  }
  else
  {
    v41 = sub_2362AC420(v23, v11);
    result = swift_bridgeObjectRelease();
  }
  v43 = 0;
  v44 = *(_QWORD *)(v41 + 56);
  v71 = v41 + 56;
  v45 = 1 << *(_BYTE *)(v41 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v47 = v46 & v44;
  v72 = (unint64_t)(v45 + 63) >> 6;
  *(_QWORD *)&v42 = 136315138;
  v74 = v42;
  v73 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v47)
    {
      v51 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v52 = v51 | (v43 << 6);
      goto LABEL_30;
    }
    if (__OFADD__(v43++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v43 >= v72)
      return swift_release();
    v54 = *(_QWORD *)(v71 + 8 * v43);
    if (!v54)
      break;
LABEL_29:
    v47 = (v54 - 1) & v54;
    v52 = __clz(__rbit64(v54)) + (v43 << 6);
LABEL_30:
    v56 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v52);
    v57 = *v56;
    v58 = v56[1];
    v59 = qword_2542A53D0;
    swift_bridgeObjectRetain();
    if (v59 != -1)
      swift_once();
    v60 = sub_2362CB494();
    __swift_project_value_buffer(v60, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v61 = sub_2362CB47C();
    v62 = sub_2362CB848();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v87[0] = v64;
      *(_DWORD *)v63 = v74;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v63 + 4) = sub_2362AB670(v57, v58, v87);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v61, v62, "trying to unshield %s as it is no longer effectively locked", (uint8_t *)v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v64, -1, -1);
      MEMORY[0x23B7EF258](v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = v57;
    *(_QWORD *)(v48 + 24) = v58;
    swift_bridgeObjectRetain();
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_int64(empty, "command", 2);
    v50 = sub_2362CB6F8();
    xpc_dictionary_set_string(empty, "bundleid", (const char *)(v50 + 32));
    swift_release();
    xpc_dictionary_set_BOOL(empty, "shield", 0);
    sub_2362828E8((uint64_t *)empty, (uint64_t)sub_2362B2264, v48);
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_unknownObjectRelease();
  }
  if (v43 + 1 >= v72)
    return swift_release();
  v54 = *(_QWORD *)(v71 + 8 * (v43 + 1));
  if (v54)
  {
    ++v43;
    goto LABEL_29;
  }
  v55 = v43 + 2;
  if (v43 + 2 >= v72)
    return swift_release();
  v54 = *(_QWORD *)(v71 + 8 * v55);
  v43 += 2;
  if (v54)
    goto LABEL_29;
  while (1)
  {
    v43 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v43 >= v72)
      return swift_release();
    v54 = *(_QWORD *)(v71 + 8 * v43);
    ++v55;
    if (v54)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2362AE6FC(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  xpc_object_t empty;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[16];
  uint64_t (*v66)();
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  __int128 v74;
  char v75[16];
  uint64_t (*v76)();
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t *v80;
  char v81[16];
  uint64_t (*v82)();
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87[2];
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;

  v92 = a4;
  v8 = MEMORY[0x24BEE4B08];
  v87[0] = MEMORY[0x24BEE4B08];
  v9 = sub_236256E54();
  v10 = sub_236256C74();
  v85 = sub_2362A0B50(v10, v9);
  v86 = v87;
  v82 = sub_2362B225C;
  v83 = &v84;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v87[0];
  v87[0] = v8;
  v12 = sub_236256E54();
  v13 = sub_236256C74();
  v79 = sub_2362A0B50(v13, v12);
  v80 = v87;
  v76 = sub_2362B2260;
  v77 = &v78;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v75);
  swift_bridgeObjectRelease();
  swift_release();
  v14 = v87[0];
  sub_2362A5114(a2, a3, v92);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v16 = MEMORY[0x24BEE4B08];
  v87[0] = MEMORY[0x24BEE4B08];
  v17 = sub_236256E54();
  v18 = sub_236256C74();
  v19 = sub_2362A0B50(v18, v17);
  v68 = MEMORY[0x24BDAC7A8](v19, v20);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v21);
  v66 = sub_2362B225C;
  v67 = v22;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  swift_bridgeObjectRelease();
  swift_release();
  v23 = v87[0];
  v87[0] = v16;
  v24 = sub_236256E54();
  v25 = sub_236256C74();
  v26 = sub_2362A0B50(v25, v24);
  v92 = a1;
  v68 = MEMORY[0x24BDAC7A8](v26, v27);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v28);
  v66 = sub_2362B2260;
  v67 = v29;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  v70 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v30 = v87[0];
  v87[0] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2362AD260(v23);
  v31 = v87[0];
  if ((sub_2362AA908(v11, v23) & 1) != 0)
  {
    v32 = sub_2362AA908(v14, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v87[0] = MEMORY[0x24BEE4B08];
  v33 = sub_236256E54();
  v34 = sub_236256C74();
  v35 = sub_2362A0B50(v34, v33);
  v68 = MEMORY[0x24BDAC7A8](v35, v36);
  v69 = v87;
  MEMORY[0x24BDAC7A8](v68, v37);
  v66 = sub_2362B2260;
  v67 = v38;
  swift_retain();
  v39 = v70;
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v65);
  v70 = v39;
  swift_bridgeObjectRelease();
  swift_release();
  v40 = v87[0];
  LODWORD(v87[0]) = 4;
  v87[1] = v31;
  v88 = 0u;
  v89 = 0u;
  v90 = v40;
  v91 = 0;
  sub_2362CB50C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_8:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v23 + 16) <= *(_QWORD *)(v11 + 16) >> 3)
  {
    v87[0] = v11;
    sub_2362AC28C(v23);
    result = swift_bridgeObjectRelease();
    v41 = v87[0];
  }
  else
  {
    v41 = sub_2362AC420(v23, v11);
    result = swift_bridgeObjectRelease();
  }
  v43 = 0;
  v44 = *(_QWORD *)(v41 + 56);
  v71 = v41 + 56;
  v45 = 1 << *(_BYTE *)(v41 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v47 = v46 & v44;
  v72 = (unint64_t)(v45 + 63) >> 6;
  *(_QWORD *)&v42 = 136315138;
  v74 = v42;
  v73 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v47)
    {
      v51 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v52 = v51 | (v43 << 6);
      goto LABEL_30;
    }
    if (__OFADD__(v43++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v43 >= v72)
      return swift_release();
    v54 = *(_QWORD *)(v71 + 8 * v43);
    if (!v54)
      break;
LABEL_29:
    v47 = (v54 - 1) & v54;
    v52 = __clz(__rbit64(v54)) + (v43 << 6);
LABEL_30:
    v56 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v52);
    v57 = *v56;
    v58 = v56[1];
    v59 = qword_2542A53D0;
    swift_bridgeObjectRetain();
    if (v59 != -1)
      swift_once();
    v60 = sub_2362CB494();
    __swift_project_value_buffer(v60, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v61 = sub_2362CB47C();
    v62 = sub_2362CB848();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v87[0] = v64;
      *(_DWORD *)v63 = v74;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v63 + 4) = sub_2362AB670(v57, v58, v87);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v61, v62, "trying to unshield %s as it is no longer effectively locked", (uint8_t *)v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v64, -1, -1);
      MEMORY[0x23B7EF258](v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = v57;
    *(_QWORD *)(v48 + 24) = v58;
    swift_bridgeObjectRetain();
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_int64(empty, "command", 2);
    v50 = sub_2362CB6F8();
    xpc_dictionary_set_string(empty, "bundleid", (const char *)(v50 + 32));
    swift_release();
    xpc_dictionary_set_BOOL(empty, "shield", 0);
    sub_2362828E8((uint64_t *)empty, (uint64_t)sub_2362B2264, v48);
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_unknownObjectRelease();
  }
  if (v43 + 1 >= v72)
    return swift_release();
  v54 = *(_QWORD *)(v71 + 8 * (v43 + 1));
  if (v54)
  {
    ++v43;
    goto LABEL_29;
  }
  v55 = v43 + 2;
  if (v43 + 2 >= v72)
    return swift_release();
  v54 = *(_QWORD *)(v71 + 8 * v55);
  v43 += 2;
  if (v54)
    goto LABEL_29;
  while (1)
  {
    v43 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v43 >= v72)
      return swift_release();
    v54 = *(_QWORD *)(v71 + 8 * v43);
    ++v55;
    if (v54)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2362AEEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  xpc_object_t empty;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v52;
  int64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[16];
  uint64_t (*v64)();
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  __int128 v72;
  char v73[16];
  uint64_t (*v74)();
  char *v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  char v79[16];
  uint64_t (*v80)();
  char *v81;
  char v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85[2];
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v7 = MEMORY[0x24BEE4B08];
  v85[0] = MEMORY[0x24BEE4B08];
  v8 = sub_236256E54();
  v9 = sub_236256C74();
  v83 = sub_2362A0B50(v9, v8);
  v84 = v85;
  v80 = sub_2362B225C;
  v81 = &v82;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v79);
  swift_bridgeObjectRelease();
  swift_release();
  v10 = v85[0];
  v85[0] = v7;
  v11 = sub_236256E54();
  v12 = sub_236256C74();
  v77 = sub_2362A0B50(v12, v11);
  v78 = v85;
  v74 = sub_2362B2260;
  v75 = &v76;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  v13 = v85[0];
  sub_2362A5724(a2, a3);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v85[0] = v7;
  v15 = sub_236256E54();
  v16 = sub_236256C74();
  v17 = sub_2362A0B50(v16, v15);
  v66 = MEMORY[0x24BDAC7A8](v17, v18);
  v67 = v85;
  MEMORY[0x24BDAC7A8](v66, v19);
  v64 = sub_2362B225C;
  v65 = v20;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v63);
  swift_bridgeObjectRelease();
  swift_release();
  v21 = v85[0];
  v85[0] = v7;
  v22 = sub_236256E54();
  v23 = sub_236256C74();
  v24 = sub_2362A0B50(v23, v22);
  v90 = a1;
  v66 = MEMORY[0x24BDAC7A8](v24, v25);
  v67 = v85;
  MEMORY[0x24BDAC7A8](v66, v26);
  v64 = sub_2362B2260;
  v65 = v27;
  swift_retain();
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v63);
  v68 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v28 = v85[0];
  v85[0] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2362AD260(v21);
  v29 = v85[0];
  if ((sub_2362AA908(v10, v21) & 1) != 0)
  {
    v30 = sub_2362AA908(v13, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v85[0] = MEMORY[0x24BEE4B08];
  v31 = sub_236256E54();
  v32 = sub_236256C74();
  v33 = sub_2362A0B50(v32, v31);
  v66 = MEMORY[0x24BDAC7A8](v33, v34);
  v67 = v85;
  MEMORY[0x24BDAC7A8](v66, v35);
  v64 = sub_2362B2260;
  v65 = v36;
  swift_retain();
  v37 = v68;
  sub_2362BA07C((uint64_t)sub_2362B21F4, (uint64_t)v63);
  v68 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  v38 = v85[0];
  LODWORD(v85[0]) = 4;
  v85[1] = v29;
  v86 = 0u;
  v87 = 0u;
  v88 = v38;
  v89 = 0;
  sub_2362CB50C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_8:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v21 + 16) <= *(_QWORD *)(v10 + 16) >> 3)
  {
    v85[0] = v10;
    sub_2362AC28C(v21);
    result = swift_bridgeObjectRelease();
    v39 = v85[0];
  }
  else
  {
    v39 = sub_2362AC420(v21, v10);
    result = swift_bridgeObjectRelease();
  }
  v41 = 0;
  v42 = *(_QWORD *)(v39 + 56);
  v69 = v39 + 56;
  v43 = 1 << *(_BYTE *)(v39 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & v42;
  v70 = (unint64_t)(v43 + 63) >> 6;
  *(_QWORD *)&v40 = 136315138;
  v72 = v40;
  v71 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v45)
    {
      v49 = __clz(__rbit64(v45));
      v45 &= v45 - 1;
      v50 = v49 | (v41 << 6);
      goto LABEL_30;
    }
    if (__OFADD__(v41++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v41 >= v70)
      return swift_release();
    v52 = *(_QWORD *)(v69 + 8 * v41);
    if (!v52)
      break;
LABEL_29:
    v45 = (v52 - 1) & v52;
    v50 = __clz(__rbit64(v52)) + (v41 << 6);
LABEL_30:
    v54 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v50);
    v55 = *v54;
    v56 = v54[1];
    v57 = qword_2542A53D0;
    swift_bridgeObjectRetain();
    if (v57 != -1)
      swift_once();
    v58 = sub_2362CB494();
    __swift_project_value_buffer(v58, (uint64_t)qword_2542A58F8);
    swift_bridgeObjectRetain_n();
    v59 = sub_2362CB47C();
    v60 = sub_2362CB848();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v85[0] = v62;
      *(_DWORD *)v61 = v72;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v61 + 4) = sub_2362AB670(v55, v56, v85);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23624C000, v59, v60, "trying to unshield %s as it is no longer effectively locked", (uint8_t *)v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v62, -1, -1);
      MEMORY[0x23B7EF258](v61, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v55;
    *(_QWORD *)(v46 + 24) = v56;
    swift_bridgeObjectRetain();
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_int64(empty, "command", 2);
    v48 = sub_2362CB6F8();
    xpc_dictionary_set_string(empty, "bundleid", (const char *)(v48 + 32));
    swift_release();
    xpc_dictionary_set_BOOL(empty, "shield", 0);
    sub_2362828E8((uint64_t *)empty, (uint64_t)sub_2362B2264, v46);
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_unknownObjectRelease();
  }
  if (v41 + 1 >= v70)
    return swift_release();
  v52 = *(_QWORD *)(v69 + 8 * (v41 + 1));
  if (v52)
  {
    ++v41;
    goto LABEL_29;
  }
  v53 = v41 + 2;
  if (v41 + 2 >= v70)
    return swift_release();
  v52 = *(_QWORD *)(v69 + 8 * v53);
  v41 += 2;
  if (v52)
    goto LABEL_29;
  while (1)
  {
    v41 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v41 >= v70)
      return swift_release();
    v52 = *(_QWORD *)(v69 + 8 * v41);
    ++v53;
    if (v52)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
  return result;
}

char *sub_2362AF67C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362AF760(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v36;

  v31 = (unint64_t *)result;
  v32 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 56);
  v6 = a3 + 56;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 24);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v33 = v6;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v36 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      if (!*(_QWORD *)(a4 + 16))
        goto LABEL_38;
LABEL_23:
      v17 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
      v19 = *v17;
      v18 = v17[1];
      sub_2362CBC8C();
      swift_bridgeObjectRetain();
      sub_2362CB710();
      v20 = sub_2362CBCBC();
      v21 = -1 << *(_BYTE *)(a4 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_37;
      v23 = *(_QWORD *)(a4 + 48);
      v24 = (_QWORD *)(v23 + 16 * v22);
      v25 = *v24 == v19 && v24[1] == v18;
      if (!v25 && (sub_2362CBBE4() & 1) == 0)
      {
        v26 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v26;
          if (((*(_QWORD *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          v27 = (_QWORD *)(v23 + 16 * v22);
          v28 = *v27 == v19 && v27[1] == v18;
          if (v28 || (sub_2362CBBE4() & 1) != 0)
            goto LABEL_5;
        }
LABEL_37:
        result = swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_5:
      result = swift_bridgeObjectRelease();
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v14 >= v34)
      goto LABEL_41;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v34)
        goto LABEL_41;
      v15 = *(_QWORD *)(v33 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v34)
          goto LABEL_41;
        v15 = *(_QWORD *)(v33 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_22:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(_QWORD *)(a4 + 16))
      goto LABEL_23;
LABEL_38:
    *(unint64_t *)((char *)v31 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v32++, 1))
    {
      __break(1u);
LABEL_41:
      swift_retain();
      return sub_2362ACFCC(v31, a2, v32, a3);
    }
  }
  v16 = v14 + 3;
  if (v16 >= v34)
    goto LABEL_41;
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v34)
      goto LABEL_41;
    v15 = *(_QWORD *)(v33 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_2362AFA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v11 = sub_2362AF760((uint64_t)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    v11 = sub_2362AF760((uint64_t)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x23B7EF258](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_2362AFBE4(uint64_t *a1)
{
  return sub_2362A7DEC(a1) & 1;
}

BOOL sub_2362AFC00(uint64_t *a1)
{
  return sub_2362A7F34(a1);
}

uint64_t sub_2362AFC1C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2362AFC40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362AFC64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2362A84F4(a1, v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19]);
}

uint64_t sub_2362AFCBC()
{
  return objectdestroy_44Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2362AFCCC()
{
  uint64_t v0;

  return sub_2362A1118(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_2362AFCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2362AFD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2362AFD6C(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;

  sub_2362A668C(a1, a2, a3 & 0x10101, *(_QWORD *)(v3 + 16));
}

id sub_2362AFD88(void *a1)
{
  return sub_2362A70F4(a1);
}

unint64_t sub_2362AFD90(uint64_t a1)
{
  uint64_t *v1;

  return sub_2362A4A24(a1, v1);
}

uint64_t sub_2362AFD98(void *a1)
{
  uint64_t v1;

  return sub_2362A4850(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_2362AFDA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2362AFDE4()
{
  uint64_t v0;

  return sub_2362A45EC(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_2362AFDFC(void *a1)
{
  uint64_t v1;

  sub_2362A59AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_2542A53D0, (uint64_t)qword_2542A58F8, "Couldn't set %s unshielded: %@");
}

id sub_2362AFE34(void *a1)
{
  uint64_t v1;

  return sub_2362A1BC0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2362AFE3C()
{
  uint64_t v0;

  return sub_2362A3E44(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_2362AFE78()
{
  return objectdestroy_44Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2362AFE88(void *a1, char a2)
{
  uint64_t *v2;

  return sub_2362A3788(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_2362AFE98()
{
  uint64_t v0;

  swift_release();
  sub_2362741B0(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_2362AFEC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_2362AFEF4()
{
  return swift_deallocObject();
}

void sub_2362AFF04(double *a1@<X8>)
{
  *a1 = sub_2362AA518();
}

uint64_t sub_2362AFF28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2362A3348(v2, a2);
}

uint64_t sub_2362AFF40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2362A33B4(v2, a2);
}

uint64_t sub_2362AFF58()
{
  return objectdestroy_44Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2362AFF68()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, BOOL, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 208) + 32))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (*(_BYTE *)(v0 + 40) & 1) == 0, *(_QWORD *)(**(_QWORD **)(v0 + 16) + 128));
}

uint64_t sub_2362AFFB0()
{
  return objectdestroy_44Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_44Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_2362B0004()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, BOOL, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 208) + 24))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (*(_BYTE *)(v0 + 40) & 1) == 0, *(_QWORD *)(**(_QWORD **)(v0 + 16) + 128));
}

uint64_t sub_2362B004C()
{
  uint64_t v0;

  return sub_2362A4138(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2362B0054()
{
  return swift_deallocObject();
}

void sub_2362B0064()
{
  uint64_t v0;

  sub_2362A42F0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2362B007C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362B0194()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2362B01B8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2362BA590(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_2362B01D4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_2362A5924(a1, a2, a3 & 0x10101);
}

uint64_t sub_2362B01E8(void *a1)
{
  uint64_t v1;

  return sub_2362BAEC0(a1, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2362B0200(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362B02F0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2362B02F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                result = swift_checkMetadataState();
                if (v8 <= 0x3F)
                {
                  result = sub_2362CB9BC();
                  if (v9 <= 0x3F)
                  {
                    result = swift_checkMetadataState();
                    if (v10 <= 0x3F)
                    {
                      swift_initStructMetadata();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_2362B0498(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  size_t __n;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v82 = a3[2];
  v4 = *(_QWORD *)(v82 - 8);
  v86 = a3[3];
  v5 = *(_QWORD *)(v86 - 8);
  v89 = a3[5];
  v90 = a3[4];
  v6 = *(_QWORD *)(v90 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v89 - 8);
  v87 = a3[7];
  v88 = a3[6];
  v9 = *(_QWORD *)(v88 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v87 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = a3[11];
  v91 = a3[10];
  v14 = *(_QWORD *)(v91 - 8);
  v15 = a3[9];
  v77 = a3[8];
  v16 = *(_QWORD *)(v77 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v79 = v15;
  v18 = *(_QWORD *)(v15 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = *(_DWORD *)(v14 + 80);
  v92 = v13;
  v21 = *(_QWORD *)(v13 - 8);
  v22 = *(_DWORD *)(v21 + 80);
  v23 = v7 | *(_DWORD *)(v4 + 80) & 0xF8 | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80) | v10 | v12 | v17 | v19 | *(_DWORD *)(v14 + 80) | v22;
  v24 = *(_DWORD *)(v8 + 80);
  v25 = *(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v18 + 80) | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v21 + 80) | *(_DWORD *)(v4 + 80);
  v26 = *(_QWORD *)(v4 + 64) + *(_DWORD *)(v5 + 80);
  v93 = v5;
  v27 = *(_QWORD *)(v5 + 64) + v7;
  v80 = v9;
  v81 = v6;
  v28 = *(_QWORD *)(v6 + 64) + v24;
  v84 = v11;
  v85 = v8;
  v29 = *(_QWORD *)(v8 + 64) + v10;
  v30 = *(_QWORD *)(v9 + 64) + v12;
  v76 = v16;
  v78 = v18;
  v31 = *(_QWORD *)(v18 + 64) + v20;
  v94 = v14;
  if (*(_DWORD *)(v14 + 84))
    v32 = *(_QWORD *)(v14 + 64);
  else
    v32 = *(_QWORD *)(v14 + 64) + 1;
  v33 = v25 & 0x100000;
  if (((*(_QWORD *)(v21 + 64)
       + 7
       + ((v22
         + ((v32
           + 7
           + ((v31
             + ((*(_QWORD *)(v16 + 64)
               + v19
               + ((*(_QWORD *)(v11 + 64)
                 + v17
                 + ((v30
                   + ((v29
                     + ((v28 + ((v27 + (v26 & ~(unint64_t)*(_DWORD *)(v5 + 80))) & ~v7)) & ~v24)) & ~v10)) & ~v12)) & ~v17)) & ~v19)) & ~v20)) & 0xFFFFFFFFFFFFFFF8)
         + 40) & ~v22)) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18
    || v33 != 0
    || v23 > 7)
  {
    v36 = *a2;
    *a1 = *a2;
    v37 = v36 + (((v23 | 7) + 16) & ~(unint64_t)(v23 | 7));
    swift_retain();
  }
  else
  {
    __n = v32;
    v74 = v32 + 7;
    v75 = *(_QWORD *)(v21 + 64) + 7;
    v38 = ~(unint64_t)*(_DWORD *)(v5 + 80);
    v39 = ~(unint64_t)*(_DWORD *)(v6 + 80);
    v66 = ~v24;
    v67 = ~v10;
    v68 = ~v12;
    v69 = ~v17;
    v71 = ~v19;
    v72 = ~v20;
    v73 = ~v22;
    v70 = *(_QWORD *)(v16 + 64) + v19;
    v40 = v82;
    v83 = v31;
    v41 = *(_QWORD *)(v11 + 64) + v17;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v40);
    v42 = ((unint64_t)a1 + v26) & v38;
    v43 = ((unint64_t)a2 + v26) & v38;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 16))(v42, v43, v86);
    v44 = (v42 + v27) & v39;
    v45 = (v43 + v27) & v39;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v81 + 16))(v44, v45, v90);
    v46 = (v44 + v28) & v66;
    v47 = (v45 + v28) & v66;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 16))(v46, v47, v89);
    v48 = (v46 + v29) & v67;
    v49 = (v47 + v29) & v67;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v80 + 16))(v48, v49, v88);
    v50 = (v48 + v30) & v68;
    v51 = (v49 + v30) & v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v50, v51, v87);
    v52 = (v50 + v41) & v69;
    v53 = (v51 + v41) & v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v52, v53, v77);
    v54 = (v52 + v70) & v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v54, (v53 + v70) & v71, v79);
    v55 = (void *)((v54 + v83) & v72);
    v56 = (const void *)((((v53 + v70) & v71) + v83) & v72);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48))(v56, 1, v91))
    {
      memcpy(v55, v56, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v94 + 16))(v55, v56, v91);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v55, 0, 1, v91);
    }
    v57 = ((unint64_t)v55 + v74) & 0xFFFFFFFFFFFFFFF8;
    v58 = ((unint64_t)v56 + v74) & 0xFFFFFFFFFFFFFFF8;
    v59 = *(_QWORD *)(v58 + 24);
    *(_QWORD *)(v57 + 24) = v59;
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
    (**(void (***)(unint64_t, unint64_t))(v59 - 8))(v57, v58);
    v60 = (v57 + v22 + 40) & v73;
    v61 = (v58 + v22 + 40) & v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v60, v61, v92);
    v62 = *(void **)((v75 + v61) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)((v75 + v60) & 0xFFFFFFFFFFFFF8) = v62;
    v63 = v62;
    return a1;
  }
  return (uint64_t *)v37;
}

void sub_2362B09A0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(a2[6] - 8);
  v16 = (v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t))(v15 + 8))(v16);
  v17 = *(_QWORD *)(v15 + 64);
  v18 = *(_QWORD *)(a2[7] - 8);
  v19 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v19);
  v20 = *(_QWORD *)(v18 + 64);
  v21 = *(_QWORD *)(a2[8] - 8);
  v22 = (v19 + v20 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  (*(void (**)(unint64_t))(v21 + 8))(v22);
  v23 = *(_QWORD *)(a2[9] - 8);
  v24 = (v22 + *(_QWORD *)(v21 + 64) + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  (*(void (**)(unint64_t))(v23 + 8))(v24);
  v25 = *(_QWORD *)(v23 + 64);
  v26 = a2[10];
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (v24 + v25 + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26))
    (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v28, v26);
  v29 = v28 + *(_QWORD *)(v27 + 64);
  if (!*(_DWORD *)(v27 + 84))
    ++v29;
  v30 = (v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v30);
  v31 = *(_QWORD *)(a2[11] - 8);
  v32 = (v30 + *(unsigned __int8 *)(v31 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  (*(void (**)(unint64_t))(v31 + 8))(v32);

}

uint64_t sub_2362B0B90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  int v55;
  uint64_t v56;
  size_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  id v69;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v34, v35);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = *(_QWORD *)(a3[8] - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = v36 + v38;
  v40 = (v39 + v34) & ~v38;
  v41 = (v39 + v35) & ~v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v40, v41);
  v42 = *(_QWORD *)(v37 + 64);
  v43 = *(_QWORD *)(a3[9] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = (v45 + v40) & ~v44;
  v47 = (v45 + v41) & ~v44;
  (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64);
  v49 = a3[10];
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(unsigned __int8 *)(v50 + 80);
  v52 = v48 + v51;
  v53 = (void *)((v52 + v46) & ~v51);
  v54 = (const void *)((v52 + v47) & ~v51);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v54, 1, v49))
  {
    v55 = *(_DWORD *)(v50 + 84);
    v56 = *(_QWORD *)(v50 + 64);
    if (v55)
      v57 = *(_QWORD *)(v50 + 64);
    else
      v57 = v56 + 1;
    memcpy(v53, v54, v57);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 16))(v53, v54, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v49);
    v55 = *(_DWORD *)(v50 + 84);
    v56 = *(_QWORD *)(v50 + 64);
  }
  if (v55)
    v58 = v56;
  else
    v58 = v56 + 1;
  v59 = ((unint64_t)v53 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = ((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(_QWORD *)(v60 + 24);
  *(_QWORD *)(v59 + 24) = v61;
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  (**(void (***)(unint64_t, unint64_t))(v61 - 8))(v59, v60);
  v62 = *(_QWORD *)(a3[11] - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (v63 + 40 + v59) & ~v63;
  v65 = (v63 + 40 + v60) & ~v63;
  (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v64, v65);
  v66 = *(_QWORD *)(v62 + 64) + 7;
  v67 = (_QWORD *)((v66 + v64) & 0xFFFFFFFFFFFFF8);
  v68 = *(void **)((v66 + v65) & 0xFFFFFFFFFFFFF8);
  *v67 = v68;
  v69 = v68;
  return a1;
}

uint64_t sub_2362B0E74(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  size_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **v66;
  void *v67;
  void *v68;
  id v69;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v34, v35);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = *(_QWORD *)(a3[8] - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = v36 + v38;
  v40 = (v39 + v34) & ~v38;
  v41 = (v39 + v35) & ~v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 24))(v40, v41);
  v42 = *(_QWORD *)(v37 + 64);
  v43 = *(_QWORD *)(a3[9] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = (v45 + v40) & ~v44;
  v47 = (v45 + v41) & ~v44;
  (*(void (**)(uint64_t, uint64_t))(v43 + 24))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64);
  v49 = a3[10];
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(unsigned __int8 *)(v50 + 80);
  v52 = v48 + v51;
  v53 = (void *)((v52 + v46) & ~v51);
  v54 = (void *)((v52 + v47) & ~v51);
  v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  LODWORD(v47) = v55(v53, 1, v49);
  v56 = v55(v54, 1, v49);
  if ((_DWORD)v47)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v53, v54, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v49);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v53, v54, v49);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v53, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v57 = *(_QWORD *)(v50 + 64);
  else
    v57 = *(_QWORD *)(v50 + 64) + 1;
  memcpy(v53, v54, v57);
LABEL_10:
  if (*(_DWORD *)(v50 + 84))
    v58 = *(_QWORD *)(v50 + 64);
  else
    v58 = *(_QWORD *)(v50 + 64) + 1;
  v59 = (uint64_t *)(((unint64_t)v53 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  v60 = (uint64_t *)(((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v59, v60);
  v61 = *(_QWORD *)(a3[11] - 8);
  v62 = *(unsigned __int8 *)(v61 + 80);
  v63 = ((unint64_t)v59 + v62 + 40) & ~v62;
  v64 = ((unint64_t)v60 + v62 + 40) & ~v62;
  (*(void (**)(uint64_t, uint64_t))(v61 + 24))(v63, v64);
  v65 = *(_QWORD *)(v61 + 64) + 7;
  v66 = (void **)((v65 + v63) & 0xFFFFFFFFFFFFFFF8);
  v67 = *(void **)((v65 + v64) & 0xFFFFFFFFFFFFF8);
  v68 = *v66;
  *v66 = v67;
  v69 = v67;

  return a1;
}

uint64_t sub_2362B118C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  int v55;
  uint64_t v56;
  size_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v34, v35);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = *(_QWORD *)(a3[8] - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = v36 + v38;
  v40 = (v39 + v34) & ~v38;
  v41 = (v39 + v35) & ~v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 32))(v40, v41);
  v42 = *(_QWORD *)(v37 + 64);
  v43 = *(_QWORD *)(a3[9] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = (v45 + v40) & ~v44;
  v47 = (v45 + v41) & ~v44;
  (*(void (**)(uint64_t, uint64_t))(v43 + 32))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64);
  v49 = a3[10];
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(unsigned __int8 *)(v50 + 80);
  v52 = v48 + v51;
  v53 = (void *)((v52 + v46) & ~v51);
  v54 = (const void *)((v52 + v47) & ~v51);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v54, 1, v49))
  {
    v55 = *(_DWORD *)(v50 + 84);
    v56 = *(_QWORD *)(v50 + 64);
    if (v55)
      v57 = *(_QWORD *)(v50 + 64);
    else
      v57 = v56 + 1;
    memcpy(v53, v54, v57);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v53, v54, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v49);
    v55 = *(_DWORD *)(v50 + 84);
    v56 = *(_QWORD *)(v50 + 64);
  }
  if (v55)
    v58 = v56;
  else
    v58 = v56 + 1;
  v59 = ((unint64_t)v53 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = ((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(_OWORD *)v60;
  v62 = *(_OWORD *)(v60 + 16);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_OWORD *)v59 = v61;
  *(_OWORD *)(v59 + 16) = v62;
  v63 = *(_QWORD *)(a3[11] - 8);
  v64 = *(unsigned __int8 *)(v63 + 80);
  v65 = (v64 + 40 + v59) & ~v64;
  v66 = (v64 + 40 + v60) & ~v64;
  (*(void (**)(uint64_t, uint64_t))(v63 + 32))(v65, v66);
  *(_QWORD *)((*(_QWORD *)(v63 + 64) + 7 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v63 + 64) + 7 + v66) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2362B1458(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  size_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void **v68;
  void *v69;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 40))(v28, v29);
  v30 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(a3[7] - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v30 + v32;
  v34 = (v33 + v28) & ~v32;
  v35 = (v33 + v29) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v31 + 40))(v34, v35);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = *(_QWORD *)(a3[8] - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = v36 + v38;
  v40 = (v39 + v34) & ~v38;
  v41 = (v39 + v35) & ~v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 40))(v40, v41);
  v42 = *(_QWORD *)(v37 + 64);
  v43 = *(_QWORD *)(a3[9] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = (v45 + v40) & ~v44;
  v47 = (v45 + v41) & ~v44;
  (*(void (**)(uint64_t, uint64_t))(v43 + 40))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64);
  v49 = a3[10];
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(unsigned __int8 *)(v50 + 80);
  v52 = v48 + v51;
  v53 = (void *)((v52 + v46) & ~v51);
  v54 = (void *)((v52 + v47) & ~v51);
  v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  LODWORD(v47) = v55(v53, 1, v49);
  v56 = v55(v54, 1, v49);
  if ((_DWORD)v47)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 32))(v53, v54, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v49);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 40))(v53, v54, v49);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v53, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v57 = *(_QWORD *)(v50 + 64);
  else
    v57 = *(_QWORD *)(v50 + 64) + 1;
  memcpy(v53, v54, v57);
LABEL_10:
  if (*(_DWORD *)(v50 + 84))
    v58 = *(_QWORD *)(v50 + 64);
  else
    v58 = *(_QWORD *)(v50 + 64) + 1;
  v59 = ((unint64_t)v53 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = ((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v59);
  v61 = *(_OWORD *)v60;
  v62 = *(_OWORD *)(v60 + 16);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_OWORD *)v59 = v61;
  *(_OWORD *)(v59 + 16) = v62;
  v63 = *(_QWORD *)(a3[11] - 8);
  v64 = *(unsigned __int8 *)(v63 + 80);
  v65 = (v64 + 40 + v59) & ~v64;
  v66 = (v64 + 40 + v60) & ~v64;
  (*(void (**)(uint64_t, uint64_t))(v63 + 40))(v65, v66);
  v67 = *(_QWORD *)(v63 + 64) + 7;
  v68 = (void **)((v67 + v65) & 0xFFFFFFFFFFFFFFF8);
  v69 = *v68;
  *v68 = *(void **)((v67 + v66) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_2362B1778(unint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t (*v36)(unint64_t, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(a3[4] - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 > v8)
    v8 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = *(_DWORD *)(v11 + 84);
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15 > v13)
    v13 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(a3[7] - 8);
  v17 = *(_DWORD *)(v16 + 84);
  if (v17 > v13)
    v13 = *(_DWORD *)(v16 + 84);
  v18 = *(_QWORD *)(a3[8] - 8);
  v19 = *(_DWORD *)(v18 + 84);
  if (v19 <= v13)
    v20 = v13;
  else
    v20 = *(_DWORD *)(v18 + 84);
  v21 = *(_QWORD *)(a3[9] - 8);
  v22 = *(_DWORD *)(v21 + 84);
  if (v22 <= v20)
    v23 = v20;
  else
    v23 = *(_DWORD *)(v21 + 84);
  v24 = *(_QWORD *)(a3[10] - 8);
  v25 = *(unsigned int *)(v24 + 84);
  if ((_DWORD)v25)
    v26 = v25 - 1;
  else
    v26 = 0;
  if (v26 <= v23)
    v27 = v23;
  else
    v27 = v26;
  v28 = *(_QWORD *)(a3[11] - 8);
  v29 = *(unsigned int *)(v28 + 84);
  if (v27 <= v29)
    v27 = *(_DWORD *)(v28 + 84);
  if (v27 <= 0x7FFFFFFF)
    v30 = 0x7FFFFFFF;
  else
    v30 = v27;
  if ((_DWORD)v25)
    v31 = *(_QWORD *)(v24 + 64);
  else
    v31 = *(_QWORD *)(v24 + 64) + 1;
  if (!a2)
    return 0;
  v60 = *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80);
  v61 = *(unsigned __int8 *)(v6 + 80);
  v58 = *(_QWORD *)(v6 + 64);
  v59 = *(unsigned __int8 *)(v9 + 80);
  v57 = *(_QWORD *)(v9 + 64);
  v54 = *(_QWORD *)(v11 + 64) + *(unsigned __int8 *)(v14 + 80);
  v55 = *(unsigned __int8 *)(v14 + 80);
  v52 = *(_QWORD *)(v14 + 64) + *(unsigned __int8 *)(v16 + 80);
  v53 = *(unsigned __int8 *)(v16 + 80);
  v50 = *(_QWORD *)(v16 + 64) + *(unsigned __int8 *)(v18 + 80);
  v51 = *(unsigned __int8 *)(v18 + 80);
  v48 = *(_QWORD *)(v18 + 64) + *(unsigned __int8 *)(v21 + 80);
  v49 = *(unsigned __int8 *)(v21 + 80);
  v46 = *(_QWORD *)(v21 + 64) + *(unsigned __int8 *)(v24 + 80);
  v47 = *(unsigned __int8 *)(v24 + 80);
  v45 = v31 + 7;
  v32 = *(unsigned __int8 *)(v28 + 80);
  v44 = v32 + 40;
  v56 = *(unsigned __int8 *)(v11 + 80);
  if (v30 < a2)
  {
    if (((((*(_QWORD *)(v28 + 64)
           + ((v44
             + ((v45
               + ((v46
                 + ((v48
                   + ((v50 + ((v52 + ((v54 + ((v57 + v56 + ((v58 + v59 + (v60 & ~v61)) & ~v59)) & ~v56)) & ~v55)) & ~v53)) & ~v51)) & ~v49)) & ~v47)) & 0xFFFFFFFFFFFFFFF8)) & ~v32)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v33 = 2;
    else
      v33 = a2 - v30 + 1;
    if (v33 >= 0x10000)
      v34 = 4;
    else
      v34 = 2;
    if (v33 < 0x100)
      v34 = 1;
    if (v33 >= 2)
      v35 = v34;
    else
      v35 = 0;
    __asm { BR              X20 }
  }
  if (v5 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
    v38 = a3[2];
    v37 = a1;
    v29 = *(unsigned int *)(v4 + 84);
    return v36(v37, v29, v38);
  }
  v37 = (v60 + a1) & ~v61;
  if (v7 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v29 = *(unsigned int *)(v6 + 84);
    v38 = a3[3];
    return v36(v37, v29, v38);
  }
  v37 = (v37 + v58 + v59) & ~v59;
  if (v10 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
    v29 = *(unsigned int *)(v9 + 84);
    v38 = a3[4];
    return v36(v37, v29, v38);
  }
  v37 = (v37 + v57 + v56) & ~v56;
  if (v12 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
    v29 = *(unsigned int *)(v11 + 84);
    v38 = a3[5];
    return v36(v37, v29, v38);
  }
  v37 = (v54 + v37) & ~v55;
  if (v15 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    v29 = *(unsigned int *)(v14 + 84);
    v38 = a3[6];
    return v36(v37, v29, v38);
  }
  v37 = (v52 + v37) & ~v53;
  if (v17 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v16 + 48);
    v29 = *(unsigned int *)(v16 + 84);
    v38 = a3[7];
    return v36(v37, v29, v38);
  }
  v37 = (v50 + v37) & ~v51;
  if (v19 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48);
    v29 = *(unsigned int *)(v18 + 84);
    v38 = a3[8];
    return v36(v37, v29, v38);
  }
  v37 = (v48 + v37) & ~v49;
  if (v22 == v30)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v21 + 48);
    v29 = *(unsigned int *)(v21 + 84);
    v38 = a3[9];
    return v36(v37, v29, v38);
  }
  v40 = (v46 + v37) & ~v47;
  if (v26 == v30)
  {
    if (v25 < 2)
      return 0;
    v43 = (*(uint64_t (**)(unint64_t, uint64_t))(v24 + 48))(v40, v25);
    if (v43 >= 2)
      return v43 - 1;
    else
      return 0;
  }
  else
  {
    v41 = (v45 + v40) & 0xFFFFFFFFFFFFFFF8;
    if ((v27 & 0x80000000) != 0)
    {
      v37 = (v44 + v41) & ~v32;
      v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v28 + 48);
      v38 = a3[11];
      return v36(v37, v29, v38);
    }
    v42 = *(_QWORD *)(v41 + 24);
    if (v42 >= 0xFFFFFFFF)
      LODWORD(v42) = -1;
    return (v42 + 1);
  }
}

void sub_2362B1C74(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unsigned int v28;
  unsigned int v29;
  int v30;

  v5 = 0;
  v6 = *(_QWORD *)(a4[2] - 8);
  v7 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v7 + 84) <= *(_DWORD *)(v6 + 84))
    v8 = *(_DWORD *)(v6 + 84);
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v9 + 84) > v8)
    v8 = *(_DWORD *)(v9 + 84);
  v10 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v10 + 84) > v8)
    v8 = *(_DWORD *)(v10 + 84);
  v11 = *(_QWORD *)(a4[6] - 8);
  if (*(_DWORD *)(v11 + 84) > v8)
    v8 = *(_DWORD *)(v11 + 84);
  v12 = *(_QWORD *)(a4[7] - 8);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(_QWORD *)(v9 + 64)
      + v13
      + ((*(_QWORD *)(v7 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  if (*(_DWORD *)(v12 + 84) > v8)
    v8 = *(_DWORD *)(v12 + 84);
  v15 = *(_QWORD *)(a4[8] - 8);
  if (*(_DWORD *)(v15 + 84) > v8)
    v8 = *(_DWORD *)(v15 + 84);
  v16 = *(_QWORD *)(a4[9] - 8);
  if (*(_DWORD *)(v16 + 84) > v8)
    v8 = *(_DWORD *)(v16 + 84);
  v17 = *(_QWORD *)(a4[10] - 8);
  v18 = *(_DWORD *)(v17 + 84);
  if (v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  if (v19 <= v8)
    v20 = v8;
  else
    v20 = v19;
  v21 = *(_QWORD *)(a4[11] - 8);
  v22 = *(_DWORD *)(v21 + 84);
  if (v20 > v22)
    v22 = v20;
  if (v22 <= 0x7FFFFFFF)
    v23 = 0x7FFFFFFF;
  else
    v23 = v22;
  v25 = *(_QWORD *)(v17 + 64);
  if (!v18)
    ++v25;
  v26 = *(unsigned __int8 *)(v21 + 80);
  v24 = *(unsigned __int8 *)(v17 + 80);
  v27 = ((*(_QWORD *)(v21 + 64)
        + ((v26
          + 40
          + ((v25
            + 7
            + ((*(_QWORD *)(v16 + 64)
              + v24
              + ((*(_QWORD *)(v15 + 64)
                + *(unsigned __int8 *)(v16 + 80)
                + ((*(_QWORD *)(v12 + 64)
                  + *(unsigned __int8 *)(v15 + 80)
                  + ((*(_QWORD *)(v11 + 64)
                    + *(unsigned __int8 *)(v12 + 80)
                    + ((*(_QWORD *)(v10 + 64) + *(unsigned __int8 *)(v11 + 80) + (v14 & ~v13)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))) & ~v24)) & 0xFFFFFFFFFFFFFFF8)) & ~v26)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v23 < a3)
  {
    if ((_DWORD)v27)
      v28 = 2;
    else
      v28 = a3 - v23 + 1;
    if (v28 >= 0x10000)
      v5 = 4;
    else
      v5 = 2;
    if (v28 < 0x100)
      v5 = 1;
    if (v28 < 2)
      v5 = 0;
  }
  if (a2 > v23)
  {
    if ((_DWORD)v27)
    {
      v29 = ~v23 + a2;
      v30 = v5;
      bzero(a1, v27);
      v5 = v30;
      *a1 = v29;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

uint64_t sub_2362B1F84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;

  result = *(_QWORD *)(v24 - 96);
  *(_BYTE *)(result + v20) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v12 == v13)
    {
      v27 = *(_QWORD *)(v24 - 112);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 120) + 56);
      result = *(_QWORD *)(v24 - 96);
      v29 = v12;
      return v28(result, a1, v29, v27);
    }
    result = (*(_QWORD *)(v24 - 128) + *(_QWORD *)(v24 - 96)) & v16;
    v29 = *(unsigned int *)(v24 - 100);
    if ((_DWORD)v29 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v27 = *(_QWORD *)(v24 - 136);
      return v28(result, a1, v29, v27);
    }
    result = (result + *(_QWORD *)(v24 - 152) + v15) & v19;
    v29 = *(unsigned int *)(v24 - 140);
    if ((_DWORD)v29 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 56);
      v27 = *(_QWORD *)(v24 - 160);
      return v28(result, a1, v29, v27);
    }
    result = (result + v52 + v14) & v33;
    v29 = *(unsigned int *)(v24 - 164);
    if ((_DWORD)v29 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v27 = v51;
      return v28(result, a1, v29, v27);
    }
    result = (v49 + result) & a2;
    v29 = v50;
    if (v50 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v27 = v48;
      return v28(result, a1, v29, v27);
    }
    result = (v47 + result) & v8;
    if ((_DWORD)v18 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v29 = v18;
      v27 = v46;
      return v28(result, a1, v29, v27);
    }
    result = (v45 + result) & v11;
    if ((_DWORD)v17 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 56);
      v29 = v17;
      v27 = v43;
      return v28(result, a1, v29, v27);
    }
    result = (v42 + result) & v9;
    v29 = v44;
    if (v44 == v13)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v27 = v41;
      return v28(result, a1, v29, v27);
    }
    result = (v40 + result) & v32;
    if (a3 == v13)
    {
      a1 = (a1 + 1);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v29 = v38;
      v27 = v39;
      return v28(result, a1, v29, v27);
    }
    v30 = (v37 + result) & 0xFFFFFFFFFFFFFFF8;
    if (v10 < 0)
    {
      result = (v34 + v30) & v31;
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v29 = v35;
      v27 = v36;
      return v28(result, a1, v29, v27);
    }
    if ((a1 & 0x80000000) != 0)
    {
      *(_OWORD *)(v30 + 8) = 0u;
      *(_OWORD *)(v30 + 24) = 0u;
      *(_QWORD *)v30 = a1 ^ 0x80000000;
    }
    else
    {
      *(_QWORD *)(v30 + 24) = (a1 - 1);
    }
  }
  return result;
}

void sub_2362B1FFC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(*(_QWORD *)(v3 - 96) + v2) = 0;
  if (!a2)
    JUMPOUT(0x2362B2008);
  JUMPOUT(0x2362B1FB8);
}

void type metadata accessor for APPolicyEngine.Configuration()
{
  JUMPOUT(0x23B7EF12CLL);
}

void sub_2362B21F4(uint64_t a1)
{
  sub_23625B2F0(a1);
}

void sub_2362B2234(uint64_t a1@<X8>)
{
  sub_2362B01B8(a1);
}

void sub_2362B2248(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_23625B274(a1, a2);
}

void sub_2362B2268()
{
  sub_2362B35A4();
}

void sub_2362B2280()
{
  sub_2362B379C();
}

double sub_2362B2298(_QWORD *a1)
{
  void *v1;
  double v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  double v13;
  double v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(_QWORD))(a1[5] + 16))(a1[3]);
  if (v1)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
    v5 = v1;
    v6 = v1;
    v7 = sub_2362CB47C();
    v8 = sub_2362CB830();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v9 = 136315394;
      v10 = sub_2362CBD1C();
      sub_2362AB670(v10, v11, &v19);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      v12 = v1;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v16 = v18;

      _os_log_impl(&dword_23624C000, v7, v8, "No authentication age for underlying provider %s: %@", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v17, -1, -1);
      MEMORY[0x23B7EF258](v9, -1, -1);
    }
    else
    {

    }
    v13 = (*(double (**)(_QWORD))(a1[4] + 8))(a1[2]);

  }
  else
  {
    v13 = v3;
    (*(void (**)(_QWORD))(a1[4] + 8))(a1[2]);
    if (v14 < v13)
      return v14;
  }
  return v13;
}

double sub_2362B26D8(_QWORD *a1)
{
  void *v1;
  double v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  double v13;
  double v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(_QWORD))(a1[5] + 24))(a1[3]);
  if (v1)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v4 = sub_2362CB494();
    __swift_project_value_buffer(v4, (uint64_t)qword_2563DB5D8);
    v5 = v1;
    v6 = v1;
    v7 = sub_2362CB47C();
    v8 = sub_2362CB818();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v9 = 136315394;
      v10 = sub_2362CBD1C();
      sub_2362AB670(v10, v11, &v19);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      v12 = v1;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v16 = v18;

      _os_log_impl(&dword_23624C000, v7, v8, "No fence age for underlying provider %s: %@", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v17, -1, -1);
      MEMORY[0x23B7EF258](v9, -1, -1);
    }
    else
    {

    }
    v13 = (*(double (**)(_QWORD))(a1[4] + 24))(a1[2]);

  }
  else
  {
    v13 = v3;
    (*(void (**)(_QWORD))(a1[4] + 24))(a1[2]);
    if (v14 < v13)
      return v14;
  }
  return v13;
}

uint64_t sub_2362B2B18(_QWORD *a1)
{
  (*(void (**)(_QWORD))(a1[4] + 32))(a1[2]);
  return (*(uint64_t (**)(_QWORD))(a1[5] + 32))(a1[3]);
}

uint64_t sub_2362B2B5C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, _QWORD, void (*)(), char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;

  v28 = a5;
  v29 = a6;
  v33 = a4;
  v31 = a2;
  v32 = a3;
  v30 = a1;
  v9 = *(a7 - 1);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](a1, a2);
  v12 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v11, v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v7 + *(int *)(v19 + 52), v14);
  (*(void (**)(char *, uint64_t, _QWORD *))(v9 + 16))(v12, v7, a7);
  v20 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a7[2];
  *((_QWORD *)v22 + 3) = v14;
  v23 = a7[5];
  *((_QWORD *)v22 + 4) = a7[4];
  *((_QWORD *)v22 + 5) = v23;
  (*(void (**)(char *, char *, _QWORD *))(v9 + 32))(&v22[v20], v12, a7);
  v24 = &v22[v21];
  v25 = v29;
  *(_QWORD *)v24 = v28;
  *((_QWORD *)v24 + 1) = v25;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, void (*)(), char *, uint64_t, uint64_t))(v23 + 40);
  swift_retain();
  v26(v30, v31, v32, v33, sub_2362B3C84, v22, v14, v23);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_2362B2CE0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 40) + 8))(*(_QWORD *)(a1 + 24));
}

double sub_2362B2D14(_QWORD *a1)
{
  return sub_2362B2298(a1);
}

double sub_2362B2D28(_QWORD *a1)
{
  return sub_2362B26D8(a1);
}

uint64_t sub_2362B2D44(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_2563D5A18 != -1)
    a1 = swift_once();
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 24) + 104);
  MEMORY[0x24BDAC7A8](a1, a2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_2362AABA8(v3, sub_2362B2EA8);
  os_unfair_lock_unlock(v2 + 4);
  swift_release();
  v4 = swift_release();
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 32) + 104);
  MEMORY[0x24BDAC7A8](v4, v6);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  sub_2362AABA8(v7, sub_2362B3D30);
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  return swift_release();
}

uint64_t sub_2362B2EA8()
{
  uint64_t v0;

  return sub_2362AA3F0(*(_QWORD *)(v0 + 16), **(_QWORD **)(v0 + 24));
}

ValueMetadata *type metadata accessor for DefaultsAuthCacheStore()
{
  return &type metadata for DefaultsAuthCacheStore;
}

uint64_t sub_2362B2ED4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2362B2EDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2362B2F68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_2362B3038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_2362B3090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2362B30FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2362B3168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2362B31D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2362B3240(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2362B331C + 4 * byte_2362D0000[v17 - 1]))();
}

void sub_2362B3398(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for SelfCachingAuthProvider()
{
  JUMPOUT(0x23B7EF12CLL);
}

void sub_2362B35A4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  __uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  if (qword_2563D5A18 != -1)
    swift_once();
  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 24) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362B3A18((uint64_t *)&v10);
  if (v0)
  {
    os_unfair_lock_unlock(v1 + 4);
    __break(1u);
  }
  else
  {
    v2 = v10;
    os_unfair_lock_unlock(v1 + 4);
    swift_release();
    swift_release();
    if (!v2)
    {
      v4 = sub_2362CB698();
      v6 = 0xD000000000000036;
      v7 = 0x80000002362D7A60;
      v8 = 2;
      v9 = 22;
      goto LABEL_10;
    }
    v3 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
    if (!v3)
    {
      v4 = sub_2362CB698();
      v6 = 0xD000000000000034;
      v7 = 0x80000002362D7A20;
      v8 = 2;
      v9 = 26;
      goto LABEL_10;
    }
    if (v3 < v2)
    {
      v4 = sub_2362CB698();
      v6 = 0xD000000000000022;
      v7 = 0x80000002362D79F0;
      v8 = 22;
      v9 = 30;
LABEL_10:
      sub_236294D50(v4, v5, v8, v6, v7, v9, 0xD000000000000013, 0x80000002362D7000);
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
}

void sub_2362B379C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  __uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  if (qword_2563D5A18 != -1)
    swift_once();
  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 32) + 104);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362B3A18((uint64_t *)&v10);
  if (v0)
  {
    os_unfair_lock_unlock(v1 + 4);
    __break(1u);
  }
  else
  {
    v2 = v10;
    os_unfair_lock_unlock(v1 + 4);
    swift_release();
    swift_release();
    v3 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
    if (!v3)
    {
      v4 = sub_2362CB698();
      v8 = 0xD000000000000034;
      v6 = 0x80000002362D7A20;
      v7 = 2;
      v9 = 54;
      goto LABEL_8;
    }
    if (v3 < v2)
    {
      v4 = sub_2362CB698();
      v6 = 0x80000002362D79F0;
      v7 = 22;
      v8 = 0xD000000000000022;
      v9 = 58;
LABEL_8:
      sub_236294D50(v4, v5, v7, v8, v6, v9, 0x65674165636E6566, 0xEA00000000002928);
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
}

uint64_t sub_2362B3930()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  __uint64_t v5;

  if (qword_2563D5A18 != -1)
    swift_once();
  v0 = qword_2563DB628;
  v5 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 32) + 104);
  MEMORY[0x24BDAC7A8](v5, v2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362AABA8(v3, sub_2362B3D30);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return swift_release();
}

uint64_t sub_2362B3A18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2362AA50C();
  *a1 = result;
  return result;
}

uint64_t sub_2362B3A3C()
{
  uint64_t v0;
  __uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_2563D5A18 != -1)
    swift_once();
  v0 = qword_2563DB628;
  v1 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 24) + 104);
  MEMORY[0x24BDAC7A8](v1, v3);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_2362AABA8(v4, sub_2362B3D30);
  os_unfair_lock_unlock(v2 + 4);
  swift_release();
  v5 = swift_release();
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(qword_2563DB628 + 32) + 104);
  MEMORY[0x24BDAC7A8](v5, v7);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  sub_2362AABA8(v8, sub_2362B3D30);
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return swift_release();
}

void sub_2362B3BA8()
{
  type metadata accessor for SelfCachingAuthProvider();
}

uint64_t sub_2362B3BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 52));
  swift_release();
  return swift_deallocObject();
}

void sub_2362B3C84()
{
  type metadata accessor for SelfCachingAuthProvider();
}

uint64_t sub_2362B3CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(_QWORD, uint64_t);
  uint64_t v6;

  v4 = *(uint64_t (**)(_QWORD, uint64_t))(v2
                                                 + ((*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64)
                                                   + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80))
                                                   + 7) & 0xFFFFFFFFFFFFFFF8));
  if ((v3 & 1) != 0)
    (*(void (**)())(v6 + 16))();
  return v4(v3 & 1, v1);
}

uint64_t sub_2362B3D30()
{
  return sub_2362B2EA8();
}

uint64_t sub_2362B3D48()
{
  sub_2362CBC8C();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  sub_2362CB428();
  sub_236288674(&qword_2563D77F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2362CB62C();
  return sub_2362CBCBC();
}

uint64_t sub_2362B3E14()
{
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  sub_2362CB428();
  sub_236288674(&qword_2563D77F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_2362CB62C();
}

uint64_t sub_2362B3ED0()
{
  sub_2362CBC8C();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2362CB710();
  swift_bridgeObjectRelease();
  sub_2362CB428();
  sub_236288674(&qword_2563D77F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2362CB62C();
  return sub_2362CBCBC();
}

id sub_2362B3F98()
{
  id result;

  result = APGetExtensionMonitorServiceInterface();
  qword_2563DB5B8 = (uint64_t)result;
  return result;
}

void sub_2362B3FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t *v65;
  unint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88[3];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v78 = type metadata accessor for ExtensionMonitorPair();
  v80 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v4);
  v79 = (uint64_t *)((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_2362CB428();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v83 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v87 = (char *)&v76 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v76 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v76 - v19;
  if (qword_2563D4178 != -1)
    swift_once();
  v21 = sub_2362CB494();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2563DB5D8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v86 = a1;
  v23(v20, a1, v6);
  v23(v17, a2, v6);
  v85 = v22;
  v24 = sub_2362CB47C();
  v25 = sub_2362CB848();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v82 = a2;
    v27 = v26;
    v77 = swift_slowAlloc();
    v88[0] = v77;
    *(_DWORD *)v27 = 136446466;
    v76 = v27 + 4;
    sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v84 = v23;
    v28 = sub_2362CBBC0();
    v91 = sub_2362AB670(v28, v29, v88);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v20, v6);
    *(_WORD *)(v27 + 12) = 2082;
    v23 = v84;
    v31 = sub_2362CBBC0();
    v91 = sub_2362AB670(v31, v32, v88);
    v33 = v30;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v30(v17, v6);
    _os_log_impl(&dword_23624C000, v24, v25, "server begin monitoring extension %{public}s monitor %{public}s", (uint8_t *)v27, 0x16u);
    v34 = v77;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v34, -1, -1);
    v35 = v27;
    a2 = v82;
    MEMORY[0x23B7EF258](v35, -1, -1);
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v20, v6);
    v33(v17, v6);
  }

  v36 = v86;
  v37 = sub_236261124(v86);
  v39 = v87;
  if (!v38)
    goto LABEL_11;
  v40 = v37;
  v41 = v38;
  v42 = sub_236260C14(v36);
  if (!v43)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v55 = v83;
    v23(v83, v36, v6);
    v56 = sub_2362CB47C();
    v57 = sub_2362CB848();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v88[0] = v59;
      *(_DWORD *)v58 = 136446210;
      sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v60 = sub_2362CBBC0();
      v91 = sub_2362AB670(v60, v61, v88);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      v33(v55, v6);
      _os_log_impl(&dword_23624C000, v56, v57, "could not find container bundleID for extension %{public}s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v59, -1, -1);
      MEMORY[0x23B7EF258](v58, -1, -1);
    }
    else
    {
      v33(v55, v6);
    }

    return;
  }
  v44 = v42;
  v45 = v43;
  v84 = v23;
  v23(v39, a2, v6);
  swift_bridgeObjectRetain_n();
  v46 = sub_2362CB47C();
  v47 = sub_2362CB848();
  v48 = v47;
  if (os_log_type_enabled(v46, v47))
  {
    v49 = swift_slowAlloc();
    v82 = a2;
    v50 = v49;
    v85 = swift_slowAlloc();
    v88[0] = v85;
    *(_DWORD *)v50 = 136315394;
    v77 = v50 + 4;
    sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    LODWORD(v83) = v48;
    v51 = sub_2362CBBC0();
    v91 = sub_2362AB670(v51, v52, v88);
    v86 = v40;
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    v33(v39, v6);
    *(_WORD *)(v50 + 12) = 2080;
    swift_bridgeObjectRetain();
    v91 = sub_2362AB670(v44, v45, v88);
    v40 = v86;
    sub_2362CB9C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23624C000, v46, (os_log_type_t)v83, "monitor %s is a monitor for %s", (uint8_t *)v50, 0x16u);
    v53 = v85;
    swift_arrayDestroy();
    MEMORY[0x23B7EF258](v53, -1, -1);
    v54 = v50;
    a2 = v82;
    MEMORY[0x23B7EF258](v54, -1, -1);

  }
  else
  {
    v33(v39, v6);

    swift_bridgeObjectRelease_n();
  }
  v62 = v81;
  v63 = v6;
  v64 = v79;
  v84((char *)v79 + *(int *)(v78 + 24), a2, v63);
  *v64 = v44;
  v64[1] = v45;
  v64[2] = v40;
  v64[3] = v41;
  v65 = (unint64_t *)(v62 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_monitorAssociations);
  swift_beginAccess();
  v66 = *v65;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v65 = v66;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v66 = sub_2362AB450(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
    *v65 = v66;
  }
  v69 = *(_QWORD *)(v66 + 16);
  v68 = *(_QWORD *)(v66 + 24);
  if (v69 >= v68 >> 1)
  {
    v66 = sub_2362AB450(v68 > 1, v69 + 1, 1, v66);
    *v65 = v66;
  }
  *(_QWORD *)(v66 + 16) = v69 + 1;
  sub_2362B6A90((uint64_t)v64, v66+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v69);
  swift_endAccess();
  v70 = MEMORY[0x23B7EF2F4](v62 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_delegate);
  if (v70)
  {
    sub_23624E76C(v70 + OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy, (uint64_t)v88);
    swift_unknownObjectRelease();
    v71 = v89;
    v72 = v90;
    __swift_project_boxed_opaque_existential_1(v88, v89);
    v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72);
    LOBYTE(v72) = sub_23624EC88(v44, v45, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
    v74 = *(void **)(v62 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_remoteMonitor);
    v75 = (void *)sub_2362CB3F8();
    objc_msgSend(v74, sel_extensionMonitorWithUUID_lockedStatusUpdate_, v75, v72 & 1);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2362B4908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v2 = v1;
  v4 = sub_2362CB428();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563D4178 != -1)
    swift_once();
  v9 = sub_2362CB494();
  __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v10 = sub_2362CB47C();
  v11 = sub_2362CB848();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v27 = v1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v26 = a1;
    v15 = v14;
    v29[0] = v14;
    *(_DWORD *)v13 = 136315138;
    sub_236288674((unint64_t *)&qword_2542A52A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v16 = sub_2362CBBC0();
    v28 = sub_2362AB670(v16, v17, v29);
    sub_2362CB9C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl(&dword_23624C000, v10, v11, "server end monitoring %s", v13, 0xCu);
    swift_arrayDestroy();
    v18 = v15;
    a1 = v26;
    MEMORY[0x23B7EF258](v18, -1, -1);
    v19 = v13;
    v2 = v27;
    MEMORY[0x23B7EF258](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  MEMORY[0x24BDAC7A8](v20, v21);
  *(&v25 - 2) = a1;
  v22 = v2 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_monitorAssociations;
  swift_beginAccess();
  result = sub_2362B5C90((uint64_t (*)(unint64_t))sub_2362B635C);
  v24 = *(_QWORD *)(*(_QWORD *)v22 + 16);
  if (v24 < result)
  {
    __break(1u);
  }
  else
  {
    sub_2362B68A4(result, v24);
    return swift_endAccess();
  }
  return result;
}

void sub_2362B4C44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  BOOL v76;
  uint64_t v77;
  _QWORD *v78;
  BOOL v79;
  void *v80;
  _QWORD v81[2];
  char *v82;
  uint64_t v83;
  __int128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98[3];
  uint64_t v99;
  uint64_t v100;

  v6 = type metadata accessor for ExtensionMonitorPair();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (_QWORD *)((char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)v81 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)v81 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v97 = (_QWORD *)((char *)v81 - v21);
  if ((*(_BYTE *)a1 & 6) != 0)
  {
    v96 = *(_QWORD *)(a1 + 8);
    v89 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v22 = MEMORY[0x23B7EF2F4](a2 + 16);
    if (v22)
    {
      v23 = v22;
      v92 = v19;
      v24 = v22 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_delegate;
      v25 = MEMORY[0x23B7EF2F4](v22 + OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_delegate);
      v82 = (char *)v23;
      if (v25)
      {
        sub_23624E76C(v25 + OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy, (uint64_t)v98);
        swift_unknownObjectRelease();
        v26 = v99;
        v27 = v100;
        __swift_project_boxed_opaque_existential_1(v98, v99);
        v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 32))(v26, v27);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      }
      else
      {
        v90 = MEMORY[0x24BEE4B08];
      }
      v28 = MEMORY[0x23B7EF2F4](v24);
      if (v28)
      {
        sub_23624E76C(v28 + OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy, (uint64_t)v98);
        swift_unknownObjectRelease();
        v29 = v99;
        v30 = v100;
        __swift_project_boxed_opaque_existential_1(v98, v99);
        v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 40))(v29, v30);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      }
      else
      {
        v87 = MEMORY[0x24BEE4B08];
      }
      v31 = v11;
      v32 = (uint64_t)v92;
      v33 = &v82[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_monitorAssociations];
      swift_beginAccess();
      v34 = *(_QWORD *)v33;
      v95 = *(_QWORD *)(*(_QWORD *)v33 + 16);
      if (v95)
      {
        v94 = v34 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        v35 = v96;
        v91 = v96 + 56;
        v86 = v89 + 56;
        v93 = *(_QWORD *)(v7 + 72);
        v81[1] = v34;
        swift_bridgeObjectRetain();
        v36 = 0;
        *(_QWORD *)&v37 = 136315394;
        v84 = v37;
        v83 = MEMORY[0x24BEE4AD8] + 8;
        v38 = v97;
        v85 = v15;
        while (1)
        {
          sub_2362B6254(v94 + v93 * v36, (uint64_t)v38);
          if (!v35)
            goto LABEL_22;
          if (*(_QWORD *)(v35 + 16))
          {
            v40 = *v38;
            v39 = v38[1];
            sub_2362CBC8C();
            swift_bridgeObjectRetain();
            sub_2362CB710();
            v41 = sub_2362CBCBC();
            v42 = -1 << *(_BYTE *)(v35 + 32);
            v43 = v41 & ~v42;
            if (((*(_QWORD *)(v91 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) != 0)
            {
              v44 = *(_QWORD *)(v96 + 48);
              v45 = (_QWORD *)(v44 + 16 * v43);
              v46 = *v45 == v40 && v45[1] == v39;
              if (v46 || (sub_2362CBBE4() & 1) != 0)
              {
LABEL_21:
                swift_bridgeObjectRelease();
                v32 = (uint64_t)v92;
                v38 = v97;
LABEL_22:
                sub_2362B6254((uint64_t)v38, v32);
LABEL_23:
                sub_2362B6298(v32);
                v47 = *v38;
                v48 = v38[1];
                swift_bridgeObjectRetain();
                LOBYTE(v47) = sub_23624EC88(v47, v48, v90);
                swift_bridgeObjectRelease();
                sub_2362B6254((uint64_t)v38, (uint64_t)v15);
                if ((v47 & 1) != 0)
                {
                  v49 = 1;
                }
                else
                {
                  v50 = *((_QWORD *)v15 + 2);
                  v51 = *((_QWORD *)v15 + 3);
                  swift_bridgeObjectRetain();
                  v49 = sub_23624EC88(v50, v51, v87);
                  swift_bridgeObjectRelease();
                }
                sub_2362B6298((uint64_t)v15);
                if (qword_2563D4178 != -1)
                  swift_once();
                v52 = sub_2362CB494();
                __swift_project_value_buffer(v52, (uint64_t)qword_2563DB5D8);
                sub_2362B6254((uint64_t)v38, (uint64_t)v31);
                v53 = sub_2362CB47C();
                v54 = sub_2362CB848();
                if (os_log_type_enabled(v53, v54))
                {
                  v55 = swift_slowAlloc();
                  v56 = swift_slowAlloc();
                  v98[0] = v56;
                  *(_DWORD *)v55 = v84;
                  v88 = v36;
                  v57 = v49;
                  v58 = v6;
                  v59 = a3;
                  v60 = *v31;
                  v61 = v31[1];
                  swift_bridgeObjectRetain();
                  v62 = v60;
                  v32 = (uint64_t)v92;
                  *(_QWORD *)(v55 + 4) = sub_2362AB670(v62, v61, v98);
                  a3 = v59;
                  v6 = v58;
                  v49 = v57;
                  v36 = v88;
                  swift_bridgeObjectRelease();
                  sub_2362B6298((uint64_t)v31);
                  *(_WORD *)(v55 + 12) = 1024;
                  *(_DWORD *)(v55 + 14) = v49 & 1;
                  _os_log_impl(&dword_23624C000, v53, v54, "monitor for %s is potentially affected, locked: %{BOOL}d", (uint8_t *)v55, 0x12u);
                  swift_arrayDestroy();
                  v63 = v56;
                  v15 = v85;
                  MEMORY[0x23B7EF258](v63, -1, -1);
                  MEMORY[0x23B7EF258](v55, -1, -1);
                }
                else
                {
                  sub_2362B6298((uint64_t)v31);
                }

                v64 = (void *)sub_2362CB3F8();
                objc_msgSend(a3, sel_extensionMonitorWithUUID_lockedStatusUpdate_, v64, v49 & 1);

                goto LABEL_32;
              }
              v65 = ~v42;
              while (1)
              {
                v43 = (v43 + 1) & v65;
                if (((*(_QWORD *)(v91 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
                  break;
                v66 = (_QWORD *)(v44 + 16 * v43);
                v67 = *v66 == v40 && v66[1] == v39;
                if (v67 || (sub_2362CBBE4() & 1) != 0)
                  goto LABEL_21;
              }
            }
            swift_bridgeObjectRelease();
            v32 = (uint64_t)v92;
            v35 = v96;
            v38 = v97;
          }
          sub_2362B6254((uint64_t)v38, v32);
          if (v89 && *(_QWORD *)(v89 + 16))
          {
            v69 = *(_QWORD *)(v32 + 16);
            v68 = *(_QWORD *)(v32 + 24);
            sub_2362CBC8C();
            swift_bridgeObjectRetain();
            sub_2362CB710();
            v70 = sub_2362CBCBC();
            v71 = -1 << *(_BYTE *)(v89 + 32);
            v72 = v32;
            v73 = v70 & ~v71;
            if (((*(_QWORD *)(v86 + ((v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) != 0)
            {
              v74 = *(_QWORD *)(v89 + 48);
              v75 = (_QWORD *)(v74 + 16 * v73);
              v76 = *v75 == v69 && v75[1] == v68;
              if (v76 || (sub_2362CBBE4() & 1) != 0)
              {
LABEL_50:
                swift_bridgeObjectRelease();
                v32 = (uint64_t)v92;
                v38 = v97;
                goto LABEL_23;
              }
              v77 = ~v71;
              while (1)
              {
                v73 = (v73 + 1) & v77;
                if (((*(_QWORD *)(v86 + ((v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) == 0)
                  break;
                v78 = (_QWORD *)(v74 + 16 * v73);
                v79 = *v78 == v69 && v78[1] == v68;
                if (v79 || (sub_2362CBBE4() & 1) != 0)
                  goto LABEL_50;
              }
              swift_bridgeObjectRelease();
              v32 = (uint64_t)v92;
              sub_2362B6298((uint64_t)v92);
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_2362B6298(v72);
              v32 = v72;
            }
LABEL_32:
            v35 = v96;
            v38 = v97;
            goto LABEL_12;
          }
          sub_2362B6298(v32);
LABEL_12:
          ++v36;
          sub_2362B6298((uint64_t)v38);
          if (v36 == v95)
          {
            swift_bridgeObjectRelease();
            v80 = v82;
            goto LABEL_63;
          }
        }
      }
      v80 = v82;
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
  }
}

id sub_2362B546C()
{
  return sub_2362714C8(type metadata accessor for APExtensionMonitorClient);
}

uint64_t type metadata accessor for APExtensionMonitorClient()
{
  return objc_opt_self();
}

id sub_2362B54F0()
{
  if (qword_2563D40B0 != -1)
    swift_once();
  return (id)qword_2563DB5B8;
}

id sub_2362B555C()
{
  return sub_2362714C8(type metadata accessor for APExtensionMonitorService);
}

uint64_t type metadata accessor for APExtensionMonitorService()
{
  return objc_opt_self();
}

uint64_t *sub_2362B5598(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2362CB428();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_2362B564C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2362CB428();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2362B569C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2362CB428();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_2362B5724(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2362CB428();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_2362B57C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2362CB428();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_2362B581C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2362CB428();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_2362B5898()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2362B58A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2362CB428();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2362B5920()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2362B592C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2362CB428();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ExtensionMonitorPair()
{
  uint64_t result;

  result = qword_2563D4070;
  if (!qword_2563D4070)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2362B59DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2362CB428();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2362B5A50()
{
  return sub_236288674(&qword_2563D77E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ExtensionMonitorPair, (uint64_t)&unk_2362D0180);
}

uint64_t sub_2362B5A80(uint64_t a1, uint64_t a2)
{
  return sub_236288674(&qword_2563D40B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for APExtensionMonitorClient, (uint64_t)&unk_2362D01D4);
}

uint64_t sub_2362B5AAC()
{
  return 4;
}

uint64_t sub_2362B5AB4(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel__xpcConnection);
  xpc_connection_set_non_launching();
  return swift_unknownObjectRelease();
}

void sub_2362B5AF0(void *a1)
{
  id v2;

  v2 = APGetClientExtensionMonitorInterface();
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v2);

}

uint64_t sub_2362B5B3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for APExtensionMonitorService();
  v5 = objc_allocWithZone(v4);
  sub_23624E76C(a1, (uint64_t)v5 + OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v6;
  return result;
}

char *sub_2362B5BB4(void *a1)
{
  void **v1;
  void *v2;
  id v3;
  char *v4;
  uint64_t v6;

  v2 = *v1;
  v3 = objc_msgSend(a1, sel_remoteObjectProxy);
  sub_2362CB9E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41D0);
  swift_dynamicCast();
  v4 = (char *)objc_allocWithZone((Class)type metadata accessor for APExtensionMonitorClient());
  return sub_2362B6044((char *)v2, v6, v4);
}

uint64_t sub_2362B5C54(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_236288674(&qword_2563D40C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for APExtensionMonitorClient, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2362B5C90(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v1;
  v5 = type metadata accessor for ExtensionMonitorPair();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v37 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v36 = (uint64_t)&v33 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v38 = (uint64_t)&v33 - v14;
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (!v16)
    return 0;
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRetain();
  v19 = 0;
  v34 = v17;
  while (1)
  {
    v20 = a1(v15 + v17);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((v20 & 1) != 0)
      break;
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v15 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v19, 1))
  {
    v22 = *(_QWORD *)(v15 + 16);
    if (v19 + 1 == v22)
      return v19;
    v23 = v18 + v17;
    v24 = v19 + 1;
    v33 = v1;
    v35 = v18;
    while (v24 < v22)
    {
      v25 = v3;
      v39 = v23;
      v26 = v38;
      sub_2362B6254(v15 + v23, v38);
      v27 = a1(v26);
      result = sub_2362B6298(v26);
      if ((v27 & 1) != 0)
      {
        v3 = v25;
        v28 = v35;
      }
      else
      {
        v3 = v25;
        v28 = v35;
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v29 = *v3;
          v30 = *(_QWORD *)(*v3 + 16);
          if (v19 >= v30)
            goto LABEL_33;
          result = sub_2362B6254(v29 + v34 + v19 * v35, v36);
          if (v24 >= v30)
            goto LABEL_34;
          sub_2362B6254(v29 + v39, v37);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v33;
          *v33 = v29;
          if ((result & 1) == 0)
          {
            result = sub_2362B6030(v29);
            v29 = result;
            *v3 = result;
          }
          if (v19 >= *(_QWORD *)(v29 + 16))
            goto LABEL_35;
          result = sub_2362B6A4C(v37, v29 + v34 + v19 * v28);
          if (v24 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_2362B6A4C(v36, *v3 + v39);
        }
        if (__OFADD__(v19++, 1))
          goto LABEL_31;
      }
      v32 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_30;
      v15 = *v3;
      v22 = *(_QWORD *)(*v3 + 16);
      ++v24;
      v23 = v39 + v28;
      if (v32 == v22)
        return v19;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_2362B5F74(unint64_t a1)
{
  return sub_2362AABDC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_2362B5F8C(unint64_t a1)
{
  return sub_2362AAE3C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_2362B5FA0(unint64_t a1)
{
  return sub_2362AAF84(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_2362B5FB4(unint64_t a1)
{
  return sub_2362AB0D0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_2362B5FC8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2362CBB18();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x23B7EE7F0);
}

uint64_t sub_2362B6030(unint64_t a1)
{
  return sub_2362AB450(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_2362B6044(char *a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  objc_super v17;

  *(_QWORD *)&a3[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_changeEventsSubscription] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_delegate + 8] = 0;
  v6 = swift_unknownObjectWeakInit();
  *(_QWORD *)&a3[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_monitorAssociations] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + 8) = &off_250794900;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&a3[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_remoteMonitor] = a2;
  v17.receiver = a3;
  v17.super_class = (Class)type metadata accessor for APExtensionMonitorClient();
  swift_unknownObjectRetain();
  v7 = objc_msgSendSuper2(&v17, sel_init);
  v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy + 24];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy + 32];
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR____TtC13AppProtection25APExtensionMonitorService_policy], v8);
  v10 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8);
  v11 = (char *)v7;
  v10(v16, v8, v9);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a2;
  swift_unknownObjectRetain();
  v14 = sub_2362CB548();
  swift_release();

  swift_unknownObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13AppProtection24APExtensionMonitorClient_changeEventsSubscription] = v14;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v11;
}

uint64_t sub_2362B61FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2362B6220()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_2362B624C(uint64_t a1)
{
  uint64_t v1;

  sub_2362B4C44(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_2362B6254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMonitorPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2362B6298(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExtensionMonitorPair();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2362B62D4(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_2362CBBE4() & 1) == 0)
    return 0;
  v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_2362CBBE4() & 1) == 0)
    return 0;
  type metadata accessor for ExtensionMonitorPair();
  return sub_2362CB404();
}

uint64_t sub_2362B635C()
{
  type metadata accessor for ExtensionMonitorPair();
  return sub_2362CB404() & 1;
}

uint64_t sub_2362B63A8(uint64_t a1, uint64_t a2)
{
  return sub_2362B6404(a1, a2, (uint64_t (*)(void))sub_2362AABDC);
}

uint64_t sub_2362B63BC(uint64_t a1, uint64_t a2)
{
  return sub_2362B6404(a1, a2, (uint64_t (*)(void))sub_2362AAE3C);
}

uint64_t sub_2362B63D0(uint64_t a1, uint64_t a2)
{
  return sub_2362B6404(a1, a2, (uint64_t (*)(void))sub_2362AAF84);
}

uint64_t sub_2362B63E4(uint64_t a1, uint64_t a2)
{
  return sub_2362B65A8(a1, a2, (void (*)(_QWORD))type metadata accessor for WeakShield);
}

uint64_t sub_2362B63F0(uint64_t a1, uint64_t a2)
{
  return sub_2362B6404(a1, a2, (uint64_t (*)(void))sub_2362AB0D0);
}

uint64_t sub_2362B6404(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a1 - a2;
  if (__OFSUB__(0, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 - v8 > *(_QWORD *)(v5 + 24) >> 1)
    v5 = a3();
  result = swift_arrayDestroy();
  if (!v8)
    goto LABEL_19;
  v12 = *(_QWORD *)(v5 + 16);
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_25;
  if ((v13 & 0x8000000000000000) == 0)
  {
    if (a1 < a2 || v5 + 32 + 16 * a1 >= (unint64_t)(v5 + 32 + 16 * a2 + 16 * v13))
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v14 = *(_QWORD *)(v5 + 16);
    v15 = __OFADD__(v14, v9);
    v16 = v14 - v8;
    if (!v15)
    {
      *(_QWORD *)(v5 + 16) = v16;
LABEL_19:
      *v3 = v5;
      return result;
    }
    goto LABEL_26;
  }
LABEL_27:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362B6590(uint64_t a1, uint64_t a2)
{
  return sub_2362B65A8(a1, a2, (void (*)(_QWORD))type metadata accessor for APExtensionSubjectMonitorSubscription);
}

uint64_t sub_2362B659C(uint64_t a1, uint64_t a2)
{
  return sub_2362B65A8(a1, a2, (void (*)(_QWORD))type metadata accessor for APSystemAppOutlet);
}

uint64_t sub_2362B65A8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  if (v23 < v3)
    goto LABEL_31;
LABEL_4:
  v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v9 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    v10 = v9 + v7;
    if (!__OFADD__(v9, v7))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62)
    goto LABEL_34;
  v9 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - v8;
  if (__OFADD__(v9, v7))
    goto LABEL_36;
LABEL_8:
  v11 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v11;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v9 = 1;
  }
  if (v11 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  *v4 = MEMORY[0x23B7EE7F0](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v13 + 32;
  v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (!v7)
    return sub_2362CB770();
  if (!(*v4 >> 62))
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  v18 = v24 - v3;
  if (__OFSUB__(v24, v3))
    goto LABEL_40;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v15 + 8 * v3);
    if (v5 != v3 || v16 >= &v19[8 * v18])
      memmove(v16, v19, 8 * v18);
    if (!(*v4 >> 62))
    {
      v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = v20 + v7;
      if (!__OFADD__(v20, v7))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v21;
        return sub_2362CB770();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    v21 = v25 + v7;
    if (!__OFADD__(v25, v7))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362B68A4(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_2362AB450(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for ExtensionMonitorPair() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362B6A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMonitorPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2362B6A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMonitorPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2362B6AD4()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_2362B7940((uint64_t)&unk_250794E68);
  result = swift_arrayDestroy();
  qword_2563DB618 = v0;
  return result;
}

uint64_t sub_2362B6B1C(SEL *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v1, *a1))
    goto LABEL_16;
  sub_2362CB374();
  v8 = sub_2362CB38C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if ((_DWORD)result != 1)
  {
    v10 = objc_allocWithZone(MEMORY[0x24BDC1560]);
    v11 = sub_2362B760C((uint64_t)v7);
    v12 = objc_msgSend(v11, sel_bundleRecord);
    v13 = objc_msgSend(v12, sel_bundleIdentifier);

    if (v13)
    {
      v14 = sub_2362CB698();
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v17 = objc_msgSend(v3, sel_bundleIdentifier);
    if (v17)
    {
      v18 = v17;
      v19 = sub_2362CB698();
      v21 = v20;

      if (!v16)
      {

        if (!v21)
        {
          v22 = 1;
          return v22 & 1;
        }
        goto LABEL_15;
      }
      if (v21)
      {
        if (v14 == v19 && v16 == v21)
          v22 = 1;
        else
          v22 = sub_2362CBBE4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v22 & 1;
      }
    }
    else if (!v16)
    {

      v22 = 1;
      return v22 & 1;
    }

LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    v22 = 0;
    return v22 & 1;
  }
  __break(1u);
  return result;
}

id sub_2362B6E9C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)APSettingsManager), sel_init);
  qword_2563DB620 = (uint64_t)result;
  return result;
}

APSettingsManager __swiftcall APSettingsManager.init()()
{
  return (APSettingsManager)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id static APSettingsManager.shared()()
{
  if (qword_2563D4270 != -1)
    swift_once();
  return (id)qword_2563DB620;
}

void sub_2362B6F7C(void *a1, uint64_t a2)
{
  id v4;
  void **v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  uint64_t v15;

  if (a1)
  {
    v4 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v5 = (void **)(a2 + 16);
    v6 = sub_2362CB494();
    __swift_project_value_buffer(v6, (uint64_t)qword_2542A58F8);
    v7 = a1;
    v8 = a1;
    v9 = sub_2362CB47C();
    v10 = sub_2362CB830();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = a1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v12 = v15;

      _os_log_impl(&dword_23624C000, v9, v10, "error on connection: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v12, -1, -1);
      MEMORY[0x23B7EF258](v11, -1, -1);
    }
    else
    {

    }
    swift_beginAccess();
    v14 = *v5;
    *v5 = a1;

  }
}

uint64_t sub_2362B7160(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t))
{
  id v9;
  id v10;

  v9 = a3;
  v10 = a1;
  a6(v9, a4);

  return 1;
}

uint64_t sub_2362B7200(id a1, uint64_t (*a2)(id))
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v14;

  if (a1)
  {
    v4 = a1;
    if (qword_2542A53D0 != -1)
      swift_once();
    v5 = sub_2362CB494();
    __swift_project_value_buffer(v5, (uint64_t)qword_2542A58F8);
    v6 = a1;
    v7 = a1;
    v8 = sub_2362CB47C();
    v9 = sub_2362CB830();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = a1;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v11 = v14;

      _os_log_impl(&dword_23624C000, v8, v9, "error on write connection: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v11, -1, -1);
      MEMORY[0x23B7EF258](v10, -1, -1);

    }
    else
    {

    }
  }
  return a2(a1);
}

void sub_2362B73F4(void *a1, int a2, void *a3, uint64_t a4, void *aBlock, void (*a6)(id, uint64_t, void *))
{
  void *v10;
  id v11;
  id v12;

  v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  v11 = a3;
  v12 = a1;
  a6(v11, a4, v10);
  _Block_release(v10);
  _Block_release(v10);

}

BOOL sub_2362B7494(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(id))
{
  id v6;
  id v7;
  void *v8;
  void *v9;

  v6 = a3;
  v7 = a1;
  v8 = (void *)a4(v6);
  v9 = v8;
  if (v8)

  return v9 == 0;
}

id APSettingsManager.init()()
{
  objc_super v1;

  v1.super_class = (Class)APSettingsManager;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t type metadata accessor for APSettingsManager(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D77F8);
}

id sub_2362B760C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_2362CB338();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithURL_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_2362CB38C();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_2362CB2E4();

    swift_willThrow();
    v11 = sub_2362CB38C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_2362B7714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6028);
    v3 = sub_2362CBA4C();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_2362CB698();
      sub_2362CBC8C();
      v7 = v6;
      sub_2362CB710();
      v8 = sub_2362CBCBC();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_2362CB698();
        v17 = v16;
        if (v15 == sub_2362CB698() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_2362CBBE4();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_2362CB698();
          v24 = v23;
          if (v22 == sub_2362CB698() && v24 == v25)
            goto LABEL_3;
          v27 = sub_2362CBBE4();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2362B7940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D59D0);
    v3 = sub_2362CBA4C();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_2362CBC8C();
      swift_bridgeObjectRetain();
      sub_2362CB710();
      result = sub_2362CBCBC();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_2362CBBE4(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_2362CBBE4();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

id sub_2362B7AE0(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __CFString *v18;
  __CFString *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __CFString *v29;
  __CFString *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id result;
  void *v36;
  unsigned __int8 v37;
  id v38;
  _OWORD v39[2];
  _BYTE v40[24];
  uint64_t v41;

  if ((a2 & 1) != 0)
  {
    v2 = sub_2362CB698();
    v4 = 0xD000000000000026;
    v5 = 0x80000002362D7990;
    v6 = 3;
    v7 = 147;
LABEL_26:
    v34 = sub_236294D50(v2, v3, v6, v4, v5, v7, 0xD000000000000039, 0x80000002362D7D60);
LABEL_27:
    swift_bridgeObjectRelease();
    return v34;
  }
  if (objc_msgSend(a1, sel_developerType) == 1)
  {
    v9 = objc_msgSend(a1, sel_bundleIdentifier);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2362CB698();
      v13 = v12;

      if (qword_2563D59A8 != -1)
        swift_once();
      v14 = sub_23624EC88(v11, v13, qword_2563DB618);
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        v15 = sub_2362CB698();
        v17 = v16;
        v18 = _APErrorCodeDescription(6uLL);
        if (v18)
        {
          v19 = v18;
          v20 = sub_2362CB698();
          v22 = v21;

        }
        else
        {
          v20 = 0;
          v22 = 0;
        }
        v34 = sub_236294D50(v15, v17, 6, v20, v22, 152, 0xD000000000000039, 0x80000002362D7D60);
LABEL_31:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    v23 = objc_msgSend(a1, sel_infoDictionary);
    v24 = (void *)sub_2362CB674();
    sub_23625B534(0, (unint64_t *)&qword_2563D6478);
    v25 = objc_msgSend(v23, sel_objectForKey_ofClass_, v24, swift_getObjCClassFromMetadata());

    if (v25)
    {
      sub_2362CB9E0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v39, 0, sizeof(v39));
    }
    sub_23625B4B0((uint64_t)v39, (uint64_t)v40);
    if (v41)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (objc_msgSend(v38, sel_BOOLValue))
        {
          v26 = sub_2362CB698();
          v28 = v27;
          v29 = _APErrorCodeDescription(6uLL);
          if (v29)
          {
            v30 = v29;
            v31 = sub_2362CB698();
            v33 = v32;

          }
          else
          {
            v31 = 0;
            v33 = 0;
          }
          v34 = sub_236294D50(v26, v28, 6, v31, v33, 158, 0xD000000000000039, 0x80000002362D7D60);

          goto LABEL_31;
        }

      }
    }
    else
    {
      sub_236253FFC((uint64_t)v40);
    }
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v36 = result;
    v37 = objc_msgSend(result, sel_isLockingAppsAllowed);

    if ((v37 & 1) != 0)
      return 0;
    v2 = sub_2362CB698();
    v4 = 0xD000000000000023;
    v5 = 0x80000002362D7D30;
    v6 = 9;
    v7 = 165;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

id sub_2362B7ED4(void *a1)
{
  id v2;
  void *v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __CFString *v17;
  __CFString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id result;
  void *v30;
  void *v31;
  unsigned int v32;
  void *v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _OWORD v38[2];
  _BYTE v39[24];
  uint64_t v40;

  v2 = objc_msgSend(a1, sel_entitlements);
  v3 = (void *)sub_2362CB674();
  sub_23625B534(0, (unint64_t *)&qword_2563D6478);
  v4 = objc_msgSend(v2, sel_objectForKey_ofClass_, v3, swift_getObjCClassFromMetadata());

  if (v4)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_23625B4B0((uint64_t)v38, (uint64_t)v39);
  if (!v40)
  {
    sub_236253FFC((uint64_t)v39);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v5 = 0;
    goto LABEL_9;
  }
  v5 = objc_msgSend(v37, sel_BOOLValue);

LABEL_9:
  if (objc_msgSend(a1, sel_developerType) == 1 && (v5 & 1) == 0)
  {
    v6 = sub_2362CB698();
    v8 = v7;
    v9 = _APErrorCodeDescription(7uLL);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2362CB698();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    v22 = v6;
    v23 = v8;
    v24 = 7;
    v25 = v11;
    v26 = v13;
    v27 = 196;
LABEL_21:
    v28 = sub_236294D50(v22, v23, v24, v25, v26, v27, 0xD000000000000030, 0x80000002362D7CD0);
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    return v28;
  }
  if ((sub_2362B6B1C((SEL *)&selRef_isMailClient) & 1) != 0 || (sub_2362B6B1C((SEL *)&selRef_isWebBrowser) & 1) != 0)
  {
    v14 = sub_2362CB698();
    v16 = v15;
    v17 = _APErrorCodeDescription(0xAuLL);
    if (v17)
    {
      v18 = v17;
      v19 = sub_2362CB698();
      v21 = v20;

    }
    else
    {
      v19 = 0;
      v21 = 0;
    }
    v22 = v14;
    v23 = v16;
    v24 = 10;
    v25 = v19;
    v26 = v21;
    v27 = 200;
    goto LABEL_21;
  }
  v30 = (void *)objc_opt_self();
  result = objc_msgSend(v30, sel_sharedConnection);
  if (result)
  {
    v31 = result;
    v32 = objc_msgSend(result, sel_isLockingAppsAllowed);

    if (!v32)
    {
LABEL_29:
      v35 = sub_2362CB698();
      v28 = sub_236294D50(v35, v36, 9, 0xD000000000000023, 0x80000002362D7CA0, 209, 0xD000000000000030, 0x80000002362D7CD0);
      goto LABEL_22;
    }
    result = objc_msgSend(v30, sel_sharedConnection);
    if (result)
    {
      v33 = result;
      v34 = objc_msgSend(result, sel_isHidingAppsAllowed);

      if ((v34 & 1) != 0)
        return 0;
      goto LABEL_29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2362B826C(void *a1)
{
  uint64_t v1;
  char *v3;
  os_unfair_lock_s *v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __CFString *v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __CFString *v32;
  __CFString *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  if (qword_2542A53E0 != -1)
    swift_once();
  v3 = (char *)off_2542A5400 + 16;
  v4 = (os_unfair_lock_s *)((char *)off_2542A5400 + 24);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_23626909C((unint64_t)v3, 0, (char *)v37);
  if (!v1)
  {
    os_unfair_lock_unlock(v4);
    v5 = LOBYTE(v37[0]);
    swift_release();
    if (v5 == 2)
    {
      v37[3] = &type metadata for AppProtectionFeatures;
      v37[4] = sub_236264AA0();
      LOBYTE(v37[0]) = 0;
      v6 = sub_2362CB44C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if ((v6 & 1) == 0)
      {
LABEL_6:
        v7 = sub_2362CB698();
        v9 = v8;
        v10 = _APErrorCodeDescription(2uLL);
        if (v10)
        {
          v11 = v10;
          v12 = sub_2362CB698();
          v14 = v13;

        }
        else
        {
          v12 = 0;
          v14 = 0;
        }
        v23 = v7;
        v24 = v9;
        v25 = 2;
        v26 = v12;
        v27 = v14;
        v28 = 217;
LABEL_17:
        sub_236294D50(v23, v24, v25, v26, v27, v28, 0xD000000000000029, 0x80000002362D7E00);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_willThrow();
        return;
      }
    }
    else if ((v5 & 1) == 0)
    {
      goto LABEL_6;
    }
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = a1;
      v18 = objc_msgSend(v16, sel_bundleIdentifier);
      v19 = sub_2362CB698();
      v21 = v20;

      v22 = objc_allocWithZone(MEMORY[0x24BDC1540]);
      sub_2362AA768(v19, v21, 1);

      return;
    }
    v29 = sub_2362CB698();
    v31 = v30;
    v32 = _APErrorCodeDescription(1uLL);
    if (v32)
    {
      v33 = v32;
      v34 = sub_2362CB698();
      v36 = v35;

    }
    else
    {
      v34 = 0;
      v36 = 0;
    }
    v23 = v29;
    v24 = v31;
    v25 = 1;
    v26 = v34;
    v27 = v36;
    v28 = 220;
    goto LABEL_17;
  }
  os_unfair_lock_unlock(v4);
  __break(1u);
}

id sub_2362B878C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  if (sub_23628DC8C())
  {
    sub_2362B826C(a1);
    v11 = v10;
    v12 = sub_2362B7ED4(v11);

  }
  else
  {
    v2 = sub_2362CB698();
    v4 = v3;
    v5 = _APErrorCodeDescription(0xCuLL);
    if (v5)
    {
      v6 = v5;
      v7 = sub_2362CB698();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v12 = sub_236294D50(v2, v4, 12, v7, v9, 177, 0xD000000000000027, 0x80000002362D7DD0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_2362B8898(void *a1, char a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void *v18;
  uint64_t v19;

  if (sub_2362B878C(a1))
    return swift_willThrow();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2362B94A4;
  *(_QWORD *)(v6 + 24) = v5;
  v18 = sub_23625B9C0;
  v19 = v6;
  v7 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_2362C96F0;
  v17 = &block_descriptor_54_0;
  v8 = _Block_copy(&v14);
  swift_retain_n();
  swift_release();
  v9 = APGetSyncWriteProxy(v8);
  _Block_release(v8);
  v10 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
  if (!v10)
  {
    sub_2362CB698();
    v10 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v18 = sub_2362B94A4;
  v19 = v5;
  v14 = v7;
  v15 = 1107296256;
  v16 = sub_2362BE888;
  v17 = &block_descriptor_57;
  v11 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_setBundleIdentifier_hidden_completion_, v10, a2 & 1, v11);
  _Block_release(v11);
  swift_unknownObjectRelease();

  swift_beginAccess();
  v12 = *(void **)(v5 + 16);
  if (v12)
  {
    v13 = v12;
    swift_willThrow();
  }
  return swift_release_n();
}

id sub_2362B8AB8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v14;

  if (sub_23628DC8C())
  {
    sub_2362B826C(a1);
    v11 = v10;
    v12 = sub_2362B7AE0(v11, (char)objc_msgSend(a1, sel_isHidden));

    return v12;
  }
  else
  {
    v2 = sub_2362CB698();
    v4 = v3;
    v5 = _APErrorCodeDescription(0xCuLL);
    if (v5)
    {
      v6 = v5;
      v7 = sub_2362CB698();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v14 = sub_236294D50(v2, v4, 12, v7, v9, 133, 0xD000000000000027, 0x80000002362D7E30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
}

uint64_t sub_2362B8BE0(void *a1, char a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void *v18;
  uint64_t v19;

  if (sub_2362B8AB8(a1))
    return swift_willThrow();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2362B94A4;
  *(_QWORD *)(v6 + 24) = v5;
  v18 = sub_23625B9C0;
  v19 = v6;
  v7 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_2362C96F0;
  v17 = &block_descriptor_43;
  v8 = _Block_copy(&v14);
  swift_retain_n();
  swift_release();
  v9 = APGetSyncWriteProxy(v8);
  _Block_release(v8);
  v10 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
  if (!v10)
  {
    sub_2362CB698();
    v10 = (id)sub_2362CB674();
    swift_bridgeObjectRelease();
  }
  v18 = sub_2362B94A4;
  v19 = v5;
  v14 = v7;
  v15 = 1107296256;
  v16 = sub_2362BE888;
  v17 = &block_descriptor_46_0;
  v11 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_setBundleIdentifier_locked_completion_, v10, a2 & 1, v11);
  _Block_release(v11);
  swift_unknownObjectRelease();

  swift_beginAccess();
  v12 = *(void **)(v5 + 16);
  if (v12)
  {
    v13 = v12;
    swift_willThrow();
  }
  return swift_release_n();
}

void sub_2362B8E00(void *a1, char a2, void (**a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  _Block_copy(a3);
  v7 = sub_2362B878C(a1);
  if (v7)
  {
    v8 = v7;
    v9 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, _QWORD, void *))a3)[2](a3, 0, v9);

    swift_release();
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_236274D20;
    *(_QWORD *)(v10 + 24) = v6;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_236280C10;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_2362B9514;
    *(_QWORD *)(v12 + 24) = v11;
    v22 = sub_23625B9C0;
    v23 = v12;
    v13 = MEMORY[0x24BDAC760];
    v18 = MEMORY[0x24BDAC760];
    v19 = 1107296256;
    v20 = sub_2362C96F0;
    v21 = &block_descriptor_30;
    v14 = _Block_copy(&v18);
    swift_retain();
    swift_retain();
    swift_release();
    v15 = APGetAsyncWriteProxy(v14);
    _Block_release(v14);
    v16 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
    if (!v16)
    {
      sub_2362CB698();
      v16 = (id)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    v22 = sub_2362B9514;
    v23 = v11;
    v18 = v13;
    v19 = 1107296256;
    v20 = sub_2362BE888;
    v21 = &block_descriptor_33_1;
    v17 = _Block_copy(&v18);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_setBundleIdentifier_hidden_completion_, v16, a2 & 1, v17);
    _Block_release(v17);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

  }
}

void sub_2362B9068(void *a1, char a2, void (**a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  void *v22;
  uint64_t v23;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  _Block_copy(a3);
  v7 = sub_2362B8AB8(a1);
  if (v7)
  {
    v8 = v7;
    v9 = (void *)sub_2362CB2D8();
    ((void (**)(_QWORD, _QWORD, void *))a3)[2](a3, 0, v9);

    swift_release();
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_23624E140;
    *(_QWORD *)(v10 + 24) = v6;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_236280D74;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_2362B9454;
    *(_QWORD *)(v12 + 24) = v11;
    v22 = sub_236253F0C;
    v23 = v12;
    v13 = MEMORY[0x24BDAC760];
    v18 = MEMORY[0x24BDAC760];
    v19 = 1107296256;
    v20 = sub_2362C96F0;
    v21 = &block_descriptor_20;
    v14 = _Block_copy(&v18);
    swift_retain();
    swift_retain();
    swift_release();
    v15 = APGetAsyncWriteProxy(v14);
    _Block_release(v14);
    v16 = objc_msgSend(a1, sel_effectiveBundleIdentifier);
    if (!v16)
    {
      sub_2362CB698();
      v16 = (id)sub_2362CB674();
      swift_bridgeObjectRelease();
    }
    v22 = sub_2362B9454;
    v23 = v11;
    v18 = v13;
    v19 = 1107296256;
    v20 = sub_2362BE888;
    v21 = &block_descriptor_12_3;
    v17 = _Block_copy(&v18);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_setBundleIdentifier_locked_completion_, v16, a2 & 1, v17);
    _Block_release(v17);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

  }
}

id sub_2362B92D0()
{
  uint64_t inited;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  sub_2362CB698();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5A00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2362CE0E0;
  *(_QWORD *)(inited + 32) = 0x656E694C5041;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v1 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 236;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 80) = 0x636E75465041;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(_QWORD *)(inited + 96) = 0xD00000000000002FLL;
  *(_QWORD *)(inited + 104) = 0x80000002362D7DA0;
  sub_2362949BC(inited);
  v2 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_2362CB608();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, -4, v4);
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_2362B9430()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2362B9454(void *a1)
{
  uint64_t v1;

  return sub_2362B7200(a1, *(uint64_t (**)(id))(v1 + 16));
}

uint64_t sub_2362B945C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362B9480()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2362B94A4(void *a1)
{
  uint64_t v1;

  sub_2362B6F7C(a1, v1);
}

void sub_2362B9518(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  _BOOL4 v9;
  id v10;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  id v31[3];
  uint64_t v32;
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v3 = objc_msgSend(v1, sel_raw_audit_token);
  if (!v3)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v14 = sub_2362CB494();
    __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
    v15 = sub_2362CB47C();
    v16 = sub_2362CB83C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23624C000, v15, v16, "data access record had no audit token data!", v17, 2u);
      MEMORY[0x23B7EF258](v17, -1, -1);
    }

    goto LABEL_14;
  }
  v4 = v3;
  v5 = sub_2362CB3C8();
  v7 = v6;

  v28 = 0u;
  v29 = 0u;
  v8 = (void *)sub_2362CB3BC();
  v31[0] = 0;
  v9 = APAuditTokenFromData(v8, &v28, v31);

  v33 = v31[0];
  if (!v9)
  {
    v18 = qword_2563D4178;
    v19 = v31[0];
    if (v18 != -1)
      swift_once();
    v20 = sub_2362CB494();
    __swift_project_value_buffer(v20, (uint64_t)qword_2563DB5D8);
    v21 = sub_2362CB47C();
    v22 = sub_2362CB83C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v32 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_beginAccess();
      v30 = (uint64_t)v33;
      v25 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7800);
      v26 = sub_2362CB6EC();
      v30 = sub_2362AB670(v26, v27, &v32);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23624C000, v21, v22, "cannot convert data to audit token: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v24, -1, -1);
      MEMORY[0x23B7EF258](v23, -1, -1);
    }
    sub_23625EFAC(v5, v7);

LABEL_14:
    v12 = 0uLL;
    v11 = 1;
    v13 = 0uLL;
    goto LABEL_15;
  }
  v10 = v31[0];
  sub_23625EFAC(v5, v7);

  v11 = 0;
  v12 = v28;
  v13 = v29;
LABEL_15:
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v13;
  *(_BYTE *)(a1 + 32) = v11;
}

unint64_t sub_2362B9858()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  audit_token_t atoken;
  _BYTE v15[36];
  audit_token_t v16;
  char v17;

  sub_2362B9518((uint64_t)v15);
  sub_23625F248((uint64_t)v15, (uint64_t)&v16, &qword_2563D7178);
  if ((v17 & 1) != 0)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v0 = sub_2362CB494();
    __swift_project_value_buffer(v0, (uint64_t)qword_2563DB5D8);
    v1 = sub_2362CB47C();
    v2 = sub_2362CB83C();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_23624C000, v1, v2, "data access record had no audit token!", v3, 2u);
      MEMORY[0x23B7EF258](v3, -1, -1);
    }

    return 0;
  }
  else
  {
    v5 = v16.val[0];
    v6 = v16.val[1];
    v7 = v16.val[2];
    v8 = v16.val[3];
    v9 = v16.val[4];
    v10 = v16.val[5];
    v11 = v16.val[6];
    v12 = v16.val[7];
    atoken = v16;
    v13 = audit_token_to_pid(&atoken);
    atoken.val[0] = v5;
    atoken.val[1] = v6;
    atoken.val[2] = v7;
    atoken.val[3] = v8;
    atoken.val[4] = v9;
    atoken.val[5] = v10;
    atoken.val[6] = v11;
    atoken.val[7] = v12;
    return v13 | (unint64_t)((uint64_t)audit_token_to_pidversion(&atoken) << 32);
  }
}

uint64_t sub_2362B99C0()
{
  sub_2362CBC8C();
  sub_2362CBCA4();
  return sub_2362CBCBC();
}

uint64_t sub_2362B9A04()
{
  return sub_2362CBCA4();
}

uint64_t sub_2362B9A2C()
{
  sub_2362CBC8C();
  sub_2362CBCA4();
  return sub_2362CBCBC();
}

unsigned __int16 *sub_2362B9A6C@<X0>(unsigned __int16 *result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = *result;
  if (v2 >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_2362B9A84(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_2362B9A90(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v19 = 0;
  v3 = objc_msgSend(a1, sel_executeRequest_error_, a2, &v19);
  v4 = (void *)v19;
  if (!v3)
  {
    v8 = (id)v19;
    sub_2362CB2E4();

    swift_willThrow();
    return;
  }
  v5 = v3;
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClass();
  v7 = v4;
  if (!v6)
  {

    v19 = 0u;
    v20 = 0u;
LABEL_13:
    sub_23625B4F8((uint64_t)&v19, &qword_2563D60A0);
    return;
  }
  if (objc_msgSend(v6, sel_result))
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_23625F248((uint64_t)v18, (uint64_t)&v19, &qword_2563D60A0);
  if (!*((_QWORD *)&v20 + 1))
  {

    goto LABEL_13;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = *(_QWORD *)&v18[0];
    v11 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D4250);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2362CE0F0;
    *(_QWORD *)&v19 = sub_2362CB698();
    *((_QWORD *)&v19 + 1) = v13;
    sub_2362CBA28();
    *(_QWORD *)(inited + 96) = v9;
    *(_QWORD *)(inited + 72) = v10;
    sub_236294AF0(inited);
    v14 = (void *)sub_2362CB608();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5210);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2362CEEC0;
    *(_QWORD *)(v15 + 32) = a1;
    *(_QWORD *)&v19 = v15;
    sub_2362CB770();
    sub_23625B534(0, &qword_2563D41C8);
    v16 = a1;
    v17 = (void *)sub_2362CB758();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_mergeChangesFromRemoteContextSave_intoContexts_, v14, v17);

  }
}

void sub_2362B9D74(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  type metadata accessor for PreferenceSetting();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  sub_23625B534(0, &qword_2563D41C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v5 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B0);
  *(_QWORD *)(v5 + 64) = sub_2362BE1E0();
  *(_QWORD *)(v5 + 32) = a2;
  swift_bridgeObjectRetain();
  v6 = (void *)sub_2362CB800();
  objc_msgSend(v4, sel_setPredicate_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v4);
  objc_msgSend(v7, sel_setResultType_, 1);
  sub_2362B9A90(a1, (uint64_t)v7);

}

uint64_t sub_2362B9EC4()
{
  sub_2362CBA58();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0;
}

BOOL sub_2362BA014(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

uint64_t sub_2362BA04C()
{
  return sub_2362B9EC4();
}

void sub_2362BA07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v5 = sub_2362CB5D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_2362CB5F0();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(*(id *)(v2 + 16), sel_newBackgroundContext);
    v14 = MEMORY[0x24BDAC7A8](v12, v13);
    v15[-4] = a1;
    v15[-3] = a2;
    v15[-2] = v14;
    sub_2362CB95C();

  }
  else
  {
    __break(1u);
  }
}

void sub_2362BA1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_2362CB5D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_2362CB5F0();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(*(id *)(v2 + 16), sel_newBackgroundContext);
    v14 = MEMORY[0x24BDAC7A8](v12, v13);
    *(&v15 - 4) = a1;
    *(&v15 - 3) = a2;
    *(&v15 - 2) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B8);
    sub_2362CB95C();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2362BA300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v18[16];

  v6 = sub_2362CB5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(void **)(v2 + 24);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_2362CB5F0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    v14 = objc_msgSend(*(id *)(v2 + 16), sel_newBackgroundContext);
    v16 = MEMORY[0x24BDAC7A8](v14, v15);
    *(_QWORD *)&v18[-32] = a1;
    *(_QWORD *)&v18[-24] = a2;
    *(_QWORD *)&v18[-16] = v16;
    sub_2362CB95C();

    if (!v3)
      v17 = v18[15];
    return v17 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2362BA440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[12];

  v5 = sub_2362CB5D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v2 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_2362CB5F0();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(*(id *)(v2 + 16), sel_newBackgroundContext);
    v14 = MEMORY[0x24BDAC7A8](v12, v13);
    *(_QWORD *)&v15[-32] = a1;
    *(_QWORD *)&v15[-24] = a2;
    *(_QWORD *)&v15[-16] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7828);
    sub_2362CB95C();

  }
  else
  {
    __break(1u);
  }
}

void sub_2362BA590(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v5;
  void *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  sub_2362BE400(a1, a2);
  if (!v3)
  {
    v6 = v5;
    if (v5)
    {
      v7 = objc_msgSend(v5, sel_locked);
      v8 = objc_msgSend(v6, sel_hidden);
      v9 = objc_msgSend(v6, sel_provisional);

      if (v8)
        v10 = 256;
      else
        v10 = 0;
      v11 = v10 | v7;
      if (v9)
        v12 = 0x10000;
      else
        v12 = 0;
      v13 = v11 | v12;
    }
    else
    {
      v13 = 2;
    }
    *(_WORD *)a3 = v13;
    *(_BYTE *)(a3 + 2) = BYTE2(v13);
  }
}

uint64_t sub_2362BA650(uint64_t a1, unint64_t a2, unsigned int a3)
{
  uint64_t v3;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = 0;
  v16 = a1;
  v6 = a3 & 1;
  v17 = a2;
  v18 = a3 & 0x101;
  v7 = (a3 >> 8) & 1;
  v19 = BYTE2(a3) & 1;
  v20 = &v23;
  sub_2362BA07C((uint64_t)sub_2362BE568, (uint64_t)v15);
  if (!v3)
  {
    if (v23 == 1)
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v9 = sub_2362CB494();
      __swift_project_value_buffer(v9, (uint64_t)qword_2563DB5D8);
      swift_bridgeObjectRetain_n();
      v10 = sub_2362CB47C();
      v11 = sub_2362CB848();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        v22 = v14;
        *(_DWORD *)v12 = 136315650;
        swift_bridgeObjectRetain();
        v21 = sub_2362AB670(a1, a2, &v22);
        sub_2362CB9C8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v12 + 12) = 1024;
        LODWORD(v21) = v6;
        sub_2362CB9C8();
        *(_WORD *)(v12 + 18) = 1024;
        LODWORD(v21) = v7;
        sub_2362CB9C8();
        _os_log_impl(&dword_23624C000, v10, v11, "changed app preferences for %s to locked: %{BOOL}d, hidden: %{BOOL}d, notifying subscribers", (uint8_t *)v12, 0x18u);
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v14, -1, -1);
        MEMORY[0x23B7EF258](v12, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    v8 = v23;
  }
  return v8 & 1;
}

void sub_2362BA890(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, _BYTE *a6)
{
  uint64_t v6;
  void *v10;
  id v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2362BE400(a3, a4);
  if (!v6)
  {
    v11 = v10;
    if (v10)
    {
      v12 = objc_msgSend(v10, sel_locked);
      v13 = objc_msgSend(v11, sel_hidden);
      v14 = objc_msgSend(v11, sel_provisional);
      if (((a5 ^ v12) & 1) == 0
        && ((v13 ^ ((unsigned __int16)(a5 & 0x100) >> 8)) & 1) == 0
        && ((v14 ^ ((a5 & 0x10000) >> 16)) & 1) == 0)
      {

        if ((*a6 & 1) == 0)
          return;
        goto LABEL_11;
      }
      v15 = HIWORD(a5) & 1;
      v16 = (a5 >> 8) & 1;
      objc_msgSend(v11, sel_setLocked_, a5 & 1);
    }
    else
    {
      v15 = HIWORD(a5) & 1;
      v16 = (a5 >> 8) & 1;
      type metadata accessor for PreferenceSetting();
      v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
      v17 = (void *)sub_2362CB674();
      objc_msgSend(v11, sel_setBundleid_, v17);

      objc_msgSend(v11, sel_setLocked_, a5 & 1);
    }
    objc_msgSend(v11, sel_setHidden_, v16);
    objc_msgSend(v11, sel_setProvisional_, v15);

    *a6 = 1;
LABEL_11:
    v20[0] = 0;
    if (objc_msgSend(a1, sel_save_, v20))
    {
      v18 = v20[0];
    }
    else
    {
      v19 = v20[0];
      sub_2362CB2E4();

      swift_willThrow();
    }
  }
}

uint64_t sub_2362BAA9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2362BAB3C((SEL *)&selRef_locked, a1);
}

uint64_t sub_2362BAAEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2362BAB3C((SEL *)&selRef_hidden, a1);
}

uint64_t sub_2362BAB3C@<X0>(SEL *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  unint64_t v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v6 = (void *)sub_2362CB674();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v36[0] = 0;
  v8 = objc_msgSend(v7, sel_execute_, v36);

  v9 = v36[0];
  if (!v8)
  {
    v18 = v36[0];
    sub_2362CB2E4();

    return swift_willThrow();
  }
  v34 = a2;
  v35 = v2;
  type metadata accessor for PreferenceSetting();
  v10 = sub_2362CB764();
  v11 = v9;

  v12 = (void *)MEMORY[0x24BEE4AF8];
  v36[0] = (id)MEMORY[0x24BEE4AF8];
  if (!(v10 >> 62))
  {
    v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_32;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v13 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_17;
LABEL_4:
  if (v13 < 1)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  for (i = 0; i != v13; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x23B7EE7E4](i, v10);
    else
      v15 = *(id *)(v10 + 8 * i + 32);
    v16 = v15;
    if (objc_msgSend(v15, *a1, v34, v35))
    {
      sub_2362CBAA0();
      sub_2362CBAC4();
      sub_2362CBAD0();
      sub_2362CBAAC();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v17 = (unint64_t)v36[0];
  if (((unint64_t)v36[0] & 0x8000000000000000) != 0)
  {
LABEL_32:
    while (1)
    {
      swift_bridgeObjectRetain();
      v20 = sub_2362CBB18();
      swift_release();
      if (!v20)
        goto LABEL_33;
LABEL_20:
      v36[0] = v12;
      sub_2362BC784(0, v20 & ~(v20 >> 63), 0);
      if (v20 < 0)
        goto LABEL_36;
      v21 = 0;
      v22 = v36[0];
      while (v20 != v21)
      {
        if ((v17 & 0xC000000000000001) != 0)
          v23 = (id)MEMORY[0x23B7EE7E4](v21, v17);
        else
          v23 = *(id *)(v17 + 8 * v21 + 32);
        v24 = v23;
        v25 = objc_msgSend(v23, sel_bundleid, v34, v35);
        if (!v25)
          goto LABEL_37;
        v26 = v25;
        v27 = sub_2362CB698();
        v29 = v28;

        v36[0] = v22;
        v31 = v22[2];
        v30 = v22[3];
        v12 = (void *)(v31 + 1);
        if (v31 >= v30 >> 1)
        {
          sub_2362BC784(v30 > 1, v31 + 1, 1);
          v22 = v36[0];
        }
        ++v21;
        v22[2] = v12;
        v32 = &v22[2 * v31];
        v32[4] = v27;
        v32[5] = v29;
        if (v20 == v21)
        {
          swift_release();
          goto LABEL_34;
        }
      }
      __break(1u);
    }
  }
LABEL_18:
  if ((v17 & 0x4000000000000000) != 0)
    goto LABEL_32;
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
    goto LABEL_20;
LABEL_33:
  swift_release();
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_34:
  v33 = sub_2362AD7F4((uint64_t)v22);
  result = swift_bridgeObjectRelease();
  *v34 = v33;
  return result;
}

uint64_t sub_2362BAEC0(void *a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v15 = 0;
  v14 = MEMORY[0x24BEE4AF8];
  v7 = (void *)MEMORY[0x23B7EEB08]();
  sub_2362BB050(a2, a3, &v15, &v14);
  if (v3)
  {
    objc_autoreleasePoolPop(v7);
    return swift_bridgeObjectRelease();
  }
  objc_autoreleasePoolPop(v7);
  v8 = v14;
  if (!(v14 >> 62))
  {
    if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v12 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  if (v12 > 0)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    sub_2362B9D74(a1, v8);
    swift_bridgeObjectRelease();
  }
LABEL_6:
  if (v15 == 1)
  {
    v13 = 0;
    if (objc_msgSend(a1, sel_save_, &v13))
    {
      v9 = v13;
    }
    else
    {
      v10 = v13;
      sub_2362CB2E4();

      swift_willThrow();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2362BB050(uint64_t (*a1)(uint64_t, uint64_t, _QWORD), uint64_t a2, _BYTE *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unsigned int v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  id v30;
  unsigned int v31;
  id v32;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  id v41[2];

  v5 = v4;
  v41[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_2362CB674();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v41[0] = 0;
  v10 = objc_msgSend(v9, sel_execute_, v41);

  v11 = v41[0];
  if (v10)
  {
    type metadata accessor for PreferenceSetting();
    v12 = sub_2362CB764();
    v13 = v11;

    if (v12 >> 62)
      goto LABEL_29;
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v14)
    {
      v34 = v5;
      v35 = a4;
      v37 = v12;
      v38 = v12 & 0xC000000000000001;
      v15 = 4;
      while (1)
      {
        v18 = v38 ? (id)MEMORY[0x23B7EE7E4](v15 - 4, v12) : *(id *)(v12 + 8 * v15);
        v19 = v18;
        if (__OFADD__(v15 - 4, 1))
          break;
        v40 = v15 - 3;
        v5 = v14;
        v20 = objc_msgSend(v18, sel_locked);
        v21 = objc_msgSend(v19, sel_hidden);
        a4 = objc_msgSend(v19, sel_provisional);
        v22 = objc_msgSend(v19, sel_bundleid);
        if (!v22)
          __break(1u);
        v23 = v22;
        v24 = sub_2362CB698();
        v26 = v25;

        if ((_DWORD)a4)
          v27 = 0x10000;
        else
          v27 = 0;
        if (v21)
          v28 = 256;
        else
          v28 = 0;
        v29 = a1(v24, v26, v28 | v20 | v27);
        swift_bridgeObjectRelease();
        if (v29 == 2)
        {
          *a3 = 1;
          v30 = objc_msgSend(v19, sel_objectID);
          MEMORY[0x23B7EE4B4]();
          if (*(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2362CB77C();
          sub_2362CB788();
          sub_2362CB770();
        }
        else
        {
          v31 = v29 & 0xFFFFFF;
          if (((v20 ^ v29) & 1) != 0
            || ((v21 ^ ((unsigned __int16)(v29 & 0x100) >> 8)) & 1) != 0
            || ((a4 ^ ((v29 & 0x10000u) >> 16)) & 1) != 0)
          {
            v16 = HIWORD(v31) & 1;
            v17 = (v31 >> 8) & 1;
            *a3 = 1;
            objc_msgSend(v19, sel_setLocked_, v29 & 1, v34);
            objc_msgSend(v19, sel_setHidden_, v17);
            objc_msgSend(v19, sel_setProvisional_, v16);
          }
        }

        ++v15;
        v14 = v5;
        v12 = v37;
        if (v40 == v5)
          return swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      v14 = sub_2362CBB18();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v32 = v41[0];
    sub_2362CB2E4();

    return swift_willThrow();
  }
}

void sub_2362BB3F4(NSObject *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, int a9, int a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  id v28;
  void *v29;
  NSObject *v30;
  id v31;
  NSObject *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  id v43;
  NSObject *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  NSObject *v54;
  void *v55;
  NSObject *v56;
  NSObject *v57;
  uint64_t v58;
  NSObject *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  NSObject *v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  unint64_t v73;
  unint64_t v74;
  char *v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  NSObject *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;

  v79 = a5;
  v76 = a8;
  v73 = a6;
  v74 = a7;
  v78 = a4;
  v88 = *MEMORY[0x24BDAC8D0];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v65 - v19;
  v21 = sub_2362CB428();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236279974(a2, (uint64_t)v20);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v20, 1, v21);
  v77 = a3;
  v75 = v17;
  if (v27 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, v21);
    v32 = v80;
    v33 = sub_2362BD050();
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
      return;
    }
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);

    if (v34)
      return;
    goto LABEL_10;
  }
  v72 = v26;
  sub_23625B4F8((uint64_t)v20, &qword_2542A5220);
  v28 = objc_msgSend(a3, sel_bundleIdentifier);
  if (!v28)
  {
    __break(1u);
    return;
  }
  v29 = v28;
  sub_2362CB698();

  v30 = v80;
  v31 = sub_2362BD3DC();
  if (v30)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v31;
  swift_bridgeObjectRelease();

  v26 = v72;
  if (!v35)
  {
LABEL_10:
    objc_opt_self();
    v36 = v77;
    v37 = swift_dynamicCastObjCClass();
    v65 = 0;
    if (v37)
    {
      v38 = v36;
      v72 = v26;
      v67 = a2;
      v80 = a1;
      v39 = 1;
    }
    else
    {
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
      {
        if (qword_2563D4178 != -1)
          swift_once();
        v58 = sub_2362CB494();
        __swift_project_value_buffer(v58, (uint64_t)qword_2563DB5D8);
        v59 = v36;
        v60 = sub_2362CB47C();
        v61 = sub_2362CB848();
        if (os_log_type_enabled(v60, v61))
        {
          v80 = v60;
          v62 = (uint8_t *)swift_slowAlloc();
          v63 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v62 = 138412290;
          v81 = v59;
          v64 = v59;
          v44 = v80;
          sub_2362CB9C8();
          *v63 = v59;

          _os_log_impl(&dword_23624C000, v44, v61, "bogus bundle %@ of unknown type", v62, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
          swift_arrayDestroy();
          MEMORY[0x23B7EF258](v63, -1, -1);
          MEMORY[0x23B7EF258](v62, -1, -1);
        }
        else
        {

          v44 = v59;
        }
        goto LABEL_21;
      }
      v38 = v36;
      v72 = v26;
      v67 = a2;
      v80 = a1;
      v39 = 2;
    }
    v66 = v39;
    v41 = v73;
    v40 = v74;
    v71 = a9;
    v69 = HIDWORD(v74);
    v70 = HIDWORD(v73);
    v42 = v76;
    v68 = HIDWORD(v76);
    type metadata accessor for DataAccess();
    v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v44 = objc_msgSend(v43, sel_initWithContext_, v80);
    v45 = (void *)sub_2362CB674();
    -[NSObject setAccessed_bundle_id:](v44, sel_setAccessed_bundle_id_, v45);

    v46 = objc_msgSend(v38, sel_bundleIdentifier);
    -[NSObject setAccessor_bundle_id:](v44, sel_setAccessor_bundle_id_, v46);

    v81 = __PAIR64__(v70, v41);
    v82 = v40;
    v83 = v69;
    v84 = v42;
    v85 = v68;
    v86 = v71;
    v87 = a10;
    v47 = (id)APDataFromAuditToken((uint64_t)&v81);
    if (v47)
    {
      v48 = sub_2362CB3C8();
      v50 = v49;

      v47 = (id)sub_2362CB3BC();
      sub_23625EFAC(v48, v50);
    }
    v51 = (uint64_t)v75;
    v52 = v66;
    -[NSObject setRaw_audit_token:](v44, sel_setRaw_audit_token_, v47, v65);

    -[NSObject setRaw_accessor_type:](v44, sel_setRaw_accessor_type_, v52);
    sub_236279974(v67, v51);
    v53 = v72((char *)v51, 1, v21);
    v54 = v80;
    if (v53 == 1)
    {
      v55 = 0;
    }
    else
    {
      v55 = (void *)sub_2362CB3F8();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v51, v21);
    }
    -[NSObject setTransaction_uuid:](v44, sel_setTransaction_uuid_, v55);

    v81 = 0;
    if (-[NSObject save:](v54, sel_save_, &v81))
    {
      v56 = v81;
LABEL_21:

      return;
    }
    v57 = v81;
    sub_2362CB2E4();

    swift_willThrow();
  }
}

void sub_2362BB9D4(uint64_t a1, void (*a2)(void *))
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  sub_2362BDFAC(a2);
  if (v2)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v3 = sub_2362CB494();
    __swift_project_value_buffer(v3, (uint64_t)qword_2563DB5D8);
    v4 = v2;
    v5 = v2;
    v6 = sub_2362CB47C();
    v7 = sub_2362CB830();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v10 = v2;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_2362CB9C8();
      *v9 = v11;

      _os_log_impl(&dword_23624C000, v6, v7, "error enumerating DataAccess records: %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v9, -1, -1);
      MEMORY[0x23B7EF258](v8, -1, -1);

    }
    else
    {

    }
  }
}

void sub_2362BBBA4(void *a1)
{
  sub_2362BBC44(a1, (void (*)(_QWORD))type metadata accessor for DataAccess);
}

void sub_2362BBBF4(void *a1)
{
  sub_2362BBC44(a1, (void (*)(_QWORD))type metadata accessor for PreferenceSetting);
}

void sub_2362BBC44(void *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  a2(0);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v4);

  objc_msgSend(v5, sel_setResultType_, 1);
  sub_2362B9A90(a1, (uint64_t)v5);

  if (!v2)
  {
    v8[0] = 0;
    if (objc_msgSend(a1, sel_save_, v8))
    {
      v6 = v8[0];
    }
    else
    {
      v7 = v8[0];
      sub_2362CB2E4();

      swift_willThrow();
    }
  }
}

void sub_2362BBD64(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  _QWORD v20[2];
  void *v21;
  uint64_t v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_2362CB428();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2362BD050();
  if (!v2)
  {
    v11 = v10;
    if (v10)
    {
      objc_msgSend(a1, sel_deleteObject_, v10);
      v23[0] = 0;
      if ((objc_msgSend(a1, sel_save_, v23) & 1) != 0)
      {
        v12 = v23[0];
      }
      else
      {
        v19 = v23[0];
        sub_2362CB2E4();

        swift_willThrow();
      }
    }
    else
    {
      if (qword_2563D4178 != -1)
        swift_once();
      v13 = sub_2362CB494();
      __swift_project_value_buffer(v13, (uint64_t)qword_2563DB5D8);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
      v11 = sub_2362CB47C();
      v14 = sub_2362CB830();
      if (os_log_type_enabled(v11, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v21 = (void *)swift_slowAlloc();
        v23[0] = v21;
        *(_DWORD *)v15 = 136315138;
        v20[1] = v15 + 4;
        sub_236261580();
        v16 = sub_2362CBBC0();
        v22 = sub_2362AB670(v16, v17, (uint64_t *)v23);
        sub_2362CB9C8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        _os_log_impl(&dword_23624C000, v11, v14, "No known access record with uuid %s...", v15, 0xCu);
        v18 = v21;
        swift_arrayDestroy();
        MEMORY[0x23B7EF258](v18, -1, -1);
        MEMORY[0x23B7EF258](v15, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      }
    }

  }
}

void sub_2362BC018(void *a1, unint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = a1;
  sub_2362BD7A8(v4, a2);

  if (!v2)
  {
    v7[0] = 0;
    if (objc_msgSend(v4, sel_save_, v7))
    {
      v5 = v7[0];
    }
    else
    {
      v6 = v7[0];
      sub_2362CB2E4();

      swift_willThrow();
    }
  }
}

uint64_t sub_2362BC0E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t result;
  id v17;
  BOOL v18;
  id v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x24BDAC8D0];
  v20[0] = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2362BDBEC(a2, a3, v20);
  swift_bridgeObjectRelease();
  v9 = v20[0];
  if (v4)
    return swift_bridgeObjectRelease();
  if (v20[0] >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2362CBB18();
    swift_bridgeObjectRelease();
    v18 = v14 > 0;
    swift_bridgeObjectRetain();
    v10 = sub_2362CBB18();
    if (v10)
      goto LABEL_4;
  }
  else
  {
    v10 = *(_QWORD *)((v20[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v10 != 0;
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_4:
      if (v10 < 1)
        __break(1u);
      for (i = 0; i != v10; ++i)
      {
        if ((v9 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x23B7EE7E4](i, v9);
        else
          v12 = *(id *)(v9 + 8 * i + 32);
        v13 = v12;
        objc_msgSend(a1, sel_deleteObject_, v12);

      }
    }
  }
  swift_bridgeObjectRelease();
  v19 = 0;
  if ((objc_msgSend(a1, sel_save_, &v19) & 1) != 0)
  {
    v15 = v19;
    result = swift_bridgeObjectRelease();
    *a4 = v18;
    return result;
  }
  v17 = v19;
  sub_2362CB2E4();

  swift_willThrow();
  return swift_bridgeObjectRelease();
}

void sub_2362BC2D4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2362BE400(a2, a3);
  if (!v4)
  {
    v8 = v7;
    if (v7)
    {
      objc_msgSend(a1, sel_deleteObject_, v7);
      v11[0] = 0;
      if ((objc_msgSend(a1, sel_save_, v11) & 1) != 0)
      {
        v9 = v11[0];

        *a4 = 1;
      }
      else
      {
        v10 = v11[0];
        sub_2362CB2E4();

        swift_willThrow();
      }
    }
    else
    {
      *a4 = 0;
    }
  }
}

void sub_2362BC3C8(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2362BE400(a2, a3);
  if (!v4)
  {
    v8 = v7;
    if (v7)
    {
      if (objc_msgSend(v7, sel_provisional))
      {
        objc_msgSend(v8, sel_setProvisional_, 0);
        v11[0] = 0;
        if (objc_msgSend(a1, sel_save_, v11))
        {
          v9 = v11[0];

          *a4 = 1;
        }
        else
        {
          v10 = v11[0];
          sub_2362CB2E4();

          swift_willThrow();
        }
        return;
      }

    }
    *a4 = 0;
  }
}

uint64_t type metadata accessor for APPersistentStore()
{
  return objc_opt_self();
}

uint64_t sub_2362BC4F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int v3;
  _QWORD v5[6];

  v5[2] = *v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_2362BA440((uint64_t)sub_2362B01B8, (uint64_t)v5);
  if (v3 == 2)
    return 0;
  else
    return v3 & 0x10101;
}

uint64_t sub_2362BC544(uint64_t a1, unint64_t a2, int a3)
{
  return sub_2362BA650(a1, a2, a3 & 0x10101) & 1;
}

void sub_2362BC574()
{
  sub_2362BA1B8((uint64_t)sub_2362BAA9C, 0);
}

void sub_2362BC5A0()
{
  sub_2362BA1B8((uint64_t)sub_2362BAAEC, 0);
}

void sub_2362BC5CC(uint64_t a1, uint64_t a2)
{
  _QWORD v2[4];

  v2[3] = a2;
  v2[2] = a1;
  sub_2362BA07C((uint64_t)sub_2362B01E8, (uint64_t)v2);
}

void sub_2362BC604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD v12[10];

  v12[2] = a12;
  v12[3] = a7;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a8;
  v12[7] = a9;
  v12[8] = a10;
  v12[9] = a11;
  sub_2362BA07C((uint64_t)sub_2362BE1B0, (uint64_t)v12);
}

void sub_2362BC668(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[2] = a1;
  v2[3] = a2;
  sub_2362BA07C((uint64_t)sub_23625B2F0, (uint64_t)v2);
}

void sub_2362BC6AC()
{
  sub_2362BA07C((uint64_t)sub_2362BBBA4, 0);
}

void sub_2362BC6D8(uint64_t a1)
{
  _QWORD v1[4];

  v1[2] = a1;
  sub_2362BA07C((uint64_t)sub_2362BDF54, (uint64_t)v1);
}

void sub_2362BC710(uint64_t a1)
{
  _QWORD v1[4];

  v1[2] = a1;
  sub_2362BA07C((uint64_t)sub_2362BDF14, (uint64_t)v1);
}

uint64_t sub_2362BC748(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[3] = a2;
  v3[2] = a1;
  return sub_2362BA300((uint64_t)sub_23625B25C, (uint64_t)v3) & 1;
}

uint64_t sub_2362BC784(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2362BC810(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2362BC7A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2362BC978(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2362BC7BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2362BCB18(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2362BC7D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2362BCCA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2362BC7F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2362BCE2C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2362BC810(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D7100);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362BC978(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D4210);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2563D3FE0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362BCB18(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A51D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A51C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362BCCA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5208);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 < a4 || v13 >= v14 + 16 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_34:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

uint64_t sub_2362BCE2C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7838);
  v10 = *(_QWORD *)(type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper()
                  - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper()
                  - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_2362CBB48();
  __break(1u);
  return result;
}

_QWORD *sub_2362BD00C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v1 + 16))(&v5, *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = v5;
  return result;
}

id sub_2362BD050()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2362CB674();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  sub_23625B534(0, &qword_2563D41C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2362CE0F0;
  v4 = sub_2362CB3F8();
  *(_QWORD *)(v3 + 56) = sub_23625B534(0, &qword_2563D7808);
  *(_QWORD *)(v3 + 64) = sub_2362BDF6C(&qword_2563D7810, &qword_2563D7808);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)sub_2362CB800();
  objc_msgSend(v2, sel_setPredicate_, v5);

  v21[0] = 0;
  v6 = objc_msgSend(v2, sel_execute_, v21);
  v7 = v21[0];
  if (!v6)
  {
    v17 = v21[0];
    sub_2362CB2E4();

    swift_willThrow();
    return v7;
  }
  v8 = v6;
  type metadata accessor for DataAccess();
  v9 = sub_2362CB764();
  v10 = v7;

  if (!(v9 >> 62))
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v11 == 1;
    if (v11 >= 1)
      goto LABEL_4;
LABEL_20:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v19 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  v12 = v19 == 1;
  if (v19 < 1)
    goto LABEL_20;
LABEL_4:
  if (v12)
    goto LABEL_9;
  if (qword_2563D4178 != -1)
    goto LABEL_24;
  while (1)
  {
    v13 = sub_2362CB494();
    __swift_project_value_buffer(v13, (uint64_t)qword_2563DB5D8);
    v14 = sub_2362CB47C();
    v15 = sub_2362CB83C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23624C000, v14, v15, "multiple access records with same UUID!?", v16, 2u);
      MEMORY[0x23B7EF258](v16, -1, -1);
    }

LABEL_9:
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = (id)sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_18;
    }
    else
    {
      v7 = *(id *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v7)
        goto LABEL_18;
    }
    if ((v9 & 0xC000000000000001) != 0)
      break;
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v9 + 32);
      goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  v18 = (id)MEMORY[0x23B7EE7E4](0, v9);
LABEL_17:
  v7 = v18;
LABEL_18:
  swift_bridgeObjectRelease();

  return v7;
}

id sub_2362BD3DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_23625B534(0, &qword_2563D41C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2362CE0E0;
  v1 = sub_2362CB674();
  v2 = sub_23625B534(0, &qword_2563D73F0);
  *(_QWORD *)(v0 + 56) = v2;
  v3 = sub_2362BDF6C(&qword_2563D7818, &qword_2563D73F0);
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v0 + 32) = v1;
  v4 = sub_2362CB674();
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v3;
  *(_QWORD *)(v0 + 72) = v4;
  v5 = (void *)sub_2362CB800();
  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_2362CB674();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  objc_msgSend(v8, sel_setPredicate_, v5);
  v24[0] = 0;
  v9 = objc_msgSend(v8, sel_execute_, v24);
  v10 = v24[0];
  if (!v9)
  {
    v20 = v24[0];
    sub_2362CB2E4();

    swift_willThrow();
    return v10;
  }
  v11 = v9;
  type metadata accessor for DataAccess();
  v12 = sub_2362CB764();
  v13 = v10;

  if (!(v12 >> 62))
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 == 1;
    if (v14 >= 1)
      goto LABEL_4;
LABEL_20:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v22 = sub_2362CBB18();
  swift_bridgeObjectRelease();
  v15 = v22 == 1;
  if (v22 < 1)
    goto LABEL_20;
LABEL_4:
  if (v15)
    goto LABEL_9;
  if (qword_2563D4178 != -1)
    goto LABEL_24;
  while (1)
  {
    v16 = sub_2362CB494();
    __swift_project_value_buffer(v16, (uint64_t)qword_2563DB5D8);
    v17 = sub_2362CB47C();
    v18 = sub_2362CB83C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23624C000, v17, v18, "multiple access records with same accessor and accessee!?", v19, 2u);
      MEMORY[0x23B7EF258](v19, -1, -1);
    }

LABEL_9:
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = (id)sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (!v10)
        goto LABEL_18;
    }
    else
    {
      v10 = *(id *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v10)
        goto LABEL_18;
    }
    if ((v12 & 0xC000000000000001) != 0)
      break;
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v21 = *(id *)(v12 + 32);
      goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  v21 = (id)MEMORY[0x23B7EE7E4](0, v12);
LABEL_17:
  v10 = v21;
LABEL_18:

  swift_bridgeObjectRelease();
  return v10;
}

void sub_2362BD7A8(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  __int128 v39;
  unint64_t v40;
  id v41;
  pid_t v42;
  audit_token_t atoken;
  id v44[3];
  uint64_t v45;
  _BYTE v46[36];
  audit_token_t v47;
  char v48;
  uint64_t v49;

  v40 = a2;
  v41 = a1;
  v49 = *MEMORY[0x24BDAC8D0];
  v33 = sub_2362CB2FC();
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v6 = (void *)sub_2362CB674();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v44[0] = 0;
  v8 = objc_msgSend(v7, sel_execute_, v44);
  if (v8)
  {
    v9 = v8;
    v10 = v44[0];
    v31 = v9;
    sub_2362CB974();
    sub_2362CB2F0();
    if (v45)
    {
      v34 = HIDWORD(v40);
      v11 = type metadata accessor for DataAccess();
      *(_QWORD *)&v12 = 138412290;
      v39 = v12;
      v38 = v7;
      v37 = v4;
      v36 = v11;
      v35 = MEMORY[0x24BEE4AD8] + 8;
      do
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v13 = *(void **)atoken.val;
          if (qword_2563D4178 != -1)
            swift_once();
          v14 = sub_2362CB494();
          __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
          v15 = v13;
          v16 = sub_2362CB47C();
          v17 = sub_2362CB848();
          if (os_log_type_enabled(v16, v17))
          {
            v18 = swift_slowAlloc();
            v19 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v18 = v39;
            *(_QWORD *)(v18 + 4) = v15;
            *v19 = v15;
            _os_log_impl(&dword_23624C000, v16, v17, "evaluating %@ for removal", (uint8_t *)v18, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
            swift_arrayDestroy();
            MEMORY[0x23B7EF258](v19, -1, -1);
            MEMORY[0x23B7EF258](v18, -1, -1);
          }
          else
          {

            v16 = v15;
          }

          sub_2362B9518((uint64_t)v46);
          sub_23625F248((uint64_t)v46, (uint64_t)&v47, &qword_2563D7178);
          if ((v48 & 1) != 0)
            goto LABEL_15;
          v20 = v47.val[0];
          v21 = v47.val[1];
          v23 = v47.val[2];
          v22 = v47.val[3];
          v24 = v47.val[4];
          v25 = v47.val[5];
          v26 = v47.val[6];
          v27 = v47.val[7];
          atoken = v47;
          v42 = audit_token_to_pid(&atoken);
          atoken.val[0] = v20;
          atoken.val[1] = v21;
          atoken.val[2] = v23;
          atoken.val[3] = v22;
          atoken.val[4] = v24;
          atoken.val[5] = v25;
          atoken.val[6] = v26;
          atoken.val[7] = v27;
          v28 = audit_token_to_pidversion(&atoken);
          if (v42 == (_DWORD)v40)
          {
            v7 = v38;
            v4 = v37;
            if (v28 == (_DWORD)v34)
LABEL_15:
              objc_msgSend(v41, sel_deleteObject_, v15);

            goto LABEL_5;
          }

          v7 = v38;
          v4 = v37;
        }
LABEL_5:
        sub_2362CB2F0();
      }
      while (v45);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v33);

  }
  else
  {
    v29 = v44[0];
    sub_2362CB2E4();

    swift_willThrow();
  }
}

void sub_2362BDBEC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39[3];
  uint64_t v40;
  uint64_t v41;

  v36 = a2;
  v37 = a1;
  v41 = *MEMORY[0x24BDAC8D0];
  v5 = sub_2362CB2FC();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_2362CB674();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  v39[0] = 0;
  v12 = objc_msgSend(v11, sel_execute_, v39);
  if (v12)
  {
    v13 = v12;
    v33 = v5;
    v34 = v3;
    v14 = v39[0];
    v32 = v13;
    sub_2362CB974();
    sub_2362CB2F0();
    if (v40)
    {
      type metadata accessor for DataAccess();
      do
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v15 = v38;
          v16 = objc_msgSend(v38, sel_accessed_bundle_id);
          if (v16)
          {
            v17 = v16;
            v18 = sub_2362CB698();
            v20 = v19;

            if (v18 == v37 && v20 == v36)
            {
LABEL_20:
              swift_bridgeObjectRelease();
LABEL_21:
              v30 = v15;
              MEMORY[0x23B7EE4B4]();
              if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_2362CB77C();
              sub_2362CB788();
              sub_2362CB770();

              goto LABEL_5;
            }
            v22 = sub_2362CBBE4();
            swift_bridgeObjectRelease();
            if ((v22 & 1) != 0)
              goto LABEL_21;
          }
          v23 = objc_msgSend(v15, sel_accessor_bundle_id);
          if (v23)
          {
            v24 = v23;
            v25 = sub_2362CB698();
            v27 = v26;

            if (v25 == v37 && v27 == v36)
              goto LABEL_20;
            v29 = sub_2362CBBE4();
            swift_bridgeObjectRelease();
            if ((v29 & 1) != 0)
              goto LABEL_21;
          }

        }
LABEL_5:
        sub_2362CB2F0();
      }
      while (v40);
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v33);

  }
  else
  {
    v31 = v39[0];
    sub_2362CB2E4();

    swift_willThrow();
  }
}

void sub_2362BDF14(void *a1)
{
  uint64_t v1;

  sub_2362BC018(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2362BDF2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_2362BDF54(void *a1)
{
  uint64_t v1;

  sub_2362BBD64(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2362BDF6C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23625B534(255, a2);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE5BE8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2362BDFAC(void (*a1)(void *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20[3];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = sub_2362CB2FC();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_2362CB674();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v20[0] = 0;
  v10 = objc_msgSend(v9, sel_execute_, v20);
  if (v10)
  {
    v11 = v10;
    v16 = v3;
    v17 = v1;
    v12 = v20[0];
    sub_2362CB974();
    sub_2362CB2F0();
    if (v21)
    {
      type metadata accessor for DataAccess();
      do
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v13 = v19;
          a1(v19);

        }
        sub_2362CB2F0();
      }
      while (v21);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v16);

  }
  else
  {
    v14 = v20[0];
    sub_2362CB2E4();

    swift_willThrow();
  }
}

void sub_2362BE1B0(NSObject *a1)
{
  uint64_t v1;

  sub_2362BB3F4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), HIDWORD(*(_QWORD *)(v1 + 72)));
}

unint64_t sub_2362BE1E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D7820;
  if (!qword_2563D7820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D41B0);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_2563D7820);
  }
  return result;
}

_QWORD *sub_2362BE22C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v1 + 16))(&v5, *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = v5;
  return result;
}

_QWORD *sub_2362BE270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  __int16 v5;
  uint64_t v6;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v1 + 16))(&v6, *(_QWORD *)(v1 + 32));
  if (!v2)
  {
    v5 = v6;
    *(_BYTE *)(a1 + 2) = BYTE2(v6);
    *(_WORD *)a1 = v5;
  }
  return result;
}

id sub_2362BE2BC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v3 = (void *)sub_2362CB674();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setPredicate_, a1);
  v11[0] = 0;
  v5 = objc_msgSend(v4, sel_execute_, v11);
  v6 = v11[0];
  if (v5)
  {
    v7 = v5;
    type metadata accessor for PreferenceSetting();
    v8 = (id)sub_2362CB764();
    v9 = v6;

  }
  else
  {
    v8 = v11[0];
    sub_2362CB2E4();

    swift_willThrow();
  }

  return v8;
}

void sub_2362BE400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  sub_23625B534(0, &qword_2563D41C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D3E80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2362CE0F0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 64) = sub_2362741BC();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  v6 = (void *)sub_2362CB800();
  v7 = sub_2362BE2BC((uint64_t)v6);

  if (!v2)
  {
    if ((unint64_t)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_2362CBB18();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_4:
        if (((unint64_t)v7 & 0xC000000000000001) != 0)
        {
          MEMORY[0x23B7EE7E4](0, v7);
        }
        else
        {
          if (!*(_QWORD *)(((unint64_t)v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v8 = *((id *)v7 + 4);
        }
      }
    }
    else if (*(_QWORD *)(((unint64_t)v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_2362BE568(void *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v1 + 42))
    v2 = 0x10000;
  else
    v2 = 0;
  if (*(_BYTE *)(v1 + 41))
    v3 = 256;
  else
    v3 = 0;
  sub_2362BA890(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v3 | *(unsigned __int8 *)(v1 + 40) | v2, *(_BYTE **)(v1 + 48));
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for APAppPreferences(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for APAppPreferences(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for APAppPreferences()
{
  return &type metadata for APAppPreferences;
}

uint64_t getEnumTagSinglePayload for AccessorType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessorType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2362BE7C0 + 4 * byte_2362D01F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2362BE7F4 + 4 * byte_2362D01F0[v4]))();
}

uint64_t sub_2362BE7F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362BE7FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2362BE804);
  return result;
}

uint64_t sub_2362BE810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2362BE818);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2362BE81C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362BE824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessorType()
{
  return &type metadata for AccessorType;
}

unint64_t sub_2362BE844()
{
  unint64_t result;

  result = qword_2563D7830;
  if (!qword_2563D7830)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D02F8, &type metadata for AccessorType);
    atomic_store(result, (unint64_t *)&qword_2563D7830);
  }
  return result;
}

void sub_2362BE888(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id sub_2362BE908()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s17AccessListWrapperCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void __swiftcall APStateDump.init(coder:)(APStateDump_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

id APStateDump.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v16;
  objc_super v17;
  uint64_t v18;

  sub_23625B534(0, &qword_2563D7840);
  v3 = v1;
  v4 = sub_2362CB980();
  if (!v4)
  {

LABEL_6:
    type metadata accessor for APStateDump(v13);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v5 = (void *)v4;
  v6 = OBJC_IVAR___APStateDump_clientState;
  *(_QWORD *)&v3[OBJC_IVAR___APStateDump_clientState] = v4;
  sub_23625B534(0, (unint64_t *)&unk_2563D7850);
  v7 = v5;
  v8 = sub_2362CB980();
  if (!v8)
  {

    v14 = *(void **)&v3[v6];
    goto LABEL_6;
  }
  v9 = (void *)v8;
  sub_2362CB2A8();
  swift_allocObject();
  sub_2362CB29C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5FC8);
  v10 = sub_2362CB3C8();
  v12 = v11;
  sub_2362C0494(&qword_2563D7860, &qword_2563D7868, (uint64_t)&unk_2362CE6B8, MEMORY[0x24BEE12D0]);
  sub_2362CB290();
  sub_23625EFAC(v10, v12);
  swift_release();

  *(_QWORD *)&v3[OBJC_IVAR___APStateDump_extantAccesses] = v18;
  v17.receiver = v3;
  v17.super_class = (Class)APStateDump;
  v16 = objc_msgSendSuper2(&v17, sel_init);

  return v16;
}

uint64_t type metadata accessor for APStateDump(uint64_t a1)
{
  return sub_23625B534(a1, (unint64_t *)&unk_2563D7940);
}

void sub_2362BEC84(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___APStateDump_clientState);
  v4 = (void *)sub_2362CB674();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  sub_2362CB2CC();
  swift_allocObject();
  sub_2362CB2C0();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5FC8);
  sub_2362C0494((unint64_t *)&unk_2563D5FD8, &qword_2563D5D30, (uint64_t)&unk_2362CE690, MEMORY[0x24BEE12A0]);
  v5 = sub_2362CB2B4();
  v7 = v6;
  swift_release();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_2362CB3BC();
  sub_23625EFAC(v5, v7);
  v9 = (void *)sub_2362CB674();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

}

uint64_t sub_2362BEE88()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v2 = sub_2362CB1A0();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2362CB1D0();
  swift_allocObject();
  sub_2362CB1C4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7958);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2362CE0E0;
  sub_2362CB188();
  sub_2362CB194();
  sub_23624E3C4(&qword_2563D7960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7968);
  sub_2362C03C0();
  sub_2362CB9F8();
  sub_2362CB1AC();
  sub_2362C040C();
  v4 = v0;
  v5 = sub_2362CB1B8();
  if (v1)
  {

    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v7 = v5;
    v8 = v6;

    sub_2362C0450();
    sub_2362CB80C();
    swift_release();
    return sub_23625EFAC(v7, v8);
  }
  return result;
}

void APStateDump.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2362BF1A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2362BF1D8 + 4 * byte_2362D0370[*v0]))(0x704164656B636F6CLL, 0xEA00000000007370);
}

uint64_t sub_2362BF1D8()
{
  return 0x70416E6564646968;
}

unint64_t sub_2362BF1EC()
{
  return 0xD000000000000015;
}

uint64_t sub_2362BF208()
{
  return 0x6341746E61747865;
}

uint64_t sub_2362BF22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2362BFBDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2362BF250()
{
  sub_2362C0564();
  return sub_2362CBD04();
}

uint64_t sub_2362BF278()
{
  sub_2362C0564();
  return sub_2362CBD10();
}

uint64_t sub_2362BF2A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2362BF2D0 + 4 * byte_2362D0374[*v0]))(0x6565737365636361, 0xE800000000000000);
}

uint64_t sub_2362BF2D0()
{
  return 0x726F737365636361;
}

uint64_t sub_2362BF2E4()
{
  return 1701869940;
}

uint64_t sub_2362BF2F4()
{
  return 6580592;
}

uint64_t sub_2362BF304()
{
  return 1684632949;
}

uint64_t sub_2362BF314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2362BFDC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2362BF338()
{
  sub_2362C0FD0();
  return sub_2362CBD04();
}

uint64_t sub_2362BF360()
{
  sub_2362C0FD0();
  return sub_2362CBD10();
}

uint64_t sub_2362BF388(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  audit_token_t atoken;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D79F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&atoken - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2362C0FD0();
  sub_2362CBCF8();
  LOBYTE(atoken.val[0]) = 0;
  sub_2362CBB84();
  if (!v2)
  {
    LOBYTE(atoken.val[0]) = 1;
    sub_2362CBB84();
    LOBYTE(atoken.val[0]) = 2;
    sub_2362CBBA8();
    v10 = *(_OWORD *)(v3 + 52);
    *(_OWORD *)atoken.val = *(_OWORD *)(v3 + 36);
    *(_OWORD *)&atoken.val[4] = v10;
    audit_token_to_pid(&atoken);
    LOBYTE(atoken.val[0]) = 3;
    sub_2362CBBB4();
    type metadata accessor for DataAccessRecord();
    LOBYTE(atoken.val[0]) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    sub_2362C1014();
    sub_2362CBB9C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_2362BF550(_QWORD *a1)
{
  return sub_2362BF388(a1);
}

uint64_t sub_2362BF564(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;

  v4 = type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563D7988);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2362C0564();
  sub_2362CBCF8();
  v14 = *(void **)(a2 + OBJC_IVAR___APStateDump_clientState);
  v41 = a2;
  v42 = v14;
  v15 = objc_msgSend(v14, sel_lockedAppBundleIdentifiers);
  v16 = sub_2362CB7AC();

  v17 = sub_236259A3C(v16);
  swift_bridgeObjectRelease();
  v45 = v17;
  v44 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41A8);
  sub_2362C05A8();
  v18 = v43;
  sub_2362CBB9C();
  if (v18)
  {
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    v39 = v8;
    v40 = v5;
    v43 = v10;
    swift_release();
    v20 = v42;
    v21 = objc_msgSend(v42, sel_hiddenAppBundleIdentifiers);
    v22 = sub_2362CB7AC();

    v23 = sub_236259A3C(v22);
    swift_bridgeObjectRelease();
    v45 = v23;
    v44 = 1;
    sub_2362CBB9C();
    swift_release();
    v24 = objc_msgSend(v20, sel_effectivelyLockedAppBundleIdentifiers);
    v25 = sub_2362CB7AC();

    v26 = sub_236259A3C(v25);
    swift_bridgeObjectRelease();
    v45 = v26;
    v44 = 2;
    sub_2362CBB9C();
    swift_release();
    v42 = 0;
    v27 = *(_QWORD *)(v41 + OBJC_IVAR___APStateDump_extantAccesses);
    v28 = *(_QWORD *)(v27 + 16);
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v28)
    {
      v41 = v9;
      v45 = (_QWORD *)MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_2362BC7F4(0, v28, 0);
      v29 = v45;
      v30 = *(_QWORD *)(type metadata accessor for DataAccessRecord() - 8);
      v31 = *(unsigned __int8 *)(v30 + 80);
      v38[1] = v27;
      v32 = v27 + ((v31 + 32) & ~v31);
      v33 = *(_QWORD *)(v30 + 72);
      v35 = (uint64_t)v39;
      v34 = v40;
      do
      {
        sub_23625EFF0(v32, v35);
        v45 = v29;
        v37 = v29[2];
        v36 = v29[3];
        if (v37 >= v36 >> 1)
        {
          sub_2362BC7F4(v36 > 1, v37 + 1, 1);
          v34 = v40;
          v29 = v45;
        }
        v29[2] = v37 + 1;
        sub_2362C0604(v35, (uint64_t)v29+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v37);
        v32 += v33;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      v9 = v41;
    }
    v45 = v29;
    v44 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563D79A8);
    sub_2362C0648();
    sub_2362CBB9C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v13, v9);
  }
}

uint64_t sub_2362BF990(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2362BF564(a1, *v1);
}

void sub_2362BFA14(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  id v9;
  void *v10;
  id v11;

  swift_beginAccess();
  v8 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;
  v9 = a1;

  swift_beginAccess();
  v10 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = a2;
  v11 = a2;

}

id _sSo11APStateDumpC13AppProtectionEABycfC_0()
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id APMaintenanceHandle.init()()
{
  objc_super v1;

  v1.super_class = (Class)APMaintenanceHandle;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t _s17AccessListWrapperCMa()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APMaintenanceHandle(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7950);
}

uint64_t sub_2362BFBDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x704164656B636F6CLL && a2 == 0xEA00000000007370;
  if (v2 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70416E6564646968 && a2 == 0xEA00000000007370 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002362D8130 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6341746E61747865 && a2 == 0xEE00736573736563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2362BFDC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6565737365636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xE800000000000000 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6580592 && a2 == 0xE300000000000000 || (sub_2362CBBE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2362BFFB4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, void *);
  void *v11;
  void *v12;
  uint64_t v13;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v12 = sub_236280C60;
  v13 = v0;
  v1 = MEMORY[0x24BDAC760];
  v8 = MEMORY[0x24BDAC760];
  v9 = 1107296256;
  v10 = sub_2362C96F0;
  v11 = &block_descriptor_14_1;
  v2 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  v3 = APGetSyncMaintenanceProxy(v2);
  _Block_release(v2);
  v12 = sub_2362C03B8;
  v13 = v0;
  v8 = v1;
  v9 = 1107296256;
  v10 = sub_2362BE888;
  v11 = &block_descriptor_17;
  v4 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_clearAccessTableWithCompletion_, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v5 = *(void **)(v0 + 16);
  if (v5)
  {
    v6 = v5;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_2362C0138()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t result;
  id v11;
  uint64_t aBlock;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = (id *)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v16 = sub_236280C60;
  v17 = v0;
  v3 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_2362C96F0;
  v15 = &block_descriptor_21;
  v4 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v5 = APGetSyncMaintenanceProxy(v4);
  _Block_release(v4);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v0;
  v16 = sub_2362C03B0;
  v17 = v6;
  aBlock = v3;
  v13 = 1107296256;
  v14 = sub_23627CE3C;
  v15 = &block_descriptor_10_1;
  v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_getStateDumpWithCompletion_, v7);
  _Block_release(v7);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v8 = *(void **)(v2 + 16);
  if (v8)
  {
    v9 = v8;
    swift_release();
    swift_release();
    return (uint64_t)v9;
  }
  else
  {
    result = swift_beginAccess();
    if (*v1)
    {
      v11 = *v1;
      swift_willThrow();
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2362C033C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362C0360()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362C0384()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2362C03B0(void *a1, void *a2)
{
  uint64_t v2;

  sub_2362BFA14(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_2362C03B8(void *a1)
{
  uint64_t v1;

  sub_23627BC9C(a1, v1);
}

unint64_t sub_2362C03C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563D7970;
  if (!qword_2563D7970)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D7968);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2563D7970);
  }
  return result;
}

unint64_t sub_2362C040C()
{
  unint64_t result;

  result = qword_2563D7978;
  if (!qword_2563D7978)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D03CC, &type metadata for APStateDumpEncodingWrapper);
    atomic_store(result, (unint64_t *)&qword_2563D7978);
  }
  return result;
}

unint64_t sub_2362C0450()
{
  unint64_t result;

  result = qword_2563D7980;
  if (!qword_2563D7980)
  {
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563D7980);
  }
  return result;
}

uint64_t sub_2362C0494(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2563D5FC8);
    v10 = sub_23624E3C4(a2, (uint64_t (*)(uint64_t))type metadata accessor for DataAccessRecord, a3);
    result = MEMORY[0x23B7EF18C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for APStateDumpEncodingWrapper()
{
  return &type metadata for APStateDumpEncodingWrapper;
}

uint64_t type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper()
{
  uint64_t result;

  result = qword_2563D79C0;
  if (!qword_2563D79C0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2362C0564()
{
  unint64_t result;

  result = qword_2563D7990;
  if (!qword_2563D7990)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D051C, &type metadata for APStateDumpEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D7990);
  }
  return result;
}

unint64_t sub_2362C05A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2563D79A0;
  if (!qword_2563D79A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D41A8);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2563D79A0);
  }
  return result;
}

uint64_t sub_2362C0604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2362C0648()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2563D79B0;
  if (!qword_2563D79B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563D79A8);
    v2 = sub_23624E3C4(&qword_2563D79B8, (uint64_t (*)(uint64_t))type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper, (uint64_t)&unk_2362D04F4);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2563D79B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for APStateDumpEncodingWrapper.Keys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2362C0710 + 4 * byte_2362D037E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2362C0744 + 4 * byte_2362D0379[v4]))();
}

uint64_t sub_2362C0744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C074C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2362C0754);
  return result;
}

uint64_t sub_2362C0760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2362C0768);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2362C076C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C0774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for APStateDumpEncodingWrapper.Keys()
{
  return &type metadata for APStateDumpEncodingWrapper.Keys;
}

uint64_t sub_2362C0790(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for DataAccessRecord();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)(a1 + 36) = *(_OWORD *)((char *)a2 + 36);
    *(_OWORD *)(a1 + 52) = *(_OWORD *)((char *)a2 + 52);
    v8 = *(int *)(v4 + 32);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_2362CB428();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_2362C08BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for DataAccessRecord() + 32);
  v3 = sub_2362CB428();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t sub_2362C0944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v6 = *(int *)(type metadata accessor for DataAccessRecord() + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_2362C0A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  v4 = *(int *)(type metadata accessor for DataAccessRecord() + 32);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_2362CB428();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_2362C0BD8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v5 = *(int *)(type metadata accessor for DataAccessRecord() + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_2362CB428();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_2362C0CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v6 = *(int *)(type metadata accessor for DataAccessRecord() + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_2362C0DFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2362C0E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DataAccessRecord();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2362C0E44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2362C0E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DataAccessRecord();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2362C0E90()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DataAccessRecord();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2362C0EFC()
{
  unint64_t result;

  result = qword_2563D79D8;
  if (!qword_2563D79D8)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D04CC, &type metadata for APStateDumpEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D79D8);
  }
  return result;
}

unint64_t sub_2362C0F44()
{
  unint64_t result;

  result = qword_2563D79E0;
  if (!qword_2563D79E0)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D043C, &type metadata for APStateDumpEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D79E0);
  }
  return result;
}

unint64_t sub_2362C0F8C()
{
  unint64_t result;

  result = qword_2563D79E8;
  if (!qword_2563D79E8)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D0464, &type metadata for APStateDumpEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D79E8);
  }
  return result;
}

unint64_t sub_2362C0FD0()
{
  unint64_t result;

  result = qword_2563D79F8;
  if (!qword_2563D79F8)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D0624, &type metadata for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D79F8);
  }
  return result;
}

unint64_t sub_2362C1014()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2563D7A00;
  if (!qword_2563D7A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542A5220);
    v2 = sub_23624E3C4(&qword_2563D7650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B7EF18C](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2563D7A00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2362C10DC + 4 * byte_2362D0388[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2362C1110 + 4 * byte_2362D0383[v4]))();
}

uint64_t sub_2362C1110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C1118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2362C1120);
  return result;
}

uint64_t sub_2362C112C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2362C1134);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2362C1138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C1140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys()
{
  return &type metadata for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys;
}

unint64_t sub_2362C1160()
{
  unint64_t result;

  result = qword_2563D7A10;
  if (!qword_2563D7A10)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D05FC, &type metadata for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D7A10);
  }
  return result;
}

unint64_t sub_2362C11A8()
{
  unint64_t result;

  result = qword_2563D7A18;
  if (!qword_2563D7A18)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D056C, &type metadata for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D7A18);
  }
  return result;
}

unint64_t sub_2362C11F0()
{
  unint64_t result;

  result = qword_2563D7A20;
  if (!qword_2563D7A20)
  {
    result = MEMORY[0x23B7EF18C](&unk_2362D0594, &type metadata for APStateDumpEncodingWrapper.APStateDumpEncodingWrapperDataAccessRecordEncodingWrapper.Keys);
    atomic_store(result, (unint64_t *)&qword_2563D7A20);
  }
  return result;
}

id sub_2362C1280()
{
  return sub_236276B3C(0, type metadata accessor for ClientArenaWrapper);
}

void APSubject.isHidden.getter()
{
  sub_2362CBB00();
  __break(1u);
}

void APSubject.isLocked.getter()
{
  sub_2362CBB00();
  __break(1u);
}

id static APSubject.hiddenMetaSubject.getter()
{
  return sub_2362C15F8(qword_2563D5998, (id *)&qword_2563DB610);
}

id sub_2362C15A0(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

id static APSubject.lockedMetaSubject.getter()
{
  return sub_2362C15F8(qword_2563D6A10, (id *)&qword_2563DB680);
}

id sub_2362C15F8(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

void __swiftcall APSubject.init()(APSubject *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void APSubject.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t APSubject.shieldable.getter()
{
  return 1;
}

id sub_2362C1738(void *a1)
{
  _BYTE *v1;
  char *v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  id v31;
  id v32;
  _QWORD v33[2];
  objc_super v34;
  objc_super v35;
  _QWORD v36[5];
  _QWORD v37[3];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];
  uint64_t v41;

  v1[OBJC_IVAR___APExtension_forcedLockedValue] = 2;
  v3 = v1;
  result = objc_msgSend(a1, sel_bundleIdentifier);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  v6 = sub_2362CB698();
  v8 = v7;

  v9 = (uint64_t *)&v3[OBJC_IVAR___APExtension_bundleIdentifier];
  *v9 = v6;
  v9[1] = v8;
  result = objc_msgSend(a1, sel_uniqueIdentifier);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_QWORD *)&v3[OBJC_IVAR___APExtension_extensionUUIDStorage] = result;

  if (qword_2542A5598 != -1)
    swift_once();
  sub_23624E76C((uint64_t)qword_2542A5920, (uint64_t)v40);
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
  v33[1] = v33;
  MEMORY[0x24BDAC7A8](v10, v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  v38 = &type metadata for ServerBackedClientArena;
  v39 = &off_250794558;
  v14 = swift_allocObject();
  v37[0] = v14;
  v15 = *((_OWORD *)v12 + 7);
  *(_OWORD *)(v14 + 112) = *((_OWORD *)v12 + 6);
  *(_OWORD *)(v14 + 128) = v15;
  *(_QWORD *)(v14 + 144) = *((_QWORD *)v12 + 16);
  v16 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v14 + 48) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v14 + 64) = v16;
  v17 = *((_OWORD *)v12 + 5);
  *(_OWORD *)(v14 + 80) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v14 + 96) = v17;
  v18 = *((_OWORD *)v12 + 1);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v12;
  *(_OWORD *)(v14 + 32) = v18;
  v19 = (objc_class *)type metadata accessor for ClientArenaWrapper();
  v20 = objc_allocWithZone(v19);
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, (uint64_t)v38);
  MEMORY[0x24BDAC7A8](v21, v21);
  v23 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v36[3] = &type metadata for ServerBackedClientArena;
  v36[4] = &off_250794558;
  v25 = swift_allocObject();
  v36[0] = v25;
  v26 = *((_OWORD *)v23 + 7);
  *(_OWORD *)(v25 + 112) = *((_OWORD *)v23 + 6);
  *(_OWORD *)(v25 + 128) = v26;
  *(_QWORD *)(v25 + 144) = *((_QWORD *)v23 + 16);
  v27 = *((_OWORD *)v23 + 3);
  *(_OWORD *)(v25 + 48) = *((_OWORD *)v23 + 2);
  *(_OWORD *)(v25 + 64) = v27;
  v28 = *((_OWORD *)v23 + 5);
  *(_OWORD *)(v25 + 80) = *((_OWORD *)v23 + 4);
  *(_OWORD *)(v25 + 96) = v28;
  v29 = *((_OWORD *)v23 + 1);
  v30 = (uint64_t)v20 + OBJC_IVAR____TtC13AppProtectionP33_215D8CF8FF516198782505704A9473C518ClientArenaWrapper_arena;
  *(_OWORD *)(v25 + 16) = *(_OWORD *)v23;
  *(_OWORD *)(v25 + 32) = v29;
  sub_23624E76C((uint64_t)v36, v30);
  v35.receiver = v20;
  v35.super_class = v19;
  v31 = objc_msgSendSuper2(&v35, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v34.receiver = v3;
  v34.super_class = (Class)APExtension;
  v32 = objc_msgSendSuper2(&v34, sel_initWithArena_, v31);

  return v32;
}

id sub_2362C1A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  objc_class *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD v32[2];
  objc_super v33;
  objc_super v34;
  _QWORD v35[5];
  _QWORD v36[3];
  ValueMetadata *v37;
  _UNKNOWN **v38;
  _BYTE v39[24];
  uint64_t v40;

  v3[OBJC_IVAR___APExtension_forcedLockedValue] = 2;
  v5 = &v3[OBJC_IVAR___APExtension_bundleIdentifier];
  *v5 = a2;
  v5[1] = a3;
  v6 = v3;
  *(_QWORD *)&v6[OBJC_IVAR___APExtension_extensionUUIDStorage] = sub_2362CB3F8();

  if (qword_2542A5598 != -1)
    swift_once();
  sub_23624E76C((uint64_t)qword_2542A5920, (uint64_t)v39);
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  v32[1] = v32;
  MEMORY[0x24BDAC7A8](v7, v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v37 = &type metadata for ServerBackedClientArena;
  v38 = &off_250794558;
  v11 = swift_allocObject();
  v36[0] = v11;
  v12 = *((_OWORD *)v9 + 7);
  *(_OWORD *)(v11 + 112) = *((_OWORD *)v9 + 6);
  *(_OWORD *)(v11 + 128) = v12;
  *(_QWORD *)(v11 + 144) = *((_QWORD *)v9 + 16);
  v13 = *((_OWORD *)v9 + 3);
  *(_OWORD *)(v11 + 48) = *((_OWORD *)v9 + 2);
  *(_OWORD *)(v11 + 64) = v13;
  v14 = *((_OWORD *)v9 + 5);
  *(_OWORD *)(v11 + 80) = *((_OWORD *)v9 + 4);
  *(_OWORD *)(v11 + 96) = v14;
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v11 + 32) = v15;
  v16 = (objc_class *)type metadata accessor for ClientArenaWrapper();
  v17 = objc_allocWithZone(v16);
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, (uint64_t)v37);
  MEMORY[0x24BDAC7A8](v18, v18);
  v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v35[3] = &type metadata for ServerBackedClientArena;
  v35[4] = &off_250794558;
  v22 = swift_allocObject();
  v35[0] = v22;
  v23 = *((_OWORD *)v20 + 7);
  *(_OWORD *)(v22 + 112) = *((_OWORD *)v20 + 6);
  *(_OWORD *)(v22 + 128) = v23;
  *(_QWORD *)(v22 + 144) = *((_QWORD *)v20 + 16);
  v24 = *((_OWORD *)v20 + 3);
  *(_OWORD *)(v22 + 48) = *((_OWORD *)v20 + 2);
  *(_OWORD *)(v22 + 64) = v24;
  v25 = *((_OWORD *)v20 + 5);
  *(_OWORD *)(v22 + 80) = *((_OWORD *)v20 + 4);
  *(_OWORD *)(v22 + 96) = v25;
  v26 = *((_OWORD *)v20 + 1);
  v27 = (uint64_t)v17 + OBJC_IVAR____TtC13AppProtectionP33_215D8CF8FF516198782505704A9473C518ClientArenaWrapper_arena;
  *(_OWORD *)(v22 + 16) = *(_OWORD *)v20;
  *(_OWORD *)(v22 + 32) = v26;
  sub_23624E76C((uint64_t)v35, v27);
  v34.receiver = v17;
  v34.super_class = v16;
  v28 = objc_msgSendSuper2(&v34, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v33.receiver = v6;
  v33.super_class = (Class)APExtension;
  v29 = objc_msgSendSuper2(&v33, sel_initWithArena_, v28);

  v30 = sub_2362CB428();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
  return v29;
}

id sub_2362C1D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v32;
  int v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v1 = sub_2362CB428();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  v36 = (void **)(v6 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v46 = sub_236290FE4;
  v47 = v6;
  aBlock = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v44 = sub_2362C96F0;
  v45 = &block_descriptor_22;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v9 = APGetSyncExtensionInfoProxy(v8);
  _Block_release(v8);
  v38 = v0;
  sub_2362CB410();
  v10 = (void *)sub_2362CB3F8();
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v37 = v1;
  v11(v5, v1);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v6;
  v46 = sub_2362C03B0;
  v47 = v12;
  aBlock = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v44 = sub_23627B924;
  v45 = &block_descriptor_22;
  v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_getExtensionIsLockedForUUID_completion_, v10, v13);
  _Block_release(v13);
  swift_unknownObjectRelease();

  swift_beginAccess();
  v14 = *(void **)(v7 + 16);
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_BOOLValue);
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v11;
    v35 = v7;
    v16 = v37;
    v17 = (void *)v38;
    if (qword_2542A53D0 != -1)
      swift_once();
    v18 = sub_2362CB494();
    __swift_project_value_buffer(v18, (uint64_t)qword_2542A58F8);
    swift_retain_n();
    v19 = v17;
    v20 = sub_2362CB47C();
    v21 = sub_2362CB830();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      v33 = v21;
      v22 = swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v41 = v38;
      *(_DWORD *)v22 = 136315394;
      sub_2362CB410();
      sub_236261580();
      v23 = sub_2362CBBC0();
      v25 = v24;
      v34(v5, v16);
      v40 = sub_2362AB670(v23, v25, &v41);
      sub_2362CB9C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2112;
      v26 = v36;
      swift_beginAccess();
      v27 = *v26;
      if (*v26)
      {
        v28 = v27;
        v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v39 = v27;
      }
      else
      {
        v39 = 0;
      }
      sub_2362CB9C8();
      v29 = v32;
      *v32 = v27;
      swift_release_n();
      _os_log_impl(&dword_23624C000, v20, (os_log_type_t)v33, "could not get lcoked value for extension %s: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5320);
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v29, -1, -1);
      v30 = v38;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v30, -1, -1);
      MEMORY[0x23B7EF258](v22, -1, -1);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();

      swift_release_n();
    }
    return 0;
  }
  return v15;
}

uint64_t APExtension.isHidden.getter()
{
  return 0;
}

id APExtension.isLocked.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___APExtension_forcedLockedValue);
  if (v1 == 2)
    return sub_2362C1D7C();
  else
    return (id)(v1 & 1);
}

id APExtension.isEffectivelyLocked.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isLocked);
}

Swift::String __swiftcall APExtension.effectiveBundleIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___APExtension_bundleIdentifier);
  v2 = *(void **)(v0 + OBJC_IVAR___APExtension_bundleIdentifier + 8);
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = v2;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

unint64_t APApplication.description.getter()
{
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  return 0xD000000000000010;
}

Swift::String __swiftcall APApplication.effectiveBundleIdentifier()()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v1 = objc_msgSend(v0, sel_bundleIdentifier);
  v2 = sub_2362CB698();
  v4 = v3;

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t sub_2362C2650(void (*a1)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))
{
  void *v1;
  _QWORD *v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[5];
  _QWORD v16[5];

  sub_23624E76C((uint64_t)v1 + OBJC_IVAR___APSubject_clientArenaStorage, (uint64_t)v16);
  v3 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_23624E76C((uint64_t)(v3 + 1), (uint64_t)v15);
  v4 = __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  v5 = objc_msgSend(v1, sel_bundleIdentifier);
  v6 = sub_2362CB698();
  v8 = v7;

  v9 = *v4;
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10 + 12);
  a1(&v14, v10 + 4, v9);
  os_unfair_lock_unlock(v10 + 12);
  v11 = v14;
  swift_release();
  v12 = sub_23624EC88(v6, v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12 & 1;
}

uint64_t APApplication.isEffectivelyLocked.getter()
{
  return sub_2362C2650((void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))sub_236290880);
}

Swift::String __swiftcall APApplication.bundleIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___APApplication__bundleIdentifier);
  v2 = *(void **)(v0 + OBJC_IVAR___APApplication__bundleIdentifier + 8);
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = v2;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t static APApplication.lockedApplications()()
{
  return sub_2362C287C((SEL *)&selRef_lockedAppBundleIdentifiers);
}

uint64_t static APApplication.hiddenApplications()()
{
  return sub_2362C287C((SEL *)&selRef_hiddenAppBundleIdentifiers);
}

id sub_2362C2824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  void *v5;

  swift_getObjCClassMetadata();
  v4 = a3();
  type metadata accessor for APApplication(v4);
  v5 = (void *)sub_2362CB758();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static APApplication.applicationsWithContentHiddenFromSearch()()
{
  return sub_2362C287C((SEL *)&selRef_bundleIdentifiersWithContentHiddenFromSearch);
}

uint64_t sub_2362C287C(SEL *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int v5;
  int v6;
  char v7;
  char v8;
  uint64_t result;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend((id)objc_opt_self(), *a1);
  v2 = sub_2362CB7AC();

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_2362CBAB8();
    v4 = sub_2362C3070(v2);
    v6 = v5;
    v8 = v7 & 1;
    result = swift_getObjCClassFromMetadata();
    v10 = (void *)result;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v2 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(v2 + 36) != v6)
        goto LABEL_13;
      swift_bridgeObjectRetain();
      v11 = (void *)sub_2362CB674();
      v12 = objc_msgSend(v10, sel_applicationWithBundleIdentifier_, v11);
      swift_bridgeObjectRelease();

      sub_2362CBAA0();
      sub_2362CBAC4();
      sub_2362CBAD0();
      sub_2362CBAAC();
      result = sub_2362C3110(v4, v6, v8 & 1, v2);
      v4 = result;
      v6 = v13;
      v8 = v14 & 1;
      if (!--v3)
      {
        sub_23628A414(result, v13, v14 & 1);
        v15 = v16;
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

id sub_2362C2A98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))
{
  void *v3;

  sub_2362C37CC(a3);
  v3 = (void *)sub_2362CB7A0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2362C2B5C(uint64_t a1)
{
  return sub_2362C2C9C(a1, (uint64_t (*)(uint64_t))type metadata accessor for APHiddenAppsMetaSubject, &qword_2563DB610);
}

id sub_2362C2C78(uint64_t a1)
{
  return sub_236276B3C(a1, type metadata accessor for APHiddenAppsMetaSubject);
}

uint64_t sub_2362C2C88(uint64_t a1)
{
  return sub_2362C2C9C(a1, (uint64_t (*)(uint64_t))type metadata accessor for APLockedAppsMetaSubject, &qword_2563DB680);
}

uint64_t sub_2362C2C9C(uint64_t a1, uint64_t (*a2)(uint64_t), _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t result;
  _QWORD v21[3];
  ValueMetadata *v22;
  _UNKNOWN **v23;
  _BYTE v24[24];
  uint64_t v25;

  if (qword_2542A5598 != -1)
    swift_once();
  sub_23624E76C((uint64_t)qword_2542A5920, (uint64_t)v24);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  MEMORY[0x24BDAC7A8](v5, v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v22 = &type metadata for ServerBackedClientArena;
  v23 = &off_250794558;
  v9 = swift_allocObject();
  v21[0] = v9;
  v10 = *((_OWORD *)v7 + 7);
  *(_OWORD *)(v9 + 112) = *((_OWORD *)v7 + 6);
  *(_OWORD *)(v9 + 128) = v10;
  *(_QWORD *)(v9 + 144) = *((_QWORD *)v7 + 16);
  v11 = *((_OWORD *)v7 + 3);
  *(_OWORD *)(v9 + 48) = *((_OWORD *)v7 + 2);
  *(_OWORD *)(v9 + 64) = v11;
  v12 = *((_OWORD *)v7 + 5);
  *(_OWORD *)(v9 + 80) = *((_OWORD *)v7 + 4);
  *(_OWORD *)(v9 + 96) = v12;
  v13 = *((_OWORD *)v7 + 1);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v7;
  *(_OWORD *)(v9 + 32) = v13;
  v14 = objc_allocWithZone((Class)a2(v9));
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, (uint64_t)v22);
  MEMORY[0x24BDAC7A8](v15, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = sub_2362C3290((uint64_t)v17, v14, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  *a3 = v19;
  return result;
}

BOOL sub_2362C2EE4(void (*a1)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[5];
  _QWORD v12[5];

  sub_23624E76C(v1 + OBJC_IVAR___APSubject_clientArenaStorage, (uint64_t)v12);
  v3 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_23624E76C((uint64_t)(v3 + 1), (uint64_t)v11);
  v4 = __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  v5 = *v4;
  v6 = *(os_unfair_lock_s **)(*v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v6 + 12);
  a1(&v10, v6 + 4, v5);
  os_unfair_lock_unlock(v6 + 12);
  v7 = v10;
  swift_release();
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v8 != 0;
}

void sub_2362C302C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_2362C3060(uint64_t a1)
{
  return sub_236276B3C(a1, type metadata accessor for APLockedAppsMetaSubject);
}

uint64_t sub_2362C3070(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_2362C3110(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ClientArenaWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APSubject(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2542A51D0);
}

uint64_t type metadata accessor for APExtension(uint64_t a1)
{
  return sub_23625B534(a1, &qword_2563D7A58);
}

uint64_t type metadata accessor for APApplication(uint64_t a1)
{
  return sub_23625B534(a1, (unint64_t *)&unk_2542A5310);
}

uint64_t type metadata accessor for APHiddenAppsMetaSubject()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for APLockedAppsMetaSubject()
{
  return objc_opt_self();
}

id sub_2362C3290(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  objc_super v37;
  objc_super v38;
  _QWORD v39[5];
  _QWORD v40[3];
  ValueMetadata *v41;
  _UNKNOWN **v42;
  _BYTE v43[24];
  uint64_t v44;
  _QWORD v45[5];

  v45[3] = &type metadata for ServerBackedClientArena;
  v45[4] = &off_250794558;
  v6 = swift_allocObject();
  v45[0] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 144) = *(_QWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v6 + 96) = v9;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v10;
  sub_23624E76C((uint64_t)v45, (uint64_t)v43);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
  MEMORY[0x24BDAC7A8](v11, v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  v41 = &type metadata for ServerBackedClientArena;
  v42 = &off_250794558;
  v15 = swift_allocObject();
  v40[0] = v15;
  v16 = *((_OWORD *)v13 + 7);
  *(_OWORD *)(v15 + 112) = *((_OWORD *)v13 + 6);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *((_QWORD *)v13 + 16);
  v17 = *((_OWORD *)v13 + 3);
  *(_OWORD *)(v15 + 48) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *((_OWORD *)v13 + 5);
  *(_OWORD *)(v15 + 80) = *((_OWORD *)v13 + 4);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v13;
  *(_OWORD *)(v15 + 32) = v19;
  v20 = (objc_class *)type metadata accessor for ClientArenaWrapper();
  v21 = objc_allocWithZone(v20);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, (uint64_t)v41);
  MEMORY[0x24BDAC7A8](v22, v22);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v24);
  v39[3] = &type metadata for ServerBackedClientArena;
  v39[4] = &off_250794558;
  v26 = swift_allocObject();
  v39[0] = v26;
  v27 = *((_OWORD *)v24 + 7);
  *(_OWORD *)(v26 + 112) = *((_OWORD *)v24 + 6);
  *(_OWORD *)(v26 + 128) = v27;
  *(_QWORD *)(v26 + 144) = *((_QWORD *)v24 + 16);
  v28 = *((_OWORD *)v24 + 3);
  *(_OWORD *)(v26 + 48) = *((_OWORD *)v24 + 2);
  *(_OWORD *)(v26 + 64) = v28;
  v29 = *((_OWORD *)v24 + 5);
  *(_OWORD *)(v26 + 80) = *((_OWORD *)v24 + 4);
  *(_OWORD *)(v26 + 96) = v29;
  v30 = *((_OWORD *)v24 + 1);
  v31 = (uint64_t)v21 + OBJC_IVAR____TtC13AppProtectionP33_215D8CF8FF516198782505704A9473C518ClientArenaWrapper_arena;
  *(_OWORD *)(v26 + 16) = *(_OWORD *)v24;
  *(_OWORD *)(v26 + 32) = v30;
  sub_23624E76C((uint64_t)v39, v31);
  v38.receiver = v21;
  v38.super_class = v20;
  v32 = objc_msgSendSuper2(&v38, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v33 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v34 = (objc_class *)a3(v33);
  v37.receiver = a2;
  v37.super_class = v34;
  v35 = objc_msgSendSuper2(&v37, sel_initWithArena_, v32);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v35;
}

id sub_2362C34F4(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  id v31;
  id v32;
  _QWORD v33[2];
  objc_super v34;
  objc_super v35;
  _QWORD v36[5];
  _QWORD v37[3];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];
  uint64_t v41;

  v1[OBJC_IVAR___APExtension_forcedLockedValue] = 2;
  v3 = v1;
  v4 = objc_msgSend(a1, sel_bundleIdentifier);
  v5 = sub_2362CB698();
  v7 = v6;

  v8 = (uint64_t *)&v3[OBJC_IVAR___APExtension_bundleIdentifier];
  *v8 = v5;
  v8[1] = v7;
  result = objc_msgSend(a1, sel_uniqueIdentifier);
  if (result)
  {
    *(_QWORD *)&v3[OBJC_IVAR___APExtension_extensionUUIDStorage] = result;

    if (qword_2542A5598 != -1)
      swift_once();
    sub_23624E76C((uint64_t)qword_2542A5920, (uint64_t)v40);
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    v33[1] = v33;
    MEMORY[0x24BDAC7A8](v10, v10);
    v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v12);
    v38 = &type metadata for ServerBackedClientArena;
    v39 = &off_250794558;
    v14 = swift_allocObject();
    v37[0] = v14;
    v15 = *((_OWORD *)v12 + 7);
    *(_OWORD *)(v14 + 112) = *((_OWORD *)v12 + 6);
    *(_OWORD *)(v14 + 128) = v15;
    *(_QWORD *)(v14 + 144) = *((_QWORD *)v12 + 16);
    v16 = *((_OWORD *)v12 + 3);
    *(_OWORD *)(v14 + 48) = *((_OWORD *)v12 + 2);
    *(_OWORD *)(v14 + 64) = v16;
    v17 = *((_OWORD *)v12 + 5);
    *(_OWORD *)(v14 + 80) = *((_OWORD *)v12 + 4);
    *(_OWORD *)(v14 + 96) = v17;
    v18 = *((_OWORD *)v12 + 1);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(v14 + 32) = v18;
    v19 = (objc_class *)type metadata accessor for ClientArenaWrapper();
    v20 = objc_allocWithZone(v19);
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, (uint64_t)v38);
    MEMORY[0x24BDAC7A8](v21, v21);
    v23 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v24 + 16))(v23);
    v36[3] = &type metadata for ServerBackedClientArena;
    v36[4] = &off_250794558;
    v25 = swift_allocObject();
    v36[0] = v25;
    v26 = *((_OWORD *)v23 + 7);
    *(_OWORD *)(v25 + 112) = *((_OWORD *)v23 + 6);
    *(_OWORD *)(v25 + 128) = v26;
    *(_QWORD *)(v25 + 144) = *((_QWORD *)v23 + 16);
    v27 = *((_OWORD *)v23 + 3);
    *(_OWORD *)(v25 + 48) = *((_OWORD *)v23 + 2);
    *(_OWORD *)(v25 + 64) = v27;
    v28 = *((_OWORD *)v23 + 5);
    *(_OWORD *)(v25 + 80) = *((_OWORD *)v23 + 4);
    *(_OWORD *)(v25 + 96) = v28;
    v29 = *((_OWORD *)v23 + 1);
    v30 = (uint64_t)v20 + OBJC_IVAR____TtC13AppProtectionP33_215D8CF8FF516198782505704A9473C518ClientArenaWrapper_arena;
    *(_OWORD *)(v25 + 16) = *(_OWORD *)v23;
    *(_OWORD *)(v25 + 32) = v29;
    sub_23624E76C((uint64_t)v36, v30);
    v35.receiver = v20;
    v35.super_class = v19;
    v31 = objc_msgSendSuper2(&v35, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    v34.receiver = v3;
    v34.super_class = (Class)APExtension;
    v32 = objc_msgSendSuper2(&v34, sel_initWithArena_, v31);

    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2362C37CC(void (*a1)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t))
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  if (qword_2542A5598 != -1)
    swift_once();
  v2 = qword_2542A5938;
  v3 = __swift_project_boxed_opaque_existential_1(qword_2542A5920, qword_2542A5938);
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v3, v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  sub_23624E76C((uint64_t)(v6 + 8), (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  v7 = __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  v8 = *v7;
  v9 = *(os_unfair_lock_s **)(*v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v9 + 12);
  a1(&v13, v9 + 4, v8);
  os_unfair_lock_unlock(v9 + 12);
  v10 = v13;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v10;
}

uint64_t sub_2362C38F8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return swift_deallocObject();
}

uint64_t sub_2362C393C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362C3960()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362C3984()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_2362C39C8()
{
  _QWORD *result;

  type metadata accessor for Preferences();
  swift_allocObject();
  result = sub_2362C3A00();
  qword_2563DB628 = (uint64_t)result;
  return result;
}

_QWORD *sub_2362C3A00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t has_internal_ui;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  has_internal_ui = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5B38);
  swift_allocObject();
  sub_2362C4914(0xD000000000000018, 0x80000002362D8740, 0x6D69547972746572, 0xEC00000074756F65, 0, 1, has_internal_ui, 3.0);
  v1[2] = v3;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563D5B48);
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0xD000000000000012, 0x80000002362D8760, 0, 0, 1, has_internal_ui, (uint64_t *)&unk_2563D5FB8, &qword_2563D5FB0, qword_2563D5AB0);
  v1[3] = v4;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0x636E65467473616CLL, 0xE900000000000065, 0, 0, 1, has_internal_ui, (uint64_t *)&unk_2563D5FB8, &qword_2563D5FB0, qword_2563D5AB0);
  v1[4] = v5;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5B40);
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0xD00000000000001ALL, 0x80000002362D7550, 0, 0, 1, has_internal_ui, &qword_2563D5FA8, &qword_2563D5FA0, &qword_2563D5AA8);
  v1[5] = v6;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0xD00000000000001CLL, 0x80000002362D7570, 0, 0, 1, has_internal_ui, &qword_2563D5FA8, &qword_2563D5FA0, &qword_2563D5AA8);
  v1[6] = v7;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0xD00000000000001CLL, 0x80000002362D7590, 0, 0, 1, has_internal_ui, &qword_2563D5FA8, &qword_2563D5FA0, &qword_2563D5AA8);
  v1[7] = v8;
  LOBYTE(has_internal_ui) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_2362C45C8(0xD000000000000018, 0x80000002362D8740, 0xD00000000000001CLL, 0x80000002362D75B0, 0, 0, 1, has_internal_ui, &qword_2563D5FA8, &qword_2563D5FA0, &qword_2563D5AA8);
  v1[8] = v9;
  return v1;
}

unint64_t sub_2362C3D7C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = sub_2362CBCE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Preferences();
  v20 = v0;
  swift_retain();
  sub_2362CBCC8();
  sub_2362CBCD4();
  v6 = sub_2362CBADC();
  swift_release();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_2362CBA58();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000010;
  v21 = 0x80000002362D87E0;
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v17 = v2;
    v18 = v1;
    v19 = MEMORY[0x24BEE4AF8];
    sub_2362BC784(0, v7, 0);
    v8 = v19;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v19 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
      {
        sub_2362BC784(v12 > 1, v13 + 1, 1);
        v8 = v19;
      }
      v9 += 2;
      *(_QWORD *)(v8 + 16) = v13 + 1;
      v14 = v8 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v2 = v17;
    v1 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v19 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41A8);
  sub_23624E344(&qword_2563D7AF8, &qword_2563D41A8, MEMORY[0x24BEE12B0]);
  sub_2362CB638();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  v15 = v20;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v15;
}

uint64_t sub_2362C400C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2362C4058()
{
  sub_2362C400C();
  return swift_deallocClassInstance();
}

unint64_t sub_2362C4078()
{
  return sub_2362C3D7C();
}

uint64_t sub_2362C4098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_2362CB878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB86C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_2362CB590();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23625DAF8();
  sub_2362CB584();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23624E3C4((unint64_t *)&qword_2542A5580, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A5560);
  sub_23624E344((unint64_t *)&qword_2542A5570, (uint64_t *)&unk_2542A5560, MEMORY[0x24BEE12C8]);
  sub_2362CB9F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5758], v0);
  result = sub_2362CB8B4();
  qword_2563D7A60 = result;
  return result;
}

uint64_t sub_2362C425C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2362C426C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_2362C42D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 128);
  swift_beginAccess();
  v4 = sub_2362CB9BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2362C4340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  swift_beginAccess();
  v4 = sub_2362CB9BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2362C43B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  swift_beginAccess();
  v4 = sub_2362CB9BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_2362C4428()
{
  return swift_weakLoadStrong();
}

uint64_t sub_2362C4438(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _OWORD v13[2];

  if (a3)
  {
    sub_2362CB698();
    if (a4)
      goto LABEL_3;
LABEL_6:
    memset(v13, 0, sizeof(v13));
    v10 = a5;
    v11 = a1;
    if (!a5)
      goto LABEL_7;
    goto LABEL_4;
  }
  if (!a4)
    goto LABEL_6;
LABEL_3:
  swift_unknownObjectRetain();
  v8 = a5;
  v9 = a1;
  sub_2362CB9E0();
  swift_unknownObjectRelease();
  if (a5)
  {
LABEL_4:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_23624E3C4(&qword_2563D6EE0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2362CE084);
    sub_2362CB614();

  }
LABEL_7:
  sub_2362C5F98();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_236253FFC((uint64_t)v13);
}

uint64_t sub_2362C453C()
{
  return swift_weakAssign();
}

void sub_2362C4550()
{
  sub_2362C61B8();
}

id sub_2362C456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_2362C45B8()
{
  return swift_weakDestroy();
}

void sub_2362C45C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t *a9, unint64_t *a10, uint64_t *a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  objc_class *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  objc_super v43;
  uint64_t v44;

  v12 = v11;
  *(_QWORD *)(v11 + 64) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0;
  *(_BYTE *)(v11 + 72) = 1;
  *(_QWORD *)(v11 + 96) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6058);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v11 + 104) = v18;
  *(_QWORD *)(v11 + 112) = 0;
  *(_BYTE *)(v11 + 120) = 1;
  if (!a2)
    goto LABEL_11;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (!v20)
    goto LABEL_8;
  v21 = sub_2362CB698();
  v23 = v22;

  if (v21 == a1 && v23 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v25 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v26 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    swift_bridgeObjectRetain();
    v27 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

    if (v28)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v28 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v12 + 16) = v28;
  *(_QWORD *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 56) = a5;
  *(_QWORD *)(v12 + 40) = a3;
  *(_QWORD *)(v12 + 48) = a4;
  *(_BYTE *)(v12 + 73) = a8 & 1;
  if ((a7 & 1) == 0)
  {
    swift_beginAccess();
    if ((a8 & 1) != 0)
    {
      *(_QWORD *)(v12 + 56) = a6;
    }
    else
    {
      *(_QWORD *)(v12 + 64) = a5;
      *(_BYTE *)(v12 + 72) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(a9);
  swift_allocObject();
  v29 = sub_2362CB524();
  *(_QWORD *)(v12 + 80) = v29;
  v44 = v29;
  sub_23624E344(a10, a9, MEMORY[0x24BDB9CB0]);
  v30 = sub_2362CB53C();
  v31 = *(void **)(v12 + 96);
  *(_QWORD *)(v12 + 88) = v30;
  *(_QWORD *)(v12 + 96) = 0;

  v32 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(a11);
  v33 = objc_allocWithZone(v32);
  swift_weakInit();
  swift_weakAssign();
  v43.receiver = v33;
  v43.super_class = v32;
  v34 = objc_msgSendSuper2(&v43, sel_init);
  v35 = *(void **)(v12 + 96);
  *(_QWORD *)(v12 + 96) = v34;

  v36 = *(void **)(v12 + 96);
  if (v36)
  {
    v37 = *(id *)(v12 + 16);
    v38 = v36;
    swift_bridgeObjectRetain();
    v39 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_addObserver_forKeyPath_options_context_, v38, v39, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_2362C4914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  objc_class *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  unsigned int v40;
  uint64_t v41;
  objc_super v42;
  uint64_t v43;

  v9 = v8;
  *(_QWORD *)(v8 + 64) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v8 + 72) = 1;
  *(_QWORD *)(v8 + 96) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6058);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v8 + 104) = v18;
  *(_QWORD *)(v8 + 112) = 0;
  *(_BYTE *)(v8 + 120) = 1;
  if (!a2)
    goto LABEL_11;
  v41 = a3;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (!v20)
    goto LABEL_8;
  v40 = a7;
  a7 = a4;
  a4 = a6;
  a6 = a5;
  v21 = sub_2362CB698();
  v23 = v22;

  if (v21 == a1 && v23 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a5 = a6;
    LOBYTE(a6) = a4;
    a4 = a7;
    LOBYTE(a7) = v40;
    a3 = v41;
    goto LABEL_11;
  }
  v25 = sub_2362CBBE4();
  swift_bridgeObjectRelease();
  a5 = a6;
  a6 = a4;
  a4 = a7;
  a7 = v40;
  a3 = v41;
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v26 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    swift_bridgeObjectRetain();
    v27 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

    a3 = v41;
    if (v28)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v28 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v9 + 16) = v28;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  swift_bridgeObjectRelease();
  *(double *)(v9 + 56) = a8;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = a4;
  *(_BYTE *)(v9 + 73) = a7 & 1;
  if ((a6 & 1) == 0)
  {
    swift_beginAccess();
    if ((a7 & 1) != 0)
    {
      *(_QWORD *)(v9 + 56) = a5;
    }
    else
    {
      *(double *)(v9 + 64) = a8;
      *(_BYTE *)(v9 + 72) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D5F98);
  swift_allocObject();
  v29 = sub_2362CB524();
  *(_QWORD *)(v9 + 80) = v29;
  v43 = v29;
  sub_23624E344(&qword_2563D5F90, &qword_2563D5F98, MEMORY[0x24BDB9CB0]);
  v30 = sub_2362CB53C();
  v31 = *(void **)(v9 + 96);
  *(_QWORD *)(v9 + 88) = v30;
  *(_QWORD *)(v9 + 96) = 0;

  v32 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563D5AA0);
  v33 = objc_allocWithZone(v32);
  swift_weakInit();
  swift_weakAssign();
  v42.receiver = v33;
  v42.super_class = v32;
  v34 = objc_msgSendSuper2(&v42, sel_init);
  v35 = *(void **)(v9 + 96);
  *(_QWORD *)(v9 + 96) = v34;

  v36 = *(void **)(v9 + 96);
  if (v36)
  {
    v37 = *(id *)(v9 + 16);
    v38 = v36;
    swift_bridgeObjectRetain();
    v39 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_addObserver_forKeyPath_options_context_, v38, v39, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t UserDefault.__allocating_init(domain:key:defaultValue:appleInternalOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int has_internal_ui;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  has_internal_ui = os_variant_has_internal_ui();
  v14 = sub_2362C6774(a1, a2, a3, a4, a5, a6, has_internal_ui);
  v15 = *(_QWORD *)(v6 + 80);
  v17 = type metadata accessor for UserDefault.AppleInternalOnlyOption(0, v15, *(_QWORD *)(v6 + 88), v16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a6, v17);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a5, v15);
  return v14;
}

void UserDefault.deinit()
{
  id *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);

  v1 = *v0;
  v2 = *((_QWORD *)*v0 + 20);
  v3 = *(id *)((char *)v0 + v2);
  if (v3)
  {
    v4 = v0[2];
    swift_bridgeObjectRetain();
    v5 = v3;
    v6 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_removeObserver_forKeyPath_, v5, v6);

    if (*(id *)((char *)v0 + v2))
    {
      swift_weakAssign();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 15), v1[10]);
      v7 = (char *)v0 + *((_QWORD *)*v0 + 16);
      v8 = sub_2362CB9BC();
      v9 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      swift_release();
      swift_release();

      swift_release();
      v9((char *)v0 + *((_QWORD *)*v0 + 22), v8);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t UserDefault.__deallocating_deinit()
{
  UserDefault.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2362C4EF0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362C6808(v2, &v5);
  v3 = v5;
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return v3;
}

uint64_t sub_2362C4F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362C5A70((uint64_t)v7);
  sub_2362CBBCC();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = v11;
  *a3 = v10;
  a3[1] = v9;
  return result;
}

uint64_t sub_2362C5060(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_2362C6890();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*sub_2362C509C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_2362C59E8();
  return sub_2362C511C;
}

void sub_2362C511C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_2362C6820();
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_2362C6820();
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2362C51B4()
{
  return swift_retain();
}

uint64_t sub_2362C51C4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362AABA8(v2, sub_2362C799C);
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_2362C522C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  NSObject *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  id v63;
  id v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  os_log_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, _QWORD, uint64_t, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  os_log_t v91;
  char *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v80 = *a1;
  v2 = *(_QWORD *)(v80 + 80);
  v3 = sub_2362CB9BC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v81 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v5);
  v89 = (char *)&v79 - v7;
  v8 = *(_QWORD *)(v3 - 8);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v91 = (os_log_t)((char *)&v79 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v79 - v17;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v79 - v21;
  v23 = *(_QWORD **)(v2 - 8);
  v25 = MEMORY[0x24BDAC7A8](v20, v24);
  v86 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v83 = (char *)&v79 - v29;
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)&v79 - v31;
  sub_2362C5A70((uint64_t)&v79 - v31);
  v33 = (void (*)(char *, char *, uint64_t))v23[2];
  v92 = v32;
  v87 = v2;
  v90 = v33;
  v33(v22, v32, v2);
  v84 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v23[7];
  v84(v22, 0, 1, v2);
  v94 = a1;
  sub_2362C4340((uint64_t)v18);
  v82 = TupleTypeMetadata2;
  v34 = v89;
  v35 = &v89[*(int *)(TupleTypeMetadata2 + 48)];
  v36 = v8;
  v37 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v37(v89, v22, v3);
  v88 = (uint64_t)v35;
  v38 = v3;
  v37(v35, v18, v3);
  v93 = v23;
  v39 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v23[6];
  v40 = v87;
  if (v39((uint64_t)v34, 1, v87) == 1)
  {
    v41 = *(void (**)(char *, uint64_t))(v36 + 8);
    v41(v18, v38);
    v41(v22, v38);
    if (v39(v88, 1, v40) == 1)
    {
      v41(v34, v38);
      return ((uint64_t (*)(char *, uint64_t))v93[1])(v92, v40);
    }
    goto LABEL_6;
  }
  v79 = v36;
  v37((char *)v91, v34, v3);
  v43 = v88;
  if (v39(v88, 1, v40) == 1)
  {
    v44 = *(void (**)(char *, uint64_t))(v79 + 8);
    v44(v18, v3);
    v44(v22, v3);
    ((void (*)(os_log_t, uint64_t))v93[1])(v91, v40);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v81 + 8))(v34, v82);
    v45 = v92;
    v46 = v90;
LABEL_7:
    if (qword_2563D4178 != -1)
      swift_once();
    v47 = sub_2362CB494();
    __swift_project_value_buffer(v47, (uint64_t)qword_2563DB5D8);
    v48 = v86;
    v46(v86, v45, v40);
    v49 = v94;
    swift_retain_n();
    v50 = sub_2362CB47C();
    v51 = sub_2362CB848();
    if (os_log_type_enabled(v50, (os_log_type_t)v51))
    {
      v52 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v97 = v53;
      *(_DWORD *)v52 = 136315906;
      v54 = v49[4];
      v91 = v50;
      LODWORD(v89) = v51;
      v88 = v53;
      if (v54)
      {
        v55 = v49[3];
        v56 = v54;
      }
      else
      {
        v63 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v64 = objc_msgSend(v63, sel_bundleIdentifier);

        if (v64)
        {
          v55 = sub_2362CB698();
          v56 = v65;

        }
        else
        {
          v56 = 0xE300000000000000;
          v55 = 7104878;
        }
      }
      swift_bridgeObjectRetain();
      v96 = sub_2362AB670(v55, v56, &v97);
      sub_2362CB9C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      v66 = v94[5];
      v67 = v94[6];
      swift_bridgeObjectRetain();
      v96 = sub_2362AB670(v66, v67, &v97);
      sub_2362CB9C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2080;
      v68 = v83;
      v69 = v86;
      v46 = v90;
      v90(v83, v86, v40);
      v70 = sub_2362CB6EC();
      v96 = sub_2362AB670(v70, v71, &v97);
      sub_2362CB9C8();
      swift_bridgeObjectRelease();
      v57 = (void (*)(char *, uint64_t))v93[1];
      v57(v69, v40);
      *(_WORD *)(v52 + 32) = 2080;
      v72 = *v94;
      v73 = (char *)v94 + *(_QWORD *)(*v94 + 120);
      swift_beginAccess();
      (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v72 + 80) - 8) + 16))(v68, v73);
      v74 = sub_2362CB6EC();
      v95 = sub_2362AB670(v74, v75, &v97);
      sub_2362CB9C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      v76 = v91;
      _os_log_impl(&dword_23624C000, v91, (os_log_type_t)v89, "Preferences[%s]: %s preference changed to %s [default=%s]", (uint8_t *)v52, 0x2Au);
      v77 = v88;
      swift_arrayDestroy();
      MEMORY[0x23B7EF258](v77, -1, -1);
      MEMORY[0x23B7EF258](v52, -1, -1);

      v45 = v92;
    }
    else
    {
      swift_release_n();
      v57 = (void (*)(char *, uint64_t))v93[1];
      v57(v48, v40);

      swift_release_n();
    }
    v78 = (uint64_t)v85;
    v46(v85, v45, v40);
    v84((char *)v78, 0, 1, v40);
    sub_2362C43B0(v78);
    swift_retain();
    sub_2362CB50C();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v57)(v45, v40);
  }
  v58 = v40;
  v59 = v93;
  v60 = v83;
  ((void (*)(char *, uint64_t, uint64_t))v93[4])(v83, v43, v58);
  v61 = sub_2362CB650();
  v57 = (void (*)(char *, uint64_t))v59[1];
  v40 = v58;
  v57(v60, v58);
  v62 = *(void (**)(char *, uint64_t))(v79 + 8);
  v62(v18, v38);
  v62(v22, v38);
  v57((char *)v91, v40);
  v62(v34, v38);
  v45 = v92;
  v46 = v90;
  if ((v61 & 1) == 0)
    goto LABEL_7;
  return ((uint64_t (*)(char *, uint64_t))v57)(v45, v40);
}

uint64_t sub_2362C59E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[16];
  uint64_t v5;
  uint64_t (*v6)@<X0>(uint64_t@<X8>);
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_retain();
  v5 = v2;
  v6 = sub_2362C79E0;
  v7 = v0;
  sub_23629E270((void (*)(uint64_t))sub_2362C7A04, (uint64_t)v4, v1);
  return swift_release();
}

uint64_t sub_2362C5A70@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  __int128 v24;
  _OWORD v25[2];

  v3 = *((_QWORD *)*v1 + 10);
  v4 = sub_2362CB9BC();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v22 - v11;
  sub_2362C42D0((uint64_t)&v22 - v11);
  v13 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v12, v3);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v12, v4);
  v14 = v1[2];
  swift_bridgeObjectRetain();
  v15 = (void *)sub_2362CB674();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_valueForKey_, v15);

  if (v16)
  {
    sub_2362CB9E0();
    swift_unknownObjectRelease();
    sub_236274200(&v24, v25);
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D60A0);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v18)
  {
    v19(v9, 0, 1, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v9, v3);
  }
  else
  {
    v19(v9, 1, 1, v3);
    v20 = *v1;
    v21 = (char *)v1 + *((_QWORD *)*v1 + 15);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *))(*(_QWORD *)(v20[10] - 8) + 16))(a1, v21);
    return ((uint64_t (*)(char *, uint64_t))v23)(v9, v4);
  }
}

uint64_t sub_2362C5C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t result;
  char v16;
  uint64_t *boxed_opaque_existential_1;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22[3];
  uint64_t v23;

  v3 = v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2362CB9BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v22 - v12;
  sub_2362C42D0((uint64_t)v22 - v12);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (v14 == 1)
  {
    sub_2362C5A70((uint64_t)v8);
    v16 = sub_2362CB650();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if ((v16 & 1) == 0)
    {
      v23 = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(boxed_opaque_existential_1, a1, v5);
      v18 = *(void **)(v3 + 16);
      __swift_project_boxed_opaque_existential_1(v22, v23);
      v19 = v18;
      v20 = sub_2362CBBD8();
      swift_bridgeObjectRetain();
      v21 = (void *)sub_2362CB674();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setObject_forKey_, v20, v21);

      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  return result;
}

uint64_t sub_2362C5E60()
{
  return sub_2362C4EF0();
}

uint64_t sub_2362C5E80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_2362CBAE8();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

id sub_2362C5EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  objc_super v5;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  swift_weakInit();
  swift_weakAssign();
  v3 = (objc_class *)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v5.receiver = v0;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_2362C5F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v5;

  v5 = objc_allocWithZone((Class)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_2362C5EE4();
}

uint64_t sub_2362C5F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v0 = sub_2362CB560();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2362CB590();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v14 = v1;
    if (qword_2563D6A20 != -1)
      swift_once();
    v13[1] = qword_2563D7A60;
    aBlock[4] = sub_2362C7998;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_23;
    v12 = _Block_copy(aBlock);
    swift_retain();
    sub_2362CB578();
    v15 = MEMORY[0x24BEE4AF8];
    sub_23624E3C4((unint64_t *)&qword_2542A52B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23624E344((unint64_t *)&qword_2542A52D0, (uint64_t *)&unk_2542A52C0, MEMORY[0x24BEE12C8]);
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v9, v4, v12);
    _Block_release(v12);
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return swift_release();
  }
  return result;
}

void sub_2362C61B8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2362C61E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  uint64_t result;
  uint64_t v74;
  void (*v75)(void);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;

  v8 = v7;
  v90 = a7;
  v85 = a3;
  v91 = a1;
  v13 = *v8;
  v14 = *(_QWORD *)(*v8 + 80);
  v15 = sub_2362CB9BC();
  v79 = *(_QWORD *)(v15 - 8);
  v80 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v78 = (char *)&v74 - v17;
  v87 = *(_QWORD *)(v13 + 88);
  v88 = type metadata accessor for UserDefault.AppleInternalOnlyOption(0, v14, v87, v18);
  v86 = *(_QWORD *)(v88 - 8);
  v20 = MEMORY[0x24BDAC7A8](v88, v19);
  v22 = (char *)&v74 - v21;
  v23 = *(_QWORD *)(v14 - 8);
  v25 = MEMORY[0x24BDAC7A8](v20, v24);
  v76 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v82 = (char *)&v74 - v28;
  v8[3] = 0;
  v8[4] = 0;
  v29 = *(void (**)(void))(v23 + 56);
  v77 = (uint64_t)v8 + *(_QWORD *)(v13 + 128);
  v29();
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 160)) = 0;
  v30 = *(_QWORD *)(*v8 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D6058);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(uint64_t *)((char *)v8 + v30) = v31;
  v32 = (uint64_t)v8 + *(_QWORD *)(*v8 + 176);
  v83 = v14;
  v75 = v29;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v32, 1, 1, v14);
  v89 = a6;
  v84 = v22;
  if (!a2)
    goto LABEL_8;
  v81 = a4;
  v33 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v34 = objc_msgSend(v33, sel_bundleIdentifier);

  if (!v34)
  {
    a4 = v81;
    goto LABEL_9;
  }
  v35 = sub_2362CB698();
  v37 = v36;

  if (v35 != v91 || v37 != a2)
  {
    v38 = sub_2362CBBE4();
    swift_bridgeObjectRelease();
    a4 = v81;
    if ((v38 & 1) != 0)
      goto LABEL_8;
LABEL_9:
    v40 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    swift_bridgeObjectRetain();
    v41 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(v40, sel_initWithSuiteName_, v41);

    if (!v39)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  a4 = v81;
LABEL_8:
  v39 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_10:
  v42 = v91;
  v8[2] = (uint64_t)v39;
  v8[3] = v42;
  v8[4] = a2;
  swift_bridgeObjectRelease();
  v8[5] = v85;
  v8[6] = a4;
  v43 = (uint64_t)v8 + *(_QWORD *)(*v8 + 120);
  v44 = v23;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v46 = a5;
  v47 = v83;
  v45(v43, a5, v83);
  v48 = v90;
  *((_BYTE *)v8 + *(_QWORD *)(*v8 + 136)) = v90 & 1;
  v49 = v86;
  v50 = v84;
  v51 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v84, v89, v88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v50, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  }
  else
  {
    v52 = v46;
    v53 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v54 = v82;
    v53(v82, v50, v47);
    if ((v48 & 1) != 0)
    {
      v55 = v76;
      v53(v76, v54, v47);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 40))(v43, v55, v47);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v54, v47);
      v56 = v78;
      v45((uint64_t)v78, v52, v47);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v75)(v56, 0, 1, v47);
      v57 = v77;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 40))(v57, v56, v80);
    }
    swift_endAccess();
  }
  v58 = sub_2362CB530();
  v59 = sub_2362CB518();
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 144)) = v59;
  v92 = v59;
  MEMORY[0x23B7EF18C](MEMORY[0x24BDB9CB0], v58);
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 152)) = sub_2362CB53C();
  v60 = *(_QWORD *)(*v8 + 160);
  v61 = *(void **)((char *)v8 + v60);
  *(uint64_t *)((char *)v8 + v60) = 0;

  type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, v47, v87, v62);
  v63 = swift_retain();
  v67 = sub_2362C5F60(v63, v64, v65, v66);
  swift_release();
  v68 = *(void **)((char *)v8 + v60);
  *(uint64_t *)((char *)v8 + v60) = (uint64_t)v67;

  v69 = *(void **)((char *)v8 + v60);
  if (v69)
  {
    v70 = (id)v8[2];
    v71 = v69;
    swift_bridgeObjectRetain();
    v72 = (void *)sub_2362CB674();
    swift_bridgeObjectRelease();
    objc_msgSend(v70, sel_addObserver_forKeyPath_options_context_, v71, v72, 0, 0);

    return (uint64_t)v8;
  }
  __break(1u);
LABEL_19:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2362C6774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  type metadata accessor for UserDefault(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), a4);
  swift_allocObject();
  return sub_2362C61E4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for UserDefault.AppleInternalOnlyOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault.AppleInternalOnlyOption);
}

uint64_t sub_2362C6808@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2362C4F70(v2, a1, a2);
}

uint64_t sub_2362C6820()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2362AABA8(v2, (uint64_t (*)(void))sub_2362C79B4);
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_2362C6894()
{
  return sub_2362C505C();
}

uint64_t sub_2362C68B4()
{
  return sub_2362C6890();
}

uint64_t sub_2362C68D4()
{
  return 16;
}

__n128 sub_2362C68E0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for Preferences()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _PreferenceUtilities()
{
  return objc_opt_self();
}

uint64_t sub_2362C692C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_2362CB9BC();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return v0;
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t method lookup function for UserDefault()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDefault.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of UserDefault.projectedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t sub_2362C6A68()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2362C6A70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_2362C6AC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v8)
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = v7 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 <= 7 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0 && v9 <= 0x18)
  {
    if ((_DWORD)v8)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a2, v8, *(_QWORD *)(a3 + 16)))
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v4, a2, v5);
        return v4;
      }
    }
    else
    {
      if (!*((_BYTE *)a2 + v7))
        goto LABEL_26;
      v14 = (*((unsigned __int8 *)a2 + v7) - 1) << (8 * v7);
      if (v7 > 3)
        v14 = 0;
      if ((_DWORD)v7)
      {
        if (v7 <= 3)
          v15 = *(_QWORD *)(v6 + 64);
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 == -1)
      {
LABEL_26:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        *((_BYTE *)v4 + v7) = 0;
        return v4;
      }
    }
    memcpy(v4, a2, v9);
    return v4;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v10 + 16) & ~v10));
  swift_retain();
  return v4;
}

uint64_t sub_2362C6C24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 64);
    if (!*(_BYTE *)(a1 + v7))
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v8 = (*(unsigned __int8 *)(a1 + v7) - 1) << (8 * v7);
    if (v7 > 3)
      v8 = 0;
    if ((_DWORD)v7)
    {
      if (v7 > 3)
        LODWORD(v7) = 4;
      __asm { BR              X11 }
    }
    result = (v8 + 1);
    if (v8 == -1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_2362C6D08(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_2362C6E30(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

_BYTE *sub_2362C7088(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_2362C71B0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

uint64_t sub_2362C7408(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_2362C7548(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v8)
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_17;
      goto LABEL_24;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_17:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_24:
      __asm { BR              X12 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_17;
  goto LABEL_24;
}

void sub_2362C775C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2362C7764()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_2362C7784()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2362C778C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2362C779C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_2362C77A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84))
    return (*(uint64_t (**)(void))(v2 + 48))();
  v4 = *(_QWORD *)(v2 + 64);
  if (!*(_BYTE *)(a1 + v4))
    return 0;
  v5 = (*(unsigned __int8 *)(a1 + v4) - 1) << (8 * v4);
  if (v4 > 3)
    v5 = 0;
  if (!(_DWORD)v4)
    return (v5 + 1);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2362C780C + 4 * byte_2362D072A[(v4 - 1)]))();
}

void sub_2362C7844(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  int v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5 >= a2)
  {
    if ((_DWORD)v5)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v6] = 0;
      if (!(_DWORD)a2)
        return;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 56))(a1, a2, v5);
    return;
  }
  v7 = ~(_DWORD)v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v8 = (v7 >> (8 * v6)) + 1;
  if (!(_DWORD)v6)
  {
LABEL_16:
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if ((_DWORD)v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_16;
  }
  if ((_DWORD)v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  *a1 = v9;
  if (!(_DWORD)v5)
LABEL_17:
    a1[v6] = v8;
}

uint64_t sub_2362C794C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UserDefault._KVOUserDefaultsObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault._KVOUserDefaultsObserver);
}

uint64_t sub_2362C799C()
{
  _QWORD *v0;

  return sub_2362C522C(v0);
}

uint64_t sub_2362C79B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2362C5C9C(*(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2362C79E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2362C5A70(a1);
}

uint64_t sub_2362C7A04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_2362C7A24()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

void sub_2362C7B18(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2362C7B6C()
{
  uint64_t v1;

  sub_2362CB728();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2362C7C84(unsigned __int8 *a1)
{
  return sub_2362C9420(*a1);
}

void sub_2362C7C90()
{
  char *v0;

  sub_2362C7B18(*v0);
}

void sub_2362C7C98(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_2362C7CF0()
{
  uint64_t v1;

  sub_2362CBA58();
  swift_bridgeObjectRelease();
  sub_2362CB728();
  sub_2362CB728();
  sub_2362CB728();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_2362C7E4C()
{
  uint64_t v0;

  sub_2362C7C98(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_2362C7E58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *v0;
  v3 = sub_2362CB560();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2362CB590();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 120) + 8))(*(_QWORD *)(v2 + 88));
  if ((result & 1) == 0)
  {
    if (qword_2563D4178 != -1)
      swift_once();
    v14 = sub_2362CB494();
    __swift_project_value_buffer(v14, (uint64_t)qword_2563DB5D8);
    v15 = sub_2362CB47C();
    v16 = sub_2362CB848();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23624C000, v15, v16, "Device has no passcode!", v17, 2u);
      MEMORY[0x23B7EF258](v17, -1, -1);
    }

    aBlock[4] = sub_2362C9410;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_22_0;
    v18 = _Block_copy(aBlock);
    swift_retain();
    sub_2362CB578();
    v19[1] = MEMORY[0x24BEE4AF8];
    sub_23629C5DC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23629C624();
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v12, v7, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_2362C80C0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  sub_2362C7E58();
  if (qword_2563D4178 != -1)
    swift_once();
  v0 = sub_2362CB494();
  __swift_project_value_buffer(v0, (uint64_t)qword_2563DB5D8);
  v1 = sub_2362CB47C();
  v2 = sub_2362CB848();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23624C000, v1, v2, "checking for u13 account", v3, 2u);
    MEMORY[0x23B7EF258](v3, -1, -1);
  }

  return sub_2362C8F20();
}

id sub_2362C8194(unsigned __int8 a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t *v4;
  int v5;
  id v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __CFString *v25;
  __CFString *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v5 = a1 >> 6;
  if (v5 == 3)
    return 0;
  v11 = *v4;
  if ((sub_23628DB54() & 1) == 0)
  {
    v22 = sub_2362CB698();
    v24 = v23;
    v25 = _APErrorCodeDescription(8uLL);
    if (v25)
    {
      v26 = v25;
      v27 = sub_2362CB698();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v6 = sub_236294D50(v22, v24, 8, v27, v29, 133, 0xD000000000000034, 0x80000002362D89E0);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (a1 <= 0x3Fu)
  {
    if ((a4 & 0x100) != 0)
    {
      v36 = sub_2362CB698();
      v6 = sub_236294D50(v36, v37, 3, 0xD000000000000026, 0x80000002362D7990, 137, 0xD000000000000034, 0x80000002362D89E0);
      goto LABEL_18;
    }
    if ((a1 & 1) != 0
      && ((*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11 + 128) + 32))(a2, a3, *(_QWORD *)(v11 + 96)) & 1) == 0)
    {
      sub_2362CBA58();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_2362CB728();
      v12 = a2;
      v13 = a3;
      v14 = sub_2362CB698();
      v16 = v15;
      swift_bridgeObjectRetain();
      v17 = v14;
      v18 = v16;
      v19 = v12;
      v20 = v13;
      v21 = 140;
LABEL_15:
      v6 = sub_236294D50(v17, v18, 9, v19, v20, v21, 0xD000000000000034, 0x80000002362D89E0);
      swift_bridgeObjectRelease_n();
LABEL_18:
      swift_bridgeObjectRelease();
      return v6;
    }
    return 0;
  }
  v6 = 0;
  if (v5 == 1 && (a1 & 1) != 0)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11 + 128) + 40))(a2, a3, *(_QWORD *)(v11 + 96)) & 1) == 0)
    {
      sub_2362CBA58();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_2362CB728();
      v30 = a2;
      v31 = a3;
      v32 = sub_2362CB698();
      v34 = v33;
      swift_bridgeObjectRetain();
      v17 = v32;
      v18 = v34;
      v19 = v30;
      v20 = v31;
      v21 = 145;
      goto LABEL_15;
    }
    return 0;
  }
  return v6;
}

char *sub_2362C84C0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t v7;
  char v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v7 = *v3;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*v3 + 112) + 32))(a1, a2, *(_QWORD *)(*v3 + 80));
  v9 = (char *)MEMORY[0x24BEE4AF8];
  if ((v8 & 1) == 0 && (a3 & 0x10000) == 0)
  {
    v9 = sub_2362AB358(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    if (v11 >= v10 >> 1)
      v9 = sub_2362AB358((char *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11 + 1;
    v9[v11 + 32] = -64;
  }
  if (qword_2563D59A8 != -1)
    swift_once();
  if ((sub_23624EC88(a1, a2, qword_2563DB618) & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_2362AB358(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v13 = *((_QWORD *)v9 + 2);
    v12 = *((_QWORD *)v9 + 3);
    if (v13 >= v12 >> 1)
      v9 = sub_2362AB358((char *)(v12 > 1), v13 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v13 + 1;
    v9[v13 + 32] = -64;
  }
  if ((v8 & 1) != 0)
  {
    if ((a3 & 0x10000) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_2362AB358(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v15 = *((_QWORD *)v9 + 2);
      v14 = *((_QWORD *)v9 + 3);
      if (v15 >= v14 >> 1)
        v9 = sub_2362AB358((char *)(v14 > 1), v15 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v15 + 1;
      v9[v15 + 32] = 0x80;
    }
    if ((a3 & 1) != 0
      && ((*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 128) + 32))(a1, a2, *(_QWORD *)(v7 + 96)) & 1) == 0|| (a3 & 0x100) != 0&& ((*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 128) + 40))(a1, a2, *(_QWORD *)(v7 + 96)) & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_2362AB358(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v17 = *((_QWORD *)v9 + 2);
      v16 = *((_QWORD *)v9 + 3);
      if (v17 >= v16 >> 1)
        v9 = sub_2362AB358((char *)(v16 > 1), v17 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v17 + 1;
      v9[v17 + 32] = -64;
    }
  }
  return v9;
}

id sub_2362C877C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char isEscapingClosureAtFileLocation;
  id result;
  void *v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = sub_2362CB560();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2362CB590();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_2362AD7F4(v12);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 16);
  v31 = v8;
  if (v14 == 1)
  {
    v30 = v7;
    result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (result)
    {
      v22 = result;
      sub_236251CC0(v13);
      if (v23)
      {
        v24 = (void *)sub_2362CB674();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      v25 = objc_msgSend(v22, sel_applicationIsInstalled_, v24);

      v7 = v30;
      if (v25)
      {
        swift_bridgeObjectRetain();
        v15 = v13;
      }
      else
      {
        v15 = MEMORY[0x24BEE4B08];
      }
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  v15 = MEMORY[0x24BEE4B08];
  if (v14)
  {
    v29 = v3;
    v30 = v7;
    v38 = MEMORY[0x24BEE4B08];
    v16 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 192);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v13;
    *(_QWORD *)(v17 + 24) = &v38;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_236253EF4;
    *(_QWORD *)(v18 + 24) = v17;
    v36 = sub_236272798;
    v37 = v18;
    aBlock = MEMORY[0x24BDAC760];
    v33 = 1107296256;
    v34 = sub_236251E08;
    v35 = &block_descriptor_13_0;
    v19 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_swift_forEach_, v19);

    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v15 = v38;
      swift_release();
      v3 = v29;
      v7 = v30;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_12:
  if (*(_QWORD *)(v15 + 16) <= *(_QWORD *)(v13 + 16) >> 3)
  {
    aBlock = v13;
    sub_2362AC28C(v15);
    swift_bridgeObjectRelease();
    v26 = aBlock;
  }
  else
  {
    v26 = sub_2362AC420(v15, v13);
    swift_bridgeObjectRelease();
  }
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v1;
  v36 = sub_2362C9500;
  v37 = v27;
  aBlock = MEMORY[0x24BDAC760];
  v33 = 1107296256;
  v34 = (void (*)(uint64_t, void *))sub_23624E13C;
  v35 = &block_descriptor_19_0;
  v28 = _Block_copy(&aBlock);
  swift_retain();
  sub_2362CB578();
  v38 = MEMORY[0x24BEE4AF8];
  sub_23629C5DC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23629C624();
  sub_2362CB9F8();
  MEMORY[0x23B7EE604](0, v11, v6, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v7);
  return (id)swift_release();
}

uint64_t sub_2362C8B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;

  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5)
      return swift_release();
    v9 = *(_QWORD *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v5)
        return swift_release();
      v9 = *(_QWORD *)(v1 + 8 * v7);
      if (!v9)
        break;
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_2362CB50C();
    result = swift_bridgeObjectRelease();
  }
  v10 = v8 + 2;
  if (v10 >= v5)
    return swift_release();
  v9 = *(_QWORD *)(v1 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v5)
      return swift_release();
    v9 = *(_QWORD *)(v1 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2362C8CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v4 = sub_2362CB560();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2362CB590();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v2;
  aBlock[4] = sub_2362C9418;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23624E13C;
  aBlock[3] = &block_descriptor_4;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2362CB578();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23629C5DC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
  sub_23629C624();
  sub_2362CB9F8();
  MEMORY[0x23B7EE604](0, v13, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_2362C8E98(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2362CB50C();
      swift_bridgeObjectRelease();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2362C8F20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = *v0;
  v2 = sub_2362CB560();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2362CB590();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 136) + 32))(*(_QWORD *)(v1 + 104));
  if ((result & 1) != 0)
  {
    aBlock[4] = sub_2362C9410;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23624E13C;
    aBlock[3] = &block_descriptor_24;
    v13 = _Block_copy(aBlock);
    swift_retain();
    sub_2362CB578();
    v14[1] = MEMORY[0x24BEE4AF8];
    sub_23629C5DC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A52C0);
    sub_23629C624();
    sub_2362CB9F8();
    MEMORY[0x23B7EE604](0, v11, v6, v13);
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return swift_release();
  }
  return result;
}

id *sub_2362C90DC()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 22));
  (*(void (**)(char *))(*(_QWORD *)(v1[11] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 23));
  (*(void (**)(char *))(*(_QWORD *)(v1[12] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 24));
  (*(void (**)(char *))(*(_QWORD *)(v1[13] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 25));
  return v0;
}

uint64_t sub_2362C918C()
{
  sub_2362C90DC();
  return swift_deallocClassInstance();
}

void type metadata accessor for ServerSettingsAuthority()
{
  JUMPOUT(0x23B7EF12CLL);
}

uint64_t destroy for SettingsAuthorityEvent(uint64_t a1)
{
  return sub_23625ADC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13AppProtection22SettingsAuthorityEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23625ADAC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SettingsAuthorityEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23625ADAC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23625ADC4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SettingsAuthorityEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23625ADC4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SettingsAuthorityEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SettingsAuthorityEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2362C933C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_2362C9354(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SettingsAuthorityEvent()
{
  return &type metadata for SettingsAuthorityEvent;
}

uint64_t sub_2362C937C()
{
  return sub_2362C80C0();
}

id sub_2362C939C(unsigned __int8 a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return sub_2362C8194(a1, a2, a3, a4 & 0x101);
}

char *sub_2362C93C8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_2362C84C0(a1, a2, a3 & 0x10101);
}

void sub_2362C9400()
{
  JUMPOUT(0x23B7EF18CLL);
}

uint64_t sub_2362C9418()
{
  uint64_t v0;

  return sub_2362C8E98(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2362C9420(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_2362C9444 + 4 * byte_2362D0939[a1 >> 6]))();
}

uint64_t sub_2362C9444@<X0>(unsigned int a1@<W8>)
{
  char v1;

  if (a1 < 0x40)
    return (((v1 & 1) == 0) ^ a1) & 1;
  else
    return 0;
}

uint64_t sub_2362C949C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2362C94C0()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2362C9500()
{
  uint64_t v0;

  return sub_2362C8B88(*(_QWORD *)(v0 + 16));
}

uint64_t getEnumTagSinglePayload for PreferenceSettingAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7D)
    goto LABEL_17;
  if (a2 + 131 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 131) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 131;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 131;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 131;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for PreferenceSettingAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 131 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 131) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7C)
    return ((uint64_t (*)(void))((char *)&loc_2362C95F4 + 4 * byte_2362D0942[v4]))();
  *a1 = a2 - 125;
  return ((uint64_t (*)(void))((char *)sub_2362C9628 + 4 * byte_2362D093D[v4]))();
}

uint64_t sub_2362C9628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C9630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2362C9638);
  return result;
}

uint64_t sub_2362C9650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2362C9658);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_2362C965C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C9664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2362C9670(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 6;
  v3 = (v1 & 1) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_2362C968C(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_2362C969C(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = a2 & 1 ^ 0xC1;
  return result;
}

ValueMetadata *type metadata accessor for PreferenceSettingAction()
{
  return &type metadata for PreferenceSettingAction;
}

void sub_2362C96F0(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_2362C9740()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *v0;
  v16 = v0[1];
  v17 = v1;
  v2 = v0[2];
  v14 = v0[3];
  v15 = v2;
  v3 = v0[5];
  v13 = v0[4];
  v11 = MEMORY[0x24BEE4B08];
  v12 = v3;
  sub_2362CA0A4((uint64_t)&v17);
  sub_2362CA0A4((uint64_t)&v16);
  sub_2362CA0A4((uint64_t)&v15);
  sub_2362CA0A4((uint64_t)&v14);
  sub_2362CA0A4((uint64_t)&v13);
  sub_2362CA0A4((uint64_t)&v12);
  v4 = swift_bridgeObjectRetain();
  sub_2362C98D8(v4);
  v5 = swift_bridgeObjectRetain();
  sub_2362C98D8(v5);
  v6 = swift_bridgeObjectRetain();
  sub_2362C98D8(v6);
  v7 = swift_bridgeObjectRetain();
  sub_2362C98D8(v7);
  v8 = swift_bridgeObjectRetain();
  sub_2362C98D8(v8);
  v9 = swift_bridgeObjectRetain();
  sub_2362C98D8(v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563D41B8);
  swift_arrayDestroy();
  return v11;
}

BOOL sub_2362C9860()
{
  _QWORD *v0;

  if (*(_QWORD *)(*v0 + 16))
    return 0;
  if (*(_QWORD *)(v0[1] + 16))
    return 0;
  if (*(_QWORD *)(v0[2] + 16))
    return 0;
  if (*(_QWORD *)(v0[3] + 16))
    return 0;
  if (*(_QWORD *)(v0[4] + 16))
    return 0;
  return *(_QWORD *)(v0[5] + 16) == 0;
}

uint64_t sub_2362C98D8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_236252958(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ClientPolicyObservationToken()
{
  return objc_opt_self();
}

uint64_t sub_2362C9A64()
{
  sub_2362CBC8C();
  sub_2362CBC98();
  return sub_2362CBCBC();
}

uint64_t sub_2362C9AA8()
{
  return sub_2362CBC98();
}

uint64_t sub_2362C9AD0()
{
  sub_2362CBC8C();
  sub_2362CBC98();
  return sub_2362CBCBC();
}

unint64_t sub_2362C9B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A5408;
  if (!qword_2542A5408)
  {
    v1 = type metadata accessor for ClientPolicyObservationToken();
    result = MEMORY[0x23B7EF18C](&unk_2362D0BA8, v1);
    atomic_store(result, (unint64_t *)&qword_2542A5408);
  }
  return result;
}

uint64_t sub_2362C9B54@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _BYTE v34[24];
  uint64_t v35;

  v2 = objc_msgSend((id)objc_opt_self(), sel_strongToWeakObjectsMapTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5410);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = v2;
  *a1 = v3;
  if (qword_2542A5550 != -1)
    swift_once();
  v4 = qword_2542A5910;
  v5 = *(_QWORD *)algn_2542A5918;
  type metadata accessor for ServerNotificationHandle();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_23628EF08(v4, v5);
  v6 = type metadata accessor for ServerBackedClientPolicyStore();
  swift_allocObject();
  v7 = swift_retain();
  a1[1] = (uint64_t)sub_23628F634(v7, (uint64_t)sub_2362C9E20, 0);
  v8 = a1 + 1;
  v8[3] = v6;
  v8[4] = &off_250794CD8;
  sub_23624E76C((uint64_t)v8, (uint64_t)v34);
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  MEMORY[0x24BDAC7A8](v9, v9);
  v11 = (_QWORD *)((char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = *v11;
  v32 = v6;
  v33 = &off_250794CD8;
  v31[0] = v13;
  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for DefaultSubjectMonitorRegistry());
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  MEMORY[0x24BDAC7A8](v15, v15);
  v17 = (_QWORD *)((char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = sub_2362C9F54(*v17, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v8[5] = v19;
  v20 = type metadata accessor for ServerBackedSystemAppOutletRegistry();
  v21 = swift_allocObject();
  v22 = sub_2362856F4();
  v24 = v23;
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5428);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 40) = 0;
  *(_QWORD *)(v27 + 16) = v22;
  *(_QWORD *)(v27 + 24) = v24;
  *(_QWORD *)(v27 + 32) = v26;
  *(_QWORD *)(v21 + 16) = v27;
  v8[9] = v20;
  v8[10] = &off_2507931B8;
  v8[6] = v21;
  v28 = type metadata accessor for ServerBackedExtensionMonitorRegistry();
  swift_allocObject();
  v29 = sub_236275218();
  v8[14] = v28;
  v8[15] = &off_250794E50;
  result = swift_release();
  v8[11] = v29;
  return result;
}

id sub_2362C9E20(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  _QWORD v5[6];

  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_2362C96F0;
  v5[3] = &block_descriptor_25;
  v2 = _Block_copy(v5);
  swift_retain();
  swift_release();
  v3 = APGetSyncReadProxy(v2);
  _Block_release(v2);
  return v3;
}

uint64_t sub_2362C9EBC()
{
  qword_2542A5938 = (uint64_t)&type metadata for ServerBackedClientArena;
  unk_2542A5940 = &off_250794558;
  qword_2542A5920 = swift_allocObject();
  return sub_2362C9B54((uint64_t *)(qword_2542A5920 + 16));
}

uint64_t sub_2362C9F10()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return swift_deallocObject();
}

char *sub_2362C9F54(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_super v12;
  _QWORD v13[5];

  v4 = type metadata accessor for ServerBackedClientPolicyStore();
  v13[3] = v4;
  v13[4] = &off_250794CD8;
  v13[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_observationToken] = 0;
  v5 = OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_mutableState;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A53C0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&a2[v5] = v6;
  v12.receiver = a2;
  v12.super_class = (Class)type metadata accessor for DefaultSubjectMonitorRegistry();
  v7 = objc_msgSendSuper2(&v12, sel_init);
  __swift_project_boxed_opaque_existential_1(v13, v4);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  v9 = (char *)v7;
  v10 = sub_23629089C((uint64_t)sub_2362CA09C, v8);
  swift_release();

  *(_QWORD *)&v9[OBJC_IVAR____TtC13AppProtection29DefaultSubjectMonitorRegistry_observationToken] = v10;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v9;
}

uint64_t sub_2362CA078()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2362CA09C(_BYTE *a1)
{
  return sub_236289044(a1);
}

uint64_t sub_2362CA0A4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

ValueMetadata *type metadata accessor for ExtantApplicationMap()
{
  return &type metadata for ExtantApplicationMap;
}

ValueMetadata *type metadata accessor for ExtantApplicationMap.State()
{
  return &type metadata for ExtantApplicationMap.State;
}

uint64_t *assignWithCopy for ServerBackedClientArena(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  return a1;
}

uint64_t assignWithTake for ServerBackedClientArena(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerBackedClientArena(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerBackedClientArena(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerBackedClientArena()
{
  return &type metadata for ServerBackedClientArena;
}

uint64_t destroy for ClientStateDiff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientStateDiff(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientStateDiff(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  return a1;
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClientStateDiff(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientStateDiff(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 52))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientStateDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 52) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientStateDiff()
{
  return &type metadata for ClientStateDiff;
}

id DataAccess.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id DataAccess.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DataAccess();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for DataAccess()
{
  return objc_opt_self();
}

id DataAccess.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataAccess();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static DataAccess.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2362CB674();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_2362CA768()
{
  return MEMORY[0x24BEE0948];
}

void sub_2362CA774(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_2362CB698();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_2362CA7D4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_2362CB674();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

void sub_2362CA830(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_raw_audit_token);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2362CB3C8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2362CA894(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_2362CB3BC();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setRaw_audit_token_);

}

uint64_t sub_2362CA8F8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_transaction_uuid);
  if (v3)
  {
    v4 = v3;
    sub_2362CB410();

    v5 = sub_2362CB428();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_2362CB428();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2362CA97C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542A5220);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236279974(a1, (uint64_t)v7);
  v8 = *a2;
  v9 = sub_2362CB428();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    v11 = (void *)sub_2362CB3F8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  objc_msgSend(v8, sel_setTransaction_uuid_, v11);

}

uint64_t sub_2362CAA58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DataAccess();
  result = sub_2362CBA70();
  *a1 = result;
  return result;
}

char *keypath_get_selector_accessed_bundle_id()
{
  return sel_accessed_bundle_id;
}

void sub_2362CAAA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2362CA774(a1, (SEL *)&selRef_accessed_bundle_id, a2);
}

void sub_2362CAAC0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2362CA7D4(a1, a2, a3, a4, (SEL *)&selRef_setAccessed_bundle_id_);
}

char *keypath_get_selector_accessor_bundle_id()
{
  return sel_accessor_bundle_id;
}

void sub_2362CAAE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2362CA774(a1, (SEL *)&selRef_accessor_bundle_id, a2);
}

void sub_2362CAB04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2362CA7D4(a1, a2, a3, a4, (SEL *)&selRef_setAccessor_bundle_id_);
}

char *keypath_get_selector_raw_accessor_type()
{
  return sel_raw_accessor_type;
}

id sub_2362CAB2C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_raw_accessor_type);
  *a2 = (_WORD)result;
  return result;
}

id sub_2362CAB5C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRaw_accessor_type_, *a1);
}

char *keypath_get_selector_raw_audit_token()
{
  return sel_raw_audit_token;
}

char *keypath_get_selector_transaction_uuid()
{
  return sel_transaction_uuid;
}

id PreferenceSetting.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id PreferenceSetting.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PreferenceSetting();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for PreferenceSetting()
{
  return objc_opt_self();
}

id PreferenceSetting.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PreferenceSetting();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static PreferenceSetting.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2362CB674();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_2362CAD58(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_bundleid);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2362CB698();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2362CADBC(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_2362CB674();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setBundleid_);

}

uint64_t sub_2362CAE18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PreferenceSetting();
  result = sub_2362CBA70();
  *a1 = result;
  return result;
}

char *keypath_get_selector_bundleid()
{
  return sel_bundleid;
}

char *keypath_get_selector_hidden()
{
  return sel_hidden;
}

id sub_2362CAE78@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_hidden);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2362CAEA8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHidden_, *a1);
}

char *keypath_get_selector_locked()
{
  return sel_locked;
}

id sub_2362CAEC8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_locked);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2362CAEF8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLocked_, *a1);
}

char *keypath_get_selector_provisional()
{
  return sel_provisional;
}

id sub_2362CAF18@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_provisional);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2362CAF48(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setProvisional_, *a1);
}

void APDoFirstRunWork_cold_1(int a1, NSObject *a2)
{
  _DWORD v2[2];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl(&dword_23624C000, a2, OS_LOG_TYPE_ERROR, "Failed to open semaphore, not doing first-run work: errno=%{darwin.errno}d", (uint8_t *)v2, 8u);
}

uint64_t sub_2362CB188()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_2362CB194()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_2362CB1A0()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_2362CB1AC()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_2362CB1B8()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2362CB1C4()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_2362CB1D0()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2362CB1DC()
{
  return MEMORY[0x24BDCB8D8]();
}

uint64_t sub_2362CB1E8()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_2362CB1F4()
{
  return MEMORY[0x24BDCB8F0]();
}

uint64_t sub_2362CB200()
{
  return MEMORY[0x24BDCB900]();
}

uint64_t sub_2362CB20C()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_2362CB218()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_2362CB224()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_2362CB230()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2362CB23C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2362CB248()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_2362CB254()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_2362CB260()
{
  return MEMORY[0x24BDCC750]();
}

uint64_t sub_2362CB26C()
{
  return MEMORY[0x24BDCC7A0]();
}

uint64_t sub_2362CB278()
{
  return MEMORY[0x24BDCC808]();
}

uint64_t sub_2362CB284()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_2362CB290()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_2362CB29C()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_2362CB2A8()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_2362CB2B4()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_2362CB2C0()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_2362CB2CC()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_2362CB2D8()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2362CB2E4()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2362CB2F0()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_2362CB2FC()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_2362CB308()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_2362CB314()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_2362CB320()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_2362CB32C()
{
  return MEMORY[0x24BDCD8A0]();
}

uint64_t sub_2362CB338()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2362CB344()
{
  return MEMORY[0x24BDCD9A8]();
}

uint64_t sub_2362CB350()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2362CB35C()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_2362CB368()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_2362CB374()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2362CB380()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_2362CB38C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2362CB398()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_2362CB3A4()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_2362CB3B0()
{
  return MEMORY[0x24BDCDC88]();
}

uint64_t sub_2362CB3BC()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2362CB3C8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2362CB3D4()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_2362CB3E0()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_2362CB3EC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2362CB3F8()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_2362CB404()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_2362CB410()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_2362CB41C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2362CB428()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2362CB434()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_2362CB440()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2362CB44C()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_2362CB458()
{
  return MEMORY[0x24BEE7700]();
}

uint64_t sub_2362CB464()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_2362CB470()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_2362CB47C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2362CB488()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2362CB494()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2362CB4A0()
{
  return MEMORY[0x24BEE6440]();
}

uint64_t sub_2362CB4AC()
{
  return MEMORY[0x24BEE6468]();
}

uint64_t sub_2362CB4B8()
{
  return MEMORY[0x24BEE6470]();
}

uint64_t sub_2362CB4C4()
{
  return MEMORY[0x24BEE6488]();
}

uint64_t sub_2362CB4D0()
{
  return MEMORY[0x24BEE6498]();
}

uint64_t sub_2362CB4DC()
{
  return MEMORY[0x24BEE64A8]();
}

uint64_t sub_2362CB4E8()
{
  return MEMORY[0x24BEE64B8]();
}

uint64_t sub_2362CB4F4()
{
  return MEMORY[0x24BEE64C0]();
}

uint64_t sub_2362CB500()
{
  return MEMORY[0x24BEE76B0]();
}

uint64_t sub_2362CB50C()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_2362CB518()
{
  return MEMORY[0x24BDB9C88]();
}

uint64_t sub_2362CB524()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_2362CB530()
{
  return MEMORY[0x24BDB9C98]();
}

uint64_t sub_2362CB53C()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_2362CB548()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_2362CB554()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_2362CB560()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2362CB56C()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_2362CB578()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2362CB584()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_2362CB590()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2362CB59C()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_2362CB5A8()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_2362CB5B4()
{
  return MEMORY[0x24BEE55D0]();
}

uint64_t sub_2362CB5C0()
{
  return MEMORY[0x24BEE55D8]();
}

uint64_t sub_2362CB5CC()
{
  return MEMORY[0x24BEE55F8]();
}

uint64_t sub_2362CB5D8()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_2362CB5E4()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_2362CB5F0()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_2362CB5FC()
{
  return MEMORY[0x24BEE01C0]();
}

uint64_t sub_2362CB608()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2362CB614()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2362CB620()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2362CB62C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2362CB638()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2362CB650()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2362CB65C()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_2362CB668()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_2362CB674()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2362CB680()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_2362CB68C()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2362CB698()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2362CB6A4()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_2362CB6B0()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_2362CB6BC()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_2362CB6C8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_2362CB6D4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_2362CB6E0()
{
  return MEMORY[0x24BDCFB08]();
}

uint64_t sub_2362CB6EC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2362CB6F8()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_2362CB704()
{
  return MEMORY[0x24BEE0A60]();
}

uint64_t sub_2362CB710()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2362CB71C()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2362CB728()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2362CB734()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_2362CB740()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2362CB74C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2362CB758()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2362CB764()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2362CB770()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2362CB77C()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2362CB788()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2362CB794()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_2362CB7A0()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_2362CB7AC()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_2362CB7B8()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_2362CB7C4()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2362CB7D0()
{
  return MEMORY[0x24BEE1648]();
}

uint64_t sub_2362CB7DC()
{
  return MEMORY[0x24BEE1658]();
}

uint64_t sub_2362CB7E8()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_2362CB7F4()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_2362CB800()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_2362CB80C()
{
  return MEMORY[0x24BDCFE60]();
}

uint64_t sub_2362CB818()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2362CB824()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2362CB830()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2362CB83C()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2362CB848()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2362CB854()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_2362CB860()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_2362CB86C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2362CB878()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2362CB884()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2362CB890()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_2362CB89C()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2362CB8A8()
{
  return MEMORY[0x24BEE5798]();
}

uint64_t sub_2362CB8B4()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2362CB8C0()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_2362CB8CC()
{
  return MEMORY[0x24BEE57C0]();
}

uint64_t sub_2362CB8D8()
{
  return MEMORY[0x24BEE57D8]();
}

uint64_t sub_2362CB8E4()
{
  return MEMORY[0x24BEE57E0]();
}

uint64_t sub_2362CB8F0()
{
  return MEMORY[0x24BEE5828]();
}

uint64_t sub_2362CB8FC()
{
  return MEMORY[0x24BEE5838]();
}

uint64_t sub_2362CB908()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_2362CB914()
{
  return MEMORY[0x24BEE58C8]();
}

uint64_t sub_2362CB920()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_2362CB92C()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_2362CB938()
{
  return MEMORY[0x24BEE58E8]();
}

uint64_t sub_2362CB944()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_2362CB950()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_2362CB95C()
{
  return MEMORY[0x24BDBB360]();
}

uint64_t sub_2362CB968()
{
  return MEMORY[0x24BEE5958]();
}

uint64_t sub_2362CB974()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_2362CB980()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2362CB98C()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_2362CB998()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_2362CB9A4()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_2362CB9B0()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2362CB9BC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2362CB9C8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2362CB9D4()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2362CB9E0()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2362CB9EC()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_2362CB9F8()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2362CBA04()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2362CBA10()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2362CBA1C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_2362CBA28()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_2362CBA34()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2362CBA40()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2362CBA4C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2362CBA58()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2362CBA64()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2362CBA70()
{
  return MEMORY[0x24BEE2578]();
}

uint64_t sub_2362CBA7C()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2362CBA88()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_2362CBA94()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2362CBAA0()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2362CBAAC()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2362CBAB8()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2362CBAC4()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2362CBAD0()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2362CBADC()
{
  return MEMORY[0x24BEE2BA8]();
}

uint64_t sub_2362CBAE8()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2362CBAF4()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2362CBB00()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2362CBB0C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_2362CBB18()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2362CBB24()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2362CBB30()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2362CBB3C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2362CBB48()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2362CBB54()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2362CBB60()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2362CBB6C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2362CBB78()
{
  return MEMORY[0x24BEE3390]();
}

uint64_t sub_2362CBB84()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2362CBB90()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_2362CBB9C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2362CBBA8()
{
  return MEMORY[0x24BEE34E0]();
}

uint64_t sub_2362CBBB4()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_2362CBBC0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2362CBBCC()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_2362CBBD8()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2362CBBE4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2362CBBF0()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_2362CBBFC()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_2362CBC08()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_2362CBC14()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2362CBC20()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2362CBC2C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_2362CBC38()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2362CBC44()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2362CBC50()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2362CBC5C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2362CBC68()
{
  return MEMORY[0x24BDD0730]();
}

uint64_t sub_2362CBC74()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_2362CBC80()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2362CBC8C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2362CBC98()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2362CBCA4()
{
  return MEMORY[0x24BEE4308]();
}

uint64_t sub_2362CBCB0()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2362CBCBC()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2362CBCC8()
{
  return MEMORY[0x24BEE4358]();
}

uint64_t sub_2362CBCD4()
{
  return MEMORY[0x24BEE43D0]();
}

uint64_t sub_2362CBCE0()
{
  return MEMORY[0x24BEE43D8]();
}

uint64_t sub_2362CBCEC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2362CBCF8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2362CBD04()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2362CBD10()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2362CBD1C()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x24BE1A1B0]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

uint64_t _AXSClarityBoardEnabled()
{
  return MEMORY[0x24BED2120]();
}

uint64_t _AXSClarityBundleIdentifierForStandardBundleIdentifier()
{
  return MEMORY[0x24BED2130]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x24BDBD138]();
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x24BDACB60]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB88](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x24BEDA8F8](atoken);
}

int audit_token_to_pidversion(audit_token_t *atoken)
{
  return MEMORY[0x24BEDA900](atoken);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x24BDAD9C0](*(_QWORD *)&__clock_id);
}

uint64_t container_copy_sandbox_token()
{
  return MEMORY[0x24BDADA40]();
}

uint64_t container_error_copy()
{
  return MEMORY[0x24BDADA80]();
}

uint64_t container_error_copy_unlocalized_description()
{
  return MEMORY[0x24BDADA88]();
}

uint64_t container_error_free()
{
  return MEMORY[0x24BDADA90]();
}

uint64_t container_get_path()
{
  return MEMORY[0x24BDADAC0]();
}

uint64_t container_query_create()
{
  return MEMORY[0x24BDADB18]();
}

uint64_t container_query_free()
{
  return MEMORY[0x24BDADB20]();
}

uint64_t container_query_get_last_error()
{
  return MEMORY[0x24BDADB28]();
}

uint64_t container_query_get_single_result()
{
  return MEMORY[0x24BDADB30]();
}

uint64_t container_query_operation_set_flags()
{
  return MEMORY[0x24BDADB48]();
}

uint64_t container_query_set_class()
{
  return MEMORY[0x24BDADB58]();
}

uint64_t container_query_set_persona_unique_string()
{
  return MEMORY[0x24BDADB78]();
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_main(void)
{
  MEMORY[0x24BDADE88]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x24BDAF140](*(_QWORD *)&token, check);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x24BDAF150](*(_QWORD *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x24BDAF168](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x24BDAF478](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x24BDAF4E0]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x24BDAFC00]();
}

int sem_close(sem_t *a1)
{
  return MEMORY[0x24BDAFC78](a1);
}

sem_t *sem_open(const char *a1, int a2, ...)
{
  return (sem_t *)MEMORY[0x24BDAFC80](a1, *(_QWORD *)&a2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x24BDAFF18](*(_QWORD *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x24BEE4FB8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x24BEE4FC0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x24BEE4FE0]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x24BEE4FE8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x24BDB0180](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

uint64_t tcc_authorization_record_get_authorization_reason()
{
  return MEMORY[0x24BEB39A8]();
}

uint64_t tcc_authorization_record_get_authorization_right()
{
  return MEMORY[0x24BEB39B0]();
}

uint64_t tcc_authorization_record_get_subject_identity()
{
  return MEMORY[0x24BEB39D0]();
}

uint64_t tcc_credential_create_for_process_with_audit_token()
{
  return MEMORY[0x24BEB39D8]();
}

uint64_t tcc_identity_get_identifier()
{
  return MEMORY[0x24BEB39F8]();
}

uint64_t tcc_identity_get_type()
{
  return MEMORY[0x24BEB3A00]();
}

uint64_t tcc_message_options_create()
{
  return MEMORY[0x24BEB3A08]();
}

uint64_t tcc_message_options_set_reply_handler_policy()
{
  return MEMORY[0x24BEB3A10]();
}

uint64_t tcc_message_options_set_request_prompt_policy()
{
  return MEMORY[0x24BEB3A18]();
}

uint64_t tcc_server_create()
{
  return MEMORY[0x24BEB3A20]();
}

uint64_t tcc_server_message_get_authorization_records_by_service()
{
  return MEMORY[0x24BEB3A30]();
}

uint64_t tcc_server_message_request_authorization()
{
  return MEMORY[0x24BEB3A38]();
}

uint64_t tcc_service_singleton_for_name()
{
  return MEMORY[0x24BEB3A58]();
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x24BDB05E0](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x24BDB05E8](identifier, criteria, handler);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x24BDB0610](activity, state);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x24BDB0638](xarray, applier);
}

xpc_object_t xpc_array_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB0648]();
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
  MEMORY[0x24BDB06C0](xarray, index, string);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x24BDB06E0](xBOOL);
}

uint64_t xpc_connection_set_non_launching()
{
  return MEMORY[0x24BDB07D8]();
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x24BDB0820](object);
}

uint64_t xpc_copy_entitlement_for_self()
{
  return MEMORY[0x24BDB0828]();
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x24BDB0830]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x24BDB08C0](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB08D0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x24BDB08D8](original);
}

uint64_t xpc_dictionary_get_audit_token()
{
  return MEMORY[0x24BDB0900]();
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0908](xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return (const void *)MEMORY[0x24BDB0918](xdict, key, length);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0928](xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0938](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return MEMORY[0x24BDB0970]();
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x24BDB0978](xdict, key, value);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
  MEMORY[0x24BDB0988](xdict, key, bytes, length);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x24BDB09A8](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x24BDB09E0](xdict, key, value);
}

uint64_t xpc_event_publisher_activate()
{
  return MEMORY[0x24BDB0A10]();
}

uint64_t xpc_event_publisher_create()
{
  return MEMORY[0x24BDB0A18]();
}

uint64_t xpc_event_publisher_fire()
{
  return MEMORY[0x24BDB0A20]();
}

uint64_t xpc_event_publisher_fire_with_reply()
{
  return MEMORY[0x24BDB0A28]();
}

uint64_t xpc_event_publisher_set_error_handler()
{
  return MEMORY[0x24BDB0A30]();
}

uint64_t xpc_event_publisher_set_handler()
{
  return MEMORY[0x24BDB0A38]();
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

uint64_t xpc_set_event()
{
  return MEMORY[0x24BDB0B50]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x24BDB0B58](stream, targetq, handler);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x24BDB0BA8](xstring);
}

uint64_t xpc_transaction_exit_clean()
{
  return MEMORY[0x24BDB0BC0]();
}

