uint64_t SQLDatabase._markdown(sql:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  _QWORD *v6;

  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v2;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 272) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 288) = v5;
  *(_BYTE *)(v3 + 304) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 352) = v6;
  *v6 = v3;
  v6[1] = sub_2476B0420;
  return SQLDatabase.results(dynamicValues:)(v3 + 64, v3 + 272);
}

uint64_t sub_2476B0420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B04C8()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 41) = *(_OWORD *)(v0 + 89);
  sub_2476B3DB8(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v2;
  *v2 = v0;
  v2[1] = sub_2476B0554;
  return sub_2476B16C8();
}

uint64_t sub_2476B0554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_22();
  v3 = *v2;
  v0[47] = v4;
  v0[48] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return swift_task_switch();
  }
  else
  {
    sub_2476B3E50((uint64_t)(v0 + 2));
    v6 = dword_2576B7B30;
    v7 = (_QWORD *)swift_task_alloc();
    v0[49] = v7;
    *v7 = v3;
    v7[1] = sub_2476B064C;
    return ((uint64_t (__cdecl *)())((char *)&dword_2576B7B30 + v6))();
  }
}

uint64_t sub_2476B064C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22();
  *(_QWORD *)(v0 + 400) = v2;
  *(_QWORD *)(v0 + 408) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B0704()
{
  uint64_t v0;

  sub_2476B3E50(v0 + 16);
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B0768()
{
  uint64_t v0;

  OUTLINED_FUNCTION_46();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B07B8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  sqlite3_value *v20;
  float v21;
  sqlite3_value *v22;
  const unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  sqlite3_value *v28;
  sqlite3_value *v29;
  const void *v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  __int128 *v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v59 = v0 + 16;
  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    *(_QWORD *)&v69 = MEMORY[0x24BEE4AF8];
    sub_2476B3000(0, v2, 0);
    v4 = v69;
    v5 = *(_QWORD *)(v69 + 16);
    v6 = 24 * v5 + 32;
    v7 = (uint64_t *)(v1 + 40);
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      *(_QWORD *)&v69 = v4;
      v10 = v5 + 1;
      v11 = *(_QWORD *)(v4 + 24);
      sub_24772C91C();
      if (v5 >= v11 >> 1)
      {
        sub_2476B3000((char *)(v11 > 1), v10, 1);
        v4 = v69;
      }
      *(_QWORD *)(v4 + 16) = v10;
      v12 = v4 + v6;
      *(_BYTE *)v12 = 3;
      *(_QWORD *)(v12 + 8) = v9;
      *(_QWORD *)(v12 + 16) = v8;
      v6 += 24;
      v7 += 2;
      ++v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x24BEE4AF8];
  }
  v13 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v58 = v4;
    v63 = (__int128 *)(v0 + 192);
    v64 = (__int128 *)(v0 + 112);
    v67 = v3;
    sub_2476B2FD4();
    v15 = 0;
    v61 = v13 + 32;
    v60 = v14;
    do
    {
      v62 = v15;
      v16 = *(_QWORD *)(v61 + 8 * v15);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v68 = v3;
        OUTLINED_FUNCTION_45();
        sub_2476B301C(0, v17, 0);
        v18 = 0;
        v65 = v17;
        v66 = v16;
        while (1)
        {
          v19 = *(_QWORD *)(v16 + 8 * v18 + 32);
          v20 = *(sqlite3_value **)(v19 + 16);
          swift_retain_n();
          switch(sqlite3_value_type(v20))
          {
            case 1:
              *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE1768];
              *(_QWORD *)(v0 + 144) = &protocol witness table for Int;
              *(_QWORD *)(v0 + 112) = sqlite3_value_int64(*(sqlite3_value **)(v19 + 16));
              goto LABEL_34;
            case 2:
              *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE14E8];
              *(_QWORD *)(v0 + 144) = &protocol witness table for Float;
              v21 = sqlite3_value_double(*(sqlite3_value **)(v19 + 16));
              *(float *)(v0 + 112) = v21;
              goto LABEL_34;
            case 3:
              *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE0D00];
              *(_QWORD *)(v0 + 144) = &protocol witness table for String;
              v22 = *(sqlite3_value **)(v19 + 16);
              swift_retain();
              v23 = sqlite3_value_text(v22);
              sqlite3_value_bytes(v22);
              if (v23)
              {
                v24 = sub_24772C9E8();
                if (v25)
                {
                  v26 = v24;
                  v27 = v25;
                  OUTLINED_FUNCTION_15();
                  *(_QWORD *)(v0 + 112) = v26;
                  *(_QWORD *)(v0 + 120) = v27;
                  goto LABEL_34;
                }
                *(_QWORD *)&v69 = 0;
                *((_QWORD *)&v69 + 1) = 0xE000000000000000;
                sub_24772D144();
                v40 = *((_QWORD *)&v69 + 1);
                *(_QWORD *)(v0 + 312) = v69;
                *(_QWORD *)(v0 + 320) = v40;
                sub_24772CAFC();
                *(_QWORD *)(v0 + 328) = v23;
                sub_24772D300();
                v41 = *(_QWORD *)(v0 + 312);
                v39 = *(_QWORD *)(v0 + 320);
                sub_2476B3FD0();
                v38 = OUTLINED_FUNCTION_36();
                *v37 = v41;
              }
              else
              {
                sub_2476B3FD0();
                v38 = OUTLINED_FUNCTION_36();
                *v37 = 0xD00000000000002DLL;
                v39 = 0x8000000247734800;
              }
              v37[1] = v39;
              swift_willThrow();
              OUTLINED_FUNCTION_15();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v64);
              MEMORY[0x2495821C4](v38);
              goto LABEL_30;
            case 4:
              *(_QWORD *)(v0 + 136) = MEMORY[0x24BDCDDE8];
              *(_QWORD *)(v0 + 144) = sub_2476B3EE4();
              v29 = *(sqlite3_value **)(v19 + 16);
              swift_retain();
              v30 = sqlite3_value_blob(v29);
              v31 = sqlite3_value_bytes(v29);
              if ((int)v31 < 1)
              {
                OUTLINED_FUNCTION_15();
                v35 = 0;
                v36 = 0xC000000000000000;
                goto LABEL_33;
              }
              if (v30)
              {
                v32 = v31;
                v33 = v31;
                if (v31 <= 0xE)
                {
                  *(_QWORD *)((char *)&v69 + 6) = 0;
                  *(_QWORD *)&v69 = 0;
                  BYTE14(v69) = v31;
                  memcpy(&v69, v30, v31);
                  v35 = v69;
                  v44 = DWORD2(v69);
                  v45 = BYTE12(v69);
                  v46 = BYTE13(v69);
                  v47 = BYTE14(v69);
                  OUTLINED_FUNCTION_15();
                  v36 = v44 | (v45 << 32) | (v46 << 40) | (v47 << 48);
                }
                else
                {
                  sub_24772C454();
                  swift_allocObject();
                  v34 = sub_24772C418();
                  if (v32 >= 0x7FFFFFFF)
                  {
                    sub_24772C55C();
                    v35 = swift_allocObject();
                    *(_OWORD *)(v35 + 16) = xmmword_24772E170;
                    OUTLINED_FUNCTION_15();
                    v36 = v34 | 0x8000000000000000;
                  }
                  else
                  {
                    OUTLINED_FUNCTION_15();
                    v35 = v33 << 32;
                    v36 = v34 | 0x4000000000000000;
                  }
                }
LABEL_33:
                *(_QWORD *)(v0 + 112) = v35;
                *(_QWORD *)(v0 + 120) = v36;
LABEL_34:
                sub_2476B3F20(v64, (uint64_t)v63);
                OUTLINED_FUNCTION_15();
                sub_2476B3F20(v63, v0 + 152);
                sub_2476B3F38(v0 + 152, v0 + 232);
                sub_2476B443C(0, (unint64_t *)&qword_2576B7B40);
                v43 = sub_24772CA54();
                v42 = v48;
                __swift_destroy_boxed_opaque_existential_1(v0 + 152);
                OUTLINED_FUNCTION_41();
                goto LABEL_35;
              }
              OUTLINED_FUNCTION_15();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v64);
LABEL_30:
              OUTLINED_FUNCTION_15();
              OUTLINED_FUNCTION_41();
              v42 = 0xEF65756C61566369;
              v43 = 0x6D616E79444C5153;
LABEL_35:
              v49 = v68;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2476B301C(0, *(_QWORD *)(v68 + 16) + 1, 1);
                v49 = v68;
              }
              v51 = *(_QWORD *)(v49 + 16);
              v50 = *(_QWORD *)(v49 + 24);
              if (v51 >= v50 >> 1)
              {
                sub_2476B301C(v50 > 1, v51 + 1, 1);
                v49 = v68;
              }
              ++v18;
              *(_QWORD *)(v49 + 16) = v51 + 1;
              v52 = v49 + 16 * v51;
              *(_QWORD *)(v52 + 32) = v43;
              *(_QWORD *)(v52 + 40) = v42;
              v16 = v66;
              if (v65 == v18)
              {
                OUTLINED_FUNCTION_32();
                v3 = MEMORY[0x24BEE4AF8];
                v14 = v60;
                goto LABEL_42;
              }
              break;
            case 5:
              *(_QWORD *)(v0 + 136) = &type metadata for SQLNull;
              *(_QWORD *)(v0 + 144) = sub_2476B400C();
              v28 = *(sqlite3_value **)(v19 + 16);
              if (sqlite3_value_type(v28) == 5)
                goto LABEL_34;
              *(_QWORD *)&v69 = 0;
              *((_QWORD *)&v69 + 1) = 0xE000000000000000;
              sub_24772D144();
              swift_bridgeObjectRelease();
              *(_QWORD *)&v69 = 0xD00000000000001ELL;
              *((_QWORD *)&v69 + 1) = 0x8000000247734850;
              *(_DWORD *)(v0 + 60) = sqlite3_value_type(v28);
              sub_24772D480();
              sub_24772CAFC();
              OUTLINED_FUNCTION_32();
              sub_24772CAFC();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v64);
              swift_bridgeObjectRelease();
              goto LABEL_30;
            default:
              __break(1u);
              return result;
          }
        }
      }
      v49 = v3;
LABEL_42:
      v53 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2476B2FD4();
        v53 = v67;
      }
      v54 = v62;
      v55 = *(_QWORD *)(v53 + 16);
      if (v55 >= *(_QWORD *)(v53 + 24) >> 1)
      {
        sub_2476B2FD4();
        v54 = v62;
        v53 = v67;
      }
      v15 = v54 + 1;
      *(_QWORD *)(v53 + 16) = v55 + 1;
      *(_QWORD *)(v53 + 8 * v55 + 32) = v49;
    }
    while (v15 != v14);
    swift_bridgeObjectRelease();
    sub_2476B3E50(v59);
    v4 = v58;
  }
  else
  {
    OUTLINED_FUNCTION_32();
    sub_2476B3E50(v59);
    v53 = MEMORY[0x24BEE4AF8];
  }
  v56 = *(_QWORD *)(v0 + 336);
  *(_BYTE *)v56 = 0;
  *(_QWORD *)(v56 + 8) = v4;
  *(_QWORD *)(v56 + 16) = v53;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476B0F88()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B0FD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_46();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B1028()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476B1038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  *(_BYTE *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 64) = sub_2476BAF24;
  *(_QWORD *)(v0 + 72) = 0;
  swift_retain();
  sub_2476B3E14(v2, v3, v4, v5, v6);
  v7 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = sub_2476B10E4;
  return v9();
}

uint64_t sub_2476B10E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_16(v3);
  if (v1)
  {
    v2[14] = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    v2[12] = MEMORY[0x24BEE4AF8];
    v2[13] = v0;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B1154()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 104);
  if (v1)
  {
    OUTLINED_FUNCTION_45();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *(_QWORD *)(v0 + 96);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_38();
      sub_2476C59CC();
      v3 = v7;
    }
    v4 = *(_QWORD *)(v3 + 16);
    if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_2476C59CC();
      v3 = v8;
    }
    *(_QWORD *)(v0 + 120) = v3;
    *(_QWORD *)(v3 + 16) = v4 + 1;
    *(_QWORD *)(v3 + 8 * v4 + 32) = v1;
    OUTLINED_FUNCTION_32();
    v5 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 128) = v5;
    *v5 = v0;
    v5[1] = sub_2476B1268;
    return v9();
  }
  else
  {
    sub_2476B45C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
    OUTLINED_FUNCTION_33();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_2476B125C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476B1268()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_16(v3);
  if (v1)
  {
    v2[14] = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    v2[12] = v2[15];
    v2[13] = v0;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B12D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[8] = v0;
  sub_2476B42B4(0);
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = OUTLINED_FUNCTION_28();
  sub_2476B437C(0);
  v1[12] = v3;
  v1[13] = *(_QWORD *)(v3 - 8);
  v1[14] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B1334()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[10] + 16))(v0[11], v0[8], v0[9]);
  sub_2476B4A38(&qword_2576B7C10, (uint64_t (*)(uint64_t))sub_2476B42B4, MEMORY[0x24BEE6F08]);
  sub_24772CEBC();
  sub_2476B4A38(&qword_2576B7C18, (uint64_t (*)(uint64_t))sub_2476B437C, MEMORY[0x24BEE6EE0]);
  v0[15] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_2476B140C;
  return sub_24772CDA8();
}

uint64_t sub_2476B140C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16(v2);
  if (v1)
  {
    *(_QWORD *)(v0 + 144) = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B1480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_WORD *)(v0 + 56);
    swift_retain();
    OUTLINED_FUNCTION_45();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *(_QWORD *)(v0 + 136);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_38();
      sub_2476C5C8C();
      v8 = v13;
    }
    v9 = *(_QWORD *)(v8 + 16);
    if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_2476C5C8C();
      v8 = v14;
    }
    *(_QWORD *)(v0 + 152) = v8;
    *(_QWORD *)(v8 + 16) = v9 + 1;
    v10 = v8 + 48 * v9;
    *(_QWORD *)(v10 + 32) = v2;
    *(_QWORD *)(v10 + 40) = v1;
    *(_BYTE *)(v10 + 48) = v3;
    *(_BYTE *)(v10 + 49) = BYTE1(v3) & 1;
    *(_QWORD *)(v10 + 56) = v4;
    *(_QWORD *)(v10 + 64) = v5;
    *(_BYTE *)(v10 + 72) = v6 & 1;
    *(_BYTE *)(v10 + 73) = HIBYTE(v6);
    sub_2476B440C(v2, v1);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v11;
    *v11 = v0;
    v11[1] = sub_2476B1660;
    return sub_24772CDA8();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    sub_2476B440C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_2476B1620()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476B1660()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16(v2);
  if (v1)
  {
    v0[18] = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    v0[17] = v0[19];
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B16C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476B16D8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD *, void *, _QWORD);

  v1 = (_QWORD *)v0[7];
  v0[8] = *v1;
  sub_2476B4654((uint64_t)(v1 + 1), (uint64_t)(v0 + 2));
  swift_retain();
  sub_2476B4690((uint64_t)(v0 + 2), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2476B3E14);
  v2 = (_QWORD *)OUTLINED_FUNCTION_14();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_2476B1768;
  return v4(v0 + 2, &unk_2576B87E8, 0);
}

uint64_t sub_2476B1768(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2 + 16;
  v5 = *v2;
  swift_task_dealloc();
  swift_release();
  sub_2476B4690(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2476B3EAC);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_2476B17E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2476B17EC(char a1)
{
  return a1 & 1;
}

void sub_2476B17F4()
{
  uint64_t *v0;

  sub_2476B1984(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2476B1818(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_24772CA00();
  *a2 = 0;
  return result;
}

uint64_t sub_2476B1890(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_24772CA0C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2476B190C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2476B1930();
  *a1 = result;
  return result;
}

uint64_t sub_2476B1930()
{
  uint64_t v0;

  sub_24772CA18();
  v0 = sub_24772C9F4();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_2476B1964()
{
  uint64_t *v0;

  sub_2476B1984(*v0, MEMORY[0x24BEE0CD8]);
}

void sub_2476B1984(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_24772CA18();
  a2(v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476B19B8()
{
  return sub_2476B19C0();
}

uint64_t sub_2476B19C0()
{
  sub_24772CA18();
  sub_24772CAC0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476B1A00()
{
  return sub_24772788C();
}

void sub_2476B1A08()
{
  sub_2476E5890();
}

uint64_t sub_2476B1A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24772C9F4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2476B1A58@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2477278FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2476B1A80()
{
  sub_2476B4A38((unint64_t *)&qword_2576B7CB0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_24772E3B8);
  sub_2476B4A38(&qword_2576B7CB8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_24772E30C);
  return sub_24772D3CC();
}

char *sub_2476B1B08(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B1B60(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_2476B1BEC(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_25(a3, result, a2);
  }
  return result;
}

char *sub_2476B1C48(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_2476B1CD8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B1D38(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B1D94(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B1DF0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[88 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_25(a3, result, 88 * a2);
  }
  return result;
}

char *sub_2476B1E54(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_2476B1EDC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B1F38(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_2476B1FBC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[56 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 56 * a2);
  }
  return __src;
}

char *sub_2476B2048(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

char *sub_2476B20A4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = (char *)OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2(a3, result);
  }
  return result;
}

uint64_t sub_2476B2104(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_2476B211C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
}

uint64_t sub_2476B2110(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_2476B211C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
}

uint64_t sub_2476B211C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    result = OUTLINED_FUNCTION_1();
    __break(1u);
  }
  else if (a3 < a1
         || (result = ((uint64_t (*)(_QWORD))a4)(0),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    OUTLINED_FUNCTION_37();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    OUTLINED_FUNCTION_37();
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_2476B21E4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_34();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    if (v2 + 88 * v1 <= v0 || v0 + 88 * v1 <= v2)
      return OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2280()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_34();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_39();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2308(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_19();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_2476B418C();
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2394(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_24772D3B4();
    __break(1u);
  }
  else
  {
    sub_2476B44F4(0, &qword_2576B7C58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_2476B248C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B255C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_18();
    if (v4 + 16 * v3 <= v2 || v2 + 16 * v3 <= v4)
    {
      sub_2476B4914(0, (unint64_t *)&qword_2576B7B88, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B260C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_24772D3B4();
    __break(1u);
  }
  else
  {
    sub_2476B4914(0, &qword_2576B7C40, MEMORY[0x24BEE1E08], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_2476B270C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_19();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_2476B443C(0, (unint64_t *)&qword_2576B7C30);
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B27A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 8 * a2 <= a1 || a1 + 8 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B2874()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_34();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    if (v2 + 80 * v1 <= v0 || v0 + 80 * v1 <= v2)
      return OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B290C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B29DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + (a2 << 6) <= a1 || a1 + (a2 << 6) <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B2AA8(uint64_t a1, uint64_t a2)
{
  return sub_2476B2AB4(a1, a2);
}

uint64_t sub_2476B2AB4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void (*v5)(_QWORD);
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_18();
    if (v4 + 24 * v3 <= v2 || v2 + 24 * v3 <= v4)
    {
      v5(0);
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2B50()
{
  return sub_2476B2B5C();
}

uint64_t sub_2476B2B5C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_34();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_39();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2BDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B2CA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 56 * a2 <= a1 || a1 + 56 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476B2D7C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_18();
    if (v4 + 8 * v3 <= v2 || v2 + 8 * v3 <= v4)
    {
      sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

void *sub_2476B2E24(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    if (&__dst[8 * a2] <= __src || &__src[8 * a2] <= __dst)
      return memcpy(__dst, __src, 8 * a2);
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = (void *)OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476B2EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
  }
  else
  {
    OUTLINED_FUNCTION_18();
    v6 = *(_QWORD *)(*(_QWORD *)(v5(0) - 8) + 72) * v2;
    v7 = v3 + v6;
    v8 = v4 + v6;
    if (v7 <= v4 || v8 <= v3)
    {
      OUTLINED_FUNCTION_8();
      return OUTLINED_FUNCTION_4();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6();
  }
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

void sub_2476B2F60(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2476B31EC(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_2476B2F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2476B3954(a1, a2, a3, *v3, &qword_2576B7B90, MEMORY[0x24BEE0D00], (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B1B08, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B2280);
  *v3 = v4;
}

uint64_t sub_2476B2FB8(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2476B32EC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_2476B2FD4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2476B35C8();
  *v0 = v1;
}

char *sub_2476B3000(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2476B33E0(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

uint64_t sub_2476B301C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2476B34DC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_2476B3038()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2476B35C8();
  *v0 = v1;
}

char *sub_2476B3064(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2476B3670(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_2476B3080(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2476B3764(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_2476B309C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2476B3860(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_2476B30B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2476B3954(a1, a2, a3, *v3, &qword_2576B7BE0, MEMORY[0x24BDCDDE8], (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B1F38, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B2BDC);
  *v3 = v4;
}

char *sub_2476B30F4(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2476B3A0C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_2476B3110()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2476B3B08();
  *v0 = v1;
}

void sub_2476B313C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2476B3BC4(a1, a2, a3, *v3, &qword_2576B7BA0, MEMORY[0x24BEE27D0]);
  *v3 = v4;
}

void sub_2476B3168()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2476B3B08();
  *v0 = v1;
}

void sub_2476B3194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2476B3BC4(a1, a2, a3, *v3, &qword_2576B7B80, MEMORY[0x24BEE1768]);
  *v3 = v4;
}

void sub_2476B31C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2476B3C8C();
  *v0 = v1;
}

void sub_2476B31EC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_27();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_2476B4268(0, &qword_2576B7BC0, (void (*)(uint64_t))sub_2476B41F4);
    v11 = swift_allocObject();
    v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  v13 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_2476B2048(v13, v9, (char *)(v11 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B2AB4((uint64_t)v13, v9);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_11();
}

void sub_2476B32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2476B3954(a1, a2, a3, a4, &qword_2576B7B90, MEMORY[0x24BEE0D00], (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B1B08, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2476B2280);
}

uint64_t sub_2476B32EC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4268(0, &qword_2576B7BB8, (void (*)(uint64_t))sub_2476B418C);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1B60(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B2308((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

char *sub_2476B33E0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4914(0, &qword_2576B7C60, (uint64_t)&type metadata for MarkdownTable.Header, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1C48(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B248C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_2476B34DC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B44F4(0, &qword_2576B7C48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1B08(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B255C((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_2476B35C8()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t, char *);
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;

  OUTLINED_FUNCTION_29();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_27();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v6 = v3;
  }
  v9 = *(_QWORD *)(v0 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v6;
  if (v10)
  {
    v4(0);
    v11 = (char *)OUTLINED_FUNCTION_17();
    _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_43();
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = v12;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = (char *)(v0 + 32);
  if ((v2 & 1) != 0)
  {
    sub_2476B1D38(v14, v9, v13);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14, v9, v13);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_11();
}

char *sub_2476B3670(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4914(0, &qword_2576B7B70, (uint64_t)&type metadata for SQLDynamicValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1D38(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B27A8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_2476B3764(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4914(0, &qword_2576B7C28, (uint64_t)&type metadata for SQLDatabase.IndexInfo, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B2048(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B290C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_2476B3860(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4914(0, &qword_2576B7C20, (uint64_t)&type metadata for SQLDatabase.IndexColumnInfo, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1E54(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B29DC((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_2476B3954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, _QWORD *), void (*a8)(uint64_t, uint64_t, _QWORD *))
{
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v11 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_27();
      if (v13)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v12 = a2;
  }
  v15 = *(_QWORD *)(a4 + 16);
  if (v12 <= v15)
    v16 = *(_QWORD *)(a4 + 16);
  else
    v16 = v12;
  if (v16)
  {
    OUTLINED_FUNCTION_31(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598], a5, a6);
    v17 = (_QWORD *)OUTLINED_FUNCTION_17();
    _swift_stdlib_malloc_size(v17);
    OUTLINED_FUNCTION_42();
    v17[2] = v15;
    v17[3] = v18;
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v19 = v17 + 4;
  v20 = a4 + 32;
  if ((v11 & 1) != 0)
  {
    a7(v20, v15, v19);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a8(v20, v15, v19);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_11();
}

char *sub_2476B3A0C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476B4914(0, &qword_2576B7BD0, (uint64_t)&type metadata for Data.HexLine, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2476B1FBC(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B2CA8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_2476B3B08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t *v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_29();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_27();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v6 = v3;
  }
  v9 = *(_QWORD *)(v0 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_2476B4914(0, v4, v1, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v11 = OUTLINED_FUNCTION_17();
    _swift_stdlib_malloc_size((const void *)v11);
    OUTLINED_FUNCTION_42();
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v12;
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  if ((v2 & 1) != 0)
  {
    sub_2476B1B08((char *)(v0 + 32), v9, (char *)(v11 + 32));
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2476B2B5C();
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_11();
}

void sub_2476B3BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v7 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_27();
      if (v9)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v8 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v8 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v8;
  if (v12)
  {
    OUTLINED_FUNCTION_31(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598], a5, a6);
    v13 = (char *)OUTLINED_FUNCTION_17();
    _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_43();
    *((_QWORD *)v13 + 2) = v11;
    *((_QWORD *)v13 + 3) = v14;
  }
  else
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
  }
  v15 = v13 + 32;
  v16 = (char *)(a4 + 32);
  if ((v7 & 1) != 0)
  {
    sub_2476B1D38(v16, v11, v15);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2476B2E24(v16, v11, v15);
  }
  OUTLINED_FUNCTION_23();
}

void sub_2476B3C78()
{
  sub_2476B3C8C();
}

void sub_2476B3C8C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  unint64_t *v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  OUTLINED_FUNCTION_29();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_27();
      if (v7)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v6 = v3;
  }
  v9 = *(_QWORD *)(v0 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v6;
  if (!v10)
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  sub_2476B4268(0, v4, v1);
  v11 = *(_QWORD *)(((uint64_t (*)(_QWORD))v1)(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_23;
  v14[2] = v9;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_18:
  v17 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))v1)(0) - 8) + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = v0 + v18;
  if ((v2 & 1) != 0)
  {
    sub_2476B211C(v19, v9, (unint64_t)v14 + v18, v1);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2476B2EBC(v19, v9);
  }
  OUTLINED_FUNCTION_23();
}

uint64_t sub_2476B3DB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  swift_retain();
  sub_2476B3E14(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_2476B3E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    sub_24772C91C();
    sub_24772C91C();
  }
  return sub_24772C91C();
}

uint64_t sub_2476B3E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  swift_release();
  sub_2476B3EAC(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_2476B3EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_2476B3EE4()
{
  unint64_t result;

  result = qword_2576B7B38;
  if (!qword_2576B7B38)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for Data, MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2576B7B38);
  }
  return result;
}

uint64_t sub_2476B3F20(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2476B3F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x24958238CLL);
  return result;
}

unint64_t sub_2476B3FD0()
{
  unint64_t result;

  result = qword_2576B7B48;
  if (!qword_2576B7B48)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLValueError, &type metadata for SQLValueError);
    atomic_store(result, (unint64_t *)&qword_2576B7B48);
  }
  return result;
}

unint64_t sub_2476B400C()
{
  unint64_t result;

  result = qword_2576B7B50;
  if (!qword_2576B7B50)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLNull, &type metadata for SQLNull);
    atomic_store(result, (unint64_t *)&qword_2576B7B50);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2476B4914(a1, &qword_25444C4C8, (uint64_t)&unk_2518DBD58, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for sqlite3_vtab_cursor(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7B58, (uint64_t)&unk_2518DBE30, MEMORY[0x24BEE4D40]);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s10ConnectionC6LimitsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s10ConnectionC6LimitsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for sqlite3_vtab(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7B60, (uint64_t)&unk_2518DBBD0, MEMORY[0x24BEE4D40]);
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t sub_2476B4108(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2476B4128(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_info(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7B68, (uint64_t)&unk_2518DBD80, MEMORY[0x24BEE4D40]);
}

void sub_2476B418C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576B7BA8)
  {
    sub_2476B41F4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576B7BA8);
  }
}

uint64_t sub_2476B41F4()
{
  uint64_t result;

  result = qword_2576B7BB0;
  if (!qword_2576B7BB0)
  {
    _s9StatementCMa();
    type metadata accessor for LRUDictionary.Container();
  }
  return result;
}

void sub_2476B4268(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_24772D48C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2476B42B4(uint64_t a1)
{
  sub_2476B4390(a1, &qword_2576B7BF0, MEMORY[0x24BEE6EF0]);
}

uint64_t sub_2476B42C8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v5[7];
  _QWORD v6[7];

  v1 = qword_2576B7BF8;
  if (!qword_2576B7BF8)
  {
    v6[0] = MEMORY[0x24BEE1768];
    v6[1] = MEMORY[0x24BEE0D00];
    v6[2] = MEMORY[0x24BEE0D00];
    v6[3] = MEMORY[0x24BEE1328];
    v6[4] = &type metadata for SQLDynamicValue;
    v6[5] = MEMORY[0x24BEE1768];
    v6[6] = MEMORY[0x24BEE1768];
    v5[0] = &protocol witness table for Int;
    v5[1] = &protocol witness table for String;
    v5[2] = &protocol witness table for String;
    v5[3] = &protocol witness table for Bool;
    v5[4] = &protocol witness table for SQLDynamicValue;
    v5[5] = &protocol witness table for Int;
    v5[6] = &protocol witness table for Int;
    v2 = type metadata accessor for SQLDatabase.Results(a1, 7, (uint64_t)v6, (uint64_t)v5);
    v1 = v2;
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_2576B7BF8);
  }
  return v1;
}

void sub_2476B437C(uint64_t a1)
{
  sub_2476B4390(a1, &qword_2576B7C08, MEMORY[0x24BEE6EC8]);
}

void sub_2476B4390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_2476B42C8(255);
    sub_2476B4A38((unint64_t *)&qword_2576B7C00, sub_2476B42C8, (uint64_t)&protocol conformance descriptor for SQLDatabase.Results<Pack{repeat A}>);
    v8 = a3(a1, v6, &type metadata for SQLDatabase.TableColumnInfo, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2476B440C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_2476B443C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2476B4488()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7C38)
  {
    sub_2476B4914(255, &qword_2576B7C40, MEMORY[0x24BEE1E08], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7C38);
  }
}

void sub_2476B44F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2476B4914(255, (unint64_t *)&qword_2576B7B88, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476B455C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7C50)
  {
    sub_2476B44F4(255, &qword_2576B7C58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7C50);
  }
}

uint64_t sub_2476B45C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  if (a6 >> 6 == 1)
  {
    swift_release();
    return swift_release();
  }
  else if (!(a6 >> 6))
  {
    swift_release();
    return sub_2476B3EAC(a2, a3, a4, a5, a6 & 1);
  }
  return result;
}

uint64_t sub_2476B4654(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

void sub_2476B4690(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  OUTLINED_FUNCTION_35();
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7C68, (uint64_t)&unk_2518DBD30, MEMORY[0x24BEE4D40]);
}

uint64_t _s10ThreadInfoVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void *__swift_memcpy192_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_2476B4718(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476B476C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for sqlite3_module(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7C70, (uint64_t)&unk_2518DBC58, MEMORY[0x24BEE4D40]);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for sqlite3_index_constraint_usage(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7C78, (uint64_t)&unk_2518DBF60, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2476B4834(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2476B4854(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_orderby(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7C80, (uint64_t)&unk_2518DBE58, MEMORY[0x24BEE4D40]);
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_2476B48AC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2476B48CC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_constraint(uint64_t a1)
{
  sub_2476B4914(a1, &qword_2576B7C88, (uint64_t)&unk_2518DBED8, MEMORY[0x24BEE4D40]);
}

void sub_2476B4914(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2476B4958()
{
  sub_2476B4A38(&qword_2576B7C90, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_24772E2D0);
}

void sub_2476B4984()
{
  sub_2476B4A38(&qword_2576B7C98, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_24772E2A4);
}

void sub_2476B49B0()
{
  sub_2476B4A38(&qword_2576B7CA0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_24772E340);
}

void sub_2476B49DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576B7CA8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576B7CA8);
  }
}

void sub_2476B4A38(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2495822A8](a3, v5), a1);
  }
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476B4A74()
{
  return nullsub_1();
}

uint64_t OUTLINED_FUNCTION_1()
{
  return sub_24772D3B4();
}

void *OUTLINED_FUNCTION_2@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3()
{
  return sub_24772D3B4();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_5()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_15()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_20()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_22()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_23()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_24()
{
  uint64_t v0;

  return sub_2476B45C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

void *OUTLINED_FUNCTION_25@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_28()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t), unint64_t *a5, uint64_t a6)
{
  sub_2476B4914(0, a5, a6, a4);
}

uint64_t OUTLINED_FUNCTION_32()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_37()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38()
{
  return 0;
}

void OUTLINED_FUNCTION_40()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_45()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_46()
{
  uint64_t v0;

  return sub_2476B3E50(v0 + 16);
}

uint64_t Device.Family.isHomePod.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(24, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t static Device.Family.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  v4 = *a1 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 != 1)
      __asm { BR              X10 }
    if (v3 >> 62 != 1)
      goto LABEL_8;
  }
  else if (v3 >> 62)
  {
LABEL_8:
    sub_2476B4F04(*a2);
    sub_2476B4F04(v2);
    sub_2476B4F20(v2);
    sub_2476B4F20(v3);
    v6 = 0;
    return v6 & 1;
  }
  sub_2476B4F04(v3);
  v5 = sub_2476B4F04(v2);
  v6 = OUTLINED_FUNCTION_4_0(v5);
  sub_2476B4F20(v2);
  sub_2476B4F20(v3);
  return v6 & 1;
}

unint64_t sub_2476B4F04(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_retain();
  return result;
}

unint64_t sub_2476B4F20(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_release();
  return result;
}

uint64_t Device.Family.isAppleTV.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(16, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Device.Family.isiPhone.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_2476B4F6C(0x8000000000000000, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Device.Family.isiPad.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(8, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Device.Family.isAppleWatch.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(32, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Device.Family.isVision.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(40, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Device.Family.isMac.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_0_0(48, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2476B4F6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v9 = *v8;
  v10 = *v8 >> 62;
  if (!(_DWORD)v10)
    goto LABEL_4;
  if ((_DWORD)v10 == 1)
  {
    v9 &= 0x3FFFFFFFFFFFFFFFuLL;
LABEL_4:
    v9 = *(_QWORD *)(v9 + 16);
  }
  return OUTLINED_FUNCTION_4_0(a1, a2, a3, a4, a5, a6, a7, a8, a1, v9) & 1;
}

BOOL Device.Family.isSimulator.getter()
{
  _QWORD *v0;

  return *v0 >> 62 == 1;
}

BOOL Device.Family.isVirtualized.getter()
{
  _QWORD *v0;

  return *v0 >> 62 == 0;
}

void sub_2476B4FD4()
{
  sub_2476B4FE0((unint64_t *)&qword_2576C15E0);
}

void sub_2476B4FE0(unint64_t *a1@<X8>)
{
  id v2;
  void *v3;
  int deviceClassNumber;
  unint64_t v5;

  v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    v3 = v2;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if ((deviceClassNumber - 1) > 0xA)
      v5 = 0x8000000000000038;
    else
      v5 = qword_24772E4C8[deviceClassNumber - 1];
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

id sub_2476B5050()
{
  return sub_2476B505C(&qword_2576C15E8);
}

id sub_2476B505C@<X0>(uint64_t *a1@<X8>)
{
  id result;
  void *v3;
  int isSimulator;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  int isVirtualDevice;
  uint64_t v10;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v3 = result;
    isSimulator = MobileGestalt_get_isSimulator();

    if (isSimulator)
    {
      v5 = swift_allocObject();
      if (qword_2576B7AB0 != -1)
        swift_once();
      v6 = qword_2576C15E0;
      *(_QWORD *)(v5 + 16) = qword_2576C15E0;
      v7 = v5 | 0x4000000000000000;
LABEL_14:
      *a1 = v7;
      return (id)sub_2476B4F04(v6);
    }
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v8 = result;
      isVirtualDevice = MobileGestalt_get_isVirtualDevice();

      if (isVirtualDevice)
      {
        v7 = swift_allocObject();
        if (qword_2576B7AB0 != -1)
        {
          v10 = v7;
          swift_once();
          v7 = v10;
        }
        v6 = qword_2576C15E0;
        *(_QWORD *)(v7 + 16) = qword_2576C15E0;
      }
      else
      {
        if (qword_2576B7AB0 != -1)
          swift_once();
        v7 = qword_2576C15E0;
        v6 = qword_2576C15E0;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Device.Family.hash(into:)(uint64_t a1)
{
  _QWORD *v1;

  if ((*v1 >> 62) > 1)
    __asm { BR              X10 }
  sub_24772D60C();
  return Device.Family.hash(into:)(a1);
}

uint64_t Device.Family.hashValue.getter()
{
  _QWORD *v0;
  _QWORD v2[10];

  v2[9] = *v0;
  sub_24772D600();
  Device.Family.hash(into:)((uint64_t)v2);
  return sub_24772D624();
}

uint64_t sub_2476B52DC()
{
  _QWORD *v0;
  _QWORD v2[10];

  v2[9] = *v0;
  sub_24772D600();
  Device.Family.hash(into:)((uint64_t)v2);
  return sub_24772D624();
}

unint64_t Device.family.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  if (qword_2576B7AB8 != -1)
    swift_once();
  v2 = qword_2576C15E8;
  *a1 = qword_2576C15E8;
  return sub_2476B4F04(v2);
}

id Device.supports4KVideo.getter()
{
  return sub_2476B5814(MEMORY[0x24BED8590]);
}

id Device.supportsCarPlay.getter()
{
  return sub_2476B5814(MEMORY[0x24BED85B0]);
}

id Device.supportsCarPlay2.getter()
{
  return sub_2476B5814(MEMORY[0x24BED85B8]);
}

id Device.hasDynamicIsland.getter()
{
  return sub_2476B5814(MEMORY[0x24BED85C8]);
}

id Device.hasNeuralEngine.getter()
{
  return sub_2476B5814(MEMORY[0x24BED85F0]);
}

id Device.hasBattery.getter()
{
  return sub_2476B5814(MEMORY[0x24BED85F8]);
}

uint64_t Device.hasInternalUI.getter()
{
  return os_variant_has_internal_ui();
}

uint64_t Device.hasInternalDiagnostics.getter()
{
  return os_variant_has_internal_diagnostics();
}

uint64_t Device.isInternalOS.getter()
{
  return os_variant_has_internal_content();
}

void Device.nvram.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    v2 = (id)MobileGestalt_copy_nVRAMDictionary_obj();

    if (v2)
    {
      v3 = sub_24772C8F8();

      sub_2476B54A0(v3);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_2476B54A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  _BYTE *v6;
  _OWORD *v7;
  uint64_t *v8;
  unint64_t result;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _BYTE *v21;
  _QWORD *v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _BYTE __dst[72];
  _BYTE __src[72];
  _QWORD v39[6];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_2476B5D74();
    v2 = (_QWORD *)sub_24772D39C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  sub_2476C7990(v39, a1);
  v3 = v39[0];
  v4 = v39[3];
  v28 = v39[1];
  v29 = (unint64_t)(v39[2] + 64) >> 6;
  v5 = v39[4];
  v6 = &__src[40];
  v7 = &__dst[40];
  v8 = &v33;
  result = sub_24772C91C();
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v30 = (v5 - 1) & v5;
        v10 = __clz(__rbit64(v5)) | (v4 << 6);
      }
      else
      {
        v11 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_31;
        if (v11 >= v29)
          goto LABEL_28;
        v12 = *(_QWORD *)(v28 + 8 * v11);
        v13 = v4 + 1;
        if (!v12)
        {
          v13 = v4 + 2;
          if (v4 + 2 >= v29)
            goto LABEL_28;
          v12 = *(_QWORD *)(v28 + 8 * v13);
          if (!v12)
          {
            v13 = v4 + 3;
            if (v4 + 3 >= v29)
              goto LABEL_28;
            v12 = *(_QWORD *)(v28 + 8 * v13);
            if (!v12)
            {
              v13 = v4 + 4;
              if (v4 + 4 >= v29)
                goto LABEL_28;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              if (!v12)
              {
                v13 = v4 + 5;
                if (v4 + 5 >= v29)
                  goto LABEL_28;
                v12 = *(_QWORD *)(v28 + 8 * v13);
                if (!v12)
                {
                  v14 = v4 + 6;
                  while (v14 < v29)
                  {
                    v12 = *(_QWORD *)(v28 + 8 * v14++);
                    if (v12)
                    {
                      v13 = v14 - 1;
                      goto LABEL_22;
                    }
                  }
LABEL_28:
                  sub_2476B5E58();
                  return (unint64_t)v2;
                }
              }
            }
          }
        }
LABEL_22:
        v30 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        v4 = v13;
      }
      sub_2476B5DD0(*(_QWORD *)(v3 + 48) + 40 * v10, (uint64_t)__src);
      sub_2476B5E0C(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v6);
      memcpy(__dst, __src, sizeof(__dst));
      swift_dynamicCast();
      sub_2476B5E48(v7, v8);
      sub_2476B5E48(v8, v35);
      sub_2476B5E48(v35, v36);
      sub_2476B5E48(v36, &v34);
      result = sub_247712890();
      v15 = result;
      if ((v16 & 1) == 0)
        break;
      v17 = v8;
      v18 = v4;
      v19 = v3;
      v20 = v7;
      v21 = v6;
      v22 = (_QWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v22 = v31;
      v22[1] = v32;
      v6 = v21;
      v7 = v20;
      v3 = v19;
      v4 = v18;
      v8 = v17;
      v23 = (_OWORD *)(v2[7] + 32 * v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      result = (unint64_t)sub_2476B5E48(&v34, v23);
      v5 = v30;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v24 = (_QWORD *)(v2[6] + 16 * result);
    *v24 = v31;
    v24[1] = v32;
    result = (unint64_t)sub_2476B5E48(&v34, (_OWORD *)(v2[7] + 32 * result));
    v25 = v2[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_30;
    v2[2] = v27;
    v5 = v30;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

id Device.isLocked.getter()
{
  return sub_2476B5814(MEMORY[0x24BED8658]);
}

id Device.isStoreDemo.getter()
{
  return sub_2476B5814(MEMORY[0x24BED8670]);
}

id sub_2476B5814(uint64_t (*a1)(void))
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v3 = result;
    v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void Device.osBuildVersion.getter()
{
  sub_2476B5A60(MEMORY[0x24BED84E8]);
}

uint64_t Device.isInternalCarry.getter()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v11;

  if (os_variant_has_internal_content()
    && (v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]),
        (v1 = sub_2476B5AD0(0x6C7070612E6D6F63, 0xEC00000061642E65)) != 0))
  {
    v2 = v1;
    v3 = (void *)sub_24772C9F4();
    v4 = OUTLINED_FUNCTION_3_0();

    if (!v4)
    {
      v11 = (void *)sub_24772C9F4();
      v9 = OUTLINED_FUNCTION_3_0();

      if (v9)
      {
        OUTLINED_FUNCTION_5_0();

        sub_24772CA60();
        swift_bridgeObjectRelease();
        sub_2476B5B30();
        if ((OUTLINED_FUNCTION_2_0() & 1) != 0)
        {
          swift_bridgeObjectRelease();

          LOBYTE(v9) = 1;
          return v9 & 1;
        }
        LOBYTE(v9) = OUTLINED_FUNCTION_2_0();
        swift_bridgeObjectRelease();
      }

      return v9 & 1;
    }
    v5 = OUTLINED_FUNCTION_5_0();
    v7 = v6;

    swift_bridgeObjectRelease();
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    LOBYTE(v9) = v8 == 0;
  }
  else
  {
    LOBYTE(v9) = 0;
  }
  return v9 & 1;
}

void Device.uniqueID.getter()
{
  sub_2476B5A60(MEMORY[0x24BED8560]);
}

void Device.macAddress.getter()
{
  sub_2476B5A60(MEMORY[0x24BED8508]);
}

void sub_2476B5A60(uint64_t (*a1)(void))
{
  id v2;
  void *v3;
  id v4;

  v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    v3 = v2;
    v4 = (id)a1();

    if (v4)
    {
      OUTLINED_FUNCTION_5_0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2476B5AD0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_24772C9F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

unint64_t sub_2476B5B30()
{
  unint64_t result;

  result = qword_2576B7CC0;
  if (!qword_2576B7CC0)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2576B7CC0);
  }
  return result;
}

unint64_t sub_2476B5B70()
{
  unint64_t result;

  result = qword_2576B7CC8;
  if (!qword_2576B7CC8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for Device.Family, &type metadata for Device.Family);
    atomic_store(result, (unint64_t *)&qword_2576B7CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

unint64_t *initializeBufferWithCopyOfBuffer for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_2476B4F04(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for Device.Family(unint64_t *a1)
{
  return sub_2476B4F20(*a1);
}

unint64_t *assignWithCopy for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_2476B4F04(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_2476B4F20(v4);
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_2476B4F20(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Device.Family(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for Device.Family(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2476B5D0C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_2476B5D28(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_2476B5D38(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Device.Family()
{
  return &type metadata for Device.Family;
}

void sub_2476B5D74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7CD0)
  {
    v0 = sub_24772D3A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7CD0);
  }
}

uint64_t sub_2476B5DD0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_2476B5E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_2476B5E48(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2476B5E58()
{
  return swift_release();
}

uint64_t sub_2476B5E60()
{
  uint64_t v0;

  sub_2476B4F20(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_2476B4F6C(a1 & 0xFFFFFFFFFFFFLL | 0x8000000000000000, a2, a3, a4, a5, a6, a7, a8);
}

unint64_t OUTLINED_FUNCTION_1_0()
{
  unint64_t v0;

  return sub_2476B4F20(v0);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_24772D0A8();
}

id OUTLINED_FUNCTION_3_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 2632), v1);
}

uint64_t OUTLINED_FUNCTION_4_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10)
{
  return static Device.Family.== infix(_:_:)(&a10, &a9);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return sub_24772CA18();
}

uint64_t SQLDynamicValue.description.getter()
{
  uint64_t v0;
  __int128 v2;
  _BYTE v3[40];

  swift_retain();
  SQLDynamicValue.nativeValue.getter((sqlite3_int64 *)&v2);
  swift_release();
  sub_2476B3F20(&v2, (uint64_t)v3);
  sub_2476B3F38((uint64_t)v3, (uint64_t)&v2);
  sub_2476B6378();
  v0 = sub_24772CA54();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v0;
}

sqlite3_value *sub_2476B5FC0(const sqlite3_value *a1)
{
  uint64_t v1;
  sqlite3_value *result;

  result = sqlite3_value_dup(a1);
  if (result)
  {
    *(_QWORD *)(v1 + 16) = result;
    return (sqlite3_value *)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476B5FE4()
{
  uint64_t v0;

  sqlite3_value_free(*(sqlite3_value **)(v0 + 16));
  return swift_deallocClassInstance();
}

BOOL sub_2476B6008(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_2476B6014()
{
  return sub_24772D60C();
}

uint64_t sub_2476B603C()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

uint64_t sub_2476B607C()
{
  return sub_2476B603C();
}

uint64_t sub_2476B609C()
{
  return sub_2476B6014();
}

uint64_t sub_2476B60BC()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

BOOL sub_2476B60FC(uint64_t *a1, uint64_t *a2)
{
  return sub_2476B6008(*a1, *a2);
}

uint64_t SQLDynamicValue.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t SQLDynamicValue.datatype.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sqlite3_value_type(*(sqlite3_value **)(*(_QWORD *)v1 + 16));
  if ((result - 1) > 4)
    __break(1u);
  else
    *a1 = 0x4030201uLL >> (8 * (result - 1));
  return result;
}

void SQLDynamicValue.nativeValue.getter(sqlite3_int64 *a1@<X8>)
{
  sqlite3_value *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  float v6;
  uint64_t v7;
  sqlite3_int64 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  sqlite3_int64 v12;

  v5 = *(_QWORD *)v1;
  switch(sqlite3_value_type(*(sqlite3_value **)(*(_QWORD *)v1 + 16)))
  {
    case 1:
      a1[3] = MEMORY[0x24BEE1768];
      a1[4] = (sqlite3_int64)&protocol witness table for Int;
      *a1 = sqlite3_value_int64(*(sqlite3_value **)(v5 + 16));
      return;
    case 2:
      a1[3] = MEMORY[0x24BEE14E8];
      a1[4] = (sqlite3_int64)&protocol witness table for Float;
      v6 = sqlite3_value_double(*(sqlite3_value **)(v5 + 16));
      *(float *)a1 = v6;
      return;
    case 3:
      a1[3] = MEMORY[0x24BEE0D00];
      a1[4] = (sqlite3_int64)&protocol witness table for String;
      OUTLINED_FUNCTION_4_1();
      sqlite3_value_text(v1);
      OUTLINED_FUNCTION_3_1();
      v7 = sub_2476ED1AC(v3);
      goto LABEL_8;
    case 4:
      a1[3] = MEMORY[0x24BDCDDE8];
      a1[4] = sub_2476B3EE4();
      OUTLINED_FUNCTION_4_1();
      sqlite3_value_blob(v1);
      v10 = OUTLINED_FUNCTION_3_1();
      v7 = sub_2476EE5D8(v3, v10);
LABEL_8:
      v11 = v7;
      v12 = v8;
      swift_release();
      if (v2)
        goto LABEL_9;
      *a1 = v11;
      a1[1] = v12;
      break;
    case 5:
      a1[3] = (sqlite3_int64)&type metadata for SQLNull;
      a1[4] = sub_2476B400C();
      SQLNull.init(raw:)(*(Swift::OpaquePointer *)(v5 + 16));
      if (!v9)
        return;
LABEL_9:
      __swift_deallocate_boxed_opaque_existential_1((uint64_t)a1);
      break;
    default:
      __break(1u);
      JUMPOUT(0x2476B62D4);
  }
}

uint64_t sub_2476B62E8(uint64_t a1)
{
  uint64_t v2;

  sub_2476B6324();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2476B6324()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7CD8)
  {
    sub_2476B6378();
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7CD8);
  }
}

unint64_t sub_2476B6378()
{
  unint64_t result;

  result = qword_2576B7B40;
  if (!qword_2576B7B40)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B7B40);
  }
  return result;
}

void static SQLDynamicValue.dataType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void SQLDynamicValue.init(raw:)()
{
  sqlite3_value **v0;

  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_1();
  *v0 = OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_1();
}

uint64_t SQLDynamicValue.hash(into:)()
{
  return sub_24772D60C();
}

BOOL static SQLDynamicValue.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDynamicValue.hashValue.getter()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

void sub_2476B6488()
{
  SQLDynamicValue.init(raw:)();
}

uint64_t SQLDynamicValue.debugSQL.getter()
{
  uint64_t v0;
  uint64_t v1;
  sqlite3_int64 v3[3];
  uint64_t v4;
  uint64_t v5;

  SQLDynamicValue.nativeValue.getter(v3);
  v1 = v4;
  v0 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 8) + 16))(v1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

void SQLDynamicValue.init(functionArgument:)()
{
  sqlite3_value **v0;

  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_1();
  *v0 = OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_1();
}

void sub_2476B6570()
{
  SQLDynamicValue.init(functionArgument:)();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLDynamicValue.result(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;

  sqlite3_result_value((sqlite3_context *)a1._rawValue, *(sqlite3_value **)(*(_QWORD *)v1 + 16));
}

void sub_2476B65B4(Swift::OpaquePointer a1)
{
  SQLDynamicValue.result(for:)(a1);
}

sqlite3_stmt *SQLDynamicValue.init(statement:index:)@<X0>(uint64_t iCol@<X1>, sqlite3_stmt *result@<X0>, sqlite3_stmt **a3@<X8>)
{
  _QWORD *v4;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (iCol > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (sqlite3_column_value(result, iCol))
  {
    type metadata accessor for SQLDynamicValue.Box();
    OUTLINED_FUNCTION_1_1();
    result = OUTLINED_FUNCTION_0_1();
    *a3 = result;
  }
  else
  {
    sub_24772D144();
    swift_bridgeObjectRelease();
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v4 = 0xD000000000000022;
    v4[1] = 0x80000002477349B0;
    return (sqlite3_stmt *)swift_willThrow();
  }
  return result;
}

sqlite3_stmt *sub_2476B66D8@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X8>)
{
  return SQLDynamicValue.init(statement:index:)(a2, a1, a3);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLDynamicValue.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  uint64_t v2;
  _QWORD *v3;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  if (sqlite3_bind_value((sqlite3_stmt *)to._rawValue, index, *(const sqlite3_value **)(*(_QWORD *)v2 + 16)))
  {
    sub_24772D144();
    swift_bridgeObjectRelease();
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v3 = 0xD00000000000001ELL;
    v3[1] = 0x80000002477349E0;
    swift_willThrow();
  }
}

void sub_2476B67E4(Swift::OpaquePointer a1, Swift::Int a2)
{
  SQLDynamicValue.bind(to:index:)(a1, a2);
}

uint64_t type metadata accessor for SQLDynamicValue.Box()
{
  return objc_opt_self();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2476B683C(uint64_t a1)
{
  unint64_t result;

  result = sub_2476B6860();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_2476B6860()
{
  unint64_t result;

  result = qword_2576B7CE0;
  if (!qword_2576B7CE0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDynamicValue, &type metadata for SQLDynamicValue);
    atomic_store(result, (unint64_t *)&qword_2576B7CE0);
  }
  return result;
}

unint64_t sub_2476B68A0()
{
  unint64_t result;

  result = qword_2576B7CE8;
  if (!qword_2576B7CE8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDynamicValue, &type metadata for SQLDynamicValue);
    atomic_store(result, (unint64_t *)&qword_2576B7CE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLDynamicValue()
{
  return &type metadata for SQLDynamicValue;
}

unint64_t sub_2476B68F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B7CF0;
  if (!qword_2576B7CF0)
  {
    v1 = type metadata accessor for SQLDynamicValue.Box();
    result = MEMORY[0x2495822A8](&unk_24772E66C, v1);
    atomic_store(result, (unint64_t *)&qword_2576B7CF0);
  }
  return result;
}

sqlite3_value *OUTLINED_FUNCTION_0_1()
{
  const sqlite3_value *v0;

  return sub_2476B5FC0(v0);
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return type metadata accessor for SQLDynamicValue.Box();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  sqlite3_value *v0;

  return sqlite3_value_bytes(v0);
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return swift_retain();
}

uint64_t SQLDatabase.results(dynamicValues:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(_BYTE *)(v3 + 64) = *(_BYTE *)(a2 + 32);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B69A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_38_0();
  result = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (result)
  {
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_129(v2, *(_QWORD *)(v0 + 16));
    OUTLINED_FUNCTION_31_0();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_20_0(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476B69F8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476BB31C;
  return SQLExecution.execute(dynamicOnce:)();
}

uint64_t sub_2476B6A5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_2476B4654(a1, v1 + 128);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 176) = v2;
  *v2 = v1;
  v2[1] = sub_2476B6AC4;
  return SQLDatabase.Transaction.results(dynamicValues:)(v1 + 80, v1 + 128);
}

uint64_t sub_2476B6AC4()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

#error "2476B6B44: call analysis failed (funcsize=19)"

uint64_t sub_2476B6B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_0();
  if (!v1)
    *(_QWORD *)(v2 + 248) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B6BA0()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476B6BA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_27_0(*(_QWORD *)(v0 + 248), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B6BE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B6C30()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B6C6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_2476B4654(a1, v1 + 128);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 176) = v2;
  *v2 = v1;
  v2[1] = sub_2476B6CD4;
  return SQLDatabase.results(dynamicValues:)(v1 + 80, v1 + 128);
}

uint64_t sub_2476B6CD4()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

#error "2476B6D54: call analysis failed (funcsize=19)"

uint64_t sub_2476B6D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_0();
  if (!v1)
    *(_QWORD *)(v2 + 248) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B6DB0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B6DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  sub_2476B4654(a1, v2 + 80);
  v3 = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v2 + 160) = v3;
  *(_BYTE *)(v2 + 113) = *(_BYTE *)(v2 + 112);
  return swift_task_switch();
}

uint64_t sub_2476B6E48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_retain();
  sub_2476BB28C(v1);
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B6E80()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = *(_BYTE *)(v0 + 113);
  v2 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 136);
  v3 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 40) = v3;
  *(_BYTE *)(v0 + 56) = v1;
  OUTLINED_FUNCTION_137((uint64_t)sub_2476BAF24);
  sub_2476BB28C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 176) = v4;
  *v4 = v0;
  v4[1] = sub_2476B6EF8;
  return OUTLINED_FUNCTION_49(v6);
}

uint64_t sub_2476B6EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v2 + 184) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 192) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B6F50()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_27_0(*(_QWORD *)(v0 + 192), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B6F8C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B6FD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.execute(dynamicOnce:)()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  OUTLINED_FUNCTION_38_0();
  v1[8] = OUTLINED_FUNCTION_159(v2);
  v4 = *(_BYTE *)(v3 + 32);
  *(_OWORD *)(v0 + 144) = v5;
  *(_BYTE *)(v0 + 160) = v4;
  OUTLINED_FUNCTION_139(v3, v6, v7);
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_156(v8);
  v10 = OUTLINED_FUNCTION_63(v9);
  return OUTLINED_FUNCTION_54(v10, v11, v12, v13, v14);
}

uint64_t sub_2476B705C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476BB31C;
  return SQLExecution.execute(dynamicAll:)();
}

uint64_t sub_2476B70C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_2476B4654(a1, v1 + 112);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v2;
  *v2 = v1;
  v2[1] = sub_2476B7128;
  return SQLDatabase.Transaction.results(dynamicValues:)(v1 + 64, v1 + 112);
}

uint64_t sub_2476B7128()
{
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B7164()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_97();
  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 168) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_134(v1, (uint64_t)sub_2476B71A0, v4);
  return OUTLINED_FUNCTION_10(v2);
}

uint64_t sub_2476B71A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_40_0();
  if (!v1)
    *(_QWORD *)(v2 + 184) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B71E8()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476B71F0()
{
  uint64_t v0;

  sub_2476B3E50(v0 + 16);
  return OUTLINED_FUNCTION_69(*(_QWORD *)(v0 + 184), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B7220()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_2476B3E50(v0 + 16);
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_138();
  return OUTLINED_FUNCTION_10(v1);
}

uint64_t sub_2476B7248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_2476B4654(a1, v1 + 112);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v2;
  *v2 = v1;
  v2[1] = sub_2476B72B0;
  return SQLDatabase.results(dynamicValues:)(v1 + 64, v1 + 112);
}

uint64_t sub_2476B72B0()
{
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B72EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_97();
  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 168) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_134(v1, (uint64_t)sub_2476B7328, v4);
  return OUTLINED_FUNCTION_10(v2);
}

uint64_t sub_2476B7328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_40_0();
  if (!v1)
    *(_QWORD *)(v2 + 184) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B7370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v1;
  sub_2476B4654(a1, v2 + 64);
  v3 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v2 + 136) = v3;
  *(_BYTE *)(v2 + 57) = *(_BYTE *)(v2 + 96);
  return swift_task_switch();
}

uint64_t sub_2476B73C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  v2 = *(_BYTE *)(v0 + 57);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 136);
  *(_BYTE *)(v0 + 56) = v2;
  swift_retain();
  sub_2476BB28C(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 152) = v3;
  *v3 = v0;
  v3[1] = sub_2476B7438;
  return OUTLINED_FUNCTION_49(v5);
}

uint64_t sub_2476B7438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v2 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 168) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B7490()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_8_0();
  return OUTLINED_FUNCTION_27_0(*(_QWORD *)(v0 + 168), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B74C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_8_0();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.execute(dynamicAll:)()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  OUTLINED_FUNCTION_38_0();
  v1[7] = OUTLINED_FUNCTION_159(v2);
  v4 = *(_BYTE *)(v3 + 32);
  *(_OWORD *)(v0 + 128) = v5;
  *(_BYTE *)(v0 + 144) = v4;
  OUTLINED_FUNCTION_139(v3, v6, v7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  v9 = OUTLINED_FUNCTION_63(v8);
  return OUTLINED_FUNCTION_54(v9, v10, v11, v12, v13);
}

uint64_t sub_2476B7548()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476BB304;
  return SQLExecution.execute<A>(once:)();
}

uint64_t SQLExecution.execute<A>(once:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);

  OUTLINED_FUNCTION_37_0();
  v2 = v1;
  v4 = v3;
  *(_QWORD *)(v0 + 240) = v5;
  *(_QWORD *)(v0 + 248) = v6;
  *(_QWORD *)(v0 + 224) = v7;
  *(_QWORD *)(v0 + 232) = v1;
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v1 == 1)
  {
    v8 = (uint64_t *)swift_checkMetadataState();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_60();
    if (v2)
    {
      v10 = (_QWORD *)v9;
      v11 = v2;
      do
      {
        v12 = *v8++;
        *v10++ = v12;
        --v11;
      }
      while (v11);
    }
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_167();
  }
  *(_QWORD *)(v0 + 256) = v8;
  sub_24772D018();
  *(_QWORD *)(v0 + 264) = OUTLINED_FUNCTION_60();
  v13 = *(_BYTE *)(v4 + 32);
  v14 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)v4;
  *(_OWORD *)(v0 + 192) = v14;
  *(_BYTE *)(v0 + 208) = v13;
  v15 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 272) = v15;
  v16 = OUTLINED_FUNCTION_155(v15);
  return v18(v16);
}

uint64_t sub_2476B7704()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141();
  *v2 = *v1;
  *(_QWORD *)(v3 + 280) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B7754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_38_0();
  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 288) = v5;
  *(_QWORD *)(v0 + 296) = v6;
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 304) = v7;
  *(_QWORD *)(v0 + 312) = v8;
  v9 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 320) = v9;
  v10 = *(_BYTE *)(v0 + 120);
  *(_QWORD *)(v0 + 128) = v5;
  *(_BYTE *)(v0 + 121) = v10;
  *(_QWORD *)(v0 + 136) = v6;
  *(_QWORD *)(v0 + 144) = v7;
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 160) = v9;
  *(_BYTE *)(v0 + 168) = v10;
  v11 = type metadata accessor for SQLDatabase.Results(0, v3, v4, v1);
  v12 = MEMORY[0x2495822A8](&unk_24772EF04, v11);
  sub_2476D1030(v11, v12, v0 + 16);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v13;
  v16 = type metadata accessor for SQLDatabase.AsyncResultsIterator(0, v2, v14, v15);
  MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.AsyncResultsIterator<A>, v16);
  *v13 = v0;
  v13[1] = sub_2476B7854;
  OUTLINED_FUNCTION_26();
  return sub_24772CDB4();
}

uint64_t sub_2476B7854()
{
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B7898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_169();
  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  OUTLINED_FUNCTION_8_0();
  sub_2476B45C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  OUTLINED_FUNCTION_33();
  v3 = 1;
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 256) - 8) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 264));
    v3 = 0;
  }
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 224), v3, 1, *(_QWORD *)(v0 + 256));
  OUTLINED_FUNCTION_70();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_29_0(v4);
}

uint64_t sub_2476B7944()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B7970()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_169();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B79B4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476BB31C;
  return SQLExecution.execute<A>(all:)();
}

uint64_t SQLExecution.execute<A>(all:)()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  OUTLINED_FUNCTION_36_0();
  v1[7] = OUTLINED_FUNCTION_104(v2);
  *(_QWORD *)(v0 + 160) = v3;
  *(_QWORD *)(v0 + 168) = v4;
  *(_QWORD *)(v0 + 152) = v5;
  v7 = *(_BYTE *)(v6 + 32);
  *(_OWORD *)(v0 + 128) = v8;
  *(_BYTE *)(v0 + 144) = v7;
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_156(v9);
  *v10 = v0;
  v10[1] = sub_2476B7AB8;
  OUTLINED_FUNCTION_75();
  return OUTLINED_FUNCTION_15_0(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_2476B7AB8()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B7AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_38_0();
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 192) = v4;
  *(_QWORD *)(v0 + 200) = v5;
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 208) = v6;
  *(_QWORD *)(v0 + 216) = v7;
  v8 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 224) = v8;
  v9 = *(_BYTE *)(v0 + 56);
  *(_BYTE *)(v0 + 57) = v9;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v0 + 96) = v8;
  *(_BYTE *)(v0 + 104) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v10;
  v11 = type metadata accessor for SQLDatabase.Results(0, v3, v1, v2);
  v12 = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Results<Pack{repeat A}>, v11);
  *v10 = v0;
  v10[1] = sub_2476B7BB8;
  return AsyncSequence.collect()(v11, v12);
}

uint64_t sub_2476B7BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_0();
  if (!v1)
    *(_QWORD *)(v2 + 248) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B7C00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_8_0();
  return OUTLINED_FUNCTION_27_0(*(_QWORD *)(v0 + 248), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B7C38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_8_0();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.execute<A, each B>(once:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_37_0();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  *(_QWORD *)(v22 + 88) = v23;
  *(_QWORD *)(v22 + 96) = v31;
  *(_QWORD *)(v22 + 72) = v32;
  *(_QWORD *)(v22 + 80) = v27;
  v33 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFELL);
  *(_QWORD *)(v22 + 56) = v34;
  *(_QWORD *)(v22 + 64) = v35;
  if (v27 == 1)
  {
    v36 = *v33;
  }
  else
  {
    v37 = OUTLINED_FUNCTION_60();
    if (v28)
    {
      v38 = (_QWORD *)v37;
      v39 = v28;
      do
      {
        v40 = *v33++;
        *v38++ = v40;
        --v39;
      }
      while (v39);
    }
    v36 = OUTLINED_FUNCTION_131();
    swift_task_dealloc();
  }
  *(_QWORD *)(v22 + 104) = v36;
  *(_QWORD *)(v22 + 112) = *(_QWORD *)(v36 - 8);
  *(_QWORD *)(v22 + 120) = OUTLINED_FUNCTION_158();
  *(_QWORD *)(v22 + 128) = OUTLINED_FUNCTION_158();
  *(_QWORD *)(v22 + 136) = OUTLINED_FUNCTION_158();
  v41 = sub_24772D018();
  *(_QWORD *)(v22 + 144) = v41;
  *(_QWORD *)(v22 + 152) = *(_QWORD *)(v41 - 8);
  *(_QWORD *)(v22 + 160) = OUTLINED_FUNCTION_130();
  *(_QWORD *)(v22 + 168) = OUTLINED_FUNCTION_130();
  v42 = *(_BYTE *)(v30 + 32);
  v43 = *(__n128 *)(v30 + 16);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)v30;
  OUTLINED_FUNCTION_107(v42, v43);
  v44 = OUTLINED_FUNCTION_4_2();
  v45 = (_QWORD *)OUTLINED_FUNCTION_156(v44);
  v46 = OUTLINED_FUNCTION_155(v45);
  return OUTLINED_FUNCTION_110(v46, v47, v28, v24, a22, v26, a21, a9);
}

uint64_t sub_2476B7DC0()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B7DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  char v24;
  _QWORD *v25;

  OUTLINED_FUNCTION_120();
  v11 = v10[20];
  v12 = v10[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10[19] + 16))(v11, v10[21], v10[18]);
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
  {
    v13 = v10[20];
    v14 = v10[18];
    v15 = v10[12];
    v16 = v10[7];
    v17 = *(void (**)(uint64_t, uint64_t))(v10[19] + 8);
    v17(v10[21], v14);
    v17(v13, v14);
    __swift_storeEnumTagSinglePayload(v16, 1, 1, v15);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    v18 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_29_0(v18);
  }
  else
  {
    v20 = v10[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10[14] + 32))(v10[17], v10[20], v10[13]);
    v21 = OUTLINED_FUNCTION_60();
    v10[24] = v21;
    OUTLINED_FUNCTION_121();
    if (v20)
    {
      v22 = (uint64_t *)(v10[11] & 0xFFFFFFFFFFFFFFFELL);
      do
      {
        if (v10[10] == 1)
          v23 = 0;
        else
          v23 = *(_DWORD *)(v10[13] + 32);
        OUTLINED_FUNCTION_61(*v22, v23);
        OUTLINED_FUNCTION_168();
      }
      while (!v24);
    }
    v25 = (_QWORD *)OUTLINED_FUNCTION_14();
    v10[25] = (uint64_t)v25;
    *v25 = v10;
    v25[1] = sub_2476B7F70;
    return OUTLINED_FUNCTION_94(v10[7], v21, a10);
  }
}

uint64_t sub_2476B7F70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_50();
  if (!v0)
  {
    v3 = v1[15];
    v2 = v1[16];
    v1[27] = *(_QWORD *)(v1[14] + 8);
    OUTLINED_FUNCTION_136(v2);
    OUTLINED_FUNCTION_136(v3);
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476B7FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD))(v0 + 216))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_162(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v2);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_55(v4);
}

uint64_t sub_2476B8064()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B80A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_165(*(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_162(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_165(v2);
  OUTLINED_FUNCTION_165(v3);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.execute<A, each B>(all:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  __n128 v21;
  _QWORD *v22;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;

  OUTLINED_FUNCTION_37_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  *(_QWORD *)(v0 + 104) = v3;
  *(_QWORD *)(v0 + 112) = v11;
  *(_QWORD *)(v0 + 88) = v12;
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v0 + 80) = v13;
  v14 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFFFELL);
  *(_QWORD *)(v0 + 120) = OUTLINED_FUNCTION_60();
  if (v8 == 1)
  {
    v14 = (uint64_t *)*v14;
  }
  else
  {
    v15 = OUTLINED_FUNCTION_60();
    if (v8)
    {
      v16 = (_QWORD *)v15;
      v17 = v8;
      do
      {
        v18 = *v14++;
        *v16++ = v18;
        --v17;
      }
      while (v17);
    }
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_167();
  }
  *(_QWORD *)(v0 + 128) = v14;
  v19 = *(v14 - 1);
  *(_QWORD *)(v0 + 136) = v19;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v19 + 64);
  *(_QWORD *)(v0 + 152) = OUTLINED_FUNCTION_130();
  *(_QWORD *)(v0 + 160) = OUTLINED_FUNCTION_130();
  *(_QWORD *)(v0 + 168) = OUTLINED_FUNCTION_130();
  v20 = *(_BYTE *)(v10 + 32);
  v21 = *(__n128 *)(v10 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v10;
  OUTLINED_FUNCTION_107(v20, v21);
  v22 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 176) = v22;
  *v22 = v0;
  v22[1] = sub_2476B8274;
  return v24(v0 + 16, v8, v4, v25, v6, v2);
}

uint64_t sub_2476B8274(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

void sub_2476B82D4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_36_0();
  *(_QWORD *)(v0 + 56) = sub_24772CCE8();
  sub_24772C91C();
  v1 = sub_24772CC88();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = v1;
  OUTLINED_FUNCTION_151();
}

uint64_t sub_2476B8448()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v9;

  v9 = (_QWORD *)*v1;
  v2 = v9;
  OUTLINED_FUNCTION_140(&v9);
  v2[27] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = v2[19];
    v3 = v2[20];
    v6 = v2 + 16;
    v5 = v2[16];
    v7 = *(void (**)(uint64_t, uint64_t))(v6[1] + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476B84D4()
{
  OUTLINED_FUNCTION_36_0();
  sub_24772CD48();
  sub_24772CD18();
  OUTLINED_FUNCTION_151();
}

uint64_t sub_2476B8640()
{
  uint64_t v0;

  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B8688()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  uint64_t v2;

  v1 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 136) + 8);
  ((void (*)(_QWORD, _QWORD))v1)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
  v2 = OUTLINED_FUNCTION_161();
  v1(v2);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.results<A, each B>(for:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;

  OUTLINED_FUNCTION_36_0();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)v29;
  *(_QWORD *)(v22 + 152) = v31;
  *(_QWORD *)(v22 + 160) = a21;
  *(_QWORD *)(v22 + 168) = a22;
  *(_QWORD *)(v22 + 136) = v25;
  *(_QWORD *)(v22 + 144) = v23;
  *(_QWORD *)(v22 + 120) = v32;
  *(_QWORD *)(v22 + 128) = v27;
  *(_QWORD *)(v22 + 104) = v33;
  *(_QWORD *)(v22 + 112) = v34;
  v35 = *(_BYTE *)(v29 + 32);
  *(_OWORD *)(v22 + 80) = v30;
  *(_BYTE *)(v22 + 96) = v35;
  v36 = OUTLINED_FUNCTION_14();
  v37 = (_QWORD *)OUTLINED_FUNCTION_156(v36);
  *v37 = v22;
  v37[1] = sub_2476B879C;
  return OUTLINED_FUNCTION_110(v22 + 16, v22 + 64, v28, v24, a22, v26, a21, a10);
}

uint64_t sub_2476B879C()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B87D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_BYTE *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_OWORD *)(v0 + 24);
  v13 = *(_OWORD *)(v0 + 40);
  v14 = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  v10 = *(_OWORD *)(v0 + 152);
  OUTLINED_FUNCTION_161();
  *(_QWORD *)(v7 + 32) = swift_allocateMetadataPack();
  *(_OWORD *)(v7 + 40) = v10;
  *(_QWORD *)(v7 + 56) = swift_allocateWitnessTablePack();
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 72) = v3;
  sub_2476D0348((uint64_t)&v11, (uint64_t)&unk_2576B7D48, v7, v4);
  swift_retain();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v8();
}

uint64_t sub_2476B88D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476B88DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t *v10;
  uint64_t TupleTypeMetadata;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7[5] = a5;
  v7[6] = a7;
  v7[3] = a3;
  v7[4] = a4;
  v10 = (uint64_t *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  v7[2] = a1;
  if (a5 == 1)
  {
    TupleTypeMetadata = *v10;
  }
  else
  {
    v12 = swift_task_alloc();
    if (a5)
    {
      v13 = v10;
      v14 = (_QWORD *)v12;
      v15 = a5;
      do
      {
        v16 = *v13++;
        *v14++ = v16;
        --v15;
      }
      while (v15);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v7[7] = TupleTypeMetadata;
  v7[8] = *(_QWORD *)(TupleTypeMetadata - 8);
  v7[9] = swift_task_alloc();
  v7[10] = swift_task_alloc();
  v17 = swift_task_alloc();
  v7[11] = v17;
  if (a5)
  {
    v18 = v17;
    v19 = (int *)(TupleTypeMetadata + 32);
    v20 = a5;
    do
    {
      if (a5 == 1)
        v21 = 0;
      else
        v21 = *v19;
      v23 = *v10++;
      v22 = v23;
      v24 = *a2++;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v18 + v21, v24);
      v19 += 4;
      --v20;
    }
    while (v20);
  }
  return swift_task_switch();
}

uint64_t sub_2476B8A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  char v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_120();
  v11 = v10[5];
  v12 = OUTLINED_FUNCTION_60();
  v10[12] = v12;
  OUTLINED_FUNCTION_121();
  if (v11)
  {
    v13 = (uint64_t *)(v10[6] & 0xFFFFFFFFFFFFFFFELL);
    do
    {
      if (v10[5] == 1)
        v14 = 0;
      else
        v14 = *(_DWORD *)(v10[7] + 32);
      OUTLINED_FUNCTION_61(*v13, v14);
      OUTLINED_FUNCTION_168();
    }
    while (!v15);
  }
  v16 = (_QWORD *)OUTLINED_FUNCTION_14();
  v10[13] = (uint64_t)v16;
  *v16 = v10;
  v16[1] = sub_2476B8AE8;
  return OUTLINED_FUNCTION_94(v10[2], v12, a10);
}

uint64_t sub_2476B8AE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v4 = v2[9];
    v3 = v2[10];
    v2[15] = *(_QWORD *)(v2[8] + 8);
    OUTLINED_FUNCTION_136(v3);
    OUTLINED_FUNCTION_136(v4);
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476B8B68()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_55(v1);
}

uint64_t sub_2476B8BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_154(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_154(v2);
  OUTLINED_FUNCTION_154(v1);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.execute<A>(once:of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_67(v1, v2);
  v3 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_2476B8C7C;
  OUTLINED_FUNCTION_75();
  return OUTLINED_FUNCTION_15_0(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_2476B8C7C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_52();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476B8CB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.execute<A>(all:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_64();
  v14[1] = OUTLINED_FUNCTION_104(v15);
  OUTLINED_FUNCTION_107(*(_BYTE *)(v16 + 32), v17);
  v18 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v11 + 56) = v18;
  v19 = OUTLINED_FUNCTION_152(v18, (uint64_t)sub_2476B8D20);
  return OUTLINED_FUNCTION_85(v19, v20, v12, v9, v13, v10, a9);
}

uint64_t sub_2476B8D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_52();
  if (!v1)
    return OUTLINED_FUNCTION_32_0(a1, *(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t SQLExecution.results<A>(for:of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_67(v1, v2);
  v3 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_2476B8DB8;
  OUTLINED_FUNCTION_75();
  return OUTLINED_FUNCTION_15_0(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_2476B8DB8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_52();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t SQLDatabase.Transaction.execute(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 56) = v1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 80) = v3;
  *(_BYTE *)(v2 + 49) = *(_BYTE *)(a1 + 32);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B8E18()
{
  uint64_t v0;
  unsigned __int8 v1;
  __n128 v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 49);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 128);
  v2 = *(__n128 *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  OUTLINED_FUNCTION_107(v1, v2);
  OUTLINED_FUNCTION_39_0();
  v3 = (_QWORD *)OUTLINED_FUNCTION_102();
  *(_QWORD *)(v0 + 104) = v3;
  v4 = OUTLINED_FUNCTION_106(v3, (uint64_t)sub_2476B8E78);
  return OUTLINED_FUNCTION_100(v4);
}

uint64_t sub_2476B8E78()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_23();
  if (v0)
    return OUTLINED_FUNCTION_5();
  else
    return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2476B8EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 56) = v1;
  sub_2476B4654(a1, v2 + 16);
  v3 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v2 + 64) = v3;
  *v3 = v2;
  v3[1] = sub_2476B8F34;
  return v5();
}

uint64_t sub_2476B8F34()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141();
  *v2 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476B8F8C()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v0();
}

uint64_t sub_2476B8F9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLDatabase.Transaction.results(dynamicValues:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(_BYTE *)(v3 + 64) = *(_BYTE *)(a2 + 32);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B8FCC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_145();
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)v6 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 128);
  *(_QWORD *)(v6 + 8) = v5;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v0;
  *(_BYTE *)(v6 + 40) = v1;
  swift_retain();
  OUTLINED_FUNCTION_31_0();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_20_0(v7);
}

uint64_t SQLDatabase.Transaction.results<each A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_98(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B9030()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_119(*(_QWORD *)(v0 + 16), v3, v4, v5, v6, v7, v8);
  swift_retain();
  OUTLINED_FUNCTION_31_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_42_0(v1);
}

uint64_t sub_2476B9088(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2476BB304;
  return SQLDatabase.Transaction.execute(_:)(a1);
}

uint64_t sub_2476B90D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7ED0 + dword_2576B7ED0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476BB310;
  return v4(v1 + 16);
}

uint64_t sub_2476B9148(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7EC8 + dword_2576B7EC8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476BB310;
  return v4(v1 + 16);
}

uint64_t sub_2476B91B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476BB304;
  return SQLDatabase.Transaction.results(dynamicValues:)(a1, a2);
}

uint64_t sub_2476B921C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2476BB304;
  return SQLDatabase.Transaction.results<each A>(for:)(a1, a2, a3, a4, a5);
}

uint64_t SQLDatabase.execute(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 56) = v1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 80) = v3;
  *(_BYTE *)(v2 + 49) = *(_BYTE *)(a1 + 32);
  return OUTLINED_FUNCTION_7_0();
}

void sub_2476B92C4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  __n128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  *(_QWORD *)(v0 + 96) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 49);
    v3 = *(__n128 *)(v0 + 80);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
    OUTLINED_FUNCTION_107(v2, v3);
    OUTLINED_FUNCTION_39_0();
    v4 = (_QWORD *)OUTLINED_FUNCTION_102();
    *(_QWORD *)(v0 + 104) = v4;
    v5 = OUTLINED_FUNCTION_106(v4, (uint64_t)sub_2476B9338);
    OUTLINED_FUNCTION_100(v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2476B9338()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_23();
  if (v0)
    return OUTLINED_FUNCTION_5();
  else
    return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t SQLDatabase.results<each A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_98(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_7_0();
}

void sub_2476B93A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  _QWORD v9[4];
  char v10;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 16);
    v9[0] = *(_QWORD *)(v0 + 56);
    v6 = v9[0];
    v9[1] = v5;
    v9[2] = v4;
    v9[3] = v3;
    v10 = v2;
    sub_2476D0370(v1, (uint64_t)v9, v7);
    OUTLINED_FUNCTION_39_0();
    sub_2476B3E14(v6, v5, v4, v3, v2);
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_42_0(v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2476B9434()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_106(v1, (uint64_t)sub_2476BB304);
  return SQLDatabase.execute(_:)(v2);
}

uint64_t sub_2476B947C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7EC0 + dword_2576B7EC0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476BB310;
  return v4(v1 + 16);
}

uint64_t sub_2476B94EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7EB8 + dword_2576B7EB8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476BB310;
  return v4(v1 + 16);
}

uint64_t sub_2476B955C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476BB304;
  return SQLDatabase.results(dynamicValues:)(a1, a2);
}

uint64_t sub_2476B95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2476BB304;
  return SQLDatabase.results<each A>(for:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2476B9644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 104) = a3;
  return swift_task_switch();
}

const char *sub_2476B9658()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t i;
  sqlite3 **v6;
  uint64_t v7;
  const char *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  id v19;
  int v20;
  char v21;
  uint64_t (*v22)(void);
  int v23;
  char v24;
  int v25;
  char v26;

  v2 = OUTLINED_FUNCTION_153();
  v3 = v0;
  if (v0)
    goto LABEL_13;
  for (i = v2; ; i = OUTLINED_FUNCTION_153())
  {
    sub_247716788(i, (uint64_t)&v25);
    if (v26 != 1 && (v26 != 14 || v25 != 16))
      break;
  }
  v6 = (sqlite3 **)(*(_QWORD *)(v1 + 96) + 136);
  swift_beginAccess();
  v7 = sqlite3_extended_errcode(*v6);
  result = sqlite3_errstr(i);
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  v9 = sub_24772CB08();
  v11 = v10;
  result = sqlite3_errmsg(*v6);
  if (!result)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v12 = sub_24772CB08();
  v14 = v13;
  sub_2476BB2C0();
  v3 = (void *)swift_allocError();
  v16 = v15;
  sub_247716788(v7, (uint64_t)&v25);
  v17 = v25;
  v18 = v26;
  *(_DWORD *)v16 = v7;
  *(_DWORD *)(v16 + 4) = v17;
  *(_BYTE *)(v16 + 8) = v18;
  *(_QWORD *)(v16 + 16) = v9;
  *(_QWORD *)(v16 + 24) = v11;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v14;
  swift_willThrow();
LABEL_13:
  *(_QWORD *)(v1 + 88) = v3;
  v19 = v3;
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_161();
  if (!swift_dynamicCast())
    goto LABEL_16;
  v20 = *(_DWORD *)(v1 + 20);
  v21 = *(_BYTE *)(v1 + 24);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
  v23 = v20;
  v24 = v21;
  v25 = 17;
  v26 = 14;
  if ((static SQLError.Code.== infix(_:_:)((uint64_t)&v23) & 1) != 0)
  {
    MEMORY[0x2495821C4](v3);
    MEMORY[0x2495821C4](*(_QWORD *)(v1 + 88));
    v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  }
  else
  {
LABEL_16:
    MEMORY[0x2495821C4](*(_QWORD *)(v1 + 88));
    v22 = *(uint64_t (**)(void))(v1 + 8);
  }
  return (const char *)v22();
}

uint64_t sub_2476B982C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(_BYTE *)(v3 + 64) = *(_BYTE *)(a2 + 32);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B9850()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_129(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_31_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_20_0(v1);
}

uint64_t sub_2476B9884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_98(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B98A0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_119(*(_QWORD *)(v0 + 16), v3, v4, v5, v6, v7, v8);
  swift_retain();
  OUTLINED_FUNCTION_31_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_42_0(v1);
}

uint64_t sub_2476B98F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_106(v1, (uint64_t)sub_2476BB304);
  return sub_2476B8EC8(v2);
}

uint64_t sub_2476B993C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7EB0 + dword_2576B7EB0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476BB310;
  return v4(v1 + 16);
}

uint64_t sub_2476B99AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_2476B4654(a1, v1 + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_2576B7EA8 + dword_2576B7EA8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_2476B9A1C;
  return v4(v1 + 16);
}

uint64_t sub_2476B9A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_48();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_32_0(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2476B9A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476BB304;
  return sub_2476B982C(a1, a2);
}

uint64_t sub_2476B9AC0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476B9B58;
  return SQLExecution.execute<A>(once:)();
}

uint64_t sub_2476B9B58()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B9B7C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476B9C08;
  return SQLExecution.execute<A>(all:)();
}

uint64_t sub_2476B9C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_26_0();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_32_0(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2476B9C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2476BB304;
  return sub_2476B9884(a1, a2, a3, a4, a5);
}

uint64_t sub_2476B9CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = *((_BYTE *)v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = sub_2476BAF24;
  *(_QWORD *)(a1 + 56) = 0;
  swift_retain();
  v8 = OUTLINED_FUNCTION_161();
  return sub_2476B3E14(v8, v9, v5, v6, v7);
}

uint64_t sub_2476B9D24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476B9D38()
{
  uint64_t v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_6_1();
  if (v2)
  {
    if (v2 == 1)
    {
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_79();
      v3 = (_QWORD *)OUTLINED_FUNCTION_102();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = OUTLINED_FUNCTION_34_0(v3, (uint64_t)sub_2476B9E24);
      return OUTLINED_FUNCTION_13_0(v4, v5, v6, v7);
    }
    else
    {
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_0(v1);
    OUTLINED_FUNCTION_30_0();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    v10 = OUTLINED_FUNCTION_95(v9, (uint64_t)sub_2476B9DE0);
    return OUTLINED_FUNCTION_14_0(v10);
  }
}

uint64_t sub_2476B9DE0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10_0(a1);
  if (!v1)
    OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476B9E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_122(v3);
  if (!v1)
    *(_QWORD *)(v2 + 224) = v0;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

#error "2476B9EB0: call analysis failed (funcsize=17)"

uint64_t sub_2476B9EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50();
  if (!v1)
    *(_QWORD *)(v2 + 216) = a1;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476B9F08()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_47();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_138();
  return OUTLINED_FUNCTION_20_0(v0);
}

uint64_t sub_2476B9F34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_69(*(_QWORD *)(v0 + 216), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476B9F64()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_160();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476B9F8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_69(*(_QWORD *)(v0 + 224), *(uint64_t (**)(void))(v0 + 8));
}

void sub_2476B9FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[5];
  _BYTE v10[5];

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_80();
  if ((OUTLINED_FUNCTION_57() & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    v0 = OUTLINED_FUNCTION_132();
    if ((OUTLINED_FUNCTION_16_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, *(int *)v9, v9[4], *(int *)v10, v10[4]) & 1) != 0)
      OUTLINED_FUNCTION_91();
  }
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BA028()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_146();
  return v0();
}

uint64_t sub_2476BA040()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_83();
  *(_QWORD *)(v1 + 248) = v0;
  if (!v0)
    OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476BA090()
{
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_58();
  OUTLINED_FUNCTION_35_0();
}

uint64_t sub_2476BA0B4()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_32_0(0, *(uint64_t (**)(void))(v0 + 8));
}

void sub_2476BA0C8()
{
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BA0F0()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BA104()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476BA118()
{
  uint64_t v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_6_1();
  if (v2)
  {
    if (v2 == 1)
    {
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_79();
      v3 = (_QWORD *)OUTLINED_FUNCTION_102();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = OUTLINED_FUNCTION_34_0(v3, (uint64_t)sub_2476BA1E8);
      return OUTLINED_FUNCTION_13_0(v4, v5, v6, v7);
    }
    else
    {
      v11 = OUTLINED_FUNCTION_117();
      return OUTLINED_FUNCTION_86(v11, v12, v13);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_0(v1);
    OUTLINED_FUNCTION_30_0();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    v10 = OUTLINED_FUNCTION_95(v9, (uint64_t)sub_2476BA1A4);
    return OUTLINED_FUNCTION_14_0(v10);
  }
}

uint64_t sub_2476BA1A4(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10_0(a1);
  if (!v1)
    OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BA1E8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_78();
  if (!v1)
  {
    *(_BYTE *)(v3 + 99) = v0;
    *(_QWORD *)(v3 + 224) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

#error "2476BA278: call analysis failed (funcsize=17)"

uint64_t sub_2476BA284()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_77();
  if (!v1)
  {
    *(_BYTE *)(v3 + 98) = v0;
    *(_QWORD *)(v3 + 216) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

void sub_2476BA2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[5];
  _BYTE v10[5];

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_80();
  if ((OUTLINED_FUNCTION_57() & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    v0 = OUTLINED_FUNCTION_132();
    if ((OUTLINED_FUNCTION_16_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, *(int *)v9, v9[4], *(int *)v10, v10[4]) & 1) != 0)
      OUTLINED_FUNCTION_91();
  }
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BA340()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_146();
  return OUTLINED_FUNCTION_68(v0);
}

uint64_t sub_2476BA350()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_83();
  *(_QWORD *)(v1 + 248) = v0;
  if (!v0)
    OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476BA3A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476BA3B4()
{
  uint64_t v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_6_1();
  if (v2)
  {
    if (v2 == 1)
    {
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_79();
      v3 = (_QWORD *)OUTLINED_FUNCTION_102();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = OUTLINED_FUNCTION_34_0(v3, (uint64_t)sub_2476BA484);
      return OUTLINED_FUNCTION_13_0(v4, v5, v6, v7);
    }
    else
    {
      v11 = OUTLINED_FUNCTION_117();
      return OUTLINED_FUNCTION_86(v11, v12, v13);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_0(v1);
    OUTLINED_FUNCTION_30_0();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    v10 = OUTLINED_FUNCTION_95(v9, (uint64_t)sub_2476BA440);
    return OUTLINED_FUNCTION_14_0(v10);
  }
}

uint64_t sub_2476BA440(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10_0(a1);
  if (!v1)
    OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BA484()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_78();
  if (!v1)
  {
    *(_BYTE *)(v3 + 99) = v0;
    *(_QWORD *)(v3 + 224) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

#error "2476BA514: call analysis failed (funcsize=17)"

uint64_t sub_2476BA520()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_77();
  if (!v1)
  {
    *(_BYTE *)(v3 + 98) = v0;
    *(_QWORD *)(v3 + 216) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BA570()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_47();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_138();
  return OUTLINED_FUNCTION_68(v0);
}

uint64_t sub_2476BA5A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_116(*(_QWORD *)(v0 + 216), *(_BYTE *)(v0 + 98) & 1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BA5DC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_160();
  return v0();
}

uint64_t sub_2476BA60C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_116(*(_QWORD *)(v0 + 224), *(_BYTE *)(v0 + 99) & 1, *(uint64_t (**)(void))(v0 + 8));
}

void sub_2476BA644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[5];
  _BYTE v10[5];

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_80();
  if ((OUTLINED_FUNCTION_57() & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    v0 = OUTLINED_FUNCTION_132();
    if ((OUTLINED_FUNCTION_16_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, *(int *)v9, v9[4], *(int *)v10, v10[4]) & 1) != 0)
      OUTLINED_FUNCTION_91();
  }
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BA6B0()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_146();
  return OUTLINED_FUNCTION_68(v0);
}

uint64_t sub_2476BA6C0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_83();
  *(_QWORD *)(v1 + 248) = v0;
  if (!v0)
    OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476BA710()
{
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_58();
  OUTLINED_FUNCTION_35_0();
}

uint64_t sub_2476BA734()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = OUTLINED_FUNCTION_117();
  return v1(v0);
}

void sub_2476BA748()
{
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BA770()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476BA788()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476BA79C()
{
  uint64_t v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_6_1();
  if (v2)
  {
    if (v2 == 1)
    {
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_79();
      v3 = (_QWORD *)OUTLINED_FUNCTION_102();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = OUTLINED_FUNCTION_34_0(v3, (uint64_t)sub_2476BA880);
      return OUTLINED_FUNCTION_13_0(v4, v5, v6, v7);
    }
    else
    {
      v11 = OUTLINED_FUNCTION_127();
      return v12(v11);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_0(v1);
    OUTLINED_FUNCTION_30_0();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    v10 = OUTLINED_FUNCTION_95(v9, (uint64_t)sub_2476BA83C);
    return OUTLINED_FUNCTION_14_0(v10);
  }
}

uint64_t sub_2476BA83C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10_0(a1);
  if (!v1)
    OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BA880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_140(v6);
  *(_QWORD *)(v5 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_BYTE *)(v5 + 99) = v3;
    *(_QWORD *)(v5 + 240) = v2;
    *(_QWORD *)(v5 + 248) = v0;
    *(_QWORD *)(v5 + 256) = v4;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

#error "2476BA92C: call analysis failed (funcsize=17)"

uint64_t sub_2476BA938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_140(v6);
  *(_QWORD *)(v5 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_BYTE *)(v5 + 98) = v3;
    *(_QWORD *)(v5 + 216) = v2;
    *(_QWORD *)(v5 + 224) = v0;
    *(_QWORD *)(v5 + 232) = v4;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BA9A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_113(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 216), *(unsigned __int8 *)(v0 + 98), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BA9DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_113(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 240), *(unsigned __int8 *)(v0 + 99), *(uint64_t (**)(void))(v0 + 8));
}

void sub_2476BAA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[5];
  _BYTE v10[5];

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_80();
  if ((OUTLINED_FUNCTION_57() & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    v0 = OUTLINED_FUNCTION_132();
    if ((OUTLINED_FUNCTION_16_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, *(int *)v9, v9[4], *(int *)v10, v10[4]) & 1) != 0)
      OUTLINED_FUNCTION_91();
  }
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BAA94()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_146();
  return OUTLINED_FUNCTION_68(v0);
}

uint64_t sub_2476BAAA4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_83();
  *(_QWORD *)(v1 + 280) = v0;
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476BAAF8()
{
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_58();
  OUTLINED_FUNCTION_35_0();
}

uint64_t sub_2476BAB1C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = OUTLINED_FUNCTION_127();
  return v1(v0);
}

void sub_2476BAB30()
{
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BAB58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476BAB70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476BAB84()
{
  uint64_t v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_6_1();
  if (v2)
  {
    if (v2 == 1)
    {
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_79();
      v3 = (_QWORD *)OUTLINED_FUNCTION_102();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = OUTLINED_FUNCTION_34_0(v3, (uint64_t)sub_2476BAC70);
      return OUTLINED_FUNCTION_13_0(v4, v5, v6, v7);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_0(v1);
    OUTLINED_FUNCTION_30_0();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    v10 = OUTLINED_FUNCTION_95(v9, (uint64_t)sub_2476BAC2C);
    return OUTLINED_FUNCTION_14_0(v10);
  }
}

uint64_t sub_2476BAC2C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10_0(a1);
  if (!v1)
    OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476BAC70(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  OUTLINED_FUNCTION_122(&v6);
  if (!v1)
    *(_BYTE *)(v4 + 99) = a1;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

#error "2476BAD08: call analysis failed (funcsize=17)"

uint64_t sub_2476BAD14(char a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50();
  if (!v1)
    *(_BYTE *)(v2 + 98) = a1;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476BAD60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_69(*(unsigned __int8 *)(v0 + 98), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BAD90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_69(*(unsigned __int8 *)(v0 + 99), *(uint64_t (**)(void))(v0 + 8));
}

void sub_2476BADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[5];
  _BYTE v10[5];

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_80();
  if ((OUTLINED_FUNCTION_57() & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    v0 = OUTLINED_FUNCTION_132();
    if ((OUTLINED_FUNCTION_16_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, *(int *)v9, v9[4], *(int *)v10, v10[4]) & 1) != 0)
      OUTLINED_FUNCTION_91();
  }
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BAE40()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_146();
  return OUTLINED_FUNCTION_68(v0);
}

uint64_t sub_2476BAE50()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_83();
  *(_QWORD *)(v1 + 232) = v0;
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476BAEA4()
{
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_58();
  OUTLINED_FUNCTION_35_0();
}

uint64_t sub_2476BAEC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
}

void sub_2476BAEE4()
{
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476BAF0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476BAF24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2476D0FA0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_2476BAF4C()
{
  unint64_t result;

  result = qword_25444C3A8;
  if (!qword_25444C3A8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25444C3A8);
  }
  return result;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2476BAFB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2476BAFDC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v9 = v2[8];
  v8 = v2[9];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_157(v10);
  *v11 = v3;
  v11[1] = sub_2476BB304;
  return sub_2476B88DC(a1, a2, v9, v8, v5, v6, v7);
}

uint64_t dispatch thunk of SQLExecution.execute(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_142();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_73(v1, (uint64_t)sub_2476BB304);
  return OUTLINED_FUNCTION_56(v2, v3, v4, v5);
}

uint64_t dispatch thunk of SQLExecution.execute(dynamicOnce:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_142();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_73(v1, (uint64_t)sub_2476BB340);
  return OUTLINED_FUNCTION_56(v2, v3, v4, v5);
}

uint64_t dispatch thunk of SQLExecution.execute(dynamicAll:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_142();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_73(v1, (uint64_t)sub_2476BB13C);
  return OUTLINED_FUNCTION_56(v2, v3, v4, v5);
}

uint64_t sub_2476BB13C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_32_0(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of SQLExecution.results(dynamicValues:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_38_0();
  v0 = OUTLINED_FUNCTION_4_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_63(v1);
  return OUTLINED_FUNCTION_54(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of SQLExecution.execute<A>(once:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_109();
  v0 = OUTLINED_FUNCTION_14();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_87(v1);
  return OUTLINED_FUNCTION_15_0(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t dispatch thunk of SQLExecution.execute<A>(all:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_64();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v9 + 16) = v18;
  v19 = OUTLINED_FUNCTION_152(v18, (uint64_t)sub_2476BB340);
  return OUTLINED_FUNCTION_85(v19, v20, v17, v15, v13, v11, a9);
}

uint64_t dispatch thunk of SQLExecution.results<A>(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_109();
  v0 = OUTLINED_FUNCTION_14();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_87(v1);
  return OUTLINED_FUNCTION_15_0(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476BB28C(uint64_t a1)
{
  sub_2476B3E14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

unint64_t sub_2476BB2C0()
{
  unint64_t result;

  result = qword_2576B7F00;
  if (!qword_2576B7F00)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError, &type metadata for SQLError);
    atomic_store(result, (unint64_t *)&qword_2576B7F00);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_6_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 97) = *(_BYTE *)(v1 + 40);
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_2476B3EAC(v4, v3, v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_10_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 168) = a1;
  *(_QWORD *)(v4 + 176) = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1)
{
  return sub_2476C1778(a1);
}

uint64_t OUTLINED_FUNCTION_15_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_16_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, int a12, char a13)
{
  int v13;
  char v14;

  a10 = v13;
  a11 = v14;
  a12 = 17;
  a13 = 14;
  return static SQLError.Code.== infix(_:_:)((uint64_t)&a10);
}

uint64_t OUTLINED_FUNCTION_18_0@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 64) = v1;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = v5;
  *(_BYTE *)(v3 + 96) = a1 & 1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 240) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  return sub_2476B45C0(v0, v1, v2, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  result = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 192) = result;
  *(_QWORD *)(v0 + 200) = v2;
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 208) = v3;
  *(_QWORD *)(v0 + 216) = v4;
  v5 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 224) = v5;
  v6 = *(_BYTE *)(v0 + 120);
  *(_BYTE *)(v0 + 121) = v6;
  *(_QWORD *)(v0 + 16) = result;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  *(_BYTE *)(v0 + 56) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  return sub_2476B3E14(v0, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_2476B3E14(v4, v3, v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_32_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  uint64_t v0;

  return sub_2476B45C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_34_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_35_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 40) = 0x80;
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  uint64_t v0;

  return sub_2476B3EAC(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 97) & 1);
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t (*a1)(void))
{
  return a1();
}

id OUTLINED_FUNCTION_43_0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  *(_QWORD *)(v0 + 104) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_46_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = v1;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 40) = 64;
}

uint64_t OUTLINED_FUNCTION_47()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  return sub_2476B3EAC(v3, v2, v0, v1, v4);
}

uint64_t OUTLINED_FUNCTION_48()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_49(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_52()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_53()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_55(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_58()
{
  uint64_t v0;

  return sub_2476B45C0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void OUTLINED_FUNCTION_59()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_60()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_61@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v2 + a2);
}

uint64_t OUTLINED_FUNCTION_62@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

uint64_t OUTLINED_FUNCTION_63(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_65()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 240) = *(_QWORD *)(v0 + 24);
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_66()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  return sub_2476B3E14(v4, v0, v1, v2, v3);
}

__n128 OUTLINED_FUNCTION_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a2;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a2;
  v5 = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(v2 + 32) = v4;
  *(_BYTE *)(v2 + 48) = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_68(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_69(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_70()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_71()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_73@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_74(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_76()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_77()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 192) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_79()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_80()
{
  return sub_2476BAF4C();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return sub_2476C145C();
}

uint64_t OUTLINED_FUNCTION_85(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_86(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_87(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_90()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void OUTLINED_FUNCTION_91()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_92()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_93()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_95@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_97()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v1;
  result = *(__n128 *)(v0 + 89);
  *(__n128 *)(v0 + 41) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  result = *(__n128 *)a2;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)a2;
  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 72) = v8;
  *(_BYTE *)(v6 + 88) = *(_BYTE *)(a2 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_99(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 200) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v1, v4);
}

uint64_t OUTLINED_FUNCTION_100(uint64_t a1)
{
  return sub_2476B8EC8(a1);
}

uint64_t OUTLINED_FUNCTION_101(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2[21];
  v5 = v2[16];
  v6 = v2[17];
  v2[9] = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1 + 8, v5);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_104(uint64_t a1)
{
  return *(__n128 *)a1;
}

uint64_t OUTLINED_FUNCTION_105()
{
  return sub_24772CCB8();
}

uint64_t OUTLINED_FUNCTION_106@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_107(unsigned __int8 a1@<W8>, __n128 a2@<Q1>)
{
  __n128 *v2;

  v2[2] = a2;
  v2[3].n128_u8[0] = a1;
}

void OUTLINED_FUNCTION_108()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_113(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_116(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_117()
{
  return 0;
}

double OUTLINED_FUNCTION_119@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  a3 = v11;
  a4 = v10;
  a5 = v9;
  a6 = v7;
  a7 = v8;
  *(_QWORD *)&result = sub_2476D0370(v12, (uint64_t)&a3, a1).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_121()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v0, v3);
}

uint64_t OUTLINED_FUNCTION_122@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *a1 = *v3;
  *(_QWORD *)(v2 + 192) = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_123()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_125()
{
  return sub_24772CD00();
}

uint64_t OUTLINED_FUNCTION_126(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_128()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_129@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a2 = a1;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v2;
  *(_BYTE *)(a2 + 40) = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_130()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_131()
{
  return swift_getTupleTypeMetadata();
}

uint64_t OUTLINED_FUNCTION_132()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_133@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *a1 = v4;
  a1[1] = a2;
  return a4;
}

uint64_t OUTLINED_FUNCTION_134@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

uint64_t OUTLINED_FUNCTION_135()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_136(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_137@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  *(_QWORD *)(v1 + 72) = 0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_138()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_139(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(unsigned int *)(*(_QWORD *)(a3 + 32) + 4);
}

void OUTLINED_FUNCTION_140(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void OUTLINED_FUNCTION_141()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_143()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_144()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_146()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_147()
{
  return sub_24772D1A4();
}

uint64_t OUTLINED_FUNCTION_148()
{
  return swift_willThrowTypedImpl();
}

void OUTLINED_FUNCTION_149()
{
  JUMPOUT(0x24958109CLL);
}

void OUTLINED_FUNCTION_151()
{
  JUMPOUT(0x249581090);
}

uint64_t OUTLINED_FUNCTION_152@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_153()
{
  return sub_2476BF07C();
}

uint64_t OUTLINED_FUNCTION_154(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_155(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_156(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_157(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return swift_task_alloc();
}

__n128 OUTLINED_FUNCTION_159(uint64_t a1)
{
  return *(__n128 *)a1;
}

uint64_t OUTLINED_FUNCTION_160()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_161()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_162@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_164()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_165(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_166()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8 * v1) = v0;
}

uint64_t OUTLINED_FUNCTION_167()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8 * v1) = v0;
}

uint64_t OUTLINED_FUNCTION_169()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 288);
}

uint64_t NSProcessInfo.isDebugging.getter(uint64_t a1)
{
  int *v1;
  size_t v3;
  _BYTE v4[37];
  uint64_t v5;
  int v6;
  __int128 v7;
  __int128 v8;
  int v9;
  __int128 v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  uint64_t v20;
  int v21;
  __int128 v22;
  _BYTE v23[28];
  __int128 v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[28];
  uint64_t v33;
  __int16 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  int v42;
  __int128 v43;
  __int128 v44;
  __int16 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int16 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v6 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v20 = 0;
  v21 = 0;
  v33 = 0;
  v34 = 0;
  v46 = 0;
  v39 = 0;
  OUTLINED_FUNCTION_17_0(a1, &qword_2576B7F08);
  v7 = 0u;
  v8 = 0u;
  v9 = 0;
  v10 = 0u;
  v11 = 0u;
  v12 = 0;
  v17 = 0;
  v18 = 0u;
  v22 = 0u;
  memset(v23, 0, sizeof(v23));
  v24 = 0u;
  v19 = 0;
  v25 = 0;
  v31 = 0u;
  memset(v32, 0, sizeof(v32));
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v26 = 0u;
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v40 = 0u;
  v41 = 0;
  v42 = 0;
  v43 = 0u;
  v44 = 0u;
  v45 = 0;
  v47 = 0u;
  v48 = 0;
  v49 = 0;
  v50 = 0u;
  v51 = 0u;
  v1 = (int *)swift_allocObject();
  *((_QWORD *)v1 + 4) = 0xE00000001;
  v1[10] = 1;
  v1[11] = getpid();
  v3 = 648;
  sysctl(v1 + 8, 4u, v4, &v3, 0, 0);
  swift_setDeallocating();
  swift_deallocClassInstance();
  return (*(_DWORD *)&v4[32] >> 11) & 1;
}

double static NSProcessInfo.kernelBootTime.getter()
{
  int v0;
  double result;
  BOOL v2;
  size_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v5 = 0;
  v3 = 16;
  v4 = 0;
  v0 = sysctlbyname("kern.boottime", &v4, &v3, 0, 0);
  result = 0.0;
  if (v0)
    v2 = 0;
  else
    v2 = v3 == 16;
  if (v2 && v5 >= 1)
    return (double)v5 / 1000000.0 + (double)v4;
  return result;
}

uint64_t KernelError.code.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t KernelError.code.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*KernelError.code.modify())(void)
{
  return nullsub_1;
}

void KernelError.message.getter()
{
  sub_24772C91C();
  OUTLINED_FUNCTION_35();
}

void KernelError.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_44();
}

uint64_t (*KernelError.message.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.currentPriority.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t NSThread.ThreadInfo.currentPriority.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.currentPriority.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.priority.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t NSThread.ThreadInfo.priority.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.priority.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.maximumPriority.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t NSThread.ThreadInfo.maximumPriority.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.maximumPriority.modify())(void)
{
  return nullsub_1;
}

void NSThread.ThreadInfo.name.getter()
{
  sub_24772C91C();
  OUTLINED_FUNCTION_35();
}

void NSThread.ThreadInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_44();
}

uint64_t (*NSThread.ThreadInfo.name.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _opaque_pthread_t *v6;
  thread_inspect_t v7;
  kern_return_t v8;
  kern_return_t v9;
  uint64_t v10;
  uint64_t result;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  integer_t thread_info_out[4];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  mach_msg_type_number_t thread_info_outCnt[6];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v2 = sub_24772D648();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)thread_info_out - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  *(_OWORD *)thread_info_out = 0u;
  thread_info_outCnt[0] = 28;
  v6 = pthread_self();
  v7 = pthread_mach_thread_np(v6);
  v8 = thread_info(v7, 5u, thread_info_out, thread_info_outCnt);
  if (v8)
  {
    v9 = v8;
    sub_2476BC524();
    swift_allocError();
    *(_DWORD *)v10 = v9;
    *(_QWORD *)(v10 + 8) = 0xD00000000000001BLL;
    *(_QWORD *)(v10 + 16) = 0x8000000247734A70;
    return swift_willThrow();
  }
  else
  {
    v30 = sub_2476BC560();
    v12 = (_OWORD *)swift_allocObject();
    *(_QWORD *)thread_info_outCnt = v12;
    v13 = v26;
    v12[1] = v25;
    v12[2] = v13;
    v14 = v28;
    v12[3] = v27;
    v12[4] = v14;
    sub_24772D630();
    sub_24772D63C();
    v15 = sub_2476BC6DC();
    swift_release();
    sub_2476BC764(v15);
    v17 = v16;
    v19 = v18;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v20 = HIDWORD(v24);
    *(_QWORD *)a1 = *(_QWORD *)((char *)&v24 + 4);
    *(_DWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v19;
  }
  return result;
}

unint64_t sub_2476BC524()
{
  unint64_t result;

  result = qword_2576B7F10;
  if (!qword_2576B7F10)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for KernelError, &type metadata for KernelError);
    atomic_store(result, (unint64_t *)&qword_2576B7F10);
  }
  return result;
}

uint64_t sub_2476BC560()
{
  uint64_t v0;
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  v0 = qword_2576B7F18;
  if (!qword_2576B7F18)
  {
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v0 = TupleTypeMetadata;
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_2576B7F18);
  }
  return v0;
}

uint64_t sub_2476BC648()
{
  return swift_deallocObject();
}

uint64_t sub_2476BC658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v4;
  _BYTE v5[32];

  sub_2476B5E0C(a3, (uint64_t)v5);
  swift_dynamicCast();
  return v4;
}

uint64_t sub_2476BC6A4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2476BC658(*a1, a1[1], (uint64_t)(a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_2476BC6DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_24772D2E8();
  if (v0)
  {
    sub_2476BAF4C();
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

void sub_2476BC764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    if (!*(_BYTE *)(a1 + 32))
    {
LABEL_6:
      sub_24772CAA8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44();
      return;
    }
    v2 = 0;
    v3 = v1 - 1;
    while (v3 != v2)
    {
      if (!*(unsigned __int8 *)(a1 + 33 + v2++))
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t waitForDebugger(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_24772CD9C();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = OUTLINED_FUNCTION_28();
  v4 = sub_24772C7D8();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = OUTLINED_FUNCTION_28();
  v5 = sub_24772C7F0();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = OUTLINED_FUNCTION_28();
  sub_2476BDA54(0, &qword_2576B7F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2[20] = OUTLINED_FUNCTION_28();
  v6 = OUTLINED_FUNCTION_26_1();
  v2[21] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[22] = v7;
  v2[23] = *(_QWORD *)(v7 + 64);
  v2[24] = OUTLINED_FUNCTION_20_1();
  v2[25] = OUTLINED_FUNCTION_20_1();
  v8 = OUTLINED_FUNCTION_25_1();
  v2[26] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[27] = v9;
  v2[28] = *(_QWORD *)(v9 + 64);
  v2[29] = OUTLINED_FUNCTION_20_1();
  v2[30] = OUTLINED_FUNCTION_20_1();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476BC8EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  FILE *v22;
  void (__cdecl *v23)(int);
  void (__cdecl *v24)(int);
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0[29];
  v2 = v0[30];
  v3 = v0[27];
  v5 = v0[25];
  v4 = v0[26];
  v6 = v0[24];
  v29 = v1;
  v30 = v0[23];
  v7 = v0[21];
  v8 = v0[22];
  v9 = v0[20];
  v31 = v0[28];
  v33 = v0[9];
  v35 = v0[10];
  sub_24772D2C4();
  sub_24772D288();
  v10 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (v30 + *(unsigned __int8 *)(v3 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v13 + v11, v6, v7);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v13 + v12, v29, v4);
  v14 = (_QWORD *)(v13 + ((v31 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v14 = v33;
  v14[1] = v35;
  sub_2476BD3CC();
  v16 = v15;
  v0[31] = v15;
  v17 = OUTLINED_FUNCTION_33_1();
  LODWORD(v9) = v17;
  OUTLINED_FUNCTION_17_0(v17, (unint64_t *)&qword_2576B7F40);
  v18 = OUTLINED_FUNCTION_15_1();
  *(_OWORD *)(v18 + 16) = xmmword_24772E730;
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  if ((_DWORD)v9 == 1)
  {
    v19 = v0[19];
    v20 = v0[16];
    v34 = v0[18];
    v36 = v0[17];
    v21 = v0[15];
    v32 = v0[14];
    *(_QWORD *)(v18 + 32) = 0x1000000000000028;
    *(_QWORD *)(v18 + 40) = 0x8000000247734AB0;
    sub_24772D5F4();
    OUTLINED_FUNCTION_132();
    v22 = (FILE *)sub_24772C7B4();
    fflush(v22);
    v23 = (void (__cdecl *)(int))sub_24772C7CC();
    v24 = OUTLINED_FUNCTION_24_1((uint64_t)v23, v23);
    sub_2476BD4D4();
    v25 = sub_24772CFC4();
    swift_getObjectType();
    v0[2] = MEMORY[0x24BDAC760];
    v0[6] = sub_2476BD618;
    v0[7] = v16;
    v0[3] = 1107296256;
    v0[4] = sub_2476BD620;
    v0[5] = &block_descriptor;
    v26 = _Block_copy(v0 + 2);
    OUTLINED_FUNCTION_18_1();
    swift_retain();
    sub_24772C7E4();
    sub_2476BD664();
    sub_24772CFD0();
    _Block_release(v26);
    OUTLINED_FUNCTION_8_1();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v32);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v19, v36);
    swift_release();
    OUTLINED_FUNCTION_18_1();
    sub_24772CFE8();
    OUTLINED_FUNCTION_8_1();
  }
  else
  {
    *(_QWORD *)(v18 + 32) = 0x1000000000000017;
    *(_QWORD *)(v18 + 40) = 0x8000000247734A90;
    sub_24772D5F4();
    OUTLINED_FUNCTION_132();
    v24 = 0;
    v25 = 0;
  }
  v0[32] = v24;
  v0[33] = v25;
  v27 = (_QWORD *)swift_task_alloc();
  v0[34] = v27;
  v0[35] = sub_2476BAF4C();
  *v27 = v0;
  v27[1] = sub_2476BCC7C;
  return sub_24772CE68();
}

uint64_t sub_2476BCC7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476BCCD8()
{
  uint64_t v0;
  uint64_t v1;
  void (__cdecl *v2)(int);
  void (__cdecl *v3)(int);
  __n128 *v4;
  FILE *v5;

  if (*(_QWORD *)(v0 + 264))
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_18_1();
    sub_24772CFDC();
    OUTLINED_FUNCTION_8_1();
  }
  v1 = OUTLINED_FUNCTION_33_1();
  if ((_DWORD)v1 == 1)
  {
    v2 = *(void (__cdecl **)(int))(v0 + 256);
    if (!v2)
    {
      v1 = sub_24772C7C0();
      v2 = (void (__cdecl *)(int))v1;
    }
    v3 = OUTLINED_FUNCTION_24_1(v1, v2);
    OUTLINED_FUNCTION_17_0((uint64_t)v3, (unint64_t *)&qword_2576B7F40);
    v4 = (__n128 *)OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_1_2(v4, MEMORY[0x24BEE0D00], (__n128)xmmword_24772E730);
    OUTLINED_FUNCTION_132();
    v5 = (FILE *)sub_24772C7B4();
    fflush(v5);
  }
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_8_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BCDDC()
{
  uint64_t v0;
  uint64_t v1;
  void (__cdecl *v2)(int);
  void (__cdecl *v3)(int);
  __n128 *v4;
  FILE *v5;
  uint64_t result;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 288);
  if ((swift_dynamicCast() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    MEMORY[0x2495821C4](*(_QWORD *)(v0 + 64));
    if (*(_QWORD *)(v0 + 264))
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_18_1();
      sub_24772CFDC();
      OUTLINED_FUNCTION_8_1();
    }
    v1 = OUTLINED_FUNCTION_33_1();
    if ((_DWORD)v1 == 1)
    {
      v2 = *(void (__cdecl **)(int))(v0 + 256);
      if (!v2)
      {
        v1 = sub_24772C7C0();
        v2 = (void (__cdecl *)(int))v1;
      }
      v3 = OUTLINED_FUNCTION_24_1(v1, v2);
      OUTLINED_FUNCTION_17_0((uint64_t)v3, (unint64_t *)&qword_2576B7F40);
      v4 = (__n128 *)OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_1_2(v4, MEMORY[0x24BEE0D00], (__n128)xmmword_24772E730);
      OUTLINED_FUNCTION_132();
      v5 = (FILE *)sub_24772C7B4();
      fflush(v5);
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_8_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_3_3(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    result = MEMORY[0x2495821C4](*(_QWORD *)(v0 + 64));
    __break(1u);
  }
  return result;
}

uint64_t sub_2476BCF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_24772D2B8();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2476BCFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  id v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  sub_24772D288();
  OUTLINED_FUNCTION_30_1();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 80) = v4;
  v4(v1, v2);
  if ((OUTLINED_FUNCTION_14_1() & 1) != 0)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v6 = NSProcessInfo.isDebugging.getter((uint64_t)v5);

    if ((v6 & 1) == 0)
    {
      OUTLINED_FUNCTION_9_1();
      OUTLINED_FUNCTION_7_1();
    }
  }
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_4_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BD054()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_29_1();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  OUTLINED_FUNCTION_6_2(v1, (uint64_t)sub_2476BD080);
  return OUTLINED_FUNCTION_5_2();
}

uint64_t sub_2476BD080()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 80))(*(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 48));
  return swift_task_switch();
}

uint64_t sub_2476BD0F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  id v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  sub_24772D288();
  OUTLINED_FUNCTION_30_1();
  v2(v1, v3);
  if ((OUTLINED_FUNCTION_14_1() & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v5 = NSProcessInfo.isDebugging.getter((uint64_t)v4);

    if ((v5 & 1) == 0)
    {
      OUTLINED_FUNCTION_9_1();
      OUTLINED_FUNCTION_7_1();
    }
  }
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_4_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BD1A0()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_29_1();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  OUTLINED_FUNCTION_6_2(v1, (uint64_t)sub_2476BD080);
  return OUTLINED_FUNCTION_5_2();
}

uint64_t sub_2476BD1CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476BD1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = OUTLINED_FUNCTION_26_1();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = OUTLINED_FUNCTION_25_1();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2476BD2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_26_1() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_25_1() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = (uint64_t *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v14 = *v13;
  v15 = v13[1];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_2476BD38C;
  return sub_2476BCF2C(a1, v9, v10, v11, v12, v14, v15);
}

uint64_t sub_2476BD38C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v2 + 8));
}

void sub_2476BD3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_35_1(v2);
  if (v3)
  {
    sub_2476BD9C0(v1);
  }
  else
  {
    sub_24772CDE4();
    OUTLINED_FUNCTION_13_1();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_10_1();
}

void sub_2476BD494(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_24772D48C();
    if (!v4)
      atomic_store(v3, a2);
  }
  OUTLINED_FUNCTION_35();
}

unint64_t sub_2476BD4D4()
{
  unint64_t result;

  result = qword_2576B7F48;
  if (!qword_2576B7F48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B7F48);
  }
  return result;
}

void sub_2476BD510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_35_1(v2);
  if (v3)
  {
    sub_2476BD9C0(v1);
  }
  else
  {
    sub_24772CDE4();
    OUTLINED_FUNCTION_13_1();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  type metadata accessor for SQLDatabase(0);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_10_1();
}

uint64_t sub_2476BD5D8()
{
  sub_2476BAF4C();
  return sub_24772CE74();
}

uint64_t sub_2476BD618()
{
  return sub_2476BD5D8();
}

uint64_t sub_2476BD620(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2476BD664()
{
  uint64_t (*v0)(uint64_t);

  sub_24772C7D8();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2476BDA14();
  sub_2476BDA54(0, &qword_2576B7F58, v0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2476BDAA4();
  return sub_24772D0FC();
}

uint64_t destroy for KernelError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15SonicFoundation11KernelErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for KernelError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KernelError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KernelError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KernelError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KernelError()
{
  return &type metadata for KernelError;
}

uint64_t _s10ThreadInfoVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10ThreadInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  sub_24772C91C();
  return a1;
}

uint64_t _s10ThreadInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s10ThreadInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10ThreadInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10ThreadInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NSThread.ThreadInfo()
{
  return &type metadata for NSThread.ThreadInfo;
}

uint64_t sub_2476BD9C0(uint64_t a1)
{
  uint64_t v2;

  sub_2476BDA54(0, &qword_2576B7F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2476BDA14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B7F50;
  if (!qword_2576B7F50)
  {
    v1 = sub_24772C7D8();
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2576B7F50);
  }
  return result;
}

void sub_2476BDA54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_44();
}

unint64_t sub_2476BDAA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B7F60;
  if (!qword_2576B7F60)
  {
    sub_2476BDA54(255, &qword_2576B7F58, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2576B7F60);
  }
  return result;
}

_QWORD *sub_2476BDAFC@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (v2)
    return (_QWORD *)swift_allocError();
  *a2 = v5;
  return result;
}

_QWORD *sub_2476BDB5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2476BDAFC(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_2@<X0>(__n128 *a1@<X0>, unint64_t a2@<X8>, __n128 a3@<Q0>)
{
  a1[1] = a3;
  a1[3].n128_u64[1] = a2;
  a1[2].n128_u64[0] = 0x4B325B1B0DLL;
  a1[2].n128_u64[1] = 0xE500000000000000;
  return sub_24772D5F4();
}

uint64_t OUTLINED_FUNCTION_3_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_24772D294();
}

uint64_t OUTLINED_FUNCTION_6_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 64);
}

void OUTLINED_FUNCTION_7_1()
{
  JUMPOUT(0x24958160CLL);
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_24772D288();
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_24772D6C0();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_24772CDF0();
}

void OUTLINED_FUNCTION_17_0(uint64_t a1, unint64_t *a2)
{
  sub_2476BD494(0, a2);
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_task_create();
}

void (__cdecl *OUTLINED_FUNCTION_24_1(uint64_t a1, void (__cdecl *a2)(int)))(int)
{
  return signal(2, a2);
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return sub_24772D2D0();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_24772D2B8();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return sub_24772D2AC();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return isatty(0);
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_35_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

Swift::String_optional __swiftcall String.init(fourChar:)(Swift::UInt32 fourChar)
{
  unsigned int v1;
  uint64_t inited;
  void *v3;
  Swift::String_optional result;

  v1 = bswap32(fourChar);
  sub_2476BDE18();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24772E7C0;
  if ((v1 & 0x80) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_BYTE *)(inited + 32) = v1;
  if ((v1 & 0x8000) != 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(_BYTE *)(inited + 33) = BYTE1(v1);
  if ((v1 & 0x800000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(_BYTE *)(inited + 34) = BYTE2(v1);
  if ((v1 & 0x80000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_BYTE *)(inited + 35) = HIBYTE(v1);
  *(_BYTE *)(inited + 36) = 0;
  sub_2476BC764(inited);
LABEL_10:
  result.value._object = v3;
  result.value._countAndFlagsBits = inited;
  return result;
}

void sub_2476BDE18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7F68)
  {
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7F68);
  }
}

unint64_t String.fourChar.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unint64_t result;
  _QWORD v16[2];

  v4 = sub_24772CA48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_24772CACC() > 4
    || (v16[0] = a1,
        v16[1] = a2,
        sub_24772CA3C(),
        sub_2476B5B30(),
        v8 = sub_24772D090(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        !v8))
  {
    v14 = 0;
    v13 = 1;
    goto LABEL_10;
  }
  if (*(_QWORD *)(v8 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v9 = *(char *)(v8 + 35);
    if ((v9 & 0x80000000) == 0)
    {
      v10 = *(char *)(v8 + 34);
      if ((v10 & 0x80000000) == 0)
      {
        v11 = *(char *)(v8 + 33);
        if ((v11 & 0x80000000) == 0)
        {
          v12 = *(char *)(v8 + 32);
          OUTLINED_FUNCTION_132();
          if ((v12 & 0x80000000) == 0)
          {
            v13 = 0;
            v14 = v9 | ((unint64_t)v10 << 8) | ((unint64_t)v11 << 16) | ((unint64_t)v12 << 24);
LABEL_10:
            LOBYTE(v16[0]) = v13;
            return v14 | ((unint64_t)v13 << 32);
          }
        }
      }
    }
  }
  result = sub_24772D348();
  __break(1u);
  return result;
}

BOOL static String.PaddingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t String.PaddingMode.hash(into:)()
{
  return OUTLINED_FUNCTION_7_2();
}

void String.PaddingMode.hashValue.getter()
{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

uint64_t sub_2476BE048()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

uint64_t String.pad(_:to:with:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t result;
  BOOL v5;

  result = OUTLINED_FUNCTION_3_4();
  v5 = __OFSUB__(a2, result);
  if ((v2 & 1) != 0)
  {
    if (!v5)
    {
      OUTLINED_FUNCTION_13_2();
      OUTLINED_FUNCTION_5_3();
    }
    __break(1u);
  }
  else if (!v5)
  {
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_5_3();
  }
  __break(1u);
  return result;
}

BOOL static String.TruncationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t String.TruncationMode.hash(into:)()
{
  return OUTLINED_FUNCTION_7_2();
}

void String.TruncationMode.hashValue.getter()
{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

uint64_t String.truncated(_:to:indicator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (OUTLINED_FUNCTION_3_4() <= a2)
  {
    OUTLINED_FUNCTION_2_2();
    return a5;
  }
  if (!v5)
  {
    OUTLINED_FUNCTION_2_2();
    v12 = OUTLINED_FUNCTION_1_3();
    v13 = __OFSUB__(a2, v12);
    result = a2 - v12;
    if (!v13)
    {
      OUTLINED_FUNCTION_10_2(result);
      sub_2476BE574();
      sub_24772C91C();
      sub_24772CAF0();
      swift_bridgeObjectRelease();
      return a3;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
    result = OUTLINED_FUNCTION_1_3();
    if (!__OFSUB__(a2, result))
    {
      v10 = ((a2 - result) / 2) & ~(((a2 - result) / 2) >> 63);
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_11_1(v10);
      v11 = MEMORY[0x249580DF0]();
      OUTLINED_FUNCTION_132();
      sub_24772C91C();
      sub_24772CAFC();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_10_2(v10);
      MEMORY[0x249580DF0]();
      swift_bridgeObjectRelease();
      sub_24772C91C();
      sub_24772CAFC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_2_2();
  v14 = OUTLINED_FUNCTION_1_3();
  v13 = __OFSUB__(a2, v14);
  result = a2 - v14;
  if (!v13)
  {
    OUTLINED_FUNCTION_11_1(result);
    a5 = sub_2476BE494();
    OUTLINED_FUNCTION_132();
    return a5;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_2476BE37C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = OUTLINED_FUNCTION_8_2();
    if ((v5 & 1) != 0)
      v4 = 15;
    if (4 * v3 >= v4 >> 14)
    {
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_15_2();
      OUTLINED_FUNCTION_11();
      return;
    }
  }
  __break(1u);
}

void sub_2476BE414(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_11();
  }
}

uint64_t sub_2476BE494()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v0 = sub_24772CACC();
  v1 = sub_24772D030();
  v2 = __OFADD__(v0, v1);
  result = v0 + v1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x249580E08](result);
    sub_2476BE574();
    sub_24772CAF0();
    sub_24772CAF0();
    return 0;
  }
  return result;
}

unint64_t sub_2476BE574()
{
  unint64_t result;

  result = qword_2576B7F70;
  if (!qword_2576B7F70)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2576B7F70);
  }
  return result;
}

unint64_t sub_2476BE5B4()
{
  unint64_t result;

  result = qword_2576B7F78;
  if (!qword_2576B7F78)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for String.PaddingMode, &type metadata for String.PaddingMode);
    atomic_store(result, (unint64_t *)&qword_2576B7F78);
  }
  return result;
}

unint64_t sub_2476BE5F4()
{
  unint64_t result;

  result = qword_2576B7F80[0];
  if (!qword_2576B7F80[0])
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for String.TruncationMode, &type metadata for String.TruncationMode);
    atomic_store(result, qword_2576B7F80);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s11PaddingModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s11PaddingModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2476BE710 + 4 * byte_24772E7D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2476BE744 + 4 * byte_24772E7D0[v4]))();
}

uint64_t sub_2476BE744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476BE74C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476BE754);
  return result;
}

uint64_t sub_2476BE760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476BE768);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2476BE76C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476BE774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476BE780(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2476BE788(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for String.PaddingMode()
{
  return &type metadata for String.PaddingMode;
}

uint64_t _s14TruncationModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14TruncationModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2476BE878 + 4 * byte_24772E7DF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2476BE8AC + 4 * byte_24772E7DA[v4]))();
}

uint64_t sub_2476BE8AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476BE8B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476BE8BCLL);
  return result;
}

uint64_t sub_2476BE8C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476BE8D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2476BE8D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476BE8DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2476BE8E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for String.TruncationMode()
{
  return &type metadata for String.TruncationMode;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return sub_24772CACC();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_24772CACC();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return sub_24772D600();
}

void OUTLINED_FUNCTION_5_3()
{
  JUMPOUT(0x249580EE0);
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return sub_24772D60C();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return sub_24772CAD8();
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return sub_24772D60C();
}

void OUTLINED_FUNCTION_10_2(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  sub_2476BE37C(a1, v1, v2);
}

void OUTLINED_FUNCTION_11_1(uint64_t a1)
{
  sub_2476BE414(a1);
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return sub_24772CBA4();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2476BE9D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2476BF020(v3);
  swift_release();
  swift_release();
  result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = 0;
  return result;
}

void LRUDictionary.Iterator.next()()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476BEA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[96];

  v1 = OUTLINED_FUNCTION_0_4();
  v2 = sub_24772D018();
  *(_QWORD *)(v0 - 160) = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 - 152) = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v22[-v3];
  v5 = OUTLINED_FUNCTION_0_4();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v22[-v7];
  v9 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v0 - 144) = &v22[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24772C6F4();
  sub_24772C6E8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v1) == 1)
  {
    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(v4, *(_QWORD *)(v0 - 152));
    v13 = OUTLINED_FUNCTION_0_4();
    v14 = *(_QWORD *)(v0 - 120);
    v15 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_2_3((uint64_t)v8, (uint64_t)v4);
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_2_3((uint64_t)v12, (uint64_t)v8);
    v16 = *(_QWORD *)(v0 - 144);
    OUTLINED_FUNCTION_1_4();
    v17 = *(_QWORD *)(v0 - 128);
    v18 = OUTLINED_FUNCTION_0_4();
    v19 = *(_QWORD *)(v0 - 120);
    v20 = v19 + *(int *)(v18 + 48);
    OUTLINED_FUNCTION_2_3(v19, (uint64_t)v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v20, v16, v17);
    v14 = v19;
    v15 = 0;
    v13 = v18;
  }
  return __swift_storeEnumTagSinglePayload(v14, v15, 1, v13);
}

void LRUDictionary.underestimatedCount.getter()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476BECFC()
{
  return sub_24772D24C();
}

uint64_t LRUDictionary.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v12[6];
  char v13;
  uint64_t v14;
  char v15;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  v12[0] = *(_QWORD *)v1;
  v12[1] = v3;
  v12[2] = v4;
  v12[3] = v5;
  v12[4] = v7;
  v12[5] = v6;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  sub_2476BEE20(v12[0]);
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_2476BE9D4(v12, a1);
}

uint64_t sub_2476BEDA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  LRUDictionary.makeIterator()(a1);
  sub_2476BF020(*v1);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2476BEDF0()
{
  return 2;
}

uint64_t sub_2476BEE00()
{
  return sub_24772CBF8();
}

uint64_t sub_2476BEE20(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_2476BEE30()
{
  JUMPOUT(0x2495822A8);
}

uint64_t sub_2476BEE40()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2476BEE48()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_2476BEE78(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2476BEEC4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t sub_2476BEF40(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_2476BEF94(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476BEFD4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LRUDictionary.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUDictionary.Iterator);
}

uint64_t sub_2476BF020(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x249582248](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2476BF07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  sub_24772CD6C();
  if (*(_DWORD *)(v0 + 88) != 101)
  {
    OUTLINED_FUNCTION_6_3();
    v1 = sqlite3_step(*(sqlite3_stmt **)(v0 + 48));
    *(_DWORD *)(v0 + 88) = v1;
    if ((_DWORD)v1 != 101)
      return v1;
  }
  if (!*(_QWORD *)(v0 + 56))
    return 101;
  v2 = swift_retain();
  v3 = sub_2476BF07C(v2);
  swift_release();
  return v3;
}

uint64_t sub_2476BF168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  OUTLINED_FUNCTION_70_0(a1, &qword_2576B80A8, a3, (uint64_t (*)(uint64_t))sub_2476C3968, MEMORY[0x24BEE7188]);
  swift_allocObject();
  result = sub_24772D708();
  qword_2576C15F0 = result;
  return result;
}

uint64_t sub_2476BF1C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = v6;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = v13;
  *(_DWORD *)(v5 + 88) = 0;
  *(_QWORD *)(v5 + 80) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  v14 = sub_24772CA78();
  v15 = v14 + 32;
  v16 = *(_QWORD *)(v14 + 16);
  swift_retain();
  sub_24772C91C();
  sub_24772C91C();
  sub_2476BF2C0(v15, v16, a1, v5, a2, a3, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
    swift_release();
  swift_release();
  return v5;
}

uint64_t sub_2476BF2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v36 = a7;
  v37 = a8;
  v41[1] = *MEMORY[0x24BDAC8D0];
  v38 = sub_24772C358();
  v15 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v41[0] = 0;
    swift_retain();
    sub_2476EFE90(a3, a1, a1, a2, a4, v41);
    if (v8)
    {
      swift_beginAccess();
      sqlite3_finalize(*(sqlite3_stmt **)(a4 + 48));
      return swift_willThrow();
    }
    else
    {
      v35 = a3;
      if (v41[0])
      {
        v19 = v41[0] - a1;
        if (v19 < sub_24772CACC())
        {
          sub_24772C91C();
          sub_2476BE414(v19);
          v20 = MEMORY[0x249580DF0]();
          v33 = v21;
          v34 = v20;
          swift_bridgeObjectRelease();
          v22 = v33;
          *(_QWORD *)(a4 + 32) = v34;
          *(_QWORD *)(a4 + 40) = v22;
          swift_bridgeObjectRelease();
          if (__OFSUB__(a2, v19))
            __break(1u);
          sub_24772C91C();
          sub_2476BE37C(a2 - v19, a5, a6);
          v23 = MEMORY[0x249580DF0]();
          v25 = v24;
          swift_bridgeObjectRelease();
          v39 = v23;
          v40 = v25;
          sub_24772C34C();
          sub_2476B5B30();
          v26 = sub_24772D078();
          v28 = v27;
          (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v38);
          swift_bridgeObjectRelease();
          v29 = HIBYTE(v28) & 0xF;
          if ((v28 & 0x2000000000000000) == 0)
            v29 = v26 & 0xFFFFFFFFFFFFLL;
          if (v29)
          {
            _s9StatementCMa();
            swift_allocObject();
            v30 = v35;
            swift_retain();
            v31 = v37;
            sub_24772C91C();
            *(_QWORD *)(a4 + 56) = sub_2476BF1C8(v30, v26, v28, v36, v31);
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
      swift_beginAccess();
      result = sqlite3_bind_parameter_count(*(sqlite3_stmt **)(a4 + 48));
      *(_QWORD *)(a4 + 64) = (int)result;
    }
  }
  else
  {
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

sqlite3 *sub_2476BF5C4(sqlite3 *result, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, const char **a6)
{
  int v6;
  sqlite3 *v9;
  sqlite3_stmt **v10;
  uint64_t v11;

  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    if (a4 <= 0x7FFFFFFF)
    {
      v9 = result;
      v10 = (sqlite3_stmt **)(a5 + 48);
      OUTLINED_FUNCTION_6_3();
      v11 = sqlite3_prepare_v3(v9, a2, v6, 1u, v10, a6);
      OUTLINED_FUNCTION_31_1();
      return (sqlite3 *)v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2476BF668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v21 = sub_24772C358();
  result = MEMORY[0x24BDAC7A8](v21);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v28 = *(_QWORD *)(a2 + 24);
  v22 = *(_BYTE *)(a2 + 32);
  if ((v22 & 1) != 0)
  {
    if (!v8)
    {
      __break(1u);
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_56_0();
    v9 = v7;
    v10 = v8;
  }
  else
  {
    OUTLINED_FUNCTION_68_0();
    v9 = v6;
    v10 = v7;
  }
  v23 = v9;
  v24 = v10;
  sub_2476B3E14(v6, v7, v8, v28, v22);
  OUTLINED_FUNCTION_66_0();
  sub_24772C34C();
  sub_2476B5B30();
  v11 = OUTLINED_FUNCTION_44_1();
  v19 = v12;
  OUTLINED_FUNCTION_64_0();
  result = OUTLINED_FUNCTION_41_1();
  v20 = v11;
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_68_0();
    v13 = v6;
    v14 = v7;
    goto LABEL_9;
  }
  if (!v8)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_56_0();
  v13 = v7;
  v14 = v8;
LABEL_9:
  v23 = v13;
  v24 = v14;
  sub_24772C34C();
  v15 = OUTLINED_FUNCTION_44_1();
  v17 = v16;
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_41_1();
  sub_2476B3EAC(v6, v7, v8, v28, v22);
  swift_allocObject();
  v18 = sub_2476BF1C8(a1, v20, v19, v15, v17);
  if (!v2)
  {
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v26 = v28;
    v27 = v22;
    OUTLINED_FUNCTION_39_0();
    sub_2476BF8AC((uint64_t)&v23);
    OUTLINED_FUNCTION_33();
  }
  swift_release();
  OUTLINED_FUNCTION_32_1();
  return v18;
}

uint64_t sub_2476BF8AC(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(unsigned __int8 *)(a1 + 32);
  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  sub_24772CD6C();
  sub_2476BFEB0();
  if (v2 == 1)
    sub_24772C91C();
  else
    v1 = MEMORY[0x24BEE4AF8];
  sub_2476BFF54(v1, 0);
  return swift_bridgeObjectRelease();
}

void sub_2476BF974()
{
  uint64_t v0;
  sqlite3_stmt *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_6_3();
  v1 = *(sqlite3_stmt **)(v0 + 48);
  if (v1)
  {
    sqlite3_finalize(v1);
    *(_QWORD *)(v0 + 48) = 0;
    if (*(_QWORD *)(v0 + 56))
    {
      v2 = OUTLINED_FUNCTION_39_0();
      sub_2476BF974(v2);
      OUTLINED_FUNCTION_33();
    }
  }
  OUTLINED_FUNCTION_28_1();
}

uint64_t sub_2476BFA1C()
{
  char v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_67_0();
  if ((v0 & 1) != 0)
    return 0;
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_67_0();
  if (*(_QWORD *)(v1 + 56))
  {
    v3 = OUTLINED_FUNCTION_39_0();
    sub_2476BFA1C(v3);
    OUTLINED_FUNCTION_33();
  }
  return 1;
}

uint64_t sub_2476BFA94()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = OUTLINED_FUNCTION_6_3();
  if (*(_QWORD *)(v0 + 48))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v2 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 56) = 0;
    if (v2)
    {
      do
      {
        if (!swift_isUniquelyReferenced_native())
          break;
        v3 = *(_QWORD *)(v2 + 56);
        swift_retain();
        OUTLINED_FUNCTION_23();
        v2 = v3;
      }
      while (v3);
    }
    OUTLINED_FUNCTION_23();
    return v0;
  }
  return result;
}

uint64_t sub_2476BFB30()
{
  sub_2476BFA94();
  return swift_deallocClassInstance();
}

uint64_t _s9StatementCMa()
{
  return objc_opt_self();
}

uint64_t sub_2476BFB70(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  char v13;

  v9 = *((_BYTE *)a2 + 16);
  v12 = *a2;
  v13 = v9;
  result = sub_2476BFC18((uint64_t)&v12, a3);
  if (!v6)
  {
    v11 = result;
    swift_beginAccess();
    result = *(_QWORD *)(v5 + 48);
    if (result)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(result, v11, a4, a5);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_2476BFC18(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD v11[5];

  v3 = *(_QWORD *)result;
  if (*(_BYTE *)(result + 16) == 1)
  {
    swift_beginAccess();
    v4 = *(sqlite3_stmt **)(v2 + 48);
    v5 = sub_24772CA78();
    v6 = sqlite3_bind_parameter_index(v4, (const char *)(v5 + 32));
    swift_release();
    if (v6 > 0)
      return v6;
    sub_24772D144();
    swift_bridgeObjectRelease();
    strcpy((char *)v11, "Position name ");
    HIBYTE(v11[1]) = -18;
    sub_24772CAFC();
    sub_24772CAFC();
    v9 = v11[0];
    v8 = v11[1];
    goto LABEL_9;
  }
  v7 = __OFADD__(v3, a2);
  v3 += a2;
  if (!v7)
  {
    if (v3 < 1)
    {
      sub_2476C385C();
      swift_allocError();
      *v10 = 0xD00000000000004ELL;
      v8 = 0x8000000247734CF0;
      goto LABEL_11;
    }
    if (*(_QWORD *)(v2 + 64) >= v3)
      return v3;
    sub_24772D144();
    swift_bridgeObjectRelease();
    v11[2] = 0x6E6F697469736F50;
    v11[3] = 0xEF207865646E6920;
    v11[0] = v3;
    v3 = MEMORY[0x24BEE17D8];
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    v11[0] = *(_QWORD *)(v2 + 64);
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    v9 = 0x6E6F697469736F50;
    v8 = 0xEF207865646E6920;
LABEL_9:
    sub_2476C385C();
    swift_allocError();
    *v10 = v9;
LABEL_11:
    v10[1] = v8;
    swift_willThrow();
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_2476BFE94()
{
  return 0xD000000000000025;
}

void sub_2476BFEB0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_52_0();
  *(_QWORD *)(v0 + 72) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
  {
    v1 = OUTLINED_FUNCTION_39_0();
    sub_2476BFEB0(v1);
    OUTLINED_FUNCTION_33();
  }
  OUTLINED_FUNCTION_6_3();
  sqlite3_clear_bindings(*(sqlite3_stmt **)(v0 + 48));
  OUTLINED_FUNCTION_28_1();
}

uint64_t sub_2476BFF54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  __int128 v25[3];
  char v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[12];
  uint64_t v31;

  v31 = a2;
  v4 = a1;
  v2[9] = a1;
  sub_24772C91C();
  result = swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v4 + 16);
  if (v22)
  {
    v6 = v4;
    v7 = (uint64_t *)(v4 + 32);
    v21 = v6;
    sub_24772C91C();
    v8 = 0;
    while (1)
    {
      sub_2476C37A0(v7, (uint64_t)v30);
      if (v8 == v2[8])
      {
        sub_2476C37DC((uint64_t)v30);
        v4 = v21;
        result = OUTLINED_FUNCTION_41_1();
        goto LABEL_11;
      }
      sub_2476C37A0(v30, (uint64_t)&v23);
      v9 = v23;
      v10 = v24;
      if (v26 == 1)
        swift_release();
      sub_2476B3F20(v25, (uint64_t)v27);
      v11 = v28;
      v12 = v29;
      v13 = __swift_project_boxed_opaque_existential_1(v27, v28);
      v23 = v9;
      v24 = v10;
      sub_2476BFB70((uint64_t)v13, &v23, v31, v11, v12);
      sub_2476C37DC((uint64_t)v30);
      if (v3)
        break;
      ++v8;
      sub_2476C3810(v9, *((uint64_t *)&v9 + 1), v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      v7 += 11;
      if (v22 == v8)
      {
        v4 = v21;
        result = OUTLINED_FUNCTION_41_1();
        v8 = v22;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_2476C3810(v9, *((uint64_t *)&v9 + 1), v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    v8 = 0;
LABEL_11:
    if (v2[7])
    {
      v14 = sub_2476C0140(v8, v4);
      v16 = v15;
      v18 = v17;
      v20 = v19;
      sub_24772C91C();
      OUTLINED_FUNCTION_39_0();
      sub_2476C0174(v14, v16, v18, v20);
      sub_2476BFF54();
      OUTLINED_FUNCTION_33();
      return OUTLINED_FUNCTION_42_1();
    }
  }
  return result;
}

uint64_t sub_2476C0140(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return a2;
  }
  __break(1u);
  return result;
}

size_t sub_2476C0174(size_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  size_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_24772D540();
  swift_unknownObjectRetain_n();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v8 = sub_247703D20(a1, a2, a3, a4);
    goto LABEL_9;
  }
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_2476C0258()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = 0;
  OUTLINED_FUNCTION_6_3();
  result = (uint64_t)sqlite3_expanded_sql(*(sqlite3_stmt **)(v0 + 48));
  if (result)
  {
    result = sub_24772C9E8();
    if (v2)
      v4 = result;
    else
      result = 0;
    if (*(_QWORD *)(v0 + 56))
    {
      v3 = OUTLINED_FUNCTION_79();
      sub_2476C0258(v3);
      sub_24772CAFC();
      OUTLINED_FUNCTION_23();
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476C02F0()
{
  return sub_2476C0330((uint64_t)sub_2476BFE94, 232, (uint64_t (*)(uint64_t))sub_2476C02F0, MEMORY[0x24BEDE038]);
}

uint64_t sub_2476C0310()
{
  return sub_2476C0330((uint64_t)sub_2476BFE94, 240, (uint64_t (*)(uint64_t))sub_2476C0310, MEMORY[0x24BEDE0C0]);
}

uint64_t sub_2476C0330(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), int (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  sub_24772CD6C();
  if (*(_DWORD *)(v4 + 88) == 101 && *(_QWORD *)(v4 + 56))
  {
    v7 = OUTLINED_FUNCTION_39_0();
    v8 = a3(v7);
    OUTLINED_FUNCTION_33();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_6_3();
    return a4(*(_QWORD *)(v4 + 48));
  }
}

uint64_t sub_2476C0408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  sub_24772CD6C();
  if (*(_DWORD *)(v1 + 88) == 101 && *(_QWORD *)(v1 + 56))
  {
    OUTLINED_FUNCTION_39_0();
    v3 = sub_2476C0408(a1);
    OUTLINED_FUNCTION_33();
    return v3;
  }
  result = OUTLINED_FUNCTION_6_3();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  result = (uint64_t)sqlite3_column_name(*(sqlite3_stmt **)(v1 + 48), a1);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  return sub_24772CB08();
}

void sub_2476C0500()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_19_1();
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_52_0();
  *(_DWORD *)(v0 + 88) = 0;
  if (*(_QWORD *)(v0 + 56))
  {
    v1 = OUTLINED_FUNCTION_39_0();
    sub_2476C0500(v1);
    OUTLINED_FUNCTION_33();
  }
  OUTLINED_FUNCTION_6_3();
  sqlite3_reset(*(sqlite3_stmt **)(v0 + 48));
  OUTLINED_FUNCTION_28_1();
}

sqlite3_stmt *sub_2476C0594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X8>)
{
  uint64_t v6;
  sqlite3_stmt *result;

  if (*(_DWORD *)(a1 + 88) == 101 && *(_QWORD *)(a1 + 56))
  {
    v6 = OUTLINED_FUNCTION_25_2();
    sub_2476C0594(v6, a2);
    return (sqlite3_stmt *)swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_6_3();
    result = *(sqlite3_stmt **)(a1 + 48);
    if (result)
      return SQLDynamicValue.init(statement:index:)(a2, result, a3);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_2476C0640(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  if (*(_DWORD *)(v3 + 88) == 101 && *(_QWORD *)(v3 + 56))
  {
    OUTLINED_FUNCTION_36_1();
    sub_2476C0640(a1, a2, a3);
    return OUTLINED_FUNCTION_57_0();
  }
  else
  {
    OUTLINED_FUNCTION_6_3();
    result = *(_QWORD *)(v3 + 48);
    if (result)
      return a1();
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_2476C06F8()
{
  return sub_2476C0258();
}

uint64_t sub_2476C0718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  int v51;
  char v52;
  int v53;
  char v54;

  OUTLINED_FUNCTION_6_3();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
LABEL_12:
    OUTLINED_FUNCTION_6_3();
    v9 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v9 + 64);
    v11 = v9 + 64;
    v10 = v12;
    v13 = 1 << *(_BYTE *)(*(_QWORD *)(v0 + 216) + 32);
    v14 = -1;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    v15 = v14 & v10;
    v16 = (unint64_t)(v13 + 63) >> 6;
    result = OUTLINED_FUNCTION_56_0();
    v17 = 0;
    if (!v15)
      goto LABEL_16;
LABEL_15:
    for (v15 &= v15 - 1; ; v15 = (v19 - 1) & v19)
    {
      OUTLINED_FUNCTION_39_0();
      sub_2476BF974();
      v22 = v21;
      sub_247716788(v21, (uint64_t)&v49);
      if (v50 != 1 && (v50 != 14 || v49 != 16))
        break;
      result = OUTLINED_FUNCTION_33();
      if (v15)
        goto LABEL_15;
LABEL_16:
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        goto LABEL_49;
      if (v18 >= v16)
      {
LABEL_47:
        OUTLINED_FUNCTION_55_0();
        v45 = *(_QWORD *)(v0 + 200);
        v46 = *(_BYTE *)(v0 + 208);
        OUTLINED_FUNCTION_6_3();
        *(_QWORD *)(v0 + 200) = 0;
        *(_BYTE *)(v0 + 208) = 0;
        sub_2476F0AF0();
        *(_QWORD *)(v0 + 200) = v45;
        *(_BYTE *)(v0 + 208) = v46;
        sub_2476F0AF0();
        swift_endAccess();
        OUTLINED_FUNCTION_6_3();
        sub_2476C36B4();
        sub_24772C934();
        return swift_endAccess();
      }
      v19 = *(_QWORD *)(v11 + 8 * v18);
      ++v17;
      if (!v19)
      {
        v17 = v18 + 1;
        if (v18 + 1 >= v16)
          goto LABEL_47;
        v19 = *(_QWORD *)(v11 + 8 * v17);
        if (!v19)
        {
          v17 = v18 + 2;
          if (v18 + 2 >= v16)
            goto LABEL_47;
          v19 = *(_QWORD *)(v11 + 8 * v17);
          if (!v19)
          {
            v17 = v18 + 3;
            if (v18 + 3 >= v16)
              goto LABEL_47;
            v19 = *(_QWORD *)(v11 + 8 * v17);
            if (!v19)
            {
              v20 = v18 + 4;
              if (v20 >= v16)
                goto LABEL_47;
              v19 = *(_QWORD *)(v11 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  v17 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_50;
                  if (v17 >= v16)
                    goto LABEL_47;
                  v19 = *(_QWORD *)(v11 + 8 * v17);
                  ++v20;
                  if (v19)
                    goto LABEL_31;
                }
              }
              v17 = v20;
            }
          }
        }
      }
LABEL_31:
      ;
    }
    OUTLINED_FUNCTION_6_3();
    v24 = sqlite3_extended_errcode(*(sqlite3 **)(v0 + 136));
    result = (uint64_t)sqlite3_errstr(v22);
    if (!result)
      goto LABEL_51;
    v25 = sub_24772CB08();
    v27 = v26;
    result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v0 + 136));
    if (!result)
      goto LABEL_52;
    v28 = sub_24772CB08();
    v30 = v29;
    sub_2476BB2C0();
    OUTLINED_FUNCTION_36();
    v32 = v31;
    sub_247716788(v24, (uint64_t)&v53);
    v33 = v53;
    v34 = v54;
    *(_DWORD *)v32 = v24;
    *(_DWORD *)(v32 + 4) = v33;
    *(_BYTE *)(v32 + 8) = v34;
    *(_QWORD *)(v32 + 16) = v25;
    *(_QWORD *)(v32 + 24) = v27;
    *(_QWORD *)(v32 + 32) = v28;
    *(_QWORD *)(v32 + 40) = v30;
    swift_willThrow();
LABEL_46:
    swift_release();
    return OUTLINED_FUNCTION_55_0();
  }
  swift_retain();
  OUTLINED_FUNCTION_36_1();
  result = OUTLINED_FUNCTION_66_0();
  v4 = 0;
  v5 = 32;
  while (1)
  {
    if (v4 >= *(_QWORD *)(v1 + 16))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    OUTLINED_FUNCTION_39_0();
    sub_2476BF974();
    v7 = v6;
    sub_247716788(v6, (uint64_t)&v51);
    if (v52 != 1 && (v52 != 14 || v51 != 16))
      break;
    ++v4;
    result = OUTLINED_FUNCTION_33();
    v5 += 24;
    if (v2 == v4)
    {
      swift_release();
      OUTLINED_FUNCTION_57_0();
      OUTLINED_FUNCTION_55_0();
      goto LABEL_12;
    }
  }
  OUTLINED_FUNCTION_6_3();
  v35 = sqlite3_extended_errcode(*(sqlite3 **)(v0 + 136));
  result = (uint64_t)sqlite3_errstr(v7);
  if (!result)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v36 = sub_24772CB08();
  v47 = v37;
  v48 = v36;
  result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v0 + 136));
  if (result)
  {
    v38 = sub_24772CB08();
    v40 = v39;
    sub_2476BB2C0();
    OUTLINED_FUNCTION_36();
    v42 = v41;
    sub_247716788(v35, (uint64_t)&v49);
    v43 = v49;
    v44 = v50;
    *(_DWORD *)v42 = v35;
    *(_DWORD *)(v42 + 4) = v43;
    *(_BYTE *)(v42 + 8) = v44;
    *(_QWORD *)(v42 + 16) = v48;
    *(_QWORD *)(v42 + 24) = v47;
    *(_QWORD *)(v42 + 32) = v38;
    *(_QWORD *)(v42 + 40) = v40;
    swift_willThrow();
    OUTLINED_FUNCTION_33();
    swift_release();
    goto LABEL_46;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_2476C0B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(v2 + 200) = v1;
  v4 = sub_24772C358();
  *(_QWORD *)(v2 + 208) = v4;
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 224) = swift_task_alloc();
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 232) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 248) = v5;
  *(_BYTE *)(v2 + 97) = *(_BYTE *)(a1 + 32);
  return OUTLINED_FUNCTION_3_2();
}

void sub_2476C0BB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  __int128 v64;
  __int128 v65;
  char v66;

  v1 = *(_BYTE *)(v0 + 97);
  if ((v1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 248);
    if (!v2)
    {
      __break(1u);
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_68_0();
    v4 = *(_QWORD *)(v0 + 232);
    v3 = *(_QWORD *)(v0 + 240);
    v5 = v3;
    v6 = v2;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 240);
    sub_24772C91C();
    v2 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 232);
    v3 = v4;
    v6 = v5;
  }
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 224);
  v61 = *(_QWORD *)(v0 + 216);
  v62 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 152) = v3;
  *(_QWORD *)(v0 + 160) = v6;
  sub_2476B3E14(v4, v5, v2, v7, v1);
  sub_24772C34C();
  sub_2476B5B30();
  v9 = sub_24772D078();
  v11 = v10;
  v12 = v62;
  v63 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v63(v8, v12);
  swift_bridgeObjectRelease();
  sub_2476B3EAC(v4, v5, v2, v7, v1);
  OUTLINED_FUNCTION_6_3();
  v13 = sub_2476C1218(v9, v11);
  swift_bridgeObjectRelease();
  if (!v13)
  {
    v18 = *(_QWORD *)(v0 + 200);
    swift_endAccess();
    v19 = MEMORY[0x249582458](v18 + 120);
    *(_QWORD *)(v0 + 264) = v19;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v18 + 128);
    if (v19)
    {
      if (*(_BYTE *)(v0 + 97) == 1)
        v20 = sub_24772C91C();
      else
        v20 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v0 + 280) = v20;
      v47 = *(_QWORD *)(v20 + 16);
      *(_QWORD *)(v0 + 288) = v47;
      if (v47)
      {
        v48 = 0;
        do
        {
          OUTLINED_FUNCTION_33_2(v48);
          if ((*(_BYTE *)(v0 + 96) & 1) != 0)
          {
            OUTLINED_FUNCTION_24_2();
            v57 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 312) = v57;
            OUTLINED_FUNCTION_61_0(v57, (uint64_t)sub_2476C1040);
            OUTLINED_FUNCTION_43_1();
            __asm { BR              X2 }
          }
          sub_2476C37DC(v0 + 16);
          OUTLINED_FUNCTION_49_0();
        }
        while (!v49);
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    v50 = *(_BYTE *)(v0 + 97);
    v52 = *(_QWORD *)(v0 + 248);
    v51 = *(_QWORD *)(v0 + 256);
    v54 = *(_QWORD *)(v0 + 232);
    v53 = *(_QWORD *)(v0 + 240);
    _s9StatementCMa();
    *(_QWORD *)&v64 = v54;
    *((_QWORD *)&v64 + 1) = v53;
    *(_QWORD *)&v65 = v52;
    *((_QWORD *)&v65 + 1) = v51;
    v66 = v50;
    OUTLINED_FUNCTION_60_0(v54, v53, v52);
    v55 = OUTLINED_FUNCTION_36_1();
    sub_2476BF668(v55, (uint64_t)&v64);
LABEL_25:
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_43_1();
    __asm { BR              X1 }
  }
  v14 = *(_BYTE *)(v0 + 97);
  swift_endAccess();
  if ((v14 & 1) == 0)
  {
    v21 = *(_QWORD *)(v0 + 240);
    sub_24772C91C();
    v16 = *(_QWORD *)(v0 + 232);
    v17 = v21;
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(v0 + 248);
  if (v15)
  {
    sub_24772C91C();
    v16 = *(_QWORD *)(v0 + 240);
    v17 = v15;
LABEL_13:
    v22 = *(_QWORD *)(v0 + 224);
    v23 = *(_QWORD *)(v0 + 200);
    v59 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 168) = v16;
    *(_QWORD *)(v0 + 176) = v17;
    v24 = OUTLINED_FUNCTION_47_0();
    sub_2476B3E14(v24, v25, v26, v27, v28);
    sub_24772C34C();
    v60 = sub_24772D078();
    v30 = v29;
    v63(v22, v59);
    swift_bridgeObjectRelease();
    v31 = OUTLINED_FUNCTION_47_0();
    sub_2476B3EAC(v31, v32, v33, v34, v35);
    OUTLINED_FUNCTION_6_3();
    v36 = *(_QWORD *)(v23 + 160);
    v37 = *(_QWORD *)(v23 + 168);
    *(_QWORD *)(v0 + 184) = v60;
    *(_QWORD *)(v0 + 192) = v30;
    v38 = (_QWORD *)swift_task_alloc();
    v38[2] = v36;
    v38[3] = v37;
    v38[4] = v0 + 184;
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_11_2();
    swift_retain();
    v39 = sub_2476F0678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_2476C3820, (uint64_t)v38, v37);
    v41 = v40;
    v43 = v42;
    OUTLINED_FUNCTION_29_2();
    swift_release();
    swift_task_dealloc();
    if ((v41 & 1) != 0)
    {
      OUTLINED_FUNCTION_63_0();
    }
    else
    {
      sub_2476C2A14((int64_t)v39, v43);
      swift_bridgeObjectRelease();
      sub_2476C2BD0((unint64_t)v39);
      OUTLINED_FUNCTION_63_0();
      OUTLINED_FUNCTION_33();
    }
    v44 = *(_QWORD *)(v0 + 200);
    sub_2476F0AF0();
    swift_endAccess();
    OUTLINED_FUNCTION_63_0();
    sub_2476F2E5C(v44, (uint64_t (*)(void))sub_2476C383C);
    v45 = *(_BYTE *)(v0 + 97);
    v46 = *(_OWORD *)(v0 + 248);
    v64 = *(_OWORD *)(v0 + 232);
    v65 = v46;
    v66 = v45;
    sub_2476BF8AC((uint64_t)&v64);
    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_2476C1040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_140(&v4);
  *(_QWORD *)(v2 + 320) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476C10AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v16)(uint64_t);
  _QWORD v17[4];
  char v18;

  swift_release();
  v1 = *(_QWORD *)(v0 + 320);
  OUTLINED_FUNCTION_49_0();
  if (v3)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v4 = *(_BYTE *)(v0 + 97);
    v6 = *(_QWORD *)(v0 + 248);
    v5 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    _s9StatementCMa();
    v17[0] = v8;
    v17[1] = v7;
    v17[2] = v6;
    v17[3] = v5;
    v18 = v4;
    OUTLINED_FUNCTION_60_0(v8, v7, v6);
    v9 = OUTLINED_FUNCTION_66_0();
    v10 = sub_2476BF668(v9, (uint64_t)v17);
    v11 = OUTLINED_FUNCTION_45_1();
    if (!v1)
      v11 = v10;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
  }
  else
  {
    while (1)
    {
      OUTLINED_FUNCTION_33_2(v2);
      if ((*(_BYTE *)(v0 + 96) & 1) != 0)
        break;
      sub_2476C37DC(v0 + 16);
      OUTLINED_FUNCTION_49_0();
      if (v3)
        goto LABEL_5;
    }
    OUTLINED_FUNCTION_24_2();
    v16 = v12;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v13;
    v14 = OUTLINED_FUNCTION_61_0(v13, (uint64_t)sub_2476C1040);
    return v16(v14);
  }
}

uint64_t sub_2476C11E0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_45_1();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_2476C1218(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v5;

  v5 = sub_2476C232C(a1, a2, v2[2], v2[3], v2[4]);
  sub_2476C23A0(a1, a2);
  return v5;
}

_QWORD *sub_2476C1260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  sub_24770A900(0, 15, 0xD000000000000040, 0x8000000247734C80);
  sub_2476C3718();
  sub_2476C3760((unint64_t *)&qword_2576B8090, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
  v1[2] = sub_24772CB8C();
  v1[3] = v3;
  v1[4] = a1;
  return v1;
}

_QWORD *sub_2476C1300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  OUTLINED_FUNCTION_70_0(a1, &qword_2576B7F28, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - v5;
  v8 = v3[3];
  v7 = v3[4];
  v9 = v3[2];
  v10 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v7;
  v11[5] = v9;
  v11[6] = v8;
  OUTLINED_FUNCTION_62_0();
  swift_retain();
  sub_2476BD3CC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_2476C13F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_2476C140C()
{
  uint64_t v0;

  sub_2476C145C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476C145C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_6_3();
  v2 = *(_QWORD *)(v0 + 216);
  if (!*(_QWORD *)(v2 + 16))
    return OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_62_0();
  v3 = sub_2477128D4();
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_42_1();
    return OUTLINED_FUNCTION_31_1();
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_42_1();
  v6 = sub_2476BFA1C();
  if ((v6 & 1) == 0)
    goto LABEL_9;
  OUTLINED_FUNCTION_46_1(v6, (uint64_t (*)(void))sub_2476C3AF8);
  if (v1)
    return swift_release();
  v7 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  OUTLINED_FUNCTION_6_3();
  sub_24772C91C();
  v9 = sub_2476C1218(v7, v8);
  OUTLINED_FUNCTION_31_1();
  swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_33();
  if (!v9)
  {
    v11 = *(_QWORD *)(v5 + 40);
    v13 = *(_QWORD *)(v5 + 32);
    OUTLINED_FUNCTION_6_3();
    swift_bridgeObjectRetain_n();
    v12 = OUTLINED_FUNCTION_36_1();
    sub_2476C2528(v12, 0, 1, v13, v11);
    sub_2476C23A0(v13, v11);
    sub_2476F0AF0();
    OUTLINED_FUNCTION_31_1();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    OUTLINED_FUNCTION_46_1(v6, (uint64_t (*)(void))sub_2476C3AE4);
    if (v1)
      return swift_release();
  }
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_62_0();
  sub_2477065B0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_42_1();
  return swift_release();
}

uint64_t sub_2476C1634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2476C1300(a1, a2, a3);
  return swift_deallocClassInstance();
}

uint64_t _s14StatementTokenCMa()
{
  return objc_opt_self();
}

unint64_t sub_2476C1678()
{
  unint64_t result;

  result = qword_2576B8008;
  if (!qword_2576B8008)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for NanoID, &type metadata for NanoID);
    atomic_store(result, (unint64_t *)&qword_2576B8008);
  }
  return result;
}

uint64_t sub_2476C16B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return sub_24772C91C();
}

uint64_t sub_2476C16C4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2476C16F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2476BD38C;
  return sub_2476C13F0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2476C1778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 80) = v1;
  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_BYTE *)(v2 + 48) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 88) = v5;
  *v5 = v2;
  v5[1] = sub_2476C17DC;
  return sub_2476C0B40(v2 + 16);
}

uint64_t sub_2476C17DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  OUTLINED_FUNCTION_140(&v6);
  *(_QWORD *)(v4 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 104) = a1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_2476C1844()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  _s14StatementTokenCMa();
  swift_allocObject();
  v1 = OUTLINED_FUNCTION_25_2();
  v2 = sub_2476C1260(v1);
  v3 = v2[2];
  v4 = v2[3];
  OUTLINED_FUNCTION_6_3();
  sub_24772C91C();
  v5 = OUTLINED_FUNCTION_79();
  sub_2477069D0(v5, v3, v4);
  OUTLINED_FUNCTION_72_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v2);
}

uint64_t sub_2476C18F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476C1900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_0_5();
  v2 = *(_QWORD *)(v1 + 216);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_12_1(v3);
  swift_endAccess();
  if (v2)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    OUTLINED_FUNCTION_5_4(v4, (uint64_t)sub_2476C19B4);
    OUTLINED_FUNCTION_27_1();
    return sub_2476C2790(v5, v6, v7);
  }
  else
  {
    sub_2476C2754();
    v9 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v9, v10);
    OUTLINED_FUNCTION_34_2();
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_27_1();
    return v11(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_2476C19B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  if (!v1)
    *(_QWORD *)(v2 + 88) = a1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_2476C1A00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_2476C1A34()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_26_2();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_69_0();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476C1A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_0_5();
  v2 = *(_QWORD *)(v1 + 216);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_12_1(v3);
  swift_endAccess();
  if (v2)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    OUTLINED_FUNCTION_5_4(v4, (uint64_t)sub_2476C1B08);
    OUTLINED_FUNCTION_27_1();
    return sub_2476C282C(v5, v6, v7);
  }
  else
  {
    sub_2476C2754();
    v9 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v9, v10);
    OUTLINED_FUNCTION_34_2();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_39_1();
    return OUTLINED_FUNCTION_68(v11);
  }
}

uint64_t sub_2476C1B08()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  if (!v1)
  {
    *(_BYTE *)(v3 + 96) = v0;
    *(_QWORD *)(v3 + 88) = v2;
  }
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476C1B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_0_5();
  v2 = *(_QWORD *)(v1 + 216);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_12_1(v3);
  swift_endAccess();
  if (v2)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    OUTLINED_FUNCTION_5_4(v4, (uint64_t)sub_2476C1C0C);
    OUTLINED_FUNCTION_27_1();
    return sub_2476C282C(v5, v6, v7);
  }
  else
  {
    sub_2476C2754();
    v9 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v9, v10);
    OUTLINED_FUNCTION_34_2();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_39_1();
    return OUTLINED_FUNCTION_68(v11);
  }
}

uint64_t sub_2476C1C0C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  if (!v1)
  {
    *(_BYTE *)(v3 + 96) = v0;
    *(_QWORD *)(v3 + 88) = v2;
  }
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476C1C60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96) & 1);
}

uint64_t sub_2476C1C9C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_26_2();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_69_0();
  return v0();
}

uint64_t sub_2476C1CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_0_5();
  v2 = *(_QWORD *)(v1 + 216);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_12_1(v3);
  swift_endAccess();
  if (v2)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    OUTLINED_FUNCTION_5_4(v4, (uint64_t)sub_2476C1D7C);
    OUTLINED_FUNCTION_27_1();
    return sub_2476C28BC(v5, v6, v7);
  }
  else
  {
    sub_2476C2754();
    v9 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v9, v10);
    OUTLINED_FUNCTION_34_2();
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_27_1();
    return v11(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_2476C1D7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v12;

  v12 = *v5;
  v10 = v12;
  OUTLINED_FUNCTION_140(&v12);
  *(_QWORD *)(v10 + 80) = v4;
  swift_task_dealloc();
  if (!v4)
  {
    *(_BYTE *)(v10 + 112) = a4;
    *(_QWORD *)(v10 + 88) = a3;
    *(_QWORD *)(v10 + 96) = a2;
    *(_QWORD *)(v10 + 104) = a1;
  }
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476C1E04()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88), *(unsigned __int8 *)(v0 + 112));
}

uint64_t sub_2476C1E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_0_5();
  v2 = *(_QWORD *)(v1 + 216);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_12_1(v3);
  swift_endAccess();
  if (v2)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    OUTLINED_FUNCTION_5_4(v4, (uint64_t)sub_2476C1EF4);
    OUTLINED_FUNCTION_27_1();
    return sub_2476C2960(v5, v6, v7);
  }
  else
  {
    sub_2476C2754();
    v9 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v9, v10);
    OUTLINED_FUNCTION_34_2();
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_27_1();
    return v11(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_2476C1EF4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  if (!v1)
    *(_BYTE *)(v2 + 88) = a1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_2476C1F40()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 88));
}

uint64_t sub_2476C1F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_2476C1F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_4_5();
  v2 = v1;
  *(_QWORD *)(v0 + 80) = v1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_72_0();
  if (v2)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_2476C2078;
    OUTLINED_FUNCTION_27_1();
    return v7(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    sub_2476C2754();
    v13 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_7_3(v13, v14);
    OUTLINED_FUNCTION_34_2();
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_27_1();
    return v15(v15, v16, v17, v18, v19, v20, v21, v22);
  }
}

uint64_t sub_2476C2078()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_140(&v4);
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476C20D4()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476C2100()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2476C212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  sub_2476B4654(a3, (uint64_t)v18);
  v6 = sub_24772C358();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2476BFA1C();
  if ((v10 & 1) == 0)
  {
    OUTLINED_FUNCTION_48_0(v10, (uint64_t (*)(void))sub_2476C3898);
    return;
  }
  OUTLINED_FUNCTION_48_0(v10, (uint64_t (*)(void))sub_2476C38B8);
  if (!v3)
  {
    sub_2476B4654(a3, (uint64_t)&v19);
    if ((v22 & 1) != 0)
    {
      v11 = v21;
      if (!v21)
      {
        __break(1u);
        return;
      }
      v12 = v20;
    }
    else
    {
      v12 = v19;
      v11 = v20;
    }
    sub_24772C91C();
    v17[0] = v11;
    v17[1] = v12;
    v17[2] = v11;
    sub_2476C38D8(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2476B3E14);
    sub_24772C34C();
    sub_2476B5B30();
    v23 = sub_24772D078();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    sub_2476C38D8(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2476B3EAC);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_79();
    sub_24772C91C();
    v15 = a1;
    v16 = v23;
    sub_2476C2528(v15, 0, 1, v23, v14);
    sub_2476C23A0(v16, v14);
    sub_2476F0AF0();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
}

void sub_2476C2304()
{
  sub_2476BF974();
}

unint64_t sub_2476C232C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v6;
  char v7;
  _QWORD v9[6];
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v10;
  v6 = sub_2476F0678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_2476C3AC8, (uint64_t)v9, a4);
  if ((v7 & 1) != 0)
    return 0;
  else
    return sub_2476C9FFC((unint64_t)v6, a5);
}

void sub_2476C23A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[6];
  _QWORD v25[2];

  v3 = v2;
  v7 = v2[2];
  v6 = v2[3];
  v25[0] = a1;
  v25[1] = a2;
  v24[2] = v7;
  v24[3] = v6;
  v24[4] = v25;
  v8 = sub_2476F0678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_2476C3AC8, (uint64_t)v24, v6);
  if ((v10 & 1) == 0)
  {
    v11 = (unint64_t)v8;
    sub_2476C2A14((int64_t)v8, v9);
    swift_bridgeObjectRelease();
    sub_2476C2BD0(v11);
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
    v18 = sub_2476C2EB0(a1, a2, 0);
    v20 = v19;
    v21 = v2[4];
    if ((v18 & 1) != 0)
    {
      if (*(_QWORD *)(v21 + 16) < v19)
      {
        __break(1u);
      }
      else if ((v19 & 0x8000000000000000) == 0)
      {
        sub_2476F4148(v19, v19, v13, v15, v17);
        return;
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_2476C9FFC(v19, v3[4]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24771F040(v21);
      v21 = v22;
    }
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if (v20 >= *(_QWORD *)(v21 + 16))
    {
LABEL_15:
      __break(1u);
      return;
    }
    v23 = v21 + 24 * v20;
    swift_retain();
    swift_release();
    *(_QWORD *)(v23 + 32) = v13;
    *(_QWORD *)(v23 + 40) = v15;
    *(_BYTE *)(v23 + 48) = v17 != 0;
    swift_release();
    swift_release();
    v3[4] = v21;
  }
}

uint64_t sub_2476C2528(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD v31[2];

  v9 = *v5;
  v10 = v5[1];
  v31[0] = a4;
  v31[1] = a5;
  v28 = v9;
  v29 = v10;
  v30 = v31;
  swift_retain();
  swift_retain();
  v12 = (unint64_t)sub_2476F0678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_2476C3AC8, (uint64_t)v27, v10);
  v14 = v13;
  v16 = v15;
  swift_release();
  swift_release();
  if ((v14 & 1) != 0)
  {
    if (a1)
    {
      swift_retain();
      sub_2476F3260(a4, a5);
      v23 = v5[2];
      v5 += 2;
      v22 = v23;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v5 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2476B2F60(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = *v5;
      }
      v16 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      v17 = v16 + 1;
      if (v16 < v18 >> 1)
        goto LABEL_12;
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (a1)
    {
      v17 = v5[2];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24771F040(v17);
        v17 = v19;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v18 = *(_QWORD *)(v17 + 16);
        if (v12 < v18)
        {
          v20 = v17 + 24 * v12;
          swift_retain();
          swift_release();
          *(_QWORD *)(v20 + 32) = a1;
          *(_QWORD *)(v20 + 40) = a2;
          *(_BYTE *)(v20 + 48) = a3 & 1;
          swift_release_n();
          result = swift_bridgeObjectRelease();
          v5[2] = v17;
          return result;
        }
      }
      __break(1u);
LABEL_18:
      sub_2476B2F60(v18 > 1, v17, 1);
      v22 = *v5;
LABEL_12:
      *(_QWORD *)(v22 + 16) = v17;
      v25 = v22 + 24 * v16;
      *(_QWORD *)(v25 + 32) = a1;
      *(_QWORD *)(v25 + 40) = a2;
      *(_BYTE *)(v25 + 48) = a3 & 1;
      swift_release_n();
      result = swift_bridgeObjectRelease();
      *v5 = v22;
      return result;
    }
    sub_2476C2A14(v12, v16);
    swift_bridgeObjectRelease();
    sub_2476C2BD0(v12);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

unint64_t sub_2476C2754()
{
  unint64_t result;

  result = qword_2576B8030;
  if (!qword_2576B8030)
  {
    result = MEMORY[0x2495822A8](&unk_24772EA98, &_s15ConnectionErrorON);
    atomic_store(result, &qword_2576B8030);
  }
  return result;
}

uint64_t sub_2476C2790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

void sub_2476C27B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_2(*(_QWORD *)(v1 + 24), sub_2476C2A00);
  if (!v0)
  {
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_58_0();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_58_0();
  __asm { BR              X0 }
}

uint64_t sub_2476C282C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_2476C284C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_35_2(*(_QWORD *)(v1 + 32), sub_2476C2A00);
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_38_1();
    return OUTLINED_FUNCTION_68(v2);
  }
  else
  {
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_29_2();
    return OUTLINED_FUNCTION_21_1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_2476C28BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

void sub_2476C28DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_2(*(_QWORD *)(v1 + 48), sub_2476C2A00);
  if (!v0)
  {
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_58_0();
    __asm { BR              X4 }
  }
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_58_0();
  __asm { BR              X0 }
}

uint64_t sub_2476C2960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_2476C2980()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_2(*(_QWORD *)(v1 + 16), sub_2476C2A00);
  if (!v0)
  {
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_58_0();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_58_0();
  __asm { BR              X0 }
}

uint64_t sub_2476C2A00()
{
  return OUTLINED_FUNCTION_37_1();
}

void sub_2476C2A14(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v2;
  v5 = v2 + 1;
  v6 = *(_QWORD *)(v2[1] + 16);
  v7 = *v3;
  if (!*v3)
  {
    if (v6)
    {
      sub_2476C2C60(a1);
      return;
    }
    goto LABEL_12;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v7 + 16) & 0x3FLL) == (*(_QWORD *)(v7 + 24) & 0x3FLL))
  {
    if (!v6)
      goto LABEL_12;
  }
  else if (v6 <= sub_24772C670())
  {
LABEL_12:
    sub_2476C2C60(a1);
    v11 = *v5;
    if (v7)
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v7 + 24) & 0x3FLL;
    }
    else
    {
      v12 = 0;
    }
    v13 = *(_QWORD *)(v11 + 16);
    if (v12 || v13 >= 0x10)
    {
      v14 = MEMORY[0x2495809F4](v13);
      sub_2476F37AC(v14, v12);
    }
    else
    {
      swift_release();
      *v3 = 0;
    }
    return;
  }
  sub_2476F33AC();
  v9 = *v3;
  if (*v3)
  {
    swift_retain();
    sub_2476C2CE4(a2, (_QWORD *)(v9 + 16), v9 + 32, (uint64_t)v3);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v10 = v3[1];
      swift_retain();
      sub_2476F344C(a1, a1 + 1, v10);
      swift_release();
      swift_release();
      sub_2476C2C60(a1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_2476C2BD0(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24771F040(v3);
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_2476B1B04((char *)(v3 + 24 * a1 + 56), v5 - 1 - a1, (char *)(v3 + 24 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

void sub_2476C2C60(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24771F054(v3);
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_2476B1B08((char *)(v3 + 16 * a1 + 48), v5 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

unint64_t sub_2476C2CE4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v17;

  v6 = a1;
  v17 = sub_24772C61C();
  sub_24772C658();
  if (!v17)
    return sub_24772C634();
  v7 = a1;
  v8 = sub_24772C628();
  while (1)
  {
    result = sub_24772C640();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_22;
    sub_24772D600();
    sub_24772C91C();
    sub_24772CAC0();
    v11 = sub_24772D624();
    result = swift_bridgeObjectRelease();
    v12 = 1 << *a2;
    if (__OFSUB__(v12, 1))
      goto LABEL_23;
    v13 = (v12 - 1) & v11;
    if (v6 >= v8)
    {
      if (v13 >= v8 && v6 >= v13)
      {
LABEL_18:
        sub_24772C640();
        sub_24772C634();
        v6 = v7;
      }
    }
    else if (v13 >= v8 || v6 >= v13)
    {
      goto LABEL_18;
    }
    sub_24772C658();
    v7 = a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476C2EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD v13[6];
  _QWORD v14[2];

  v8 = *v3;
  v7 = v3[1];
  v14[0] = a1;
  v14[1] = a2;
  v13[2] = v8;
  v13[3] = v7;
  v13[4] = v14;
  sub_2476F0678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_2476C3AC8, (uint64_t)v13, v7);
  v11 = v10;
  if ((v10 & 1) != 0)
    sub_2476C2F40(a1, a2, a3, v9);
  return v11 & 1;
}

void sub_2476C2F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = v4;
  v9 = v4 + 1;
  v10 = *(_QWORD *)(v4[1] + 16);
  v11 = *v5;
  if (*v5)
  {
    swift_beginAccess();
    if (v10 >= MEMORY[0x2495809D0](*(_QWORD *)(v11 + 16) & 0x3FLL))
      goto LABEL_11;
    sub_2476F33AC();
    v10 = *v5;
    if (!*v5)
    {
LABEL_26:
      __break(1u);
      return;
    }
    swift_retain();
    v11 = 0;
    sub_2476C3104((_QWORD *)(v10 + 16), v10 + 32, a4, a3, (uint64_t)v5);
    swift_release();
    if (*(_QWORD *)(v5[1] + 16) < a3)
      goto LABEL_23;
    if ((a3 & 0x8000000000000000) == 0)
    {
LABEL_10:
      sub_24772C91C();
      sub_2476F4280(a3, a3, a1, a2);
      return;
    }
    __break(1u);
  }
  if ((unint64_t)v10 < 0xF)
  {
    if (v10 >= a3)
    {
      if ((a3 & 0x8000000000000000) == 0)
        goto LABEL_10;
      goto LABEL_25;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_11:
  if (v10 < a3)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (a3 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_24772C91C();
  sub_2476F4280(a3, a3, a1, a2);
  v13 = *v9;
  if (v11)
  {
    swift_beginAccess();
    v14 = *(_QWORD *)(v11 + 24) & 0x3FLL;
  }
  else
  {
    v14 = 0;
  }
  v15 = *(_QWORD *)(v13 + 16);
  if (v14 || v15 >= 0x10)
  {
    v16 = MEMORY[0x2495809F4](v15);
    sub_2476F37AC(v16, v14);
  }
  else
  {
    swift_release();
    *v5 = 0;
  }
}

uint64_t sub_2476C3104(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2476C3188(a4, *(_QWORD *)(a5 + 8), a1);
  return sub_24772C634();
}

uint64_t sub_2476C3188(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  uint64_t v32;

  v4 = result;
  v5 = *(_QWORD *)(a2 + 16);
  if (result >= (uint64_t)(v5 >> 1))
  {
    if (MEMORY[0x2495809D0](*a3 & 0x3FLL) / 3 >= (uint64_t)(v5 + ~result))
    {
      result = sub_2476F3978(v4, a2);
      if (v17 == v18 >> 1)
        return swift_unknownObjectRelease();
      v19 = v17;
      v20 = v18 >> 1;
      v21 = a3;
      v31 = v18 >> 1;
      while (v19 < v20)
      {
        sub_24772D600();
        sub_24772C91C();
        sub_24772CAC0();
        result = sub_24772D624();
        if (__OFSUB__(1 << *v21, 1))
          goto LABEL_54;
        if (sub_24772C61C())
        {
          while (1)
          {
            v22 = sub_24772C640();
            if ((v23 & 1) == 0 && v22 == v4)
              break;
            sub_24772C658();
          }
        }
        result = sub_24772C640();
        if ((v24 & 1) != 0)
          goto LABEL_61;
        v7 = __OFADD__(result++, 1);
        v21 = a3;
        if (v7)
          goto LABEL_55;
        sub_24772C64C();
        result = swift_bridgeObjectRelease();
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_56;
        ++v19;
        v20 = v31;
        if (v19 == v31)
          return swift_unknownObjectRelease();
      }
      goto LABEL_53;
    }
    sub_24772C61C();
    v15 = sub_24772C640();
    if ((v16 & 1) != 0 || v15 < v4)
      return sub_24772C658();
    v7 = __OFADD__(v15, 1);
    result = v15 + 1;
    if (!v7)
    {
      sub_24772C64C();
      return sub_24772C658();
    }
    goto LABEL_51;
  }
  v6 = 1 << *a3;
  v7 = __OFSUB__(v6, 1);
  v8 = v6 - 1;
  if (v7)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v9 = *a3 & 0x3FLL;
  v10 = a3[1];
  if (v10 >= -64)
    v11 = 0;
  else
    v11 = v8;
  v12 = v11 + (v10 >> 6) + 1;
  if (v12 < v8)
    v8 = 0;
  a3[1] = a3[1] & 0x3FLL | ((v12 - v8) << 6);
  result = MEMORY[0x2495809D0](v9);
  if (result / 3 < v4)
  {
    sub_24772C61C();
    v13 = sub_24772C640();
    if ((v14 & 1) != 0 || v13 > v4)
      return sub_24772C658();
    v7 = __OFSUB__(v13, 1);
    result = v13 - 1;
    if (!v7)
    {
      sub_24772C64C();
      return sub_24772C658();
    }
    goto LABEL_52;
  }
  if (v4 < 0)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v5 >= v4)
  {
    if (!v4)
      return result;
    result = swift_retain();
    v25 = 0;
    v26 = 1;
    v27 = a3;
    v32 = v4;
    while (v25 != v4)
    {
      sub_24772D600();
      sub_24772C91C();
      sub_24772CAC0();
      result = sub_24772D624();
      if (__OFSUB__(1 << *v27, 1))
        goto LABEL_49;
      if (sub_24772C61C())
      {
        while (1)
        {
          v28 = sub_24772C640();
          if ((v29 & 1) == 0 && v28 == v26)
            break;
          sub_24772C658();
        }
      }
      result = sub_24772C640();
      if ((v30 & 1) != 0)
        goto LABEL_60;
      v7 = __OFSUB__(result--, 1);
      v4 = v32;
      v27 = a3;
      if (v7)
        goto LABEL_50;
      ++v25;
      sub_24772C64C();
      result = swift_bridgeObjectRelease();
      ++v26;
      if (v25 == v32)
        return swift_release();
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

void sub_2476C36B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8040)
  {
    _s9StatementCMa();
    sub_2476C1678();
    v0 = sub_24772C940();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8040);
  }
}

void sub_2476C3718()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8088)
  {
    v0 = sub_24772CD48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8088);
  }
}

uint64_t sub_2476C3760(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2495822A8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2476C37A0(uint64_t *a1, uint64_t a2)
{
  sub_24772A394(a2, a1);
  return a2;
}

uint64_t sub_2476C37DC(uint64_t a1)
{
  sub_24772A334(a1);
  return a1;
}

uint64_t sub_2476C3810(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2476C3820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_2476F4528(a1, a2, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 32), a3);
}

void sub_2476C383C()
{
  sub_2476BFEB0();
  OUTLINED_FUNCTION_51_0();
}

unint64_t sub_2476C385C()
{
  unint64_t result;

  result = qword_2576B8098;
  if (!qword_2576B8098)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLBindPosition.Error, &type metadata for SQLBindPosition.Error);
    atomic_store(result, &qword_2576B8098);
  }
  return result;
}

void sub_2476C3898()
{
  sub_2476BF974();
  OUTLINED_FUNCTION_51_0();
}

void sub_2476C38B8()
{
  sub_2476C0500();
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476C38D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

void sub_2476C3910(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2476C3968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2476C3910(a1, &qword_2576B80B0, a3, (uint64_t (*)(uint64_t))_s9StatementCMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

_QWORD *initializeBufferWithCopyOfBuffer for NanoID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_24772C91C();
  return a1;
}

uint64_t _s15ConnectionErrorOwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for NanoID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for NanoID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NanoID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NanoID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2476C3AB0()
{
  return 0;
}

ValueMetadata *_s15ConnectionErrorOMa()
{
  return &_s15ConnectionErrorON;
}

uint64_t sub_2476C3AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2476C3820(a1, a2, a3);
}

void sub_2476C3AE4()
{
  sub_2476C3898();
}

void sub_2476C3AF8()
{
  sub_2476C38B8();
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_4_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2476C49D8(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 48);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_3(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_12_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return _s10ConnectionCMa();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  uint64_t v0;
  uint64_t v1;

  sub_2476C3810(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return *(unsigned int *)(v1 + 4);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  return sub_2476B3EAC(v0, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_33_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 296) = a1;
  return sub_2476C37A0((uint64_t *)(*(_QWORD *)(v3 + 280) + a1 * v1 + 32), v2);
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_35_2(uint64_t a1, uint64_t (*a2)(void))
{
  sub_2476F2E5C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return sub_2476D2A74();
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return sub_24772D078();
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_46_1(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;

  sub_2476F2E5C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_48_0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;

  sub_2476F2E5C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return sub_24772CB5C();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return sub_24772CD6C();
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_60_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  return sub_2476B3E14(a1, a2, a3, v3, v4);
}

uint64_t OUTLINED_FUNCTION_61_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 264);
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(_QWORD *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void OUTLINED_FUNCTION_70_0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_2476C3910(0, a2, 255, a4, a5);
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return sub_24772C91C();
}

void Box.value.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_0_6();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 16))(a1, v1);
  OUTLINED_FUNCTION_28_1();
}

void Box.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_6_4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 40))(v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_28_1();
}

uint64_t (*Box.value.modify())()
{
  OUTLINED_FUNCTION_6_4();
  return j__swift_endAccess;
}

void Box.__allocating_init(value:)(uint64_t a1)
{
  sub_2476C44C4(a1, (void (*)(uint64_t))Box.init(value:));
}

uint64_t Box.init(value:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  return v1;
}

uint64_t Box.__allocating_init<A>(from:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_3_5();
  v1 = swift_allocObject();
  Box.init<A>(from:)(v0);
  return v1;
}

uint64_t Box.init<A>(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[40];

  v3 = v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_6();
  v9 = v8 - v7;
  sub_2476B3F38(v10, (uint64_t)v12);
  sub_24772CEEC();
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v2)
    swift_deallocPartialClassInstance();
  else
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 88), v9, v5);
  return v3;
}

uint64_t Box.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 80));
  return v0;
}

uint64_t Box.__deallocating_deinit()
{
  Box.deinit();
  return swift_deallocClassInstance();
}

uint64_t Box<A>.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_3_5();
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_6();
  v6 = v5 - v4;
  v8 = v0 + *(_QWORD *)(v7 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v8, v1);
  sub_24772C970();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
}

uint64_t sub_2476C41C0()
{
  return Box<A>.encode(to:)();
}

uint64_t sub_2476C41E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Box.__allocating_init<A>(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t Box<A>.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_6();
  v6 = v5 - v4;
  v8 = v1 + *(_QWORD *)(v7 + 88);
  OUTLINED_FUNCTION_0_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_24772C988();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t Box<A>.hashValue.getter()
{
  _BYTE v1[72];

  sub_24772D600();
  Box<A>.hash(into:)((uint64_t)v1);
  return sub_24772D624();
}

uint64_t sub_2476C4304()
{
  return Box<A>.hashValue.getter();
}

uint64_t sub_2476C4328(uint64_t a1)
{
  return Box<A>.hash(into:)(a1);
}

uint64_t sub_2476C434C()
{
  _BYTE v1[72];

  sub_24772D600();
  Box<A>.hash(into:)((uint64_t)v1);
  return sub_24772D624();
}

uint64_t static Box<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v18[-v10];
  v12 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 88);
  OUTLINED_FUNCTION_0_6();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v13(v11, v12, v4);
  v14 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 88);
  OUTLINED_FUNCTION_0_6();
  v13(v8, v14, v4);
  v15 = sub_24772C9DC();
  v16 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v11, v4);
  return v15 & 1;
}

uint64_t sub_2476C44A8(uint64_t *a1, uint64_t *a2)
{
  return static Box<A>.== infix(_:_:)(*a1, *a2);
}

void ActorBox.__allocating_init(value:)(uint64_t a1)
{
  sub_2476C44C4(a1, ActorBox.init(value:));
}

void sub_2476C44C4(uint64_t a1, void (*a2)(uint64_t))
{
  swift_allocObject();
  a2(a1);
  OUTLINED_FUNCTION_44();
}

void ActorBox.init(value:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_defaultActor_initialize();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 96), a1);
  OUTLINED_FUNCTION_44();
}

uint64_t ActorBox.withValue<A>(_:)()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  OUTLINED_FUNCTION_3_5();
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t ActorBox.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 80));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActorBox.__deallocating_deinit()
{
  ActorBox.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ActorBox.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2476C4620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2495822A8](&protocol conformance descriptor for <A> Box<A>, a1, &v4);
}

uint64_t sub_2476C4658()
{
  return ActorBox.unownedExecutor.getter();
}

uint64_t sub_2476C4674()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Box);
}

uint64_t method lookup function for Box()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Box.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Box.__allocating_init<A>(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_2476C471C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ActorBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActorBox);
}

uint64_t method lookup function for ActorBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActorBox.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 - 8) + 8))();
}

uint64_t sub_2476C4814(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void **v6;
  void *v7;
  uint64_t ErrorValue;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a3;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v27 = MEMORY[0x24BEE4AF8];
    sub_2476B2F7C(0, v3, 0);
    v4 = v27;
    v6 = (void **)(a1 + 32);
    do
    {
      v7 = *v6;
      ErrorValue = swift_getErrorValue();
      v24 = &v22;
      v9 = v25;
      v10 = v26;
      v11 = *(_QWORD *)(v25 - 8);
      MEMORY[0x24BDAC7A8](ErrorValue);
      v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v13);
      v14 = v7;
      v15 = v23(v9, v10);
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
      MEMORY[0x2495821C4](v7);
      v27 = v4;
      v19 = *(_QWORD *)(v4 + 16);
      v18 = *(_QWORD *)(v4 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_2476B2F7C(v18 > 1, v19 + 1, 1);
        v4 = v27;
      }
      *(_QWORD *)(v4 + 16) = v19 + 1;
      v20 = v4 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v3;
    }
    while (v3);
  }
  return v4;
}

double sub_2476C4988@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  unint64_t v4;
  char v5;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_247712890(), (v5 & 1) != 0))
  {
    sub_2476B5E0C(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_2476C49D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2476C4A34(a1, a2, a3, (void (*)(void))sub_2477128D4);
}

uint64_t sub_2476C49E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_247712890(), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  else
    return 0;
}

void sub_2476C4A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2476C4A34(a1, a2, a3, (void (*)(void))sub_247712890);
}

void sub_2476C4A34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    a4();
    if ((v4 & 1) != 0)
      swift_retain();
  }
  OUTLINED_FUNCTION_35();
}

void Error.encodedOnionDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_25_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_35_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, a1);
  if (OUTLINED_FUNCTION_20_3())
  {
    OUTLINED_FUNCTION_38_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_40_1(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  }
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_29_3();
}

void sub_2476C4B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_2576B7AC8 != -1)
    a1 = swift_once();
  v6 = qword_2576B81C8;
  v7 = OUTLINED_FUNCTION_43_2(a1, sel_domain);
  v8 = sub_24772CA18();
  v10 = v9;

  v11 = sub_2476C49E4(v8, v10, v6);
  LOBYTE(v7) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 112) = 40;
  *(_QWORD *)(v5 - 104) = 0xE100000000000000;
  if ((v7 & 1) != 0)
    v13 = -1;
  else
    v13 = v11;
  *(_QWORD *)(v5 - 120) = v13;
  OUTLINED_FUNCTION_33_3();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  v14 = OUTLINED_FUNCTION_47_1();
  *(_QWORD *)(v5 - 120) = OUTLINED_FUNCTION_43_2(v14, sel_code);
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_46_2();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_41_1();
  v3(v2, *(_QWORD *)(v5 - 144), v1);
  if (OUTLINED_FUNCTION_20_3())
  {
    OUTLINED_FUNCTION_38_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_40_1(v15, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  }
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_29_3();
}

void Error.onionDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_25_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_35_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, a1);
  if (OUTLINED_FUNCTION_20_3())
  {
    OUTLINED_FUNCTION_38_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_40_1(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  }
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_29_3();
}

void sub_2476C4DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 112) = 40;
  *(_QWORD *)(v6 - 104) = 0xE100000000000000;
  v7 = OUTLINED_FUNCTION_43_2(a1, sel_domain);
  sub_24772CA18();

  sub_24772CAFC();
  swift_bridgeObjectRelease();
  v8 = OUTLINED_FUNCTION_47_1();
  *(_QWORD *)(v6 - 120) = OUTLINED_FUNCTION_43_2(v8, sel_code);
  sub_24772D480();
  OUTLINED_FUNCTION_46_2();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_41_1();
  v5(v2, v3, v1);
  if (OUTLINED_FUNCTION_20_3())
  {
    OUTLINED_FUNCTION_38_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_40_1(v9, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  }
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_29_3();
}

void sub_2476C4E84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = objc_msgSend(v22, sel_underlyingErrors);
  OUTLINED_FUNCTION_55_1((uint64_t)v24, (unint64_t *)&qword_25444C3A8);
  OUTLINED_FUNCTION_54_0();

  OUTLINED_FUNCTION_37_2(v25, v26, (uint64_t (*)(uint64_t, uint64_t))Error.onionDescription.getter);
  v27 = OUTLINED_FUNCTION_48_1();
  *(_QWORD *)(v23 - 112) = v21;
  OUTLINED_FUNCTION_17_2(v27, (unint64_t *)&qword_2576B81D0, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2476C5830();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_44_2();

  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_24_3();
}

uint64_t static SonicErrorOnion.decodeOnionPairs(_:)(uint64_t a1, unint64_t a2)
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _BYTE v53[24];
  uint64_t v54;

  if ((sub_24772CB5C() & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v4 = sub_24772CB68();
  v5 = MEMORY[0x24BEE4AF8];
  if ((v4 & 1) != 0)
  {
    sub_24772C91C();
    v6 = sub_2476C5258(1uLL, a1, a2);
    *(_QWORD *)v53 = sub_2476C5328(1, v6, v7);
    *(_QWORD *)&v53[8] = v8;
    *(_QWORD *)&v53[16] = v9;
    v54 = v10;
    v52 = 0xE200000000000000;
    sub_2476C5888();
    v11 = sub_2476C58C4();
    OUTLINED_FUNCTION_52_1(v11, v12, v13, MEMORY[0x24BEE1E08], MEMORY[0x24BEE0D00], v14, v15, MEMORY[0x24BEE0730], v42, v45, v47, v49, 41);
    v16 = sub_24772CF1C();
    OUTLINED_FUNCTION_32();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v50 = v5;
      sub_2476B3038();
      v26 = v5;
      v43 = v16;
      v27 = (uint64_t *)(v16 + 56);
      do
      {
        v28 = *(v27 - 1);
        v29 = *v27;
        *(_OWORD *)v53 = *(_OWORD *)(v27 - 3);
        *(_QWORD *)&v53[16] = v28;
        v54 = v29;
        v52 = 0xE200000000000000;
        OUTLINED_FUNCTION_52_1(v18, v19, v20, v21, v22, v23, v24, v25, v43, v46, v48, v50, 44);
        v18 = sub_24772CF1C();
        v30 = v18;
        v50 = v26;
        v31 = *(_QWORD *)(v26 + 16);
        if (v31 >= *(_QWORD *)(v26 + 24) >> 1)
          sub_2476B3038();
        *(_QWORD *)(v26 + 16) = v31 + 1;
        *(_QWORD *)(v26 + 8 * v31 + 32) = v30;
        v27 += 4;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_53_1();
      v26 = MEMORY[0x24BEE4AF8];
    }
    v32 = *(_QWORD *)(v26 + 16);
    if (v32)
    {
      sub_24772C91C();
      v33 = 0;
      v5 = MEMORY[0x24BEE4AF8];
      do
      {
        v51 = *(_QWORD *)(v26 + 8 * v33 + 32);
        sub_2476C540C((uint64_t)&v51, v53);
        if (*(_QWORD *)&v53[8] != 1)
        {
          v44 = *(_OWORD *)&v53[8];
          v34 = *(_QWORD *)v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2476C5CCC(0, *(_QWORD *)(v5 + 16) + 1, 1, v5, (uint64_t)&unk_2576B8268, (uint64_t)sub_2476C7A94, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2476C6930);
            v5 = v39;
          }
          v36 = *(_QWORD *)(v5 + 16);
          v35 = *(_QWORD *)(v5 + 24);
          v37 = v44;
          if (v36 >= v35 >> 1)
          {
            sub_2476C5CCC(v35 > 1, v36 + 1, 1, v5, (uint64_t)&unk_2576B8268, (uint64_t)sub_2476C7A94, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2476C6930);
            v37 = v44;
            v5 = v40;
          }
          *(_QWORD *)(v5 + 16) = v36 + 1;
          v38 = v5 + 24 * v36;
          *(_QWORD *)(v38 + 32) = v34;
          *(_OWORD *)(v38 + 40) = v37;
        }
        ++v33;
      }
      while (v32 != v33);
      OUTLINED_FUNCTION_32();
    }
    else
    {
      v5 = MEMORY[0x24BEE4AF8];
    }
    OUTLINED_FUNCTION_32();
  }
  return v5;
}

unint64_t sub_2476C5258(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_24772CAD8();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
    {
      v7 = sub_24772CBA4();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2476C5328(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  result = sub_24772D030();
  if (__OFSUB__(result, v5))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_24772D024();
  if ((v6 & 1) != 0)
    v7 = a3;
  else
    v7 = result;
  if (v7 >> 14 >= a2 >> 14)
  {
    v8 = sub_24772D048();
    swift_bridgeObjectRelease();
    return v8;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2476C540C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  __int16 v12;
  unsigned __int8 *v13;
  char v14;
  uint64_t result;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  __int16 v27;
  unsigned __int8 *v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];

  v3 = *(_QWORD **)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v4 = v3[4];
    v5 = v3[5];
    v7 = v3[6];
    v6 = v3[7];
    sub_24772C91C();
  }
  else
  {
    v4 = MEMORY[0x2495813A8](0, 0xE000000000000000);
    v5 = v8;
    v7 = v9;
    v6 = v10;
  }
  if ((v5 ^ v4) < 0x4000)
    goto LABEL_42;
  sub_2476C8340(v4, v5, v7, v6, 10);
  if ((v12 & 0x100) != 0)
  {
    v13 = sub_2476C7B14(v4, v5, v7, v6, 10);
    v17 = v16;
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_43;
  }
  else
  {
    v13 = v11;
    v14 = v12;
    result = swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_43;
  }
  v18 = sub_2476C571C((uint64_t)v3);
  if (!v21)
    v18 = MEMORY[0x2495813A8](0, 0xE000000000000000);
  v22 = v18;
  v23 = v19;
  v24 = v20;
  v25 = v21;
  if ((v19 ^ v18) < 0x4000)
  {
LABEL_42:
    result = swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  sub_2476C8340(v18, v19, v20, v21, 10);
  if ((v27 & 0x100) == 0)
  {
    v28 = v26;
    v29 = v27;
    result = swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_43;
LABEL_16:
    if (qword_2576B7AC8 != -1)
      swift_once();
    sub_2476C7994(qword_2576B81C8, v46);
    v32 = v46[0];
    v33 = v46[1];
    v34 = v46[3];
    v35 = v46[4];
    v36 = (unint64_t)(v46[2] + 64) >> 6;
    sub_24772C91C();
    while (1)
    {
      if (v35)
      {
        v37 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        v38 = v37 | (v34 << 6);
      }
      else
      {
        v39 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        if (v39 >= v36)
          goto LABEL_39;
        v40 = *(_QWORD *)(v33 + 8 * v39);
        v41 = v34 + 1;
        if (!v40)
        {
          v41 = v34 + 2;
          if (v34 + 2 >= v36)
            goto LABEL_39;
          v40 = *(_QWORD *)(v33 + 8 * v41);
          if (!v40)
          {
            v41 = v34 + 3;
            if (v34 + 3 >= v36)
              goto LABEL_39;
            v40 = *(_QWORD *)(v33 + 8 * v41);
            if (!v40)
            {
              v41 = v34 + 4;
              if (v34 + 4 >= v36)
                goto LABEL_39;
              v40 = *(_QWORD *)(v33 + 8 * v41);
              if (!v40)
              {
                v41 = v34 + 5;
                if (v34 + 5 >= v36)
                  goto LABEL_39;
                v40 = *(_QWORD *)(v33 + 8 * v41);
                if (!v40)
                {
                  v42 = v34 + 6;
                  while (v42 < v36)
                  {
                    v40 = *(_QWORD *)(v33 + 8 * v42++);
                    if (v40)
                    {
                      v41 = v42 - 1;
                      goto LABEL_36;
                    }
                  }
LABEL_39:
                  result = swift_release();
                  *a2 = 0;
                  a2[1] = 0;
LABEL_40:
                  a2[2] = v28;
                  return result;
                }
              }
            }
          }
        }
LABEL_36:
        v35 = (v40 - 1) & v40;
        v38 = __clz(__rbit64(v40)) + (v41 << 6);
        v34 = v41;
      }
      if (*(unsigned __int8 **)(*(_QWORD *)(v32 + 56) + 8 * v38) == v13)
      {
        v43 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v38);
        v45 = *v43;
        v44 = v43[1];
        sub_24772C91C();
        result = swift_release();
        *a2 = v45;
        a2[1] = v44;
        goto LABEL_40;
      }
    }
  }
  v28 = sub_2476C7B14(v22, v23, v24, v25, 10);
  v31 = v30;
  result = swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
    goto LABEL_16;
LABEL_43:
  *(_OWORD *)a2 = xmmword_24772EC50;
  a2[2] = 0;
  return result;
}

uint64_t sub_2476C571C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32 * v1);
  sub_24772C91C();
  return v2;
}

uint64_t sub_2476C577C()
{
  uint64_t result;

  result = sub_24772C904();
  qword_2576B81C8 = result;
  return result;
}

void sub_2476C57B8()
{
  sub_2476C57D4();
  OUTLINED_FUNCTION_35();
}

void sub_2476C57D4()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_underlyingErrors);
  OUTLINED_FUNCTION_55_1((uint64_t)v1, (unint64_t *)&qword_25444C3A8);
  sub_24772CC7C();

  OUTLINED_FUNCTION_35();
}

unint64_t sub_2476C5830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B81D8;
  if (!qword_2576B81D8)
  {
    sub_2476C8858(255, (unint64_t *)&qword_2576B81D0, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2576B81D8);
  }
  return result;
}

unint64_t sub_2476C5888()
{
  unint64_t result;

  result = qword_2576B81E0;
  if (!qword_2576B81E0)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE1E28], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2576B81E0);
  }
  return result;
}

unint64_t sub_2476C58C4()
{
  unint64_t result;

  result = qword_2576B81E8;
  if (!qword_2576B81E8)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2576B81E8);
  }
  return result;
}

void sub_2476C5900()
{
  sub_2476C5F08();
}

void sub_2476C591C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  size_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_3();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_27();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v2)
  {
    OUTLINED_FUNCTION_17_2(v6, (unint64_t *)&qword_2576B8230, MEMORY[0x24BEE4260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v7 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v1;
    v7[3] = 2 * v8 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v9 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1BEC(v9, v10, v11);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_6_5();
    sub_2476C671C(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C59CC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_56_1(v5, &qword_2576B8278);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_11_3(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1CD4(v7, v8, v9);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_5();
    sub_2476C6808(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C5A78(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2476C6298(a1, a2, a3, a4, &qword_2576B8260, (unint64_t *)&qword_2576B7C30, (uint64_t)&protocol descriptor for Mergeable, (void (*)(uint64_t, uint64_t, unint64_t))sub_2476B1D90);
}

void sub_2476C5A9C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_57_1(v5, &qword_2576B8250, (void (*)(uint64_t))sub_2476C7A1C);
    v7 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v5 = OUTLINED_FUNCTION_11_3(v7);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1CD4(v8, v9, v10);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    OUTLINED_FUNCTION_41_2(v5, v6, (char *)(v1 + 32));
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C5B34()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, (unint64_t *)&qword_2576B8248, (uint64_t)&type metadata for SQL.Interpolation.Token, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_7_5(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1D94(v7, v8, v9);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_5();
    sub_2476C6A48(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C5BE0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, &qword_2576B8240, (uint64_t)&unk_2518DA8B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_7_5(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1DF0(v7, v8, v9);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_5();
    sub_2476C6B44(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C5C8C()
{
  sub_2476C5D9C();
}

void sub_2476C5CA8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2476C5CCC(a1, a2, a3, a4, (uint64_t)&qword_2576B8288, (uint64_t)sub_2476B49DC, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2476C6C40);
}

void sub_2476C5CCC(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  char v13;
  unint64_t *v14;
  void (*v15)(uint64_t);
  _QWORD *v16;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_27();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_31_2();
  if (v8)
  {
    sub_2476C7950(0, v14, v15);
    v16 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_51_1(v16);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_28_2();
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    a7(0, v7, v8 + 32, a4);
  }
  OUTLINED_FUNCTION_18_3();
}

void sub_2476C5D80()
{
  sub_2476C5D9C();
}

void sub_2476C5D9C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_59_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_31_2();
  if (v1)
  {
    OUTLINED_FUNCTION_42_2(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598], v8);
    v9 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_51_1(v9);
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_28_2();
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_58_1();
    sub_2476C6D58(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_18_3();
}

void sub_2476C5E38()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_56_1(v5, &qword_2576B8298);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_7_5(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_16_2();
    sub_2476B1ED8(v7);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6_5();
    sub_2476C6E08(v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C5EEC()
{
  sub_2476C5F08();
}

void sub_2476C5F08()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  _QWORD *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_59_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_27();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_31_2();
  if (v2)
  {
    OUTLINED_FUNCTION_42_2(v6, v7, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598], v9);
    v10 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v1;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_28_2();
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_58_1();
    sub_2476C6F38(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C5FB4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_57_1(v5, &qword_2576B8220, (void (*)(uint64_t))sub_2476C79CC);
    v6 = (const void *)OUTLINED_FUNCTION_8_3();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_15_3((uint64_t)(v7 - 32) / 16);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1B08(v8, v9, v10);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_6_5();
    sub_2476C6FE0(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C6064()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, &qword_2576B7B90, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = (const void *)OUTLINED_FUNCTION_8_3();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_15_3((uint64_t)(v7 - 32) / 16);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1B08(v8, v9, v10);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_6_5();
    sub_2476C70D0(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C611C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, &qword_2576B8210, (uint64_t)&type metadata for SQLIndexOrderingTerm, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_7_5(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1B04(v7, v8, v9);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_5();
    sub_2476C71C4(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C61C8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, &qword_2576B8218, (uint64_t)&type metadata for SQLIndexConstraint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_7_5(v6);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B20A4(v7, v8, v9);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_5();
    sub_2476C72C0(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_11();
}

void sub_2476C6274(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2476C6298(a1, a2, a3, a4, &qword_2576B81F8, &qword_2576B8200, (uint64_t)&protocol descriptor for _SonicErrorInterpolationState, (void (*)(uint64_t, uint64_t, unint64_t))sub_2476B1D90);
}

void sub_2476C6298(char a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5, unint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  size_t v18;
  unint64_t v19;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_27();
      if (v13)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v12 = a2;
  }
  v15 = *(_QWORD *)(a4 + 16);
  if (v12 <= v15)
    v16 = *(_QWORD *)(a4 + 16);
  else
    v16 = v12;
  if (v16)
  {
    sub_2476C78D4(0, a5);
    v17 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v18 = _swift_stdlib_malloc_size(v17);
    v17[2] = v15;
    v17[3] = 2 * ((uint64_t)(v18 - 32) / 40);
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v19 = (unint64_t)(v17 + 4);
  if ((a1 & 1) != 0)
  {
    a8(a4 + 32, v15, v19);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    sub_2476C73BC(0, v15, v19, a4, a6);
  }
  OUTLINED_FUNCTION_18_3();
}

void sub_2476C6380()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    sub_2476C78D4(0, &qword_2576B81F0);
    v5 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    OUTLINED_FUNCTION_11_3(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1D38(v6, v7, v8);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_6_5();
    sub_2476C74A8(v9, v10, v11, v12);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2476C6428()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const void *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;

  OUTLINED_FUNCTION_14_3();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_27();
      if (v6)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  else
  {
    v5 = v3;
  }
  v8 = *(_QWORD *)(v0 + 16);
  if (v5 <= v8)
    v9 = *(_QWORD *)(v0 + 16);
  else
    v9 = v5;
  if (!v9)
  {
    v13 = (const void *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_57_1(v2, &qword_2576B8208, (void (*)(uint64_t))type metadata accessor for SQLDatabase.AttachedLocation);
  v10 = *(_QWORD *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (const void *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_23:
    OUTLINED_FUNCTION_0();
    result = sub_24772D348();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_3((uint64_t)(v14 - v12) / v11);
LABEL_18:
  v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8) + 80);
  v17 = (v16 + 32) & ~v16;
  if ((v1 & 1) != 0)
  {
    sub_2476B2104(v0 + v17, v8, (unint64_t)v13 + v17);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v18 = OUTLINED_FUNCTION_6_5();
    sub_2476C75C8(v18, v19, v20, v21);
  }
  return (uint64_t)v13;
}

void sub_2476C65BC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_56_1(v5, &qword_2576B7C48);
    v6 = (const void *)OUTLINED_FUNCTION_8_3();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_15_3((uint64_t)(v7 - 32) / 16);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1B08(v8, v9, v10);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_6_5();
    sub_2476C76E8(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2476C667C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;

  OUTLINED_FUNCTION_14_3();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_27();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12();
    }
  }
  OUTLINED_FUNCTION_5_5();
  if (v1)
  {
    OUTLINED_FUNCTION_17_2(v5, &qword_2576B7B80, MEMORY[0x24BEE1768], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v7 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v5 = OUTLINED_FUNCTION_11_3(v7);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_16_2();
    sub_2476B1CD4(v8, v9, v10);
    OUTLINED_FUNCTION_0_7();
  }
  else
  {
    OUTLINED_FUNCTION_41_2(v5, v6, (char *)(v1 + 32));
  }
  OUTLINED_FUNCTION_44();
}

char *sub_2476C671C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C6808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_2476C8858(0, &qword_2576B8280, (uint64_t)&type metadata for SQLDynamicValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C6930(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_2476C7A94();
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C6A48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C6B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C6C40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_2476B49DC();
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

void sub_2476C6D58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  if (v5 >= a3 + 48 * v4 || v5 + 48 * v4 <= a3)
  {
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_26_3();
    return;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6();
LABEL_11:
  OUTLINED_FUNCTION_3();
  __break(1u);
}

uint64_t sub_2476C6E08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_2476C8858(0, (unint64_t *)&qword_2576B82A0, (uint64_t)&type metadata for SQLVirtualTableIndexResults.ConstraintUsage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

void sub_2476C6F38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
    goto LABEL_11;
  }
  v5 = a4 + 16 * a1 + 32;
  if (v5 >= a3 + 16 * v4 || v5 + 16 * v4 <= a3)
  {
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_26_3();
    return;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6();
LABEL_11:
  OUTLINED_FUNCTION_3();
  __break(1u);
}

char *sub_2476C6FE0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C70D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C71C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C72C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C73BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    sub_2476B443C(0, a5);
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_32();
    return v7;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6();
LABEL_11:
  result = OUTLINED_FUNCTION_3();
  __break(1u);
  return result;
}

uint64_t sub_2476C74A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C75C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476C76E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2476C8858(0, (unint64_t *)&qword_2576B7B88, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

void sub_2476C7810(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_7();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 8 * a1 + 32);
  if (v5 >= &__dst[8 * v4] || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_26_3();
    return;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6();
LABEL_11:
  OUTLINED_FUNCTION_3();
  __break(1u);
}

ValueMetadata *type metadata accessor for SonicErrorOnion()
{
  return &type metadata for SonicErrorOnion;
}

void sub_2476C78D4(uint64_t a1, _QWORD *a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v3 = OUTLINED_FUNCTION_49_1();
    sub_2476B443C(v3, v4);
    v5 = OUTLINED_FUNCTION_27_2();
    if (!v6)
      atomic_store(v5, v2);
  }
  OUTLINED_FUNCTION_35();
}

void sub_2476C7910(uint64_t a1, _QWORD *a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v3 = OUTLINED_FUNCTION_49_1();
    sub_2476C8858(v3, v4, v5, v6);
    v7 = OUTLINED_FUNCTION_27_2();
    if (!v8)
      atomic_store(v7, v2);
  }
  OUTLINED_FUNCTION_35();
}

void sub_2476C7950(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = OUTLINED_FUNCTION_27_2();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476C7994@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_2476C79CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8228)
  {
    v0 = sub_24772CFA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8228);
  }
}

void sub_2476C7A1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8258)
  {
    sub_2476B443C(255, (unint64_t *)&qword_25444C3A8);
    v0 = sub_24772CEB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8258);
  }
}

void sub_2476C7A94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576B8270)
  {
    sub_2476C8858(255, (unint64_t *)&qword_2576B7B88, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576B8270);
  }
}

unsigned __int8 *sub_2476C7B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_2476BE574();
  sub_24772C91C();
  v7 = sub_24772CB98();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_2476C7E80();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_24772D1F8();
  }
LABEL_7:
  v13 = sub_2476C7C04(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_2476C7C04(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2476C7E80()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2476C7EDC();
  v4 = sub_2476C7F10(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2476C7EDC()
{
  return sub_24772CBA4();
}

uint64_t sub_2476C7F10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_2476C8054(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_24770392C(v9, 0);
      v12 = v11;
      sub_2476C8140(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      sub_24772C91C();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x249580E20](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x249580E20);
LABEL_9:
      sub_24772D1F8();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x249580E20]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_2476C8054(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_247703998(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_247703998(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_24772CB38();
    return;
  }
  __break(1u);
}

void sub_2476C8140(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_247703998(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_24772CB44();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_24772D1F8();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_247703998(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_24772CB20();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_2476C8340(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
    goto LABEL_8;
  if ((a4 & 0x2000000000000000) != 0)
  {
    v12 = HIBYTE(a4) & 0xF;
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (_QWORD *)sub_24772D1F8();
  }
  sub_2476C8418((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
}

void sub_2476C8418(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  char v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  uint64_t v52;
  unsigned int v53;
  char v54;
  uint64_t v55;

  v11 = a3;
  v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v13) = 1;
  v14 = 4 << v13;
  v15 = a3 & 0xC;
  v16 = a3;
  if (v15 == 4 << v13)
  {
    sub_247703998(a3, a5, a6);
    v16 = v20;
  }
  v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v21 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0)
      v21 = HIBYTE(a6) & 0xF;
    if (v21 < v16 >> 16)
      goto LABEL_95;
    v18 = sub_24772CB38();
    v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    v22 = v17;
    sub_247703998(v11, a5, a6);
    v17 = v22;
    v11 = v23;
  }
  if ((a4 & 0xC) == v14)
  {
    v24 = a4;
    v25 = v17;
    sub_247703998(v24, a5, a6);
    v17 = v25;
    a4 = v26;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_11;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    v19 = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  v27 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0)
    v27 = v17;
  if (v27 < v11 >> 16)
    goto LABEL_91;
  if (v27 < a4 >> 16)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v19 = sub_24772CB38();
LABEL_22:
  v28 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v28 < v18)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v29 = (unsigned __int8 *)(a1 + v18);
  if (!a1)
    v29 = 0;
  v30 = *v29;
  if (v30 == 43)
  {
    if (v19 < 1)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      return;
    }
    if (v19 != 1)
    {
      v40 = a7 + 48;
      v41 = a7 + 55;
      v42 = a7 + 87;
      if (a7 > 10)
      {
        v40 = 58;
      }
      else
      {
        v42 = 97;
        v41 = 65;
      }
      if (v29)
      {
        v43 = 0;
        v44 = v29 + 1;
        v45 = v19 - 1;
        while (1)
        {
          v46 = *v44;
          if (v46 < 0x30 || v46 >= v40)
          {
            if (v46 < 0x41 || v46 >= v41)
            {
              if (v46 < 0x61 || v46 >= v42)
                return;
              v47 = -87;
            }
            else
            {
              v47 = -55;
            }
          }
          else
          {
            v47 = -48;
          }
          v48 = v43 * a7;
          if ((unsigned __int128)(v43 * (__int128)a7) >> 64 == (v43 * a7) >> 63)
          {
            v43 = v48 + (v46 + v47);
            if (!__OFADD__(v48, (v46 + v47)))
            {
              ++v44;
              if (--v45)
                continue;
            }
          }
          return;
        }
      }
    }
  }
  else
  {
    if (v30 == 45)
    {
      if (v19 >= 1)
      {
        if (v19 != 1)
        {
          v31 = a7 + 48;
          v32 = a7 + 55;
          v33 = a7 + 87;
          if (a7 > 10)
          {
            v31 = 58;
          }
          else
          {
            v33 = 97;
            v32 = 65;
          }
          if (v29)
          {
            v34 = 0;
            v35 = v29 + 1;
            v36 = v19 - 1;
            while (1)
            {
              v37 = *v35;
              if (v37 < 0x30 || v37 >= v31)
              {
                if (v37 < 0x41 || v37 >= v32)
                {
                  if (v37 < 0x61 || v37 >= v33)
                    return;
                  v38 = -87;
                }
                else
                {
                  v38 = -55;
                }
              }
              else
              {
                v38 = -48;
              }
              v39 = v34 * a7;
              if ((unsigned __int128)(v34 * (__int128)a7) >> 64 == (v34 * a7) >> 63)
              {
                v34 = v39 - (v37 + v38);
                if (!__OFSUB__(v39, (v37 + v38)))
                {
                  ++v35;
                  if (--v36)
                    continue;
                }
              }
              return;
            }
          }
        }
        return;
      }
      goto LABEL_93;
    }
    if (v28 != v18)
    {
      v49 = a7 + 48;
      v50 = a7 + 55;
      v51 = a7 + 87;
      if (a7 > 10)
      {
        v49 = 58;
      }
      else
      {
        v51 = 97;
        v50 = 65;
      }
      if (v29)
      {
        v52 = 0;
        while (1)
        {
          v53 = *v29;
          if (v53 < 0x30 || v53 >= v49)
          {
            if (v53 < 0x41 || v53 >= v50)
            {
              if (v53 < 0x61 || v53 >= v51)
                return;
              v54 = -87;
            }
            else
            {
              v54 = -55;
            }
          }
          else
          {
            v54 = -48;
          }
          v55 = v52 * a7;
          if ((unsigned __int128)(v52 * (__int128)a7) >> 64 == (v52 * a7) >> 63)
          {
            v52 = v55 + (v53 + v54);
            if (!__OFADD__(v55, (v53 + v54)))
            {
              ++v29;
              if (--v19)
                continue;
            }
          }
          return;
        }
      }
    }
  }
}

void sub_2476C8858(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(a1, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_35();
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return 0;
}

size_t OUTLINED_FUNCTION_7_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return swift_allocObject();
}

size_t OUTLINED_FUNCTION_11_3(_QWORD *a1)
{
  uint64_t v1;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return swift_allocError();
}

void OUTLINED_FUNCTION_15_3(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  uint64_t v0;

  return v0 + 32;
}

void OUTLINED_FUNCTION_17_2(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_2476C8858(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  return sub_24772D4C8();
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return sub_24772C9AC();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return sub_24772D48C();
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

void OUTLINED_FUNCTION_29_3()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return sub_24772C490();
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return sub_24772D480();
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return swift_arrayInitWithCopy();
}

void OUTLINED_FUNCTION_35_3()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_37_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  return sub_2476C4814(v3, v4 - 136, a3);
}

uint64_t OUTLINED_FUNCTION_38_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_41_2(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_2476C7810(0, v4, a3, v3);
}

void OUTLINED_FUNCTION_42_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), unint64_t *a5)
{
  uint64_t v5;

  sub_2476C8858(0, a5, v5, a4);
}

id OUTLINED_FUNCTION_43_2(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return 255;
}

size_t OUTLINED_FUNCTION_51_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

char *OUTLINED_FUNCTION_52_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return sub_24772CC7C();
}

uint64_t OUTLINED_FUNCTION_55_1(uint64_t a1, unint64_t *a2)
{
  return sub_2476B443C(0, a2);
}

void OUTLINED_FUNCTION_56_1(uint64_t a1, _QWORD *a2)
{
  sub_2476C7910(0, a2);
}

void OUTLINED_FUNCTION_57_1(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2476C7950(0, a2, a3);
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return sub_24772CAFC();
}

uint64_t Mergeable.merge(other:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16);
  v8(a1, v4, a4);
  v8(a2, a3, a4);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, a4);
}

uint64_t Array<A>.merged()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_24772D018();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - v7;
  v14 = a1;
  v9 = sub_24772CD48();
  MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], v9);
  if ((sub_24772CF7C() & 1) != 0)
    return OUTLINED_FUNCTION_15_4();
  v14 = a1;
  sub_24772C91C();
  v16 = sub_24772C778();
  v15 = OUTLINED_FUNCTION_15_4();
  MEMORY[0x249581078](a1, a2);
  sub_24772CCC4();
  OUTLINED_FUNCTION_6_3();
  v11 = sub_24772C76C();
  v13 = v16;
  MEMORY[0x2495822A8](MEMORY[0x24BE18D68], v11);
  if ((OUTLINED_FUNCTION_6_6() & 1) != 0)
  {
LABEL_7:
    swift_release();
    OUTLINED_FUNCTION_6_3();
    return v15;
  }
  else
  {
    v12 = MEMORY[0x24BE18D68];
    while (1)
    {
      OUTLINED_FUNCTION_6_3();
      sub_24772C760();
      swift_endAccess();
      result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, a2);
      if ((_DWORD)result == 1)
        break;
      sub_2476C8DE0((uint64_t)v8, (uint64_t)&v16, (uint64_t)&v15, a2, a3);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v8, a2);
      v13 = v16;
      MEMORY[0x2495822A8](v12, v11);
      if ((OUTLINED_FUNCTION_6_6() & 1) != 0)
        goto LABEL_7;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2476C8DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(void);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD v44[2];
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v48 = a5;
  v44[1] = a3;
  v52 = a2;
  v6 = sub_24772D018();
  v49 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)v44 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)v44 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)v44 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v44 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v44 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v50 = (char *)v44 - v23;
  v51 = v24;
  v25 = *(void (**)(void))(v24 + 16);
  v25();
  v57 = sub_24772CCE8();
  v45 = v19;
  while (1)
  {
    swift_beginAccess();
    sub_24772C76C();
    v26 = (uint64_t)v55;
    sub_24772C760();
    swift_endAccess();
    if (__swift_getEnumTagSinglePayload(v26, 1, a4) == 1)
      break;
    v27 = v51;
    v28 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v28(v22, v55, a4);
    v29 = v53;
    v30 = v50;
    (*(void (**)(char *, char *, char *, uint64_t))(v48 + 8))(v19, v53, v22, a4);
    v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    v31(v30, a4);
    ((void (*)(char *, char *, uint64_t))v25)(v30, v19, a4);
    v32 = v49;
    v33 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v54, v29, v6);
    if (__swift_getEnumTagSinglePayload(v33, 1, a4) == 1)
    {
      v34 = *(void (**)(char *, uint64_t))(v32 + 8);
      v34(v53, v6);
      v31(v19, a4);
      v31(v22, a4);
      v34(v54, v6);
    }
    else
    {
      v35 = v25;
      v36 = v46;
      v28(v46, v54, a4);
      ((void (*)(char *, char *, uint64_t))v35)(v47, v36, a4);
      sub_24772CD48();
      v37 = v22;
      v38 = v53;
      v19 = v45;
      sub_24772CD18();
      v39 = v36;
      v25 = v35;
      v31(v39, a4);
      v40 = v38;
      v22 = v37;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v6);
      v31(v19, a4);
      v31(v37, a4);
    }
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v55, v6);
  v41 = v50;
  ((void (*)(char *, char *, uint64_t))v25)(v47, v50, a4);
  swift_beginAccess();
  v42 = sub_24772CD48();
  sub_24772CD18();
  swift_endAccess();
  v56 = v57;
  swift_beginAccess();
  MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], v42);
  sub_24772C748();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v41, a4);
}

void Array<A>.merging(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a2 + 16);
  sub_24772CCDC();
  OUTLINED_FUNCTION_16_3();
  v7 = Array<A>.merged()(v4, v6, a3);
  swift_bridgeObjectRelease();
  *v3 = v7;
  OUTLINED_FUNCTION_11();
}

uint64_t Array<A>.merge()(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;

  v3 = Array<A>.merged()(*v2, *(_QWORD *)(a1 + 16), a2);
  result = OUTLINED_FUNCTION_32();
  *v2 = v3;
  return result;
}

uint64_t Array<A>.merged()(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    OUTLINED_FUNCTION_14_4(a1, &qword_2576B82B0, (uint64_t (*)(uint64_t))sub_2476CA180, MEMORY[0x24BE18BE8]);
    v1 = swift_allocObject();
    v4 = sub_2476CA6AC();
    v5 = OUTLINED_FUNCTION_8_4(v4);
    sub_2476CA048((uint64_t)v5, v6, v3, a1);
  }
  else
  {
    sub_24772C91C();
    sub_24772C73C();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_32();
  }
  v31 = (_QWORD *)v1;
  v30 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    OUTLINED_FUNCTION_6_3();
    if ((uint64_t)v31[3] < 1)
    {
      v26 = 0;
      v24 = 0u;
      v25 = 0u;
      goto LABEL_14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_2476CA1D4();
    v7 = v31;
    result = OUTLINED_FUNCTION_18_4((uint64_t)&v7[5 * v7[4]], v20, v21, v22, v23);
    v9 = v7[4];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v12 = v7[3];
    if (v11 >= v7[2])
      v11 = 0;
    v7[4] = v11;
    if (__OFSUB__(v12, 1))
      goto LABEL_18;
    v7[3] = v12 - 1;
LABEL_14:
    v13 = swift_endAccess();
    if (!*((_QWORD *)&v25 + 1))
    {
      swift_release();
      sub_2476CA12C((uint64_t)&v24);
      OUTLINED_FUNCTION_6_3();
      return v30;
    }
    OUTLINED_FUNCTION_11_4(v13, v14, v15, v16);
    v17 = v28;
    v18 = v29;
    v19 = __swift_project_boxed_opaque_existential_1(v27, v28);
    sub_2476C943C((uint64_t)v19, (uint64_t *)&v31, (uint64_t)&v30, v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2476C943C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  sub_2476C9FC0(a4, a4);
  v9 = *(_QWORD *)(a4 - 8);
  swift_allocObject();
  sub_24772CCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, a1, a4);
  sub_24772CD48();
  swift_beginAccess();
  sub_2476CA9B4(0, &qword_2576B82C0, (uint64_t (*)(uint64_t))sub_2476CA180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE18D48]);
  sub_2476CAA0C();
  swift_retain();
  sub_24772CBC8();
  swift_release();
  v11 = sub_24772CCDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = sub_2476CA738((uint64_t (*)(_BYTE *))sub_2476CAA64);
  result = *a2;
  v14 = *(_QWORD *)(*a2 + 24);
  if (v14 < v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_2476CA1D4();
  sub_247721068(v12, v14, (uint64_t *)(*a2 + 16), *a2 + 40);
  swift_endAccess();
  Array<A>.merged()(v11, a4, a5);
  swift_bridgeObjectRelease();
  sub_2476CA180();
  v15 = sub_24772D2F4();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_2476C99CC(v15);
  return swift_endAccess();
}

uint64_t sub_2476C9674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  _BYTE v7[40];

  sub_2476B3F38(a1, (uint64_t)v7);
  sub_2476CA180();
  v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_2476C96E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2476B3F38(v4, (uint64_t)v10);
  sub_2476CA180();
  v7 = swift_dynamicCast();
  if ((_DWORD)v7)
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7;
}

uint64_t sub_2476C9794(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (*v1 >> 62)
  {
    OUTLINED_FUNCTION_2_2();
    v3 = sub_24772D390();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = v3 + v2;
  if (__OFADD__(v3, v2))
  {
    __break(1u);
    goto LABEL_20;
  }
  v5 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v5;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v8 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v4 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_12;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    OUTLINED_FUNCTION_2_2();
    sub_24772D390();
    OUTLINED_FUNCTION_16_3();
  }
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_7_6();
  *v1 = MEMORY[0x249581528]();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_4();
LABEL_12:
  v9 = *(_QWORD *)(v8 + 16);
  v10 = (*(_QWORD *)(v8 + 24) >> 1) - v9;
  v11 = sub_247702AD0(&v24, v8 + 8 * v9 + 32, v10);
  if ((uint64_t)v11 < v2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((uint64_t)v11 >= 1)
  {
    OUTLINED_FUNCTION_9_4();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = __OFADD__(v13, v11);
    v15 = (char *)v11 + v13;
    if (v14)
    {
      __break(1u);
      goto LABEL_32;
    }
    *(_QWORD *)(v12 + 16) = v15;
  }
  if (v11 == (unint64_t *)v10)
  {
LABEL_21:
    v7 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = sub_2476C9F34();
    if (!v17)
      goto LABEL_17;
    v18 = v17;
    while (1)
    {
      OUTLINED_FUNCTION_9_4();
      if (v7 + 1 > *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_24772CCD0();
        OUTLINED_FUNCTION_9_4();
      }
      v20 = *(_QWORD *)(v19 + 24);
      if (v7 < (uint64_t)(v20 >> 1))
        break;
LABEL_30:
      *(_QWORD *)(v19 + 16) = v7;
    }
    v21 = v20 >> 1;
    v22 = v19 + 32;
    while (1)
    {
      *(_QWORD *)(v22 + 8 * v7++) = v18;
      v23 = sub_2476C9F34();
      if (!v23)
        break;
      v18 = v23;
      if (v7 >= v21)
      {
        OUTLINED_FUNCTION_9_4();
        goto LABEL_30;
      }
    }
LABEL_32:
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
  }
LABEL_17:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_24772CCA0();
}

void sub_2476C99CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v5 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (v4 <= v5)
      v8 = v4 + v2;
    else
      v8 = v4;
    sub_2476C5A78(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    v3 = v9;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_2476B270C(a1 + 32, v2);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v10 = *(_QWORD *)(v3 + 16);
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    *(_QWORD *)(v3 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_2476C9AA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_3_6();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_2_5() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_7_6();
    sub_2476C5CA8(v6, v7, v8, v9);
    v2 = v10;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_7();
  if (v11 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = OUTLINED_FUNCTION_10_4();
  sub_2476B2AA8(v12, v13);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_32();
    *v1 = v2;
    OUTLINED_FUNCTION_11();
    return;
  }
  OUTLINED_FUNCTION_17_3();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v14;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_2476C9B44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!OUTLINED_FUNCTION_2_5() || (v10 = *(_QWORD *)(v7 + 24) >> 1, v10 < v8 + v6))
  {
    OUTLINED_FUNCTION_7_6();
    sub_2476C5EEC();
    v7 = v11;
    v10 = *(_QWORD *)(v11 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *v4 = v7;
      return;
    }
    __break(1u);
  }
  if (v10 - *(_QWORD *)(v7 + 16) < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_2476B2B50();
  if (v6 <= 0)
    goto LABEL_13;
  OUTLINED_FUNCTION_17_3();
  if (!v13)
  {
    *(_QWORD *)(v7 + 16) = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_2476C9C3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_3_6();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_2_5() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_7_6();
    sub_2476C6380();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_7();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = OUTLINED_FUNCTION_10_4();
  sub_2476B2D7C(v8, v9);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_32();
    *v1 = v2;
    OUTLINED_FUNCTION_11();
    return;
  }
  OUTLINED_FUNCTION_17_3();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_2476C9CD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_3_6();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_2_5() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_7_6();
    sub_2476C5B34();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_7();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_10_4();
  sub_2476B2874();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_32();
    *v1 = v2;
    OUTLINED_FUNCTION_11();
    return;
  }
  OUTLINED_FUNCTION_17_3();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t Array<A>.merging(contentsOf:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v1 = v0;
  v31[0] = *v0;
  v2 = sub_24772C91C();
  v3 = v31;
  sub_2476C99CC(v2);
  v5 = v31[0];
  v6 = *(_QWORD *)(v31[0] + 16);
  if (v6)
  {
    OUTLINED_FUNCTION_14_4(v4, &qword_2576B82B0, (uint64_t (*)(uint64_t))sub_2476CA180, MEMORY[0x24BE18BE8]);
    v3 = (_QWORD *)swift_allocObject();
    v7 = sub_2476CA6AC();
    v8 = OUTLINED_FUNCTION_8_4(v7);
    sub_2476CA048((uint64_t)v8, v9, v6, v5);
  }
  else
  {
    sub_24772C91C();
    sub_24772C73C();
    OUTLINED_FUNCTION_12_2();
    swift_bridgeObjectRelease();
  }
  v35 = v3;
  v34 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    OUTLINED_FUNCTION_6_3();
    if ((uint64_t)v35[3] < 1)
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
      goto LABEL_14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_2476CA1D4();
    v10 = v35;
    result = OUTLINED_FUNCTION_18_4((uint64_t)&v10[5 * v10[4]], v24, v25, v26, v27);
    v12 = v10[4];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v15 = v10[3];
    if (v14 >= v10[2])
      v14 = 0;
    v10[4] = v14;
    if (__OFSUB__(v15, 1))
      goto LABEL_18;
    v10[3] = v15 - 1;
LABEL_14:
    v16 = swift_endAccess();
    if (!*((_QWORD *)&v29 + 1))
    {
      swift_release();
      sub_2476CA12C((uint64_t)&v28);
      OUTLINED_FUNCTION_6_3();
      v23 = v34;
      result = swift_bridgeObjectRelease();
      *v1 = v23;
      return result;
    }
    OUTLINED_FUNCTION_11_4(v16, v17, v18, v19);
    v20 = v32;
    v21 = v33;
    v22 = __swift_project_boxed_opaque_existential_1(v31, v32);
    sub_2476C943C((uint64_t)v22, (uint64_t *)&v35, (uint64_t)&v34, v20, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2476C9F34()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v11;
  _QWORD v12[2];
  char v13;

  v2 = v0[2];
  v1 = v0[3];
  v3 = *(_QWORD *)(v2 + 16);
  if (v1 == v3)
    return 0;
  if (v1 >= v3)
  {
    __break(1u);
  }
  else
  {
    v5 = v1 + 1;
    v6 = v2 + 24 * v1;
    v7 = *(_BYTE *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 32);
    v8 = *(_QWORD *)(v6 + 40);
    v0[3] = v5;
    v10 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[4];
    v12[0] = v9;
    v12[1] = v8;
    v13 = v7;
    swift_retain();
    v10(&v11, v12);
    swift_release();
    return v11;
  }
  return result;
}

void sub_2476C9FC0(uint64_t a1, uint64_t a2)
{
  if (dynamic_cast_existential_0_class_conditional(a2))
    sub_2476CAAAC();
  else
    sub_24772D48C();
}

unint64_t sub_2476C9FFC(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_2476CA048(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result;
  v6 = *(_QWORD *)(a4 + 16);
  if (!v6)
  {
LABEL_9:
    *(_QWORD *)(v5 + 8) = a3;
    return result;
  }
  if (v6 > a3)
    goto LABEL_11;
  if (a4 + 32 >= a2 + 40 * v6 || a4 + 32 + 40 * v6 <= a2)
  {
    sub_2476CA180();
    result = swift_arrayInitWithCopy();
    goto LABEL_9;
  }
LABEL_12:
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_2476CA12C(uint64_t a1)
{
  uint64_t v2;

  sub_2476CA9B4(0, &qword_2576B82A8, (uint64_t (*)(uint64_t))sub_2476CA180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2476CA180()
{
  unint64_t result;

  result = qword_2576B7C30;
  if (!qword_2576B7C30)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B7C30);
  }
  return result;
}

uint64_t sub_2476CA1D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;

  v1 = *v0;
  v2 = (uint64_t *)(*v0 + 16);
  v3 = *v2;
  sub_2476CA9B4(0, &qword_2576B82B0, (uint64_t (*)(uint64_t))sub_2476CA180, MEMORY[0x24BE18BE8]);
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1)
    sub_2476CA340(v4 + 16, v4 + 40, v2, v1 + 40);
  result = swift_release();
  *v0 = v4;
  return result;
}

uint64_t sub_2476CA280()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;

  v1 = *v0;
  v2 = OUTLINED_FUNCTION_13_5();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  OUTLINED_FUNCTION_14_4(v2, &qword_2576B82B8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, MEMORY[0x24BE18BE8]);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1)
    sub_2476CA4B4(v5 + 16, v5 + ((v4 + 40) & ~v4), (_QWORD *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_2476CA340(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = a3[1];
  if (v5 < v7)
  {
    v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v9 = *a3 - v4;
      v10 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = 0;
  v8 = 0;
  v9 = a3[1];
LABEL_6:
  if (v9 < 1)
    goto LABEL_14;
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11 = a4 + 40 * v4;
  v12 = a2 + 40 * v4;
  if (v11 < v12 + 40 * v9 && v12 < v11 + 40 * v9)
    goto LABEL_29;
  sub_2476CA180();
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 40 * v8 <= v10 || v10 + 40 * v8 <= a2)
      {
        sub_2476CA180();
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      result = sub_24772D3B4();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_2476CA4B4(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  result = type metadata accessor for ActorQueue.QueuedTask();
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = 0;
  v10 = 0;
  v11 = v8;
LABEL_6:
  v13 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (v11 < 1)
    goto LABEL_14;
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v14 = a4 + v13 * v4;
  v15 = a2 + v13 * v4;
  if (v14 < v15 + v13 * v11 && v15 < v14 + v13 * v11)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + v13 * v10 <= v12 || v12 + v13 * v10 <= a2)
        return swift_arrayInitWithCopy();
LABEL_29:
      result = sub_24772D3B4();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

void sub_2476CA620(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1[2];
  v5 = *a1 - v4;
  if (__OFSUB__(*a1, v4))
  {
    __break(1u);
  }
  else
  {
    v7 = a1[1];
    v8 = OUTLINED_FUNCTION_13_5();
    if (v5 >= v7)
    {
      v9 = 0;
      v10 = 0;
      v11 = v7;
LABEL_6:
      *(_QWORD *)a3 = a2 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v4;
      *(_QWORD *)(a3 + 8) = v11;
      *(_QWORD *)(a3 + 16) = v9;
      *(_QWORD *)(a3 + 24) = v10;
      *(_BYTE *)(a3 + 32) = v5 >= v7;
      OUTLINED_FUNCTION_11();
      return;
    }
    v10 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v11 = v5;
      v9 = a2;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_2476CA6AC()
{
  const void *v0;

  return (uint64_t)(_swift_stdlib_malloc_size(v0) - 40) / 40;
}

uint64_t dispatch thunk of Mergeable.merge(other:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_2476CA6D8()
{
  const void *v0;
  size_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;

  v1 = _swift_stdlib_malloc_size(v0);
  result = OUTLINED_FUNCTION_13_5();
  v3 = *(_QWORD *)(result - 8);
  v4 = *(_QWORD *)(v3 + 72);
  if (v4)
  {
    v5 = v1 - ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    if (v4 != -1 || v5 != 0x8000000000000000)
      return v5 / v4;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2476CA738(uint64_t (*a1)(_BYTE *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _BYTE v30[40];
  __int128 v31[2];

  v3 = v2;
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 24);
  if (v5)
  {
    v6 = v1;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v9 >= v5)
      {
        __break(1u);
        goto LABEL_38;
      }
      v10 = v4[4];
      if (v9 + v10 >= v4[2])
        v11 = v4[2];
      else
        v11 = 0;
      sub_2476B3F38((uint64_t)&v4[5 * v9 + 5 + 5 * (v10 - v11)], (uint64_t)v31);
      sub_2476B3F20(v31, (uint64_t)v30);
      v12 = a1(v30);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if (v3)
      {
        swift_release();
        return v9;
      }
      if ((v12 & 1) != 0)
        break;
      ++v9;
      v5 = v4[3];
      if (v9 == v5)
      {
        swift_release();
        return *(_QWORD *)(*v6 + 24);
      }
    }
    result = swift_release();
    v13 = *v6;
    v14 = *(_QWORD *)(*v6 + 24);
    if (v14 - 1 == v9)
      return v9;
    v15 = v9 + 1;
    while (v15 < v14)
    {
      v16 = *(_QWORD *)(v13 + 32);
      if (v15 + v16 >= *(_QWORD *)(v13 + 16))
        v17 = *(_QWORD *)(v13 + 16);
      else
        v17 = 0;
      sub_2476B3F38(v13 + 40 * (v15 + v16 - v17) + 40, (uint64_t)v31);
      sub_2476B3F20(v31, (uint64_t)v30);
      v18 = a1(v30);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if ((v18 & 1) == 0)
      {
        if (v9 < 0)
          goto LABEL_39;
        result = *v6;
        v19 = *(_QWORD *)(*v6 + 24);
        if (v9 >= v19)
          goto LABEL_40;
        if (v15 >= v19)
          goto LABEL_41;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
          result = sub_2476CA1D4();
        v20 = *(_QWORD *)(*v6 + 32);
        v21 = *(_QWORD *)(*v6 + 16);
        if (v20 + v9 >= v21)
          v22 = *(_QWORD *)(*v6 + 16);
        else
          v22 = 0;
        v23 = v20 + v9 - v22;
        if (v15 + v20 < v21)
          v21 = 0;
        v24 = v15 + v20 - v21;
        if (v24 != v23)
        {
          v25 = *v6 + 40;
          v26 = v25 + 40 * v23;
          v27 = v25 + 40 * v24;
          sub_2476B3F20((__int128 *)v26, (uint64_t)v31);
          v28 = *(_QWORD *)(v27 + 32);
          v29 = *(_OWORD *)(v27 + 16);
          *(_OWORD *)v26 = *(_OWORD *)v27;
          *(_OWORD *)(v26 + 16) = v29;
          *(_QWORD *)(v26 + 32) = v28;
          result = sub_2476B3F20(v31, v27);
        }
        ++v9;
      }
      ++v15;
      v13 = *v6;
      v14 = *(_QWORD *)(*v6 + 24);
      if (v15 == v14)
        return v9;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_2476CA99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2476C9674(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_2476CA9B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_2476CAA0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B82C8;
  if (!qword_2576B82C8)
  {
    sub_2476CA9B4(255, &qword_2576B82C0, (uint64_t (*)(uint64_t))sub_2476CA180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE18D48]);
    result = MEMORY[0x2495822A8](MEMORY[0x24BE18D60], v1);
    atomic_store(result, (unint64_t *)&qword_2576B82C8);
  }
  return result;
}

uint64_t sub_2476CAA64(uint64_t a1)
{
  uint64_t v1;

  return sub_2476C96E8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

void sub_2476CAAAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B82D0)
  {
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, &qword_2576B82D0);
  }
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return sub_24772CF7C();
}

_QWORD *OUTLINED_FUNCTION_8_4(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = 0;
  v1[4] = 0;
  return v1 + 2;
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_11_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  __int128 v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, __int128);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  return sub_2476B3F20((__int128 *)va, (uint64_t)va1);
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return type metadata accessor for ActorQueue.QueuedTask();
}

void OUTLINED_FUNCTION_14_4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_2476CA9B4(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return sub_24772CCE8();
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_2476B3F20((__int128 *)(a1 + 40), (uint64_t)va);
}

void LRUDictionary.init(maximumCount:maximumCost:)()
{
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CAC28()
{
  OUTLINED_FUNCTION_1_5();
  sub_24772CCE8();
  sub_24772C6C4();
  sub_2476CDD68();
}

void sub_2476CAC78()
{
  __n128 v0;
  uint64_t v1;
  __n128 v2;

  OUTLINED_FUNCTION_0_8(v1, v2, v0);
}

void LRUDictionary.init<A>(uniqueKeysWithValues:)()
{
  sub_2476CB2BC();
}

{
  sub_2476CB2BC();
}

void sub_2476CACCC()
{
  swift_getTupleTypeMetadata2();
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476CAD40()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v0(v2, v2 + *(int *)(TupleTypeMetadata2 + 48), v1, v3);
}

uint64_t sub_2476CAD98(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  int EnumTagSinglePayload;
  char *v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v38 = a8;
  v39 = a5;
  v9 = v8;
  v52 = a1;
  v53 = a2;
  v37 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v51 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)v36 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v42 = (char *)v36 - v17;
  v18 = sub_24772D018();
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v36 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v36[1] = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v46 = (char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a6;
  v55 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v49 = (char *)v36 - v28;
  v29 = sub_24772CBBC();
  v56 = sub_24772C8D4();
  sub_24772D270();
  sub_24772D21C();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v44, v15);
  v47 = v15;
  result = sub_24772CBB0();
  if (v29 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v29)
  {
    swift_getAssociatedConformanceWitness();
    v31 = v49;
    while (1)
    {
      sub_24772D054();
      result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v52(v23, v51);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v51, v39);
        return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      sub_24772D258();
      if (!--v29)
      {
        v32 = (uint64_t)v48;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v32 = (uint64_t)v48;
  v31 = v49;
LABEL_9:
  sub_24772D054();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, AssociatedTypeWitness);
  v34 = v42;
  if (EnumTagSinglePayload == 1)
  {
    v35 = (uint64_t)v48;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v41);
    return v56;
  }
  else
  {
    v51 = *(char **)(v54 + 32);
    v35 = (uint64_t)v48;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v51)(v34, v35, AssociatedTypeWitness);
      v52(v34, v50);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
      sub_24772D258();
      sub_24772D054();
      if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v50, v39);
  }
}

void sub_2476CB2BC()
{
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CB330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  void (*v31)(char *, char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = OUTLINED_FUNCTION_1_5();
  a31 = sub_2476CAD98(v31, (uint64_t)&a13, v32, v34, MEMORY[0x24BEE4078], v33, MEMORY[0x24BEE40A8], v35);
  v36 = sub_24772CD48();
  MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v36);
  sub_24772C6D0();
  sub_2476CDD68();
}

void sub_2476CB3D4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __n128 v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  OUTLINED_FUNCTION_0_8(v3, v4, v2);
}

void sub_2476CB428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v14, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a4, a6);
  sub_2476CDECC((uint64_t)v12, a6, a2);
}

void sub_2476CB4E8()
{
  swift_getTupleTypeMetadata2();
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476CB560()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v0(v2, v2 + *(int *)(TupleTypeMetadata2 + 48), v1, v3);
}

uint64_t sub_2476CB5BC(uint64_t a1, uint64_t a2)
{
  return sub_2476CB620(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2476CACCC);
}

void sub_2476CB5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2476CB428(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_2476CB604(uint64_t a1, uint64_t a2)
{
  return sub_2476CB620(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2476CB4E8);
}

uint64_t sub_2476CB620(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

void OUTLINED_FUNCTION_0_8(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(__n128 *)v7 = a3;
  *(_QWORD *)(v7 + 16) = a1;
  *(__n128 *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 40) = v3;
  *(_BYTE *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_BYTE *)(v7 + 64) = v6;
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_2476CB688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_24772CDF0();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_2476BD9C0(a1);
  }
  else
  {
    sub_24772CDE4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void static Task<>.retrying(priority:count:delay:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2476CB8A8(a1, (uint64_t)v14);
  v15 = OUTLINED_FUNCTION_8_3();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a2;
  *(_QWORD *)(v15 + 48) = a3;
  *(_QWORD *)(v15 + 56) = a4;
  *(double *)(v15 + 64) = a6;
  swift_retain();
  OUTLINED_FUNCTION_19_2((uint64_t)v14, (uint64_t)&unk_2576B82E0, v15);
  OUTLINED_FUNCTION_7_7();
}

void sub_2476CB854()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7F28)
  {
    sub_24772CDF0();
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, &qword_2576B7F28);
  }
}

uint64_t sub_2476CB8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2476CB854();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2476CB8EC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(double *)(v7 + 48) = a2;
  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 40) = a7;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a5;
  return swift_task_switch();
}

void sub_2476CB90C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = v0[3];
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v1)
    {
      v0[7] = 0;
      v2 = (_QWORD *)OUTLINED_FUNCTION_4_2();
      v0[8] = v2;
    }
    else
    {
      sub_24772CE98();
      v2 = (_QWORD *)OUTLINED_FUNCTION_4_2();
      v0[10] = v2;
    }
    v3 = OUTLINED_FUNCTION_37_3(v2);
    OUTLINED_FUNCTION_5_6(v3, v4);
  }
}

uint64_t sub_2476CB9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CB9EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2476CBA18()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 48) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_2476CBAB0;
    sub_24772CEA4();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2476CBAB0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CBAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 56) + 1;
  result = MEMORY[0x2495821C4](*(_QWORD *)(v0 + 72));
  if (v2 == v1)
  {
    v4 = *(_QWORD *)(v0 + 96);
    sub_24772CE98();
    if (v4)
      return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
    v6 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 80) = v6;
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(v0 + 56) + 1;
  *(_QWORD *)(v0 + 56) = v5;
  if (v5 != *(_QWORD *)(v0 + 24))
  {
    v6 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 64) = v6;
LABEL_7:
    v7 = OUTLINED_FUNCTION_37_3(v6);
    return v8(v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_2476CBBBC()
{
  uint64_t v0;

  MEMORY[0x2495821C4](*(_QWORD *)(v0 + 72));
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476CBBE8()
{
  return objectdestroyTm();
}

uint64_t sub_2476CBBF0(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 5);
  v7 = *((_QWORD *)v1 + 6);
  v8 = *((_QWORD *)v1 + 7);
  v9 = v1[8];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_157(v10);
  *v11 = v2;
  v11[1] = sub_2476CD5EC;
  return sub_2476CB8EC(a1, v9, v4, v5, v6, v7, v8);
}

void static Task<>.delayed(by:priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_28_3();
  sub_2476CB8A8(a1, v5);
  v12 = OUTLINED_FUNCTION_8_3();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = a4;
  *(double *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = a2;
  *(_QWORD *)(v12 + 56) = a3;
  swift_retain();
  OUTLINED_FUNCTION_19_2(v5, (uint64_t)&unk_2576B82F0, v12);
  OUTLINED_FUNCTION_7_7();
}

uint64_t sub_2476CBD24(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  *(double *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

void sub_2476CBD44()
{
  uint64_t v0;
  double v1;
  char v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_35_4(*(double *)(v0 + 24), 1000000000.0);
  if (v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_2476CBDC8;
    OUTLINED_FUNCTION_16_4();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2476CBDC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v3 + 8));
  v5 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v3;
  v5[1] = sub_2476CBE44;
  return OUTLINED_FUNCTION_5_6(*(_QWORD *)(v2 + 16), v6);
}

uint64_t sub_2476CBE44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476CBE70()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  OUTLINED_FUNCTION_27_3();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2476CBEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_3();
  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_157(v3);
  v5 = OUTLINED_FUNCTION_23_3(v4);
  return sub_2476CBD24(v6, v5, v7, v8, v2, v1);
}

void static Task<>.timeout(by:priority:operation:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_24_4();
  v11 = (_QWORD *)OUTLINED_FUNCTION_8_3();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a5;
  v11[5] = a3;
  OUTLINED_FUNCTION_36_2((uint64_t)v11);
  v12 = OUTLINED_FUNCTION_19_2((uint64_t)v10, (uint64_t)&unk_2576B8300, (uint64_t)v11);
  OUTLINED_FUNCTION_24_4();
  v13 = OUTLINED_FUNCTION_8_3();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = a5;
  *(double *)(v13 + 40) = a1;
  OUTLINED_FUNCTION_36_2(v13);
  v14 = OUTLINED_FUNCTION_19_2((uint64_t)v10, (uint64_t)&unk_2576B8310, v13);
  OUTLINED_FUNCTION_24_4();
  v15 = (_QWORD *)OUTLINED_FUNCTION_8_3();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a5;
  v15[5] = v12;
  v15[6] = v14;
  OUTLINED_FUNCTION_19_2((uint64_t)v10, (uint64_t)&unk_2576B8320, (uint64_t)v15);
  OUTLINED_FUNCTION_7_7();
}

uint64_t sub_2476CC028(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_2476CC08C;
  return v8(a1);
}

uint64_t sub_2476CC08C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476CC0C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_8_5();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_157(v1);
  *v2 = v0;
  v2[1] = sub_2476CD5EC;
  v3 = OUTLINED_FUNCTION_13_6();
  return v4(v3);
}

uint64_t sub_2476CC130(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  return swift_task_switch();
}

void sub_2476CC14C()
{
  uint64_t v0;
  double v1;
  char v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_35_4(*(double *)(v0 + 16), 1000000000.0);
  if (v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_2476CC1D0;
    OUTLINED_FUNCTION_16_4();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2476CC1D0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  if (v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CC214()
{
  uint64_t v0;

  sub_2476BAF4C();
  sub_24772CE74();
  sub_24772CD9C();
  sub_2476CD5AC();
  swift_allocError();
  sub_24772C8E0();
  swift_willThrow();
  return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t objectdestroy_7Tm()
{
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_26_4();
  return swift_deallocObject();
}

uint64_t sub_2476CC2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_3();
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_157(v3);
  v5 = OUTLINED_FUNCTION_23_3(v4);
  return sub_2476CC130(v5, v6, v7, v8, v2, v1);
}

uint64_t sub_2476CC318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  v6[5] = sub_2476BAF4C();
  *v7 = v6;
  v7[1] = sub_2476CC3A0;
  return sub_24772CE68();
}

uint64_t sub_2476CC3A0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  if (v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CC3E4()
{
  uint64_t v0;

  sub_24772CE74();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476CC41C()
{
  OUTLINED_FUNCTION_27_3();
  swift_release();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_26_4();
  return swift_deallocObject();
}

uint64_t sub_2476CC440()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_5();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_157(v1);
  *v2 = v0;
  v2[1] = sub_2476CD5EC;
  v3 = OUTLINED_FUNCTION_13_6();
  return sub_2476CC318(v3, v4, v5, v6, v7, v8);
}

uint64_t Task<>.wait(timeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2476CC4AC(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  dispatch_semaphore_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  NSObject *v15;
  NSObject *v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a4;
  v21 = a1;
  v20 = sub_24772D018();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v9 = (char *)&v19 - v8;
  sub_2476CB854();
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_3();
  v11 = dispatch_semaphore_create(0);
  type metadata accessor for _OpaqueResult(0, a3, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
  v12 = sub_2476CC710();
  v13 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v11;
  v14[5] = v12;
  v14[6] = a2;
  v15 = v11;
  swift_retain_n();
  v16 = v15;
  swift_retain();
  sub_2476CCD50(v4, (uint64_t)&unk_2576B8330, (uint64_t)v14, a3);

  OUTLINED_FUNCTION_33_4();
  swift_release();
  if ((sub_24772CFF4() & 1) != 0)
  {
    sub_2476CCE8C();
    swift_allocError();
    swift_willThrow();

    return OUTLINED_FUNCTION_33_4();
  }
  else
  {
    v17 = (char *)v12 + *(_QWORD *)(*v12 + 104);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v20);
    result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, a3);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_33_4();

      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v19, v9, a3);
    }
  }
  return result;
}

uint64_t sub_2476CC4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  dispatch_semaphore_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  id v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v23 = a4;
  v6 = sub_24772D018();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - v7;
  sub_2476CB854();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = dispatch_semaphore_create(0);
  v13 = sub_2476BAF4C();
  type metadata accessor for _OpaqueResult(0, a3, v13, MEMORY[0x24BEE3F20]);
  v14 = sub_2476CC710();
  v15 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v12;
  v16[5] = v14;
  v16[6] = a2;
  v17 = v12;
  swift_retain_n();
  v18 = v17;
  swift_retain();
  sub_2476CB688((uint64_t)v11, (uint64_t)&unk_2576B83E8, (uint64_t)v16);

  swift_release();
  swift_release();
  if ((sub_24772CFF4() & 1) != 0)
  {
    sub_2476CCE8C();
    swift_allocError();
    goto LABEL_5;
  }
  v19 = *(void **)((char *)v14 + *(_QWORD *)(*v14 + 112));
  if (v19)
  {
    v20 = v19;
LABEL_5:
    swift_willThrow();

    return swift_release();
  }
  v22 = (char *)v14 + *(_QWORD *)(*v14 + 104);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v8, v22, v25);
  result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, a3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v23, v8, a3);
  }
  return result;
}

uint64_t *sub_2476CC710()
{
  swift_allocObject();
  return sub_2476CD398();
}

uint64_t sub_2476CC740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = *(_QWORD *)(*(_QWORD *)a5 + 80);
  v6 = sub_24772D018();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v7 = (_QWORD *)swift_task_alloc();
  v5[13] = v7;
  *v7 = v5;
  v7[1] = sub_2476CC804;
  return sub_24772CE68();
}

uint64_t sub_2476CC804()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CC858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_22_2();
  swift_endAccess();
  OUTLINED_FUNCTION_21_2();
  result = __swift_getEnumTagSinglePayload(v0, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_11_5();
    sub_24772D000();
    OUTLINED_FUNCTION_70();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  return result;
}

uint64_t sub_2476CC8E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v4 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v1;
  v5 = v1;
  MEMORY[0x2495821C4](v4);
  swift_willThrow();
  sub_24772D000();
  OUTLINED_FUNCTION_70();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for _OpaqueResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _OpaqueResult);
}

uint64_t sub_2476CCB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = *(_QWORD *)(*(_QWORD *)a5 + 80);
  v6 = sub_24772D018();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v7 = (_QWORD *)swift_task_alloc();
  v5[13] = v7;
  *v7 = v5;
  v7[1] = sub_2476CCC38;
  return sub_24772CE80();
}

uint64_t sub_2476CCC38()
{
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CCC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_22_2();
  swift_endAccess();
  OUTLINED_FUNCTION_21_2();
  result = __swift_getEnumTagSinglePayload(v0, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_11_5();
    sub_24772D000();
    OUTLINED_FUNCTION_70();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  return result;
}

uint64_t sub_2476CCCFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_8_5();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_10_5(v1);
  return sub_2476CCB80(v2, v3, v4, v5, v6);
}

uint64_t sub_2476CCD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = sub_24772CDF0();
  if (__swift_getEnumTagSinglePayload(a1, 1, v8) == 1)
  {
    sub_2476BD9C0(a1);
  }
  else
  {
    sub_24772CDE4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  return swift_task_create();
}

unint64_t sub_2476CCE8C()
{
  unint64_t result;

  result = qword_2576B8338;
  if (!qword_2576B8338)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for TaskUnsafeTimeout, &type metadata for TaskUnsafeTimeout);
    atomic_store(result, (unint64_t *)&qword_2576B8338);
  }
  return result;
}

uint64_t Result<>.init(catching:)(uint64_t a1, int *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v2[2] = a1;
  sub_2476BAF4C();
  v4 = sub_24772D654();
  v2[3] = v4;
  v2[4] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[5] = v5;
  v8 = (uint64_t (*)(void))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v2[6] = v6;
  *v6 = v2;
  v6[1] = sub_2476CCF78;
  return OUTLINED_FUNCTION_5_6(v5, v8);
}

uint64_t sub_2476CCF78()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 56) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476CCFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476CD028()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static TaskUnsafeTimeout.== infix(_:_:)()
{
  return 1;
}

uint64_t TaskUnsafeTimeout.hash(into:)()
{
  return sub_24772D60C();
}

uint64_t TaskUnsafeTimeout.hashValue.getter()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  return 1;
}

uint64_t sub_2476CD0D8()
{
  return TaskUnsafeTimeout.hashValue.getter();
}

uint64_t sub_2476CD0EC()
{
  return TaskUnsafeTimeout.hash(into:)();
}

uint64_t sub_2476CD100()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

unint64_t sub_2476CD140()
{
  unint64_t result;

  result = qword_2576B8348[0];
  if (!qword_2576B8348[0])
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for TaskUnsafeTimeout, &type metadata for TaskUnsafeTimeout);
    atomic_store(result, qword_2576B8348);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TaskUnsafeTimeout(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for TaskUnsafeTimeout(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2476CD210 + 4 * byte_24772EC90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2476CD230 + 4 * byte_24772EC95[v4]))();
}

_BYTE *sub_2476CD210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2476CD230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2476CD238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2476CD240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2476CD248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2476CD250(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TaskUnsafeTimeout()
{
  return &type metadata for TaskUnsafeTimeout;
}

uint64_t sub_2476CD26C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24772D018();
  if (v1 <= 0x3F)
  {
    result = sub_24772D018();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2476CD2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = sub_24772D018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v4 = sub_24772D018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_2476CD378()
{
  sub_2476CD2FC();
  return swift_deallocClassInstance();
}

uint64_t *sub_2476CD398()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  __swift_storeEnumTagSinglePayload((uint64_t)v0 + *(_QWORD *)(*v0 + 104), 1, 1, *(_QWORD *)(*v0 + 80));
  __swift_storeEnumTagSinglePayload((uint64_t)v0 + *(_QWORD *)(*v0 + 112), 1, 1, *(_QWORD *)(v1 + 88));
  return v0;
}

uint64_t sub_2476CD3EC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2476CD450;
  return v6(a1);
}

uint64_t sub_2476CD450()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476CD488()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2476CD4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 24);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_157(v5);
  *v6 = v2;
  v6[1] = sub_2476CD5EC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2576B83D0 + dword_2576B83D0))(a1, v4);
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_27_3();

  swift_release();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_26_4();
  return swift_deallocObject();
}

uint64_t sub_2476CD558()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_8_5();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_10_5(v1);
  return sub_2476CC740(v2, v3, v4, v5, v6);
}

unint64_t sub_2476CD5AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B83F0[0];
  if (!qword_2576B83F0[0])
  {
    v1 = sub_24772CD9C();
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE6848], v1);
    atomic_store(result, qword_2576B83F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  uint64_t v0;

  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 96), 0, 1, *(_QWORD *)(v0 + 64));
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_6(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_10_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0[8] - 8) + 32))(v0[5], v0[11]);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_24772CEA4();
}

uint64_t OUTLINED_FUNCTION_19_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2476CB688(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v2, v0, v1);
}

double OUTLINED_FUNCTION_23_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2476CB8A8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return swift_release();
}

void OUTLINED_FUNCTION_32_2()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return swift_release();
}

void OUTLINED_FUNCTION_34_4()
{
  sub_2476CB854();
}

double OUTLINED_FUNCTION_35_4(double a1, double a2)
{
  return a1 * a2;
}

uint64_t OUTLINED_FUNCTION_36_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 48) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_37_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

void LRUDictionary.init(dictionaryLiteral:)()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  v0 = sub_24772CD48();
  MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v0);
  LRUDictionary.init<A>(uniqueKeysWithValues:)();
}

void sub_2476CD874()
{
  LRUDictionary.init(dictionaryLiteral:)();
}

void LRUDictionary.values.getter()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476CD8D0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_24772C6DC();
  MEMORY[0x2495822A8](MEMORY[0x24BE18C70], v0);
  sub_24772CBD4();
  swift_getKeyPath();
  v1 = sub_24772D15C();
  MEMORY[0x2495822A8](MEMORY[0x24BEE25B0], v1);
  sub_24772D3C0();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void LRUDictionary.maximumCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  OUTLINED_FUNCTION_9_5();
}

void LRUDictionary.subscript.getter()
{
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_6();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_3_8();
  sub_24772D018();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v0);
  LRUDictionary.subscript.getter();
}

{
  sub_24772D354();
  __break(1u);
}

void sub_2476CDA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v13 = sub_24772D018();
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&a9 - v16;
  *(_QWORD *)(v11 - 120) = v9;
  v18 = *(_QWORD *)(v11 - 128);
  sub_24772C724();
  v19 = 1;
  if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, a1))
  {
    OUTLINED_FUNCTION_8_6(v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    v19 = 0;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  __swift_storeEnumTagSinglePayload(v18, v19, 1, v10);
  LRUDictionary.poke(_:)();
}

void sub_2476CDAC4()
{
  OUTLINED_FUNCTION_24_3();
}

void LRUDictionary.subscript.setter()
{
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_6();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_3_8();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2_6();
}

void sub_2476CDB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);

  *(_QWORD *)(v13 - 176) = a1;
  sub_24772D018();
  OUTLINED_FUNCTION_4_8();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 120) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_6();
  *(_QWORD *)(v13 - 128) = v19 - v18;
  v20 = sub_24772D018();
  v21 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_4_8();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&a9 - v24;
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_7_8();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  *(_QWORD *)(v13 - 136) = v11;
  v30(v25, v11, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    OUTLINED_FUNCTION_8_6(*(_QWORD *)(v13 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 120) + 16));
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, *(_QWORD *)(v13 - 176));
    OUTLINED_FUNCTION_14_5();
    sub_24772C718();
    sub_24772C730();
    sub_2476CDF58();
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v25, v12);
  OUTLINED_FUNCTION_8_6(*(_QWORD *)(v13 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 120) + 16));
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v10, v29, v12);
  *(_QWORD *)(v13 - 192) = v20;
  *(_QWORD *)(v13 - 184) = v21;
  sub_2476CDECC(v10, v12, (uint64_t)v17);
}

void sub_2476CDD68()
{
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CDDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  swift_getTupleTypeMetadata2();
  sub_24772CCE8();
  sub_24772C6C4();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v8;
  *(_BYTE *)(v1 + 48) = v9 & 1;
  *(_QWORD *)(v1 + 56) = v10;
  *(_BYTE *)(v1 + 64) = v11 & 1;
  *(_QWORD *)v1 = v12;
  *(_QWORD *)(v1 + 8) = v7;
  type metadata accessor for LRUDictionary(0, v4, v6, v5);
  sub_2476CDF58();
}

void sub_2476CDECC(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  OUTLINED_FUNCTION_12_3();
}

uint64_t sub_2476CDF28(uint64_t result)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(result + 52);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v1 & 1;
  return result;
}

void sub_2476CDF58()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t LRUDictionary.Container.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2);
}

uint64_t LRUDictionary.Container.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 40))(v2, a1);
}

uint64_t (*LRUDictionary.Container.value.modify())(void)
{
  return nullsub_1;
}

uint64_t LRUDictionary.Container.cost.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 52));
}

uint64_t LRUDictionary.Container.cost.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 52);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*LRUDictionary.Container.cost.modify())(void)
{
  return nullsub_1;
}

uint64_t LRUDictionary.maximumCost.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void LRUDictionary.maximumCost.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  OUTLINED_FUNCTION_9_5();
}

void (*LRUDictionary.maximumCost.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_2476CEA70;
}

void sub_2476CEA70(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    sub_2476CDF58();
}

uint64_t LRUDictionary.maximumCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_2476CEAA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a1;
  v7 = *((unsigned __int8 *)a1 + 8);
  v8 = type metadata accessor for LRUDictionary(0, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
  return a5(v6, v7, v8);
}

uint64_t (*LRUDictionary.maximumCount.modify(_QWORD *a1, uint64_t a2))()
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_2476CFF48;
}

void LRUDictionary.totalCost.getter()
{
  swift_retain();
  swift_retain();
  swift_retain();
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CEB70()
{
  sub_24772C6DC();
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_2476CEB94()
{
  uint64_t v1;

  sub_24772CC28();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

void sub_2476CEBF8()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_2476CEC30(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v4 = (uint64_t *)(v2 + *(int *)(result + 52));
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  v6 = __OFADD__(v3, v5);
  v7 = v3 + v5;
  if (v6)
    __break(1u);
  else
    *v1 = v7;
  return result;
}

void LRUDictionary.cost(for:)()
{
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_6();
}

uint64_t sub_2476CECA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[96];

  v2 = sub_24772D018();
  v3 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v13[-v5];
  v7 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-v9];
  sub_24772C724();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, a1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v6, a1);
    v11 = *(_QWORD *)&v10[*(int *)(a1 + 52)];
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a1);
  }
  return v11;
}

uint64_t LRUDictionary.keys.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

void type metadata accessor for LRUDictionary.Container()
{
  JUMPOUT(0x249582248);
}

uint64_t sub_2476CEDE0()
{
  return swift_getAtKeyPath();
}

void LRUDictionary.poke(_:)()
{
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_6();
}

void sub_2476CEE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v11 = sub_24772D018();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_7_8();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  v16 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&a9 - v18;
  sub_24772C718();
  sub_24772C6AC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, a1);
    sub_24772C6B8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, a1);
  }
  OUTLINED_FUNCTION_24_3();
}

void sub_2476CEF34()
{
  sub_2476CEBF8();
}

void LRUDictionary.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  *v6 = a3;
  v6[1] = v3;
  v7 = sub_24772D018();
  v6[2] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[3] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[4] = malloc(v9);
  v10 = malloc(v9);
  v11 = *(_QWORD *)(a3 + 16);
  v6[5] = v10;
  v6[6] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[7] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v6[8] = malloc(v13);
  v6[9] = malloc(v13);
  (*(void (**)(void))(v12 + 16))();
  LRUDictionary.subscript.getter();
}

void (*sub_2476CF008())(uint64_t a1, char a2)
{
  return sub_2476CF02C;
}

void sub_2476CF02C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    v5 = v2[7];
    v6 = v2[6];
    OUTLINED_FUNCTION_11_6(v2[4], v2[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2[3] + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v4, v6);
    LRUDictionary.subscript.setter();
  }
  LRUDictionary.subscript.setter();
}

void sub_2476CF17C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (__swift_getEnumTagSinglePayload(v4, 1, v2) != 1)
  {
    OUTLINED_FUNCTION_11_6(v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    LRUDictionary.poke(_:)();
  }
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  v1(v6);
  OUTLINED_FUNCTION_24_3();
}

void sub_2476CF228()
{
  LRUDictionary.subscript.getter();
}

void sub_2476CF234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v5 = *(_QWORD *)(a4 + a3 - 24);
  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)v15 - v10;
  MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v15 - v13, v14, v5);
  swift_getTupleTypeMetadata2();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v6);
  type metadata accessor for LRUDictionary(0, v5, v6, v7);
  LRUDictionary.subscript.setter();
}

void sub_2476CF3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_24772D018();
  OUTLINED_FUNCTION_4_8();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&a9 - v17;
  *(_QWORD *)(v14 - 144) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_11_6(v20 - v19, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v13, *(_QWORD *)(v14 - 120), v10);
  sub_2476CDECC(v13, v10, (uint64_t)v18);
}

void sub_2476CF464()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  sub_24772C718();
  sub_24772C730();
  LRUDictionary.poke(_:)();
}

void sub_2476CF4B4()
{
  sub_2476CDF58();
}

void LRUDictionary.subscript.modify(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_6();
  (*(void (**)(void))(v1 + 16))();
  LRUDictionary.subscript.getter();
}

void LRUDictionary.isEmpty.getter()
{
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CF564()
{
  sub_24772D270();
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_2476CF580()
{
  return sub_24772CF7C() & 1;
}

void LRUDictionary.count.getter()
{
  OUTLINED_FUNCTION_12_3();
}

uint64_t sub_2476CF5D0()
{
  return sub_24772D24C();
}

void sub_2476CF5EC(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_13_7(a1);
}

uint64_t sub_2476CF5F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2476CEAA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))LRUDictionary.maximumCost.setter);
}

void sub_2476CF61C(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_13_7(a1);
}

uint64_t sub_2476CF628(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2476CEAA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))LRUDictionary.maximumCount.setter);
}

uint64_t sub_2476CF65C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2476CF664(_QWORD *a1)
{
  if (*a1)
    swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2476CF6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2476CF72C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  v7 = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a2[7];
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t sub_2476CF818(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_release();
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLVirtualTableIndexResults(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLVirtualTableIndexResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LRUDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUDictionary);
}

uint64_t sub_2476CF968()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2476CF9DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v10;
    *(_BYTE *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_2476CFA94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))();
}

uint64_t sub_2476CFAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_2476CFB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_2476CFB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_2476CFBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_2476CFC34(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    return 0;
  }
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v8 = (a2 - v6 + 255) >> (8 * v7);
  if (v7 < 4)
    v9 = v8 + 1;
  else
    v9 = 2;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v10 = 1;
  if (v9 >= 2)
    v11 = v10;
  else
    v11 = 0;
  return ((uint64_t (*)(void))((char *)&loc_2476CFCB0 + 4 * byte_24772EDE0[v11]))();
}

void sub_2476CFD14(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = (a3 - v7 + 255) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (v7 < a2)
  {
    if (v8 >= 4)
      v13 = ~v7 + a2;
    else
      v13 = (~(_BYTE)v7 + a2);
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_2476CFE20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2476CFE28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2476CFE30);
}

void sub_2476CFE48()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_2476CFE50()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_2476CFE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!(_DWORD)a2)
    JUMPOUT(0x2476CFE60);
  return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
}

void sub_2476CFE78()
{
  sub_24772C610();
  JUMPOUT(0x2495822A8);
}

void sub_2476CFEA4()
{
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476CFED4()
{
  sub_24772C6DC();
  OUTLINED_FUNCTION_10_6();
}

void sub_2476CFEF8()
{
  sub_24772D2DC();
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_2476CFF1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  return MEMORY[0x2495822A8](MEMORY[0x24BEE2B48], v1, &v3);
}

__n128 OUTLINED_FUNCTION_1_6(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void OUTLINED_FUNCTION_2_6()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return 24;
}

uint64_t OUTLINED_FUNCTION_8_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void OUTLINED_FUNCTION_9_5()
{
  sub_2476CDF58();
}

void OUTLINED_FUNCTION_10_6()
{
  JUMPOUT(0x2495822A8);
}

uint64_t OUTLINED_FUNCTION_11_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_12_3()
{
  type metadata accessor for LRUDictionary.Container();
}

void OUTLINED_FUNCTION_13_7(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return 0;
}

uint64_t SQLDatabase.DynamicResults.columnNames.getter()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v2 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 41) = *(_OWORD *)((char *)v0 + 25);
  sub_2476B3DB8(v1 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v3;
  *v3 = v1;
  v3[1] = sub_2476D006C;
  return sub_2476B16C8();
}

uint64_t sub_2476D006C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_141();
  v5 = v4 + 16;
  v6 = *v2;
  OUTLINED_FUNCTION_37_4(&v9);
  v7 = sub_2476B3E50(v5);
  if (!v1)
    v7 = a1;
  return (*(uint64_t (**)(uint64_t))(v6 + 8))(v7);
}

void *sub_2476D00C8(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  sqlite3_stmt *v10;
  unint64_t v11;
  unint64_t v12;
  sqlite3_stmt *v13;
  uint64_t v14;

  v4 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
    goto LABEL_19;
  if (v4)
  {
    v7 = (uint64_t)result;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_2476B3064(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    v8 = v14;
    v9 = v7;
    while (a2 != v9)
    {
      result = sub_2476C0594(a3, v9, &v13);
      if (v3)
      {
        OUTLINED_FUNCTION_54_1();
        swift_release();
        return (void *)v8;
      }
      v10 = v13;
      v14 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        result = sub_2476B3064((char *)(v11 > 1), v12 + 1, 1);
        v8 = v14;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
      if (a2 < v7)
        goto LABEL_17;
      if (v9 >= a2)
        goto LABEL_18;
      if (a2 == ++v9)
      {
        OUTLINED_FUNCTION_54_1();
        return (void *)v8;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_54_1();
  return (void *)MEMORY[0x24BEE4AF8];
}

void sub_2476D0218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v2)
  {
LABEL_9:
    swift_release();
    return;
  }
  v4 = a1;
  v11 = MEMORY[0x24BEE4AF8];
  sub_2476B2F7C(0, v2 & ~(v2 >> 63), 0);
  if (a2 >= v4 && (v2 & 0x8000000000000000) == 0)
  {
    while (a2 != v4)
    {
      v5 = sub_2476C0408(v4);
      v7 = v6;
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_2476B2F7C(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v11 + 16) = v9 + 1;
      v10 = v11 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      if (a2 == ++v4)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

__n128 sub_2476D0348@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  __n128 result;

  v4 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a4 + 24) = result;
  *(_BYTE *)(a4 + 40) = v4;
  *(_QWORD *)(a4 + 48) = a2;
  *(_QWORD *)(a4 + 56) = a3;
  return result;
}

__n128 sub_2476D0370@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  __n128 result;
  __int128 v5;

  v3 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)a3 = a1;
  result = *(__n128 *)a2;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 24) = v5;
  *(_BYTE *)(a3 + 40) = v3;
  return result;
}

uint64_t sub_2476D038C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  sub_2476B4654(a1, (uint64_t)(v4 + 2));
  OUTLINED_FUNCTION_68_1();
  v5 = (_QWORD *)swift_task_alloc();
  v4[18] = v5;
  *v5 = v4;
  v5[1] = sub_2476D03F0;
  return OUTLINED_FUNCTION_24_5((uint64_t)(v4 + 7));
}

uint64_t sub_2476D03F0(uint64_t a1)
{
  OUTLINED_FUNCTION_12_4(a1);
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D0438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_2576B7AC0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 104) = v1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v3;
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  sub_2476D3BC0(0, (unint64_t *)&qword_2576B81D0);
  *v5 = v0;
  v5[1] = sub_2476D0584;
  return sub_24772D714();
}

uint64_t sub_2476D0584()
{
  OUTLINED_FUNCTION_17_4();
  swift_release();
  OUTLINED_FUNCTION_70();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476D05D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476D05E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_41_3();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_2476D0618()
{
  uint64_t v0;

  OUTLINED_FUNCTION_41_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476D0648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  sub_2476B4654(a2, (uint64_t)(v5 + 2));
  OUTLINED_FUNCTION_68_1();
  v6 = (_QWORD *)swift_task_alloc();
  v5[18] = v6;
  *v6 = v5;
  v6[1] = sub_2476D06B0;
  return OUTLINED_FUNCTION_24_5((uint64_t)(v5 + 7));
}

uint64_t sub_2476D06B0(uint64_t a1)
{
  OUTLINED_FUNCTION_12_4(a1);
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D06F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_2576B7AC0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 96) = v1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v3;
  sub_2476C3760(&qword_2576B8010, (uint64_t (*)(uint64_t))_s10ConnectionCMa, (uint64_t)&unk_247730644);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_2476D082C;
  OUTLINED_FUNCTION_27_4();
  return sub_24772D714();
}

uint64_t sub_2476D082C()
{
  OUTLINED_FUNCTION_17_4();
  swift_release();
  OUTLINED_FUNCTION_70();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476D0880()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_41_3();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476D08A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_41_3();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D08CC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v8;
  int *v10;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a3;
  v10 = (int *)((char *)a1 + *a1);
  v8 = (_QWORD *)swift_task_alloc();
  v5[13] = v8;
  *v8 = v5;
  v8[1] = sub_2476D0958;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v10)(v5 + 8, a3, a4);
}

uint64_t sub_2476D0958()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D09AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[5];
  _BYTE v16[5];

  OUTLINED_FUNCTION_26_5();
  v1 = *(_QWORD *)(v0 + 112);
  sub_2476C212C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 96));
  if (v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = v1;
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_80();
    v2 = OUTLINED_FUNCTION_6_9();
    if ((_DWORD)v2)
    {
      if ((OUTLINED_FUNCTION_0_9(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, *(int *)v15, v15[4], *(int *)v16, v16[4]) & 1) != 0)OUTLINED_FUNCTION_29_3();
      OUTLINED_FUNCTION_53_1();
      OUTLINED_FUNCTION_18_5();
    }
    OUTLINED_FUNCTION_57_2();
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_2476D0A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_7(a1, (uint64_t (*)(void))sub_2476D3C04);
  if (v1)
    OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_46_3();
  return OUTLINED_FUNCTION_9_6(*(uint64_t (**)(void))(v2 + 8));
}

#error "2476D0B04: call analysis failed (funcsize=26)"

uint64_t sub_2476D0B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_7(a1, (uint64_t (*)(void))sub_2476D3C04);
  if (v1)
    OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_46_3();
  return OUTLINED_FUNCTION_9_6(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2476D0B90(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  v9 = (uint64_t (*)(void))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v6[12] = v7;
  *v7 = v6;
  v7[1] = sub_2476D0C08;
  return v9();
}

uint64_t sub_2476D0C08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

#error "2476D0CB4: call analysis failed (funcsize=34)"

#error "2476D0D84: call analysis failed (funcsize=26)"

uint64_t sub_2476D0DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_7(a1, (uint64_t (*)(void))sub_2476D3C04);
  if (v1)
    OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_46_3();
  return OUTLINED_FUNCTION_9_6(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2476D0E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return swift_task_switch();
}

uint64_t sub_2476D0E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);
  _QWORD *v5;
  char *v7;

  v1 = OUTLINED_FUNCTION_61_1();
  *(_QWORD *)(v0 + 120) = v2(v1);
  v3 = OUTLINED_FUNCTION_61_1();
  v4(v3);
  sub_2476B4654(v0 + 56, v0 + 16);
  v7 = (char *)&dword_2576B87F0 + dword_2576B87F0;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v5;
  *v5 = v0;
  v5[1] = sub_2476D0EEC;
  return ((uint64_t (*)(uint64_t, void *, _QWORD))v7)(v0 + 16, &unk_2576B87E8, 0);
}

uint64_t sub_2476D0EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_141();
  v5 = v4 + 16;
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v6 + 136) = v1;
  swift_task_dealloc();
  swift_release();
  sub_2476D3A58(v5);
  if (!v1)
    return OUTLINED_FUNCTION_38_3(a1, *(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D0F70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476D0F7C()
{
  return swift_retain();
}

uint64_t sub_2476D0F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return sub_2476B3E14(v2, v3, v4, v5, v6);
}

uint64_t sub_2476D0FA0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2476C0310();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    OUTLINED_FUNCTION_39_0();
    return (uint64_t)sub_2476D00C8(0, v3, a1);
  }
  return result;
}

uint64_t sub_2476D0FF0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v4;
  _OWORD v5[2];

  v2 = v1[1];
  v4 = *v1;
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 9) = *(__int128 *)((char *)v1 + 25);
  sub_2476B9CBC(a1);
  return sub_2476B3E50((uint64_t)&v4);
}

double sub_2476D1030@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  double result;
  uint64_t v11;

  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_48_2(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)&result = sub_2476D2734((uint64_t)v7, AssociatedTypeWitness, a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t SQLDatabase.Results.columnNames.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 24);
  *(_BYTE *)(v2 + 56) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  v6 = MEMORY[0x2495822A8](&unk_24772EF04, a1);
  *v5 = v2;
  v5[1] = sub_2476D1168;
  return sub_2476D0E10(a1, v6);
}

uint64_t sub_2476D1168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    return OUTLINED_FUNCTION_38_3(a1, *(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

void sub_2476D11C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = v5;
  v30 = a1;
  v31 = a5;
  v10 = sub_2476C0310();
  v29 = v10;
  v33 = 0;
  if (a2)
  {
    v11 = 0;
    v12 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
    v13 = 16;
    v27 = 8 * a2;
    v28 = a4 & 0xFFFFFFFFFFFFFFFELL;
    v14 = a4;
    v26 = a4;
    do
    {
      v32 = v6;
      v15 = v12[v11];
      if (a2 == 1)
      {
        TupleTypeMetadata = *v12;
      }
      else
      {
        MEMORY[0x24BDAC7A8](v10);
        v18 = 0;
        do
        {
          *(uint64_t *)((char *)&v25 + 8 * v18 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0)) = v12[v18];
          ++v18;
        }
        while (a2 != v18);
        TupleTypeMetadata = swift_getTupleTypeMetadata();
        v14 = v26;
      }
      v19 = v32;
      sub_2476D1430(v15, &v33, v29, v30, a2, a3, v15, v14);
      v6 = v19;
      if (v19)
      {
        if (v11)
        {
          v21 = (int *)(TupleTypeMetadata + v13);
          do
          {
            if (a2 == 1)
              v22 = 0;
            else
              v22 = *v21;
            (*(void (**)(uint64_t))(*(_QWORD *)(v12[v11 - 1] - 8) + 8))(v31 + v22);
            v21 -= 4;
            --v11;
          }
          while (v11);
        }
        return;
      }
      ++v11;
      v13 += 16;
    }
    while (v11 != a2);
    if (a2 == 1)
    {
      v20 = *v12;
      goto LABEL_23;
    }
    MEMORY[0x24BDAC7A8](v10);
    v24 = 0;
    do
    {
      *(uint64_t *)((char *)&v25 + 8 * v24 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0)) = v12[v24];
      ++v24;
    }
    while (a2 != v24);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v10);
  }
  v20 = swift_getTupleTypeMetadata();
LABEL_23:
  __swift_storeEnumTagSinglePayload(v31, 0, 1, v20);
}

void sub_2476D1430(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v24[9];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;

  v15 = OUTLINED_FUNCTION_13_8();
  if (*a2 >= a3)
  {
LABEL_7:
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_24772D144();
    v29 = v31;
    v30 = v32;
    sub_24772CAFC();
    OUTLINED_FUNCTION_13_8();
    v25 = *a2;
    OUTLINED_FUNCTION_45_3();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    v25 = a7;
    swift_getMetatypeMetadata();
    sub_24772CA54();
    sub_24772CAFC();
    OUTLINED_FUNCTION_42_1();
    OUTLINED_FUNCTION_58_2();
    v25 = a3;
    OUTLINED_FUNCTION_45_3();
    sub_24772CAFC();
    OUTLINED_FUNCTION_42_1();
    sub_24772CAFC();
    sub_2476B3FD0();
    v22 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_44_3(v22, v23);
    OUTLINED_FUNCTION_14_6();
    OUTLINED_FUNCTION_52_2();
    if (!v21)
      goto LABEL_14;
    __break(1u);
    goto LABEL_10;
  }
  MEMORY[0x24BDAC7A8](v15);
  v24[2] = a5;
  v24[3] = a6;
  v24[4] = a7;
  v24[5] = a8;
  v24[6] = v16;
  v24[7] = a2;
  sub_2476C0640((uint64_t (*)(void))sub_2476D39A0, (uint64_t)v24, a7);
  if (v8)
  {
    v33 = v8;
    v17 = v8;
    sub_2476BAF4C();
    if (!swift_dynamicCast())
      goto LABEL_13;
    MEMORY[0x2495821C4](v8);
    OUTLINED_FUNCTION_13_8();
    sub_2476C0408(*a2);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_24772D144();
    v27 = v29;
    v28 = v30;
    sub_24772CAFC();
    OUTLINED_FUNCTION_13_8();
    v26 = *a2;
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_58_2();
    v26 = a7;
    swift_getMetatypeMetadata();
    sub_24772CA54();
    sub_24772CAFC();
    OUTLINED_FUNCTION_42_1();
    sub_24772CAFC();
    OUTLINED_FUNCTION_61_1();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    a7 = v27;
    a3 = v28;
    sub_2476B3FD0();
    v18 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_44_3(v18, v19);
    MEMORY[0x2495821C4](v33);
    OUTLINED_FUNCTION_14_6();
    OUTLINED_FUNCTION_52_2();
    if (!v21)
      goto LABEL_14;
    __break(1u);
    goto LABEL_7;
  }
LABEL_10:
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_52_2();
  if (!v21)
    goto LABEL_14;
  __break(1u);
LABEL_13:
  MEMORY[0x2495821C4](v33);
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_52_2();
  if (!v21)
  {
LABEL_14:
    *a2 = v20;
    return;
  }
  __break(1u);
}

uint64_t sub_2476D17E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(a7 + 8))(a1, *a2, a5, a7);
}

void sub_2476D1864(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_2476D11C4(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_2476D1884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v5 = MEMORY[0x2495822A8](&unk_24772EF04, a1);
  sub_2476D1030(a1, v5, a2);
  v6 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_BYTE *)(v2 + 40);
  swift_release();
  return sub_2476B3EAC(v6, v7, v8, v9, v10);
}

uint64_t SQLDatabase.TransformedResults.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v3[5] = v5;
  if (v5 == 1)
  {
    TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_60();
    if (v5)
    {
      v8 = (uint64_t *)(*(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      v9 = (_QWORD *)v7;
      v10 = v5;
      do
      {
        v11 = *v8++;
        *v9++ = v11;
        --v10;
      }
      while (v10);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    OUTLINED_FUNCTION_72();
  }
  v3[6] = TupleTypeMetadata;
  v12 = sub_24772D018();
  v3[7] = v12;
  v3[8] = *(_QWORD *)(v12 - 8);
  v13 = OUTLINED_FUNCTION_60();
  v3[9] = v13;
  v3[10] = *(_QWORD *)(TupleTypeMetadata - 8);
  v3[11] = OUTLINED_FUNCTION_60_2();
  v3[12] = OUTLINED_FUNCTION_60_2();
  v3[13] = OUTLINED_FUNCTION_60_2();
  v14 = (_QWORD *)swift_task_alloc();
  v3[14] = v14;
  v17 = type metadata accessor for SQLDatabase.AsyncResultsIterator(0, TupleTypeMetadata, v15, v16);
  *v14 = v3;
  v14[1] = sub_2476D1A40;
  return SQLDatabase.AsyncResultsIterator.next()(v13, v17);
}

uint64_t sub_2476D1A40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476D1A8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int *v20;

  v1 = v0[9];
  if (__swift_getEnumTagSinglePayload(v1, 1, v0[6]) == 1)
  {
    v2 = v0[2];
    v3 = v0[3];
    (*(void (**)(uint64_t, _QWORD))(v0[8] + 8))(v1, v0[7]);
    OUTLINED_FUNCTION_51_2(v2, 1, v4, *(_QWORD *)(v3 + 24));
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return v5();
  }
  else
  {
    v7 = v0[4];
    v8 = v0[5];
    OUTLINED_FUNCTION_48_2(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 32));
    v9 = *(int **)(v7 + 112);
    v10 = OUTLINED_FUNCTION_60();
    v0[16] = v10;
    v11 = OUTLINED_FUNCTION_61_1();
    v12(v11);
    if (v8)
    {
      v13 = 0;
      v14 = *(_QWORD *)(v0[3] + 32) & 0xFFFFFFFFFFFFFFFELL;
      v15 = 32;
      do
      {
        v16 = v0[5];
        v17 = v0[12];
        if (v16 == 1)
        {
          LODWORD(v18) = 0;
        }
        else
        {
          v18 = *(int *)(v0[6] + v15);
          v17 += v18;
        }
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v14 + 8 * v13) - 8) + 16))(v17, v0[11] + (int)v18);
        *(_QWORD *)(v10 + 8 * v13++) = v17;
        v15 += 16;
      }
      while (v13 != v16);
    }
    v20 = (int *)((char *)v9 + *v9);
    v19 = (_QWORD *)swift_task_alloc();
    v0[17] = v19;
    *v19 = v0;
    v19[1] = sub_2476D1C20;
    return ((uint64_t (*)(_QWORD, uint64_t))v20)(v0[2], v10);
  }
}

uint64_t sub_2476D1C20()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v8;

  v8 = (_QWORD *)*v1;
  v2 = v8;
  OUTLINED_FUNCTION_140(&v8);
  v2[18] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v4 = v2[11];
    v3 = v2[12];
    v5 = v2[6];
    v6 = *(void (**)(uint64_t, uint64_t))(v2[10] + 8);
    v2[19] = v6;
    v6(v3, v5);
    v6(v4, v5);
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D1CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 48));
  OUTLINED_FUNCTION_51_2(v1, 0, v3, *(_QWORD *)(v2 + 24));
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_49_2();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_23_4(v4);
}

uint64_t sub_2476D1D08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D1D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_56_2(*(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_56_2(v1);
  OUTLINED_FUNCTION_56_2(v2);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLDatabase.AsyncResultsIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  OUTLINED_FUNCTION_26();
  return swift_task_switch();
}

uint64_t sub_2476D1DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(v3 + 136) = *(_QWORD *)v4;
  v5 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v3 + 144) = v5;
  v6 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v3 + 152) = v6;
  v7 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v3 + 160) = v7;
  v8 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v3 + 168) = v8;
  v9 = *(unsigned __int8 *)(v4 + 40);
  *(_BYTE *)(v3 + 97) = v9;
  if (v9 >> 6)
  {
    if (v9 >> 6 != 1)
    {
      OUTLINED_FUNCTION_51_2(*(_QWORD *)(v3 + 112), 1, a3, *(_QWORD *)(*(_QWORD *)(v3 + 120) + 16));
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_27_4();
      __asm { BR              X0 }
    }
    v10 = *(_QWORD *)(v3 + 120);
    v11 = swift_task_alloc();
    *(_QWORD *)(v3 + 200) = v11;
    v12 = *(_QWORD *)(v10 + 16);
    *(_QWORD *)(v3 + 208) = v12;
    *(_QWORD *)(v11 + 16) = v12;
    *(_QWORD *)(v11 + 24) = v4;
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_79();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 216) = v13;
    sub_24772D018();
    *v13 = v3;
    v13[1] = sub_2476D1FD0;
    OUTLINED_FUNCTION_27_4();
    return sub_2476C1F74(v14, v15, v16, v17);
  }
  else
  {
    *(_QWORD *)(v3 + 64) = v5;
    v19 = v9 & 1;
    *(_QWORD *)(v3 + 72) = v6;
    *(_QWORD *)(v3 + 80) = v7;
    *(_QWORD *)(v3 + 88) = v8;
    *(_BYTE *)(v3 + 96) = v9 & 1;
    OUTLINED_FUNCTION_39_0();
    sub_2476B3E14(v5, v6, v7, v8, v19);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 176) = v20;
    *v20 = v3;
    v20[1] = sub_2476D1F60;
    OUTLINED_FUNCTION_27_4();
    return sub_2476C1778(v21);
  }
}

uint64_t sub_2476D1F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22();
  *(_QWORD *)(v0 + 184) = v2;
  *(_QWORD *)(v0 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    sub_2476B3EAC(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 97) & 1);
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D1FD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 224) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D2028()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v10;

  v1 = v0[23];
  v3 = v0[16];
  v2 = v0[17];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_39_0();
  sub_2476B45C0(v4, v5, v6, v7, v8, v9);
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = v1;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 40) = 64;
  v10 = (_QWORD *)swift_task_alloc();
  v0[29] = v10;
  *v10 = v0;
  v10[1] = sub_2476D20E8;
  return SQLDatabase.AsyncResultsIterator.next()(v0[14], v0[15]);
}

uint64_t sub_2476D20E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 240) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476D2134()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_59_1();
  OUTLINED_FUNCTION_33();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476D215C()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_33();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476D2188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_BYTE *)(v0 + 97) & 1;
  swift_release();
  sub_2476B3EAC(v4, v3, v1, v2, v5);
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D21EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_59_1();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D2218()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  int v6;
  char v7;
  int v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 104) = v1;
  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_80();
  if (!OUTLINED_FUNCTION_6_9())
    goto LABEL_4;
  v2 = *(_DWORD *)(v0 + 20);
  v3 = *(_BYTE *)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v2;
  v7 = v3;
  v8 = 17;
  v9 = 14;
  if ((static SQLError.Code.== infix(_:_:)((uint64_t)&v6) & 1) == 0)
  {
LABEL_4:
    swift_release();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_59();
  }
  v4 = *(_QWORD *)(v0 + 144);
  MEMORY[0x2495821C4](*(_QWORD *)(v0 + 224));
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v4 + 24);
  sub_24772C91C();
  return swift_task_switch();
}

uint64_t sub_2476D2300()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D2314()
{
  uint64_t v0;

  sub_2476C145C();
  *(_QWORD *)(v0 + 264) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

void sub_2476D2370()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[26];
  v2 = v0[16];
  v3 = v0[14];
  swift_release();
  swift_release();
  sub_2476B45C0(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = 0;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_BYTE *)(v2 + 40) = 0x80;
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v1);
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476D23E4()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_55(v0);
}

void sub_2476D23F8()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  swift_release();
  OUTLINED_FUNCTION_59();
}

uint64_t sub_2476D2428()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for SQLDatabase.AsyncResultsIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SQLDatabase.AsyncResultsIterator);
}

__n128 sub_2476D2448@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  v5 = *a2;
  v6 = *((_BYTE *)a2 + 40);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 32) = v3;
  *(_BYTE *)(a3 + 40) = v4;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(a3 + 64) = v5;
  *(_OWORD *)(a3 + 72) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a3 + 104) = v6;
  result = *((__n128 *)a2 + 3);
  *(__n128 *)(a3 + 112) = result;
  return result;
}

uint64_t sub_2476D2494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476B9B58;
  return SQLDatabase.TransformedResults.AsyncIterator.next()(a1, a2);
}

uint64_t sub_2476D24F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_2476D258C;
  return sub_24772CDB4();
}

uint64_t sub_2476D258C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_22();
  v3 = *v2;
  OUTLINED_FUNCTION_37_4(v4);
  if (v1)
    **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t SQLDatabase.TransformedResults.makeAsyncIterator()@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18[5];
  char v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _OWORD v32[2];
  uint64_t v33;
  char v34;
  __int128 v35;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_BYTE *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v2 + 56);
  v26 = *(_QWORD *)v2;
  v27 = v3;
  v28 = v4;
  v29 = v5;
  v30 = v6;
  v31 = v7;
  v10 = type metadata accessor for SQLDatabase.Results(0, a1[2], a1[4], a1[5]);
  v11 = MEMORY[0x2495822A8](&unk_24772EF04, v10);
  sub_2476D1030(v10, v11, (uint64_t)v32);
  v22[0] = v32[0];
  v22[1] = v32[1];
  v23 = v33;
  v24 = v34;
  v25 = v35;
  v18[0] = v26;
  v18[1] = v3;
  v18[2] = v4;
  v18[3] = v5;
  v18[4] = v6;
  v19 = v7;
  v20 = v9;
  v21 = v8;
  sub_2476D2448((uint64_t)v22, v18, a2);
  swift_retain();
  v12 = OUTLINED_FUNCTION_62_1();
  sub_2476B3E14(v12, v13, v14, v15, v7);
  return OUTLINED_FUNCTION_79();
}

uint64_t sub_2476D26D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  SQLDatabase.TransformedResults.makeAsyncIterator()(a1, a2);
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_BYTE *)(v2 + 40);
  swift_release();
  sub_2476B3EAC(v3, v4, v5, v6, v7);
  return swift_release();
}

__n128 sub_2476D2734@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  __n128 result;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  (*(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v17, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  v16 = v17;
  v11 = v18;
  v12 = v19;
  v13 = v20;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a3;
  *(_QWORD *)a5 = v10;
  result = v16;
  *(__n128 *)(a5 + 8) = v16;
  *(_QWORD *)(a5 + 24) = v11;
  *(_QWORD *)(a5 + 32) = v12;
  *(_BYTE *)(a5 + 40) = v13;
  *(_QWORD *)(a5 + 48) = sub_2476D3C88;
  *(_QWORD *)(a5 + 56) = v14;
  return result;
}

uint64_t sub_2476D2808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2476D2820()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v4)(void);

  sub_2476F2E5C(v0[3], sub_2476D3A44);
  v1 = v0[4];
  v2 = *(void (**)(uint64_t))(v0[5] + 48);
  swift_retain();
  v2(v1);
  swift_release();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_68(v4);
}

uint64_t sub_2476D28A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 24);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2476BB304;
  return sub_2476D2808(a1, a2, a3, v8);
}

uint64_t type metadata accessor for SQLDatabase.Results(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SQLDatabase.Results);
}

unint64_t sub_2476D292C(uint64_t a1)
{
  unint64_t result;

  result = sub_2476D2950();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2476D2950()
{
  unint64_t result;

  result = qword_2576B8530;
  if (!qword_2576B8530)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.DynamicResults, &type metadata for SQLDatabase.DynamicResults);
    atomic_store(result, (unint64_t *)&qword_2576B8530);
  }
  return result;
}

uint64_t sub_2476D298C()
{
  return sub_2476C3760(&qword_2576B8538, (uint64_t (*)(uint64_t))sub_2476D29B8, (uint64_t)&protocol conformance descriptor for SQLDatabase.AsyncResultsIterator<A>);
}

void sub_2476D29B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2576B8540[0])
  {
    sub_2476D3BC0(255, &qword_2576B8280);
    v5 = type metadata accessor for SQLDatabase.AsyncResultsIterator(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_2576B8540);
  }
}

uint64_t sub_2476D2A1C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Results<Pack{repeat A}>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2476D2A48()
{
  JUMPOUT(0x2495822A8);
}

uint64_t sub_2476D2A58()
{
  return MEMORY[0x24BEE3F20];
}

void sub_2476D2A64()
{
  JUMPOUT(0x2495822A8);
}

uint64_t sub_2476D2A74()
{
  return sub_2476BF07C();
}

uint64_t sub_2476D2A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476BB304;
  return SQLDatabase.AsyncResultsIterator.next()(a1, a2);
}

uint64_t sub_2476D2AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_2476D3CB0;
  return sub_24772CDB4();
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SQLDatabase.DynamicResults()
{
  return &type metadata for SQLDatabase.DynamicResults;
}

uint64_t _s14DynamicResultsVwxx_0(uint64_t a1)
{
  swift_release();
  return sub_2476B3EAC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

void _s14DynamicResultsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_retain();
  sub_2476B3E14(v3, v4, v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  OUTLINED_FUNCTION_11();
}

void _s14DynamicResultsVwca_0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  v4 = v2[1];
  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  v8 = OUTLINED_FUNCTION_62_1();
  sub_2476B3E14(v8, v9, v10, v11, (char)v2);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_2476B3EAC(v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_11();
}

uint64_t _s14DynamicResultsVwta_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v4;
  sub_2476B3EAC(v5, v6, v7, v8, v9);
  return a1;
}

uint64_t _s14DynamicResultsVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476D2D68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2476D2DB4(uint64_t a1)
{
  swift_release();
  sub_2476B3EAC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return swift_release();
}

uint64_t sub_2476D2DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  swift_retain();
  sub_2476B3E14(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  return a1;
}

uint64_t sub_2476D2E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_2476B3E14(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  sub_2476B3EAC(v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v14;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2476D2F30(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v4;
  sub_2476B3EAC(v5, v6, v7, v8, v9);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_2476D2F9C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476D2FDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLDatabase.TransformedResults()
{
  JUMPOUT(0x249582248);
}

uint64_t sub_2476D3038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  char v10;
  uint64_t result;

  if (a6 >> 6 == 1)
  {
    swift_retain();
    return swift_retain();
  }
  else if (!(a6 >> 6))
  {
    v10 = a6 & 1;
    swift_retain();
    return sub_2476B3E14(a2, a3, a4, a5, v10);
  }
  return result;
}

uint64_t sub_2476D30D0(uint64_t a1)
{
  sub_2476B45C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  sub_2476B3EAC(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return swift_release();
}

uint64_t sub_2476D3124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_BYTE *)(a2 + 104);
  swift_retain();
  swift_retain();
  sub_2476B3E14(v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v15;
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  swift_retain();
  return a1;
}

uint64_t sub_2476D31F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  sub_2476B45C0(v10, v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v17 = *(_QWORD *)(a2 + 72);
  v18 = *(_QWORD *)(a2 + 80);
  v19 = *(_QWORD *)(a2 + 88);
  v20 = *(_QWORD *)(a2 + 96);
  LOBYTE(v8) = *(_BYTE *)(a2 + 104);
  sub_2476B3E14(v17, v18, v19, v20, v8);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v24 = *(_QWORD *)(a1 + 96);
  v25 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v18;
  *(_QWORD *)(a1 + 88) = v19;
  *(_QWORD *)(a1 + 96) = v20;
  *(_BYTE *)(a1 + 104) = v8;
  sub_2476B3EAC(v21, v22, v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v26;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy128_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_2476D3310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_2476B45C0(v6, v7, v8, v9, v10, v12);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  v13 = *(_BYTE *)(a2 + 104);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 96);
  v18 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v13;
  sub_2476B3EAC(v14, v15, v16, v17, v18);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_2476D33B8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476D33F8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLDatabase.TransformedResults.AsyncIterator()
{
  JUMPOUT(0x249582248);
}

uint64_t sub_2476D3464()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2476D346C(uint64_t a1)
{
  sub_2476B45C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return swift_release();
}

uint64_t sub_2476D34A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain();
  return a1;
}

uint64_t sub_2476D3524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  sub_2476B45C0(v10, v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2476D35C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_2476B45C0(v6, v7, v8, v9, v10, v12);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_2476D3628(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2476D3668(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2476D36B8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2476D36C0(uint64_t a1)
{
  return sub_2476B45C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_2476D36D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_2476D374C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_2476D3038(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_2476B45C0(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_2476D37D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_2476B45C0(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_2476D3824(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 16381;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 40) >> 6) | (4
                                                  * ((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F) << 7)))) ^ 0x3FFF;
      if (v2 >= 0x3FFD)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_2476D3890(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 16382;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_BYTE *)(result + 40) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_2476D3918(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_QWORD *)a1 >> 3) + 2;
}

uint64_t sub_2476D393C(uint64_t result)
{
  *(_BYTE *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_2476D394C(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
  {
    v2 = *(_BYTE *)(result + 40) & 1 | ((_BYTE)a2 << 6);
    *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(_BYTE *)(result + 40) = v2;
  }
  else
  {
    *(_QWORD *)result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_BYTE *)(result + 40) = 0x80;
  }
  return result;
}

uint64_t _s20AsyncResultsIteratorV12ResultsStateOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s20AsyncResultsIteratorV12ResultsStateOMn);
}

uint64_t sub_2476D39A0(uint64_t a1)
{
  uint64_t v1;

  return sub_2476D17E8(a1, *(_QWORD **)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_2476D39C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a3;
  return swift_task_switch();
}

uint64_t sub_2476D39D4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  result = sub_2476C02F0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v3 = *(_QWORD **)(v0 + 24);
    swift_retain();
    sub_2476D0218(0, v2);
    *v3 = v4;
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_68(v5);
  }
  return result;
}

uint64_t sub_2476D3A44()
{
  return sub_2476BF07C();
}

uint64_t sub_2476D3A58(uint64_t a1)
{
  sub_2476B3EAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_2476D3A8C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_2476D3B0C;
  return sub_2476D08CC(a2, a3, a4, a5, a6);
}

uint64_t sub_2476D3B0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  OUTLINED_FUNCTION_37_4(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_23_4(*(uint64_t (**)(void))(v5 + 8));
}

void sub_2476D3B58()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_8_5();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476B9B58;
  OUTLINED_FUNCTION_29_5();
  OUTLINED_FUNCTION_27_4();
  __asm { BR              X6 }
}

void sub_2476D3BC0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_24772CD48();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_2476D3C04()
{
  sub_2476C2304();
}

uint64_t sub_2476D3C1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_5();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2476BB304;
  v2 = OUTLINED_FUNCTION_29_5();
  return sub_2476D0B90(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2476D3C78()
{
  return swift_deallocObject();
}

uint64_t sub_2476D3C88(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 32) + 32))(a1, *(_QWORD *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_0_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, int a15, char a16)
{
  uint64_t v16;
  char v17;

  v17 = *(_BYTE *)(v16 + 24);
  a13 = *(_DWORD *)(v16 + 20);
  a14 = v17;
  a15 = 17;
  a16 = 14;
  return static SQLError.Code.== infix(_:_:)((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_3_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;

  *(_DWORD *)a2 = a13;
  *(_DWORD *)(a2 + 4) = v16;
  *(_BYTE *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = a11;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = a10;
  *(_QWORD *)(a2 + 40) = v13;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_5_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2476C212C(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_9_6(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_11_7(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;

  sub_2476F2E5C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_12_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 152) = a1;
  *(_QWORD *)(v4 + 160) = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_24_5(uint64_t a1)
{
  return sub_2476C0B40(a1);
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_32_3()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_37_4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_38_3(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_43_3()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_44_3(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return sub_24772D480();
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_48_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_51_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

void OUTLINED_FUNCTION_53_2()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_56_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_57_2()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2476B4654(v0, v1);
}

uint64_t NanoID.nativeValue.getter(uint64_t a1)
{
  sub_24772C91C();
  return a1;
}

_UNKNOWN **sub_2476D3F80()
{
  return &protocol witness table for String;
}

Swift::String *sub_2476D3F8C@<X0>(Swift::String *result@<X0>, SonicFoundation::NanoID *a2@<X8>)
{
  uint64_t v2;
  SonicFoundation::NanoID v4;

  if (!v2)
  {
    v4 = NanoID.init(nativeValue:)(*result);
    result = (Swift::String *)v4.nanoIDString._countAndFlagsBits;
    *a2 = v4;
  }
  return result;
}

uint64_t sub_2476D3FC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;

  result = NanoID.nativeValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void LRUDictionary.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v1);
  swift_getTupleTypeMetadata2();
  sub_24772D018();
  OUTLINED_FUNCTION_4_9();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  LRUDictionary.isEmpty.getter();
}

void sub_2476D4158(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  if ((a1 & 1) == 0)
  {
    OUTLINED_FUNCTION_10_7();
    v6 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v5 - 176) = v3;
    *(_QWORD *)(v5 - 168) = v6;
    v7 = *(_QWORD *)(v5 - 264);
    *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 152) = v7;
    v8 = *(_QWORD *)(v5 - 280);
    *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 272);
    *(_QWORD *)(v5 - 136) = v8;
    *(_BYTE *)(v5 - 128) = *(_DWORD *)(v5 - 284);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 296);
    OUTLINED_FUNCTION_13_9(v5 - 44);
    LRUDictionary.makeIterator()(v9);
    *(_QWORD *)(v5 - 240) = type metadata accessor for LRUDictionary.Iterator(0, v2, v1, *(_QWORD *)(v4 + 32));
    LRUDictionary.Iterator.next()();
  }
  sub_24772CAFC();
  OUTLINED_FUNCTION_24_3();
}

void sub_2476D42F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v3 - 248))(v2, v1, *(_QWORD *)(v3 - 216));
  if (__swift_getEnumTagSinglePayload(v2, 1, v0) != 1)
  {
    v4 = OUTLINED_FUNCTION_11_8();
    (*(void (**)(uint64_t))(v3 - 256))(v4);
    OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_47_1();
    JUMPOUT(0x2476D4278);
  }
  JUMPOUT(0x2476D4224);
}

void LRUDictionary.debugDescription.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD v18[12];
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(a1 + 24);
  v18[7] = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_4_9();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v4;
  v7 = *(_QWORD *)(v4 + 16);
  v18[1] = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_7_9();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_24772D018();
  v31 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_4_9();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v18[11] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v25 = *v1;
  v12 = v1[2];
  v24 = v1[1];
  v13 = v1[3];
  v21 = v1[4];
  v29 = v1[5];
  v30 = *((unsigned __int8 *)v1 + 48);
  v28 = v1[7];
  v14 = *((unsigned __int8 *)v1 + 64);
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  sub_24772D144();
  OUTLINED_FUNCTION_15_6();
  strcpy((char *)v33, "LRUDictionary<");
  HIBYTE(v33[1]) = -18;
  v18[8] = v7;
  sub_24772D720();
  sub_24772CAFC();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_47_1();
  v18[9] = v2;
  sub_24772D720();
  sub_24772CAFC();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_1_7();
  v37 = v33[0];
  v38 = v33[1];
  v15 = v14;
  v27 = v14;
  if ((v14 & 1) == 0)
  {
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    sub_24772D144();
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_8_7(0xEE00203A746E756FLL);
    v32 = v28;
    sub_24772D480();
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_47_1();
    OUTLINED_FUNCTION_12_5();
    OUTLINED_FUNCTION_32();
    v15 = v27;
  }
  v18[10] = v6;
  v22 = v13;
  v23 = v12;
  v16 = v29;
  v17 = v30;
  if ((v30 & 1) == 0)
  {
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    sub_24772D144();
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_8_7(0xED0000203A74736FLL);
    v32 = v16;
    sub_24772D480();
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_47_1();
    OUTLINED_FUNCTION_12_5();
    OUTLINED_FUNCTION_32();
    v15 = v27;
    v17 = v30;
  }
  v33[0] = v25;
  v33[1] = v24;
  v33[2] = v23;
  v33[3] = v22;
  v33[4] = v21;
  v33[5] = v16;
  v34 = v17;
  v35 = v28;
  v36 = v15;
  LRUDictionary.isEmpty.getter();
}

void sub_2476D467C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  if ((a1 & 1) == 0)
  {
    OUTLINED_FUNCTION_10_7();
    *(_QWORD *)(v8 - 176) = v1;
    *(_QWORD *)(v8 - 168) = v6;
    *(_QWORD *)(v8 - 160) = v5;
    *(_QWORD *)(v8 - 152) = v3;
    v9 = *(_QWORD *)(v8 - 256);
    *(_QWORD *)(v8 - 144) = v2;
    *(_QWORD *)(v8 - 136) = v9;
    *(_BYTE *)(v8 - 128) = *(_DWORD *)(v8 - 244);
    *(_QWORD *)(v8 - 120) = v4;
    OUTLINED_FUNCTION_13_9(v8 - 12);
    LRUDictionary.makeIterator()(v10);
    *(_QWORD *)(v8 - 384) = type metadata accessor for LRUDictionary.Iterator(0, *(_QWORD *)(v8 - 368), *(_QWORD *)(v8 - 360), *(_QWORD *)(v7 + 32));
    LRUDictionary.Iterator.next()();
  }
  sub_24772CAFC();
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_24_3();
}

void sub_2476D48C4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;

  v7 = v5;
  if ((a2 & 1) == 0)
  {
    *(_QWORD *)(v6 - 176) = 9256;
    *(_QWORD *)(v6 - 168) = 0xE200000000000000;
    *(_QWORD *)(v6 - 216) = a1;
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_7();
    v2 = v6 - 104;
    sub_24772CAFC();
    swift_bridgeObjectRelease();
  }
  v8 = OUTLINED_FUNCTION_6_10();
  v9 = (uint64_t *)OUTLINED_FUNCTION_17_5(v8);
  v10 = *(_QWORD *)(v6 - 360);
  *(_QWORD *)(v2 + 56) = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  v12 = *(_QWORD *)(v6 - 376);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v4, v10);
  OUTLINED_FUNCTION_5_8();
  sub_24772D114();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v10);
  (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v3, *(_QWORD *)(v6 - 368));
  LRUDictionary.Iterator.next()();
}

void sub_2476D49C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 400);
  OUTLINED_FUNCTION_16_5(v0 - 136);
  if (__swift_getEnumTagSinglePayload(v1, 1, *(_QWORD *)(v0 - 328)) != 1)
  {
    OUTLINED_FUNCTION_16_5(v0 - 152);
    OUTLINED_FUNCTION_16_5(v0 - 160);
    OUTLINED_FUNCTION_47_1();
    JUMPOUT(0x2476D4814);
  }
  JUMPOUT(0x2476D475CLL);
}

void sub_2476D4A54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7F40)
  {
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7F40);
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_8_7(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = 0x436D756D6978616DLL;
  *(_QWORD *)(v1 - 168) = a1;
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return sub_24772CAFC();
}

void OUTLINED_FUNCTION_13_9(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = *(_DWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_16_5@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t OUTLINED_FUNCTION_17_5(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 240);
  return a1 + 32;
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return sub_24772CAFC();
}

uint64_t sub_2476D4BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_24772C850();
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v6);
}

uint64_t static Symbols.name(for:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2476D4DF4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_4_6();
  v5 = v4 - v3;
  v6 = sub_24772C8A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_7();
  v8 = sub_24772C880();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_10();
  sub_24772C874();
  *(_DWORD *)(swift_allocObject() + 16) = a1;
  sub_24772C85C();
  swift_release();
  sub_24772C898();
  v9 = sub_24772C88C();
  OUTLINED_FUNCTION_0_10(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_2476D4BE0(v9, v5);
  swift_bridgeObjectRelease();
  v10 = sub_24772C850();
  if (__swift_getEnumTagSinglePayload(v5, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_4_10();
    sub_2476D4F10(v5);
    return 0;
  }
  else
  {
    v11 = sub_24772C844();
    OUTLINED_FUNCTION_4_10();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
  }
  return v11;
}

void sub_2476D4DF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8828)
  {
    sub_24772C850();
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8828);
  }
}

uint64_t sub_2476D4E48(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v9;

  v4 = sub_24772C8BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_DWORD *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = a2;
  (*(void (**)(_DWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE82B20], v4);
  LOBYTE(a2) = MEMORY[0x249580C1C](a1, v7);
  (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

uint64_t sub_2476D4EF8()
{
  return swift_deallocObject();
}

uint64_t sub_2476D4F08(uint64_t a1)
{
  uint64_t v1;

  return sub_2476D4E48(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_2476D4F10(uint64_t a1)
{
  uint64_t v2;

  sub_2476D4DF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static Symbols.scalar(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  sub_2476D4DF4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_10();
  v5 = sub_24772C8BC();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_6();
  v8 = (unsigned int *)(v7 - v6);
  v9 = sub_24772C8A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_6();
  v13 = v12 - v11;
  v14 = sub_24772C880();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_7();
  sub_24772C874();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  sub_24772C91C();
  sub_24772C868();
  swift_release();
  sub_24772C898();
  v17 = sub_24772C88C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  sub_2476D4BE0(v17, v2);
  swift_bridgeObjectRelease();
  v18 = sub_24772C850();
  if (__swift_getEnumTagSinglePayload(v2, 1, v18) == 1)
  {
    OUTLINED_FUNCTION_0_10(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    sub_2476D4F10(v2);
LABEL_6:
    v20 = 0;
    v19 = 1;
    return v20 | ((unint64_t)v19 << 32);
  }
  sub_24772C838();
  OUTLINED_FUNCTION_0_10(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v2, v18);
  if ((*(unsigned int (**)(unsigned int *, uint64_t))(v22 + 88))(v8, v23) != *MEMORY[0x24BE82B20])
  {
    OUTLINED_FUNCTION_5_9(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_5_9(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
  v19 = 0;
  v20 = *v8;
  return v20 | ((unint64_t)v19 << 32);
}

uint64_t sub_2476D5180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v6;

  if (sub_24772C844() == a2 && v4 == a3)
    v6 = 1;
  else
    v6 = sub_24772D4F8();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_2476D51EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2476D5210(uint64_t a1)
{
  uint64_t v1;

  return sub_2476D5180(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for Symbols()
{
  return &type metadata for Symbols;
}

uint64_t OUTLINED_FUNCTION_0_10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t ActorSemaphore.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ActorSemaphore.init(value:)(a1);
  return v2;
}

uint64_t ActorSemaphore.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 120) = MEMORY[0x24BEE4AF8];
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = a1;
    return v1;
  }
  return result;
}

uint64_t ActorSemaphore.wait()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return swift_task_switch();
}

uint64_t sub_2476D5314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_2476D54A4();
      swift_getObjectType();
      sub_24772CD60();
      return swift_task_switch();
    }
    else
    {
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  return result;
}

uint64_t sub_2476D53A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[13];
  v0[2] = v0;
  v0[3] = sub_2476D5450;
  v2 = swift_continuation_init();
  OUTLINED_FUNCTION_6_4();
  sub_2476D56A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2476C5A9C);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 120) + 16);
  sub_2476D5728(v3, (uint64_t (*)(BOOL))sub_2476C5A9C);
  v4 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v4 + 16) = v3 + 1;
  *(_QWORD *)(v4 + 8 * v3 + 32) = v2;
  swift_endAccess();
  return swift_continuation_await();
}

uint64_t sub_2476D5450()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_2476D54A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B8838;
  if (!qword_2576B8838)
  {
    v1 = type metadata accessor for ActorSemaphore();
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for ActorSemaphore, v1);
    atomic_store(result, (unint64_t *)&qword_2576B8838);
  }
  return result;
}

uint64_t type metadata accessor for ActorSemaphore()
{
  return objc_opt_self();
}

Swift::Void __swiftcall ActorSemaphore.signal()()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 112) = v3;
    OUTLINED_FUNCTION_6_4();
    if (*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16))
    {
      sub_2476D5768();
      if (!v4)
        sub_2476D55FC(*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16) - 1);
      swift_endAccess();
      swift_continuation_throwingResume();
    }
    else
    {
      swift_endAccess();
    }
  }
}

uint64_t ActorSemaphore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActorSemaphore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ActorSemaphore.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2476D55E4()
{
  return ActorSemaphore.unownedExecutor.getter();
}

void sub_2476D55FC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_247719238();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_2476B1CD4((char *)(v3 + 8 * a1 + 40), v4 - 1 - a1, (char *)(v3 + 8 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

uint64_t sub_2476D5674()
{
  return sub_2476D56A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2476C5B34);
}

uint64_t sub_2476D5680()
{
  return sub_2476D56A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2476C6274);
}

uint64_t sub_2476D568C()
{
  return sub_2476D56A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2476C6380);
}

uint64_t sub_2476D5698()
{
  return sub_2476D56A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2476C6428);
}

uint64_t sub_2476D56A4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_2476D56F8(uint64_t a1)
{
  return sub_2476D5728(a1, (uint64_t (*)(BOOL))sub_2476C5B34);
}

uint64_t sub_2476D5704(uint64_t a1)
{
  return sub_2476D5728(a1, (uint64_t (*)(BOOL))sub_2476C6274);
}

uint64_t sub_2476D5710(uint64_t a1)
{
  return sub_2476D5728(a1, (uint64_t (*)(BOOL))sub_2476C6380);
}

uint64_t sub_2476D571C(uint64_t a1)
{
  return sub_2476D5728(a1, (uint64_t (*)(BOOL))sub_2476C6428);
}

uint64_t sub_2476D5728(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

void sub_2476D5768()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_247719238();
    v1 = v3;
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    *(_QWORD *)(v1 + 16) = v2 - 1;
    *v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t method lookup function for ActorSemaphore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActorSemaphore.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void URL.setXAttribute<A>(for:value:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_24772C340();
  OUTLINED_FUNCTION_4_11();
  sub_24772C334();
  v1 = sub_24772C328();
  if (!v0)
  {
    MEMORY[0x24BDAC7A8](v1);
    __asm { BR              X10 }
  }
  swift_release();
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476D59E8@<X0>(const void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t result;
  size_t v17;
  const char *v18;
  const char *v19;
  int v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22[2] = a4;
  v22[3] = a5;
  v25 = a3;
  v22[0] = a6;
  v8 = sub_24772CA48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_24772C508();
  v24 = v12;
  sub_24772CA3C();
  sub_2476B5B30();
  v13 = sub_24772D090();
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  swift_bridgeObjectRelease();
  v23 = a2;
  v24 = v25;
  sub_24772CA3C();
  v15 = sub_24772D090();
  result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v8);
  if (a1)
  {
    v17 = sub_24772C598();
    if (v13)
      v18 = (const char *)(v13 + 32);
    else
      v18 = 0;
    if (v15)
      v19 = (const char *)(v15 + 32);
    else
      v19 = 0;
    v20 = setxattr(v18, v19, a1, v17, 0, 2);
    swift_bridgeObjectRelease();
    v21 = swift_bridgeObjectRelease();
    if (v20)
      result = MEMORY[0x249580B14](v21);
    else
      result = 0;
    *(_DWORD *)v22[0] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476D5B64@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2476D59E8(a1, v2[3], v2[4], v2[5], v2[6], a2);
}

void URL.xAttribute<A>(_:for:)(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  ssize_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v6 = sub_24772CA48();
  MEMORY[0x24BDAC7A8](v6);
  sub_24772C508();
  sub_24772CA3C();
  sub_2476B5B30();
  v7 = OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_7_10();
  swift_bridgeObjectRelease();
  v19 = a1;
  v20 = a2;
  sub_24772C91C();
  sub_24772CA3C();
  v8 = OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_7_10();
  if (v7)
    v9 = (const char *)(v7 + 32);
  else
    v9 = 0;
  if (v8)
    v10 = (const char *)(v8 + 32);
  else
    v10 = 0;
  v11 = getxattr(v9, v10, 0, 0, 0, 1);
  OUTLINED_FUNCTION_63_0();
  swift_bridgeObjectRelease();
  if (v11 < 0)
  {
    v15 = OUTLINED_FUNCTION_63_0();
    v16 = MEMORY[0x249580B14](v15);
    if (v16 == 93)
    {
      OUTLINED_FUNCTION_2_8();
    }
    else
    {
      sub_247726D08(v16);
      OUTLINED_FUNCTION_6_11();
    }
  }
  else if (v11)
  {
    v19 = MEMORY[0x2495808F8](v11);
    v20 = v12;
    sub_24772C91C();
    v13 = v21;
    sub_2476D60A4((uint64_t)&v19);
    if (v14)
    {
      sub_247726D08(v14);
      OUTLINED_FUNCTION_6_11();
      sub_2476D5F88(v19, v20);
    }
    else
    {
      sub_24772C31C();
      OUTLINED_FUNCTION_4_11();
      sub_24772C310();
      sub_2476D64E0(v19, v20);
      sub_24772C304();
      OUTLINED_FUNCTION_5_10();
      OUTLINED_FUNCTION_5_10();
      swift_release();
      if (!v13)
        __swift_storeEnumTagSinglePayload(a4, 0, 1, a3);
    }
  }
  else
  {
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_63_0();
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476D5DAC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, size_t a5@<X5>, _DWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  const char *v18;
  const char *v19;
  ssize_t v20;
  _QWORD v21[2];

  v12 = sub_24772CA48();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = a3;
  v21[1] = a4;
  sub_24772CA3C();
  sub_2476B5B30();
  v16 = sub_24772D090();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (a1)
  {
    if (a2)
      v18 = (const char *)(a2 + 32);
    else
      v18 = 0;
    if (v16)
      v19 = (const char *)(v16 + 32);
    else
      v19 = 0;
    v20 = getxattr(v18, v19, a1, a5, 0, 1);
    result = swift_bridgeObjectRelease();
    if (v20 < 0)
    {
      result = MEMORY[0x249580B14](result);
      goto LABEL_12;
    }
    if (v20 == a5)
    {
      result = 0;
LABEL_12:
      *a6 = result;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_2476D5EE0(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, char *))
{
  uint64_t v3;
  _QWORD *result;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  result = (_QWORD *)sub_24772C424();
  v8 = result;
  if (result)
  {
    result = (_QWORD *)sub_24772C448();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 = (_QWORD *)((char *)v8 + a1 - (_QWORD)result);
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = sub_24772C43C();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = (char *)v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  result = a3(&v15, v8, v14);
  if (!v3)
    return (_QWORD *)v15;
  return result;
}

uint64_t sub_2476D5F88(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_2476D5FCC(uint64_t a1, uint64_t a2, _QWORD *(*a3)(unsigned int *__return_ptr, uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *result;
  unsigned int v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  result = a3(&v7, &v8, (char *)&v8 + a5);
  if (!v5)
    return (_QWORD *)v7;
  return result;
}

void sub_2476D60A4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  __asm { BR              X9 }
}

uint64_t sub_2476D6124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unsigned int v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v10 = v5;
  LOWORD(v11) = v1;
  BYTE2(v11) = BYTE2(v1);
  HIBYTE(v11) = BYTE3(v1);
  v12 = BYTE4(v1);
  v13 = BYTE5(v1);
  v14 = BYTE6(v1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_2476D6614(&v10, BYTE6(v1), v2, v6, v0, v4);
  swift_bridgeObjectRelease();
  v8 = v11 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 40) | ((unint64_t)v14 << 48);
  *v3 = v10;
  v3[1] = v8;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_2476D64E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2476D6524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, size_t a7)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;

  result = sub_24772C424();
  if (!result)
    goto LABEL_9;
  v14 = result;
  result = sub_24772C448();
  v15 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_24772C43C();
  sub_2476D5DAC((void *)(v14 + v15), a4, a5, a6, a7, &v17);
  swift_bridgeObjectRelease();
  if (!v16)
    a4 = v17;
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_2476D6614(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v7 = a3;
  sub_2476D5DAC(a1, a3, a4, a5, a6, &v9);
  swift_bridgeObjectRelease();
  if (!v6)
    v7 = v9;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2476D5F88(v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  uint64_t v0;

  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 - 112), 1, 1, *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return sub_24772D090();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2476D5F88(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

__n128 Arc4Random.init()@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  __int16 v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v6;

  sub_24772C454();
  OUTLINED_FUNCTION_4_11();
  v5 = 0x1000000000;
  v6 = sub_24772C430() | 0x4000000000000000;
  sub_2476D7270((uint64_t)&v5);
  Arc4Random.init(seed:)(v5, v6, (uint64_t)&v3);
  result = v4;
  *(_WORD *)a1 = v3;
  *(__n128 *)(a1 + 8) = result;
  return result;
}

double Arc4Random.init(seed:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double result;
  __int128 v8;

  sub_24772C454();
  OUTLINED_FUNCTION_4_11();
  v6 = 0;
  *(_QWORD *)&v8 = 0x10000000000;
  *((_QWORD *)&v8 + 1) = sub_24772C430() | 0x4000000000000000;
  do
  {
    sub_24772C568();
    ++v6;
  }
  while (v6 != 256);
  Arc4Random.addRandomness(using:)();
  Arc4Random.drop(count:)(3072);
  sub_2476D5F88(a1, a2);
  *(_WORD *)a3 = 0;
  result = *(double *)&v8;
  *(_OWORD *)(a3 + 8) = v8;
  return result;
}

void Arc4Random.addRandomness(using:)()
{
  __asm { BR              X11 }
}

Swift::Void __swiftcall Arc4Random.drop(count:)(Swift::Int count)
{
  if (count < 0)
  {
    __break(1u);
    JUMPOUT(0x2476D6EA0);
  }
  if (count)
    __asm { BR              X10 }
}

uint64_t sub_2476D6EC8(uint64_t result, uint64_t a2)
{
  if (result != a2)
    __asm { BR              X11 }
  return result;
}

Swift::UInt64 __swiftcall Arc4Random.next()()
{
  char *v0;
  uint64_t v1;
  char v2;
  int v3;
  Swift::UInt64 v5;

  v1 = 0;
  v5 = 0;
  v2 = *v0;
  v3 = v0[1];
  do
  {
    ++v2;
    v3 += OUTLINED_FUNCTION_0_12();
    OUTLINED_FUNCTION_0_12();
    sub_24772C568();
    OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_0_12();
    OUTLINED_FUNCTION_0_12();
    *((_BYTE *)&v5 + v1++) = OUTLINED_FUNCTION_0_12();
  }
  while (v1 != 8);
  v0[1] = v3;
  *v0 = v2;
  return v5;
}

double sub_2476D7260@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Arc4Random.init(seed:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

void sub_2476D7270(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2476D72CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t bytes, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;

  v21 = v18;
  LOWORD(v22) = a1;
  BYTE2(v22) = BYTE2(a1);
  HIBYTE(v22) = BYTE3(a1);
  v23 = BYTE4(a1);
  v24 = BYTE5(a1);
  v25 = BYTE6(a1);
  result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 0x10uLL, &v21);
  v20 = v22 | ((unint64_t)v23 << 32) | ((unint64_t)v24 << 40) | ((unint64_t)v25 << 48);
  *v17 = v21;
  v17[1] = v20;
  return result;
}

uint64_t sub_2476D7508(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;

  result = sub_24772C424();
  if (result)
  {
    v3 = result;
    result = sub_24772C448();
    if (!__OFSUB__(a1, result))
    {
      v4 = (void *)(v3 + a1 - result);
      sub_24772C43C();
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 0x10uLL, v4);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2476D7578(uint64_t a1)
{
  unint64_t result;

  result = sub_2476D759C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2476D759C()
{
  unint64_t result;

  result = qword_2576B8840;
  if (!qword_2576B8840)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for Arc4Random, &type metadata for Arc4Random);
    atomic_store(result, (unint64_t *)&qword_2576B8840);
  }
  return result;
}

uint64_t dispatch thunk of RandomNumberSeedable.init(seed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for Arc4Random(uint64_t a1)
{
  return sub_2476D5F88(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s15SonicFoundation10Arc4RandomVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_2476D64E0(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for Arc4Random(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_2476D64E0(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_2476D5F88(v5, v6);
  return a1;
}

uint64_t assignWithTake for Arc4Random(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_2476D5F88(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Arc4Random(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for Arc4Random(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Arc4Random()
{
  return &type metadata for Arc4Random;
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  return sub_24772C5B0();
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  return sub_24772C448();
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return sub_24772C424();
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return sub_24772C568();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return sub_24772C448();
}

uint64_t AsyncSequence.collect()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  OUTLINED_FUNCTION_26();
  return swift_task_switch();
}

uint64_t sub_2476D77C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_64();
  v2 = v0[4];
  v1 = v0[5];
  swift_getAssociatedTypeWitness();
  v0[3] = sub_24772C8D4();
  v3 = swift_task_alloc();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  sub_24772CD48();
  *v4 = v0;
  v4[1] = sub_2476D789C;
  return sub_24772CEC8();
}

uint64_t sub_2476D789C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D78F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2476D7900()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476D7934(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(char *, _QWORD);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedTypeWitness;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[32];
  uint64_t v49;

  v35 = a5;
  v36 = a8;
  v43 = a1;
  v44 = a2;
  v34 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_70_1();
  v45 = v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_53_3();
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_52_3();
  v16 = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_9();
  v33 = v18;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v32 - v20;
  v22 = sub_24772CF28();
  if (!v22)
    return sub_24772CCE8();
  v23 = v22;
  v49 = sub_24772C8D4();
  v39 = sub_24772D270();
  sub_24772D21C();
  v41 = a6;
  result = sub_24772CF10();
  if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = v23;
    v40 = v9;
    while (v25)
    {
      v46 = v25;
      v26 = (void (*)(char *, _QWORD))sub_24772CF88();
      (*(void (**)(uint64_t))(v8 + 16))(v10);
      v26(v48, 0);
      v27 = v21;
      v28 = v47;
      v43(v10, v45);
      if (v28)
      {
        OUTLINED_FUNCTION_62_2();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v45, v35);
      }
      v47 = 0;
      OUTLINED_FUNCTION_62_2();
      sub_24772D258();
      OUTLINED_FUNCTION_50_1();
      result = sub_24772CF58();
      v25 = v46 - 1;
      if (v46 == 1)
      {
        v30 = v37;
        v29 = v38;
        v31 = v33;
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v33, v27, v38);
        sub_24772D108();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
        return v49;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void RandomAccessCollection<>.chunkRanges(by:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  void (*v44)(uint64_t, char *, uint64_t);
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t TupleTypeMetadata2;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  OUTLINED_FUNCTION_3_8();
  v2 = v1;
  v86 = v3;
  v5 = v4;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_74_0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_11_9();
  v72 = v10;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)&v60 - v12;
  OUTLINED_FUNCTION_74_0();
  v77 = v13;
  v14 = sub_24772CFA0();
  v71 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_11_9();
  v70 = v16;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v17);
  v69 = (char *)&v60 - v18;
  OUTLINED_FUNCTION_74_0();
  sub_24772D018();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v60 - v20;
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_11_9();
  v76 = v23;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v24);
  v75 = (char *)&v60 - v25;
  OUTLINED_FUNCTION_59_2();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v60 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v60 - v30;
  OUTLINED_FUNCTION_50_1();
  v64 = sub_24772D1EC();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v32);
  v63 = (char *)&v60 - v33;
  OUTLINED_FUNCTION_50_1();
  v83 = sub_24772D3E4();
  v62 = *(_QWORD *)(v83 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v34);
  v82 = (char *)&v60 - v35;
  v85 = v2;
  v36 = swift_getAssociatedTypeWitness();
  sub_24772D018();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v60 - v38;
  v65 = *(_QWORD *)(v36 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_69_1(v41, v60);
  v78 = v14;
  v88 = sub_24772C8D4();
  v79 = v7;
  v80 = v0;
  v42 = sub_24772CF28();
  if (!v5)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v43 = v42 == 0x8000000000000000 && v5 == -1;
  if (v43)
    goto LABEL_15;
  v68 = sub_24772CD48();
  sub_24772CCC4();
  v87 = v5;
  OUTLINED_FUNCTION_50_1();
  swift_getAssociatedConformanceWitness();
  sub_2476D980C();
  sub_24772CF04();
  OUTLINED_FUNCTION_8_8((uint64_t)v39, 1, v36);
  if (!v43)
  {
    v44 = *(void (**)(uint64_t, char *, uint64_t))(v65 + 32);
    v61 = v36;
    v44(v84, v39, v36);
    OUTLINED_FUNCTION_161();
    sub_24772CF10();
    OUTLINED_FUNCTION_161();
    sub_24772CF4C();
    sub_24772D660();
    v45 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
    OUTLINED_FUNCTION_37_5((uint64_t)v29);
    OUTLINED_FUNCTION_37_5((uint64_t)v31);
    sub_24772D1E0();
    sub_24772D3D8();
    OUTLINED_FUNCTION_8_8((uint64_t)v21, 1, AssociatedTypeWitness);
    if (v43)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v62 + 8))(v82, v83);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v84, v61);
      OUTLINED_FUNCTION_24_3();
      return;
    }
    v67 = v29;
    v66 = v21;
    while (1)
    {
      OUTLINED_FUNCTION_33_5((uint64_t)v31, (uint64_t)v21);
      v46 = (uint64_t)v75;
      sub_24772D06C();
      v47 = v76;
      sub_24772CF4C();
      sub_24772D570();
      OUTLINED_FUNCTION_37_5(v47);
      OUTLINED_FUNCTION_37_5(v46);
      if ((sub_24772C9C4() & 1) == 0)
        break;
      v48 = v45;
      v49 = (uint64_t)v31;
      v50 = v73;
      v51 = TupleTypeMetadata2;
      v52 = v73 + *(int *)(TupleTypeMetadata2 + 48);
      OUTLINED_FUNCTION_80_0(v73, v49);
      OUTLINED_FUNCTION_33_5(v52, (uint64_t)v29);
      v53 = v72;
      v54 = v72 + *(int *)(v51 + 48);
      OUTLINED_FUNCTION_80_0(v72, v50);
      OUTLINED_FUNCTION_80_0(v54, v52);
      v55 = v70;
      OUTLINED_FUNCTION_33_5(v70, v53);
      v48(v54, AssociatedTypeWitness);
      v56 = *(int *)(v51 + 48);
      v31 = (char *)v49;
      v45 = v48;
      v57 = v53 + v56;
      OUTLINED_FUNCTION_33_5(v53, v50);
      OUTLINED_FUNCTION_33_5(v57, v52);
      v58 = v78;
      OUTLINED_FUNCTION_33_5(v55 + *(int *)(v78 + 36), v57);
      v59 = v53;
      v21 = v66;
      v29 = v67;
      v48(v59, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v69, v55, v58);
      sub_24772CD18();
      OUTLINED_FUNCTION_37_5((uint64_t)v31);
      sub_24772D3D8();
      OUTLINED_FUNCTION_8_8((uint64_t)v21, 1, AssociatedTypeWitness);
      if (v43)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

void Sequence.chunked(by:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_3_8();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_56_3();
  v27 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  sub_24772D018();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  v29 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_70_1();
  v30 = v13;
  v34 = OUTLINED_FUNCTION_56_3();
  v14 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v16 = (char *)&v26 - v15;
  v17 = OUTLINED_FUNCTION_40_2();
  v37 = sub_24772C8D4();
  v31 = v0;
  v32 = v2;
  v18 = sub_24772CBBC();
  if (!v4)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  v19 = v18 == 0x8000000000000000 && v4 == -1;
  if (v19)
    goto LABEL_17;
  v28 = v14;
  OUTLINED_FUNCTION_74_0();
  v33 = sub_24772CD48();
  sub_24772CCC4();
  v36 = sub_24772C8D4();
  v20 = v4;
  sub_24772CCC4();
  OUTLINED_FUNCTION_61_2(v30, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  sub_24772CBB0();
  OUTLINED_FUNCTION_47_2();
  sub_24772D054();
  OUTLINED_FUNCTION_8_8((uint64_t)v11, 1, v5);
  if (!v19)
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    do
    {
      v21(v8, v11, v5);
      sub_24772CD18();
      v22 = v36;
      v23 = sub_24772C91C();
      v24 = MEMORY[0x249581078](v23, v5);
      swift_bridgeObjectRelease();
      if (v24 == v20)
      {
        v35 = v22;
        sub_24772C91C();
        OUTLINED_FUNCTION_63_1();
        sub_24772CD3C();
      }
      sub_24772D054();
      OUTLINED_FUNCTION_8_8((uint64_t)v11, 1, v5);
    }
    while (!v19);
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v34);
  v25 = v36;
  v35 = v36;
  MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], v17);
  if ((sub_24772CF7C() & 1) != 0)
  {
    OUTLINED_FUNCTION_32();
  }
  else
  {
    v35 = v25;
    OUTLINED_FUNCTION_63_1();
  }
  OUTLINED_FUNCTION_24_3();
}

void Sequence.async.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;

  OUTLINED_FUNCTION_3_8();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_56_3();
  v30 = swift_allocBox();
  OUTLINED_FUNCTION_40_1((uint64_t)v29, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16));
  sub_24772CBB0();
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v26;
  v31[3] = v24;
  v31[4] = v30;
  OUTLINED_FUNCTION_56_3();
  sub_24772CE50();
  OUTLINED_FUNCTION_24_3();
}

uint64_t sub_2476D860C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  v4[8] = swift_getAssociatedTypeWitness();
  v4[9] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_2476D867C()
{
  uint64_t v0;

  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_24772D054();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_78_0(a1, a2, a3, a4, a5);
  v6[9] = OUTLINED_FUNCTION_28();
  v7 = OUTLINED_FUNCTION_4_12();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_39_3();
  v6[13] = OUTLINED_FUNCTION_28();
  v6[14] = *(_QWORD *)(v5 - 8);
  v6[15] = OUTLINED_FUNCTION_28();
  v8 = OUTLINED_FUNCTION_4_12();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D87C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_64();
  v11 = *(_QWORD *)(v9 + 112);
  v10 = *(_QWORD *)(v9 + 120);
  *(_QWORD *)(v9 + 16) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_17_6(v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  OUTLINED_FUNCTION_41_4();
  v12 = *(_QWORD *)(v9 + 104);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_5_12(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_19_3();
    v14 = *(_QWORD *)(v9 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    return OUTLINED_FUNCTION_3_13(v14, *(uint64_t (**)(void))(v9 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_7(*(_QWORD *)(v9 + 88));
    v15 = (_QWORD *)OUTLINED_FUNCTION_36_3();
    v16 = OUTLINED_FUNCTION_48_3(v15);
    return OUTLINED_FUNCTION_25_4(v16, v17, a9);
  }
}

uint64_t sub_2476D88A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 160) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D88F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  sub_24772CD48();
  sub_24772CD18();
  v1 = OUTLINED_FUNCTION_161();
  v2(v1);
  v3 = *(_QWORD *)(v0 + 104);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_5_12(v3);
  if (v4)
  {
    OUTLINED_FUNCTION_19_3();
    v5 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  else
  {
    OUTLINED_FUNCTION_18_7(*(_QWORD *)(v0 + 88));
    v6 = (_QWORD *)OUTLINED_FUNCTION_35_5();
    v7 = OUTLINED_FUNCTION_48_3(v6);
    return OUTLINED_FUNCTION_25_4(v7, v8, v10);
  }
}

uint64_t sub_2476D89F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64();
  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_71_0(*(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_73_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Sequence.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_78_0(a1, a2, a3, a4, a5);
  v8 = OUTLINED_FUNCTION_75_0();
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = OUTLINED_FUNCTION_28();
  v6[12] = *(_QWORD *)(a4 - 8);
  v6[13] = OUTLINED_FUNCTION_20_1();
  v6[14] = OUTLINED_FUNCTION_20_1();
  v9 = OUTLINED_FUNCTION_4_12();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_39_3();
  v6[18] = OUTLINED_FUNCTION_28();
  v6[19] = *(_QWORD *)(v5 - 8);
  v6[20] = OUTLINED_FUNCTION_28();
  v10 = OUTLINED_FUNCTION_4_12();
  v6[21] = v10;
  v6[22] = *(_QWORD *)(v10 - 8);
  v6[23] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D8B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_17_6(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_41_4();
  v3 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_5_12(v3);
  if (v4)
  {
    OUTLINED_FUNCTION_16_6();
    v5 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    return OUTLINED_FUNCTION_23_5(v5, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_7(*(_QWORD *)(v0 + 128));
    v6 = (_QWORD *)OUTLINED_FUNCTION_35_5();
    v7 = OUTLINED_FUNCTION_44_4(v6);
    return OUTLINED_FUNCTION_24_6(v7, v8, v10);
  }
}

uint64_t sub_2476D8C50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 200) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D8CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumTagSinglePayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 48);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  if (EnumTagSinglePayload == 1)
  {
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v8);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 96);
    OUTLINED_FUNCTION_40_1(v9, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
    OUTLINED_FUNCTION_40_1(v10, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    OUTLINED_FUNCTION_40_2();
    sub_24772CD18();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v2);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v12 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_5_12(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_16_6();
    v14 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    return OUTLINED_FUNCTION_23_5(v14, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_7(*(_QWORD *)(v0 + 128));
    v15 = (_QWORD *)OUTLINED_FUNCTION_36_3();
    v16 = OUTLINED_FUNCTION_44_4(v15);
    return OUTLINED_FUNCTION_24_6(v16, v17, v19);
  }
}

uint64_t sub_2476D8E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_71_0(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_73_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collection.nonEmpty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  if ((sub_24772CF40() & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_61_2(a2, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16));
    v5 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v5, 1, a1);
}

void Collection<>.transposed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_3_8();
  v4 = v3;
  v6 = v5;
  v28 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_69_1(v11, v27[0]);
  v12 = sub_24772D018();
  OUTLINED_FUNCTION_67_1();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v27 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_53_3();
  v29 = v0;
  sub_24772CF70();
  OUTLINED_FUNCTION_8_8((uint64_t)v15, 1, AssociatedTypeWitness);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v15, v12);
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_72_1();
    sub_24772CCE8();
  }
  else
  {
    v19 = v16;
    OUTLINED_FUNCTION_61_2(v2, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
    v20 = v27[2];
    OUTLINED_FUNCTION_161();
    v21 = sub_24772CF34();
    v27[1] = (uint64_t)v27;
    MEMORY[0x24BDAC7A8](v21);
    v27[-4] = v6;
    v27[-3] = v4;
    v22 = v29;
    v27[-2] = v28;
    v27[-1] = v22;
    OUTLINED_FUNCTION_66_1();
    v23 = OUTLINED_FUNCTION_72_1();
    v24 = v31;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2476D7934((void (*)(uint64_t, uint64_t))sub_2476D9AF8, (uint64_t)&v27[-6], v24, v23, MEMORY[0x24BEE4078], AssociatedConformanceWitness, MEMORY[0x24BEE40A8], v26);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v20, v24);
    OUTLINED_FUNCTION_73_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  }
  OUTLINED_FUNCTION_24_3();
}

uint64_t sub_2476D9168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[6];

  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a1;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = sub_2476D7934((void (*)(uint64_t, uint64_t))sub_2476D9B18, (uint64_t)v11, a2, AssociatedTypeWitness, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v9);
  *a5 = result;
  return result;
}

uint64_t sub_2476D923C@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v2)(uint64_t *, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  v2 = (uint64_t (*)(uint64_t *, _QWORD))sub_24772CF88();
  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v4, AssociatedTypeWitness);
  return v2(&v7, 0);
}

uint64_t Array.mutateEach(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 + 64);
  v4[12] = OUTLINED_FUNCTION_20_1();
  v4[13] = OUTLINED_FUNCTION_20_1();
  v4[14] = OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_26();
  return swift_task_switch();
}

uint64_t sub_2476D9390()
{
  uint64_t v0;
  char v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  OUTLINED_FUNCTION_64();
  v2 = *(uint64_t **)(v0 + 64);
  v3 = *(_QWORD **)(v0 + 72);
  *(_QWORD *)(v0 + 16) = sub_24772CCE8();
  v4 = *v2;
  *(_QWORD *)(v0 + 120) = v4;
  MEMORY[0x249581078](v4, v3);
  sub_24772CCC4();
  sub_24772C91C();
  v5 = sub_24772CC88();
  *(_QWORD *)(v0 + 24) = v5;
  if (v5 == MEMORY[0x249581090](v4, v3))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_4();
    *v3 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    return OUTLINED_FUNCTION_4_3(*(uint64_t (**)(void))(v0 + 8));
  }
  v7 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_51_3();
  OUTLINED_FUNCTION_105();
  if ((v1 & 1) != 0)
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120)+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 80) + 72) * v5, *(_QWORD *)(v0 + 72));
    goto LABEL_5;
  }
  result = OUTLINED_FUNCTION_57_3();
  if (v7 == 8)
  {
    OUTLINED_FUNCTION_20_4(result);
    swift_unknownObjectRelease();
LABEL_5:
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_149();
  }
  __break(1u);
  return result;
}

uint64_t sub_2476D94D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_77_0();
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476D952C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  OUTLINED_FUNCTION_64();
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 128))(v3, v2, v4);
  sub_24772CD18();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = MEMORY[0x249581090](v1, v4);
  v8 = *(_QWORD *)(v0 + 120);
  if (v6 == v7)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_4();
    *v3 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    return OUTLINED_FUNCTION_4_3(*(uint64_t (**)(void))(v0 + 8));
  }
  OUTLINED_FUNCTION_51_3();
  OUTLINED_FUNCTION_105();
  if ((v4 & 1) != 0)
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120)+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 80) + 72) * v6, *(_QWORD *)(v0 + 72));
    goto LABEL_5;
  }
  result = OUTLINED_FUNCTION_57_3();
  if (v8 == 8)
  {
    OUTLINED_FUNCTION_20_4(result);
    swift_unknownObjectRelease();
LABEL_5:
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_149();
  }
  __break(1u);
  return result;
}

uint64_t sub_2476D9660()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_23_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D96AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;

  v2[2] = a1;
  v2[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[4] = AssociatedTypeWitness;
  v2[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2476D9724()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_1(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 16));
  OUTLINED_FUNCTION_40_2();
  sub_24772CD18();
  OUTLINED_FUNCTION_70();
  return OUTLINED_FUNCTION_23_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476D9778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2476D97E0;
  return sub_2476D96AC(a1, a2);
}

uint64_t sub_2476D97E0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2476D980C()
{
  unint64_t result;

  result = qword_2576B8860;
  if (!qword_2576B8860)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, &qword_2576B8860);
  }
  return result;
}

uint64_t sub_2476D9848()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2476D986C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2476D97E0;
  return sub_2476D860C(a1, v6, v4, v5);
}

void Dictionary.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_3_8();
  v33 = v2;
  v34 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v28 = v10;
  v30 = v11;
  v12 = OUTLINED_FUNCTION_75_0();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - v14;
  v35 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_52_3();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_53_3();
  v27 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_50_1();
  v29 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v20, v28, v5);
  sub_24772CBB0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_5_12(v1);
  if (v22)
  {
LABEL_7:
    OUTLINED_FUNCTION_42_4();
    v25 = 1;
    v24 = v30;
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
    while (1)
    {
      v23(v0, v1, v9);
      MEMORY[0x249580CC4](v0, v33, v9, v7, v34);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v0, v9);
      OUTLINED_FUNCTION_8_8((uint64_t)v15, 1, v7);
      if (!v22)
        break;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_5_12(v1);
      if (v22)
        goto LABEL_7;
    }
    OUTLINED_FUNCTION_42_4();
    v24 = v30;
    OUTLINED_FUNCTION_61_2(v30, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    v25 = 0;
  }
  __swift_storeEnumTagSinglePayload(v24, v25, 1, v7);
  OUTLINED_FUNCTION_24_3();
}

uint64_t sub_2476D9AF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2476D9168(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2476D9B18@<X0>(uint64_t a1@<X8>)
{
  return sub_2476D923C(a1);
}

uint64_t OUTLINED_FUNCTION_3_13(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_5_12(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return sub_24772D054();
}

uint64_t OUTLINED_FUNCTION_8_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
}

uint64_t OUTLINED_FUNCTION_17_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_18_7@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[18], v0[16]);
}

uint64_t OUTLINED_FUNCTION_20_4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2[14];
  v5 = v2[9];
  v6 = v2[10];
  v2[4] = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1 + 8, v5);
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_23_5(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_24_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_25_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_5(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return sub_24772D054();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_37_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_24772CD48();
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return sub_24772CBB0();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_44_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 88);
}

uint64_t OUTLINED_FUNCTION_45_4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_48_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 72);
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  return sub_24772CD00();
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  return sub_24772CCE8();
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return sub_24772D1A4();
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_61_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return sub_24772CD18();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_69_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_71_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return sub_24772CD48();
}

uint64_t OUTLINED_FUNCTION_73_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_78_0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = result;
  v6[4] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_80_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_2476D9EF0(uint64_t a1)
{
  _OWORD v2[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2476B5E48((_OWORD *)a1, v2);
    OUTLINED_FUNCTION_59_3();
    sub_2477069FC();
    return OUTLINED_FUNCTION_32();
  }
  else
  {
    sub_2476DC4D4(a1);
    sub_24770669C();
    OUTLINED_FUNCTION_32();
    return sub_2476DC4D4((uint64_t)v2);
  }
}

uint64_t sub_2476D9F64(uint64_t a1)
{
  _BYTE v2[16];

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_2476DC3D8(a1);
    sub_24770678C((uint64_t)v2);
    OUTLINED_FUNCTION_32();
    return sub_2476DC3D8((uint64_t)v2);
  }
  else
  {
    sub_2476DC490(a1, (uint64_t)v2);
    OUTLINED_FUNCTION_59_3();
    sub_247706A28();
    return OUTLINED_FUNCTION_32();
  }
}

uint64_t wrappingErrors<A, B>(in:_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[2];

  v11 = *(_QWORD *)(a6 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v25 - v16;
  result = v18(v15);
  if (v7)
  {
    a1(result);
    sub_2476CA9B4(0, &qword_2576B81F0, (uint64_t (*)(uint64_t))sub_2476BAF4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_24772E730;
    *(_QWORD *)(v20 + 32) = v7;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v17, a6);
    v22 = type metadata accessor for _WrappingError(0, a6, a7, v21);
    MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, v22);
    swift_allocError();
    _WrappingError.init(error:underlyingErrors:)((uint64_t)v14, v20, a6, a7, v23);
    v24 = v7;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, a6);
    swift_willThrow();
    return MEMORY[0x2495821C4](v7);
  }
  return result;
}

void Error.withUnderlyingErrors(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_28_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v3, a2);
  OUTLINED_FUNCTION_59_3();
  v13 = type metadata accessor for _WrappingError(v9, v10, v11, v12);
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, v13);
  OUTLINED_FUNCTION_36();
  _WrappingError.init(error:underlyingErrors:)(v4, a1, a2, a3, v14);
  sub_24772C91C();
  OUTLINED_FUNCTION_11();
}

uint64_t wrappingErrors<A, B>(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a2;
  v8[3] = a3;
  v8[6] = *(_QWORD *)(a7 - 8);
  v8[7] = swift_task_alloc();
  v8[8] = swift_task_alloc();
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[9] = v11;
  *v11 = v8;
  v11[1] = sub_2476DA2B4;
  return v13(a1);
}

uint64_t sub_2476DA2B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2476DA334()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = (*(uint64_t (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_14_4(v7, &qword_2576B81F0, (uint64_t (*)(uint64_t))sub_2476BAF4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24772E730;
  *(_QWORD *)(v8 + 32) = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v3, v6);
  v10 = type metadata accessor for _WrappingError(0, v6, v4, v9);
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, v10);
  OUTLINED_FUNCTION_36();
  _WrappingError.init(error:underlyingErrors:)(v2, v8, v6, v4, v11);
  v12 = v1;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  swift_willThrow();
  MEMORY[0x2495821C4](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void _WrappingError.init(error:underlyingErrors:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  *(_QWORD *)(a5 + *(int *)(type metadata accessor for _WrappingError(0, a3, a4, v9) + 36)) = a2;
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for _WrappingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _WrappingError);
}

Swift::Bool __swiftcall Error.contains(domain:)(Swift::String domain)
{
  uint64_t v1;

  Error.unwrap(firstDomain:)();
  if (v1)
    OUTLINED_FUNCTION_54_3();
  return 0;
}

void Error.unwrap(firstDomain:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_3_8();
  v3 = v2;
  v5 = v4;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - v9;
  if (OUTLINED_FUNCTION_51_4() == v5 && v11 == v3)
  {
    OUTLINED_FUNCTION_32();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_38_5();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      OUTLINED_FUNCTION_10_8(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      if (OUTLINED_FUNCTION_53_4())
      {
        OUTLINED_FUNCTION_16_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      }
      else
      {
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_10_8(v15, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      }
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_3();
    }
  }
  OUTLINED_FUNCTION_10_8((uint64_t)v10, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  if (OUTLINED_FUNCTION_53_4())
  {
    OUTLINED_FUNCTION_16_7((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_8(v14, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  }
  OUTLINED_FUNCTION_24_3();
}

Swift::Bool __swiftcall Error.contains(domain:code:)(Swift::String domain, Swift::Int code)
{
  uint64_t v2;

  Error.unwrap(firstDomain:code:)();
  if (v2)
    OUTLINED_FUNCTION_54_3();
  return 0;
}

void Error.unwrap(firstDomain:code:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_3_8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_10();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v40 = (uint64_t)&v40 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - v14;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v42 = v16;
  v41((uint64_t)&v40 - v14, v16, v17);
  v18 = sub_24772D4C8();
  v43 = v2;
  if (v18)
  {
    v19 = v18;
    OUTLINED_FUNCTION_46_5((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  else
  {
    v19 = OUTLINED_FUNCTION_36();
    v21 = OUTLINED_FUNCTION_47_3(v19, v20);
    OUTLINED_FUNCTION_31_4(v21, (uint64_t)v15, v22);
  }
  v23 = (void *)sub_24772C490();
  MEMORY[0x2495821C4](v19);
  v24 = objc_msgSend(v23, sel_domain);
  v25 = sub_24772CA18();
  v27 = v26;

  if (v25 == v8 && v27 == v6)
  {
    OUTLINED_FUNCTION_40_3();
  }
  else
  {
    v29 = OUTLINED_FUNCTION_38_5();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {

      goto LABEL_14;
    }
  }
  v30 = objc_msgSend(v23, sel_code);

  if (v30 != v4)
  {
LABEL_14:
    OUTLINED_FUNCTION_31_4(v0, v42, v41);
    if (OUTLINED_FUNCTION_45_5())
    {
      OUTLINED_FUNCTION_46_5(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    }
    else
    {
      v32 = OUTLINED_FUNCTION_36();
      v34 = OUTLINED_FUNCTION_47_3(v32, v33);
      OUTLINED_FUNCTION_31_4(v34, v0, v35);
    }
    OUTLINED_FUNCTION_52_4();
    OUTLINED_FUNCTION_39_4();
  }
  v31 = v40;
  OUTLINED_FUNCTION_31_4(v40, v42, v41);
  if (OUTLINED_FUNCTION_45_5())
  {
    OUTLINED_FUNCTION_46_5(v31, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  else
  {
    v36 = OUTLINED_FUNCTION_36();
    v38 = OUTLINED_FUNCTION_47_3(v36, v37);
    OUTLINED_FUNCTION_31_4(v38, v31, v39);
  }
  OUTLINED_FUNCTION_24_3();
}

void Error.contains<A>(any:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_28_3();
  (*(void (**)(uint64_t))(v4 + 16))(v3);
  if (OUTLINED_FUNCTION_35_6())
  {
    OUTLINED_FUNCTION_16_7(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_8_9(v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  }
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_39_4();
}

void sub_2476DAAB0(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_33_6(a1, sel_domain);
  sub_24772CA18();

  OUTLINED_FUNCTION_33_6(v3, sel_code);
  Error.unwrap(firstDomain:code:)();
  v5 = v4;
  swift_bridgeObjectRelease();

  if (v5)
    OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_18_3();
}

void Error.unwrap<A>(first:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_3_8();
  v44 = v2;
  v45 = v0;
  v4 = v3;
  v43 = v5;
  v7 = v6;
  v9 = v8;
  v40 = OUTLINED_FUNCTION_24_7(255, v3, v10, v2);
  v38 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_25_5();
  v42 = v12;
  v39 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_25_5();
  v37 = v14;
  v41 = OUTLINED_FUNCTION_11_10();
  v15 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_4_8();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - v18;
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v36 - v22;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v36((char *)&v36 - v22, v7, v4);
  v24 = sub_24772D4C8();
  v46 = v9;
  if (v24)
  {
    v25 = v24;
    OUTLINED_FUNCTION_56_4(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  }
  else
  {
    v25 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_61_2(v26, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  }
  v27 = (void *)sub_24772C490();
  MEMORY[0x2495821C4](v25);
  v28 = objc_msgSend(v27, sel_domain);
  sub_24772CA18();

  objc_msgSend(v27, sel_code);
  OUTLINED_FUNCTION_43_4();
  v30 = v29;
  OUTLINED_FUNCTION_40_3();

  if (!v30)
  {
    v30 = 1;
LABEL_11:
    v33 = v46;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_1_11())
    OUTLINED_FUNCTION_2_10();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v4);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v41);
  OUTLINED_FUNCTION_42_5();
  v31 = v42;
  if (!OUTLINED_FUNCTION_7_12())
  {
    OUTLINED_FUNCTION_4_13();
    v34 = OUTLINED_FUNCTION_55_2();
    v35(v34, v40);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_5_13(v31, 0);
  v32 = v37;
  OUTLINED_FUNCTION_8_9(v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
  v33 = v46;
  v36((char *)v46, v32, v4);
  OUTLINED_FUNCTION_12_6();
  v30 = 0;
LABEL_12:
  __swift_storeEnumTagSinglePayload(v33, v30, 1, v4);
  OUTLINED_FUNCTION_24_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_3_8();
  v1 = v0;
  v24 = v2;
  v5 = type metadata accessor for _WrappingError(255, v0, *(_QWORD *)(v3 + 8), v4);
  v21 = sub_24772D018();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_25_5();
  v22 = v7;
  v20 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_25_5();
  v19 = v9;
  v10 = *(_QWORD *)(OUTLINED_FUNCTION_11_10() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_28_4();
  v23 = v12;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_15_7();
  sub_24772C394();
  OUTLINED_FUNCTION_43_4();
  v15 = v14;
  OUTLINED_FUNCTION_53_1();
  if (!v15)
  {
    v15 = 1;
LABEL_8:
    v16 = v24;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_1_11())
    OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_30_3();
  OUTLINED_FUNCTION_29_7(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_42_5();
  if (!OUTLINED_FUNCTION_7_12())
  {
    OUTLINED_FUNCTION_4_13();
    v17 = OUTLINED_FUNCTION_55_2();
    v18(v17, v21);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_5_13(v22, 0);
  OUTLINED_FUNCTION_8_9(v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  v16 = v24;
  OUTLINED_FUNCTION_20_5(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  OUTLINED_FUNCTION_12_6();
  v15 = 0;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v16, v15, 1, v1);
  OUTLINED_FUNCTION_24_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_3_8();
  v3 = v2;
  v25 = v4;
  v22 = OUTLINED_FUNCTION_24_7(255, v2, v6, v5);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_25_5();
  v23 = v8;
  v21 = *(_QWORD *)(v0 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_25_5();
  v20 = v10;
  v11 = *(_QWORD *)(OUTLINED_FUNCTION_11_10() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_28_4();
  v24 = v13;
  MEMORY[0x24BDAC7A8](v14);
  swift_getMetatypeMetadata();
  sub_24772CA6C();
  Error.unwrap(firstDomain:)();
  v16 = v15;
  swift_bridgeObjectRelease();
  if (!v16)
  {
    v16 = 1;
LABEL_8:
    v17 = v25;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_1_11())
    OUTLINED_FUNCTION_2_10();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  OUTLINED_FUNCTION_29_7(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_42_5();
  if (!OUTLINED_FUNCTION_7_12())
  {
    OUTLINED_FUNCTION_4_13();
    v18 = OUTLINED_FUNCTION_55_2();
    v19(v18, v22);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_5_13(v23, 0);
  OUTLINED_FUNCTION_8_9(v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
  v17 = v25;
  OUTLINED_FUNCTION_20_5(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  OUTLINED_FUNCTION_12_6();
  v16 = 0;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v17, v16, 1, v3);
  OUTLINED_FUNCTION_24_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_3_8();
  v24 = v1;
  v3 = v2;
  v21 = OUTLINED_FUNCTION_24_7(255, v2, *(_QWORD *)(v4 + 8), v5);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_25_5();
  v22 = v7;
  v20 = *(_QWORD *)(v0 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_25_5();
  v19 = v9;
  v10 = *(_QWORD *)(OUTLINED_FUNCTION_11_10() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_28_4();
  v23 = v12;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_15_7();
  Error.unwrap(firstDomain:)();
  v15 = v14;
  OUTLINED_FUNCTION_18_5();
  if (!v15)
  {
    v15 = 1;
LABEL_8:
    v16 = v24;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_1_11())
    OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_30_3();
  OUTLINED_FUNCTION_29_7(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_42_5();
  if (!OUTLINED_FUNCTION_7_12())
  {
    OUTLINED_FUNCTION_4_13();
    v17 = OUTLINED_FUNCTION_55_2();
    v18(v17, v21);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_5_13(v22, 0);
  OUTLINED_FUNCTION_8_9(v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  v16 = v24;
  OUTLINED_FUNCTION_20_5(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  OUTLINED_FUNCTION_12_6();
  v15 = 0;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v16, v15, 1, v3);
  OUTLINED_FUNCTION_24_3();
}

Swift::Bool __swiftcall Error._is(domain:)(Swift::String domain)
{
  void *object;
  void *v2;
  char v4;

  object = domain._object;
  if (OUTLINED_FUNCTION_51_4() == domain._countAndFlagsBits && v2 == object)
    v4 = 1;
  else
    v4 = OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_32();
  return v4 & 1;
}

Swift::Bool __swiftcall Error._is(domain:code:)(Swift::String domain, Swift::Int code)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](domain._countAndFlagsBits);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v6);
  if (OUTLINED_FUNCTION_35_6())
  {
    OUTLINED_FUNCTION_16_7((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_8_9(v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  }
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_39_4();
}

void sub_2476DB464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;

  v4 = OUTLINED_FUNCTION_33_6(a1, sel_domain);
  v5 = sub_24772CA18();
  v7 = v6;

  if (v5 == v2 && v7 == v1)
  {
    v10 = OUTLINED_FUNCTION_132();
    goto LABEL_8;
  }
  v9 = OUTLINED_FUNCTION_38_5();
  v10 = OUTLINED_FUNCTION_18_5();
  if ((v9 & 1) != 0)
  {
LABEL_8:
    OUTLINED_FUNCTION_33_6(v10, sel_code);

    goto LABEL_9;
  }

LABEL_9:
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_2476DB4F0(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v13;

  v13 = *v2;
  v5 = v13;
  v6 = MEMORY[0x2495822A8](MEMORY[0x24BDD01A8]);
  v8 = type metadata accessor for _WrappingError(0, a2, v6, v7);
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, v8);
  v9 = swift_allocError();
  _WrappingError.init(error:underlyingErrors:)((uint64_t)&v13, a1, a2, v6, v10);
  v11 = v5;
  sub_24772C91C();
  return v9;
}

uint64_t _WrappingError.error.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _WrappingError.error.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*_WrappingError.error.modify())(void)
{
  return nullsub_1;
}

uint64_t _WrappingError.underlyingErrors.getter()
{
  return sub_24772C91C();
}

void _WrappingError.underlyingErrors.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*_WrappingError.underlyingErrors.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2476DB634(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, a1);
  return sub_24772D5A0();
}

uint64_t sub_2476DB668(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, a1);
  return sub_24772D594();
}

uint64_t sub_2476DB69C()
{
  return sub_24772C91C();
}

uint64_t sub_2476DB6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  v7 = MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, a2);
  v9 = type metadata accessor for _WrappingError(0, a2, v7, v8);
  MEMORY[0x2495822A8](&protocol conformance descriptor for _WrappingError<A>, v9);
  v10 = swift_allocError();
  _WrappingError.init(error:underlyingErrors:)((uint64_t)v5, a1, a2, v7, v11);
  sub_24772C91C();
  return v10;
}

uint64_t _WrappingError.description.getter()
{
  unint64_t v0;
  uint64_t v1;

  sub_24772D144();
  sub_24772D4D4();
  sub_24772CAFC();
  v0 = OUTLINED_FUNCTION_80();
  v1 = sub_24772C91C();
  MEMORY[0x249581000](v1, v0);
  sub_24772CAFC();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_40_3();
  return 0;
}

uint64_t _WrappingError.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v11 = sub_24772D720();
  sub_24772CAFC();
  sub_2476DC520(0, (unint64_t *)&qword_2576B7F40, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = OUTLINED_FUNCTION_15_1();
  *(_OWORD *)(v4 + 16) = xmmword_24772E730;
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v4 + 56) = v5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 + 32));
  OUTLINED_FUNCTION_10_8((uint64_t)boxed_opaque_existential_0, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_132();
  sub_24772CAFC();
  v7 = OUTLINED_FUNCTION_15_1();
  *(_OWORD *)(v7 + 16) = xmmword_24772E730;
  v8 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  OUTLINED_FUNCTION_14_4(v7, &qword_2576B8898, (uint64_t (*)(uint64_t))sub_2476BAF4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 32) = v8;
  sub_24772C91C();
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_132();
  sub_24772CAFC();
  return v11;
}

uint64_t static _WrappingError.errorDomain.getter()
{
  swift_getMetatypeMetadata();
  return sub_24772CA6C();
}

void _WrappingError.errorCode.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  void *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_61_2((uint64_t)v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  v5 = sub_24772D4C8();
  if (v5)
  {
    v6 = v5;
    OUTLINED_FUNCTION_56_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v6 = OUTLINED_FUNCTION_36();
    v8 = OUTLINED_FUNCTION_47_3(v6, v7);
    OUTLINED_FUNCTION_61_2(v8, (uint64_t)v3, v9);
  }
  v10 = (void *)sub_24772C490();
  MEMORY[0x2495821C4](v6);
  objc_msgSend(v10, sel_code);

  OUTLINED_FUNCTION_11();
}

uint64_t _WrappingError.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_4(a1, (unint64_t *)&qword_2576B88A0, (uint64_t (*)(uint64_t))sub_2476DBC08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24772E730;
  v4 = sub_24772CA18();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  v7 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v6 + 16))
  {
    sub_24772C91C();
    sub_24772D228();
    OUTLINED_FUNCTION_48_4(v6);
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_29_3();
  }
  OUTLINED_FUNCTION_14_4(v4, (unint64_t *)&qword_25444C390, (uint64_t (*)(uint64_t))sub_2476DBC64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 48) = v7;
  return sub_24772C904();
}

void sub_2476DBC08()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576B88A8[0])
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_2576B88A8);
  }
}

unint64_t sub_2476DBC64()
{
  unint64_t result;

  result = qword_25444C398;
  if (!qword_25444C398)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25444C398);
  }
  return result;
}

uint64_t sub_2476DBCA0()
{
  return static _WrappingError.errorDomain.getter();
}

uint64_t static _WrappingError<>.errorDomain.getter()
{
  return sub_24772C37C();
}

uint64_t _WrappingError<>.errorCode.getter()
{
  return sub_24772C394();
}

uint64_t _WrappingError<>.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v10 = sub_24772C388();
  sub_24772CA18();
  v8 = 0u;
  v9 = 0u;
  sub_2476D9EF0((uint64_t)&v8);
  v3 = sub_24772CA18();
  v4 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  v5 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v4 + 16))
  {
    *(_QWORD *)&v8 = MEMORY[0x24BEE4AF8];
    sub_24772C91C();
    sub_24772D228();
    OUTLINED_FUNCTION_48_4(v4);
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_29_3();
  }
  OUTLINED_FUNCTION_14_4(v3, (unint64_t *)&qword_25444C390, (uint64_t (*)(uint64_t))sub_2476DBC64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  *((_QWORD *)&v9 + 1) = v6;
  *(_QWORD *)&v8 = v5;
  sub_2476D9EF0((uint64_t)&v8);
  return v10;
}

void sub_2476DBE44()
{
  JUMPOUT(0x2495822A8);
}

uint64_t dispatch thunk of _WrappingErrorProtocol.underlyingErrors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _WrappingErrorProtocol.withUnderlyingErrors(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_2476DBE64()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2476DBE6C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2476DBEE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    sub_24772C91C();
  }
  return v4;
}

uint64_t sub_2476DBF98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476DBFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  sub_24772C91C();
  return a1;
}

uint64_t sub_2476DC038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2476DC0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2476DC100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2476DC164(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2476DC1E0 + 4 * byte_24772F320[v11]))();
  }
}

void sub_2476DC260(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_2476DC34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v9 = a2 ^ 0x80000000;
      else
        v9 = (a2 - 1);
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_2476DC3D8(uint64_t a1)
{
  uint64_t v2;

  sub_2476CA9B4(0, &qword_2576B8930, (uint64_t (*)(uint64_t))sub_2476DC42C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2476DC42C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_2576B8938)
  {
    v2 = type metadata accessor for NoPurgeAssertion(255);
    v3 = type metadata accessor for WeakCache.WeakRef(a1, MEMORY[0x24BEE0D00], v2, MEMORY[0x24BEE0D10]);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_2576B8938);
  }
}

uint64_t sub_2476DC490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2476DC42C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2476DC4D4(uint64_t a1)
{
  uint64_t v2;

  sub_2476DC520(0, qword_25444C3B0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2476DC520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE4AD8] + 8);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_2_10()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_5_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_8_9@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_10_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return sub_24772D114();
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return sub_24772C37C();
}

uint64_t OUTLINED_FUNCTION_16_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_17_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

id OUTLINED_FUNCTION_19_4()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_24_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _WrappingError(a1, a2, a3, a4);
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_29_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_31_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

id OUTLINED_FUNCTION_33_6(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_35_6()
{
  return sub_24772D4C8();
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  return sub_24772D4F8();
}

void OUTLINED_FUNCTION_39_4()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_42_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

void OUTLINED_FUNCTION_43_4()
{
  Error.unwrap(firstDomain:code:)();
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return sub_24772D4C8();
}

uint64_t OUTLINED_FUNCTION_46_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_47_3(uint64_t a1, uint64_t a2)
{
  return a2;
}

id OUTLINED_FUNCTION_48_4@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return sub_24772D480();
}

uint64_t OUTLINED_FUNCTION_52_4()
{
  return sub_24772C490();
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  return sub_24772D4C8();
}

void OUTLINED_FUNCTION_54_3()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2476DC7CC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_2476B3080(0, v1, 0);
    v2 = v14;
    v4 = (char *)(a1 + 58);
    do
    {
      v5 = *(_QWORD *)(v4 - 18);
      v6 = *(_QWORD *)(v4 - 10);
      v7 = *(v4 - 2);
      v12 = *v4;
      v13 = *(v4 - 1);
      v8 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      sub_24772C91C();
      if (v8 >= v9 >> 1)
        sub_2476B3080((char *)(v9 > 1), v8 + 1, 1);
      *(_QWORD *)(v14 + 16) = v8 + 1;
      v10 = v14 + 24 * v8;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v6;
      *(_BYTE *)(v10 + 48) = v7;
      *(_BYTE *)(v10 + 49) = v13;
      *(_BYTE *)(v10 + 50) = v12;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2476DC8D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2476B309C(0, v1, 0);
    v2 = v17;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 2);
      v6 = v4[1];
      v15 = *v4;
      v16 = *(v4 - 1);
      v14 = *((_BYTE *)v4 + 16);
      v7 = v4[4];
      v13 = v4[3];
      v8 = *((_BYTE *)v4 + 40);
      v9 = *(_QWORD *)(v17 + 16);
      v10 = *(_QWORD *)(v17 + 24);
      sub_24772C91C();
      sub_24772C91C();
      if (v9 >= v10 >> 1)
        sub_2476B309C((char *)(v10 > 1), v9 + 1, 1);
      *(_QWORD *)(v17 + 16) = v9 + 1;
      v11 = v17 + (v9 << 6);
      *(_QWORD *)(v11 + 32) = v5;
      *(_QWORD *)(v11 + 40) = v16;
      *(_QWORD *)(v11 + 48) = v15;
      *(_QWORD *)(v11 + 56) = v6;
      *(_BYTE *)(v11 + 64) = v14;
      *(_QWORD *)(v11 + 72) = v13;
      *(_QWORD *)(v11 + 80) = v7;
      v4 += 8;
      *(_BYTE *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2476DCA00(uint64_t a1)
{
  return 1000000000000000 * a1;
}

unint64_t SQLDatabase.AutoVacuumMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t SQLDatabase.AutoVacuumMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_2476DCA50(char *a1, char *a2)
{
  return sub_2476E58F4(*a1, *a2);
}

uint64_t sub_2476DCA5C()
{
  unsigned __int8 *v0;

  return sub_24772AEB8(*v0);
}

void sub_2476DCA64()
{
  sub_24772B254();
}

uint64_t sub_2476DCA6C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_24772B2BC(a1, *v1);
}

unint64_t sub_2476DCA74@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SQLDatabase.AutoVacuumMode.init(rawValue:)(*a1, a2);
}

void sub_2476DCA7C(uint64_t *a1@<X8>)
{
  *a1 = SQLDatabase.AutoVacuumMode.rawValue.getter();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.IndexInfo.indexName.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.IndexInfo.indexName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_44();
}

uint64_t (*SQLDatabase.IndexInfo.indexName.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexInfo.isUnique.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SQLDatabase.IndexInfo.isUnique.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.isUnique.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.IndexInfo.IndexType.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = sub_24772D3F0();
  swift_bridgeObjectRelease();
  v3 = 3;
  if (v2 < 3)
    v3 = v2;
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t SQLDatabase.IndexInfo.IndexType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 117;
  if (*v0 != 1)
    v1 = 27504;
  if (*v0)
    return v1;
  else
    return 99;
}

void sub_2476DCB94(unsigned __int8 *a1, char *a2)
{
  sub_2476E594C(*a1, *a2);
}

void sub_2476DCBA0()
{
  sub_24772AEBC();
}

uint64_t sub_2476DCBA8()
{
  return sub_24772B110();
}

void sub_2476DCBB0()
{
  sub_24772B37C();
}

void sub_2476DCBB8(char *a1@<X8>)
{
  SQLDatabase.IndexInfo.IndexType.init(rawValue:)(a1);
}

void sub_2476DCBC4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SQLDatabase.IndexInfo.IndexType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.IndexInfo.indexType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.IndexInfo.indexType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.indexType.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexInfo.isPartial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t SQLDatabase.IndexInfo.isPartial.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.isPartial.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SQLDatabase.IndexColumnInfo.rank.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.rank.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.tableRank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SQLDatabase.IndexColumnInfo.tableRank.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.tableRank.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.IndexColumnInfo.name.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.IndexColumnInfo.name.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_94_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_44();
}

uint64_t (*SQLDatabase.IndexColumnInfo.name.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.isReversed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SQLDatabase.IndexColumnInfo.isReversed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.isReversed.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.IndexColumnInfo.collator.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.IndexColumnInfo.collator.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_94_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  OUTLINED_FUNCTION_44();
}

uint64_t (*SQLDatabase.IndexColumnInfo.collator.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.isKeyColumn.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t SQLDatabase.IndexColumnInfo.isKeyColumn.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.isKeyColumn.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.TableColumnInfo.name.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.TableColumnInfo.name.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_44();
}

uint64_t (*SQLDatabase.TableColumnInfo.name.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.TableColumnInfo.type.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.TableColumnInfo.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.type.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.isNotNull.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SQLDatabase.TableColumnInfo.isNotNull.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.isNotNull.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.defaultValue.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

void SQLDatabase.TableColumnInfo.defaultValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_release();
  *(_QWORD *)(v1 + 24) = v2;
  OUTLINED_FUNCTION_35();
}

uint64_t (*SQLDatabase.TableColumnInfo.defaultValue.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.modify())(void)
{
  return nullsub_1;
}

unint64_t SQLDatabase.TableColumnInfo.ColumnType.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_2476DCE6C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_24772C294(a1, *v1);
}

unint64_t sub_2476DCE74@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SQLDatabase.TableColumnInfo.ColumnType.init(rawValue:)(*a1, a2);
}

void SQLDatabase.TableColumnInfo.columnType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.TableColumnInfo.columnType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.columnType.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLExecution.applicationID.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(21);
  v0 = OUTLINED_FUNCTION_32_4((uint64_t)"PRAGMA application_id");
  OUTLINED_FUNCTION_114(v0);
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DCF04()
{
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DCF40()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64));
}

uint64_t SQLExecution.applicationID(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  return OUTLINED_FUNCTION_21();
}

void sub_2476DCF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_31_5();
  v4 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_17_8();
  v6 = v5;
  OUTLINED_FUNCTION_117_0(22);
  *(_QWORD *)(v3 + 8) = 0x8000000247734F30;
  *(_BYTE *)(v3 + 72) = 0;
  OUTLINED_FUNCTION_65_0();
  if (v7)
  {
    OUTLINED_FUNCTION_27_5();
    v6 = v18;
  }
  v8 = v3 + 160;
  v9 = *(_QWORD *)(v1 + 304);
  OUTLINED_FUNCTION_48_5();
  *(_QWORD *)(v1 + 296) = v9;
  v10 = sub_24772D480();
  OUTLINED_FUNCTION_67_2(v10, v11);
  if (v7)
  {
    OUTLINED_FUNCTION_19_5();
    v6 = v19;
  }
  *(_QWORD *)(v6 + 16) = v0;
  OUTLINED_FUNCTION_26_6(v6 + 80 * v3);
  OUTLINED_FUNCTION_69_2();
  if (v7)
  {
    OUTLINED_FUNCTION_19_5();
    v6 = v20;
  }
  *(_QWORD *)(v6 + 16) = v0;
  OUTLINED_FUNCTION_23_6(v6 + 80 * v2);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_126_0();
  if (v4)
  {
    OUTLINED_FUNCTION_95_0();
    *(_QWORD *)(v1 + 360) = v12;
    *(_QWORD *)(v1 + 368) = v4;
    *(_QWORD *)(v1 + 344) = v8;
    *(_QWORD *)(v1 + 352) = v6;
    *(_QWORD *)(v1 + 256) = v8;
    *(_QWORD *)(v1 + 264) = v6;
    *(_QWORD *)(v1 + 272) = v12;
    *(_QWORD *)(v1 + 280) = v4;
    *(_BYTE *)(v1 + 288) = v4 != 0;
    v13 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v1 + 376) = v13;
    *v13 = v1;
    v13[1] = sub_2476DD0E0;
    v14 = OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_15_8(v14, v15, v16, v17);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2476DD0E0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t SQLExecution.autoVacuumMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(18);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247734F50;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v3 = OUTLINED_FUNCTION_7_13(v2);
  return OUTLINED_FUNCTION_6_12(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2476DD1A8()
{
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DD1E4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 49);
  if (v1 == 3)
    LOBYTE(v1) = 0;
  **(_BYTE **)(v0 + 72) = v1;
  return OUTLINED_FUNCTION_57_4();
}

uint64_t SQLExecution.autoVacuumMode(_:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 352) = a3;
  *(_QWORD *)(v4 + 360) = v3;
  *(_QWORD *)(v4 + 344) = a2;
  *(_BYTE *)(v4 + 89) = *a1;
  return OUTLINED_FUNCTION_21();
}

void sub_2476DD218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_31_5();
  v1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_17_8();
  v3 = v2;
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  v4 = v0 + 336;
  *(_QWORD *)(v0 + 24) = 0x8000000247734F70;
  *(_BYTE *)(v0 + 88) = 0;
  OUTLINED_FUNCTION_65_0();
  if (v5)
  {
    OUTLINED_FUNCTION_27_5();
    v3 = v17;
  }
  v6 = v0 + 176;
  v7 = *(unsigned __int8 *)(v0 + 89);
  OUTLINED_FUNCTION_48_5();
  *(_QWORD *)(v0 + 336) = v7;
  v8 = sub_24772D480();
  OUTLINED_FUNCTION_67_2(v8, v9);
  if (v5)
  {
    OUTLINED_FUNCTION_19_5();
    v3 = v18;
  }
  *(_QWORD *)(v3 + 16) = v4;
  OUTLINED_FUNCTION_26_6(v3 + 80 * (v0 + 16));
  OUTLINED_FUNCTION_69_2();
  if (v5)
  {
    OUTLINED_FUNCTION_19_5();
    v3 = v19;
  }
  *(_QWORD *)(v3 + 16) = v4;
  OUTLINED_FUNCTION_23_6(v3 + 80 * (v0 + 96));
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_128_0();
  *(_QWORD *)(v0 + 368) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_95_0();
    *(_QWORD *)(v0 + 392) = v10;
    *(_QWORD *)(v0 + 400) = v4;
    *(_QWORD *)(v0 + 376) = v6;
    *(_QWORD *)(v0 + 384) = v3;
    v11 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(v0 + 256) = v6;
    *(_QWORD *)(v0 + 264) = v3;
    *(_QWORD *)(v0 + 272) = v10;
    *(_QWORD *)(v0 + 280) = v4;
    *(_BYTE *)(v0 + 288) = v1 != 0;
    *(_QWORD *)(v0 + 408) = *(_QWORD *)(v11 + 8);
    v12 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v0 + 416) = v12;
    *v12 = v0;
    v12[1] = sub_2476DD3A4;
    v13 = OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_15_8(v13, v14, v15, v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2476DD3A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  OUTLINED_FUNCTION_64();
  v2 = *v1;
  *(_QWORD *)(v2 + 424) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_63_2();
  }
  else
  {
    *(_QWORD *)(v2 + 296) = 0x4D5555434156;
    *(_QWORD *)(v2 + 304) = 0xE600000000000000;
    *(_QWORD *)(v2 + 312) = 0;
    *(_QWORD *)(v2 + 320) = 0;
    *(_BYTE *)(v2 + 328) = 0;
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v2 + 432) = v4;
    *v4 = v2;
    v4[1] = sub_2476DD470;
    v5 = OUTLINED_FUNCTION_70_2();
    return v6(v5);
  }
}

uint64_t sub_2476DD470()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_54_4();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DD4AC()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476DD4B4()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t SQLExecution.automaticIndexing.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(22);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA automatic_index");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DD520()
{
  OUTLINED_FUNCTION_20_6();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DD55C()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_105_0((*(_BYTE *)(v0 + 49) == 2) | (*(_BYTE *)(v0 + 49) & 1), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.automaticIndexing(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DD628: call analysis failed (funcsize=72)"

uint64_t sub_2476DD6C0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t SQLExecution.busyTimeout.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(19);
  v0 = OUTLINED_FUNCTION_32_4((uint64_t)"PRAGMA busy_timeout");
  OUTLINED_FUNCTION_114(v0);
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DD768()
{
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DD7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 64))
    v1 = 0;
  else
    v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_2476DCA00(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t SQLExecution.busyTimeout(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[40] = a4;
  v5[41] = v4;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  return OUTLINED_FUNCTION_21();
}

void sub_2476DD7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD, _QWORD);
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_13_11();
  v4 = v3;
  OUTLINED_FUNCTION_33_7(20);
  *(_QWORD *)(v2 + 8) = 0x8000000247734FF0;
  *(_BYTE *)(v2 + 72) = 0;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v4 = v12;
  }
  v7 = v2 + 160;
  *(_QWORD *)(v4 + 16) = v6 + 1;
  OUTLINED_FUNCTION_26_6(v4 + 80 * v6);
  OUTLINED_FUNCTION_130_0();
  OUTLINED_FUNCTION_130_0();
  *(_QWORD *)(v0 + 96) = sub_24772CED4();
  *(_QWORD *)(v0 + 104) = v8;
  *(_BYTE *)(v0 + 168) = 0;
  if (*(_QWORD *)(v4 + 16) >= *(_QWORD *)(v4 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v4 = v13;
  }
  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_22_4();
  if (v9)
  {
    OUTLINED_FUNCTION_2_11();
    v4 = v14;
  }
  OUTLINED_FUNCTION_14_9();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_126_0();
  if (v4)
  {
    OUTLINED_FUNCTION_78_1();
LABEL_11:
    *(_QWORD *)(v0 + 360) = v10;
    *(_QWORD *)(v0 + 368) = v17;
    *(_QWORD *)(v0 + 344) = v1;
    *(_QWORD *)(v0 + 352) = v7;
    v11 = (_QWORD *)OUTLINED_FUNCTION_11_11(v10);
    *(_QWORD *)(v0 + 376) = v11;
    *v11 = v0;
    v11[1] = sub_2476DD9B0;
    v15(v0 + 256, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
    return;
  }
  v7 = v16;
  if (v16)
  {
    OUTLINED_FUNCTION_77_1();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_47_4();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_2476DD9B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t SQLExecution.cacheSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(17);
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247735010;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 96) = swift_task_alloc();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v3 = OUTLINED_FUNCTION_7_13(v2);
  return OUTLINED_FUNCTION_6_12(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2476DDA90()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141();
  *v2 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DDAE0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v1 = 0;
LABEL_4:
    v2 = 0;
LABEL_5:
    v3 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)v3 = v1;
    *(_BYTE *)(v3 + 8) = v2;
    return OUTLINED_FUNCTION_57_4();
  }
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_4;
  if (v1 != 0x8000000000000000)
  {
    v1 = -v1;
    v2 = 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476DDB2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.cacheSize(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 304) = a2;
  *(_QWORD *)(v4 + 312) = a3;
  v5 = *a1;
  *(_QWORD *)(v4 + 320) = v3;
  *(_QWORD *)(v4 + 328) = v5;
  *(_BYTE *)(v4 + 89) = *((_BYTE *)a1 + 8);
  return OUTLINED_FUNCTION_21();
}

void sub_2476DDB58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD, _QWORD);

  v1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_17_8();
  v3 = v2;
  v0[2] = 0xD000000000000012;
  OUTLINED_FUNCTION_127_0();
  v0[3] = v4;
  *((_BYTE *)v0 + 88) = 0;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v3 = v16;
  }
  v7 = *((unsigned __int8 *)v0 + 89);
  *(_QWORD *)(v3 + 16) = v6 + 1;
  sub_2476E18A8(v0 + 2, (void *)(v3 + 80 * v6 + 32));
  v8 = v0[41];
  if ((_DWORD)v7 == 1 && (v9 = __OFSUB__(0, v8), v8 = -v8, v9))
  {
    __break(1u);
  }
  else
  {
    v10 = v0 + 37;
    v0[37] = v8;
    v11 = sub_24772D480();
    OUTLINED_FUNCTION_67_2(v11, v12);
    if (v13)
    {
      OUTLINED_FUNCTION_19_5();
      v3 = v17;
    }
    *(_QWORD *)(v3 + 16) = v10;
    OUTLINED_FUNCTION_26_6(v3 + 80 * v7);
    OUTLINED_FUNCTION_69_2();
    if (v13)
    {
      OUTLINED_FUNCTION_19_5();
      v3 = v18;
    }
    *(_QWORD *)(v3 + 16) = v10;
    OUTLINED_FUNCTION_23_6(v3 + 80 * (_QWORD)(v0 + 12));
    sub_247728928();
    OUTLINED_FUNCTION_126_0();
    if (v1)
    {
      OUTLINED_FUNCTION_78_1();
      v0[45] = v14;
      v0[46] = v1;
      v0[43] = v0 + 22;
      v0[44] = v3;
      v15 = (_QWORD *)OUTLINED_FUNCTION_11_11(v14);
      v0[47] = v15;
      *v15 = v0;
      v15[1] = sub_2476DD0E0;
      v19(v0 + 32, v0[38], v0[39]);
      return;
    }
  }
  __break(1u);
}

uint64_t SQLExecution.caseSensitiveLike(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DDDC8: call analysis failed (funcsize=72)"

uint64_t SQLExecution.cellSizeCheck.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(22);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA cell_size_check");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DDEC4()
{
  OUTLINED_FUNCTION_20_6();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DDF00()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_105_0(*(_BYTE *)(v0 + 49) & 1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476DDF10()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t SQLExecution.checkpointUsesFullFsync.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(27);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA checkpoint_fullfsync");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DDF80()
{
  OUTLINED_FUNCTION_20_6();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t SQLExecution.checkpointUsesFullFsync(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DE06C: call analysis failed (funcsize=72)"

uint64_t SQLExecution.collations.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_36_4(21);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x80000002477350D0;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = &protocol witness table for String;
  v2 = OUTLINED_FUNCTION_76_1(v1, (uint64_t)sub_2476DE18C);
  return OUTLINED_FUNCTION_73_2(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2476DE18C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_6();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_32_0(v2, v3);
  }
}

uint64_t sub_2476DE1D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.compileOptions.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_36_4(22);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x80000002477350F0;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = &protocol witness table for String;
  v2 = OUTLINED_FUNCTION_76_1(v1, (uint64_t)sub_2476DE264);
  return OUTLINED_FUNCTION_73_2(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2476DE264()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_6();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_32_0(v2, v3);
  }
}

uint64_t SQLExecution.checkForeignKeys(in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[45] = a4;
  v5[46] = v4;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DE380: call analysis failed (funcsize=114)"

uint64_t sub_2476DE4A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_51_5();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t SQLExecution.foreignKeyConstraint(in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DE578: call analysis failed (funcsize=78)"

uint64_t sub_2476DE644()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_38_6();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_10_3();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_50_2(v2, v3);
  }
}

uint64_t SQLExecution.foreignKeyConstraintsEnforced.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(19);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA foreign_keys");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.foreignKeyConstraintsEnforced(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DE7A0: call analysis failed (funcsize=72)"

uint64_t SQLExecution.unusedPageCount.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(21);
  v0 = OUTLINED_FUNCTION_32_4((uint64_t)"PRAGMA freelist_count");
  OUTLINED_FUNCTION_114(v0);
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476DE89C()
{
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t SQLExecution.usesFullFSync.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(16);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA fullfsync");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.useFullFSync(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DE9E8: call analysis failed (funcsize=72)"

uint64_t SQLExecution.ignoreCheckConstraints(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DEB30: call analysis failed (funcsize=72)"

uint64_t SQLExecution.incrementalVacuum(pages:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 360) = a4;
  *(_QWORD *)(v5 + 368) = v4;
  *(_BYTE *)(v5 + 89) = a2;
  *(_QWORD *)(v5 + 344) = a1;
  *(_QWORD *)(v5 + 352) = a3;
  return OUTLINED_FUNCTION_21();
}

#error "2476DECC8: call analysis failed (funcsize=113)"

uint64_t SQLExecution.keyColumns(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DEE54: call analysis failed (funcsize=81)"

uint64_t sub_2476DEF20()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_38_6();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_10_3();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_50_2(v2, v3);
  }
}

uint64_t sub_2476DEF68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.indexes(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[51] = a4;
  v5[52] = v4;
  v5[49] = a2;
  v5[50] = a3;
  v5[48] = a1;
  return OUTLINED_FUNCTION_21();
}

void sub_2476DEF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_31_5();
  v16 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_13_11();
  v18 = v17;
  OUTLINED_FUNCTION_33_7(18);
  OUTLINED_FUNCTION_41_5((uint64_t)"PRAGMA index_list(");
  if (v19)
  {
    OUTLINED_FUNCTION_2_11();
    v18 = v25;
  }
  *(_QWORD *)(v18 + 16) = v14;
  OUTLINED_FUNCTION_26_6(v18 + 80 * v15);
  OUTLINED_FUNCTION_49_3();
  if (v14 >= v15 >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v18 = v26;
  }
  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_22_4();
  if (v19)
  {
    OUTLINED_FUNCTION_2_11();
    v18 = v27;
  }
  OUTLINED_FUNCTION_14_9();
  OUTLINED_FUNCTION_53_5();
  OUTLINED_FUNCTION_128_0();
  *(_QWORD *)(v12 + 424) = v18;
  if (v18)
  {
    OUTLINED_FUNCTION_102_0();
LABEL_11:
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v12 + 448) = v20;
    *(_QWORD *)(v12 + 456) = v16;
    *(_QWORD *)(v12 + 432) = v14;
    *(_QWORD *)(v12 + 440) = v13;
    *(_QWORD *)(v12 + 336) = v14;
    *(_QWORD *)(v12 + 344) = v13;
    *(_QWORD *)(v12 + 352) = v20;
    *(_QWORD *)(v12 + 360) = v16;
    *(_BYTE *)(v12 + 368) = v21;
    v22 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    v23 = MEMORY[0x24BEE1768];
    v24 = MEMORY[0x24BEE1328];
    *(_QWORD *)(v12 + 304) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v12 + 312) = v24;
    *(_QWORD *)(v12 + 320) = &type metadata for SQLDatabase.IndexInfo.IndexType;
    *(_QWORD *)(v12 + 328) = v24;
    *(_QWORD *)(v12 + 256) = &protocol witness table for Int;
    *(_QWORD *)(v12 + 264) = &protocol witness table for String;
    *(_QWORD *)(v12 + 464) = v22;
    *(_QWORD *)(v12 + 272) = &protocol witness table for Bool;
    *(_QWORD *)(v12 + 280) = &protocol witness table for SQLDatabase.IndexInfo.IndexType;
    *(_QWORD *)(v12 + 288) = &protocol witness table for Bool;
    *(_QWORD *)(v12 + 296) = v23;
    *v22 = v12;
    v22[1] = sub_2476DF134;
    OUTLINED_FUNCTION_21_3(v12 + 336, 5, v12 + 296, v12 + 256, *(_QWORD *)(v12 + 400), *(_QWORD *)(v12 + 408), a9);
    return;
  }
  v13 = a12;
  if (a12)
  {
    OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_47_4();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_2476DF134()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_40();
  *v4 = *v3;
  v2[59] = v1;
  swift_task_dealloc();
  v5 = v2[56];
  v6 = v2[57];
  v7 = v2[54];
  v8 = v2[55];
  v9 = v2[53] != 0;
  if (!v1)
    v2[60] = v0;
  sub_2476B3EAC(v7, v8, v5, v6, v9);
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_2476DF1A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2476DC7CC(*(_QWORD *)(v0 + 480));
  OUTLINED_FUNCTION_132();
  return OUTLINED_FUNCTION_50_2(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476DF1EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.columnInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[53] = a4;
  v5[54] = v4;
  v5[51] = a2;
  v5[52] = a3;
  v5[50] = a1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476DF210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_13_11();
  v17 = v16;
  OUTLINED_FUNCTION_33_7(19);
  OUTLINED_FUNCTION_41_5((uint64_t)"PRAGMA index_xinfo(");
  if (v18)
  {
    OUTLINED_FUNCTION_2_11();
    v17 = v29;
  }
  *(_QWORD *)(v17 + 16) = v14;
  OUTLINED_FUNCTION_26_6(v17 + 80 * v15);
  OUTLINED_FUNCTION_49_3();
  if (v14 >= v15 >> 1)
    OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_22_4();
  if (v18)
    OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_14_9();
  result = OUTLINED_FUNCTION_53_5();
  v20 = a13;
  v21 = *(_QWORD *)(a13 + 16);
  *(_QWORD *)(v13 + 440) = v21;
  if (v21)
  {
    v14 = a10;
LABEL_11:
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v13 + 464) = v23;
    *(_QWORD *)(v13 + 472) = v20;
    *(_QWORD *)(v13 + 448) = v14;
    *(_QWORD *)(v13 + 456) = a11;
    *(_QWORD *)(v13 + 352) = v14;
    *(_QWORD *)(v13 + 360) = a11;
    *(_QWORD *)(v13 + 368) = v23;
    *(_QWORD *)(v13 + 376) = v20;
    *(_BYTE *)(v13 + 384) = v24;
    v25 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v13 + 480) = v25;
    v26 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v13 + 304) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v13 + 312) = v26;
    sub_2476E18E4();
    v27 = MEMORY[0x24BEE1328];
    *(_QWORD *)(v13 + 320) = v28;
    *(_QWORD *)(v13 + 328) = v27;
    *(_QWORD *)(v13 + 336) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v13 + 344) = v27;
    *(_QWORD *)(v13 + 256) = &protocol witness table for Int;
    *(_QWORD *)(v13 + 264) = &protocol witness table for Int;
    *(_QWORD *)(v13 + 272) = sub_2476E192C();
    *(_QWORD *)(v13 + 280) = &protocol witness table for Bool;
    *(_QWORD *)(v13 + 288) = &protocol witness table for String;
    *(_QWORD *)(v13 + 296) = &protocol witness table for Bool;
    *v25 = v13;
    v25[1] = sub_2476DF3CC;
    return OUTLINED_FUNCTION_21_3(v13 + 352, 6, v13 + 304, v13 + 256, *(_QWORD *)(v13 + 416), *(_QWORD *)(v13 + 424), a9);
  }
  a11 = a12;
  if (a12)
  {
    OUTLINED_FUNCTION_88_0();
    swift_bridgeObjectRelease();
    v20 = 0;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476DF3CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[61] = a1;
  v3[62] = v1;
  swift_task_dealloc();
  sub_2476B3EAC(v3[56], v3[57], v3[58], v3[59], v3[55] != 0);
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476DF448()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 488) + 16))
  {
    v1 = sub_2476DC8D8(*(_QWORD *)(v0 + 488));
    OUTLINED_FUNCTION_132();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    OUTLINED_FUNCTION_132();
    sub_24772D144();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    sub_2476B3FD0();
    swift_allocError();
    *v3 = 0xD00000000000001BLL;
    v3[1] = 0x80000002477352E0;
    swift_willThrow();
    return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_2476DF534()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t SQLExecution.integrityCheck(maximumAllowedErrors:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 392) = a4;
  *(_QWORD *)(v5 + 400) = v4;
  *(_BYTE *)(v5 + 89) = a2;
  *(_QWORD *)(v5 + 376) = a1;
  *(_QWORD *)(v5 + 384) = a3;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476DF554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_31_5();
  if ((*(_BYTE *)(v9 + 89) & 1) != 0)
  {
    v26 = v9 + 344;
    v23 = (_QWORD *)OUTLINED_FUNCTION_74_1();
    v24 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 464) = v23;
    v30 = OUTLINED_FUNCTION_91_0(v23, v24);
  }
  else
  {
    v10 = v9 + 176;
    v11 = v9 + 336;
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_17_8();
    v14 = v13;
    *(_QWORD *)(v9 + 176) = 0xD000000000000017;
    *(_QWORD *)(v9 + 184) = 0x8000000247735320;
    *(_BYTE *)(v9 + 248) = 0;
    OUTLINED_FUNCTION_65_0();
    if (v15)
    {
      OUTLINED_FUNCTION_27_5();
      v14 = v35;
    }
    v16 = v9 + 96;
    v17 = *(_QWORD *)(v9 + 376);
    OUTLINED_FUNCTION_48_5();
    *(_QWORD *)(v9 + 336) = v17;
    v18 = sub_24772D480();
    OUTLINED_FUNCTION_110_0(v18, v19);
    if (v15)
    {
      OUTLINED_FUNCTION_19_5();
      v14 = v36;
    }
    *(_QWORD *)(v14 + 16) = v11;
    OUTLINED_FUNCTION_23_6(v14 + 80 * v10);
    OUTLINED_FUNCTION_109_0();
    if (v15)
    {
      OUTLINED_FUNCTION_19_5();
      v14 = v37;
    }
    *(_QWORD *)(v14 + 16) = v11;
    OUTLINED_FUNCTION_26_6(v14 + 80 * (v9 + 16));
    result = OUTLINED_FUNCTION_60_4();
    v21 = v12;
    v22 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v9 + 408) = v22;
    if (!v22)
    {
      __break(1u);
      return result;
    }
    OUTLINED_FUNCTION_102_0();
    v25 = v22 != 0;
    v26 = v9 + 368;
    *(_QWORD *)(v9 + 432) = v27;
    *(_QWORD *)(v9 + 440) = v21;
    *(_QWORD *)(v9 + 416) = v10;
    *(_QWORD *)(v9 + 424) = v16;
    *(_QWORD *)(v9 + 296) = v10;
    *(_QWORD *)(v9 + 304) = v16;
    *(_QWORD *)(v9 + 312) = v27;
    *(_QWORD *)(v9 + 320) = v21;
    *(_BYTE *)(v9 + 328) = v25;
    v28 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    v29 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 448) = v28;
    v30 = OUTLINED_FUNCTION_90_0(v28, v29);
  }
  return OUTLINED_FUNCTION_21_3(v30, v31, v32, v26, v33, v34, a9);
}

uint64_t sub_2476DF728()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_96_0();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_63_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_3_13(v2, v3);
  }
}

uint64_t sub_2476DF76C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_83_0();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_32_0(v2, v3);
  }
}

uint64_t SQLExecution.partialIntegrityCheck(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476DF848: call analysis failed (funcsize=81)"

uint64_t SQLExecution.journalMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(19);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247735340;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v3 = OUTLINED_FUNCTION_7_13(v2);
  return OUTLINED_FUNCTION_6_12(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2476DF998()
{
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DF9D4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 49);
  if (v1 == 6)
    LOBYTE(v1) = 0;
  **(_BYTE **)(v0 + 72) = v1;
  return OUTLINED_FUNCTION_57_4();
}

uint64_t sub_2476DF9EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.journalMode(_:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = *a1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476DFA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_13_11();
  v4 = v3;
  OUTLINED_FUNCTION_33_7(22);
  OUTLINED_FUNCTION_29_8((uint64_t)"PRAGMA journal_mode = ");
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v4 = v9;
  }
  v6 = *(unsigned __int8 *)(v0 + 89);
  *(_QWORD *)(v4 + 16) = v1;
  v7 = OUTLINED_FUNCTION_26_6(v4 + 80 * v2);
  return ((uint64_t (*)(void *))((char *)&loc_2476DFA84 + dword_2476DFBBC[v6]))(v7);
}

uint64_t sub_2476DFBD4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476DFC18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.lockingMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(19);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247735380;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v3 = OUTLINED_FUNCTION_7_13(v2);
  return OUTLINED_FUNCTION_6_12(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2476DFCA8()
{
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476DFCE4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 72) = *(_BYTE *)(v0 + 49) & 1;
  return OUTLINED_FUNCTION_57_4();
}

uint64_t SQLExecution.lockingMode(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[43] = a5;
  v6[44] = v5;
  v6[41] = a3;
  v6[42] = a4;
  v6[39] = a1;
  v6[40] = a2;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476DFD10()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_13_11();
  v4 = v3;
  *(_QWORD *)(v0 + 96) = 0x20414D47415250;
  *(_QWORD *)(v0 + 104) = 0xE700000000000000;
  *(_BYTE *)(v0 + 168) = 0;
  OUTLINED_FUNCTION_64_1();
  if (v5)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v15;
  }
  v7 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 328);
  OUTLINED_FUNCTION_100_0();
  *(_QWORD *)(v0 + 176) = v7;
  *(_QWORD *)(v0 + 184) = v6;
  *(_BYTE *)(v0 + 248) = 0;
  OUTLINED_FUNCTION_112();
  if (v2 >= v7 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v16;
  }
  *(_QWORD *)(v4 + 16) = v1;
  OUTLINED_FUNCTION_26_6(v4 + 80 * v2);
  strcpy((char *)(v0 + 16), ".locking_mode");
  *(_WORD *)(v0 + 30) = -4864;
  *(_BYTE *)(v0 + 88) = 0;
  v8 = *(_QWORD *)(v4 + 16);
  if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v17;
  }
  *(_QWORD *)(v4 + 16) = v8 + 1;
  OUTLINED_FUNCTION_23_6(v4 + 80 * v8);
  v19 = v4;
  result = OUTLINED_FUNCTION_59_4();
  v10 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v0 + 360) = v10;
  if (v10)
  {
    v12 = v19;
    v11 = 0;
    v13 = v20;
LABEL_11:
    *(_QWORD *)(v0 + 384) = v13;
    *(_QWORD *)(v0 + 392) = v21;
    *(_QWORD *)(v0 + 368) = v12;
    *(_QWORD *)(v0 + 376) = v11;
    *(_QWORD *)(v0 + 256) = v12;
    *(_QWORD *)(v0 + 264) = v11;
    *(_QWORD *)(v0 + 272) = v13;
    *(_QWORD *)(v0 + 280) = v21;
    *(_BYTE *)(v0 + 288) = v10 != 0;
    v14 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v0 + 400) = v14;
    *(_QWORD *)(v0 + 296) = &protocol witness table for SQLDatabase.Options.LockingMode;
    *(_QWORD *)(v0 + 304) = &type metadata for SQLDatabase.Options.LockingMode;
    *v14 = v0;
    v14[1] = sub_2476DFF0C;
    return v18(v0 + 89, v0 + 256, 1, v0 + 304, v0 + 296, *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344));
  }
  v11 = v20;
  if (v20)
  {
    v12 = 0;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_47_4();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476DFF0C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v1 + 408) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476DFF68()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 312) = *(_BYTE *)(v0 + 89) & 1;
  return OUTLINED_FUNCTION_57_4();
}

uint64_t sub_2476DFF7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.lockingMode(_:for:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 768) = v5;
  *(_QWORD *)(v6 + 760) = a5;
  *(_QWORD *)(v6 + 752) = a4;
  *(_QWORD *)(v6 + 744) = a3;
  *(_QWORD *)(v6 + 736) = a2;
  *(_BYTE *)(v6 + 89) = *a1;
  return OUTLINED_FUNCTION_21();
}

void sub_2476DFFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t (*v36)();
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_31_5();
  v5 = *(_QWORD *)(v1 + 744);
  if (v5)
  {
    sub_2476C5B34();
    OUTLINED_FUNCTION_106_0();
    *(_QWORD *)(v1 + 336) = v6;
    *(_QWORD *)(v1 + 344) = v7;
    *(_BYTE *)(v1 + 408) = 0;
    OUTLINED_FUNCTION_65_0();
    if (v8)
    {
      OUTLINED_FUNCTION_2_11();
      v0 = v43;
    }
    v9 = *(_QWORD *)(v1 + 736);
    *(_QWORD *)(v0 + 16) = v3;
    OUTLINED_FUNCTION_62_3(v0 + 80 * v4);
    *(_QWORD *)(v1 + 416) = v9;
    *(_QWORD *)(v1 + 424) = v5;
    *(_BYTE *)(v1 + 488) = 0;
    v10 = *(_QWORD *)(v0 + 16);
    v11 = *(_QWORD *)(v0 + 24);
    sub_24772C91C();
    if (v10 >= v11 >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v0 = v44;
    }
    *(_QWORD *)(v0 + 16) = v10 + 1;
    OUTLINED_FUNCTION_35_7(v0 + 80 * v10);
    OUTLINED_FUNCTION_127_0();
    *(_QWORD *)(v1 + 496) = 0xD000000000000010;
    *(_QWORD *)(v1 + 504) = v12;
    *(_BYTE *)(v1 + 568) = 0;
    v13 = *(_QWORD *)(v0 + 16);
    v14 = v13 + 1;
    if (v13 >= *(_QWORD *)(v0 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v0 = v45;
    }
    v15 = v1 + 256;
    v16 = *(unsigned __int8 *)(v1 + 89);
    *(_QWORD *)(v0 + 16) = v14;
    OUTLINED_FUNCTION_26_6(v0 + 80 * v13);
    v17 = 0x564953554C435845;
    if (v16)
    {
      v18 = 0xE900000000000045;
    }
    else
    {
      v17 = 0x4C414D524F4ELL;
      v18 = 0xE600000000000000;
    }
    *(_QWORD *)(v1 + 576) = v17;
    *(_QWORD *)(v1 + 584) = v18;
    *(_BYTE *)(v1 + 648) = 0;
    v19 = *(_QWORD *)(v0 + 16);
    v20 = *(_QWORD *)(v0 + 24);
    OUTLINED_FUNCTION_119_0();
    if (v19 >= v20 >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v0 = v46;
    }
    *(_QWORD *)(v0 + 16) = v14;
    OUTLINED_FUNCTION_23_6(v0 + 80 * v19);
    OUTLINED_FUNCTION_53_1();
    *(_QWORD *)(v1 + 256) = 0;
    *(_QWORD *)(v1 + 264) = 0xE000000000000000;
    *(_BYTE *)(v1 + 328) = 0;
    v21 = *(_QWORD *)(v0 + 16);
    v22 = v21 + 1;
    if (v21 >= *(_QWORD *)(v0 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v0 = v47;
    }
    *(_QWORD *)(v0 + 16) = v22;
    OUTLINED_FUNCTION_35_7(v0 + 80 * v21);
    OUTLINED_FUNCTION_60_4();
    OUTLINED_FUNCTION_128_0();
    *(_QWORD *)(v1 + 776) = v0;
    if (v0)
    {
      OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_125_0();
      *(_QWORD *)(v1 + 808) = v21;
      *(_QWORD *)(v1 + 800) = v33;
      *(_QWORD *)(v1 + 792) = v15;
      *(_QWORD *)(v1 + 784) = v22;
      *(_QWORD *)(v1 + 696) = v22;
      *(_QWORD *)(v1 + 704) = v15;
      *(_QWORD *)(v1 + 712) = v33;
      *(_QWORD *)(v1 + 720) = v21;
      *(_BYTE *)(v1 + 728) = v34;
      v35 = (_QWORD *)OUTLINED_FUNCTION_4_2();
      v36 = sub_2476E041C;
      *(_QWORD *)(v1 + 816) = v35;
LABEL_30:
      *v35 = v1;
      v35[1] = v36;
      v39 = OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_15_8(v39, v40, v41, v42);
      return;
    }
    __break(1u);
  }
  else
  {
    sub_2476C5B34();
    v24 = v23;
    *(_QWORD *)(v1 + 16) = 0xD000000000000016;
    *(_QWORD *)(v1 + 24) = 0x80000002477353A0;
    *(_BYTE *)(v1 + 88) = 0;
    OUTLINED_FUNCTION_64_1();
    if (v8)
    {
      OUTLINED_FUNCTION_2_11();
      v24 = v48;
    }
    v25 = v1 + 176;
    v26 = *(unsigned __int8 *)(v1 + 89);
    *(_QWORD *)(v24 + 16) = v2;
    OUTLINED_FUNCTION_26_6(v24 + 80 * v4);
    v27 = 0x564953554C435845;
    if (v26)
    {
      v28 = 0xE900000000000045;
    }
    else
    {
      v27 = 0x4C414D524F4ELL;
      v28 = 0xE600000000000000;
    }
    *(_QWORD *)(v1 + 96) = v27;
    *(_QWORD *)(v1 + 104) = v28;
    *(_BYTE *)(v1 + 168) = 0;
    v29 = *(_QWORD *)(v24 + 16);
    v30 = *(_QWORD *)(v24 + 24);
    OUTLINED_FUNCTION_119_0();
    if (v29 >= v30 >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v24 = v49;
    }
    *(_QWORD *)(v24 + 16) = v2;
    OUTLINED_FUNCTION_35_7(v24 + 80 * v29);
    OUTLINED_FUNCTION_53_1();
    *(_QWORD *)(v1 + 176) = 0;
    *(_QWORD *)(v1 + 184) = 0xE000000000000000;
    *(_BYTE *)(v1 + 248) = 0;
    v31 = *(_QWORD *)(v24 + 16);
    v32 = v31 + 1;
    if (v31 >= *(_QWORD *)(v24 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_11();
      v24 = v50;
    }
    *(_QWORD *)(v24 + 16) = v32;
    OUTLINED_FUNCTION_23_6(v24 + 80 * v31);
    OUTLINED_FUNCTION_60_4();
    OUTLINED_FUNCTION_128_0();
    *(_QWORD *)(v1 + 832) = v24;
    if (v24)
    {
      OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_125_0();
      *(_QWORD *)(v1 + 864) = v31;
      *(_QWORD *)(v1 + 856) = v37;
      *(_QWORD *)(v1 + 848) = v32;
      *(_QWORD *)(v1 + 840) = v25;
      *(_QWORD *)(v1 + 656) = v25;
      *(_QWORD *)(v1 + 664) = v32;
      *(_QWORD *)(v1 + 672) = v37;
      *(_QWORD *)(v1 + 680) = v31;
      *(_BYTE *)(v1 + 688) = v38;
      v35 = (_QWORD *)OUTLINED_FUNCTION_4_2();
      v36 = sub_2476E0484;
      *(_QWORD *)(v1 + 872) = v35;
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_2476E041C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v2 + 824) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476E0484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v2 + 880) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476E04EC()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476E04F4()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t SQLExecution.optimize(database:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[45] = a4;
  v5[46] = v4;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476E05CC: call analysis failed (funcsize=105)"

uint64_t sub_2476E06D0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_51_5();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476E0714()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_54_4();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t SQLExecution.pragmas.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(18);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x80000002477353E0;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = &protocol witness table for String;
  v2 = OUTLINED_FUNCTION_76_1(v1, (uint64_t)sub_2476DE264);
  return OUTLINED_FUNCTION_73_2(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t SQLExecution.queryOnly.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(17);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA query_only");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.queryOnly(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476E08E4: call analysis failed (funcsize=72)"

uint64_t SQLExecution.quickCheck(maximumAllowedErrors:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 392) = a4;
  *(_QWORD *)(v5 + 400) = v4;
  *(_BYTE *)(v5 + 89) = a2;
  *(_QWORD *)(v5 + 376) = a1;
  *(_QWORD *)(v5 + 384) = a3;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476E0994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_31_5();
  if ((*(_BYTE *)(v9 + 89) & 1) != 0)
  {
    v26 = v9 + 344;
    v23 = (_QWORD *)OUTLINED_FUNCTION_74_1();
    v24 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 464) = v23;
    v30 = OUTLINED_FUNCTION_91_0(v23, v24);
  }
  else
  {
    v10 = v9 + 176;
    v11 = v9 + 336;
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_17_8();
    v14 = v13;
    *(_QWORD *)(v9 + 176) = 0xD000000000000013;
    *(_QWORD *)(v9 + 184) = 0x8000000247735460;
    *(_BYTE *)(v9 + 248) = 0;
    OUTLINED_FUNCTION_65_0();
    if (v15)
    {
      OUTLINED_FUNCTION_27_5();
      v14 = v35;
    }
    v16 = v9 + 96;
    v17 = *(_QWORD *)(v9 + 376);
    OUTLINED_FUNCTION_48_5();
    *(_QWORD *)(v9 + 336) = v17;
    v18 = sub_24772D480();
    OUTLINED_FUNCTION_110_0(v18, v19);
    if (v15)
    {
      OUTLINED_FUNCTION_19_5();
      v14 = v36;
    }
    *(_QWORD *)(v14 + 16) = v11;
    OUTLINED_FUNCTION_23_6(v14 + 80 * v10);
    OUTLINED_FUNCTION_109_0();
    if (v15)
    {
      OUTLINED_FUNCTION_19_5();
      v14 = v37;
    }
    *(_QWORD *)(v14 + 16) = v11;
    OUTLINED_FUNCTION_26_6(v14 + 80 * (v9 + 16));
    result = OUTLINED_FUNCTION_60_4();
    v21 = v12;
    v22 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v9 + 408) = v22;
    if (!v22)
    {
      __break(1u);
      return result;
    }
    OUTLINED_FUNCTION_102_0();
    v25 = v22 != 0;
    v26 = v9 + 368;
    *(_QWORD *)(v9 + 432) = v27;
    *(_QWORD *)(v9 + 440) = v21;
    *(_QWORD *)(v9 + 416) = v10;
    *(_QWORD *)(v9 + 424) = v16;
    *(_QWORD *)(v9 + 296) = v10;
    *(_QWORD *)(v9 + 304) = v16;
    *(_QWORD *)(v9 + 312) = v27;
    *(_QWORD *)(v9 + 320) = v21;
    *(_BYTE *)(v9 + 328) = v25;
    v28 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    v29 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 448) = v28;
    v30 = OUTLINED_FUNCTION_90_0(v28, v29);
  }
  return OUTLINED_FUNCTION_21_3(v30, v31, v32, v26, v33, v34, a9);
}

uint64_t sub_2476E0B68()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_96_0();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_63_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_3_13(v2, v3);
  }
}

uint64_t sub_2476E0BAC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_83_0();
  if (v0)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_80_1();
    return OUTLINED_FUNCTION_32_0(v2, v3);
  }
}

uint64_t sub_2476E0BEC()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476E0BF4()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t SQLExecution.partialQuickCheck(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476E0C98: call analysis failed (funcsize=81)"

uint64_t SQLExecution.recursiveTriggers.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(25);
  v0 = OUTLINED_FUNCTION_18_8((uint64_t)"PRAGMA recursive_triggers");
  OUTLINED_FUNCTION_101_0(v0);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.recursiveTriggers(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 312) = v3;
  *(_QWORD *)(v4 + 296) = a2;
  *(_BYTE *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_21();
}

#error "2476E0E74: call analysis failed (funcsize=72)"

uint64_t SQLExecution.schemaVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(21);
  v0 = OUTLINED_FUNCTION_32_4((uint64_t)"PRAGMA schema_version");
  OUTLINED_FUNCTION_114(v0);
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.shrinkMemory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_36_4(20);
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 24) = 0x80000002477354E0;
  *(_BYTE *)(v2 + 48) = 0;
  v4 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v2 + 56) = v4;
  *v4 = v2;
  v4[1] = sub_2476E0FF4;
  return v6(v3, v1, v0);
}

uint64_t sub_2476E0FF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_141();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t SQLExecution.columns(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[67] = v4;
  v5[66] = a4;
  v5[65] = a3;
  v5[63] = a1;
  v5[64] = a2;
  sub_2476B42B4(0);
  v5[68] = v6;
  v5[69] = *(_QWORD *)(v6 - 8);
  v5[70] = swift_task_alloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476E10A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_13_11();
  v4 = v3;
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 24) = v5;
  *(_BYTE *)(v0 + 88) = 0;
  OUTLINED_FUNCTION_64_1();
  if (v6)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v19;
  }
  v8 = *(_QWORD *)(v0 + 504);
  v7 = *(_QWORD *)(v0 + 512);
  OUTLINED_FUNCTION_100_0();
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v7;
  *(_BYTE *)(v0 + 168) = 0;
  OUTLINED_FUNCTION_112();
  if (v2 >= v8 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v20;
  }
  *(_QWORD *)(v4 + 16) = v1;
  OUTLINED_FUNCTION_26_6(v4 + 80 * v2);
  *(_QWORD *)(v0 + 176) = 41;
  *(_QWORD *)(v0 + 184) = 0xE100000000000000;
  *(_BYTE *)(v0 + 248) = 0;
  v9 = *(_QWORD *)(v4 + 16);
  if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v4 = v21;
  }
  *(_QWORD *)(v4 + 16) = v9 + 1;
  OUTLINED_FUNCTION_23_6(v4 + 80 * v9);
  v22 = v4;
  result = OUTLINED_FUNCTION_59_4();
  v11 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v0 + 568) = v11;
  if (v11)
  {
    v13 = v22;
    v12 = 0;
    v14 = v23;
LABEL_11:
    *(_QWORD *)(v0 + 600) = v24;
    *(_QWORD *)(v0 + 592) = v14;
    *(_QWORD *)(v0 + 584) = v12;
    *(_QWORD *)(v0 + 576) = v13;
    *(_QWORD *)(v0 + 464) = v13;
    *(_QWORD *)(v0 + 472) = v12;
    *(_QWORD *)(v0 + 480) = v14;
    *(_QWORD *)(v0 + 488) = v24;
    *(_BYTE *)(v0 + 496) = v11 != 0;
    v15 = (_QWORD *)swift_task_alloc();
    v16 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v0 + 608) = v15;
    v17 = MEMORY[0x24BEE0D00];
    v18 = MEMORY[0x24BEE1328];
    *(_QWORD *)(v0 + 320) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 328) = v17;
    *(_QWORD *)(v0 + 336) = v18;
    *(_QWORD *)(v0 + 344) = &type metadata for SQLDynamicValue;
    *(_QWORD *)(v0 + 256) = &protocol witness table for Int;
    *(_QWORD *)(v0 + 264) = &protocol witness table for String;
    *(_QWORD *)(v0 + 272) = &protocol witness table for String;
    *(_QWORD *)(v0 + 280) = &protocol witness table for Bool;
    *(_QWORD *)(v0 + 352) = v16;
    *(_QWORD *)(v0 + 360) = v16;
    *(_QWORD *)(v0 + 288) = &protocol witness table for SQLDynamicValue;
    *(_QWORD *)(v0 + 296) = &protocol witness table for Int;
    *(_QWORD *)(v0 + 304) = &protocol witness table for Int;
    *(_QWORD *)(v0 + 312) = v16;
    *v15 = v0;
    v15[1] = sub_2476E12DC;
    return SQLExecution.results<A>(for:of:)();
  }
  v12 = v23;
  if (v23)
  {
    v13 = 0;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_47_4();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476E12DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v1 + 616) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_0_13();
}

uint64_t sub_2476E1344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_64();
  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  *(_QWORD *)(v0 + 624) = v1;
  *(_QWORD *)(v0 + 632) = v2;
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v0 + 640) = v3;
  *(_QWORD *)(v0 + 648) = v4;
  v5 = *(_QWORD *)(v0 + 448);
  *(_QWORD *)(v0 + 656) = v5;
  v6 = *(_BYTE *)(v0 + 456);
  *(_BYTE *)(v0 + 89) = v6;
  *(_QWORD *)(v0 + 368) = v1;
  *(_QWORD *)(v0 + 376) = v2;
  *(_QWORD *)(v0 + 384) = v3;
  *(_QWORD *)(v0 + 392) = v4;
  *(_QWORD *)(v0 + 400) = v5;
  *(_BYTE *)(v0 + 408) = v6;
  swift_retain();
  sub_2476B3E14(v2, v3, v4, v5, v6);
  sub_2476B42C8(0);
  sub_2476E1984();
  sub_24772D30C();
  v7 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 664) = v7;
  *v7 = v0;
  v7[1] = sub_2476E1438;
  return v9();
}

uint64_t sub_2476E1438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_40();
  *v4 = *v3;
  v2[84] = v1;
  swift_task_dealloc();
  v5 = v2[70];
  v6 = v2[69];
  v7 = v2[68];
  if (!v1)
    v2[85] = v0;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_2476E14AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_104_0();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 680));
}

uint64_t sub_2476E1500()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476E1534()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_104_0();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476E1578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(v2 + 80) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 56);
  return swift_task_switch();
}

uint64_t sub_2476E15B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 40);
  sub_24772C91C();
  sub_24772C91C();
  sub_2476EBF88(v3, v2, &v12);
  v4 = v12;
  swift_retain();
  if (v1 >= 4)
    v5 = 0;
  else
    v5 = v1;
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_BYTE *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v10 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v10 + 8) = v9;
  *(_BYTE *)(v10 + 16) = v4;
  *(_BYTE *)(v10 + 17) = v8;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v6 & ~(v6 >> 63);
  *(_BYTE *)(v10 + 40) = v6 < 1;
  *(_BYTE *)(v10 + 41) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.userVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_36_4(19);
  v0 = OUTLINED_FUNCTION_32_4((uint64_t)"PRAGMA user_version");
  OUTLINED_FUNCTION_114(v0);
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_107_0();
  v2 = OUTLINED_FUNCTION_7_13(v1);
  return OUTLINED_FUNCTION_6_12(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2476E16C4()
{
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476E1700()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 64))
    v1 = 0;
  else
    v1 = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t SQLExecution.userVersion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  return OUTLINED_FUNCTION_21();
}

void sub_2476E1730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_31_5();
  v4 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_17_8();
  v6 = v5;
  OUTLINED_FUNCTION_117_0(20);
  *(_QWORD *)(v3 + 8) = 0x8000000247735540;
  *(_BYTE *)(v3 + 72) = 0;
  OUTLINED_FUNCTION_65_0();
  if (v7)
  {
    OUTLINED_FUNCTION_27_5();
    v6 = v18;
  }
  v8 = v3 + 160;
  v9 = *(_QWORD *)(v1 + 304);
  OUTLINED_FUNCTION_48_5();
  *(_QWORD *)(v1 + 296) = v9;
  v10 = sub_24772D480();
  OUTLINED_FUNCTION_67_2(v10, v11);
  if (v7)
  {
    OUTLINED_FUNCTION_19_5();
    v6 = v19;
  }
  *(_QWORD *)(v6 + 16) = v0;
  OUTLINED_FUNCTION_26_6(v6 + 80 * v3);
  OUTLINED_FUNCTION_69_2();
  if (v7)
  {
    OUTLINED_FUNCTION_19_5();
    v6 = v20;
  }
  *(_QWORD *)(v6 + 16) = v0;
  OUTLINED_FUNCTION_23_6(v6 + 80 * v2);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_126_0();
  if (v4)
  {
    OUTLINED_FUNCTION_95_0();
    *(_QWORD *)(v1 + 360) = v12;
    *(_QWORD *)(v1 + 368) = v4;
    *(_QWORD *)(v1 + 344) = v8;
    *(_QWORD *)(v1 + 352) = v6;
    *(_QWORD *)(v1 + 256) = v8;
    *(_QWORD *)(v1 + 264) = v6;
    *(_QWORD *)(v1 + 272) = v12;
    *(_QWORD *)(v1 + 280) = v4;
    *(_BYTE *)(v1 + 288) = v4 != 0;
    v13 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v1 + 376) = v13;
    *v13 = v1;
    v13[1] = sub_2476DD9B0;
    v14 = OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_15_8(v14, v15, v16, v17);
  }
  else
  {
    __break(1u);
  }
}

void *sub_2476E18A8(const void *a1, void *a2)
{
  __swift_memcpy73_8(a2, a1);
  return a2;
}

void sub_2476E18E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B7B88)
  {
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B7B88);
  }
}

unint64_t sub_2476E192C()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_2576B8A20;
  if (!qword_2576B8A20)
  {
    sub_2476E18E4();
    v2 = &protocol witness table for String;
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2576B8A20);
  }
  return result;
}

unint64_t sub_2476E1984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B7C00;
  if (!qword_2576B7C00)
  {
    v1 = sub_2476B42C8(255);
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Results<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_2576B7C00);
  }
  return result;
}

unint64_t sub_2476E19C8()
{
  unint64_t result;

  result = qword_2576B8AD0;
  if (!qword_2576B8AD0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.AutoVacuumMode, &type metadata for SQLDatabase.AutoVacuumMode);
    atomic_store(result, (unint64_t *)&qword_2576B8AD0);
  }
  return result;
}

_UNKNOWN **sub_2476E1A04()
{
  return &protocol witness table for Int;
}

unint64_t sub_2476E1A14()
{
  unint64_t result;

  result = qword_2576B8AD8;
  if (!qword_2576B8AD8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.IndexInfo.IndexType, &type metadata for SQLDatabase.IndexInfo.IndexType);
    atomic_store(result, (unint64_t *)&qword_2576B8AD8);
  }
  return result;
}

unint64_t sub_2476E1A54()
{
  unint64_t result;

  result = qword_2576B8AE0[0];
  if (!qword_2576B8AE0[0])
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.TableColumnInfo.ColumnType, &type metadata for SQLDatabase.TableColumnInfo.ColumnType);
    atomic_store(result, qword_2576B8AE0);
  }
  return result;
}

void type metadata accessor for SQLDatabase.AutoVacuumMode()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s9CacheSizeOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s9CacheSizeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2476E1B3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_2476E1B44(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for SQLDatabase.CacheSize()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t sub_2476E1B60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  sub_24772C91C();
  return a1;
}

uint64_t _s9IndexInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s9IndexInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t _s9IndexInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 19))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IndexInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 19) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLDatabase.IndexInfo()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s14AutoVacuumModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2476E1D3C + 4 * byte_24772F4A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2476E1D70 + 4 * byte_24772F4A0[v4]))();
}

uint64_t sub_2476E1D70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476E1D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476E1D80);
  return result;
}

uint64_t sub_2476E1D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476E1D94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2476E1D98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476E1DA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.IndexInfo.IndexType()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15IndexColumnInfoVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15IndexColumnInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  sub_24772C91C();
  sub_24772C91C();
  return a1;
}

uint64_t _s15IndexColumnInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15IndexColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s15IndexColumnInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15IndexColumnInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLDatabase.IndexColumnInfo()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15TableColumnInfoVwxx()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s15TableColumnInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  sub_24772C91C();
  swift_retain();
  return a1;
}

uint64_t _s15TableColumnInfoVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s15TableColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t _s15TableColumnInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 42))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15TableColumnInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLDatabase.TableColumnInfo()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15TableColumnInfoV10ColumnTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s15TableColumnInfoV10ColumnTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2476E22B8 + 4 * byte_24772F4AF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2476E22EC + 4 * byte_24772F4AA[v4]))();
}

uint64_t sub_2476E22EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476E22F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476E22FCLL);
  return result;
}

uint64_t sub_2476E2308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476E2310);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2476E2314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476E231C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.TableColumnInfo.ColumnType()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_2_11()
{
  sub_2476C5B34();
}

uint64_t OUTLINED_FUNCTION_3_14(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 344) = a1;
  *(_QWORD *)(v4 + 352) = v2;
  *(_QWORD *)(v4 + 328) = v5;
  *(_QWORD *)(v4 + 336) = v3;
  *(_QWORD *)(v4 + 256) = v5;
  *(_QWORD *)(v4 + 264) = v3;
  *(_QWORD *)(v4 + 272) = a1;
  *(_QWORD *)(v4 + 280) = v2;
  *(_BYTE *)(v4 + 288) = v1 != 0;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_6_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_7_13(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  return sub_2476B3EAC(v3, v2, v1, v0, v4);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 368) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_11@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 256) = v5;
  *(_QWORD *)(v4 + 264) = v3;
  *(_QWORD *)(v4 + 272) = a1;
  *(_QWORD *)(v4 + 280) = v2;
  *(_BYTE *)(v4 + 288) = v1;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_13_11()
{
  sub_2476C5B34();
}

void *OUTLINED_FUNCTION_14_9()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  return sub_2476E18A8(v1, (void *)(v0 + 80 * v3 + 32));
}

uint64_t OUTLINED_FUNCTION_15_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void *OUTLINED_FUNCTION_16_8()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  return sub_2476E18A8(v1, (void *)(v0 + 80 * v3 + 32));
}

void OUTLINED_FUNCTION_17_8()
{
  sub_2476C5B34();
}

uint64_t OUTLINED_FUNCTION_18_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 24) = (a1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v1 + 48) = 0;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_19_5()
{
  sub_2476C5B34();
}

uint64_t OUTLINED_FUNCTION_20_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

void OUTLINED_FUNCTION_22_4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0xE000000000000000;
  *(_BYTE *)(v0 + 248) = 0;
}

void *OUTLINED_FUNCTION_23_6@<X0>(uint64_t a1@<X8>)
{
  const void *v1;

  return sub_2476E18A8(v1, (void *)(a1 + 32));
}

void *OUTLINED_FUNCTION_26_6@<X0>(uint64_t a1@<X8>)
{
  const void *v1;

  return sub_2476E18A8(v1, (void *)(a1 + 32));
}

void OUTLINED_FUNCTION_27_5()
{
  sub_2476C5B34();
}

uint64_t OUTLINED_FUNCTION_28_5@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 360) = a1;
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_29_8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v1 + 72) = 0;
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_32_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 24) = (a1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v1 + 48) = 0;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_33_7(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_34_6()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 248) = 0;
}

void *OUTLINED_FUNCTION_35_7@<X0>(uint64_t a1@<X8>)
{
  const void *v1;

  return sub_2476E18A8(v1, (void *)(a1 + 32));
}

void OUTLINED_FUNCTION_36_4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 384) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  _QWORD *v0;

  return sub_2476B3EAC(v0[45], v0[46], v0[47], v0[48], v0[44] != 0);
}

void OUTLINED_FUNCTION_41_5(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v1 + 72) = 0;
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return sub_247728928();
}

void OUTLINED_FUNCTION_45_6(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = v1;
  *(_BYTE *)(v2 + 168) = 0;
}

uint64_t OUTLINED_FUNCTION_46_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 296) = a2;
  *(_QWORD *)(v4 + 304) = v2;
  *a1 = v4;
  a1[1] = v3;
  return v5;
}

void *OUTLINED_FUNCTION_48_5()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  return sub_2476E18A8(v1, (void *)(v0 + 80 * v3 + 32));
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v1;
  *(_BYTE *)(v0 + 168) = 0;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_50_2(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 424) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 400) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return sub_247728928();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 440) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  return sub_247728928();
}

uint64_t OUTLINED_FUNCTION_60_4()
{
  return sub_247728928();
}

void *OUTLINED_FUNCTION_62_3@<X0>(uint64_t a1@<X8>)
{
  const void *v1;

  return sub_2476E18A8(v1, (void *)(a1 + 32));
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_66_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  *(_QWORD *)(v14 + 320) = *(_QWORD *)(a14 + 16);
}

uint64_t OUTLINED_FUNCTION_67_2(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_QWORD *)(v2 + 104) = a2;
  *(_BYTE *)(v2 + 168) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_69_2()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0xE000000000000000;
  *(_BYTE *)(v0 + 248) = 0;
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 456) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_73_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 256) = v2;
  *(_QWORD *)(v1 + 264) = (v0 - 32) | 0x8000000000000000;
  *(_QWORD *)(v1 + 272) = 0;
  *(_QWORD *)(v1 + 280) = 0;
  *(_BYTE *)(v1 + 288) = 0;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_75_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_76_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 472) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
}

void OUTLINED_FUNCTION_85_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 168) = 0;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_90_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 360) = a2;
  *(_QWORD *)(v4 + 368) = v2;
  *a1 = v4;
  a1[1] = v3;
  return v5;
}

uint64_t OUTLINED_FUNCTION_91_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 344) = v2;
  *(_QWORD *)(v5 + 352) = a2;
  *a1 = v5;
  a1[1] = v3;
  return v4;
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  return sub_2476B3EAC(v3, v2, v1, v0, v4);
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *OUTLINED_FUNCTION_100_0()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v2;
  return sub_2476E18A8(v0, (void *)(v1 + 80 * v3 + 32));
}

uint64_t OUTLINED_FUNCTION_101_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

void OUTLINED_FUNCTION_103_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  *(_QWORD *)(v13 + 352) = *(_QWORD *)(a13 + 16);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 624);
}

uint64_t OUTLINED_FUNCTION_105_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_107_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
}

void OUTLINED_FUNCTION_108_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
}

void OUTLINED_FUNCTION_109_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  *(_BYTE *)(v0 + 168) = 0;
}

uint64_t OUTLINED_FUNCTION_110_0(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 88) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_112()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_114(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

void OUTLINED_FUNCTION_116_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  *(_QWORD *)(v13 + 376) = *(_QWORD *)(a13 + 16);
}

void OUTLINED_FUNCTION_117_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  return sub_24772C91C();
}

void OUTLINED_FUNCTION_120_0(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_126_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 336) = *(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_129_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 248) = 0;
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return sub_24772D6B4();
}

void *sub_2476E2CAC()
{
  return &unk_2518DD118;
}

void *sub_2476E2CB8()
{
  return &unk_2518DD150;
}

void *sub_2476E2CC4()
{
  return &unk_2518DD188;
}

void *sub_2476E2CD0()
{
  return &unk_2518DD1C0;
}

void *sub_2476E2CDC()
{
  return &unk_2518DD1F8;
}

void *sub_2476E2CE8()
{
  return &unk_2518DD230;
}

void *sub_2476E2CF4()
{
  return &unk_2518DD268;
}

void *sub_2476E2D00()
{
  return &unk_2518DD2A0;
}

void *sub_2476E2D0C()
{
  return &unk_2518DD2D8;
}

void *sub_2476E2D18()
{
  return &unk_2518DD310;
}

void *sub_2476E2D24()
{
  return &unk_2518DD348;
}

uint64_t static _SQLBindableElement<>.columns()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2476E2DAC();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24772E730;
  *(_QWORD *)(v4 + 32) = 0x746E656D656C65;
  *(_QWORD *)(v4 + 40) = 0xE700000000000000;
  (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 24) + 32))(a1);
  return v4;
}

void sub_2476E2DAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8288)
  {
    sub_2476B49DC();
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8288);
  }
}

uint64_t sub_2476E2E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  sqlite3_value *v3;

  OUTLINED_FUNCTION_12_7();
  return sub_2476E2E1C(v0, v1, v2, v3) & 1;
}

uint64_t sub_2476E2E1C(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_value *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *i;
  BOOL v9;
  const sqlite3_value *v10;
  sqlite3_value *v11;
  char v12;
  _QWORD *v13;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v7 = 0;
    for (i = (_QWORD *)(sub_24772C91C() + 40); ; i += 2)
    {
      v9 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v9 && (sub_24772D4F8() & 1) == 0)
        break;
      v10 = *(const sqlite3_value **)(a2 + 8 * v7);
      if (!v10)
      {
        sub_24772D144();
        swift_bridgeObjectRelease();
        sub_24772D480();
        sub_24772CAFC();
        swift_bridgeObjectRelease();
        sub_24772CAFC();
        sub_24772CAFC();
        sub_2476B3FD0();
        swift_allocError();
        *v13 = 0xD00000000000002ALL;
        v13[1] = 0x8000000247735600;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v12 & 1;
      }
      type metadata accessor for SQLDynamicValue.Box();
      swift_allocObject();
      v11 = sub_2476B5FC0(v10);
      swift_release();
      if (v11 != a4)
      {
        swift_bridgeObjectRelease();
        v12 = 0;
        return v12 & 1;
      }
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        return v12 & 1;
      }
    }
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  else
  {
    v12 = 1;
    return v12 & 1;
  }
  return result;
}

uint64_t sub_2476E30D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;
  sqlite3_value *v7;
  unint64_t *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v4 = 0;
  v5 = (_QWORD *)(sub_24772C91C() + 40);
  while (1)
  {
    v6 = *(v5 - 1) == 0x746E656D656C65 && *v5 == 0xE700000000000000;
    if (!v6 && (sub_24772D4F8() & 1) == 0)
      break;
    v7 = *(sqlite3_value **)(a2 + 8 * v4);
    if (!v7)
    {
      sub_24772D144();
      swift_bridgeObjectRelease();
      v10 = 0xD00000000000002ALL;
      v11 = 0x8000000247735600;
      sub_24772D480();
      sub_24772CAFC();
      swift_bridgeObjectRelease();
      sub_24772CAFC();
LABEL_14:
      sub_24772CAFC();
      sub_2476B3FD0();
      swift_allocError();
      *v8 = v10;
      v8[1] = v11;
      swift_willThrow();
LABEL_15:
      swift_bridgeObjectRelease();
      return 1;
    }
    if (sqlite3_value_type(*(sqlite3_value **)(a2 + 8 * v4)) != 5)
    {
      sub_24772D144();
      swift_bridgeObjectRelease();
      v10 = 0xD00000000000001ELL;
      v11 = 0x8000000247734850;
      sqlite3_value_type(v7);
      sub_24772D480();
      sub_24772CAFC();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    ++v4;
    v5 += 2;
    if (v2 == v4)
      goto LABEL_15;
  }
  sub_24772C91C();
  sub_24772D144();
  sub_24772CAFC();
  sub_24772D300();
  result = sub_24772D354();
  __break(1u);
  return result;
}

uint64_t sub_2476E33B8(uint64_t a1, sqlite3_value **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  BOOL v6;
  sqlite3_value *v7;
  const void *v8;
  int v9;
  unsigned int v10;
  char v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;
  __int128 __dst;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 16))
  {
    v16 = a5 >> 62;
    v15 = sub_24772C91C();
    v6 = *(_QWORD *)(v15 + 32) == 0x746E656D656C65 && *(_QWORD *)(v15 + 40) == 0xE700000000000000;
    if (!v6 && (sub_24772D4F8() & 1) == 0)
    {
      *(_QWORD *)&__dst = 0;
      *((_QWORD *)&__dst + 1) = 0xE000000000000000;
      sub_24772C91C();
      sub_24772D144();
      sub_24772CAFC();
      sub_24772D300();
      sub_24772D354();
      __break(1u);
      JUMPOUT(0x2476E3D3CLL);
    }
    v7 = *a2;
    if (*a2)
    {
      v8 = sqlite3_value_blob(*a2);
      v9 = sqlite3_value_bytes(v7);
      if (v9 < 1)
        goto LABEL_16;
      if (v8)
      {
        v10 = v9;
        if (v9 < 0xF)
        {
          *(_QWORD *)((char *)&__dst + 6) = 0;
          *(_QWORD *)&__dst = 0;
          BYTE14(__dst) = v9;
          memcpy(&__dst, v8, v9);
        }
        else
        {
          sub_24772C454();
          swift_allocObject();
          sub_24772C418();
          if (v10 >= 0x7FFFFFFF)
          {
            sub_24772C55C();
            *(_OWORD *)(swift_allocObject() + 16) = xmmword_24772E170;
          }
        }
LABEL_16:
        __asm { BR              X8 }
      }
      sub_2476B3FD0();
      swift_allocError();
      *v13 = 0xD00000000000002BLL;
      v12 = 0x8000000247735630;
    }
    else
    {
      sub_24772D144();
      swift_bridgeObjectRelease();
      sub_24772D480();
      sub_24772CAFC();
      swift_bridgeObjectRelease();
      sub_24772CAFC();
      sub_24772CAFC();
      v12 = 0x8000000247735600;
      sub_2476B3FD0();
      swift_allocError();
      *v13 = 0xD00000000000002ALL;
    }
    v13[1] = v12;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_2476E3DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  _QWORD *i;
  BOOL v11;
  sqlite3_value *v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t *v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v9 = 0;
    for (i = (_QWORD *)(sub_24772C91C() + 40); ; i += 2)
    {
      v11 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v11 && (sub_24772D4F8() & 1) == 0)
        break;
      v12 = *(sqlite3_value **)(a2 + 8 * v9);
      if (!v12)
      {
        sub_24772D144();
        swift_bridgeObjectRelease();
        v22 = 0xD00000000000002ALL;
        v23 = 0x8000000247735600;
        sub_24772D480();
        sub_24772CAFC();
        swift_bridgeObjectRelease();
        sub_24772CAFC();
        sub_24772CAFC();
        goto LABEL_24;
      }
      v13 = sqlite3_value_text(*(sqlite3_value **)(a2 + 8 * v9));
      sqlite3_value_bytes(v12);
      if (!v13)
      {
        sub_2476B3FD0();
        swift_allocError();
        *v18 = 0xD00000000000002DLL;
        v19 = 0x8000000247734800;
        goto LABEL_25;
      }
      v14 = sub_24772C9E8();
      if (!v15)
      {
        v22 = 0;
        v23 = 0xE000000000000000;
        sub_24772D144();
        sub_24772CAFC();
        sub_24772D300();
LABEL_24:
        v19 = v23;
        sub_2476B3FD0();
        swift_allocError();
        *v18 = v22;
LABEL_25:
        v18[1] = v19;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v20 & 1;
      }
      if (v14 == a4 && v15 == a5)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_24772D4F8();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v20 = 0;
          return v20 & 1;
        }
      }
      if (v5 == ++v9)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        return v20 & 1;
      }
    }
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  else
  {
    v20 = 1;
    return v20 & 1;
  }
  return result;
}

uint64_t sub_2476E4154(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *i;
  BOOL v9;
  sqlite3_value *v10;
  char v11;
  _QWORD *v12;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v7 = 0;
    for (i = (_QWORD *)(sub_24772C91C() + 40); ; i += 2)
    {
      v9 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v9 && (sub_24772D4F8() & 1) == 0)
        break;
      v10 = *(sqlite3_value **)(a2 + 8 * v7);
      if (!v10)
      {
        sub_24772D144();
        swift_bridgeObjectRelease();
        sub_24772D480();
        sub_24772CAFC();
        swift_bridgeObjectRelease();
        sub_24772CAFC();
        sub_24772CAFC();
        sub_2476B3FD0();
        swift_allocError();
        *v12 = 0xD00000000000002ALL;
        v12[1] = 0x8000000247735600;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      if ((((sqlite3_value_int(v10) == 0) ^ a4) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v11 = 0;
        return v11 & 1;
      }
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        v11 = 1;
        return v11 & 1;
      }
    }
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  else
  {
    v11 = 1;
    return v11 & 1;
  }
  return result;
}

uint64_t sub_2476E43D8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;
  sqlite3_value *v9;
  char v10;
  _QWORD *v11;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v6 = 0;
    for (i = (_QWORD *)(sub_24772C91C() + 40); ; i += 2)
    {
      v8 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v8 && (sub_24772D4F8() & 1) == 0)
        break;
      v9 = *(sqlite3_value **)(a2 + 8 * v6);
      if (!v9)
      {
        sub_24772D144();
        swift_bridgeObjectRelease();
        sub_24772D480();
        sub_24772CAFC();
        swift_bridgeObjectRelease();
        sub_24772CAFC();
        sub_24772CAFC();
        sub_2476B3FD0();
        swift_allocError();
        *v11 = 0xD00000000000002ALL;
        v11[1] = 0x8000000247735600;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
      if (sqlite3_value_double(v9) != a3)
      {
        swift_bridgeObjectRelease();
        v10 = 0;
        return v10 & 1;
      }
      if (v3 == ++v6)
      {
        swift_bridgeObjectRelease();
        v10 = 1;
        return v10 & 1;
      }
    }
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  else
  {
    v10 = 1;
    return v10 & 1;
  }
  return result;
}

uint64_t sub_2476E4660(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;
  sqlite3_value *v9;
  float v10;
  char v11;
  _QWORD *v12;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v6 = 0;
    for (i = (_QWORD *)(sub_24772C91C() + 40); ; i += 2)
    {
      v8 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v8 && (sub_24772D4F8() & 1) == 0)
        break;
      v9 = *(sqlite3_value **)(a2 + 8 * v6);
      if (!v9)
      {
        sub_24772D144();
        swift_bridgeObjectRelease();
        sub_24772D480();
        sub_24772CAFC();
        swift_bridgeObjectRelease();
        sub_24772CAFC();
        sub_24772CAFC();
        sub_2476B3FD0();
        swift_allocError();
        *v12 = 0xD00000000000002ALL;
        v12[1] = 0x8000000247735600;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      v10 = sqlite3_value_double(v9);
      if (v10 != a3)
      {
        swift_bridgeObjectRelease();
        v11 = 0;
        return v11 & 1;
      }
      if (v3 == ++v6)
      {
        swift_bridgeObjectRelease();
        v11 = 1;
        return v11 & 1;
      }
    }
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  else
  {
    v11 = 1;
    return v11 & 1;
  }
  return result;
}

void sub_2476E48EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  sqlite3_value *v10;
  uint64_t v11;
  _QWORD *v12;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_10_10();
    OUTLINED_FUNCTION_56_5(v8);
    while (1)
    {
      v9 = *(v2 - 1) == v3 && *v2 == v1;
      if (!v9 && (OUTLINED_FUNCTION_3_15() & 1) == 0)
        break;
      v10 = *(sqlite3_value **)(v5 + 8 * v6);
      if (!v10)
      {
        OUTLINED_FUNCTION_25_6();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_33_8();
        sub_24772D480();
        OUTLINED_FUNCTION_47_5();
        OUTLINED_FUNCTION_53_1();
        OUTLINED_FUNCTION_24_8();
        OUTLINED_FUNCTION_49_4();
        sub_2476B3FD0();
        v11 = OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_30_5(v11, v12);
        OUTLINED_FUNCTION_20_7();
        goto LABEL_15;
      }
      if (sqlite3_value_int64(v10) == v4)
      {
        ++v6;
        v2 += 2;
        if (v7 != v6)
          continue;
      }
      OUTLINED_FUNCTION_20_7();
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_34_7();
    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_70_3();
    OUTLINED_FUNCTION_40_4();
    OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_17_9();
  }
}

void sub_2476E4A74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  sqlite3_value *v10;
  sqlite3_int64 v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_10_10();
    OUTLINED_FUNCTION_56_5(v8);
    while (1)
    {
      v9 = *(v2 - 1) == v3 && *v2 == v1;
      if (!v9 && (OUTLINED_FUNCTION_3_15() & 1) == 0)
        break;
      v10 = *(sqlite3_value **)(v5 + 8 * v6);
      if (!v10)
      {
        OUTLINED_FUNCTION_25_6();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_33_8();
        sub_24772D480();
        OUTLINED_FUNCTION_47_5();
        OUTLINED_FUNCTION_53_1();
        OUTLINED_FUNCTION_24_8();
        OUTLINED_FUNCTION_49_4();
        sub_2476B3FD0();
        v12 = OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_30_5(v12, v13);
        OUTLINED_FUNCTION_20_7();
        goto LABEL_16;
      }
      v11 = sqlite3_value_int64(v10);
      if (v11 < 0)
      {
        sub_24772D348();
        __break(1u);
        break;
      }
      if (v11 == v4)
      {
        ++v6;
        v2 += 2;
        if (v7 != v6)
          continue;
      }
      OUTLINED_FUNCTION_20_7();
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_34_7();
    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_70_3();
    OUTLINED_FUNCTION_40_4();
    OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_17_9();
  }
}

void _SQLBindableElement<>.filter(columns:arguments:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  OUTLINED_FUNCTION_7_14();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_4_9();
  if (!*(_QWORD *)(MEMORY[0x24BDAC7A8](v4) + 16))
    goto LABEL_8;
  v5 = (uint64_t *)(sub_24772C91C() + 40);
  v7 = *(v5 - 1);
  v6 = *v5;
  OUTLINED_FUNCTION_21_4();
  v9 = v7 == v8 && v6 == 0xE700000000000000;
  if (v9 || (OUTLINED_FUNCTION_3_15() & 1) != 0)
  {
    OUTLINED_FUNCTION_51_6(0, v3, v3, *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8));
    swift_bridgeObjectRelease();
LABEL_8:
    OUTLINED_FUNCTION_50_3();
    OUTLINED_FUNCTION_0_11();
    return;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_42_6();
  OUTLINED_FUNCTION_13_12();
  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_40_4();
  OUTLINED_FUNCTION_1_12();
  __break(1u);
}

void sub_2476E4E10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_12();
  sub_2476E4E34(v3, v0, v1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E4E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  BOOL v6;
  uint64_t result;

  v6 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (sub_24772D4F8() & 1) != 0)
  {
    a4[3] = &type metadata for SQLDynamicValue;
    a4[4] = &protocol witness table for SQLDynamicValue;
    *a4 = a3;
    return swift_retain();
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E4F6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;

  v4 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v4 || (result = sub_24772D4F8(), (result & 1) != 0))
  {
    *(_QWORD *)(a3 + 24) = &type metadata for SQLNull;
    *(_QWORD *)(a3 + 32) = &protocol witness table for SQLNull;
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E5098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  BOOL v8;
  uint64_t result;

  v8 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v8 || (sub_24772D4F8() & 1) != 0)
  {
    a5[3] = MEMORY[0x24BDCDDE8];
    a5[4] = (uint64_t)&protocol witness table for Data;
    *a5 = a3;
    a5[1] = a4;
    return sub_2476D64E0(a3, a4);
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E51E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  BOOL v8;
  uint64_t result;

  v8 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v8 || (sub_24772D4F8() & 1) != 0)
  {
    a5[3] = MEMORY[0x24BEE0D00];
    a5[4] = &protocol witness table for String;
    *a5 = a3;
    a5[1] = a4;
    return sub_24772C91C();
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E5324@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  BOOL v6;

  v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (result = sub_24772D4F8(), (result & 1) != 0))
  {
    *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE1328];
    *(_QWORD *)(a4 + 32) = &protocol witness table for Bool;
    *(_BYTE *)a4 = a3 & 1;
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E545C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  BOOL v6;

  v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (result = sub_24772D4F8(), (result & 1) != 0))
  {
    *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(a3 + 32) = &protocol witness table for Double;
    *(double *)a3 = a4;
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E5598@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float a4@<S0>)
{
  BOOL v6;

  v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (result = sub_24772D4F8(), (result & 1) != 0))
  {
    *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE14E8];
    *(_QWORD *)(a3 + 32) = &protocol witness table for Float;
    *(float *)a3 = a4;
  }
  else
  {
    sub_24772C91C();
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    result = sub_24772D354();
    __break(1u);
  }
  return result;
}

void sub_2476E56D4(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  OUTLINED_FUNCTION_21_4();
  v11 = v9 == v10 && v8 == 0xE700000000000000;
  if (v11 || (OUTLINED_FUNCTION_3_15() & 1) != 0)
  {
    a4[3] = a2;
    a4[4] = a3;
    *a4 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_63_3();
    OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
}

uint64_t _SQLBindableElement<>.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;

  OUTLINED_FUNCTION_21_4();
  v9 = *v7 == v8 && v7[1] == 0xE700000000000000;
  if (v9 || (OUTLINED_FUNCTION_3_15() & 1) != 0)
  {
    a3[3] = a1;
    a3[4] = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_0, v3, a1);
  }
  else
  {
    sub_24772C91C();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_63_3();
    result = OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
  return result;
}

void sub_2476E5890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_24772CA18();
  v2 = v1;
  if (v0 == sub_24772CA18() && v2 == v3)
    OUTLINED_FUNCTION_53_6();
  else
    OUTLINED_FUNCTION_6_13();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_44();
}

BOOL sub_2476E58F4(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_2476E5904(char a1, char a2)
{
  return qword_24772FBB0[a1] == qword_24772FBB0[a2];
}

BOOL sub_2476E5928(char a1, char a2)
{
  return qword_24772FC38[a1] == qword_24772FC38[a2];
}

void sub_2476E594C(unsigned __int8 a1, char a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 117;
    else
      v3 = 27504;
    if (v2 == 1)
      v4 = 0xE100000000000000;
    else
      v4 = 0xE200000000000000;
  }
  else
  {
    v4 = 0xE100000000000000;
    v3 = 99;
  }
  if (a2)
  {
    if (a2 == 1)
      v5 = 117;
    else
      v5 = 27504;
    if (a2 == 1)
      v6 = 0xE100000000000000;
    else
      v6 = 0xE200000000000000;
  }
  else
  {
    v6 = 0xE100000000000000;
    v5 = 99;
  }
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_53_6();
  else
    OUTLINED_FUNCTION_6_13();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_44();
}

void sub_2476E59EC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x564953554C435845;
  else
    v3 = 0x4C414D524F4ELL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE900000000000045;
  if ((a2 & 1) != 0)
    v5 = 0x564953554C435845;
  else
    v5 = 0x4C414D524F4ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000045;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_53_6();
  else
    OUTLINED_FUNCTION_6_13();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_44();
}

void sub_2476E5A6C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2476E5AB4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2476E5B30 + 4 * byte_24772F886[a2]))(0x455441434E555254);
}

void sub_2476E5B30(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x455441434E555254 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_53_6();
  else
    OUTLINED_FUNCTION_6_13();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2476E5BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_24772D4F8();
}

void sub_2476E5BD8(uint64_t a1)
{
  swift_allocObject();
  sub_2476E5C10(a1);
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476E5C10(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  return v1;
}

void sub_2476E5C40(_QWORD *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_2476E5C54()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_2476E5C80()
{
  sub_2476E5C54();
  return swift_deallocClassInstance();
}

const char *sub_2476E5CA4()
{
  return "com.apple.sonic.reference-box";
}

void sub_2476E5CB8(_QWORD *a1@<X8>)
{
  sub_2476E5C40(a1);
}

uint64_t sub_2476E5CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_24772D144();
  swift_bridgeObjectRelease();
  sub_24772D720();
  sub_24772CAFC();
  OUTLINED_FUNCTION_32();
  sub_2476B5B30();
  sub_24772D084();
  OUTLINED_FUNCTION_38_7();
  v6 = (uint64_t)&v6;
  v7 = v0;
  v1 = OUTLINED_FUNCTION_0_14();
  v3 = v2;
  swift_bridgeObjectRelease();
  v6 = v1;
  v7 = v3;
  OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_38_7();
  v6 = v1;
  v7 = v0;
  v4 = OUTLINED_FUNCTION_0_14();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_2476E5E1C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  sub_2476C9AA8();
  OUTLINED_FUNCTION_68_4();
}

uint64_t sub_2476E5E58@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t result;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v44;
  uint64_t v45;
  __int128 v46;
  _OWORD v47[4];
  uint64_t v48;

  v4 = *a1;
  memset(v47, 0, 41);
  sub_2476E5E1C(a2, a3);
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  v7 = sub_2476E6298((uint64_t)v47, v6);
  v8 = *(_QWORD *)(v4 + 16);
  if (v8)
  {
    OUTLINED_FUNCTION_45();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_49:
      sub_24771924C();
      v7 = v36;
    }
    v9 = 0;
    v10 = v4 + 32;
    v40 = v7 + 40;
    v41 = v7;
    v38 = v8;
    v39 = v4;
    while (1)
    {
      if (v9 >= *(_QWORD *)(v4 + 16))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v11 = (uint64_t *)(v10 + 40 * v9);
      if (!*((_BYTE *)v11 + 16))
      {
        v13 = *v11;
        v12 = v11[1];
        v15 = v11[3];
        v14 = v11[4];
        v48 = v15;
        v45 = v14;
        if (*(_BYTE *)(v10 + 40 * v9 + 17) != 1)
        {
          sub_24772C91C();
          sub_24772D144();
          OUTLINED_FUNCTION_41_6();
          OUTLINED_FUNCTION_13_12();
          sub_24772D300();
          result = OUTLINED_FUNCTION_1_12();
          __break(1u);
          return result;
        }
        v16 = v10;
        sub_24772C91C();
        sub_2476E5E1C(a2, a3);
        v18 = *(_QWORD *)(v17 + 16);
        if (v18)
        {
          v4 = 0;
          v19 = (_QWORD *)(v17 + 40);
          v8 = v40;
          while (1)
          {
            v20 = *(v19 - 1) == v13 && *v19 == v12;
            if (v20 || (OUTLINED_FUNCTION_38_5() & 1) != 0)
              break;
            ++v4;
            v8 += 48;
            v19 += 3;
            if (v18 == v4)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_63_0();
              v7 = v41;
              goto LABEL_18;
            }
          }
          OUTLINED_FUNCTION_63_0();
          v7 = v41;
          if (v4 >= *(_QWORD *)(v41 + 16))
            goto LABEL_48;
          *(_QWORD *)(v8 - 8) = v13;
          *(_QWORD *)v8 = v12;
          *(_QWORD *)(v8 + 8) = 256;
          *(_QWORD *)(v8 + 16) = v48;
          *(_QWORD *)(v8 + 24) = v45;
          *(_BYTE *)(v8 + 32) = 1;
          swift_bridgeObjectRelease();
LABEL_18:
          v8 = v38;
          v4 = v39;
        }
        else
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_63_0();
        }
        v10 = v16;
      }
      if (++v9 == v8)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v21 = *(_QWORD *)(v7 + 16);
  if (v21)
  {
    v22 = (_QWORD *)(v7 + 40);
    while (1)
    {
      if (*v22)
      {
        v23 = *(v22 - 1) == 0x7463656C6C6F635FLL && *v22 == 0xEB000000006E6F69;
        if (v23 || (OUTLINED_FUNCTION_38_5() & 1) != 0)
          break;
      }
      v22 += 6;
      if (!--v21)
        goto LABEL_32;
    }
    v48 = *(_QWORD *)(v7 + 16);
    if (v48)
    {
      v44 = 0;
      v25 = 0;
      v26 = v7 + 40;
      v27 = MEMORY[0x24BEE4AF8];
      do
      {
        v28 = *(_QWORD *)v26;
        if (*(_QWORD *)v26)
        {
          v29 = *(_QWORD *)(v26 - 8);
          v46 = *(_OWORD *)(v26 + 16);
          v30 = *(_BYTE *)(v26 + 32);
          v31 = *(_QWORD *)(v26 + 8);
          if (v25 < 0x20)
            v44 |= 1 << v25;
          sub_24772C91C();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_71_2();
            v27 = v34;
          }
          v32 = *(_QWORD *)(v27 + 16);
          if (v32 >= *(_QWORD *)(v27 + 24) >> 1)
          {
            OUTLINED_FUNCTION_71_2();
            v27 = v35;
          }
          *(_QWORD *)(v27 + 16) = v32 + 1;
          v33 = v27 + 48 * v32;
          *(_QWORD *)(v33 + 32) = v29;
          *(_QWORD *)(v33 + 40) = v28;
          *(_BYTE *)(v33 + 48) = v31;
          *(_BYTE *)(v33 + 49) = BYTE1(v31) & 1;
          *(_OWORD *)(v33 + 56) = v46;
          *(_BYTE *)(v33 + 72) = v30 & 1;
        }
        ++v25;
        v26 += 48;
      }
      while (v48 != v25);
    }
    else
    {
      v44 = 0;
      v27 = MEMORY[0x24BEE4AF8];
    }
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = v44;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = v27;
    *(_OWORD *)(a4 + 32) = xmmword_24772F850;
    *(_OWORD *)(a4 + 48) = xmmword_24772F860;
    *(_BYTE *)(a4 + 64) = 0;
  }
  else
  {
LABEL_32:
    result = OUTLINED_FUNCTION_53_1();
    *(_BYTE *)(a4 + 64) = 0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_2476E6298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_24772D348();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_2476E91E4();
      v4 = sub_24772CCF4();
      *(_QWORD *)(v4 + 16) = a2;
      sub_2476E91A0(a1, v4 + 32);
      if (a2 != 1)
      {
        sub_2476E91A0(a1, v4 + 80);
        v5 = a2 - 2;
        if (a2 != 2)
        {
          v6 = v4 + 128;
          do
          {
            sub_2476E922C(a1);
            sub_2476E91A0(a1, v6);
            v6 += 48;
            --v5;
          }
          while (v5);
        }
        sub_2476E922C(a1);
      }
    }
    else
    {
      sub_2476E9254(a1);
      return MEMORY[0x24BEE4AF8];
    }
    return v4;
  }
  return result;
}

void sub_2476E63A0(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[1];
  v3 = *(_QWORD *)(*v1 + 16);
  if (v2 == v3)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    v4 = *v1 + 16 * v2;
    v6 = *(_QWORD *)(v4 + 32);
    v5 = *(_QWORD *)(v4 + 40);
    v1[1] = v2 + 1;
    v7 = v1[2];
    if (!__OFADD__(v7, 1))
    {
      v1[2] = v7 + 1;
      *a1 = v7;
      a1[1] = v6;
      a1[2] = v5;
      sub_24772C91C();
      return;
    }
  }
  __break(1u);
}

void sub_2476E63F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t AssociatedTypeWitness;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;

  OUTLINED_FUNCTION_7_14();
  v79 = v10;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  LODWORD(v80) = v17;
  v74 = v18;
  v19 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24772D018();
  OUTLINED_FUNCTION_9_9();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_25_5();
  v72 = v21;
  OUTLINED_FUNCTION_44_6();
  v70 = sub_24772D384();
  OUTLINED_FUNCTION_9_9();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_25_5();
  v68[1] = v23;
  OUTLINED_FUNCTION_44_6();
  v71 = v19;
  sub_24772D378();
  OUTLINED_FUNCTION_9_9();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_25_5();
  v69 = v25;
  v76 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_11_9();
  v68[0] = v27;
  MEMORY[0x24BDAC7A8](v28);
  v75 = (uint64_t)v68 - v29;
  v30 = 0;
  v31 = 0;
  v32 = *v16;
  v77 = v16[1];
  v78 = v32;
  v33 = MEMORY[0x24BEE4AF8];
  v34 = v12;
  v35 = v14;
  do
  {
    if (((v80 >> v31) & 1) != 0)
    {
      sub_2476E5E1C(v14, v12);
      if (v31 >= *(_QWORD *)(v36 + 16))
      {
        __break(1u);
        return;
      }
      v37 = *(_QWORD *)(v36 + v30 + 32);
      v38 = *(_QWORD *)(v36 + v30 + 40);
      sub_24772C91C();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_72_2();
        v33 = v41;
      }
      v39 = *(_QWORD *)(v33 + 16);
      if (v39 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        OUTLINED_FUNCTION_72_2();
        v33 = v42;
      }
      *(_QWORD *)(v33 + 16) = v39 + 1;
      v40 = v33 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v37;
      *(_QWORD *)(v40 + 40) = v38;
      v12 = v34;
      v14 = v35;
    }
    ++v31;
    v30 += 24;
  }
  while (v31 != 32);
  v43 = sub_2476E6818(0x7463656C6C6F635FLL, 0xEB000000006E6F69, v33);
  if ((v44 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_9();
    v81 = 0;
    v82 = 0xE000000000000000;
    sub_24772D144();
    OUTLINED_FUNCTION_41_6();
    sub_24772CAFC();
    v54 = OUTLINED_FUNCTION_44_6();
    _s15CollectionTableVMa(v54, v55, v12, v56);
    sub_24772D720();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_41_6();
    OUTLINED_FUNCTION_13_12();
    sub_2476B3FD0();
    v57 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_30_5(v57, v58);
  }
  else
  {
    v45 = v43;
    v46 = OUTLINED_FUNCTION_44_6();
    v50 = _s12ReferenceBoxCMa(v46, v47, v48, v49);
    v52 = v77;
    v51 = v78;
    v81 = v78;
    v82 = v77;
    v53 = v79;
    SQLTableFunctionCursorArguments.subscript.getter(v45, v50, v50, (uint64_t)&off_2518DE080);
    if (v53)
    {
      OUTLINED_FUNCTION_29_9();
    }
    else
    {
      v59 = v75;
      v60 = v76;
      OUTLINED_FUNCTION_37_7(v75, a10 + *(_QWORD *)(*(_QWORD *)a10 + 88), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 16));
      if (*(_QWORD *)(v33 + 16) < 2uLL)
      {
        v80 = a10;
        OUTLINED_FUNCTION_29_9();
      }
      else
      {
        v81 = v51;
        v82 = v52;
        v61 = v68[0];
        (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v12 + 24))(v33, &v81, v14, v12);
        v80 = a10;
        OUTLINED_FUNCTION_8_10(v59, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
        OUTLINED_FUNCTION_29_9();
        OUTLINED_FUNCTION_37_7(v59, v61, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 32));
      }
      sub_24772CBD4();
      v62 = v69;
      sub_24772D360();
      swift_release();
      OUTLINED_FUNCTION_8_10(v59, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
      v63 = v72;
      OUTLINED_FUNCTION_62_4();
      __swift_storeEnumTagSinglePayload(v64, v65, v66, v67);
      sub_2476E68A0(v62, v63, 0, 1, v14, v12, v74);
    }
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476E6818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a3 + 40); ; i += 2)
  {
    v8 = *(i - 1) == a1 && *i == a2;
    if (v8 || (sub_24772D4F8() & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_2476E68A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v14 = sub_24772D378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  v16 = _s15CollectionTableV6CursorVMa(0, a5, a6, v15);
  v17 = a7 + *(int *)(v16 + 36);
  swift_getAssociatedTypeWitness();
  v18 = sub_24772D018();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  v20 = a7 + *(int *)(v16 + 40);
  *(_QWORD *)v20 = a3;
  *(_BYTE *)(v20 + 8) = a4 & 1;
  return result;
}

uint64_t sub_2476E6990(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = OUTLINED_FUNCTION_0_4();
  v4 = sub_24772D018();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v27 - v6);
  v8 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_9_9();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v27 - v10);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_25_5();
  v30 = v13;
  sub_24772D378();
  sub_24772D36C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v3) == 1)
  {
    OUTLINED_FUNCTION_23_7(v28);
    v14 = v31;
    v15 = OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_23_7(*(_QWORD *)(v15 - 8));
    OUTLINED_FUNCTION_62_4();
    __swift_storeEnumTagSinglePayload(v16, v17, v18, AssociatedTypeWitness);
    result = 0;
    v20 = v1 + *(int *)(v14 + 40);
    *(_QWORD *)v20 = 0;
    *(_BYTE *)(v20 + 8) = 1;
  }
  else
  {
    v21 = (uint64_t)v7 + *(int *)(v3 + 48);
    v22 = (uint64_t)v11 + *(int *)(v8 + 48);
    *v11 = *v7;
    OUTLINED_FUNCTION_55_4(v22, v21);
    v23 = *v11;
    v24 = v30;
    OUTLINED_FUNCTION_55_4(v30, (uint64_t)v11 + *(int *)(v8 + 48));
    v25 = (_BYTE *)(v1 + *(int *)(v31 + 40));
    *(_QWORD *)v25 = v23;
    v25[8] = 0;
    v26 = OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_23_7(*(_QWORD *)(v26 - 8));
    OUTLINED_FUNCTION_55_4(v23, v24);
    __swift_storeEnumTagSinglePayload(v23, 0, 1, AssociatedTypeWitness);
    return *(_QWORD *)v25;
  }
  return result;
}

void sub_2476E6BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  __int128 v28;

  OUTLINED_FUNCTION_7_14();
  v25 = v0;
  v26 = v2;
  v4 = v3;
  v6 = v5;
  v7 = *(_QWORD *)(v3 + 16);
  v24 = *(_QWORD *)(v3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_44_6();
  v9 = sub_24772D018();
  v10 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22 - v16;
  v18 = *v6;
  v19 = v6[1];
  v23 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v25 + *(int *)(v4 + 36), v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v20 = v26;
    *(_QWORD *)(v26 + 24) = &type metadata for SQLNull;
    *(_QWORD *)(v20 + 32) = &protocol witness table for SQLNull;
  }
  else
  {
    v21 = v26;
    OUTLINED_FUNCTION_37_7((uint64_t)v17, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    v27[0] = v23;
    v27[1] = v19;
    (*(void (**)(__int128 *__return_ptr, _QWORD *, char *, uint64_t))(v24 + 32))(&v28, v27, v17, v7);
    OUTLINED_FUNCTION_8_10((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    if (!v1)
      sub_2476B3F20(&v28, v21);
  }
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476E6D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_2476E6990(a1);
  if (v1)
    return v3;
  return result;
}

void sub_2476E6D64()
{
  sub_2476E6BB8();
}

void sub_2476E6D78(uint64_t a1)
{
  sub_2476E5E1C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void *sub_2476E6D84()
{
  return &unk_2518DD560;
}

uint64_t sub_2476E6D90@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2476E5E58(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_2476E6DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2476E63F4(a1, a2, a3, a4, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), a7, a8, vars0, vars8);
}

void static Collection<>.columns()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  (*(void (**)(void))(a3 + 8))();
  OUTLINED_FUNCTION_35();
}

void Collection<>.filter(columns:arguments:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[10];

  OUTLINED_FUNCTION_7_14();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v16[1] = v10;
  MEMORY[0x24BDAC7A8](v8);
  v14 = *v12;
  v13 = v12[1];
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  v16[4] = v7;
  v16[5] = v5;
  v16[6] = v3;
  v16[7] = v9;
  v16[8] = v14;
  v16[9] = v13;
  sub_24772CC1C();
  if (!v1)
  {
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_72_1();
    swift_dynamicCast();
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476E6F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v9)(uint64_t, _QWORD *, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  _QWORD v12[2];

  v12[1] = a4;
  v12[0] = a3;
  v9 = *(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(a7 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v9(a2, v12, AssociatedTypeWitness, a7) & 1;
}

uint64_t static Collection<>.result(of:from:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v6)(uint64_t *, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  v9 = *a1;
  v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a5 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v6(&v9, AssociatedTypeWitness, a5);
}

void sub_2476E7014(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x2495822A8](MEMORY[0x24BEE1728], a1);
  static Collection<>.columns()(a1, v4, v3);
}

void sub_2476E7054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2495822A8](MEMORY[0x24BEE1728], a3);
  Collection<>.filter(columns:arguments:)();
}

uint64_t sub_2476E70C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(a4 - 8);
  v8 = MEMORY[0x2495822A8](MEMORY[0x24BEE1728], a3);
  return static Collection<>.result(of:from:)(a1, a2, a3, v8, v7);
}

void sub_2476E7134(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], a1);
  static Collection<>.columns()(a1, v4, v3);
}

void sub_2476E7174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], a3);
  Collection<>.filter(columns:arguments:)();
}

uint64_t sub_2476E71E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(a4 - 8);
  v8 = MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], a3);
  return static Collection<>.result(of:from:)(a1, a2, a3, v8, v7);
}

uint64_t static Dictionary<>.columns()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  sub_2476E2DAC();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24772F870;
  *(_QWORD *)(v9 + 32) = 7955819;
  *(_QWORD *)(v9 + 40) = 0xE300000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a1, a3);
  *(_QWORD *)(v9 + 56) = 0x65756C6176;
  *(_QWORD *)(v9 + 64) = 0xE500000000000000;
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
  return v9;
}

void Dictionary<>.filter(columns:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  OUTLINED_FUNCTION_7_14();
  a19 = v21;
  a20 = v22;
  v81 = v23;
  v76 = v25;
  v77 = v24;
  v84 = v26;
  v28 = v27;
  v30 = v29;
  v73 = v31;
  v33 = v32;
  v34 = sub_24772D018();
  v83 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_11_9();
  v78 = v36;
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v73 - v38;
  v40 = sub_24772D018();
  v86 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_4_9();
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v73 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v45 = *v33;
  v80 = v33[1];
  v85 = (uint64_t)&v73 - v46;
  OUTLINED_FUNCTION_62_4();
  v74 = v30;
  __swift_storeEnumTagSinglePayload(v47, v48, v49, v30);
  v82 = v39;
  OUTLINED_FUNCTION_62_4();
  v75 = v28;
  __swift_storeEnumTagSinglePayload(v50, v51, v52, v28);
  v53 = v77;
  v87 = *(uint64_t **)(v77 + 16);
  if (v87)
  {
    v79 = v34;
    v54 = 0;
    v55 = (uint64_t *)(sub_24772C91C() + 40);
    v56 = v80;
    while (1)
    {
      v57 = *(v55 - 1);
      v58 = *v55;
      v59 = v57 == 7955819 && v58 == 0xE300000000000000;
      if (v59 || (OUTLINED_FUNCTION_38_5() & 1) != 0)
      {
        v88 = *(_QWORD *)(v84 + 8);
        v60 = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, v40, &v88);
        v89 = v45;
        v90 = v56;
        OUTLINED_FUNCTION_51_6(v54, v40, v40, v60);
        if (v20)
          goto LABEL_21;
        OUTLINED_FUNCTION_37_7(v85, (uint64_t)v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 40));
      }
      else
      {
        v61 = v57 == 0x65756C6176 && v58 == 0xE500000000000000;
        if (v61 || (OUTLINED_FUNCTION_59_5(), (OUTLINED_FUNCTION_38_5() & 1) != 0))
        {
          a10 = *(_QWORD *)(v81 + 8);
          v62 = v79;
          v63 = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, v79, &a10);
          v64 = v56;
          v65 = v45;
          v89 = v45;
          v90 = v64;
          v66 = v78;
          OUTLINED_FUNCTION_51_6(v54, v62, v62, v63);
          if (v20)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v79);
            OUTLINED_FUNCTION_8_10(v85, *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
            goto LABEL_22;
          }
          (*(void (**)(char *, uint64_t, uint64_t))(v83 + 40))(v82, v66, v62);
          v45 = v65;
          v56 = v80;
        }
      }
      ++v54;
      v55 += 2;
      if (v87 == (uint64_t *)v54)
      {
        v53 = swift_bridgeObjectRelease();
        v34 = v79;
        v67 = v75;
        v68 = v76;
        v69 = v74;
        goto LABEL_20;
      }
    }
  }
  v69 = v74;
  v67 = v75;
  v68 = v76;
LABEL_20:
  v87 = &v73;
  MEMORY[0x24BDAC7A8](v53);
  *(&v73 - 8) = v69;
  *(&v73 - 7) = v67;
  v70 = v85;
  *(&v73 - 6) = v84;
  *(&v73 - 5) = v68;
  v71 = v82;
  *(&v73 - 4) = v81;
  *(&v73 - 3) = v72;
  *(&v73 - 2) = v70;
  *(&v73 - 1) = (uint64_t)v71;
  sub_24772C91C();
  sub_24772C928();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v71, v34);
  OUTLINED_FUNCTION_8_10(v70, *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
LABEL_22:
  OUTLINED_FUNCTION_50_3();
}

BOOL sub_2476E7698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a1;
  v38 = a8;
  v39 = a4;
  v46 = a3;
  v45 = a2;
  v42 = sub_24772D018();
  v40 = *(_QWORD *)(v42 - 8);
  v10 = MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v35 - v11;
  v12 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24772D018();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v35 - v17;
  v19 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v37 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v43 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v23 = (char *)&v35 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v35 - v22, v44, a5);
  v44 = TupleTypeMetadata2;
  v24 = *(int *)(TupleTypeMetadata2 + 48);
  v25 = a6;
  v36 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(&v23[v24], v45, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v46, v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    v26 = v37;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v37, v18, a5);
    v27 = sub_24772C9DC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v26, a5);
    if ((v27 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
      return 0;
    }
  }
  v29 = v40;
  v28 = (uint64_t)v41;
  v30 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v41, v39, v42);
  if (__swift_getEnumTagSinglePayload(v28, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    return 1;
  }
  v32 = v35;
  v31 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v35, v28, v25);
  v33 = sub_24772C9DC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
  return (v33 & 1) != 0;
}

void static Dictionary<>.result(of:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *boxed_opaque_existential_0;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  OUTLINED_FUNCTION_7_14();
  v33 = v1;
  v34 = v0;
  v3 = v2;
  v5 = v4;
  v35 = v6;
  v8 = v7;
  v10 = v9;
  v40 = v11;
  v41 = *(_QWORD *)(OUTLINED_FUNCTION_0_4() - 8);
  OUTLINED_FUNCTION_4_9();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v32 - v17;
  v19 = *v10;
  v20 = v10[1];
  v36 = v16;
  v21 = (char *)&v32 + *(int *)(v16 + 48) - v17;
  v39 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))((char *)&v32 - v17, v8, v5);
  v22 = *(_QWORD *)(v3 - 8);
  v37 = v21;
  v38 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v35, v3);
  v35 = v20;
  v23 = v19 == 7955819 && v20 == 0xE300000000000000;
  if (v23 || (OUTLINED_FUNCTION_38_5() & 1) != 0)
  {
    OUTLINED_FUNCTION_18_9();
    OUTLINED_FUNCTION_39_5();
    v24 = *(_QWORD *)(v34 + 16);
    v25 = v40;
    v40[3] = v5;
    v25[4] = v24;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v25);
    (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 32))(boxed_opaque_existential_0, v15, v5);
    OUTLINED_FUNCTION_8_10((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v19, v3);
LABEL_13:
    OUTLINED_FUNCTION_0_11();
    return;
  }
  v27 = v19 == 0x65756C6176 && v35 == 0xE500000000000000;
  if (v27 || (OUTLINED_FUNCTION_59_5(), (OUTLINED_FUNCTION_38_5() & 1) != 0))
  {
    OUTLINED_FUNCTION_18_9();
    OUTLINED_FUNCTION_39_5();
    v28 = *(_QWORD *)(v33 + 16);
    v29 = v40;
    v40[3] = v3;
    v29[4] = v28;
    v30 = __swift_allocate_boxed_opaque_existential_0(v29);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v38 + 32))(v30, v19, v3);
    OUTLINED_FUNCTION_8_10((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v5);
    goto LABEL_13;
  }
  v44 = 0;
  v45 = 0xE000000000000000;
  v31 = v35;
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_42_6();
  OUTLINED_FUNCTION_13_12();
  v42 = v19;
  v43 = v31;
  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_1_12();
  __break(1u);
}

uint64_t sub_2476E7C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Dictionary<>.columns()(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a2 - 8), a4, *(_QWORD *)(a2 - 16));
}

#error "2476E7C98: call analysis failed (funcsize=19)"

void sub_2476E7CB4()
{
  swift_getTupleTypeMetadata2();
  static Dictionary<>.result(of:from:)();
}

uint64_t SQLBindPair.columnName.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_24772C91C();
}

uint64_t SQLBindPair.keyPath.getter()
{
  return swift_retain();
}

_QWORD *SQLBindPair.init(name:keyPath:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

uint64_t SQLBindPair.column.getter(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = v1[1];
  *a1 = v2;
  a1[1] = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 24);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  sub_24772C91C();
  return v6(AssociatedTypeWitness, v5);
}

uint64_t static SQLBindElement.columns()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[12];

  v11[11] = (*(uint64_t (**)(void))(a2 + 16))();
  v11[6] = a1;
  v11[7] = a2;
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = swift_getKeyPath();
  v11[9] = a1;
  swift_getExtendedExistentialTypeMetadata();
  v4 = sub_24772CD48();
  sub_2476B49DC();
  v6 = v5;
  v7 = MEMORY[0x2495822A8](MEMORY[0x24BEE12E0], v4);
  v9 = sub_2476D7934((void (*)(uint64_t, uint64_t))sub_2476E8B28, (uint64_t)v11, v4, v6, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  swift_release();
  OUTLINED_FUNCTION_132();
  return v9;
}

uint64_t sub_2476E7F04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD v9[2];

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = (*(uint64_t (**)(_QWORD *, char *, uint64_t, uint64_t))(v4 + 56))(v9, &v8, v3, v4);
  v6 = v9[1];
  v7 = v8;
  *(_QWORD *)a2 = v9[0];
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
  return result;
}

void SQLBindElement.filter(columns:arguments:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_7_14();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v22 = *v8;
  v23 = v0;
  v21 = v8[1];
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v4, v2);
  v35 = 0;
  v36 = 0;
  v34 = v7;
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_54_5();
  v10 = v31;
  if (v31)
  {
    v11 = v29;
    v12 = v30;
    while (1)
    {
      v25 = &v20;
      MEMORY[0x24BDAC7A8](v9);
      *(&v20 - 4) = v5;
      *(&v20 - 3) = v3;
      v18 = v12;
      v19 = v10;
      v26 = v5;
      swift_getExtendedExistentialTypeMetadata();
      v13 = OUTLINED_FUNCTION_72_1();
      MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v13);
      sub_24772CC10();
      if (!v28)
        break;
      OUTLINED_FUNCTION_63_0();
      sub_2476B3F20(&v27, (uint64_t)&v29);
      v14 = v32;
      v15 = v33;
      v16 = __swift_project_boxed_opaque_existential_1(&v29, v32);
      v17 = sub_2476E81A0((uint64_t)v16, v22, v21, v11, v23, v5, v14, v3, v15);
      if (v1 || (v17 & 1) == 0)
      {
        OUTLINED_FUNCTION_48_6();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        goto LABEL_9;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
      OUTLINED_FUNCTION_54_5();
      v11 = v29;
      v12 = v30;
      v10 = v31;
      if (!v31)
        goto LABEL_7;
    }
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_24772D144();
    OUTLINED_FUNCTION_41_6();
    OUTLINED_FUNCTION_13_12();
    *(_QWORD *)&v27 = v12;
    *((_QWORD *)&v27 + 1) = v10;
    sub_24772D300();
    LODWORD(v19) = 0;
    v18 = 310;
    OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
  else
  {
LABEL_7:
    OUTLINED_FUNCTION_48_6();
    swift_bridgeObjectRelease();
LABEL_9:
    OUTLINED_FUNCTION_50_3();
    OUTLINED_FUNCTION_0_11();
  }
}

uint64_t sub_2476E81A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[3];
  uint64_t v25;
  _QWORD v26[4];

  v24[1] = a1;
  v24[2] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v24 - v17;
  v19 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 24);
  v26[0] = a2;
  v26[1] = a3;
  v20 = v26;
  v21 = v26[3];
  SQLTableFunctionCursorArguments.subscript.getter(a4, AssociatedTypeWitness, AssociatedTypeWitness, v19);
  if (!v21)
  {
    (*(void (**)(uint64_t, uint64_t))(a9 + 48))(a7, a9);
    swift_getAtKeyPath();
    swift_release();
    swift_getAssociatedConformanceWitness();
    LOBYTE(v20) = sub_24772C9DC();
    v22 = *(void (**)(char *, uint64_t))(v25 + 8);
    v22(v16, AssociatedTypeWitness);
    v22(v18, AssociatedTypeWitness);
  }
  return v20 & 1;
}

uint64_t SQLBindElement.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  swift_getExtendedExistentialTypeMetadata();
  v4 = OUTLINED_FUNCTION_72_1();
  MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v4);
  sub_24772CC10();
  OUTLINED_FUNCTION_29_9();
  if (v9)
  {
    sub_2476B3F20(&v8, (uint64_t)&v10);
    v5 = v11;
    v6 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, v11);
    sub_2476E85A0(v5, v6, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  else
  {
    OUTLINED_FUNCTION_45();
    sub_24772D144();
    OUTLINED_FUNCTION_41_6();
    OUTLINED_FUNCTION_13_12();
    sub_24772D300();
    result = OUTLINED_FUNCTION_1_12();
    __break(1u);
  }
  return result;
}

uint64_t sub_2476E8500(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  _QWORD v10[2];

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 40))(v10, v5, v6);
  if (v10[0] == a2 && v10[1] == a3)
    v8 = 1;
  else
    v8 = OUTLINED_FUNCTION_38_5();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2476E85A0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  a3[3] = swift_getAssociatedTypeWitness();
  a3[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
  __swift_allocate_boxed_opaque_existential_0(a3);
  swift_getAtKeyPath();
  return swift_release();
}

uint64_t sub_2476E865C(uint64_t a1, uint64_t *a2)
{
  return sub_2476E30D4(a1, *a2) & 1;
}

void sub_2476E867C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_5();
  sub_2476E4F6C(v2, v0, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E86A4(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 *v2;

  return sub_2476E4154(a1, *a2, a2[1], *v2) & 1;
}

void sub_2476E86C8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_5();
  sub_2476E5324(v3, v1, *v0, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E86F4()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_12_7();
  sub_2476E48EC(v0);
  return v1 & 1;
}

void sub_2476E871C()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_43_6(v0, MEMORY[0x24BEE1768], (uint64_t)&protocol witness table for Int, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E8750()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_12_7();
  sub_2476E48EC(v0);
  return v1 & 1;
}

void sub_2476E877C()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_43_6(v0, MEMORY[0x24BEE4008], (uint64_t)&protocol witness table for Int64, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E87B0()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_12_7();
  sub_2476E4A74(v0);
  return v1 & 1;
}

void sub_2476E87D8()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_43_6(v0, MEMORY[0x24BEE1E88], (uint64_t)&protocol witness table for UInt, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E880C()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_12_7();
  sub_2476E4A74(v0);
  return v1 & 1;
}

void sub_2476E8838()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_43_6(v0, MEMORY[0x24BEE4568], (uint64_t)&protocol witness table for UInt64, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E886C(uint64_t a1, uint64_t *a2)
{
  double *v2;

  return sub_2476E43D8(a1, *a2, *v2) & 1;
}

void sub_2476E8890()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_5();
  sub_2476E545C(v3, v1, v2, *v0);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E88BC(uint64_t a1, uint64_t *a2)
{
  float *v2;

  return sub_2476E4660(a1, *a2, *v2) & 1;
}

void sub_2476E88E0()
{
  float *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_5();
  sub_2476E5598(v3, v1, v2, *v0);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E890C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_2476E3DC0(a1, *a2, a2[1], *v2, v2[1]) & 1;
}

void sub_2476E8930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = OUTLINED_FUNCTION_61_4(a1);
  sub_2476E51E0(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_51_0();
}

void sub_2476E8950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(a2 - 8);
  v3 = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a1, &v4);
  static _SQLBindableElement<>.columns()(a1, v3);
  OUTLINED_FUNCTION_68_4();
}

uint64_t sub_2476E8994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v6;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a3, &v6);
  _SQLBindableElement<>.filter(columns:arguments:)();
  return v4 & 1;
}

uint64_t sub_2476E8A04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a1, &v7);
  return _SQLBindableElement<>.subscript.getter(a1, v5, a3);
}

uint64_t sub_2476E8A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2476E33B8(a1, *(sqlite3_value ***)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)v2, *(_QWORD *)(v2 + 8)) & 1;
}

void sub_2476E8A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v1 = OUTLINED_FUNCTION_61_4(a1);
  sub_2476E5098(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E8AB4(uint64_t a1)
{
  uint64_t *v1;

  return sub_2476E6F08(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]) & 1;
}

BOOL sub_2476E8AD8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2476E7698(a1, a2, v2[8], v2[9], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_2476E8B10()
{
  return 16;
}

__n128 sub_2476E8B1C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_2476E8B28()
{
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476E8B4C(_QWORD *a1)
{
  uint64_t v1;

  return sub_2476E8500(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40)) & 1;
}

uint64_t sub_2476E8B6C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2495822A8](MEMORY[0x24BEE1728]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2476E8B98(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2495822A8](MEMORY[0x24BEE12E0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2476E8BC4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2495822A8](MEMORY[0x24BEE04E8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2476E8BF0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_2476E8BF8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t _s12ReferenceBoxCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12ReferenceBoxCMn);
}

uint64_t dispatch thunk of SQLBindableCollection.filter(columns:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static SQLBindableCollection.result(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static _SQLBindableElement.columns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _SQLBindableElement.filter(columns:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))() & 1;
}

uint64_t dispatch thunk of _SQLBindableElement.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static _SQLBindableDictionaryElement.dataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _SQLBindPair.columnName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of _SQLBindPair.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of _SQLBindPair.column.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_2476E8C9C()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_2476E8CC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_24772C91C();
  swift_retain();
  OUTLINED_FUNCTION_35();
}

_QWORD *sub_2476E8CFC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2476E8D60(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NanoID.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NanoID.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLBindPair()
{
  JUMPOUT(0x249582248);
}

uint64_t dispatch thunk of static SQLBindElement.bindableValues()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_2476E8E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_24772C424() || !__OFSUB__(a1, sub_24772C448()))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24772C43C();
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  JUMPOUT(0x2476E8FC8);
}

uint64_t sub_2476E9000(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_24772C424();
  v8 = (char *)result;
  if (result)
  {
    result = sub_24772C448();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = sub_24772C43C();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

BOOL sub_2476E909C(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t __s2;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  __s2 = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  if (!__s1)
    __break(1u);
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t _s15CollectionTableVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s15CollectionTableVMn);
}

_UNKNOWN **sub_2476E9188()
{
  return &off_2518D8F08;
}

uint64_t _s15CollectionTableV6CursorVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s15CollectionTableV6CursorVMn);
}

uint64_t sub_2476E91A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2476E91E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2476E91E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B82A0)
  {
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B82A0);
  }
}

uint64_t sub_2476E922C(uint64_t a1)
{
  sub_24772C91C();
  return a1;
}

uint64_t sub_2476E9254(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2476E927C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24772D378();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_24772D018();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2476E9348(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 8;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  v14 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || ((v12 + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v18 = v7;
    v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v18))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v19), v20, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v19, v20, v18);
      __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v11) & v19, 0, 1, v18);
    }
    v22 = ((unint64_t)v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = ((((unint64_t)a1 + v11) & v19) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v24 = v23;
  }
  return a1;
}

uint64_t sub_2476E9528(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = (*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (a1 + *(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = __swift_getEnumTagSinglePayload(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_2476E9610(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10 + 8;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (uint64_t)v12 + v17 + 7;
  v19 = ((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = v20;
  return a1;
}

uint64_t sub_2476E9784(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10 + 8;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v16);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  v18 = (uint64_t)v12 + v17 + 7;
  v19 = ((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  return a1;
}

uint64_t sub_2476E9944(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10 + 8;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (uint64_t)v12 + v17 + 7;
  v19 = ((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = v20;
  return a1;
}

uint64_t sub_2476E9AB8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10 + 8;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v16);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  v18 = (uint64_t)v12 + v17 + 7;
  v19 = ((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  return a1;
}

uint64_t sub_2476E9C78(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  if ((_DWORD)v9)
    v12 = 7;
  else
    v12 = 8;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v13 + 8;
  if (v11 < a2)
  {
    v15 = ((v12 + *(_QWORD *)(v8 + 64) + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v15 < 4)
      v16 = ((a2 - v11 + 255) >> (8 * v15)) + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X16 }
  }
  if (!v11)
    return 0;
  if (v6 >= v10)
    return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v14 + a1) & ~v13, v9, v7);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_2476E9E64(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64);
  if (v10)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = ((v15 + ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8 + v13) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v12 < a3)
  {
    if (v16 <= 3)
      v17 = ((a3 - v12 + 255) >> (8 * v16)) + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v8 = v18;
    else
      v8 = 0;
  }
  if (v12 < a2)
  {
    if (v16 >= 4)
      v19 = ~v12 + a2;
    else
      v19 = (~(_BYTE)v12 + a2);
    bzero(a1, v16);
    if ((_DWORD)v16 == 1)
      *a1 = v19;
    else
      *(_DWORD *)a1 = v19;
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_2476EA00C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_2476EA014()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2476EA01CLL);
}

void sub_2476EA088()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_2476EA0B8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_2476EA0C0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
}

void sub_2476EA0C8(uint64_t a1, size_t a2)
{
  void *v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  *(_WORD *)(v7 + v10) = 0;
  if (v8)
  {
    if (v9 >= v4)
      JUMPOUT(0x2476EA090);
    v2 = (void *)((v5 + v7) & v6);
    if (v4 >= v8)
      JUMPOUT(0x2476EA0D4);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v3 = a2;
      else
        v3 = 4;
      bzero(v2, a2);
      __asm { BR              X10 }
    }
  }
}

void sub_2476EA10C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

uint64_t sub_2476EA148(_QWORD *a1)
{
  return sub_2476E8B4C(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return sub_24772D084();
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return sub_24772D354();
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return sub_24772D4F8();
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  return sub_24772D4F8();
}

uint64_t OUTLINED_FUNCTION_8_10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_18_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_23_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return sub_24772D144();
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_5(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_37_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;

  return v2(v0, *(_QWORD *)(v3 - 152), v1);
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return sub_24772D144();
}

void OUTLINED_FUNCTION_43_6(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  sub_2476E56D4(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_51_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SQLTableFunctionCursorArguments.subscript.getter(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_54_5()
{
  uint64_t v0;

  sub_2476E63A0((_QWORD *)(v0 - 144));
}

uint64_t OUTLINED_FUNCTION_55_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_56_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_59_5()
{
  return 0x65756C6176;
}

uint64_t OUTLINED_FUNCTION_61_4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return sub_24772D300();
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  return sub_24772D144();
}

uint64_t OUTLINED_FUNCTION_70_3()
{
  return sub_24772D300();
}

void OUTLINED_FUNCTION_71_2()
{
  sub_2476C5D80();
}

void OUTLINED_FUNCTION_72_2()
{
  sub_2476C5EEC();
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return sub_24772D300();
}

unint64_t sub_2476EA4B4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2476EA8B8(*a1, a2);
}

uint64_t sub_2476EA4CC@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;

  sub_24772C91C();
  SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v7);
  v2 = v7;
  if (v7 == 3)
  {
    v7 = 0;
    v8 = 0xE000000000000000;
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    v3 = v7;
    v4 = v8;
    sub_2476B3FD0();
    swift_allocError();
    *v5 = v3;
    v5[1] = v4;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *a1 = v2;
  }
  return result;
}

uint64_t sub_2476EA618@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t result;
  _QWORD *v5;

  v2 = sub_24772D3F0();
  if (!v2)
  {
    v3 = 0;
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v3 = 1;
LABEL_5:
    result = swift_bridgeObjectRelease();
    *a1 = v3;
    return result;
  }
  sub_24772D144();
  sub_24772CAFC();
  sub_24772CAFC();
  sub_24772CAFC();
  sub_24772D300();
  sub_2476B3FD0();
  swift_allocError();
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476EA768@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;

  sub_24772C91C();
  SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v7);
  v2 = v7;
  if (v7 == 6)
  {
    v7 = 0;
    v8 = 0xE000000000000000;
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    v3 = v7;
    v4 = v8;
    sub_2476B3FD0();
    swift_allocError();
    *v5 = v3;
    v5[1] = v4;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *a1 = v2;
  }
  return result;
}

unint64_t sub_2476EA8B8@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *v2;

  if (result >= 3)
  {
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    sub_2476B3FD0();
    swift_allocError();
    *v2 = 0;
    v2[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void RawRepresentable<>.init(nativeValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_7_14();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v35 = v10;
  v11 = OUTLINED_FUNCTION_26_7();
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v33 - v13;
  v36 = v5;
  v37 = v7;
  swift_getAssociatedTypeWitness();
  v14 = OUTLINED_FUNCTION_85_1();
  v15 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - v17;
  v19 = swift_checkMetadataState();
  v20 = OUTLINED_FUNCTION_91_1(v19);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_51_7();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v33 - v22;
  v24 = v9;
  OUTLINED_FUNCTION_83_1((uint64_t)v18, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 56);
  v38 = v23;
  v25(v18, v19, v3);
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v14);
  }
  else
  {
    OUTLINED_FUNCTION_78_2(v1, (uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
    v26 = (uint64_t)v39;
    v27 = v37;
    sub_24772CC4C();
    v28 = v24;
    if (__swift_getEnumTagSinglePayload(v26, 1, v27) == 1)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v34);
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_55_5();
      OUTLINED_FUNCTION_5_14();
      sub_24772D720();
      sub_24772CAFC();
      OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_10_11();
      v29 = (uint64_t)v38;
      sub_24772D4D4();
      v30 = v41;
      v31 = v42;
      sub_2476B3FD0();
      OUTLINED_FUNCTION_36();
      *v32 = v30;
      v32[1] = v31;
      OUTLINED_FUNCTION_6_11();
      OUTLINED_FUNCTION_30_6(v28, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v29, v19);
    }
    else
    {
      OUTLINED_FUNCTION_30_6(v24, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      OUTLINED_FUNCTION_48_7((uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v35, v39, v27);
    }
  }
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

void sub_2476EAC48(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_24770BC20(*v1);
  if (!v2)
    *a1 = v4;
  OUTLINED_FUNCTION_51_0();
}

void RawRepresentable<>.nativeValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_14();
  v2 = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_16_9();
  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(AssociatedTypeWitness, v2);
  OUTLINED_FUNCTION_73_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_0_11();
}

void sub_2476EAD14(sqlite3_context *a1)
{
  unsigned __int8 *v1;

  sub_2476EAEB8(a1, *v1);
}

uint64_t sub_2476EAD2C(Swift::OpaquePointer a1)
{
  String.result(for:)(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476EAD90(Swift::OpaquePointer a1)
{
  String.result(for:)(a1);
  return swift_bridgeObjectRelease();
}

void sub_2476EADF8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2476EAE34(Swift::OpaquePointer a1)
{
  String.result(for:)(a1);
  return swift_bridgeObjectRelease();
}

void sub_2476EAEB8(sqlite3_context *a1, unsigned __int8 a2)
{
  sqlite3_result_int64(a1, a2);
}

void RawRepresentable<>.result(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_7_14();
  v2 = v1;
  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_16_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, AssociatedTypeWitness, v2);
  OUTLINED_FUNCTION_73_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_0_11();
}

sqlite3_stmt *sub_2476EAF84@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_2476EB3B8(a1, a2, a3);
}

uint64_t sub_2476EAF98@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;

  result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_24772C91C();
    SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v10);
    v6 = v10;
    if (v10 == 3)
    {
      v10 = 0;
      v11 = 0xE000000000000000;
      sub_24772D144();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772D300();
      v7 = v10;
      v8 = v11;
      sub_2476B3FD0();
      swift_allocError();
      *v9 = v7;
      v9[1] = v8;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a3 = v6;
    }
  }
  return result;
}

uint64_t sub_2476EB0EC@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, char *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_24772C91C();
    v6 = sub_24772D3F0();
    swift_bridgeObjectRelease();
    if (!v6)
    {
      v7 = 0;
      goto LABEL_6;
    }
    if (v6 == 1)
    {
      v7 = 1;
LABEL_6:
      result = swift_bridgeObjectRelease();
      *a3 = v7;
      return result;
    }
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    sub_2476B3FD0();
    swift_allocError();
    *v8 = 0;
    v8[1] = 0xE000000000000000;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2476EB260@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;

  result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_24772C91C();
    SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v10);
    v6 = v10;
    if (v10 == 6)
    {
      v10 = 0;
      v11 = 0xE000000000000000;
      sub_24772D144();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772D300();
      v7 = v10;
      v8 = v11;
      sub_2476B3FD0();
      swift_allocError();
      *v9 = v7;
      v9[1] = v8;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a3 = v6;
    }
  }
  return result;
}

sqlite3_stmt *sub_2476EB3B8@<X0>(sqlite3_stmt *result@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  _QWORD *v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  result = (sqlite3_stmt *)sqlite3_column_int64(result, a2);
  if ((unint64_t)result >= 3)
  {
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    sub_2476B3FD0();
    swift_allocError();
    *v4 = 0;
    v4[1] = 0xE000000000000000;
    return (sqlite3_stmt *)swift_willThrow();
  }
  else
  {
    *a3 = (_BYTE)result;
  }
  return result;
}

void RawRepresentable<>.init(statement:index:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_7_14();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v22 = v11;
  v12 = OUTLINED_FUNCTION_92_1();
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_42_7();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = OUTLINED_FUNCTION_91_1(AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_51_7();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_5();
  v23 = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v10, v8, AssociatedTypeWitness, v4);
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v2, v23, AssociatedTypeWitness);
    sub_24772CC4C();
    OUTLINED_FUNCTION_23_8();
    if (v19)
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_55_5();
      OUTLINED_FUNCTION_5_14();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_57_5();
      OUTLINED_FUNCTION_42_1();
      OUTLINED_FUNCTION_10_11();
      sub_24772D4D4();
      OUTLINED_FUNCTION_56_6();
      v20 = OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_20_8(v20, v21);
      OUTLINED_FUNCTION_73_1(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_73_1(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v22, v1, v6);
    }
  }
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_0_11();
}

sqlite3_stmt *sub_2476EB6A0(sqlite3_stmt *a1, uint64_t a2)
{
  unsigned __int8 *v2;

  return sub_2476EB844(a1, a2, *v2);
}

uint64_t sub_2476EB6B8(Swift::OpaquePointer a1, Swift::Int a2)
{
  String.bind(to:index:)(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476EB71C(Swift::OpaquePointer a1, Swift::Int a2)
{
  String.bind(to:index:)(a1, a2);
  return swift_bridgeObjectRelease();
}

void sub_2476EB784(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_2476EB7C0(Swift::OpaquePointer a1, Swift::Int a2)
{
  String.bind(to:index:)(a1, a2);
  return swift_bridgeObjectRelease();
}

sqlite3_stmt *sub_2476EB844(sqlite3_stmt *result, uint64_t a2, unsigned __int8 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    return (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
  }
  __break(1u);
  return result;
}

void RawRepresentable<>.bind(to:index:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_7_14();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_16_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8))(v6, v4, AssociatedTypeWitness, v2);
  OUTLINED_FUNCTION_73_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_0_11();
}

unint64_t sub_2476EB934@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2476EBDC8(a1, a2);
}

uint64_t sub_2476EB948@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  const unsigned __int8 *v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;

  v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  result = sub_2476ED1AC((uint64_t)v5);
  if (!v2)
  {
    sub_24772C91C();
    SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v11);
    v7 = v11;
    if (v11 == 3)
    {
      v11 = 0;
      v12 = 0xE000000000000000;
      sub_24772D144();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772D300();
      v8 = v11;
      v9 = v12;
      sub_2476B3FD0();
      swift_allocError();
      *v10 = v8;
      v10[1] = v9;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
  }
  return result;
}

uint64_t sub_2476EBABC@<X0>(sqlite3_value *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  const unsigned __int8 *v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  result = sub_2476ED1AC((uint64_t)v5);
  if (!v2)
  {
    sub_24772C91C();
    v7 = sub_24772D3F0();
    swift_bridgeObjectRelease();
    if (!v7)
    {
      v8 = 0;
      goto LABEL_6;
    }
    if (v7 == 1)
    {
      v8 = 1;
LABEL_6:
      result = swift_bridgeObjectRelease();
      *a2 = v8;
      return result;
    }
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    sub_2476B3FD0();
    swift_allocError();
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2476EBC50@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  const unsigned __int8 *v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;

  v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  result = sub_2476ED1AC((uint64_t)v5);
  if (!v2)
  {
    sub_24772C91C();
    SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v11);
    v7 = v11;
    if (v11 == 6)
    {
      v11 = 0;
      v12 = 0xE000000000000000;
      sub_24772D144();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772CAFC();
      sub_24772D300();
      v8 = v11;
      v9 = v12;
      sub_2476B3FD0();
      swift_allocError();
      *v10 = v8;
      v10[1] = v9;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
  }
  return result;
}

unint64_t sub_2476EBDC8@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;
  _QWORD *v4;

  result = sqlite3_value_int64(a1);
  if (result >= 3)
  {
    sub_24772D144();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772CAFC();
    sub_24772D300();
    sub_2476B3FD0();
    swift_allocError();
    *v4 = 0;
    v4[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void RawRepresentable<>.init(functionArgument:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2476EE30C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

{
  uint64_t vars0;
  uint64_t vars8;

  sub_2476EE30C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2476EBEFC(uint64_t a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_94_1(a1);
  return sub_2476EA4CC(v1);
}

void sub_2476EBF14(uint64_t *a1@<X8>)
{
  sub_2476EEB74((uint64_t (*)(_QWORD))sub_24770BB24, a1);
}

uint64_t sub_2476EBF30(Swift::OpaquePointer a1)
{
  return sub_2476EAD2C(a1);
}

uint64_t sub_2476EBF48@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_2476EAF98(a1, a2, a3);
}

uint64_t sub_2476EBF5C(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_2476EB6B8(a1, a2);
}

uint64_t sub_2476EBF74@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2476EB948(a1, a2);
}

uint64_t sub_2476EBF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4;
  uint64_t result;
  char v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v4 = a1 == 1280070990 && a2 == 0xE400000000000000;
  if (v4 || (OUTLINED_FUNCTION_12_8() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v9 = a1 == 0x52454745544E49 && a2 == 0xE700000000000000;
    if (v9 || (OUTLINED_FUNCTION_12_8() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v8 = 1;
    }
    else
    {
      v10 = a1 == 1279346002 && a2 == 0xE400000000000000;
      if (v10 || (OUTLINED_FUNCTION_12_8() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v8 = 2;
      }
      else
      {
        v11 = a1 == 1415071060 && a2 == 0xE400000000000000;
        if (v11 || (OUTLINED_FUNCTION_12_8() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v8 = 3;
        }
        else
        {
          v12 = a1 == 1112493122 && a2 == 0xE400000000000000;
          if (v12 || (OUTLINED_FUNCTION_12_8() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v8 = 4;
          }
          else if (a1 == 0x4E4544444948 && a2 == 0xE600000000000000)
          {
            result = swift_bridgeObjectRelease();
            v8 = 5;
          }
          else
          {
            v14 = OUTLINED_FUNCTION_12_8();
            result = swift_bridgeObjectRelease();
            if ((v14 & 1) != 0)
              v8 = 5;
            else
              v8 = 6;
          }
        }
      }
    }
  }
  *a3 = v8;
  return result;
}

BOOL static SQLDataType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDataType.hash(into:)()
{
  return sub_24772D60C();
}

void SQLDataType.hashValue.getter()
{
  OUTLINED_FUNCTION_79_0();
  sub_24772D60C();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

uint64_t SQLValue<>.nativeValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

void SQLValue<>.init(nativeValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  OUTLINED_FUNCTION_51_0();
}

void SQLNull.debugSQL.getter(_QWORD *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_2476EC24C()
{
  return nullsub_1();
}

uint64_t SQLNull.description.getter()
{
  return 1280070990;
}

uint64_t sub_2476EC280()
{
  return 1280070990;
}

void static SQLNull.dataType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.init(raw:)(Swift::OpaquePointer raw)
{
  _QWORD *v2;

  if (sqlite3_value_type((sqlite3_value *)raw._rawValue) != 5)
  {
    OUTLINED_FUNCTION_46_7();
    swift_bridgeObjectRelease();
    sqlite3_value_type((sqlite3_value *)raw._rawValue);
    sub_24772D480();
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_43_7();
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v2 = 0xD00000000000001ELL;
    v2[1] = 0x8000000247734850;
    OUTLINED_FUNCTION_6_11();
  }
  OUTLINED_FUNCTION_71_3();
}

uint64_t static SQLNull.== infix(_:_:)()
{
  return 1;
}

void SQLNull.hashValue.getter()
{
  OUTLINED_FUNCTION_79_0();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

void sub_2476EC378(Swift::OpaquePointer a1)
{
  SQLNull.init(raw:)(a1);
}

void sub_2476EC38C()
{
  SQLNull.hashValue.getter();
}

uint64_t sub_2476EC3A0()
{
  sub_24772D600();
  return sub_24772D624();
}

void sub_2476EC3D4(_QWORD *a1@<X8>)
{
  SQLNull.debugSQL.getter(a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_null((sqlite3_context *)a1._rawValue);
  OUTLINED_FUNCTION_51_0();
}

void sub_2476EC408(Swift::OpaquePointer a1)
{
  SQLNull.result(for:)(a1);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  int v2;
  _QWORD *v4;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = index;
  if (index > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  if (sqlite3_column_type((sqlite3_stmt *)statement._rawValue, index) != 5)
  {
    OUTLINED_FUNCTION_46_7();
    swift_bridgeObjectRelease();
    sqlite3_column_type((sqlite3_stmt *)statement._rawValue, v2);
    sub_24772D480();
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_43_7();
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v4 = 0xD00000000000001ELL;
    v4[1] = 0x8000000247734850;
    OUTLINED_FUNCTION_6_11();
  }
  OUTLINED_FUNCTION_71_3();
}

void sub_2476EC4F8(Swift::OpaquePointer a1, Swift::Int a2)
{
  SQLNull.init(statement:index:)(a1, a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_null((sqlite3_stmt *)to._rawValue, index);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

void sub_2476EC54C(Swift::OpaquePointer a1, Swift::Int a2)
{
  SQLNull.bind(to:index:)(a1, a2);
}

void static Bool.dataType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

uint64_t Bool.debugSQL.getter@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = 48;
  if ((result & 1) != 0)
    v2 = 49;
  *a2 = v2;
  a2[1] = 0xE100000000000000;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(raw:)(Swift::OpaquePointer raw)
{
  int v1;
  Swift::Bool result;

  v1 = sqlite3_value_int((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_64_3(v1);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  int v1;
  Swift::Bool result;

  v1 = sqlite3_value_int((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_64_3(v1);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  int v2;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_5:
    __break(1u);
    return (Swift::Bool)statement._rawValue;
  }
  v2 = sqlite3_column_int((sqlite3_stmt *)statement._rawValue, index);
  OUTLINED_FUNCTION_64_3(v2);
  OUTLINED_FUNCTION_51_0();
  return (Swift::Bool)statement._rawValue;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  char v2;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_int((sqlite3_stmt *)to._rawValue, index, v2 & 1);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.result(for:)(Swift::OpaquePointer a1)
{
  char v1;

  sqlite3_result_int((sqlite3_context *)a1._rawValue, v1 & 1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476EC668@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2476B17EC(*a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_2476EC698@<X0>(_BYTE *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_2476B17EC(*v1);
  *a1 = result & 1;
  return result;
}

BOOL sub_2476EC6CC@<W0>(Swift::OpaquePointer a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;
  uint64_t v4;

  result = Bool.init(raw:)(a1);
  if (!v4)
    *a2 = result;
  return result;
}

void sub_2476EC6F8(Swift::OpaquePointer a1)
{
  Bool.result(for:)(a1);
}

BOOL sub_2476EC710@<W0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, _BYTE *a3@<X8>)
{
  _BOOL8 result;
  uint64_t v5;

  result = Bool.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = result;
  return result;
}

void sub_2476EC73C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Bool.bind(to:index:)(a1, a2);
}

uint64_t sub_2476EC754@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  return Bool.debugSQL.getter(*v1, a1);
}

void sub_2476EC760(Swift::OpaquePointer a1@<X0>, Swift::Bool *a2@<X8>)
{
  Swift::Bool v3;
  uint64_t v4;

  v3 = Bool.init(functionArgument:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void Int.debugSQL.getter(uint64_t *a1@<X8>)
{
  sub_2476ECB44(a1);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(raw:)(Swift::OpaquePointer raw)
{
  Swift::Int result;

  OUTLINED_FUNCTION_59_6((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  Swift::Int result;

  OUTLINED_FUNCTION_59_6((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::Int result;

  sub_2476EC944((sqlite3_stmt *)statement._rawValue, index);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sqlite3_int64 v2;

  sub_2476EC998((sqlite3_stmt *)to._rawValue, index, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_int64 v1;

  sqlite3_result_int64((sqlite3_context *)a1._rawValue, v1);
  OUTLINED_FUNCTION_51_0();
}

void sub_2476EC81C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  nullsub_1(*a1);
  if (!v2)
    *a2 = v4;
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476EC844@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

void sub_2476EC874(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int v3;
  uint64_t v4;

  v3 = Int.init(raw:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void sub_2476EC898(Swift::OpaquePointer a1)
{
  Int.result(for:)(a1);
}

Swift::Int sub_2476EC8B0@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;
  uint64_t v5;

  result = Int.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = result;
  return result;
}

void sub_2476EC8D8(Swift::OpaquePointer a1, Swift::Int a2)
{
  Int.bind(to:index:)(a1, a2);
}

void sub_2476EC8F0(uint64_t *a1@<X8>)
{
  Int.debugSQL.getter(a1);
}

void sub_2476EC8F8(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int v3;
  uint64_t v4;

  v3 = Int.init(functionArgument:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void Int64.debugSQL.getter(uint64_t *a1@<X8>)
{
  sub_2476ECB44(a1);
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::Int64 result;

  sub_2476EC944((sqlite3_stmt *)statement._rawValue, index);
  return result;
}

void sub_2476EC944(sqlite3_stmt *a1, uint64_t a2)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    sqlite3_column_int64(a1, a2);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sqlite3_int64 v2;

  sub_2476EC998((sqlite3_stmt *)to._rawValue, index, v2);
}

void sub_2476EC998(sqlite3_stmt *a1, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    sqlite3_bind_int64(a1, a2, a3);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

uint64_t sub_2476EC9D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2476B4A74();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_2476ECA04(uint64_t *a1@<X8>)
{
  Int64.debugSQL.getter(a1);
}

void UInt.debugSQL.getter(uint64_t *a1@<X8>)
{
  sub_2476ECB44(a1);
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(raw:)(Swift::OpaquePointer raw)
{
  Swift::UInt result;

  sub_2476ECB8C((sqlite3_value *)raw._rawValue);
  return result;
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  Swift::UInt result;

  sub_2476ECB8C((sqlite3_value *)functionArgument._rawValue);
  return result;
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::UInt result;

  sub_2476ECBFC((sqlite3_stmt *)statement._rawValue, index);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sqlite3_int64 v2;

  sub_2476ECC7C((sqlite3_stmt *)to._rawValue, index, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_int64 v1;

  sub_2476ECCD8((sqlite3_context *)a1._rawValue, v1);
}

Swift::UInt sub_2476ECA84@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  Swift::UInt result;
  uint64_t v4;

  result = UInt.init(raw:)(a1);
  if (!v4)
    *a2 = result;
  return result;
}

void sub_2476ECAAC(Swift::OpaquePointer a1)
{
  UInt.result(for:)(a1);
}

Swift::UInt sub_2476ECAC4@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::UInt *a3@<X8>)
{
  Swift::UInt result;
  uint64_t v5;

  result = UInt.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = result;
  return result;
}

void sub_2476ECAEC(Swift::OpaquePointer a1, Swift::Int a2)
{
  UInt.bind(to:index:)(a1, a2);
}

void sub_2476ECB04(uint64_t *a1@<X8>)
{
  UInt.debugSQL.getter(a1);
}

void sub_2476ECB0C(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  Swift::UInt v3;
  uint64_t v4;

  v3 = UInt.init(functionArgument:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void UInt64.debugSQL.getter(uint64_t *a1@<X8>)
{
  sub_2476ECB44(a1);
}

void sub_2476ECB44(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_24772D480();
  a1[1] = v2;
  OUTLINED_FUNCTION_68_4();
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(raw:)(Swift::OpaquePointer raw)
{
  Swift::UInt64 result;

  sub_2476ECB8C((sqlite3_value *)raw._rawValue);
  return result;
}

void sub_2476ECB8C(sqlite3_value *a1)
{
  if (OUTLINED_FUNCTION_59_6(a1) < 0)
  {
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_3_16();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_47_6();
  }
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  Swift::UInt64 result;

  sub_2476ECB8C((sqlite3_value *)functionArgument._rawValue);
  return result;
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::UInt64 result;

  sub_2476ECBFC((sqlite3_stmt *)statement._rawValue, index);
  return result;
}

void sub_2476ECBFC(sqlite3_stmt *a1, uint64_t a2)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((sqlite3_column_int64(a1, a2) & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_47_6();
    return;
  }
LABEL_7:
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_3_16();
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sqlite3_int64 v2;

  sub_2476ECC7C((sqlite3_stmt *)to._rawValue, index, v2);
}

void sub_2476ECC7C(sqlite3_stmt *a1, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sqlite3_bind_int64(a1, a2, a3);
    OUTLINED_FUNCTION_51_0();
    return;
  }
LABEL_7:
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_int64 v1;

  sub_2476ECCD8((sqlite3_context *)a1._rawValue, v1);
}

void sub_2476ECCD8(sqlite3_context *a1, sqlite3_int64 a2)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    sqlite3_result_int64(a1, a2);
    OUTLINED_FUNCTION_51_0();
  }
}

void sub_2476ECD00(uint64_t *a1@<X8>)
{
  UInt64.debugSQL.getter(a1);
}

void static Double.dataType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

void Double.debugSQL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_24772CEE0();
  OUTLINED_FUNCTION_76_2(v0, v1, v2, v3, v4, v5, v6, v7, 0, 0xE000000000000000);
  OUTLINED_FUNCTION_68_4();
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(raw:)(Swift::OpaquePointer raw)
{
  Swift::Double result;

  OUTLINED_FUNCTION_60_6((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  Swift::Double result;

  OUTLINED_FUNCTION_60_6((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::Double result;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_column_double((sqlite3_stmt *)statement._rawValue, index);
    OUTLINED_FUNCTION_51_0();
    return result;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  double v2;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_double((sqlite3_stmt *)to._rawValue, index, v2);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.result(for:)(Swift::OpaquePointer a1)
{
  double v1;

  sqlite3_result_double((sqlite3_context *)a1._rawValue, v1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476ECE28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = nullsub_1(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

void sub_2476ECE54(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = nullsub_1(a1);
}

void sub_2476ECE84(Swift::OpaquePointer a1@<X0>, double *a2@<X8>)
{
  double v3;
  uint64_t v4;

  v3 = Double.init(raw:)(a1);
  if (!v4)
    *a2 = v3;
}

void sub_2476ECEAC(Swift::OpaquePointer a1)
{
  Double.result(for:)(a1);
}

void sub_2476ECEC4(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, double *a3@<X8>)
{
  double v4;
  uint64_t v5;

  v4 = Double.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = v4;
}

void sub_2476ECEEC(Swift::OpaquePointer a1, Swift::Int a2)
{
  Double.bind(to:index:)(a1, a2);
}

void sub_2476ECF04()
{
  Double.debugSQL.getter();
}

void sub_2476ECF10(Swift::OpaquePointer a1@<X0>, double *a2@<X8>)
{
  double v3;
  uint64_t v4;

  v3 = Double.init(functionArgument:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void Float.debugSQL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_24772CEF8();
  OUTLINED_FUNCTION_76_2(v0, v1, v2, v3, v4, v5, v6, v7, 0, 0xE000000000000000);
  OUTLINED_FUNCTION_68_4();
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(raw:)(Swift::OpaquePointer raw)
{
  Swift::Float result;

  OUTLINED_FUNCTION_60_6((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  Swift::Float result;

  OUTLINED_FUNCTION_60_6((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_51_0();
  return result;
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  Swift::Float result;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_column_double((sqlite3_stmt *)statement._rawValue, index);
    OUTLINED_FUNCTION_51_0();
    return result;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  float v2;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_double((sqlite3_stmt *)to._rawValue, index, v2);
    OUTLINED_FUNCTION_51_0();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.result(for:)(Swift::OpaquePointer a1)
{
  float v1;

  sqlite3_result_double((sqlite3_context *)a1._rawValue, v1);
  OUTLINED_FUNCTION_51_0();
}

void sub_2476ED060(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  double v4;

  v4 = nullsub_1(a1);
  if (!v2)
    *a2 = LODWORD(v4);
  OUTLINED_FUNCTION_51_0();
}

void sub_2476ED088(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  double v3;

  v3 = nullsub_1(a1);
  *a2 = LODWORD(v3);
}

void sub_2476ED0B8(Swift::OpaquePointer a1@<X0>, float *a2@<X8>)
{
  float v3;
  uint64_t v4;

  v3 = Float.init(raw:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void sub_2476ED0DC(Swift::OpaquePointer a1)
{
  Float.result(for:)(a1);
}

void sub_2476ED0F4(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, float *a3@<X8>)
{
  float v4;
  uint64_t v5;

  v4 = Float.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = v4;
}

void sub_2476ED11C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Float.bind(to:index:)(a1, a2);
}

void sub_2476ED134()
{
  Float.debugSQL.getter();
}

void sub_2476ED13C(Swift::OpaquePointer a1@<X0>, float *a2@<X8>)
{
  float v3;
  uint64_t v4;

  v3 = Float.init(functionArgument:)(a1);
  if (!v4)
    *a2 = v3;
  OUTLINED_FUNCTION_51_0();
}

void static String.dataType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

void String.debugSQL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_24772CAFC();
  v0 = sub_24772CAFC();
  OUTLINED_FUNCTION_76_2(v0, v1, v2, v3, v4, v5, v6, v7, 39, 0xE100000000000000);
  OUTLINED_FUNCTION_68_4();
}

uint64_t sub_2476ED1AC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  if (a1)
  {
    result = sub_24772C9E8();
    if (v2)
      return result;
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D300();
    v3 = 0xE000000000000000;
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v4 = 0;
  }
  else
  {
    sub_2476B3FD0();
    OUTLINED_FUNCTION_36();
    *v4 = 0xD00000000000002DLL;
    v3 = 0x8000000247734800;
  }
  v4[1] = v3;
  return swift_willThrow();
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(raw:)(Swift::OpaquePointer raw)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  OUTLINED_FUNCTION_82_0((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_5_1();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

void sub_2476ED2DC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  nullsub_1(*a1);
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476ED308@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24770BF74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2476ED338(uint64_t *a1@<X8>)
{
  sub_2476ED580((uint64_t (*)(void))String.init(raw:), a1);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  uint64_t v2;
  Swift::String result;

  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_5:
    __break(1u);
    goto _$sSS15SonicFoundationE9statement5indexSSs13OpaquePointerV_SitKcfC;
  }
  sqlite3_column_text((sqlite3_stmt *)statement._rawValue, index);
  OUTLINED_FUNCTION_61_5();
  sub_2476ED1AC(v2);
  OUTLINED_FUNCTION_90_1();
_$sSS15SonicFoundationE9statement5indexSSs13OpaquePointerV_SitKcfC:
  result._object = (void *)index;
  result._countAndFlagsBits = (uint64_t)statement._rawValue;
  return result;
}

void sub_2476ED3B4(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::String *a3@<X8>)
{
  Swift::String v4;
  uint64_t v5;

  v4 = String.init(statement:index:)(a1, a2);
  if (!v5)
    *a3 = v4;
  OUTLINED_FUNCTION_51_0();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v3 = v2;
  v6 = sub_24772CA48();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_67_3();
  sub_24772CA3C();
  sub_2476B5B30();
  v7 = sub_24772D090();
  v8 = OUTLINED_FUNCTION_80_2();
  v9(v8);
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v3 = *(_QWORD *)(v7 + 16);
  if (v3)
  {
    if (qword_2576B7AD0 == -1)
    {
LABEL_6:
      sqlite3_bind_text64((sqlite3_stmt *)to._rawValue, index, (const char *)(v7 + 32), v3 - 1, (void (__cdecl *)(void *))qword_2576C15F8, 1u);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_69_3();
      OUTLINED_FUNCTION_7_15();
      return;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
LABEL_11:
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_3_16();
  __break(1u);
}

void sub_2476ED520(Swift::OpaquePointer a1, Swift::Int a2)
{
  String.bind(to:index:)(a1, a2);
}

void sub_2476ED538()
{
  String.debugSQL.getter();
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  OUTLINED_FUNCTION_82_0((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_5_1();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

void sub_2476ED564(uint64_t *a1@<X8>)
{
  sub_2476ED580((uint64_t (*)(void))String.init(functionArgument:), a1);
}

void sub_2476ED580(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a1();
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  OUTLINED_FUNCTION_51_0();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.result(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_24772CA48();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66_4();
  sub_24772CA3C();
  sub_2476B5B30();
  v5 = sub_24772D090();
  OUTLINED_FUNCTION_48_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
LABEL_7:
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_3_16();
    __break(1u);
    return;
  }
  if (qword_2576B7AD0 != -1)
    swift_once();
  sqlite3_result_text64((sqlite3_context *)a1._rawValue, (const char *)(v5 + 32), v6 - 1, (void (__cdecl *)(void *))qword_2576C15F8, 1u);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_49_5();
}

void sub_2476ED6C4(Swift::OpaquePointer a1)
{
  String.result(for:)(a1);
}

void Optional<A>.debugSQL.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_21_5();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_33_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_10(v3, v7);
  OUTLINED_FUNCTION_39_6();
  if (v4)
  {
    OUTLINED_FUNCTION_54_6();
  }
  else
  {
    OUTLINED_FUNCTION_45_8();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_58_3();
    v6 = v8;
    v5 = v9;
  }
  *v0 = v6;
  v0[1] = v5;
  OUTLINED_FUNCTION_11();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_21_5();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_33_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_10(v3, v7);
  OUTLINED_FUNCTION_39_6();
  if (v4)
  {
    OUTLINED_FUNCTION_54_6();
  }
  else
  {
    OUTLINED_FUNCTION_45_8();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_58_3();
    v6 = v8;
    v5 = v9;
  }
  *v0 = v6;
  v0[1] = v5;
  OUTLINED_FUNCTION_11();
}

void Optional<A>.bind(to:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  sqlite3_stmt *v28;
  sqlite3_stmt *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_7_14();
  a19 = v21;
  a20 = v22;
  a10 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = *(_QWORD *)(v24 - 8);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(v34 + 16);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_65_1();
  (*(void (**)(char *, uint64_t))(v30 + 16))(v33, v37);
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35) != 1)
  {
    OUTLINED_FUNCTION_78_2(v20, (uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
    (*(void (**)(sqlite3_stmt *, uint64_t, uint64_t))(a10 + 8))(v29, v27, v35);
    OUTLINED_FUNCTION_48_7(v20, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v25);
  if (v27 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v27 <= 0x7FFFFFFF)
  {
    sqlite3_bind_null(v29, v27);
LABEL_6:
    OUTLINED_FUNCTION_50_3();
    OUTLINED_FUNCTION_0_11();
    return;
  }
  __break(1u);
}

#error "2476ED88C: call analysis failed (funcsize=6)"

void sub_2476ED898()
{
  Optional<A>.debugSQL.getter();
}

void Optional<A>.init(statement:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  sqlite3_stmt *v29;
  sqlite3_stmt *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  OUTLINED_FUNCTION_7_14();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = OUTLINED_FUNCTION_92_1();
  v34 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&a9 - v36;
  if (v28 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v28 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (sqlite3_column_type(v30, v28) == 5)
  {
    OUTLINED_FUNCTION_13_13(v32, 1);
  }
  else
  {
    (*(void (**)(sqlite3_stmt *, uint64_t, uint64_t, uint64_t))(v24 + 8))(v30, v28, v26, v24);
    if (!v20)
    {
      OUTLINED_FUNCTION_13_13((uint64_t)v37, 0);
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v32, v37, v33);
    }
  }
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

#error "2476ED9A0: call analysis failed (funcsize=7)"

void Optional<A>.init(nativeValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  OUTLINED_FUNCTION_7_14();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v31 = v7;
  v8 = OUTLINED_FUNCTION_26_7();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v26 - v10;
  v29 = v2;
  v11 = OUTLINED_FUNCTION_85_1();
  v12 = sub_24772D018();
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_4_8();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - v16;
  v18 = *(_QWORD *)(v11 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v26 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, v6, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11) == 1)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v24(v6, v12);
    v24((uint64_t)v17, v12);
    OUTLINED_FUNCTION_13_13(v31, 1);
  }
  else
  {
    OUTLINED_FUNCTION_83_1((uint64_t)v23, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    OUTLINED_FUNCTION_83_1((uint64_t)v21, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    v25 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t))(v29 + 56))(v21, v4);
    OUTLINED_FUNCTION_62_5();
    OUTLINED_FUNCTION_30_6((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    if (!v0)
    {
      OUTLINED_FUNCTION_13_13(v25, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v31, v25, v28);
    }
  }
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

void Optional<A>.init<>(nativeValue:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void Optional<A>.nativeValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_7_14();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66_4();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_67_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v13, v6);
  if (__swift_getEnumTagSinglePayload(v1, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v6);
    v14 = OUTLINED_FUNCTION_70_4();
    v15 = 1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v8, v15, 1, v14);
    goto LABEL_6;
  }
  v16 = OUTLINED_FUNCTION_80_2();
  OUTLINED_FUNCTION_78_2(v16, v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v4 + 64))(v11, v4);
  OUTLINED_FUNCTION_48_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  if (!v0)
  {
    v14 = OUTLINED_FUNCTION_70_4();
    v15 = 0;
    goto LABEL_5;
  }
LABEL_6:
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

void sub_2476EDCCC()
{
  Optional<A>.init(nativeValue:)();
}

void sub_2476EDCE8()
{
  Optional<A>.nativeValue.getter();
}

uint64_t static Optional<A>.dataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 24) + 32))();
}

void Optional<A>.init(raw:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v3);
  if (OUTLINED_FUNCTION_50_4() == 5)
  {
    OUTLINED_FUNCTION_13_13(a1, 1);
  }
  else
  {
    OUTLINED_FUNCTION_41_7();
    if (!v1)
      OUTLINED_FUNCTION_8_11();
  }
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_7_15();
}

void sub_2476EDDB0(uint64_t a1@<X8>)
{
  Optional<A>.init(raw:)(a1);
}

uint64_t sub_2476EDDCC(uint64_t a1, uint64_t a2)
{
  return static Optional<A>.dataType.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void Optional<A>.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[2];

  OUTLINED_FUNCTION_21_5();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_9_10(v11, v15[0]);
  OUTLINED_FUNCTION_39_6();
  if (v12)
  {
    OUTLINED_FUNCTION_54_6();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v10, v4, v3);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(a2 + 8) + 8))(v15, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v3);
    v14 = v15[0];
    v13 = v15[1];
  }
  *v2 = v14;
  v2[1] = v13;
  OUTLINED_FUNCTION_11();
}

void Optional<A>.init(functionArgument:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v3);
  if (OUTLINED_FUNCTION_50_4() == 5)
  {
    OUTLINED_FUNCTION_13_13(a1, 1);
  }
  else
  {
    OUTLINED_FUNCTION_41_7();
    if (!v1)
      OUTLINED_FUNCTION_8_11();
  }
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_7_15();
}

void sub_2476EDF20(uint64_t a1@<X8>)
{
  Optional<A>.init(functionArgument:)(a1);
}

void Optional<A>.init(functionArgument:)(sqlite3_value *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;

  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v9);
  if (sqlite3_value_type(a1) == 5)
  {
    OUTLINED_FUNCTION_13_13(a4, 1);
  }
  else
  {
    (*(void (**)(sqlite3_value *, uint64_t))(*(_QWORD *)(a3 + 8) + 16))(a1, a2);
    if (!v4)
      OUTLINED_FUNCTION_8_11();
  }
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_7_15();
}

uint64_t Optional<A>.init(functionArgument:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(void))(*(_QWORD *)(a1 + 8) + 16))();
  if (v2)
  {
    MEMORY[0x2495821C4](v2);
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  return OUTLINED_FUNCTION_13_13(a2, v4);
}

void sub_2476EE0C0()
{
  Optional<A>.debugSQL.getter();
}

void Optional<A>.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  sqlite3_context *v27;
  sqlite3_context *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);

  OUTLINED_FUNCTION_7_14();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = *(_QWORD *)(v25 - 8);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v33 + 16);
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_65_1();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v36, v26);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34) == 1)
  {
    OUTLINED_FUNCTION_48_7((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sqlite3_result_null(v28);
  }
  else
  {
    v37 = OUTLINED_FUNCTION_80_2();
    v38(v37);
    (*(void (**)(sqlite3_context *, uint64_t, uint64_t))(v24 + 16))(v28, v34, v24);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v20, v34);
  }
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_0_11();
}

#error "2476EE1D8: call analysis failed (funcsize=6)"

void RawRepresentable<>.init(raw:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_7_14();
  v13 = *(_QWORD *)(OUTLINED_FUNCTION_25_7(v12) - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_42_7();
  v15 = OUTLINED_FUNCTION_24_9();
  v16 = OUTLINED_FUNCTION_28_6(v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_32_5(v18);
  if (!v10)
  {
    OUTLINED_FUNCTION_15_9();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_23_8();
    if (v19)
    {
      OUTLINED_FUNCTION_30_6(v11, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_55_5();
      OUTLINED_FUNCTION_5_14();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_57_5();
      OUTLINED_FUNCTION_42_1();
      OUTLINED_FUNCTION_10_11();
      OUTLINED_FUNCTION_29_10();
      OUTLINED_FUNCTION_56_6();
      v20 = OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_20_8(v20, v21);
      OUTLINED_FUNCTION_73_1(v13, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_73_1(v22, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
      OUTLINED_FUNCTION_17_10();
    }
  }
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_0_11();
}

void sub_2476EE30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  OUTLINED_FUNCTION_7_14();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = *(_QWORD *)(OUTLINED_FUNCTION_26_7() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_42_7();
  v20 = OUTLINED_FUNCTION_24_9();
  v21 = OUTLINED_FUNCTION_28_6(v20);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_40_5();
  v27 = v23;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 8) + 16))(v17, v15);
  if (!v10)
  {
    OUTLINED_FUNCTION_15_9();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_23_8();
    if (v24)
    {
      OUTLINED_FUNCTION_30_6(v11, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_55_5();
      OUTLINED_FUNCTION_5_14();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_57_5();
      OUTLINED_FUNCTION_42_1();
      OUTLINED_FUNCTION_10_11();
      OUTLINED_FUNCTION_29_10();
      OUTLINED_FUNCTION_56_6();
      v25 = OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_20_8(v25, v26);
      OUTLINED_FUNCTION_73_1(v18, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_73_1(v27, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
      OUTLINED_FUNCTION_17_10();
    }
  }
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_0_11();
}

void RawRepresentable<>.init(functionArgument:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_7_14();
  v13 = *(_QWORD *)(OUTLINED_FUNCTION_25_7(v12) - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_42_7();
  v15 = OUTLINED_FUNCTION_24_9();
  v16 = OUTLINED_FUNCTION_28_6(v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_32_5(v18);
  if (!v10)
  {
    OUTLINED_FUNCTION_15_9();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_23_8();
    if (v19)
    {
      OUTLINED_FUNCTION_30_6(v11, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_55_5();
      OUTLINED_FUNCTION_5_14();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_57_5();
      OUTLINED_FUNCTION_42_1();
      OUTLINED_FUNCTION_10_11();
      OUTLINED_FUNCTION_29_10();
      OUTLINED_FUNCTION_56_6();
      v20 = OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_20_8(v20, v21);
      OUTLINED_FUNCTION_73_1(v13, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_73_1(v22, *(uint64_t (**)(uint64_t, uint64_t))(a10 + 8));
      OUTLINED_FUNCTION_17_10();
    }
  }
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_0_11();
}

void static Data.dataType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

void Data.debugSQL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_24772C574();
  sub_24772CAFC();
  v0 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_76_2(v0, v1, v2, v3, v4, v5, v6, v7, 0x28343665736162, 0xE700000000000000);
}

uint64_t sub_2476EE5D8(uint64_t a1, int a2)
{
  _QWORD *v3;

  if (a2 < 1)
    return 0;
  if (a1)
    return MEMORY[0x2495808EC](a1, a2);
  sub_2476B3FD0();
  OUTLINED_FUNCTION_36();
  *v3 = 0xD00000000000002BLL;
  v3[1] = 0x8000000247735630;
  return OUTLINED_FUNCTION_6_11();
}

void Data.init(raw:)(sqlite3_value *a1)
{
  int v1;

  OUTLINED_FUNCTION_81_0(a1);
  v1 = OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_72_3(v1);
  OUTLINED_FUNCTION_5_1();
}

uint64_t sub_2476EE678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_94_1(a1);
  return sub_2476B17E4(v1, v2, v3);
}

uint64_t sub_2476EE690@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_24770BF6C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1);
}

void sub_2476EE6B8(uint64_t *a1@<X8>)
{
  sub_2476ED580((uint64_t (*)(void))Data.init(raw:), a1);
}

void Data.init(functionArgument:)(sqlite3_value *a1)
{
  int v1;

  OUTLINED_FUNCTION_81_0(a1);
  v1 = OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_72_3(v1);
  OUTLINED_FUNCTION_5_1();
}

void sub_2476EE6FC(uint64_t *a1@<X8>)
{
  sub_2476ED580((uint64_t (*)(void))Data.init(functionArgument:), a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.result(for:)(Swift::OpaquePointer a1)
{
  __asm { BR              X10 }
}

void sub_2476EE75C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_2476EF110(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1), v2, v0, v1);
  OUTLINED_FUNCTION_49_5();
}

void sub_2476EE838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

void sub_2476EE878(int a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, int a8, char a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  const void *v18;
  sqlite3_context *v19;
  sqlite3_uint64 v20;

  v20 = BYTE6(a5);
  if (qword_2576B7AD0 != -1)
    swift_once();
  sqlite3_result_blob64(v19, v18, v20, (void (__cdecl *)(void *))qword_2576C15F8);
}

void sub_2476EE95C(Swift::OpaquePointer a1)
{
  Data.result(for:)(a1);
}

void Data.init(statement:index:)(sqlite3_stmt *a1, uint64_t iCol)
{
  uint64_t v2;
  int v3;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    sqlite3_column_blob(a1, iCol);
    v3 = OUTLINED_FUNCTION_61_5();
    sub_2476EE5D8(v2, v3);
    OUTLINED_FUNCTION_90_1();
    return;
  }
  __break(1u);
}

void sub_2476EE9D4(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  Data.init(statement:index:)(a1, a2);
  if (!v3)
  {
    *a3 = v5;
    a3[1] = v6;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  __asm { BR              X10 }
}

void sub_2476EEA44()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;

  sub_2476EEFD8(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1), v3, v2, v0, v1);
  OUTLINED_FUNCTION_7_15();
}

void sub_2476EEB20(Swift::OpaquePointer a1, Swift::Int a2)
{
  Data.bind(to:index:)(a1, a2);
}

void sub_2476EEB38()
{
  Data.debugSQL.getter();
}

uint64_t sub_2476EEB40(uint64_t a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_94_1(a1);
  return sub_2476EA768(v1);
}

void sub_2476EEB58(uint64_t *a1@<X8>)
{
  sub_2476EEB74((uint64_t (*)(_QWORD))sub_24770BB90, a1);
}

void sub_2476EEB74(uint64_t (*a1)(_QWORD)@<X2>, uint64_t *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = a1(*v2);
  if (!v3)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  OUTLINED_FUNCTION_51_0();
}

void sub_2476EEB9C(uint64_t a1)
{
  char *v1;

  sub_2476EADF8(a1, *v1);
}

uint64_t sub_2476EEBB4@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_2476EB260(a1, a2, a3);
}

void sub_2476EEBC8(uint64_t a1, uint64_t a2)
{
  char *v2;

  sub_2476EB784(a1, a2, *v2);
}

uint64_t sub_2476EEBE0@<X0>(sqlite3_value *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2476EBC50(a1, a2);
}

uint64_t sub_2476EEBF4(uint64_t a1)
{
  char *v1;

  OUTLINED_FUNCTION_94_1(a1);
  return sub_2476EA618(v1);
}

void sub_2476EEC0C(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24770BB58(*v1);
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_2476EEC34(Swift::OpaquePointer a1)
{
  return sub_2476EAD90(a1);
}

uint64_t sub_2476EEC4C@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, char *a3@<X8>)
{
  return sub_2476EB0EC(a1, a2, a3);
}

uint64_t sub_2476EEC60(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_2476EB71C(a1, a2);
}

uint64_t sub_2476EEC78@<X0>(sqlite3_value *a1@<X0>, char *a2@<X8>)
{
  return sub_2476EBABC(a1, a2);
}

uint64_t sub_2476EEC8C(uint64_t a1, uint64_t a2, sqlite3_uint64 a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v13 = sub_24772C424();
  if (v13)
  {
    v14 = v13;
    v15 = sub_24772C448();
    if (__OFSUB__(a1, v15))
    {
      __break(1u);
      goto LABEL_14;
    }
    v16 = (const void *)(v14 + a1 - v15);
  }
  else
  {
    v16 = 0;
  }
  sub_24772C43C();
  if (a5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a5 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = sub_24772C598();
  if ((v17 & 0x8000000000000000) == 0)
  {
    a3 = v17;
    if (qword_2576B7AD0 == -1)
    {
LABEL_9:
      v18 = sqlite3_bind_blob64(a4, a5, v16, a3, (void (__cdecl *)(void *))qword_2576C15F8);
      sub_2476D5F88(a6, a7);
      return v18;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
LABEL_14:
  result = sub_24772D348();
  __break(1u);
  return result;
}

uint64_t sub_2476EEDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_24772C424();
  v12 = result;
  if (result)
  {
    result = sub_24772C448();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  v13 = __OFSUB__(a2, a1);
  v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = sub_24772C43C();
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  v17 = v12 + v16;
  if (v12)
    v18 = v17;
  else
    v18 = 0;
  sub_2476EE838(v12, v18, a4, a5, a6);
  return sub_2476D5F88(a5, a6);
}

uint64_t sub_2476EEEB0(const void *a1, uint64_t a2, uint64_t a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  int v9;
  const void *v10;
  sqlite3_stmt *v11;
  sqlite3_uint64 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  if (a5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = a5;
  if (a5 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = a7;
  v8 = a6;
  v11 = a4;
  v10 = a1;
  v13 = sub_24772C598();
  if ((v13 & 0x8000000000000000) == 0)
  {
    v12 = v13;
    if (qword_2576B7AD0 == -1)
    {
LABEL_5:
      v14 = sqlite3_bind_blob64(v11, v9, v10, v12, (void (__cdecl *)(void *))qword_2576C15F8);
      sub_2476D5F88(v8, v7);
      return v14;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  result = sub_24772D348();
  __break(1u);
  return result;
}

uint64_t sub_2476EEFD8(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v12;
  uint64_t v14;
  __int16 v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v14 = a1;
  v15 = a2;
  v16 = BYTE2(a2);
  v17 = BYTE3(a2);
  v18 = BYTE4(a2);
  v19 = BYTE5(a2);
  sub_2476D64E0(a6, a7);
  v12 = sub_2476EEEB0(&v14, (uint64_t)&v20, a3, a4, a5, a6, a7);
  sub_2476D5F88(a6, a7);
  return v12;
}

uint64_t sub_2476EF110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v9 = a1;
  v10 = a2;
  v11 = BYTE2(a2);
  v12 = BYTE3(a2);
  v13 = BYTE4(a2);
  v14 = BYTE5(a2);
  sub_2476EE838((uint64_t)&v9, (uint64_t)&v9 + a3, a4, a5, a6);
  return sub_2476D5F88(a5, a6);
}

unint64_t sub_2476EF208()
{
  unint64_t result;

  result = qword_2576B8CE8;
  if (!qword_2576B8CE8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDataType, &type metadata for SQLDataType);
    atomic_store(result, (unint64_t *)&qword_2576B8CE8);
  }
  return result;
}

unint64_t sub_2476EF248(uint64_t a1)
{
  unint64_t result;

  result = sub_2476EF26C();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_2476EF26C()
{
  unint64_t result;

  result = qword_2576B8CF0;
  if (!qword_2576B8CF0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLNull, &type metadata for SQLNull);
    atomic_store(result, (unint64_t *)&qword_2576B8CF0);
  }
  return result;
}

unint64_t sub_2476EF2AC()
{
  unint64_t result;

  result = qword_2576B8CF8;
  if (!qword_2576B8CF8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLNull, &type metadata for SQLNull);
    atomic_store(result, (unint64_t *)&qword_2576B8CF8);
  }
  return result;
}

_UNKNOWN **sub_2476EF2E8()
{
  return &protocol witness table for Bool;
}

_UNKNOWN **sub_2476EF2F4()
{
  return &protocol witness table for Int;
}

_UNKNOWN **sub_2476EF300()
{
  return &protocol witness table for Int64;
}

_UNKNOWN **sub_2476EF30C()
{
  return &protocol witness table for UInt;
}

_UNKNOWN **sub_2476EF318()
{
  return &protocol witness table for UInt64;
}

_UNKNOWN **sub_2476EF324()
{
  return &protocol witness table for Double;
}

_UNKNOWN **sub_2476EF330()
{
  return &protocol witness table for Float;
}

_UNKNOWN **sub_2476EF33C()
{
  return &protocol witness table for String;
}

uint64_t sub_2476EF348(uint64_t a1)
{
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a1, &AssociatedConformanceWitness);
}

uint64_t sub_2476EF3A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD **)a3;
  v10 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  a1[1] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v10);
  v9 = v5[2];
  a1[2] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v9);
  v8 = v5[3];
  a1[3] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v8);
  v7 = v5[4];
  result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v7);
  a1[4] = result;
  return result;
}

uint64_t sub_2476EF454(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a3;
  v10 = *(_QWORD *)(*a3 + 8);
  a1[1] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v10);
  v9 = *(_QWORD *)(v5 + 16);
  a1[2] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v9);
  v8 = v5;
  a1[3] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v8);
  v7 = *(_QWORD *)(v5 + 32);
  result = MEMORY[0x2495822A8](MEMORY[0x24BEE4AB0], a2, &v7);
  a1[4] = result;
  return result;
}

uint64_t sub_2476EF500(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a3;
  v6 = *(_QWORD *)(*a3 + 24);
  v10 = *(_QWORD *)(v6 + 8);
  a1[1] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v10);
  v9 = *(_QWORD *)(v6 + 16);
  a1[2] = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v9);
  v8 = v5;
  result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v8);
  a1[3] = result;
  return result;
}

uint64_t sub_2476EF590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2476EF5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2476EF61C(uint64_t a1)
{
  unint64_t result;

  result = sub_2476EF640();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_2476EF640()
{
  unint64_t result;

  result = qword_2576B8D00;
  if (!qword_2576B8D00)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BDCDE08], MEMORY[0x24BDCDDE8]);
    atomic_store(result, &qword_2576B8D00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SQLDataType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLDataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2476EF750 + 4 * byte_24772FC91[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2476EF784 + 4 * byte_24772FC8C[v4]))();
}

uint64_t sub_2476EF784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476EF78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476EF794);
  return result;
}

uint64_t sub_2476EF7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476EF7A8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2476EF7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476EF7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SQLDataType()
{
  return &type metadata for SQLDataType;
}

uint64_t dispatch thunk of _SQLNativeValue.init(raw:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

ValueMetadata *type metadata accessor for SQLNull()
{
  return &type metadata for SQLNull;
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(raw:)(Swift::OpaquePointer raw)
{
  return Int.init(raw:)(raw);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.result(for:)(Swift::OpaquePointer a1)
{
  Int.result(for:)(a1);
}

void sub_2476EF834(Swift::OpaquePointer a1)
{
  sub_2476EC898(a1);
}

void sub_2476EF874(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  sub_2476EC874(a1, a2);
}

Swift::UInt sub_2476EF888@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  return sub_2476ECA84(a1, a2);
}

void sub_2476EF89C(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  sub_2476ECB0C(a1, a2);
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return Int.init(functionArgument:)(functionArgument);
}

void sub_2476EF8C4(Swift::OpaquePointer a1, Swift::Int a2)
{
  sub_2476EC8D8(a1, a2);
}

void sub_2476EF8D8(Swift::OpaquePointer a1, Swift::Int a2)
{
  sub_2476ECAEC(a1, a2);
}

void sub_2476EF8EC(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  sub_2476EC8F8(a1, a2);
}

Swift::Int sub_2476EF900@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  return sub_2476EC8B0(a1, a2, a3);
}

Swift::UInt sub_2476EF914@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::UInt *a3@<X8>)
{
  return sub_2476ECAC4(a1, a2, a3);
}

void sub_2476EF928(Swift::OpaquePointer a1)
{
  sub_2476ECAAC(a1);
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return sub_24772D348();
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  return sub_24772D144();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(v3, 0, 1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_9_10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return sub_24772D4F8();
}

uint64_t OUTLINED_FUNCTION_13_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 72) + 16))(v1, *(_QWORD *)(v2 - 104), v0);
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  return sub_24772CC40();
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return sub_24772CC4C();
}

uint64_t OUTLINED_FUNCTION_20_8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_25_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_28_6(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return sub_24772D4D4();
}

uint64_t OUTLINED_FUNCTION_30_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return sub_24772D720();
}

uint64_t OUTLINED_FUNCTION_32_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 104) = a1;
  return v1(v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  sqlite3_value *v0;

  return sqlite3_value_bytes(v0);
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2476D64E0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_44_7(uint64_t a1, uint64_t a2, sqlite3_uint64 a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  sqlite3_stmt *v6;

  return sub_2476EEC8C(a1, a2, a3, v6, v5, v3, v4);
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_46_7()
{
  return sub_24772D144();
}

uint64_t OUTLINED_FUNCTION_48_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  sqlite3_value *v0;

  return sqlite3_value_type(v0);
}

uint64_t OUTLINED_FUNCTION_53_7(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  return sub_2476EEDE4(a1, a2, a3, v5, v3, v4);
}

void OUTLINED_FUNCTION_55_5()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 88);
  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 96);
  *(_QWORD *)(v0 - 88) = v1;
}

unint64_t OUTLINED_FUNCTION_56_6()
{
  return sub_2476B3FD0();
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

sqlite3_int64 OUTLINED_FUNCTION_59_6(sqlite3_value *a1)
{
  return sqlite3_value_int64(a1);
}

double OUTLINED_FUNCTION_60_6(sqlite3_value *a1)
{
  return sqlite3_value_double(a1);
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  int v0;
  sqlite3_stmt *v1;

  return sqlite3_column_bytes(v1, v0);
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

BOOL OUTLINED_FUNCTION_64_3(int a1)
{
  return a1 != 0;
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_72_3(int a1)
{
  uint64_t v1;

  return sub_2476EE5D8(v1, a1);
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_76_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  *v10 = a9;
  v10[1] = a10;
}

uint64_t OUTLINED_FUNCTION_78_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return sub_24772D600();
}

uint64_t OUTLINED_FUNCTION_80_2()
{
  uint64_t v0;

  return v0;
}

const void *OUTLINED_FUNCTION_81_0(sqlite3_value *a1)
{
  return sqlite3_value_blob(a1);
}

const unsigned __int8 *OUTLINED_FUNCTION_82_0(sqlite3_value *a1)
{
  return sqlite3_value_text(a1);
}

uint64_t OUTLINED_FUNCTION_83_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  uint64_t v0;

  return sub_2476ED1AC(v0);
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_91_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_24772D018();
}

uint64_t OUTLINED_FUNCTION_94_1(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return sub_24772CAFC();
}

#error "2476EFEF4: call analysis failed (funcsize=53)"

void sub_2476EFF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3 **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  int v21;
  char v22;

  v4 = (sqlite3 **)(a1 + 136);
  OUTLINED_FUNCTION_0_6();
  if (!*(_QWORD *)(a1 + 136))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_24770D7F8();
  if (v1)
    goto LABEL_11;
  OUTLINED_FUNCTION_87_1(v5, v6, v7, v8, v9, v10);
  if (v22 == 1)
    goto LABEL_11;
  if (v22 == 14 && v21 == 16)
    goto LABEL_11;
  v12 = sqlite3_extended_errcode(*v4);
  if (!sqlite3_errstr(a1))
    goto LABEL_13;
  v13 = sub_24772CB08();
  v15 = v14;
  if (sqlite3_errmsg(*v4))
  {
    v16 = sub_24772CB08();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_36();
    v18 = v17;
    sub_247716788(v12, (uint64_t)&v21);
    v19 = v21;
    v20 = v22;
    *(_DWORD *)v18 = v12;
    *(_DWORD *)(v18 + 4) = v19;
    *(_BYTE *)(v18 + 8) = v20;
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v15;
    *(_QWORD *)(v18 + 32) = v16;
    *(_QWORD *)(v18 + 40) = v2;
    swift_willThrow();
LABEL_11:
    OUTLINED_FUNCTION_24_10();
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_2476F0074(uint64_t a1)
{
  sub_2476F00AC(a1, "COMMIT TRANSACTION");
}

void sub_2476F0090(uint64_t a1)
{
  sub_2476F00AC(a1, "ROLLBACK TRANSACTION");
}

void sub_2476F00AC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  sqlite3 **v5;
  sqlite3 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  int v23;
  char v24;

  v5 = (sqlite3 **)(a1 + 136);
  OUTLINED_FUNCTION_8_12();
  v6 = *(sqlite3 **)(a1 + 136);
  if (!v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = OUTLINED_FUNCTION_66_5(v6, a2);
  OUTLINED_FUNCTION_87_1(v7, v8, v9, v10, v11, v12);
  if (v24 == 1)
    goto LABEL_10;
  if (v24 == 14 && v23 == 16)
    goto LABEL_10;
  v14 = OUTLINED_FUNCTION_64_4();
  if (!sqlite3_errstr(a1))
    goto LABEL_12;
  v15 = sub_24772CB08();
  v17 = v16;
  if (sqlite3_errmsg(*v5))
  {
    v18 = sub_24772CB08();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_36();
    v20 = v19;
    sub_247716788(v14, (uint64_t)&v23);
    v21 = v23;
    v22 = v24;
    *(_DWORD *)v20 = v14;
    *(_DWORD *)(v20 + 4) = v21;
    *(_BYTE *)(v20 + 8) = v22;
    *(_QWORD *)(v20 + 16) = v15;
    *(_QWORD *)(v20 + 24) = v17;
    *(_QWORD *)(v20 + 32) = v18;
    *(_QWORD *)(v20 + 40) = v2;
    swift_willThrow();
LABEL_10:
    OUTLINED_FUNCTION_24_10();
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_2476F01A0(uint64_t a1, uint64_t a2)
{
  return sub_2476F04B4(a1, a2, sub_247705000);
}

#error "2476F0210: call analysis failed (funcsize=48)"

uint64_t sub_2476F0280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2476F05B8(a1, a2, a3, sub_24770DFC4);
}

uint64_t sub_2476F029C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2476F02FC(a1, a2, a3, 20, 0xD000000000000012, 0x80000002477358A0);
}

uint64_t sub_2476F02CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2476F02FC(a1, a2, a3, 36, 0xD000000000000022, 0x8000000247735870);
}

uint64_t sub_2476F02FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sqlite3 **v9;
  uint64_t result;
  sqlite3 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  _QWORD v26[2];

  v9 = (sqlite3 **)(a1 + 136);
  result = OUTLINED_FUNCTION_0_6();
  v11 = *(sqlite3 **)(a1 + 136);
  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_24772D144();
  swift_bridgeObjectRelease();
  v26[0] = a5;
  v26[1] = a6;
  OUTLINED_FUNCTION_45();
  sub_24772CAFC();
  OUTLINED_FUNCTION_32();
  v12 = sub_24772CA78();
  swift_bridgeObjectRelease();
  v13 = OUTLINED_FUNCTION_66_5(v11, (const char *)(v12 + 32));
  swift_release();
  sub_247716788(v13, (uint64_t)v26);
  if (BYTE4(v26[0]) == 1)
    return OUTLINED_FUNCTION_32();
  if (BYTE4(v26[0]) == 14 && LODWORD(v26[0]) == 16)
    return OUTLINED_FUNCTION_32();
  v15 = sqlite3_extended_errcode(*v9);
  result = (uint64_t)sqlite3_errstr(v13);
  if (!result)
    goto LABEL_12;
  v16 = sub_24772CB08();
  v18 = v17;
  result = (uint64_t)sqlite3_errmsg(*v9);
  if (result)
  {
    v19 = sub_24772CB08();
    v21 = v20;
    sub_2476BB2C0();
    OUTLINED_FUNCTION_36();
    v23 = v22;
    sub_247716788(v15, (uint64_t)v26);
    v24 = v26[0];
    v25 = BYTE4(v26[0]);
    *(_DWORD *)v23 = v15;
    *(_DWORD *)(v23 + 4) = v24;
    *(_BYTE *)(v23 + 8) = v25;
    *(_QWORD *)(v23 + 16) = v16;
    *(_QWORD *)(v23 + 24) = v18;
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v21;
    swift_willThrow();
    return OUTLINED_FUNCTION_32();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_2476F0498(uint64_t a1, uint64_t a2)
{
  return sub_2476F04B4(a1, a2, sub_24770F3CC);
}

#error "2476F04F4: call analysis failed (funcsize=57)"

uint64_t sub_2476F059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2476F05B8(a1, a2, a3, sub_2477126E8);
}

#error "2476F0608: call analysis failed (funcsize=47)"

_QWORD *sub_2476F0678(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5, a3 + 32, *(_QWORD *)(a3 + 16));
  if (!v3)
    return (_QWORD *)v5;
  return result;
}

__n128 sub_2476F06C4@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 result;
  __n128 v17;

  v9 = MEMORY[0x24BEE4AF8];
  v10 = sub_2476F07F4(MEMORY[0x24BEE4AF8]);
  v12 = v11;
  v14 = v13;
  sub_2476F07F4(v9);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  v17.n128_u64[0] = v12;
  v17.n128_u64[1] = v14;
  sub_2476F0AF0();
  swift_release();
  swift_release();
  swift_release();
  result = v17;
  *(_OWORD *)a5 = 0uLL;
  *(_QWORD *)(a5 + 16) = v10;
  *(__n128 *)(a5 + 24) = v17;
  *(_QWORD *)(a5 + 40) = a3;
  *(_BYTE *)(a5 + 48) = a4 & 1;
  *(_QWORD *)(a5 + 56) = a1;
  *(_BYTE *)(a5 + 64) = a2 & 1;
  return result;
}

uint64_t sub_2476F07F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = MEMORY[0x24BEE4AF8];
  v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_2476F39D4(v3, 0);
  sub_2476B2F60(0, v3, 0);
  v4 = v2;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    sub_24772C91C();
    v5 = 0;
    while (v5 < *(_QWORD *)(a1 + 16))
    {
      v6 = a1 + 32 + 40 * v5;
      v8 = *(_QWORD *)v6;
      v7 = *(_QWORD *)(v6 + 8);
      v9 = *(_QWORD *)(v6 + 24);
      v24 = *(_QWORD *)(v6 + 16);
      v10 = *(_BYTE *)(v6 + 32);
      v11 = v25[2];
      if (v11)
      {
        v12 = v25[4] == v8 && v25[5] == v7;
        if (v12 || (sub_24772D4F8() & 1) != 0)
          goto LABEL_43;
        if (v11 != 1)
        {
          v13 = v25[6] == v8 && v25[7] == v7;
          if (v13 || (sub_24772D4F8() & 1) != 0)
            goto LABEL_43;
          if (v11 != 2)
          {
            v14 = v25[8] == v8 && v25[9] == v7;
            if (v14 || (sub_24772D4F8() & 1) != 0)
              goto LABEL_43;
            v15 = v11 - 3;
            if (v15)
            {
              v19 = v25[10] == v8 && v25[11] == v7;
              if (v19 || (sub_24772D4F8() & 1) != 0)
                goto LABEL_43;
              v20 = v25 + 13;
              while (--v15)
              {
                if (*(v20 - 1) != v8 || *v20 != v7)
                {
                  v20 += 2;
                  if ((sub_24772D4F8() & 1) == 0)
                    continue;
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      sub_24772C91C();
      swift_retain();
      sub_2476F3260(v8, v7);
      v17 = *(_QWORD *)(v4 + 16);
      v16 = *(_QWORD *)(v4 + 24);
      if (v17 >= v16 >> 1)
        sub_2476B2F60(v16 > 1, v17 + 1, 1);
      ++v5;
      *(_QWORD *)(v4 + 16) = v17 + 1;
      v18 = v4 + 24 * v17;
      *(_QWORD *)(v18 + 32) = v24;
      *(_QWORD *)(v18 + 40) = v9;
      *(_BYTE *)(v18 + 48) = v10;
      swift_bridgeObjectRelease();
      if (v5 == v23)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    sub_24772C91C();
    result = swift_retain();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_2476F0AF0()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void (*v5)(uint64_t *, uint64_t *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, uint64_t *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
    goto LABEL_11;
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v1 >= (uint64_t)v3)
    goto LABEL_11;
  v4 = v3 - v1;
  if (__OFSUB__(v3, v1))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v5 = *(void (**)(uint64_t *, uint64_t *))v0;
  if (*(_QWORD *)v0)
  {
    v6 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    sub_2476BEE20(*(_QWORD *)v0);
    OUTLINED_FUNCTION_36_1();
    swift_retain();
    OUTLINED_FUNCTION_54_7();
    v35 = sub_2476F0DA4(v4, v6, v7, v2);
    v8 = *(_QWORD *)(v35 + 16);
    if (v8)
    {
      v9 = (uint64_t *)(v35 + 48);
      do
      {
        v10 = *(v9 - 2);
        v11 = *(v9 - 1);
        v12 = *v9;
        v9 += 5;
        v38 = v10;
        v39 = v11;
        v37 = v12;
        sub_24772C91C();
        swift_retain();
        v5(&v38, &v37);
        swift_bridgeObjectRelease();
        swift_release();
        --v8;
      }
      while (v8);
    }
    OUTLINED_FUNCTION_94_2();
    sub_2476BF020((uint64_t)v5);
  }
  if (v4 > v3)
    goto LABEL_41;
  sub_2476F3C1C(v4);
  sub_2476F3C3C(v4);
LABEL_11:
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v13 = *(_QWORD *)(v0 + 40);
    v14 = *(void (**)(uint64_t *, uint64_t *))v0;
    v15 = *(_QWORD *)(v0 + 16);
    v16 = *(_QWORD *)(v0 + 24);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = 0;
      v20 = (_BYTE *)(v17 + 48);
      v21 = *(_QWORD *)(v17 + 16);
      do
      {
        v22 = *((_QWORD *)v20 - 1);
        if (*v20)
          v22 = 0;
        v23 = __OFADD__(v19, v22);
        v19 += v22;
        if (v23)
        {
          __break(1u);
          goto LABEL_40;
        }
        v20 += 24;
        --v21;
      }
      while (v21);
      if (v13 >= v19)
        return;
      v23 = __OFSUB__(v19, v13);
      v24 = v19 - v13;
      if (!v23)
      {
        v25 = 0;
        v26 = (_BYTE *)(v17 + 24 * v18 + 24);
        while (1)
        {
          if ((*v26 & 1) == 0)
          {
            v27 = *((_QWORD *)v26 - 1);
            v23 = __OFSUB__(v24, v27);
            v24 -= v27;
            if (v23)
              goto LABEL_44;
          }
          v26 -= 24;
          v28 = v25 + 1;
          if (v24 < 1 || v18 - 1 == v25++)
          {
            if (v14)
              goto LABEL_32;
            goto LABEL_36;
          }
        }
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return;
    }
    if (v13 < 0)
    {
      v28 = 0;
      if (v14)
      {
LABEL_32:
        sub_2476BEE20((uint64_t)v14);
        OUTLINED_FUNCTION_25_2();
        OUTLINED_FUNCTION_54_7();
        OUTLINED_FUNCTION_36_1();
        v36 = sub_2476F0DA4(v28, v15, v16, v17);
        v30 = *(_QWORD *)(v36 + 16);
        if (v30)
        {
          v31 = (uint64_t *)(v36 + 48);
          do
          {
            v32 = *(v31 - 2);
            v33 = *(v31 - 1);
            v34 = *v31;
            v31 += 5;
            v38 = v32;
            v39 = v33;
            v37 = v34;
            sub_24772C91C();
            OUTLINED_FUNCTION_36_1();
            v14(&v38, &v37);
            OUTLINED_FUNCTION_53_1();
            swift_release();
            --v30;
          }
          while (v30);
        }
        OUTLINED_FUNCTION_94_2();
        sub_2476BF020((uint64_t)v14);
      }
LABEL_36:
      if (v28 <= v18)
      {
        sub_2476F3C1C(v28);
        sub_2476F3C3C(v28);
        return;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
}

uint64_t sub_2476F0DA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (result < 0)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v4 = a4;
  if (!result)
  {
    swift_release();
    swift_release();
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v6 = *(_QWORD *)(a4 + 16);
  v31 = result;
  if (v6 >= result)
    v7 = result;
  else
    v7 = *(_QWORD *)(a4 + 16);
  v34 = MEMORY[0x24BEE4AF8];
  sub_2476B2FB8(0, v7, 0);
  v8 = v34;
  v30 = v6;
  if (!v6)
    goto LABEL_23;
  swift_retain();
  swift_retain();
  result = swift_retain();
  v9 = 0;
  v10 = 0;
  v11 = a3 + 40;
  v12 = v31;
  v28 = a3;
  v29 = v4;
  v27 = a3 + 40;
  while (2)
  {
    v13 = (uint64_t *)(v11 + 16 * v10);
    v14 = 24 * v10;
    while (1)
    {
      if ((unint64_t)v10 >= *(_QWORD *)(a3 + 16))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if ((unint64_t)v10 >= *(_QWORD *)(v4 + 16))
        goto LABEL_35;
      v15 = *v13;
      v32 = *(v13 - 1);
      v17 = *(_QWORD *)(v4 + v14 + 32);
      v16 = *(_QWORD *)(v4 + v14 + 40);
      v18 = *(_BYTE *)(v4 + v14 + 48);
      v19 = *(_QWORD *)(v34 + 16);
      if ((uint64_t)v19 < v12)
        break;
      sub_24772C91C();
      result = swift_retain();
      if (v9 >= v19)
        goto LABEL_36;
      v20 = v34 + 32 + 40 * v9;
      swift_release();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)v20 = v32;
      *(_QWORD *)(v20 + 8) = v15;
      *(_QWORD *)(v20 + 16) = v17;
      *(_QWORD *)(v20 + 24) = v16;
      ++v9;
      *(_BYTE *)(v20 + 32) = v18;
      v12 = v31;
      if (v9 < v31)
      {
        a3 = v28;
        v4 = v29;
        goto LABEL_20;
      }
      v9 = 0;
      ++v10;
      v13 += 2;
      v14 += 24;
      v4 = v29;
      a3 = v28;
      if (v10 >= v30)
      {
        swift_release();
        swift_release_n();
        goto LABEL_23;
      }
    }
    v21 = *(_QWORD *)(v34 + 24);
    sub_24772C91C();
    result = swift_retain();
    if (v19 >= v21 >> 1)
      result = sub_2476B2FB8(v21 > 1, v19 + 1, 1);
    *(_QWORD *)(v34 + 16) = v19 + 1;
    v22 = v34 + 40 * v19;
    *(_QWORD *)(v22 + 32) = v32;
    *(_QWORD *)(v22 + 40) = v15;
    *(_QWORD *)(v22 + 48) = v17;
    *(_QWORD *)(v22 + 56) = v16;
    *(_BYTE *)(v22 + 64) = v18;
    a3 = v28;
    v4 = v29;
    v12 = v31;
LABEL_20:
    ++v10;
    v11 = v27;
    if (v10 < v30)
      continue;
    break;
  }
  swift_release();
  swift_release();
  swift_release();
  if (!v9)
  {
LABEL_23:
    swift_release();
    swift_release();
    swift_release();
    return v8;
  }
  v23 = *(_QWORD *)(v34 + 16);
  v33 = MEMORY[0x24BEE4AF8];
  result = sub_2476B2FB8(0, v23, 0);
  if (v23 < v9)
    goto LABEL_38;
  if ((v9 & 0x8000000000000000) == 0)
  {
    v24 = *(_QWORD *)(v34 + 16);
    if (v24 >= v9 && v24 >= v23)
    {
      v26 = swift_retain();
      sub_2476F3B10(v26, v34 + 32, v9, (2 * v23) | 1);
      swift_release();
      swift_release();
      swift_release();
      sub_2476F3B10(v34, v34 + 32, 0, (2 * v9) | 1);
      return v33;
    }
    goto LABEL_40;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2476F1100(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = v1;
  *(_BYTE *)(v2 + 89) = a1;
  return swift_task_switch();
}

#error "2476F11AC: call analysis failed (funcsize=69)"

uint64_t sub_2476F1244()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476F1298(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = v1;
  *(_BYTE *)(v2 + 89) = a1;
  return swift_task_switch();
}

#error "2476F1344: call analysis failed (funcsize=69)"

uint64_t sub_2476F13DC(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = v1;
  *(_BYTE *)(v2 + 89) = a1;
  return swift_task_switch();
}

uint64_t sub_2476F13F8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_33_7(22);
  OUTLINED_FUNCTION_29_8((uint64_t)"PRAGMA journal_mode = ");
  if (v1)
    OUTLINED_FUNCTION_2_11();
  v2 = *(unsigned __int8 *)(v0 + 89);
  v3 = OUTLINED_FUNCTION_9_11();
  return ((uint64_t (*)(void *))((char *)&loc_2476F145C + dword_2476F15A4[v2]))(v3);
}

uint64_t sub_2476F15BC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_3_14(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476F1610()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476F161C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = v1;
  *(_BYTE *)(v2 + 89) = a1;
  return swift_task_switch();
}

#error "2476F16C8: call analysis failed (funcsize=69)"

void sub_2476F1760()
{
  qword_2576C15F8 = -1;
}

uint64_t sub_2476F1770(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[92] = v1;
  v2[91] = a1;
  v2[93] = *(_QWORD *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  v2[94] = swift_task_alloc();
  swift_defaultActor_initialize();
  *(_WORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 128) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 136) = 0;
  sub_2476F06C4(20, 0, 0, 1, v1 + 144);
  _s9StatementCMa();
  sub_2476C1678();
  *(_QWORD *)(v1 + 216) = sub_24772C904();
  *(_QWORD *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 232) = 0;
  *(_QWORD *)(v1 + 240) = 0;
  *(_BYTE *)(v1 + 248) = 1;
  v2[95] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_location;
  return OUTLINED_FUNCTION_3_2();
}

const char *sub_2476F1860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  char v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  sqlite3 *v13;
  uint64_t v14;
  const char *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  char v28;
  _QWORD *v29;
  uint64_t (*v30)(char);
  int v31;
  char v32;

  v1 = *(_QWORD *)(v0 + 728);
  sub_24772B4E0();
  v2 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_options;
  *(_QWORD *)(v0 + 768) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_options;
  v3 = (_BYTE *)(v1 + v2);
  v4 = *(_BYTE *)(v1 + v2);
  v5 = *(_BYTE *)(v1 + v2 + 4);
  v6 = *(unsigned __int8 *)(v1 + v2 + 11);
  if ((v4 & 1) == 0)
  {
    v7 = 1;
    if ((v5 & 1) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  if ((v3[1] & 1) != 0)
  {
    v7 = 6;
    v8 = 14;
  }
  else
  {
    v7 = 2;
    v8 = 10;
  }
  if (v3[2])
    v7 = v8;
  if ((v5 & 1) != 0)
LABEL_5:
    v7 |= 0x10u;
LABEL_6:
  v9 = *(_QWORD *)(v0 + 736);
  v10 = (v7 | (v6 << 20)) + 0x100000;
  v11 = sub_24772CA78();
  OUTLINED_FUNCTION_132();
  swift_beginAccess();
  v12 = sqlite3_open_v2((const char *)(v11 + 32), (sqlite3 **)(v9 + 136), v10, 0);
  swift_endAccess();
  OUTLINED_FUNCTION_55_0();
  v13 = *(sqlite3 **)(v9 + 136);
  if (v12)
  {
    v14 = sqlite3_extended_errcode(v13);
    result = sqlite3_errstr(v12);
    if (result)
    {
      v16 = *(_QWORD *)(v0 + 736);
      v17 = sub_24772CB08();
      v19 = v18;
      result = sqlite3_errmsg(*(sqlite3 **)(v16 + 136));
      if (result)
      {
        v20 = *(_QWORD *)(v0 + 736);
        v21 = sub_24772CB08();
        v23 = v22;
        sub_2476BB2C0();
        OUTLINED_FUNCTION_36();
        v25 = v24;
        sub_247716788(v14, (uint64_t)&v31);
        v26 = v31;
        v27 = v32;
        *(_DWORD *)v25 = v14;
        *(_DWORD *)(v25 + 4) = v26;
        *(_BYTE *)(v25 + 8) = v27;
        *(_QWORD *)(v25 + 16) = v17;
        *(_QWORD *)(v25 + 24) = v19;
        *(_QWORD *)(v25 + 32) = v21;
        *(_QWORD *)(v25 + 40) = v23;
        swift_willThrow();
        sqlite3_close_v2(*(sqlite3 **)(v20 + 136));
        OUTLINED_FUNCTION_55_0();
        swift_release();
        OUTLINED_FUNCTION_48_8();
        return (const char *)(*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sqlite3_extended_result_codes(v13, 1);
    *(_BYTE *)(v0 + 89) = v3[6];
    *(_BYTE *)(v0 + 90) = v3[7];
    *(_BYTE *)(v0 + 91) = v3[8];
    v30 = (uint64_t (*)(char))((char *)&dword_2576B8D10 + dword_2576B8D10);
    v28 = v3[9];
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 776) = v29;
    OUTLINED_FUNCTION_65_2(v29, (uint64_t)sub_2476F1AB0);
    return (const char *)v30(v28);
  }
  return result;
}

uint64_t sub_2476F1AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v0 + 784) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 792) = v5;
    *v5 = v2;
    v5[1] = sub_2476F1B24;
    v6 = OUTLINED_FUNCTION_45_9(*(unsigned __int8 *)(v0 + 89));
    return OUTLINED_FUNCTION_5_6(v6, v7);
  }
}

uint64_t sub_2476F1B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v0 + 800) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 808) = v5;
    *v5 = v2;
    v5[1] = sub_2476F1BC8;
    v6 = OUTLINED_FUNCTION_45_9(*(unsigned __int8 *)(v0 + 90));
    return OUTLINED_FUNCTION_5_6(v6, v7);
  }
}

uint64_t sub_2476F1B98()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_48_8();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476F1BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v0 + 816) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 824) = v5;
    *v5 = v2;
    v5[1] = sub_2476F1C6C;
    v6 = OUTLINED_FUNCTION_45_9(*(unsigned __int8 *)(v0 + 91));
    return OUTLINED_FUNCTION_5_6(v6, v7);
  }
}

uint64_t sub_2476F1C3C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_48_8();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476F1C6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 832) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476F1CC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_48_8();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476F1CF4()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(*(_QWORD *)(v0 + 728) + *(_QWORD *)(v0 + 768));
  *(_BYTE *)(*(_QWORD *)(v0 + 736) + 112) = (v1 & 1) == 0;
  if ((v1 & 1) == 0)
    return OUTLINED_FUNCTION_3_2();
  *(_QWORD *)(v0 + 536) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 544) = 0x8000000247735900;
  *(_BYTE *)(v0 + 568) = 0;
  *(_OWORD *)(v0 + 552) = 0u;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 840) = v2;
  OUTLINED_FUNCTION_65_2(v2, (uint64_t)sub_2476F1DE0);
  return sub_2476B8EC8(v0 + 536);
}

uint64_t sub_2476F1DB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_48_8();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476F1DE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  OUTLINED_FUNCTION_16(&v3);
  if (!v0)
    return OUTLINED_FUNCTION_5();
  swift_release();
  OUTLINED_FUNCTION_23();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_2476F1E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  *(_BYTE *)(v1 + 113) = *(_BYTE *)(v2 + *(_QWORD *)(v0 + 768) + 3);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_2476F442C;
  *(_QWORD *)(v3 + 24) = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 144) = sub_2476F4458;
  *(_QWORD *)(v1 + 152) = v3;
  swift_retain();
  sub_2476BF020(v4);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_attachedLocations);
  OUTLINED_FUNCTION_0_6();
  v6 = *v5;
  *(_QWORD *)(v0 + 848) = *v5;
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 856) = v7;
  if (!v7)
  {
    *(_QWORD *)(v0 + 872) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_scalarFunctions;
    return OUTLINED_FUNCTION_28_7();
  }
  v8 = *(_QWORD *)(v0 + 752);
  v9 = *(_QWORD *)(v0 + 744);
  v10 = *(_DWORD *)(v9 + 80);
  *(_DWORD *)(v0 + 92) = v10;
  *(_QWORD *)(v0 + 864) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v0 + 880) = 0;
  v11 = v6 + ((v10 + 32) & ~(unint64_t)v10);
  sub_24772C91C();
  sub_2476F4484(v11, v8);
  OUTLINED_FUNCTION_59_7();
  v13 = v12;
  *(_QWORD *)(v0 + 336) = 0xD000000000000010;
  *(_QWORD *)(v0 + 344) = 0x8000000247735920;
  *(_BYTE *)(v0 + 408) = 0;
  v14 = *(_QWORD *)(v12 + 16);
  if (v14 >= *(_QWORD *)(v12 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v33;
  }
  *(_QWORD *)(v13 + 16) = v14 + 1;
  OUTLINED_FUNCTION_31_7();
  v15 = sub_247715484();
  *(_QWORD *)(v0 + 480) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 488) = &protocol witness table for String;
  *(_QWORD *)(v0 + 456) = v15;
  *(_QWORD *)(v0 + 464) = v16;
  sub_2476B3F38(v0 + 456, v0 + 176);
  *(_BYTE *)(v0 + 248) = 1;
  v17 = *(_QWORD *)(v13 + 16);
  v18 = *(_QWORD *)(v13 + 24);
  sub_24772C91C();
  if (v17 >= v18 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v34;
  }
  *(_QWORD *)(v13 + 16) = v17 + 1;
  OUTLINED_FUNCTION_26_6(v13 + 80 * v17);
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = 542327072;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  *(_BYTE *)(v0 + 88) = 0;
  if ((OUTLINED_FUNCTION_71_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v35;
  }
  v19 = *(_QWORD *)(v13 + 16);
  if (v19 >= *(_QWORD *)(v13 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v36;
  }
  v20 = *(uint64_t **)(v0 + 752);
  *(_QWORD *)(v13 + 16) = v19 + 1;
  OUTLINED_FUNCTION_31_7();
  v21 = *v20;
  v22 = v20[1];
  *(_QWORD *)(v0 + 440) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 448) = &protocol witness table for String;
  *(_QWORD *)(v0 + 416) = v21;
  *(_QWORD *)(v0 + 424) = v22;
  sub_2476B3F38(v0 + 416, v0 + 256);
  *(_BYTE *)(v0 + 328) = 1;
  v23 = *(_QWORD *)(v13 + 16);
  v24 = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain_n();
  if (v23 >= v24 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v37;
  }
  *(_QWORD *)(v13 + 16) = v23 + 1;
  OUTLINED_FUNCTION_62_3(v13 + 80 * v23);
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  OUTLINED_FUNCTION_53_1();
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  *(_BYTE *)(v0 + 168) = 0;
  if ((OUTLINED_FUNCTION_71_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v38;
  }
  v25 = *(_QWORD *)(v13 + 16);
  if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v13 = v39;
  }
  *(_QWORD *)(v13 + 16) = v25 + 1;
  OUTLINED_FUNCTION_23_6(v13 + 80 * v25);
  *(_QWORD *)(v0 + 576) = v13;
  *(_OWORD *)(v0 + 584) = 0u;
  *(_QWORD *)(v0 + 600) = MEMORY[0x24BEE4AF8];
  result = sub_247728928();
  v27 = *(_QWORD *)(v0 + 600);
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v0 + 888) = v28;
  if (v28)
  {
    v29 = *(_QWORD *)(v0 + 576);
    v30 = *(_QWORD *)(v0 + 584);
    v31 = *(_QWORD *)(v0 + 592);
LABEL_21:
    *(_QWORD *)(v0 + 920) = v27;
    *(_QWORD *)(v0 + 912) = v31;
    *(_QWORD *)(v0 + 904) = v30;
    *(_QWORD *)(v0 + 896) = v29;
    *(_QWORD *)(v0 + 496) = v29;
    *(_QWORD *)(v0 + 504) = v30;
    *(_QWORD *)(v0 + 512) = v31;
    *(_QWORD *)(v0 + 520) = v27;
    *(_BYTE *)(v0 + 528) = v28 != 0;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 928) = v32;
    OUTLINED_FUNCTION_65_2(v32, (uint64_t)sub_2476F26F4);
    return OUTLINED_FUNCTION_29_11(v0 + 496);
  }
  v30 = *(_QWORD *)(v0 + 592);
  if (v30)
  {
    v29 = *(_QWORD *)(v0 + 584);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = 0;
    v27 = 0;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476F22A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  sqlite3 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  sqlite3 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;

  v3 = (_QWORD *)(*(_QWORD *)(v0 + 728) + *(_QWORD *)(v0 + 872));
  OUTLINED_FUNCTION_0_6();
  v4 = *v3 + 64;
  OUTLINED_FUNCTION_47_7();
  v7 = v6 & v5;
  v9 = (unint64_t)(63 - v8) >> 6;
  result = OUTLINED_FUNCTION_45();
  v11 = 0;
  if (!v7)
    goto LABEL_3;
LABEL_2:
  for (v7 &= v7 - 1; ; v7 = (v13 - 1) & v13)
  {
    v15 = *(sqlite3 **)(*(_QWORD *)(v0 + 736) + 136);
    if (!v15)
      goto LABEL_63;
    OUTLINED_FUNCTION_58_4();
    v16 = sub_247705000(v15);
    OUTLINED_FUNCTION_77_2(v16, v17, v18, v19);
    if (v50 != 1 && (v50 != 14 || v49 != 16))
      break;
    result = OUTLINED_FUNCTION_41();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      return result;
    }
    if (v12 >= v9)
      goto LABEL_29;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v11;
    if (!v13)
    {
      v11 = v12 + 1;
      if (v12 + 1 >= v9)
        goto LABEL_29;
      v13 = *(_QWORD *)(v4 + 8 * v11);
      if (!v13)
      {
        v11 = v12 + 2;
        if (v12 + 2 >= v9)
          goto LABEL_29;
        v13 = *(_QWORD *)(v4 + 8 * v11);
        if (!v13)
        {
          v14 = v12 + 3;
          if (v14 >= v9)
          {
LABEL_29:
            v27 = *(_QWORD *)(v0 + 728);
            OUTLINED_FUNCTION_23();
            v28 = (_QWORD *)(v27 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions);
            OUTLINED_FUNCTION_0_6();
            v29 = *v28 + 64;
            OUTLINED_FUNCTION_47_7();
            v32 = v31 & v30;
            v34 = (unint64_t)(63 - v33) >> 6;
            result = OUTLINED_FUNCTION_45();
            v9 = 0;
            if (!v32)
              goto LABEL_31;
LABEL_30:
            for (v32 &= v32 - 1; ; v32 = (v36 - 1) & v36)
            {
              v38 = *(sqlite3 **)(*(_QWORD *)(v0 + 736) + 136);
              if (!v38)
                break;
              OUTLINED_FUNCTION_58_4();
              v39 = sub_24770F3CC(v38);
              OUTLINED_FUNCTION_77_2(v39, v40, v41, v42);
              if (v50 != 1 && (v50 != 14 || v49 != 16))
              {
                v44 = OUTLINED_FUNCTION_97_1();
                result = (uint64_t)sqlite3_errstr(v2);
                if (!result)
                  goto LABEL_67;
                v26 = sub_24772CB08();
                result = (uint64_t)OUTLINED_FUNCTION_76_3();
                if (!result)
                  goto LABEL_68;
                OUTLINED_FUNCTION_69_4();
                OUTLINED_FUNCTION_93_1();
                OUTLINED_FUNCTION_36();
                v23 = v45;
                sub_247716788(v44, (uint64_t)&v49);
                v24 = v49;
                v25 = v50;
                *(_DWORD *)v23 = v44;
                goto LABEL_57;
              }
              result = OUTLINED_FUNCTION_41();
              if (v32)
                goto LABEL_30;
LABEL_31:
              v35 = v9 + 1;
              if (__OFADD__(v9, 1))
                goto LABEL_60;
              if (v35 >= v34)
              {
LABEL_58:
                v46 = *(_QWORD *)(v0 + 736);
                OUTLINED_FUNCTION_23();
                *(_QWORD *)(v46 + 128) = &off_2518D9948;
                swift_unknownObjectWeakAssign();
                swift_release();
                swift_task_dealloc();
                return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 736));
              }
              v36 = *(_QWORD *)(v29 + 8 * v35);
              ++v9;
              if (!v36)
              {
                v9 = v35 + 1;
                if (v35 + 1 >= v34)
                  goto LABEL_58;
                v36 = *(_QWORD *)(v29 + 8 * v9);
                if (!v36)
                {
                  v9 = v35 + 2;
                  if (v35 + 2 >= v34)
                    goto LABEL_58;
                  v36 = *(_QWORD *)(v29 + 8 * v9);
                  if (!v36)
                  {
                    v37 = v35 + 3;
                    if (v37 >= v34)
                      goto LABEL_58;
                    v36 = *(_QWORD *)(v29 + 8 * v37);
                    if (!v36)
                    {
                      while (1)
                      {
                        v9 = v37 + 1;
                        if (__OFADD__(v37, 1))
                          goto LABEL_62;
                        if (v9 >= v34)
                          goto LABEL_58;
                        v36 = *(_QWORD *)(v29 + 8 * v9);
                        ++v37;
                        if (v36)
                          goto LABEL_44;
                      }
                    }
                    v9 = v37;
                  }
                }
              }
LABEL_44:
              ;
            }
            goto LABEL_64;
          }
          v13 = *(_QWORD *)(v4 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              v11 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_61;
              if (v11 >= v9)
                goto LABEL_29;
              v13 = *(_QWORD *)(v4 + 8 * v11);
              ++v14;
              if (v13)
                goto LABEL_16;
            }
          }
          v11 = v14;
        }
      }
    }
LABEL_16:
    ;
  }
  v21 = OUTLINED_FUNCTION_97_1();
  result = (uint64_t)sqlite3_errstr(v2);
  if (!result)
    goto LABEL_65;
  v47 = sub_24772CB08();
  result = (uint64_t)OUTLINED_FUNCTION_76_3();
  if (!result)
    goto LABEL_66;
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_93_1();
  OUTLINED_FUNCTION_36();
  v23 = v22;
  sub_247716788(v21, (uint64_t)&v49);
  v24 = v49;
  v25 = v50;
  *(_DWORD *)v23 = v21;
  v26 = v47;
LABEL_57:
  *(_DWORD *)(v23 + 4) = v24;
  *(_BYTE *)(v23 + 8) = v25;
  *(_QWORD *)(v23 + 16) = v26;
  *(_QWORD *)(v23 + 24) = v9;
  *(_QWORD *)(v23 + 32) = v1;
  *(_QWORD *)(v23 + 40) = v48;
  swift_willThrow();
  OUTLINED_FUNCTION_41();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2476F26F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;

  v46 = *v1;
  v2 = v46;
  v3 = OUTLINED_FUNCTION_16(&v46);
  v7 = *(_QWORD *)(v2 + 888);
  if (v0)
  {
    v8 = *(_QWORD *)(v2 + 752);
    swift_release();
    v9 = swift_release();
    OUTLINED_FUNCTION_53_8(v9, v10, v11, v12, v7 != 0);
    sub_2476F44C8(v8);
    OUTLINED_FUNCTION_94_2();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v1[1])();
  }
  v14 = *(_QWORD *)(v2 + 856);
  v15 = *(_QWORD *)(v2 + 752);
  v16 = v7 != 0;
  v17 = *(_QWORD *)(v2 + 880) + 1;
  OUTLINED_FUNCTION_53_8(v3, v4, v5, v6, v16);
  sub_2476F44C8(v15);
  if (v17 == v14)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 872) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_scalarFunctions;
    return OUTLINED_FUNCTION_28_7();
  }
  v45 = v1;
  v18 = *(_QWORD *)(v2 + 880) + 1;
  *(_QWORD *)(v2 + 880) = v18;
  sub_2476F4484(*(_QWORD *)(v2 + 848)+ ((*(unsigned __int8 *)(v2 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 92))+ *(_QWORD *)(v2 + 864) * v18, *(_QWORD *)(v2 + 752));
  OUTLINED_FUNCTION_59_7();
  v20 = v19;
  *(_QWORD *)(v2 + 336) = 0xD000000000000010;
  *(_QWORD *)(v2 + 344) = 0x8000000247735920;
  *(_BYTE *)(v2 + 408) = 0;
  v21 = *(_QWORD *)(v19 + 16);
  if (v21 >= *(_QWORD *)(v19 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v38;
  }
  *(_QWORD *)(v20 + 16) = v21 + 1;
  OUTLINED_FUNCTION_31_7();
  v22 = sub_247715484();
  *(_QWORD *)(v2 + 480) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 488) = &protocol witness table for String;
  *(_QWORD *)(v2 + 456) = v22;
  *(_QWORD *)(v2 + 464) = v23;
  sub_2476B3F38(v2 + 456, v2 + 176);
  *(_BYTE *)(v2 + 248) = 1;
  v24 = *(_QWORD *)(v20 + 16);
  v25 = *(_QWORD *)(v20 + 24);
  sub_24772C91C();
  if (v24 >= v25 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v39;
  }
  *(_QWORD *)(v20 + 16) = v24 + 1;
  OUTLINED_FUNCTION_62_3(v20 + 80 * v24);
  __swift_destroy_boxed_opaque_existential_1(v2 + 456);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = 542327072;
  *(_QWORD *)(v2 + 24) = 0xE400000000000000;
  *(_BYTE *)(v2 + 88) = 0;
  if ((OUTLINED_FUNCTION_71_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v40;
  }
  v26 = *(_QWORD *)(v20 + 16);
  if (v26 >= *(_QWORD *)(v20 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v41;
  }
  v27 = *(uint64_t **)(v2 + 752);
  *(_QWORD *)(v20 + 16) = v26 + 1;
  sub_2476E18A8((const void *)(v2 + 16), (void *)(v20 + 80 * v26 + 32));
  v28 = *v27;
  v29 = v27[1];
  *(_QWORD *)(v2 + 440) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 448) = &protocol witness table for String;
  *(_QWORD *)(v2 + 416) = v28;
  *(_QWORD *)(v2 + 424) = v29;
  sub_2476B3F38(v2 + 416, v2 + 256);
  *(_BYTE *)(v2 + 328) = 1;
  v30 = *(_QWORD *)(v20 + 16);
  v31 = *(_QWORD *)(v20 + 24);
  swift_bridgeObjectRetain_n();
  if (v30 >= v31 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v42;
  }
  *(_QWORD *)(v20 + 16) = v30 + 1;
  OUTLINED_FUNCTION_23_6(v20 + 80 * v30);
  __swift_destroy_boxed_opaque_existential_1(v2 + 416);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0xE000000000000000;
  *(_BYTE *)(v2 + 168) = 0;
  if ((OUTLINED_FUNCTION_71_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v43;
  }
  v32 = *(_QWORD *)(v20 + 16);
  if (v32 >= *(_QWORD *)(v20 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v20 = v44;
  }
  *(_QWORD *)(v20 + 16) = v32 + 1;
  OUTLINED_FUNCTION_26_6(v20 + 80 * v32);
  *(_QWORD *)(v2 + 576) = v20;
  *(_OWORD *)(v2 + 584) = 0u;
  *(_QWORD *)(v2 + 600) = MEMORY[0x24BEE4AF8];
  sub_247728928();
  result = *(_QWORD *)(v2 + 600);
  v33 = *(_QWORD *)(result + 16);
  *(_QWORD *)(v2 + 888) = v33;
  if (v33)
  {
    v34 = *(_QWORD *)(v2 + 576);
    v35 = *(_QWORD *)(v2 + 584);
    v36 = *(_QWORD *)(v2 + 592);
LABEL_23:
    *(_QWORD *)(v2 + 920) = result;
    *(_QWORD *)(v2 + 912) = v36;
    *(_QWORD *)(v2 + 904) = v35;
    *(_QWORD *)(v2 + 896) = v34;
    *(_QWORD *)(v2 + 496) = v34;
    *(_QWORD *)(v2 + 504) = v35;
    *(_QWORD *)(v2 + 512) = v36;
    *(_QWORD *)(v2 + 520) = result;
    *(_BYTE *)(v2 + 528) = v33 != 0;
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 928) = v37;
    *v37 = v45;
    v37[1] = sub_2476F26F4;
    return OUTLINED_FUNCTION_29_11(v2 + 496);
  }
  v35 = *(_QWORD *)(v2 + 592);
  if (v35)
  {
    v34 = *(_QWORD *)(v2 + 584);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_132();
    v36 = 0;
    result = 0;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_2476F2B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2476F2E5C(a4, (uint64_t (*)(void))sub_2476F4504);
}

uint64_t sub_2476F2BB8()
{
  uint64_t v0;
  sqlite3 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  _QWORD v16[5];

  OUTLINED_FUNCTION_0_6();
  v1 = *(sqlite3 **)(v0 + 136);
  if (!v1)
  {
LABEL_13:
    sub_2476F2F74(v0 + 120);
    sub_2476BF020(*(_QWORD *)(v0 + 144));
    OUTLINED_FUNCTION_54_1();
    swift_release();
    OUTLINED_FUNCTION_33();
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    return v0;
  }
  OUTLINED_FUNCTION_0_6();
  v2 = OUTLINED_FUNCTION_0_6();
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  MEMORY[0x24BDAC7A8](v2);
  _s9StatementCMa();
  v16[0] = v3;
  v16[1] = v4;
  v16[2] = v5;
  v16[3] = sub_2476F4424;
  v16[4] = swift_getKeyPath();
  v14 = *(unsigned __int8 *)(v0 + 112);
  v15 = *(unsigned __int8 *)(v0 + 113);
  swift_retain();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_54_7();
  v6 = sub_24772C91C();
  sub_247703DEC(v6);
  v8 = v7;
  OUTLINED_FUNCTION_132();
  swift_retain();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_36_1();
  result = sub_2476C9794((uint64_t)v16);
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
LABEL_10:
    v12 = OUTLINED_FUNCTION_98_0();
    if (((v15 ^ 1 | v14) & 1) == 0)
    {
      v13 = OUTLINED_FUNCTION_57_6(v12, "PRAGMA analysis_limit=400");
      OUTLINED_FUNCTION_57_6(v13, "PRAGMA optimize");
    }
    sqlite3_close_v2(v1);
    swift_release();
    OUTLINED_FUNCTION_55_0();
    swift_release();
    OUTLINED_FUNCTION_54_1();
    goto LABEL_13;
  }
  sub_24772C91C();
  v10 = sub_24772D390();
  result = OUTLINED_FUNCTION_98_0();
  if (!v10)
    goto LABEL_10;
LABEL_4:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        MEMORY[0x24958151C](i, v8);
      else
        swift_retain();
      sub_2476BF974();
      OUTLINED_FUNCTION_33();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2476F2E14()
{
  sub_2476F2BB8();
  return swift_defaultActor_deallocate();
}

uint64_t _s10ConnectionCMa()
{
  return objc_opt_self();
}

ValueMetadata *_s10ConnectionC6LimitsVMa()
{
  return &_s10ConnectionC6LimitsVN;
}

void sub_2476F2E5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  sqlite3 **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  int v18;
  char v19;
  int v20;
  char v21;

  v5 = a2();
  if (v2)
    goto LABEL_10;
  v6 = v5;
  sub_247716788(v5, (uint64_t)&v18);
  if (v19 == 1)
    goto LABEL_10;
  if (v19 == 14 && v18 == 16)
    goto LABEL_10;
  v8 = (sqlite3 **)(a1 + 136);
  OUTLINED_FUNCTION_8_12();
  v9 = sqlite3_extended_errcode(*(sqlite3 **)(a1 + 136));
  if (sqlite3_errstr(v6))
  {
    v10 = sub_24772CB08();
    v12 = v11;
    if (sqlite3_errmsg(*v8))
    {
      v13 = sub_24772CB08();
      OUTLINED_FUNCTION_86_0();
      OUTLINED_FUNCTION_36();
      v15 = v14;
      sub_247716788(v9, (uint64_t)&v20);
      v16 = v20;
      v17 = v21;
      *(_DWORD *)v15 = v9;
      *(_DWORD *)(v15 + 4) = v16;
      *(_BYTE *)(v15 + 8) = v17;
      *(_QWORD *)(v15 + 16) = v10;
      *(_QWORD *)(v15 + 24) = v12;
      *(_QWORD *)(v15 + 32) = v13;
      *(_QWORD *)(v15 + 40) = v3;
      swift_willThrow();
LABEL_10:
      OUTLINED_FUNCTION_24_10();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2476F2F50()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2476F2F5C()
{
  return sub_2476F2F50();
}

uint64_t sub_2476F2F74(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_2476F2F98(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  char v13;

  sub_24772D600();
  sub_24772CAC0();
  result = sub_24772D624();
  if (!__OFSUB__(1 << *a4, 1))
  {
    sub_24772C61C();
    result = sub_24772C640();
    v9 = result;
    if ((v10 & 1) != 0)
      return v9;
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= *(_QWORD *)(a3 + 16))
        goto LABEL_13;
      v11 = (_QWORD *)(a3 + 32 + 16 * v9);
      if ((*v11 != a1 || v11[1] != a2) && (sub_24772D4F8() & 1) == 0)
      {
        sub_24772C658();
        result = sub_24772C640();
        v9 = result;
        if ((v13 & 1) == 0)
          continue;
      }
      return v9;
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2476F3100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v15;
  char v16;
  _QWORD *v17;

  sub_24772D600();
  sub_24772CAC0();
  result = sub_24772D624();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_24772C61C();
    v10 = sub_24772C640();
    v11 = v10;
    if ((v12 & 1) == 0)
    {
      v13 = (_QWORD *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if ((sub_24772D4F8() & 1) != 0)
            break;
          sub_24772C658();
          v15 = sub_24772C640();
          v11 = v15;
          if ((v16 & 1) != 0)
            break;
          v17 = (_QWORD *)(a3 + 16 * v15);
        }
        while (*v17 != a1 || v17[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

void sub_2476F3260(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  sub_24772C91C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_91_2(0, *(_QWORD *)(v7 + 16) + 1);
    v7 = *v6;
  }
  v11 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    OUTLINED_FUNCTION_91_2(v10 > 1, v11 + 1);
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v11 + 1;
  v12 = v7 + 16 * v11;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v3[1] = v7;
  v13 = *(_QWORD *)(v7 + 16);
  v14 = *v3;
  if (*v3)
  {
    OUTLINED_FUNCTION_0_6();
    if (MEMORY[0x2495809D0](*(_QWORD *)(v14 + 16) & 0x3FLL) < (uint64_t)v13)
    {
      v15 = *(_QWORD *)(v14 + 24) & 0x3FLL;
      if (v13 <= 0xF && v15 == 0)
      {
        OUTLINED_FUNCTION_54_1();
        *v3 = 0;
        return;
      }
      goto LABEL_15;
    }
    sub_2476F33AC();
    if (*v3)
      sub_2476F33E8();
    else
      __break(1u);
  }
  else if (v13 > 0xF)
  {
    v15 = 0;
LABEL_15:
    v17 = MEMORY[0x2495809F4](v13);
    sub_2476F37AC(v17, v15);
  }
}

void sub_2476F33AC()
{
  uint64_t v0;
  _QWORD *v1;

  if (!*v1 || swift_isUniquelyReferenced_native())
    goto LABEL_5;
  if (*v1)
  {
    sub_24772C67C();
    OUTLINED_FUNCTION_75_3();
    *v1 = v0;
LABEL_5:
    OUTLINED_FUNCTION_35();
    return;
  }
  __break(1u);
}

uint64_t sub_2476F33E8()
{
  return sub_24772C634();
}

uint64_t sub_2476F344C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 1)
  {
    v4 = *(_QWORD *)(a3 + 16);
    if ((v4 - v3) / 2 > result)
      OUTLINED_FUNCTION_88_1();
    if (!__OFSUB__(v4, a2))
      OUTLINED_FUNCTION_88_1();
LABEL_9:
    __break(1u);
    JUMPOUT(0x2476F3798);
  }
  return result;
}

void sub_2476F37AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = a2;
  if (a2 <= a1)
    a2 = a1;
  sub_2476F37E4(v3[1], a2, 0, v4);
  OUTLINED_FUNCTION_75_3();
  *v3 = v2;
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476F37E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x2495809F4](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x249580A00]();
    sub_2476F3868(a1, (_QWORD *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_2476F3868(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      sub_24772D600();
      sub_24772C91C();
      sub_24772CAC0();
      result = sub_24772D624();
      if (__OFSUB__(1 << *a2, 1))
        break;
      v5 = sub_24772C61C();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_24772C658();
      }
      result = sub_24772C64C();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2476F3978(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

void sub_2476F39D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 < 0)
    goto LABEL_25;
  v3 = v2;
  sub_247712834(a1);
  v7 = *v2;
  v6 = v2[1];
  if (*v2)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v7 + 16) & 0x3FLL;
  }
  else
  {
    v8 = 0;
  }
  v9 = MEMORY[0x2495809F4](a1);
  v10 = v9;
  if ((a2 & 1) != 0)
    v11 = v9;
  else
    v11 = 0;
  if (v7 && (a2 & 1) == 0)
  {
    swift_beginAccess();
    v11 = *(_QWORD *)(v7 + 24) & 0x3FLL;
  }
  if (v8 < v10)
  {
    v12 = v10;
LABEL_18:
    sub_2476F37AC(v12, v11);
    return;
  }
  if (v11 > v10)
    v10 = v11;
  v12 = MEMORY[0x2495809F4](*(_QWORD *)(v6 + 16));
  if (v12 <= v10)
    v12 = v10;
  if (v12 < v8)
    goto LABEL_18;
  sub_2476F33AC();
  v13 = *v3;
  if (!v13)
  {
    if (!v11)
      return;
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v13 + 24) & 0x3FLL) != v11)
    *(_QWORD *)(v13 + 24) = *(_QWORD *)(v13 + 24) & 0xFFFFFFFFFFFFFFC0 | v11 & 0x3F;
}

void sub_2476F3B10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v13 = *(_QWORD *)(v7 + 24) >> 1, v13 < v9))
  {
    if (v8 <= v9)
      v14 = v8 + v6;
    else
      v14 = v8;
    sub_2476B2FB8(isUniquelyReferenced_nonNull_native, v14, 1);
    v7 = *v4;
    v13 = *(_QWORD *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_16:
      swift_unknownObjectRelease();
      *v4 = v7;
      return;
    }
    __break(1u);
  }
  if (v13 - *(_QWORD *)(v7 + 16) < v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_2476B2308(a2 + 40 * a3, v6);
  if (v6 <= 0)
    goto LABEL_16;
  v15 = *(_QWORD *)(v7 + 16);
  v16 = __OFADD__(v15, v6);
  v17 = v15 + v6;
  if (!v16)
  {
    *(_QWORD *)(v7 + 16) = v17;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

void sub_2476F3C1C(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 16);
    v3 = v2 >= a1;
    v4 = v2 - a1;
    if (v3)
    {
      sub_2476F3C9C(v4, v2);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_2476F3C3C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
      result = sub_2476F4390(v2, -result, 0);
      if ((v3 & 1) != 0)
      {
LABEL_9:
        __break(1u);
        return result;
      }
      if (v2 >= result)
        return sub_2476F3F44(result, v2);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_2476F3C9C(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v2 + 1;
  v6 = *v2;
  if (!*v2)
    goto LABEL_10;
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v7 <= 0)
    return;
  v8 = v2;
  v9 = *(_QWORD *)(v2[1] + 16);
  v10 = v9 - v7;
  if (__OFSUB__(v9, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  if (v9 / 2 < v10)
  {
    swift_beginAccess();
    if ((*(_QWORD *)(v6 + 16) & 0x3FLL) == (*(_QWORD *)(v6 + 24) & 0x3FLL))
    {
      if ((v10 & 0x8000000000000000) == 0)
        goto LABEL_8;
    }
    else if (v10 >= sub_24772C670())
    {
LABEL_8:
      sub_2476F33AC();
      v11 = *v8;
      if (*v8)
      {
        swift_retain();
        sub_2476F3E18(v11 + 16, v11 + 32, (uint64_t)v8, a1, a2);
        swift_release();
LABEL_10:
        sub_2476F404C(a1, a2);
        return;
      }
      goto LABEL_19;
    }
  }
  sub_2476F404C(a1, a2);
  v12 = *v5;
  swift_beginAccess();
  v13 = *(_QWORD *)(v6 + 24) & 0x3FLL;
  if (*(_QWORD *)(v12 + 16) > 0xFuLL || v13)
  {
    v14 = MEMORY[0x2495809F4]();
    sub_2476F37AC(v14, v13);
  }
  else
  {
    swift_release();
    *v8 = 0;
  }
}

uint64_t sub_2476F3E18(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t v8;
  _QWORD *v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = *(_QWORD *)(a3 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 < a4 || (uint64_t)v8 < a5)
    goto LABEL_16;
  if (a5 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = (_QWORD *)result;
  v12 = a5 - a4;
  if (a5 == a4)
    return sub_2476F344C(a4, a5, v7);
  if (a5 > a4)
  {
    v19 = a5;
    swift_retain();
    v13 = (uint64_t *)(v7 + 16 * a4 + 40);
    while (1)
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      v16 = *(_QWORD *)(a3 + 8);
      sub_24772C91C();
      result = sub_2476F2F98(v14, v15, v16, v11);
      if ((v18 & 1) != 0)
        break;
      v13 += 2;
      sub_2476C2CE4(v17, v11, a2, a3);
      swift_bridgeObjectRelease();
      if (!--v12)
      {
        swift_release();
        v7 = *(_QWORD *)(a3 + 8);
        a5 = v19;
        return sub_2476F344C(a4, a5, v7);
      }
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2476F3F44(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_2476B2F60(isUniquelyReferenced_nonNull_native, v11, 1);
    v4 = *v2;
  }
  v12 = (char *)(v4 + 32 + 24 * v6);
  sub_2476B41F4();
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_16;
  v13 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_22;
  result = (uint64_t)sub_2476B1B04((char *)(v4 + 32 + 24 * a2), v13 - a2, v12);
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, v8);
  v16 = v14 - v7;
  if (!v15)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_16:
    *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2476F404C(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_2476B2F7C(isUniquelyReferenced_nonNull_native, v11, 1);
    v4 = *v2;
  }
  v12 = (char *)(v4 + 32 + 16 * v6);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_16;
  v13 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_22;
  result = (uint64_t)sub_2476B1B08((char *)(v4 + 32 + 16 * a2), v13 - a2, v12);
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, v8);
  v16 = v14 - v7;
  if (!v15)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_16:
    *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2476F4148(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (v8 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = result;
  v10 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v7;
  if (!isUniquelyReferenced_nonNull_native || v12 > *(_QWORD *)(v7 + 24) >> 1)
  {
    if (v8 <= v12)
      v16 = v8 + v11;
    else
      v16 = v8;
    sub_2476B2F60(isUniquelyReferenced_nonNull_native, v16, 1);
    v7 = *v5;
  }
  v17 = v7 + 32 + 24 * v9;
  sub_2476B41F4();
  result = swift_arrayDestroy();
  if (!v11)
    goto LABEL_16;
  v18 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v18, a2))
    goto LABEL_22;
  result = (uint64_t)sub_2476B1B04((char *)(v7 + 32 + 24 * a2), v18 - a2, (char *)(v17 + 24));
  v19 = *(_QWORD *)(v7 + 16);
  v20 = __OFADD__(v19, v11);
  v21 = v19 + v11;
  if (!v20)
  {
    *(_QWORD *)(v7 + 16) = v21;
LABEL_16:
    *(_QWORD *)v17 = a3;
    *(_QWORD *)(v17 + 8) = a4;
    *(_BYTE *)(v17 + 16) = a5 & 1;
    *v5 = v7;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2476F4280(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v6;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *(_QWORD *)(v6 + 24) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    OUTLINED_FUNCTION_91_2(isUniquelyReferenced_nonNull_native, v15);
    v6 = *v4;
  }
  v16 = v6 + 32 + 16 * v8;
  result = swift_arrayDestroy();
  if (!v10)
    goto LABEL_16;
  v17 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v17, a2))
    goto LABEL_22;
  result = (uint64_t)sub_2476B1B08((char *)(v6 + 32 + 16 * a2), v17 - a2, (char *)(v16 + 16));
  v18 = *(_QWORD *)(v6 + 16);
  v19 = __OFADD__(v18, v10);
  v20 = v18 + v10;
  if (!v19)
  {
    *(_QWORD *)(v6 + 16) = v20;
LABEL_16:
    *(_QWORD *)v16 = a3;
    *(_QWORD *)(v16 + 8) = a4;
    *v4 = v6;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2476F4390(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

uint64_t sub_2476F43DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getAtKeyPath();
  *a1 = v3;
  return result;
}

uint64_t sub_2476F4424@<X0>(_QWORD *a1@<X8>)
{
  return sub_2476F43DC(a1);
}

void sub_2476F442C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2476F2B6C(a1, a2, a3, v3);
}

uint64_t sub_2476F4434()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2476F4458(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], *a2);
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476F4484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SQLDatabase.AttachedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2476F44C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SQLDatabase.AttachedLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2476F4504()
{
  sub_2476BF974();
}

uint64_t sub_2476F4528@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v6 = (_QWORD *)result;
  v8 = *a4;
  v9 = a4[1];
  if (a3)
  {
    v10 = (_QWORD *)(a3 + 16);
    swift_retain();
    v11 = sub_2476F3100(v8, v9, (uint64_t)v6, a2, v10);
    v13 = v12;
    v15 = v14;
    result = swift_release();
    v16 = v13 & 1;
  }
  else
  {
    if (!a2)
      goto LABEL_11;
    result = *(_QWORD *)result;
    v17 = *v6 == v8 && v6[1] == v9;
    if (v17 || (result = OUTLINED_FUNCTION_43_8(), (result & 1) != 0))
    {
      v15 = 0;
      v11 = 0;
      v16 = 0;
      goto LABEL_12;
    }
    if (a2 == 1)
      goto LABEL_11;
    result = v6[2];
    v18 = result == v8 && v6[3] == v9;
    if (v18 || (result = OUTLINED_FUNCTION_43_8(), (result & 1) != 0))
    {
      v15 = 0;
      v16 = 0;
      v11 = 1;
      goto LABEL_12;
    }
    if (a2 == 2)
    {
LABEL_11:
      v15 = 0;
      v11 = 0;
      v16 = 1;
      goto LABEL_12;
    }
    result = v6[4];
    v19 = result == v8 && v6[5] == v9;
    if (v19 || (result = OUTLINED_FUNCTION_43_8(), (result & 1) != 0))
    {
      v15 = 0;
      v16 = 0;
      v11 = 2;
    }
    else
    {
      v20 = v6 + 7;
      v21 = 2;
      v22 = 3;
      while (1)
      {
        v16 = a2 == v22;
        if (a2 == v22)
        {
          v15 = 0;
          v11 = 0;
          goto LABEL_12;
        }
        v23 = v21 + 1;
        result = *(v20 - 1);
        if (result == v8 && *v20 == v9)
          break;
        v25 = v23;
        v11 = v22;
        result = sub_24772D4F8();
        v15 = 0;
        v22 = v11 + 1;
        v20 += 2;
        v21 = v25;
        if ((result & 1) != 0)
          goto LABEL_12;
      }
      v15 = 0;
      v11 = v23;
    }
  }
LABEL_12:
  *(_QWORD *)a5 = v11;
  *(_BYTE *)(a5 + 8) = v16;
  *(_QWORD *)(a5 + 16) = v15;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_13(uint64_t a1)
{
  return sub_2476B8EC8(a1);
}

void OUTLINED_FUNCTION_6_15(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 328) = a1;
  *(_QWORD *)(v4 + 336) = v2;
  *(_QWORD *)(v4 + 312) = v5;
  *(_QWORD *)(v4 + 320) = v3;
  *(_QWORD *)(v4 + 256) = v5;
  *(_QWORD *)(v4 + 264) = v3;
  *(_QWORD *)(v4 + 272) = a1;
  *(_QWORD *)(v4 + 280) = v2;
  *(_BYTE *)(v4 + 288) = v1 != 0;
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_9_11()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  return sub_2476E18A8(v1, (void *)(v0 + 80 * v3 + 32));
}

uint64_t OUTLINED_FUNCTION_15_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_DWORD *)v15 = v11;
  *(_DWORD *)(v15 + 4) = a9;
  *(_BYTE *)(v15 + 8) = a10;
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v14;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return sub_24772C640();
}

uint64_t OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_247716788(v9, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_29_11(uint64_t a1)
{
  return sub_2476B8EC8(a1);
}

uint64_t OUTLINED_FUNCTION_30_7()
{
  return sub_247728928();
}

void *OUTLINED_FUNCTION_31_7()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;

  return sub_2476E18A8(v2, (void *)(v1 + 80 * v0 + 32));
}

uint64_t OUTLINED_FUNCTION_34_8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return sub_24772C640();
}

uint64_t OUTLINED_FUNCTION_37_8()
{
  return swift_release();
}

const char *OUTLINED_FUNCTION_39_7()
{
  sqlite3 **v0;

  return sqlite3_errmsg(*v0);
}

const char *OUTLINED_FUNCTION_40_6()
{
  int v0;

  return sqlite3_errstr(v0);
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  return sub_24772C61C();
}

uint64_t OUTLINED_FUNCTION_42_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_247716788(a1, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  return sub_24772D4F8();
}

uint64_t OUTLINED_FUNCTION_45_9@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_48_8()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_51_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  *(_QWORD *)(v12 + 304) = *(_QWORD *)(a12 + 16);
}

unint64_t OUTLINED_FUNCTION_52_6()
{
  return sub_2476BB2C0();
}

uint64_t OUTLINED_FUNCTION_53_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return sub_2476B3EAC(v8, v7, v6, v5, a5);
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_57_6(uint64_t a1, const char *a2)
{
  sqlite3 *v2;

  return sqlite3_exec(v2, a2, 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_58_4()
{
  return swift_retain_n();
}

void OUTLINED_FUNCTION_59_7()
{
  sub_2476C5B34();
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  sqlite3 **v0;

  return sqlite3_extended_errcode(*v0);
}

_QWORD *OUTLINED_FUNCTION_65_2@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_5(sqlite3 *a1, const char *a2)
{
  return sqlite3_exec(a1, a2, 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_68_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return sub_24772CB08();
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return sub_24772C64C();
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_73_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t OUTLINED_FUNCTION_75_3()
{
  return swift_release();
}

const char *OUTLINED_FUNCTION_76_3()
{
  uint64_t v0;

  return sqlite3_errmsg(*(sqlite3 **)(v0 + 136));
}

uint64_t OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_247716788(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return sub_24772D600();
}

unint64_t OUTLINED_FUNCTION_86_0()
{
  return sub_2476BB2C0();
}

uint64_t OUTLINED_FUNCTION_87_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_247716788(a1, (uint64_t)va);
}

void OUTLINED_FUNCTION_88_1()
{
  JUMPOUT(0x2495809D0);
}

void OUTLINED_FUNCTION_91_2(uint64_t a1, uint64_t a2)
{
  sub_2476B2F7C(a1, a2, 1);
}

unint64_t OUTLINED_FUNCTION_93_1()
{
  return sub_2476BB2C0();
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_97_1()
{
  uint64_t v0;

  return sqlite3_extended_errcode(*(sqlite3 **)(*(_QWORD *)(v0 + 736) + 136));
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476F4B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;

  v7 = type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(0, a2, a3, a4);
  *(_QWORD *)(a5 + *(int *)(v7 + 36)) = MEMORY[0x24BEE4AF8];
  *(_WORD *)(a5 + *(int *)(v7 + 40)) = 256;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
}

uint64_t AsyncNullSeparatedSequence.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  v2[5] = *(_QWORD *)(a1 + 16);
  v2[6] = *(_QWORD *)(a1 + 24);
  v5 = OUTLINED_FUNCTION_3_17(v4, (uint64_t)sub_2476F4BE4);
  return sub_2476F4EC4(v5, v6, v7);
}

uint64_t sub_2476F4BE4(__int16 a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_WORD *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476F4C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_WORD *)(v4 + 56);
  if ((v5 & 0x100) != 0)
  {
    v17 = *(_QWORD *)(v4 + 24);
    if (!*(_QWORD *)(*(_QWORD *)(v17 + *(int *)(*(_QWORD *)(v4 + 16) + 36)) + 16))
    {
      v20 = 0;
      v21 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v20, v21);
    }
    v18 = *(_QWORD *)(v4 + 40);
    v19 = *(_QWORD *)(v4 + 48);
LABEL_11:
    v20 = sub_2476F4D84(v17, v18, v19, a4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v20, v21);
  }
  if (!(_BYTE)v5)
  {
    v18 = *(_QWORD *)(v4 + 40);
    v19 = *(_QWORD *)(v4 + 48);
    v17 = *(_QWORD *)(v4 + 24);
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(int *)(*(_QWORD *)(v4 + 16) + 36);
  v8 = *(_QWORD *)(v6 + v7);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_12();
    v8 = v22;
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_12();
    v8 = v23;
  }
  v10 = *(_BYTE *)(v4 + 56);
  *(_QWORD *)(v8 + 16) = v9 + 1;
  *(_BYTE *)(v8 + v9 + 32) = v10;
  *(_QWORD *)(v6 + v7) = v8;
  v11 = *(_QWORD *)(v4 + 16);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v12;
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v11 + 24);
  v13 = OUTLINED_FUNCTION_3_17(v12, (uint64_t)sub_2476F4BE4);
  return sub_2476F4EC4(v13, v14, v15);
}

uint64_t sub_2476F4D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)(*(_QWORD *)(a1
                             + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(0, a2, a3, a4)+ 36))+ 16);
  if (v8)
  {
    sub_24772C91C();
    v8 = sub_24772CAA8();
    swift_bridgeObjectRelease();
  }
  sub_2476F4E18(a1, a2, a3, v7);
  return v8;
}

void sub_2476F4E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD *v7;
  size_t v8;

  v4 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(0, a2, a3, a4) + 36));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v4;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_247715C78(0, *(_QWORD *)(v6 + 16));
  }
  else
  {
    if (*(_QWORD *)(v6 + 24) >= 2uLL)
    {
      sub_2476F60B0();
      v7 = (_QWORD *)swift_allocObject();
      v8 = _swift_stdlib_malloc_size(v7);
      v7[2] = 0;
      v7[3] = 2 * v8 - 64;
    }
    else
    {
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    *v4 = (uint64_t)v7;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2476F4EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2476F4EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  _QWORD *v10;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v7 = *(_QWORD *)(v4 + 16);
  v9 = (unsigned __int8 *)(v7
                         + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(0, v5, v6, a4)
                                  + 40));
  if ((v9[1] & 1) != 0)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 40) = v10;
    *v10 = v4;
    v10[1] = sub_2476F4FF8;
    return sub_24772CDA8();
  }
  else
  {
    v12 = *v9;
    sub_2476F50D8(v7, v5, v6, v8);
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(v12);
  }
}

uint64_t sub_2476F4FF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476F5054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;

  v5 = *(unsigned __int8 *)(v4 + 56);
  v6 = *(unsigned __int8 *)(v4 + 57);
  sub_2476F50D8(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a4);
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(v5 | (v6 << 8));
}

uint64_t sub_2476F50A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2476F50D8(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a4);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_2476F50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(0, a2, a3, a4);
  *(_WORD *)(a1 + *(int *)(result + 40)) = 256;
  return result;
}

uint64_t sub_2476F5108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_2476F5158;
  return AsyncNullSeparatedSequence.AsyncIterator.next()(a2);
}

uint64_t sub_2476F5158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v6 = *v3;
  v9 = *v3;
  OUTLINED_FUNCTION_16(&v9);
  if (!v2)
  {
    v7 = *(_QWORD **)(v6 + 16);
    *v7 = a1;
    v7[1] = a2;
  }
  return OUTLINED_FUNCTION_55((uint64_t (*)(void))v3[1]);
}

uint64_t sub_2476F51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_2476F5280;
  return sub_24772CDB4();
}

uint64_t sub_2476F5280()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD **)v1;
  OUTLINED_FUNCTION_16(&v4);
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t AsyncNullSeparatedSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  sub_24772CEBC();
  return sub_2476F4B04((uint64_t)v12, v4, v9, v13, a2);
}

uint64_t sub_2476F53DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  AsyncNullSeparatedSequence.makeAsyncIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t AsyncSequence<>.nullSeparated.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_2476F548C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_2476F5518()
{
  JUMPOUT(0x2495822A8);
}

uint64_t sub_2476F5528()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2476F5594(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2476F5604(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_2476F5614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_2476F5644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_2476F5674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2476F56A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2476F56D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2476F5784 + 4 * byte_247730690[(v8 - 1)]))();
}

void sub_2476F57D0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AsyncNullSeparatedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncNullSeparatedSequence);
}

uint64_t sub_2476F5984()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2476F5A18(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 10 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
    sub_24772C91C();
  }
  return a1;
}

uint64_t sub_2476F5AF0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476F5B54(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  sub_24772C91C();
  return a1;
}

uint64_t sub_2476F5BE0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_2476F5C78(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_2476F5D00(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_2476F5D90(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 < a2)
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 10;
    if (v9 <= 3)
      v10 = ((a2 - v7 + 0xFFFF) >> (8 * v9)) + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    __asm { BR              X14 }
  }
  if (v6 >= 0x7FFFFFFF)
    return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
  v14 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

void sub_2476F5EE8(_DWORD *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 10;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 0xFFFF) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    bzero(a1, v8);
    if (v8 > 3)
      *a1 = v12;
    else
      *(_WORD *)a1 = v12;
    __asm { BR              X11 }
  }
  __asm { BR              X11 }
}

void sub_2476F6018(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x2476F608CLL);
}

void sub_2476F6020()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2476F6028);
  JUMPOUT(0x2476F608CLL);
}

void sub_2476F6068(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x2476F608CLL);
}

void sub_2476F6070(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x2476F608CLL);
}

uint64_t sub_2476F6078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v5 + v7) = 0;
  if (!(_DWORD)v6)
    JUMPOUT(0x2476F608CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((v6 & 0x80000000) == 0)
      JUMPOUT(0x2476F6088);
    JUMPOUT(0x2476F6084);
  }
  return __swift_storeEnumTagSinglePayload(v5, v6, a3, a4);
}

uint64_t type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncNullSeparatedSequence.AsyncIterator);
}

void sub_2476F60B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8230)
  {
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8230);
  }
}

void OUTLINED_FUNCTION_2_12()
{
  sub_2476C591C();
}

uint64_t OUTLINED_FUNCTION_3_17@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

void SQLValue.init(value:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v14, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v4)
  {
    swift_release();
  }
  else
  {
    v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v13, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 56))(v11, a2, a3);
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_2476F6270@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_2476F6298(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_2476F6298(Swift::OpaquePointer a1, Swift::Int a2)
{
  return String.init(statement:index:)(a1, a2)._countAndFlagsBits;
}

void SQLColumnResult<>.init(statement:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v13 - v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 16) + 8))(a1, a2, AssociatedTypeWitness);
  if (!v4)
    (*(void (**)(char *, uint64_t, uint64_t))(a4 + 56))(v11, a3, a4);
  OUTLINED_FUNCTION_0_11();
}

uint64_t SQLValueError.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

uint64_t SQLValueError.message.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*SQLValueError.message.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLValueError.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v2 = *v0;
  v1 = v0[1];
  sub_2476F6498();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24772E730;
  *(_QWORD *)(inited + 32) = sub_24772CA18();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  sub_24772C91C();
  return sub_24772C904();
}

void sub_2476F6498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B88A0)
  {
    sub_2476DBC08();
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B88A0);
  }
}

uint64_t sub_2476F64EC()
{
  sub_2476F65A4();
  return sub_24772D5A0();
}

uint64_t sub_2476F6514()
{
  sub_2476F65A4();
  return sub_24772D594();
}

uint64_t dispatch thunk of SQLValue.init(nativeValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SQLValue.nativeValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SQLColumnResult.init(statement:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for SQLValueError()
{
  return &type metadata for SQLValueError;
}

unint64_t sub_2476F65A4()
{
  unint64_t result;

  result = qword_2576B8E50;
  if (!qword_2576B8E50)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLValueError, &type metadata for SQLValueError);
    atomic_store(result, (unint64_t *)&qword_2576B8E50);
  }
  return result;
}

void LRUDictionary.CodingKeys.init(stringValue:)(_BYTE *a1@<X8>)
{
  char v2;

  LRUDictionary.CodingKeys.init(rawValue:)(&v2);
  *a1 = v2;
  OUTLINED_FUNCTION_68_4();
}

void LRUDictionary.CodingKeys.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v1;
  char v3;

  sub_24772D3F0();
  OUTLINED_FUNCTION_7_16();
  v3 = 3;
  if (v1 < 3)
    v3 = v1;
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_2476F6654(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t LRUDictionary.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x436D756D6978616DLL;
  else
    return 0x656761726F7473;
}

uint64_t LRUDictionary.CodingKeys.stringValue.getter()
{
  return LRUDictionary.CodingKeys.rawValue.getter();
}

uint64_t sub_2476F6700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, a3);
  return sub_24772D54C();
}

uint64_t sub_2476F6754(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, a1);
  return sub_24772CC58();
}

uint64_t sub_2476F67A0()
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys);
  return sub_24772CC70();
}

uint64_t sub_2476F67F0()
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys);
  return sub_24772CC64();
}

void sub_2476F6840(char *a1@<X8>)
{
  LRUDictionary.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_2476F684C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LRUDictionary.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2476F6874(_BYTE *a1@<X8>)
{
  LRUDictionary.CodingKeys.init(stringValue:)(a1);
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  return 0;
}

uint64_t sub_2476F6894(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, a1);
  return sub_24772D6F0();
}

uint64_t sub_2476F68C8(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, a1);
  return sub_24772D6FC();
}

void LRUDictionary<>.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_7_14();
  v1 = v0;
  v3 = type metadata accessor for LRUDictionary.CodingKeys(255, v2[2], v2[3], v2[4]);
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, v3);
  sub_24772D468();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_24772D6A8();
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476F6A20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_24772C718();
  *(_QWORD *)(v2 - 152) = *(_QWORD *)(v2 - 192);
  v5 = a1;
  v6 = *(_QWORD *)(v2 - 200);
  v7 = MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>.Container<A1>, v5, v2 - 152);
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(v2 - 184);
  *(_QWORD *)(v2 - 160) = v7;
  MEMORY[0x2495822A8](MEMORY[0x24BE18CD8], v4, v2 - 168);
  OUTLINED_FUNCTION_8_13();
  v8 = *(_QWORD *)(v2 - 176);
  sub_24772D450();
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8))(v1, v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 - 268);
    v11 = *(_QWORD *)(v2 - 256);
    v10 = *(_QWORD *)(v2 - 248);
    *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 264);
    *(_BYTE *)(v2 - 136) = *(_DWORD *)(v2 - 72);
    *(_BYTE *)(v2 - 112) = 1;
    sub_2476F6B28();
    sub_2476F6B70();
    OUTLINED_FUNCTION_1_14();
    *(_QWORD *)(v2 - 144) = v11;
    *(_BYTE *)(v2 - 136) = v9;
    *(_BYTE *)(v2 - 112) = 2;
    OUTLINED_FUNCTION_1_14();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v6);
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t type metadata accessor for LRUDictionary.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUDictionary.CodingKeys);
}

void sub_2476F6B28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8E58)
  {
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8E58);
  }
}

unint64_t sub_2476F6B70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2576B8E60[0];
  if (!qword_2576B8E60[0])
  {
    sub_2476F6B28();
    v2 = MEMORY[0x24BEE1770];
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, qword_2576B8E60);
  }
  return result;
}

void sub_2476F6BC8()
{
  LRUDictionary<>.encode(to:)();
}

void LRUDictionary<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_7_14();
  v3 = type metadata accessor for LRUDictionary.CodingKeys(255, v0, v1, v2);
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.CodingKeys, v3);
  sub_24772D438();
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v4);
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476F6C88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;

  swift_getTupleTypeMetadata2();
  sub_24772CCE8();
  v5 = sub_24772C6C4();
  *(_QWORD *)(v3 - 168) = v6;
  *(_QWORD *)(v3 - 160) = v5;
  *(_QWORD *)(v3 - 176) = v7;
  v8 = v1[3];
  *(_QWORD *)(v3 - 152) = v1;
  __swift_project_boxed_opaque_existential_1(v1, v8);
  *(_QWORD *)(v3 - 192) = v2;
  v9 = *(_QWORD *)(v3 - 144);
  sub_24772D684();
  if (!v9)
  {
    v10 = *(_QWORD *)(v3 - 216);
    v11 = sub_24772C718();
    *(_BYTE *)(v3 - 65) = 0;
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 208);
    v12 = MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>.Container<A1>, a1, v3 - 120);
    *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v3 - 128) = v12;
    MEMORY[0x2495822A8](MEMORY[0x24BE18CE8], v11, v3 - 136);
    v13 = *(_QWORD *)(v3 - 192);
    v14 = *(_QWORD *)(v3 - 184);
    sub_24772D414();
    v16 = *(_QWORD *)(v3 - 112);
    v15 = *(_QWORD *)(v3 - 104);
    v17 = *(_QWORD *)(v3 - 96);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    v18 = OUTLINED_FUNCTION_3_18(1);
    v20 = v19;
    v21 = OUTLINED_FUNCTION_3_18(2);
    v22 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(_QWORD *)(v3 - 144) = v21;
    *(_DWORD *)(v3 - 160) = v23;
    v22(v13, v14);
    sub_2476BEE20(0);
    v24 = *(_QWORD *)(v3 - 224);
    *(_QWORD *)v24 = 0;
    *(_QWORD *)(v24 + 8) = 0;
    *(_QWORD *)(v24 + 16) = v16;
    *(_QWORD *)(v24 + 24) = v15;
    v25 = *(_QWORD *)(v3 - 144);
    *(_QWORD *)(v24 + 32) = v17;
    *(_QWORD *)(v24 + 40) = v25;
    *(_BYTE *)(v24 + 48) = *(_DWORD *)(v3 - 160) & 1;
    *(_QWORD *)(v24 + 56) = v18;
    *(_BYTE *)(v24 + 64) = v20 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 152));
  sub_2476BF020(0);
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_0_11();
}

void sub_2476F6EB4()
{
  LRUDictionary<>.init(from:)();
}

void LRUDictionary.Container.CodingKeys.init(stringValue:)(_BYTE *a1@<X8>)
{
  char v2;

  LRUDictionary.Container.CodingKeys.init(rawValue:)(&v2);
  *a1 = v2;
  OUTLINED_FUNCTION_68_4();
}

void LRUDictionary.Container.CodingKeys.init(rawValue:)(char *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_24772D3F0();
  OUTLINED_FUNCTION_7_16();
  if (v1 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v1)
    v3 = 0;
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_2476F6F54(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t LRUDictionary.Container.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1953722211;
  else
    return 0x65756C6176;
}

uint64_t LRUDictionary.Container.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1953722211;
  else
    return 0x65756C6176;
}

uint64_t sub_2476F6FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a3);
  return sub_24772D54C();
}

uint64_t sub_2476F7018(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a1);
  return sub_24772CC58();
}

uint64_t sub_2476F7064()
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys);
  return sub_24772CC70();
}

uint64_t sub_2476F70B4()
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys);
  return sub_24772CC64();
}

void sub_2476F7104(char *a1@<X8>)
{
  LRUDictionary.Container.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_2476F7110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LRUDictionary.Container.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2476F7138(_BYTE *a1@<X8>)
{
  LRUDictionary.Container.CodingKeys.init(stringValue:)(a1);
}

uint64_t sub_2476F714C(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a1);
  return sub_24772D6F0();
}

uint64_t sub_2476F7180(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a1);
  return sub_24772D6FC();
}

void LRUDictionary.Container<>.encode(to:)()
{
  OUTLINED_FUNCTION_7_14();
  OUTLINED_FUNCTION_9_12();
}

void sub_2476F71EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a1);
  v12 = sub_24772D468();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v16 = *(_QWORD *)(v11 - 136);
  sub_24772D6A8();
  *(_BYTE *)(v11 - 112) = 0;
  v17 = *(_QWORD *)(v11 - 120);
  sub_24772D450();
  if (!v17)
  {
    v18 = (uint64_t *)(v16 + *(int *)(v10 + 52));
    v19 = *v18;
    LOBYTE(v18) = *((_BYTE *)v18 + 8);
    *(_QWORD *)(v11 - 112) = v19;
    *(_BYTE *)(v11 - 104) = (_BYTE)v18;
    *(_BYTE *)(v11 - 65) = 1;
    sub_2476F6B28();
    sub_2476F6B70();
    OUTLINED_FUNCTION_8_13();
    sub_24772D450();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  OUTLINED_FUNCTION_0_11();
}

void sub_2476F7308()
{
  LRUDictionary.Container<>.encode(to:)();
}

void LRUDictionary.Container<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[14];

  OUTLINED_FUNCTION_7_14();
  v9[6] = v0;
  v9[4] = v1;
  v9[3] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v9[7] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[10] = v5;
  v9[11] = v6;
  v9[12] = v7;
  v9[13] = v8;
  OUTLINED_FUNCTION_9_12();
}

void sub_2476F7398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x2495822A8](&protocol conformance descriptor for LRUDictionary<A, B>.Container<A1>.CodingKeys, a1);
  v6 = sub_24772D438();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_1_10();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for LRUDictionary.Container();
}

void sub_2476F7400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD);
  char v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v11 - 184) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_10();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&a9 - v15;
  v17 = (char *)&a9 + *(int *)(v14 + 52) - v15;
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  *(_QWORD *)(v11 - 152) = v10;
  v18 = *(_QWORD *)(v11 - 72);
  sub_24772D684();
  if (v18)
  {
    OUTLINED_FUNCTION_12_9();
  }
  else
  {
    v19 = v17;
    *(_QWORD *)(v11 - 72) = a1;
    v20 = *(_QWORD *)(v11 - 176);
    v21 = *(_QWORD *)(v11 - 168);
    v23 = *(_QWORD *)(v11 - 160);
    v22 = *(_QWORD *)(v11 - 152);
    *(_BYTE *)(v11 - 112) = 0;
    sub_24772D414();
    v24 = v16;
    (*(void (**)(char *, _QWORD, _QWORD))(v21 + 32))(v16, *(_QWORD *)(v11 - 136), *(_QWORD *)(v11 - 128));
    *(_BYTE *)(v11 - 112) = 1;
    v25 = sub_24772D3FC();
    v26 = *(void (**)(uint64_t, _QWORD))(v20 + 8);
    LOBYTE(v20) = v27;
    v26(v22, *(_QWORD *)(v11 - 120));
    *(_QWORD *)v19 = v25;
    v19[8] = v20 & 1;
    v28 = *(_QWORD *)(v11 - 184);
    v29 = *(_QWORD *)(v11 - 72);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v23, v24, v29);
    OUTLINED_FUNCTION_12_9();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v29);
  }
  OUTLINED_FUNCTION_0_11();
}

void sub_2476F7574()
{
  LRUDictionary.Container<>.init(from:)();
}

void type metadata accessor for LRUDictionary.Container.CodingKeys()
{
  JUMPOUT(0x249582248);
}

void sub_2476F75A4()
{
  JUMPOUT(0x2495822A8);
}

void sub_2476F75B4()
{
  JUMPOUT(0x2495822A8);
}

void sub_2476F75C4()
{
  JUMPOUT(0x2495822A8);
}

void sub_2476F75D4()
{
  JUMPOUT(0x2495822A8);
}

void sub_2476F75E4()
{
  JUMPOUT(0x2495822A8);
}

void sub_2476F75F4()
{
  JUMPOUT(0x2495822A8);
}

uint64_t sub_2476F7604(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2476F7650 + 4 * byte_24773087D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2476F7684 + 4 * asc_247730878[v4]))();
}

uint64_t sub_2476F7684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F768C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476F7694);
  return result;
}

uint64_t sub_2476F76A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476F76A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2476F76AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F76B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F76C0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2476F770C + 4 * byte_247730887[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2476F7740 + 4 * byte_247730882[v4]))();
}

uint64_t sub_2476F7740(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F7748(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476F7750);
  return result;
}

uint64_t sub_2476F775C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476F7764);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2476F7768(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F7770(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return sub_24772D450();
}

uint64_t OUTLINED_FUNCTION_3_18@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return sub_24772D3FC();
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  uint64_t v0;

  return v0 - 112;
}

void OUTLINED_FUNCTION_9_12()
{
  type metadata accessor for LRUDictionary.Container.CodingKeys();
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_2476F7800(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_2476B30B8(0, v5, 0);
    v7 = v16;
    v8 = a1 + 40;
    do
    {
      v9 = sub_24772C5A4();
      v11 = v10;
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_2476B30B8(v12 > 1, v13 + 1, 1);
      v8 += 16;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      --v5;
    }
    while (v5);
    sub_2476D5F88(a2, a3);
  }
  else
  {
    sub_2476D5F88(a2, a3);
    return MEMORY[0x24BEE4AF8];
  }
  return v7;
}

void sub_2476F791C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_2476F7984()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v7 = v1;
  if (v1)
  {
    v33 = v1;
    v31 = v0;
    *(_QWORD *)(v6 - 104) = v3;
    v8 = v1 & ~(v1 >> 63);
    sub_2476B3110();
    v3 = *(_QWORD *)(v6 - 104);
    v34 = (int)v4;
    v35 = v2;
    if ((_DWORD)v5)
    {
      if ((_DWORD)v5 == 1)
        v9 = (int)v4;
      else
        v9 = *(_QWORD *)(v4 + 16);
      if (v7 < 0)
        goto LABEL_45;
    }
    else
    {
      if (v7 < 0)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
      }
      v9 = 0;
    }
    v32 = (uint64_t)v4 >> 32;
    v29 = v4 >> 16;
    v30 = v4 >> 8;
    v27 = v4 >> 40;
    v28 = v4 >> 24;
    v25 = HIBYTE(v4);
    v26 = HIWORD(v4);
    *(_QWORD *)(v6 - 136) = v5;
    *(_QWORD *)(v6 - 128) = v4;
    while (v8)
    {
      if ((_DWORD)v5)
      {
        if ((_DWORD)v5 == 1)
        {
          if (v9 < v34 || v9 >= v32)
            goto LABEL_39;
          v11 = sub_24772C424();
          if (!v11)
            goto LABEL_47;
          v12 = v11;
          v13 = sub_24772C448();
          v14 = v9 - v13;
          if (__OFSUB__(v9, v13))
            goto LABEL_42;
        }
        else
        {
          if (v9 < *(_QWORD *)(v4 + 16))
            goto LABEL_41;
          if (v9 >= *(_QWORD *)(v4 + 24))
            goto LABEL_43;
          v16 = sub_24772C424();
          if (!v16)
            goto LABEL_48;
          v12 = v16;
          v17 = sub_24772C448();
          v14 = v9 - v17;
          if (__OFSUB__(v9, v17))
            goto LABEL_44;
        }
        v15 = *(unsigned __int8 *)(v12 + v14);
      }
      else
      {
        if (v9 >= v33)
          goto LABEL_40;
        *(_BYTE *)(v6 - 120) = v4;
        *(_BYTE *)(v6 - 119) = v30;
        *(_BYTE *)(v6 - 118) = v29;
        *(_BYTE *)(v6 - 117) = v28;
        *(_BYTE *)(v6 - 116) = v31;
        *(_BYTE *)(v6 - 115) = v27;
        *(_BYTE *)(v6 - 114) = v26;
        *(_BYTE *)(v6 - 113) = v25;
        *(_DWORD *)(v6 - 112) = v35;
        *(_WORD *)(v6 - 108) = WORD2(v35);
        v15 = *(unsigned __int8 *)(v6 - 120 + v9);
      }
      if (isprint(v15))
      {
        v18 = 0xE100000000000000;
        v19 = 46;
      }
      else
      {
        v20 = ((v15 >> 6) & 0xFFFFC0FF | ((v15 & 0x3F) << 8)) + 33217;
        if ((v15 & 0x80) == 0)
          v20 = v15 + 1;
        *(_QWORD *)(v6 - 120) = (v20 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v20) >> 3)) & 7)));
        v19 = MEMORY[0x249580E20](v6 - 120);
        v18 = v21;
      }
      *(_QWORD *)(v6 - 104) = v3;
      v22 = *(_QWORD *)(v3 + 16);
      if (v22 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_2476B3110();
        v3 = *(_QWORD *)(v6 - 104);
      }
      *(_QWORD *)(v3 + 16) = v22 + 1;
      v23 = v3 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v18;
      ++v9;
      --v8;
      --v7;
      v5 = *(_QWORD *)(v6 - 136);
      v4 = *(_QWORD *)(v6 - 128);
      if (!v7)
        return v3;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    JUMPOUT(0x2476F7C94);
  }
  return v3;
}

void sub_2476F7CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_24772C598();
  if (a1)
  {
    if (v5 != 0x8000000000000000 || a1 != -1)
    {
      sub_2476C5FB4();
      __asm { BR              X10 }
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  JUMPOUT(0x2476F7ED4);
}

unint64_t Data.chunked(by:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  sub_2476F7CBC(a1, a2, a3);
  v6 = v5;
  sub_2476D64E0(a2, a3);
  sub_2476F7800(v6, a2, a3);
  OUTLINED_FUNCTION_2_13();
  return a3;
}

void Data.HexLine.offset.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_35();
}

void Data.HexLine.offset.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_44();
}

double (*Data.HexLine.offset.modify())(_QWORD)
{
  return nullsub_1;
}

void Data.HexLine.hex.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_35();
}

void Data.HexLine.hex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_44();
}

double (*Data.HexLine.hex.modify())(_QWORD)
{
  return nullsub_1;
}

void Data.HexLine.text.getter()
{
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_35();
}

void Data.HexLine.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_44();
}

double (*Data.HexLine.text.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Data.HexLine.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *v0;
  v2 = v0[6];
  if (v2 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else if (!__OFADD__(2 * v2, 8))
  {
    sub_2476B5B30();
    sub_24772D09C();
    sub_24772C91C();
    sub_24772CAFC();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    sub_24772C91C();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t Data.hexLines(bytesPerRow:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_2476F7CBC(a1, a2, a3);
  v7 = v6;
  sub_2476D64E0(a2, a3);
  sub_2476F7800(v7, a2, a3);
  OUTLINED_FUNCTION_2_13();
  v27 = MEMORY[0x24BEE4AF8];
  sub_2476B30F4(0, 0, 0);
  v8 = *(_QWORD *)(v3 + 16);
  sub_24772C91C();
  if (v8)
  {
    v9 = 0;
    v10 = (unint64_t *)(v3 + 40);
    do
    {
      v12 = *(v10 - 1);
      v11 = *v10;
      sub_2476D64E0(v12, *v10);
      sub_2476F8310(v9, v12, v11, a1);
      sub_2476D5F88(v12, v11);
      v13 = v24;
      v14 = v26;
      v16 = *(_QWORD *)(v27 + 16);
      v15 = *(_QWORD *)(v27 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_2476B30F4((char *)(v15 > 1), v16 + 1, 1);
        v14 = v26;
        v13 = v24;
      }
      ++v9;
      v10 += 2;
      *(_QWORD *)(v27 + 16) = v16 + 1;
      v17 = (_QWORD *)(v27 + 56 * v16);
      v17[4] = v20;
      v17[5] = v21;
      v17[6] = v22;
      v17[7] = v23;
      v17[8] = v13;
      v17[9] = v25;
      v17[10] = v14;
    }
    while (v8 != v9);
  }
  swift_bridgeObjectRelease_n();
  return v27;
}

void sub_2476F8310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_2476F8D74();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24772E730;
  if ((unsigned __int128)(a1 * (__int128)a4) >> 64 == (a1 * a4) >> 63)
  {
    v8 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v7 + 64) = v8;
    *(_QWORD *)(v7 + 32) = a1 * a4;
    sub_24772CA30();
    sub_24772C598();
    sub_2476C5FB4();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x2476F8B04);
}

uint64_t _s7HexLineVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s7HexLineVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  sub_24772C91C();
  sub_24772C91C();
  sub_24772C91C();
  return a1;
}

_QWORD *_s7HexLineVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *_s7HexLineVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t _s7HexLineVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7HexLineVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.HexLine()
{
  return &type metadata for Data.HexLine;
}

void sub_2476F8D74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B8F68)
  {
    sub_2476F8DC8();
    v0 = sub_24772D48C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B8F68);
  }
}

unint64_t sub_2476F8DC8()
{
  unint64_t result;

  result = qword_2576B8F70;
  if (!qword_2576B8F70)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B8F70);
  }
  return result;
}

void sub_2476F8E1C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_24772CD48();
    if (!v4)
      atomic_store(v3, a2);
  }
  OUTLINED_FUNCTION_35();
}

uint64_t sub_2476F8E5C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2476F8E1C(255, a2);
    result = MEMORY[0x2495822A8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2476F8EA8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for SonicActor();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_2576B8F78 = v0;
  return result;
}

uint64_t static SonicActor.shared.getter()
{
  if (qword_2576B7AD8 != -1)
    swift_once();
  OUTLINED_FUNCTION_6_3();
  return swift_retain();
}

uint64_t static SonicActor.shared.setter(uint64_t a1)
{
  if (qword_2576B7AD8 != -1)
    swift_once();
  OUTLINED_FUNCTION_6_3();
  qword_2576B8F78 = a1;
  return swift_release();
}

uint64_t (*static SonicActor.shared.modify())()
{
  if (qword_2576B7AD8 != -1)
    swift_once();
  OUTLINED_FUNCTION_6_3();
  return j__swift_endAccess;
}

uint64_t SonicActor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t SonicActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t SonicActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2476F9064()
{
  return SonicActor.unownedExecutor.getter();
}

unint64_t sub_2476F9080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B8F80;
  if (!qword_2576B8F80)
  {
    v1 = type metadata accessor for SonicActor();
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SonicActor, v1);
    atomic_store(result, (unint64_t *)&qword_2576B8F80);
  }
  return result;
}

uint64_t type metadata accessor for SonicActor()
{
  return objc_opt_self();
}

uint64_t sub_2476F90DC()
{
  return static SonicActor.shared.getter();
}

uint64_t sub_2476F90F0()
{
  type metadata accessor for SonicActor();
  return sub_24772D120();
}

uint64_t method lookup function for SonicActor()
{
  return swift_lookUpClassMethod();
}

uint64_t PerformanceTime.machAbsoluteTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PerformanceTime.machAbsoluteTime.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*PerformanceTime.machAbsoluteTime.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PerformanceTime.machMonotonicTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PerformanceTime.machMonotonicTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*PerformanceTime.machMonotonicTime.modify())(_QWORD)
{
  return nullsub_1;
}

double PerformanceTime.wallClockTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void PerformanceTime.wallClockTime.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

double (*PerformanceTime.wallClockTime.modify())(_QWORD)
{
  return nullsub_1;
}

double PerformanceTime.kernelBootTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void PerformanceTime.kernelBootTime.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

double (*PerformanceTime.kernelBootTime.modify())(_QWORD)
{
  return nullsub_1;
}

void static PerformanceTime.now()(uint64_t a1@<X8>)
{
  __uint64_t v2;
  __uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v2 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  v3 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  sub_24772C5BC();
  v5 = v4;
  sub_2476F9204();
  v6 = static NSProcessInfo.kernelBootTime.getter();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(double *)(a1 + 24) = v6;
}

unint64_t sub_2476F9204()
{
  unint64_t result;

  result = qword_2576B8F88;
  if (!qword_2576B8F88)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B8F88);
  }
  return result;
}

uint64_t PerformanceTime.init(machAbsoluteTime:machMonotonicTime:wallClockTime:kernelBootTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  return result;
}

uint64_t sub_2476F924C()
{
  return sub_24772D60C();
}

uint64_t sub_2476F9270(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000247735980 || (sub_24772D4F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002477359A0 || (sub_24772D4F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x636F6C436C6C6177 && a2 == 0xED0000656D69546BLL;
    if (v5 || (sub_24772D4F8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6F426C656E72656BLL && a2 == 0xEE00656D6954746FLL)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_24772D4F8();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_2476F9460()
{
  return 4;
}

uint64_t sub_2476F9468()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

uint64_t sub_2476F94AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2476F94E4 + 4 * byte_247730D08[a1]))(0xD000000000000010, 0x8000000247735980);
}

uint64_t sub_2476F94E4(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_2476F94FC()
{
  return 0x636F6C436C6C6177;
}

uint64_t sub_2476F9520()
{
  return 0x6F426C656E72656BLL;
}

uint64_t sub_2476F9544()
{
  return sub_2476F9468();
}

uint64_t sub_2476F954C()
{
  return sub_2476F924C();
}

uint64_t sub_2476F9554()
{
  unsigned __int8 *v0;

  return sub_2476F94AC(*v0);
}

uint64_t sub_2476F955C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2476F9270(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2476F9580()
{
  return OUTLINED_FUNCTION_13_14();
}

uint64_t sub_2476F959C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2476F9460();
  *a1 = result;
  return result;
}

uint64_t sub_2476F95C0()
{
  sub_2476F974C();
  return sub_24772D6F0();
}

uint64_t sub_2476F95E8()
{
  sub_2476F974C();
  return sub_24772D6FC();
}

void PerformanceTime.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;
  char v13;

  sub_2476F98D4(0, &qword_2576B8F90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v9 - v7;
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2476F974C();
  sub_24772D6A8();
  v13 = 0;
  OUTLINED_FUNCTION_3_19();
  if (!v2)
  {
    v12 = 1;
    OUTLINED_FUNCTION_3_19();
    v11 = 2;
    OUTLINED_FUNCTION_4_16();
    v10 = 3;
    OUTLINED_FUNCTION_4_16();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  OUTLINED_FUNCTION_0_16();
}

unint64_t sub_2476F974C()
{
  unint64_t result;

  result = qword_2576B8F98;
  if (!qword_2576B8F98)
  {
    result = MEMORY[0x2495822A8](&unk_247730E4C, &type metadata for PerformanceTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576B8F98);
  }
  return result;
}

void PerformanceTime.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2476F98D4(0, &qword_2576B8FA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2476F974C();
  sub_24772D684();
  if (!v2)
  {
    v6 = OUTLINED_FUNCTION_2_14();
    v7 = OUTLINED_FUNCTION_2_14();
    OUTLINED_FUNCTION_1_15();
    v9 = v8;
    OUTLINED_FUNCTION_1_15();
    v11 = v10;
    OUTLINED_FUNCTION_5_15();
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v9;
    a2[3] = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_16();
}

void sub_2476F98D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2476F974C();
    v7 = a3(a1, &type metadata for PerformanceTime.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2476F9930(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  PerformanceTime.init(from:)(a1, a2);
}

void sub_2476F9944(_QWORD *a1)
{
  PerformanceTime.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for PerformanceTime(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PerformanceTime(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTime()
{
  return &type metadata for PerformanceTime;
}

uint64_t storeEnumTagSinglePayload for PerformanceTime.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2476F9A00 + 4 * byte_247730D11[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2476F9A34 + 4 * byte_247730D0C[v4]))();
}

uint64_t sub_2476F9A34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F9A3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476F9A44);
  return result;
}

uint64_t sub_2476F9A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476F9A58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2476F9A5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476F9A64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTime.CodingKeys()
{
  return &type metadata for PerformanceTime.CodingKeys;
}

unint64_t sub_2476F9A84()
{
  unint64_t result;

  result = qword_2576B8FA8;
  if (!qword_2576B8FA8)
  {
    result = MEMORY[0x2495822A8](&unk_247730E24, &type metadata for PerformanceTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576B8FA8);
  }
  return result;
}

unint64_t sub_2476F9AC4()
{
  unint64_t result;

  result = qword_2576B8FB0;
  if (!qword_2576B8FB0)
  {
    result = MEMORY[0x2495822A8](&unk_247730D94, &type metadata for PerformanceTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576B8FB0);
  }
  return result;
}

unint64_t sub_2476F9B04()
{
  unint64_t result;

  result = qword_2576B8FB8;
  if (!qword_2576B8FB8)
  {
    result = MEMORY[0x2495822A8](&unk_247730DBC, &type metadata for PerformanceTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576B8FB8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return sub_24772D408();
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  return sub_24772D420();
}

uint64_t OUTLINED_FUNCTION_3_19()
{
  return sub_24772D45C();
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return sub_24772D444();
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2476F9BAC()
{
  uint64_t result;

  sub_2476F9EB0();
  result = sub_24772D00C();
  qword_2576B8FC0 = result;
  return result;
}

id static OS_os_log.sonic.getter()
{
  return sub_2476F9CB0(&qword_2576B7AE0, (id *)&qword_2576B8FC0);
}

uint64_t sub_2476F9C2C()
{
  uint64_t result;

  sub_2476F9EB0();
  result = sub_24772D00C();
  qword_2576B8FC8 = result;
  return result;
}

id static OS_os_log._oversizeSonic.getter()
{
  return sub_2476F9CB0(&qword_2576B7AE8, (id *)&qword_2576B8FC8);
}

id sub_2476F9CB0(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_2476F9CE8(uint64_t a1)
{
  return sub_2476F9D64(a1, qword_2576B8FD0, &qword_2576B7AE0, (id *)&qword_2576B8FC0);
}

uint64_t static Logger.sonic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2476F9E08(&qword_2576B7AF0, (uint64_t)qword_2576B8FD0, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2476F9D40(uint64_t a1)
{
  return sub_2476F9D64(a1, qword_2576B8FE8, &qword_2576B7AE8, (id *)&qword_2576B8FC8);
}

uint64_t sub_2476F9D64(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_24772C790();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_24772C79C();
}

uint64_t static Logger._oversizeSonic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2476F9E08(&qword_2576B7AF8, (uint64_t)qword_2576B8FE8, a1);
}

uint64_t sub_2476F9E08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_24772C790();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_2476F9EB0()
{
  unint64_t result;

  result = qword_2576B9000;
  if (!qword_2576B9000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B9000);
  }
  return result;
}

uint64_t sub_2476F9EEC(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  a1(&v5, v1 + 112);
  result = swift_endAccess();
  if (!v2)
    return v5;
  return result;
}

uint64_t sub_2476F9F68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_2576B95E0 + dword_2576B95E0);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247735520;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_2476F9FF4;
  return v3(v0 + 16);
}

uint64_t sub_2476F9FF4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  if (v2)
    return OUTLINED_FUNCTION_23_4(*(uint64_t (**)(void))(v3 + 8));
  if ((a2 & 1) != 0)
    v7 = 0;
  else
    v7 = a1;
  return OUTLINED_FUNCTION_5_6(v7, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_2476FA048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 304) = a1;
  *(_QWORD *)(v2 + 312) = v1;
  return swift_task_switch();
}

uint64_t sub_2476FA060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_31_5();
  v1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_148_0();
  sub_2476C5B34();
  v3 = v2;
  *(_QWORD *)(v0 + 16) = 0xD000000000000014;
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 88) = 0;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v3 = v18;
  }
  v7 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v3 + 16) = v6 + 1;
  OUTLINED_FUNCTION_62_3(v3 + 80 * v6);
  *(_QWORD *)(v0 + 296) = v7;
  *(_QWORD *)(v0 + 96) = sub_24772D480();
  *(_QWORD *)(v0 + 104) = v8;
  *(_BYTE *)(v0 + 168) = 0;
  v9 = *(_QWORD *)(v3 + 16);
  if (v9 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v3 = v19;
  }
  *(_QWORD *)(v3 + 16) = v9 + 1;
  OUTLINED_FUNCTION_26_6(v3 + 80 * v9);
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0xE000000000000000;
  *(_BYTE *)(v0 + 248) = 0;
  v10 = *(_QWORD *)(v3 + 16);
  if (v10 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v3 = v20;
  }
  *(_QWORD *)(v3 + 16) = v10 + 1;
  OUTLINED_FUNCTION_23_6(v3 + 80 * v10);
  result = sub_247728928();
  v12 = v1;
  v13 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 320) = v13;
  if (v13)
  {
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v0 + 344) = v14;
    *(_QWORD *)(v0 + 352) = v12;
    *(_QWORD *)(v0 + 328) = v3;
    *(_QWORD *)(v0 + 336) = 0;
    *(_QWORD *)(v0 + 256) = v3;
    *(_QWORD *)(v0 + 264) = 0;
    *(_QWORD *)(v0 + 272) = v14;
    *(_QWORD *)(v0 + 280) = v12;
    *(_BYTE *)(v0 + 288) = v15;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v16;
    *v16 = v0;
    v16[1] = sub_2476FA23C;
    v17 = OUTLINED_FUNCTION_90_3();
    return OUTLINED_FUNCTION_41_9(v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476FA23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v2 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t static FileCacheError.domainName.getter()
{
  return 0x68636143656C6946;
}

SonicFoundation::FileCacheError_optional __swiftcall FileCacheError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;
  char v4;

  v2 = 1;
  switch(rawValue)
  {
    case 'd':
      break;
    case 'e':
      v2 = 2;
      break;
    case 'f':
      v2 = 3;
      break;
    case 'g':
      v2 = 4;
      break;
    case 'h':
      v2 = 5;
      break;
    default:
      if (rawValue == 202)
        v3 = 8;
      else
        v3 = 9;
      if (rawValue == 201)
        v4 = 7;
      else
        v4 = v3;
      if (rawValue == 200)
        v2 = 6;
      else
        v2 = v4;
      if (!rawValue)
        v2 = 0;
      break;
  }
  *v1 = v2;
  return (SonicFoundation::FileCacheError_optional)rawValue;
}

uint64_t FileCacheError.rawValue.getter()
{
  char *v0;

  return qword_247731058[*v0];
}

BOOL sub_2476FA36C(char *a1, char *a2)
{
  return sub_2476E5928(*a1, *a2);
}

void sub_2476FA378()
{
  sub_24772AEF4();
}

void sub_2476FA380()
{
  sub_24772B09C();
}

void sub_2476FA388()
{
  sub_24772B438();
}

SonicFoundation::FileCacheError_optional sub_2476FA390(Swift::Int *a1)
{
  return FileCacheError.init(rawValue:)(*a1);
}

uint64_t sub_2476FA398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FileCacheError.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2476FA3BC()
{
  return 0x68636143656C6946;
}

void sub_2476FA3E0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FileCache.Entry.url.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_16_10();
  v0 = OUTLINED_FUNCTION_63_4();
  return OUTLINED_FUNCTION_50_5(v0, v1, v2, v3);
}

uint64_t FileCache.Entry.contentType.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_128_1();
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for FileCache.Entry(uint64_t a1)
{
  return sub_2476FF82C(a1, (uint64_t *)&unk_2576B90B0);
}

void FileCache.Entry.pathExtension.getter()
{
  OUTLINED_FUNCTION_128_1();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_35();
}

uint64_t FileCache.Entry.fileURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for FileCache.Entry(0);
  OUTLINED_FUNCTION_16_10();
  v0 = OUTLINED_FUNCTION_63_4();
  return OUTLINED_FUNCTION_50_5(v0, v1, v2, v3);
}

void FileCache.Entry.isCached.getter()
{
  id v0;
  void *v1;

  type metadata accessor for FileCache.Entry(0);
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24772C508();
  v1 = (void *)sub_24772C9F4();
  OUTLINED_FUNCTION_132();
  objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  OUTLINED_FUNCTION_44();
}

uint64_t sub_2476FA52C(uint64_t a1, _DWORD *a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  v7 = sub_24772C544();
  *(_QWORD *)(v4 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 40) = v8;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_DWORD *)(v4 + 120) = *a2;
  *(_BYTE *)(v4 + 124) = *a3;
  return swift_task_switch();
}

uint64_t sub_2476FA5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  int v19;
  char v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_31_5();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 16), v2);
  v5 = sub_24772C4A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v5 = (uint64_t)v4;
  if (qword_2576B7B00 != -1)
LABEL_5:
    swift_once();
  v19 = *(_DWORD *)(v0 + 120);
  v20 = *(_BYTE *)(v0 + 124);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = qword_2576B9008;
  OUTLINED_FUNCTION_79();
  v12 = sub_24772C508();
  v22 = v13;
  v23 = v12;
  *(_QWORD *)(v0 + 80) = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t))v5)(v6, v11, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 88) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v15 + v14, v6, v8);
  v16 = v15 + ((v14 + v7 + 3) & 0xFFFFFFFFFFFFFFFCLL);
  *(_DWORD *)v16 = v19;
  *(_BYTE *)(v16 + 4) = v20;
  *(_QWORD *)(v15 + ((v14 + v7 + 15) & 0xFFFFFFFFFFFFFFF8)) = v10;
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2576B9238 + dword_2576B9238);
  OUTLINED_FUNCTION_25_2();
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v17;
  *v17 = v0;
  v17[1] = sub_2476FA760;
  return v21(v23, v22, (uint64_t)sub_2477043D8, v15);
}

uint64_t sub_2476FA760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_151_0();
  *(_QWORD *)(v2 + 104) = v1;
  *(_QWORD *)(v2 + 112) = v0;
  OUTLINED_FUNCTION_192();
  OUTLINED_FUNCTION_23();
  swift_release();
  OUTLINED_FUNCTION_40_3();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FA7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_70();
    return OUTLINED_FUNCTION_32_0(v1, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2476FA80C()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2476FA83C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  uint64_t v29;
  unsigned __int16 v30;
  void *v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unsigned int v38;
  id v39;
  id v40;
  uint64_t v41;
  char v42;
  void *v43;
  void *v44;
  unsigned int v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  unsigned int v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;

  v64 = a1;
  v70 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)OUTLINED_FUNCTION_16_10();
  v66 = *(v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_11_9();
  v62 = v3;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v57 - v5;
  sub_2476FBA24(0);
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11_9();
  v61 = v7;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v8);
  v59 = (uint64_t)&v57 - v9;
  OUTLINED_FUNCTION_59_2();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v57 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v57 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v57 - v17;
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_defaultManager);
  v60 = type metadata accessor for FileCache.Entry(0);
  v21 = *(int *)(v60 + 28);
  v65 = v1;
  v22 = v1 + v21;
  v23 = objc_msgSend(v19, sel_defaultManager);
  v67 = v22;
  sub_24772C508();
  v24 = (void *)sub_24772C9F4();
  swift_bridgeObjectRelease();
  LODWORD(v22) = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, (uint64_t)v2);
  if (!(_DWORD)v22)
    goto LABEL_4;
  sub_24772C4FC();
  sub_2477047A8((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2476FBA24);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v2);
  sub_247704704((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_2476FBA24);
  v25 = (void *)sub_24772C4E4();
  sub_247704440((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2476FBA24);
  OUTLINED_FUNCTION_132_0((uint64_t)v13);
  if (!v51)
  {
    v26 = (void *)sub_24772C4E4();
    OUTLINED_FUNCTION_109_1();
    v68 = 0;
    v27 = objc_msgSend(v20, sel_moveItemAtURL_toURL_error_, v25, v26, &v68);

    v28 = v68;
    if (!v27)
    {
      v47 = v28;
      sub_24772C49C();

      goto LABEL_17;
    }
LABEL_4:
    v29 = (uint64_t)v63;
    sub_2476FAF18(v20);
    v63 = v18;
    if (!v29)
    {
      sub_2477280E8();
      v50 = v59;
      sub_247704440((uint64_t)v18, v59, (uint64_t (*)(_QWORD))sub_2476FBA24);
      v52 = OUTLINED_FUNCTION_132_0(v50);
      if (v51)
      {
        OUTLINED_FUNCTION_186(v52, (uint64_t (*)(_QWORD))sub_2476FBA24);

      }
      else
      {
        (*(void (**)(char *, uint64_t, _QWORD *))(v66 + 32))(v58, v50, v2);
        v53 = (void *)sub_24772C4E4();
        v68 = 0;
        v54 = objc_msgSend(v20, sel_removeItemAtURL_error_, v53, &v68);

        if (!v54)
        {
          v56 = v68;
          OUTLINED_FUNCTION_112_0();
          OUTLINED_FUNCTION_166_0();
          OUTLINED_FUNCTION_46_3();

          OUTLINED_FUNCTION_29_3();
        }
        v55 = v68;

        v49 = OUTLINED_FUNCTION_109_1();
      }
      goto LABEL_18;
    }
    OUTLINED_FUNCTION_164_0();
    sub_24772D144();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_130_1();
    v68 = v31;
    v69 = v30 | 0xEF2065766F6D0000;
    sub_2476FBC10(&qword_2576B9030, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_150_0();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    OUTLINED_FUNCTION_150_0();
    sub_24772CAFC();
    v32 = swift_bridgeObjectRelease();
    v33 = v68;
    v34 = v69;
    OUTLINED_FUNCTION_105_1(v32, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
    v35 = OUTLINED_FUNCTION_49_6();
    *(_OWORD *)(v35 + 16) = xmmword_24772E730;
    *(_QWORD *)(v35 + 32) = v29;
    OUTLINED_FUNCTION_107_1();
    sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
    OUTLINED_FUNCTION_46_8();
    *(_BYTE *)v36 = 3;
    *(_QWORD *)(v36 + 8) = v33;
    *(_QWORD *)(v36 + 16) = v34;
    *(_QWORD *)(v36 + 24) = v35;
    swift_willThrow();
    v37 = (void *)sub_24772C4E4();
    v68 = 0;
    v20 = v2;
    v38 = objc_msgSend(v2, sel_removeItemAtURL_error_, v37, &v68);

    if (!v38)
    {
      v40 = v68;
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_166_0();
      OUTLINED_FUNCTION_46_3();
      OUTLINED_FUNCTION_29_3();
    }
    v39 = v68;
    v41 = v61;
    sub_247704440((uint64_t)v63, v61, (uint64_t (*)(_QWORD))sub_2476FBA24);
    OUTLINED_FUNCTION_132_0(v41);
    if (v42)
    {
      sub_2477047A8(v41, (uint64_t (*)(_QWORD))sub_2476FBA24);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, _QWORD *))(v66 + 32))(v62, v41, v2);
      v43 = (void *)sub_24772C4E4();
      v44 = (void *)sub_24772C4E4();
      v68 = 0;
      v45 = objc_msgSend(v2, sel_moveItemAtURL_toURL_error_, v43, v44, &v68);

      if (!v45)
      {
        v48 = v68;
        OUTLINED_FUNCTION_112_0();
        OUTLINED_FUNCTION_166_0();
        OUTLINED_FUNCTION_46_3();
        OUTLINED_FUNCTION_29_3();
      }
      v46 = v68;
      (*(void (**)(uint64_t, _QWORD *))(v66 + 8))(v62, v2);
    }
LABEL_17:
    swift_willThrow();

LABEL_18:
    OUTLINED_FUNCTION_186(v49, (uint64_t (*)(_QWORD))sub_2476FBA24);
    return;
  }
  __break(1u);
}

id sub_2476FAF18(void *a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_24772C4E4();
  type metadata accessor for FileCache.Entry(0);
  v3 = (void *)sub_24772C4E4();
  v7[0] = 0;
  v4 = objc_msgSend(a1, sel_moveItemAtURL_toURL_error_, v2, v3, v7);

  if (v4)
    return v7[0];
  v6 = v7[0];
  sub_24772C49C();

  return (id)swift_willThrow();
}

uint64_t FileCache.didFinishWriting(entry:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FB014()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  type metadata accessor for FileCache.Entry(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_2476FB078;
  v2 = OUTLINED_FUNCTION_90_3();
  return sub_2476FB0A4(v2);
}

uint64_t sub_2476FB078()
{
  uint64_t v0;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FB0A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_24772C5E0();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476FB0EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_79();
  v1 = (_QWORD *)OUTLINED_FUNCTION_102();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_55_1(v2, (unint64_t *)&qword_25444C3A8);
  *v1 = v0;
  v1[1] = sub_2476FB164;
  OUTLINED_FUNCTION_54_8();
  return OUTLINED_FUNCTION_14_10();
}

uint64_t sub_2476FB164()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FB1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  _QWORD *v8;
  uint64_t (*v9)(double);

  v1 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 16);
  sub_24772C4D8();
  *(_QWORD *)(v0 + 96) = v2;
  sub_247727020();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_116_1();
    return OUTLINED_FUNCTION_20_9(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    sub_24772C5D4();
    sub_24772C5C8();
    v7 = v6;
    OUTLINED_FUNCTION_38_2(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    if (qword_2576B7B08 != -1)
      swift_once();
    *(_QWORD *)(v0 + 104) = qword_2576C1600;
    OUTLINED_FUNCTION_176((int *)&unk_2576B98D8);
    OUTLINED_FUNCTION_79();
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    v8 = (_QWORD *)OUTLINED_FUNCTION_102();
    *(_QWORD *)(v0 + 112) = v8;
    OUTLINED_FUNCTION_92_2(v8, (uint64_t)sub_2476FB2FC);
    return v9(v7);
  }
}

uint64_t sub_2476FB2FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FB358()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_81();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476FB380()
{
  uint64_t v0;

  OUTLINED_FUNCTION_116_1();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FB3A8()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_116_1();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FileCache.containerURL.getter()
{
  return sub_2476FB400();
}

uint64_t FileCache.temporaryContainerURL.getter()
{
  return sub_2476FB400();
}

uint64_t sub_2476FB400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_16_10();
  v0 = OUTLINED_FUNCTION_63_4();
  return OUTLINED_FUNCTION_50_5(v0, v1, v2, v3);
}

void FileCache.contentType.getter(_DWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_DWORD *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
}

double FileCache.policy.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  double *v3;
  double result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy);
  OUTLINED_FUNCTION_6_3();
  result = *v3;
  *a1 = *(_QWORD *)v3;
  return result;
}

uint64_t FileCache.policy.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy);
  result = OUTLINED_FUNCTION_6_3();
  *v3 = v2;
  return result;
}

void FileCache.policy.modify()
{
  OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_35();
}

uint64_t FileCache.__allocating_init(containerURL:temporaryContainerURL:contentType:)(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  FileCache.init(containerURL:temporaryContainerURL:contentType:)(a1, a2, a3);
  return v6;
}

_QWORD *FileCache.init(containerURL:temporaryContainerURL:contentType:)(uint64_t a1, uint64_t a2, int *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v65 = a2;
  v63 = *v3;
  v6 = sub_24772C4B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_6();
  v10 = v9 - v8;
  sub_2476FBA24(0);
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_6();
  v62 = v13 - v12;
  v69 = OUTLINED_FUNCTION_16_10();
  v66 = *(_QWORD *)(v69 - 8);
  v14 = MEMORY[0x24BDAC7A8](v69);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (char *)&v55 - v17;
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v55 - v19;
  v21 = *a3;
  v22 = v3;
  v23 = a1;
  *(_QWORD *)((char *)v22 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy) = 0x40F5180000000000;
  v24 = v64;
  sub_2476FBA40();
  if (v24)
  {
    v67 = 0;
    v68 = 0xE000000000000000;
    sub_24772D144();
    OUTLINED_FUNCTION_163();
    v67 = 0xD00000000000001BLL;
    v68 = 0x80000002477359E0;
    sub_2476FBC10(&qword_2576B9030, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    v25 = v69;
    sub_24772D480();
    sub_24772CAFC();
    v26 = swift_bridgeObjectRelease();
    v27 = v67;
    v28 = v68;
    OUTLINED_FUNCTION_105_1(v26, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
    v29 = OUTLINED_FUNCTION_49_6();
    *(_OWORD *)(v29 + 16) = xmmword_24772E730;
    *(_QWORD *)(v29 + 32) = v24;
    OUTLINED_FUNCTION_107_1();
    sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
    OUTLINED_FUNCTION_46_8();
    *(_BYTE *)v30 = 1;
    *(_QWORD *)(v30 + 8) = v27;
    *(_QWORD *)(v30 + 16) = v28;
    *(_QWORD *)(v30 + 24) = v29;
    swift_willThrow();
    sub_2477047A8(v65, (uint64_t (*)(_QWORD))sub_2476FBA24);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(a1, v25);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v56 = v22;
    v57 = 0;
    v58 = v21;
    v59 = v16;
    v63 = v10;
    v64 = v6;
    v31 = (char *)v22 + OBJC_IVAR____TtC15SonicFoundation9FileCache_containerURL;
    v32 = a1;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
    v34 = v69;
    v33(v31, v23, v69);
    v35 = v62;
    sub_247704440(v65, v62, (uint64_t (*)(_QWORD))sub_2476FBA24);
    v36 = v61;
    v60 = v32;
    v33(v61, v32, v34);
    v37 = v20;
    if (__swift_getEnumTagSinglePayload(v35, 1, v34) == 1)
    {
      v67 = 7368052;
      v68 = 0xE300000000000000;
      v38 = v7;
      v39 = *(void (**)(uint64_t))(v7 + 104);
      v40 = v63;
      v41 = v64;
      v42 = *MEMORY[0x24BDCD7A0];
      v39(v63);
      sub_2476B5B30();
      sub_24772C538();
      OUTLINED_FUNCTION_155_0();
      OUTLINED_FUNCTION_163();
      v43 = v66;
      v44 = *(uint64_t (**)(char *, uint64_t))(v66 + 8);
      v45 = v44(v36, v69);
      OUTLINED_FUNCTION_186(v45, (uint64_t (*)(_QWORD))sub_2476FBA24);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
    }
    else
    {
      v47 = v66;
      v44 = *(uint64_t (**)(char *, uint64_t))(v66 + 8);
      v48 = v69;
      v44(v36, v69);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
      v46(v37, v35, v48);
      v42 = *MEMORY[0x24BDCD7A0];
      v38 = v7;
      v40 = v63;
      v41 = v64;
    }
    v22 = v56;
    v49 = v69;
    v46((char *)v56 + OBJC_IVAR____TtC15SonicFoundation9FileCache_temporaryContainerURL, (uint64_t)v37, v69);
    *(_DWORD *)((char *)v22 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType) = v58;
    v67 = 0x62642E6568636143;
    v68 = 0xE800000000000000;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 104))(v40, v42, v41);
    sub_2476B5B30();
    v50 = (uint64_t)v59;
    v51 = (void (*)(uint64_t, uint64_t))v44;
    v52 = v60;
    sub_24772C52C();
    OUTLINED_FUNCTION_155_0();
    OUTLINED_FUNCTION_163();
    type metadata accessor for FileCache.CacheDatabase();
    v53 = swift_allocObject();
    sub_2476FF46C(v50);
    sub_2477047A8(v65, (uint64_t (*)(_QWORD))sub_2476FBA24);
    v51(v52, v49);
    *(_QWORD *)((char *)v22 + OBJC_IVAR____TtC15SonicFoundation9FileCache_cacheDB) = v53;
  }
  return v22;
}

void sub_2476FBA24(uint64_t a1)
{
  sub_2477021D0(a1, &qword_2576B9028, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
}

id sub_2476FBA40()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_24772C4E4();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_24772C49C();

  return (id)swift_willThrow();
}

void sub_2476FBB2C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2476B443C(255, a3);
    v4 = sub_24772D48C();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_35();
}

void sub_2476FBB7C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_2576B9038)
  {
    v2 = sub_2476FBBD4();
    v4 = type metadata accessor for SonicError(a1, (uint64_t)&type metadata for FileCacheError, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2576B9038);
  }
}

unint64_t sub_2476FBBD4()
{
  unint64_t result;

  result = qword_2576B9040;
  if (!qword_2576B9040)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for FileCacheError, &type metadata for FileCacheError);
    atomic_store(result, (unint64_t *)&qword_2576B9040);
  }
  return result;
}

void sub_2476FBC10(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_159_0();
  }
  OUTLINED_FUNCTION_35();
}

uint64_t type metadata accessor for FileCache.CacheDatabase()
{
  return objc_opt_self();
}

uint64_t FileCache.entry(for:pathExtension:purgeUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  sub_2476FBA24(0);
  *(_QWORD *)(v6 + 56) = OUTLINED_FUNCTION_28();
  v8 = OUTLINED_FUNCTION_16_10();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 80) = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v6 + 88) = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v6 + 96) = OUTLINED_FUNCTION_20_1();
  *(_BYTE *)(v6 + 153) = *a5;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FBCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  sub_2476FC028(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    sub_2477047A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))sub_2476FBA24);
    v4 = OUTLINED_FUNCTION_128_1();
    OUTLINED_FUNCTION_169_0(v3, v5, v6, v4);
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_20_9(v7);
  }
  else
  {
    v9 = *(_BYTE *)(v0 + 153);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 24);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    *(_QWORD *)(v0 + 104) = v18;
    v18(v11, v14, v15);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v19(v10, v17, v15);
    LODWORD(v17) = *(_DWORD *)(v16 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
    *(_DWORD *)(v0 + 148) = v17;
    v19(v12, v11, v15);
    v20 = *(_QWORD *)(v16 + OBJC_IVAR____TtC15SonicFoundation9FileCache_cacheDB);
    *(_QWORD *)(v0 + 112) = v20;
    type metadata accessor for NoPurgeAssertion(0);
    *(_DWORD *)(v0 + 144) = v17;
    *(_BYTE *)(v0 + 152) = v9;
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v21;
    *v21 = v0;
    v21[1] = sub_2476FBE80;
    v22 = OUTLINED_FUNCTION_175(*(_QWORD *)(v0 + 80));
    return sub_2476FA52C(v22, (_DWORD *)(v0 + 144), (_BYTE *)(v0 + 152), v20);
  }
}

uint64_t sub_2476FBE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_140(v4);
  *(_QWORD *)(v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 136) = a1;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476FBEE4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22_6();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104);
  v3 = *(_DWORD *)(v0 + 148);
  v4 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release();
  v9 = (int *)OUTLINED_FUNCTION_128_1();
  *(_QWORD *)(v8 + v9[8]) = v1;
  v2(v8, v4, v5);
  *(_DWORD *)(v8 + v9[5]) = v3;
  v10 = (_QWORD *)(v8 + v9[6]);
  *v10 = v7;
  v10[1] = v6;
  v2(v8 + v9[7], v13, v5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v5);
  __swift_storeEnumTagSinglePayload(v8, 0, 1, (uint64_t)v9);
  OUTLINED_FUNCTION_144_0();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_12_10(v11);
}

uint64_t sub_2476FBFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  swift_release();
  OUTLINED_FUNCTION_167_0(v3);
  OUTLINED_FUNCTION_167_0(v1);
  OUTLINED_FUNCTION_167_0(v2);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_29_6();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FC028@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v4 = sub_24772C4B4();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24772C544();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24772C82C();
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_24772C820();
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v25 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24772CA48();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2476FBA24(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.coreURL.getter(v17, (uint64_t)v19);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v6) == 1)
  {
    sub_2477047A8((uint64_t)v19, (uint64_t (*)(_QWORD))sub_2476FBA24);
  }
  else
  {
    v24 = a3;
    sub_24772C4C0();
    v23[2] = v7;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    sub_24772CA3C();
    sub_24772CA24();
    v21 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (v21 >> 60 != 15)
    {
      sub_2476FBC10(&qword_2576B9250, (void (*)(uint64_t))MEMORY[0x24BDC6AF8]);
      sub_24772C814();
      __asm { BR              X10 }
    }
    a3 = v24;
  }
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v6);
}

uint64_t FileCache.import(to:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FC518()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2476FA83C(*(_QWORD *)(v0 + 24));
  type metadata accessor for FileCache.Entry(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2476FC6C0;
  v2 = OUTLINED_FUNCTION_90_3();
  return sub_2476FB0A4(v2);
}

uint64_t sub_2476FC6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476FC70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_117_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_10();
  sub_2476FBC10(&qword_2576B9030, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  OUTLINED_FUNCTION_183();
  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_40_3();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_183();
  OUTLINED_FUNCTION_141_0();
  v2 = OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_105_1(v2, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
  v3 = OUTLINED_FUNCTION_8_3();
  *(_OWORD *)(v3 + 16) = xmmword_24772E730;
  *(_QWORD *)(v3 + 32) = v1;
  OUTLINED_FUNCTION_107_1();
  sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
  v4 = OUTLINED_FUNCTION_47_8();
  *(_BYTE *)v5 = 4;
  *(_QWORD *)(v5 + 8) = 0xD000000000000011;
  *(_QWORD *)(v5 + 16) = 0x8000000247735A00;
  OUTLINED_FUNCTION_85_2(v4, v5);
  return OUTLINED_FUNCTION_20_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FileCache.temporaryDestinationURL(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;

  result = sub_2476FC8F0(v2, a1, a2);
  if (v3)
  {
    OUTLINED_FUNCTION_105_1(result, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
    v5 = OUTLINED_FUNCTION_49_6();
    *(_OWORD *)(v5 + 16) = xmmword_24772E730;
    *(_QWORD *)(v5 + 32) = v3;
    OUTLINED_FUNCTION_107_1();
    sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
    OUTLINED_FUNCTION_36();
    *(_BYTE *)v6 = 1;
    return OUTLINED_FUNCTION_65_3(v6, (uint64_t)"Failed to create temporary directory)");
  }
  return result;
}

uint64_t sub_2476FC8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  _QWORD v24[4];
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v24[2] = a2;
  v24[3] = a3;
  v28 = *MEMORY[0x24BDAC8D0];
  v25 = sub_24772C4B4();
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24772C544();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_temporaryContainerURL, v8);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v13 = (void *)sub_24772C4E4();
  v26 = 0;
  v14 = objc_msgSend(v12, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v13, 1, 0, &v26);

  if ((v14 & 1) != 0)
  {
    v15 = v26;
    v16 = (void *)sub_24770A900(0, 21, 0xD000000000000040, 0x8000000247734C80);
    v24[1] = v3;
    v26 = v16;
    v17 = MEMORY[0x24BEE0718];
    sub_2476C8858(0, (unint64_t *)&qword_2576B8088, MEMORY[0x24BEE0718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24770432C(&qword_2576B8090, (unint64_t *)&qword_2576B8088, v17);
    v26 = (id)sub_24772CB8C();
    v27 = v18;
    sub_24772C91C();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    v20 = v26;
    v19 = v27;
    type metadata accessor for FileCache.Entry(0);
    sub_24772C4D8();
    v26 = v20;
    v27 = v19;
    sub_24772C91C();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCD7A0], v25);
    sub_2476B5B30();
    sub_24772C538();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v26;
    sub_24772C49C();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FileCache.clearTemporaryContainer()()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24772C508();
  v2 = (void *)sub_24772C9F4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    v4 = sub_2476FCD34();
    if (v0)
    {
      OUTLINED_FUNCTION_105_1((uint64_t)v4, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
      v5 = OUTLINED_FUNCTION_49_6();
      *(_OWORD *)(v5 + 16) = xmmword_24772E730;
      *(_QWORD *)(v5 + 32) = v0;
      OUTLINED_FUNCTION_107_1();
      sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
      OUTLINED_FUNCTION_36();
      *(_BYTE *)v6 = 2;
      OUTLINED_FUNCTION_65_3(v6, (uint64_t)"Failed to delete temporary directory)");
    }
  }
}

id sub_2476FCD34()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_24772C4E4();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_24772C49C();

  return (id)swift_willThrow();
}

uint64_t FileCache.numberOfBytesWritten()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FCE34()
{
  uint64_t v0;
  double *v1;
  double v2;
  _QWORD *v3;

  v1 = (double *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy);
  OUTLINED_FUNCTION_6_3();
  v2 = *v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  OUTLINED_FUNCTION_92_2(v3, (uint64_t)sub_2476FCEB0);
  return sub_2476FCFB8(v2);
}

uint64_t sub_2476FCEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_153_0(v4);
  if (!v1)
    return OUTLINED_FUNCTION_32_0(a1, *(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FCF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 56);
  OUTLINED_FUNCTION_105_1(a1, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
  v3 = OUTLINED_FUNCTION_8_3();
  *(_OWORD *)(v3 + 16) = xmmword_24772E730;
  *(_QWORD *)(v3 + 32) = v2;
  OUTLINED_FUNCTION_107_1();
  sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
  v4 = OUTLINED_FUNCTION_47_8();
  *(_BYTE *)v5 = 5;
  *(_QWORD *)(v5 + 8) = 0xD000000000000021;
  *(_QWORD *)(v5 + 16) = 0x8000000247735A80;
  OUTLINED_FUNCTION_85_2(v4, v5);
  return OUTLINED_FUNCTION_23_4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2476FCFB8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 32) = v1;
  *(double *)(v2 + 24) = a1;
  v3 = sub_24772C5E0();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 56) = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2476FD004()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_79();
  v1 = (_QWORD *)OUTLINED_FUNCTION_102();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_55_1(v2, (unint64_t *)&qword_25444C3A8);
  *v1 = v0;
  v1[1] = sub_2476FD07C;
  OUTLINED_FUNCTION_54_8();
  return OUTLINED_FUNCTION_14_10();
}

uint64_t sub_2476FD07C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FD0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, double);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(double *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 88) = v4;
  sub_24772C5D4();
  sub_24772C5C8();
  v6 = v5;
  OUTLINED_FUNCTION_38_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (qword_2576B7B08 != -1)
    swift_once();
  v7 = qword_2576C1600;
  *(_QWORD *)(v0 + 96) = qword_2576C1600;
  OUTLINED_FUNCTION_177((int *)&unk_2576B98C8);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_39_0();
  v8 = (_QWORD *)OUTLINED_FUNCTION_102();
  *(_QWORD *)(v0 + 104) = v8;
  OUTLINED_FUNCTION_92_2(v8, (uint64_t)sub_2476FD1AC);
  return v10(v7, v4, v6 - v3);
}

uint64_t sub_2476FD1AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  OUTLINED_FUNCTION_140(&v6);
  *(_QWORD *)(v4 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 120) = a1;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476FD218()
{
  uint64_t v0;

  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_81();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_2476FD250()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_116_1();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FileCache.clean(markAllPurgeable:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FD298()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_2476FD320;
  return sub_2476FD5D0((uint64_t)sub_2476FF5BC, v3);
}

uint64_t sub_2476FD320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v0 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_2476FD37C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FD3A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD v24[2];
  int v25;
  char v26;

  v25 = a5;
  v22 = a3;
  v8 = sub_24772C4B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24772C544();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a4;
  v24[0] = a1;
  v24[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCD7A0], v8);
  sub_2476B5B30();
  sub_24772C52C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24772C508();
  v17 = (void *)sub_24772C9F4();
  swift_bridgeObjectRelease();
  LOBYTE(a4) = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

  if ((a4 & 1) != 0)
  {
    if ((v22 & 1) == 0 && (v25 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return 1;
    }
    LODWORD(v24[0]) = *(_DWORD *)(v21 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
    v26 = 0;
    v19 = v23;
    sub_24772817C((int *)v24, &v26);
    if (v19)
      MEMORY[0x2495821C4](v19);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 0;
}

uint64_t sub_2476FD5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FD5E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[6] = *(_QWORD *)(v0[5] + 16);
  OUTLINED_FUNCTION_79();
  v1 = (_QWORD *)OUTLINED_FUNCTION_102();
  v0[7] = v1;
  v2 = OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_55_1(v2, (unint64_t *)&qword_25444C3A8);
  *v1 = v0;
  v1[1] = sub_2476FD668;
  OUTLINED_FUNCTION_54_8();
  return OUTLINED_FUNCTION_14_10();
}

uint64_t sub_2476FD668()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FD6BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v0[9] = v0[2];
  if (qword_2576B7B08 != -1)
    swift_once();
  v0[10] = qword_2576C1600;
  OUTLINED_FUNCTION_176((int *)&unk_2576B98B8);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_79();
  v1 = (_QWORD *)OUTLINED_FUNCTION_102();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_2476FD760;
  return v3();
}

uint64_t sub_2476FD760()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73_5();
  if (!v0)
    swift_release();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FD7A8()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476FD7D0()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476FD7D8()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2476FD808()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = sub_24772C820();
  v2 = (void (*)(uint64_t))MEMORY[0x24BDC62F0];
  MEMORY[0x24BDAC7A8](v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v1);
  sub_2476FBC10(&qword_2576B9258, v2);
  sub_24772CBB0();
  v5 = v21;
  v6 = v22;
  v7 = *(_QWORD *)(v21 + 16);
  if (v22 == v7)
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_3:
    swift_bridgeObjectRelease();
    v21 = v8;
    v9 = MEMORY[0x24BEE0D00];
    sub_2476C8858(0, (unint64_t *)&qword_2576B81D0, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24770432C(&qword_2576B81D8, (unint64_t *)&qword_2576B81D0, v9);
    sub_24772C9AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v22 < v7)
    {
      v8 = MEMORY[0x24BEE4AF8];
      v20 = xmmword_24772E730;
      v10 = v22;
      while ((v6 & 0x8000000000000000) == 0)
      {
        if (v10 >= *(_QWORD *)(v5 + 16))
          goto LABEL_15;
        v11 = *(_BYTE *)(v5 + 32 + v10);
        sub_2476FBB2C(0, (unint64_t *)&qword_2576B8F68, (unint64_t *)&qword_2576B8F70);
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = v20;
        *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE4260];
        *(_QWORD *)(v12 + 64) = MEMORY[0x24BEE42B0];
        *(_BYTE *)(v12 + 32) = v11;
        v13 = sub_24772CA30();
        v15 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2476C6064();
          v8 = v18;
        }
        v16 = *(_QWORD *)(v8 + 16);
        if (v16 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_2476C6064();
          v8 = v19;
        }
        ++v10;
        *(_QWORD *)(v8 + 16) = v16 + 1;
        v17 = v8 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v15;
        if (v7 == v10)
          goto LABEL_3;
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t FileCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC15SonicFoundation9FileCache_containerURL;
  v2 = OUTLINED_FUNCTION_16_10();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC15SonicFoundation9FileCache_temporaryContainerURL, v2);
  swift_release();
  return v0;
}

uint64_t FileCache.__deallocating_deinit()
{
  FileCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2476FDB1C()
{
  uint64_t result;

  sub_2477040A0(0, &qword_2576B9210, type metadata accessor for NoPurgeAssertion);
  swift_allocObject();
  result = sub_24770230C();
  qword_2576B9008 = result;
  return result;
}

uint64_t sub_2476FDB70(uint64_t a1, int a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  int v17;

  v9 = sub_24772C544();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a1);
  v17 = a2;
  v16 = a3;
  type metadata accessor for NoPurgeAssertion(0);
  swift_allocObject();
  swift_retain();
  result = sub_2476FDD6C((uint64_t)v11, &v17, &v16, a4);
  if (v4)
    return v14;
  return result;
}

uint64_t sub_2476FDC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2476FDC68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  v2 = v0[4];
  v0[7] = *(_QWORD *)(v0[6] + 16);
  v3 = (_QWORD *)OUTLINED_FUNCTION_197();
  v0[8] = v3;
  v3[2] = v0 + 2;
  v3[3] = v2;
  v3[4] = v1;
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FDCC8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = sub_2476F9EEC((void (*)(uint64_t *__return_ptr, uint64_t))sub_247704424);
  *(_QWORD *)(v0 + 80) = 0;
  swift_release();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476FDD2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_2476FDD3C()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FDD6C(uint64_t a1, int *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  _QWORD v31[3];
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v34 = a4;
  v8 = sub_24772C544();
  v35 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v35 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2476CB854();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v12) = *a3;
  v32 = *a2;
  v33 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24772C508();
  v15 = (void *)sub_24772C9F4();
  swift_bridgeObjectRelease();
  LODWORD(a3) = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((_DWORD)a3 && (sub_2477282D8(), v4))
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_24772D144();
    swift_bridgeObjectRelease();
    v36 = 0x742064656C696146;
    v37 = 0xEF206B72616D206FLL;
    sub_2476FBC10(&qword_2576B9030, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    v16 = v36;
    v17 = v37;
    sub_2476FBB2C(0, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24772E730;
    *(_QWORD *)(v18 + 32) = v4;
    sub_2476FBB7C(0);
    sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
    swift_allocError();
    *(_BYTE *)v19 = 7;
    *(_QWORD *)(v19 + 8) = v16;
    *(_QWORD *)(v19 + 16) = v17;
    *(_QWORD *)(v19 + 24) = v18;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(a1, v8);
    type metadata accessor for NoPurgeAssertion(0);
    v20 = v38;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v31[1] = v9;
    v31[2] = v4;
    v21 = (uint64_t)v13;
    v22 = v10;
    v20 = v38;
    v23 = v35;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    v24(v38 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL, a1, v8);
    *(_DWORD *)(v20 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_contentType) = v32;
    *(_BYTE *)(v20 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_purgeUrgency) = v33;
    v25 = v8;
    v26 = v34;
    *(_QWORD *)(v20 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB) = v34;
    v27 = sub_24772CDF0();
    __swift_storeEnumTagSinglePayload(v21, 1, 1, v27);
    v24((uint64_t)v22, a1, v25);
    v28 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = 0;
    *((_QWORD *)v29 + 3) = 0;
    *((_QWORD *)v29 + 4) = v26;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v29[v28], v22, v25);
    swift_retain();
    sub_2476BD3CC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a1, v25);
  }
  return v20;
}

uint64_t sub_2476FE144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2476B9B58;
  return sub_2476FE19C(a5, 0);
}

uint64_t sub_2476FE19C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 104) = a2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v2;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2476FE1B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[5] = *(_QWORD *)(v0[4] + 16);
  OUTLINED_FUNCTION_79();
  v1 = (_QWORD *)OUTLINED_FUNCTION_102();
  v0[6] = v1;
  v2 = OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_55_1(v2, (unint64_t *)&qword_25444C3A8);
  *v1 = v0;
  v1[1] = sub_2476FE234;
  OUTLINED_FUNCTION_54_8();
  return OUTLINED_FUNCTION_14_10();
}

uint64_t sub_2476FE234()
{
  uint64_t v0;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_153_0(v0);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FE280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  v2 = sub_24772C4D8();
  v4 = v3;
  *(_QWORD *)(v0 + 72) = v3;
  if (qword_2576B7B08 != -1)
    swift_once();
  v5 = qword_2576C1600;
  *(_QWORD *)(v0 + 80) = qword_2576C1600;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_2576B9878
                                                                                 + dword_2576B9878);
  OUTLINED_FUNCTION_79();
  sub_24772C91C();
  OUTLINED_FUNCTION_25_2();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  *v6 = v0;
  v6[1] = sub_2476FE35C;
  return v8((uint64_t)v8, v5, v1, *(_BYTE *)(v0 + 104), v2, v4);
}

uint64_t sub_2476FE35C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73_5();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2476FE3A8()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_26_2();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_2476FE3CC()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_2476FE3D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2476FE40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v1 = sub_24772C544();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2476CB854();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL;
  v19 = v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL;
  v9 = *(_DWORD *)(v0
                 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_contentType);
  v20 = *(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_purgeUrgency);
  v21 = v9;
  v22 = OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB);
  sub_24772CDC0();
  v11 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v13 = (v12 + v3 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v14 = (v12 + v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v15 + v12, v4, v1);
  v16 = v15 + v13;
  *(_DWORD *)v16 = v21;
  *(_BYTE *)(v16 + 4) = v20;
  *(_QWORD *)(v15 + v14) = v10;
  swift_retain();
  sub_2476FF300((uint64_t)v7, (uint64_t)&unk_2576B9198, v15);
  swift_release();
  sub_2477047A8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2476CB854);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v19, v1);
  swift_release();
  return v0;
}

uint64_t sub_2476FE5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v7 + 240) = a6;
  *(_DWORD *)(v7 + 236) = a5;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 88) = a7;
  v8 = sub_24772CA48();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  v9 = sub_24772C544();
  *(_QWORD *)(v7 + 120) = v9;
  *(_QWORD *)(v7 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  v10 = MEMORY[0x24BEE0D00];
  sub_2476C8858(0, &qword_2576B91B0, MEMORY[0x24BEE0D00], MEMORY[0x24BEE6A98]);
  *(_QWORD *)(v7 + 144) = v11;
  *(_QWORD *)(v7 + 152) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 160) = swift_task_alloc();
  sub_2476C8858(0, &qword_2576B91B8, v10, MEMORY[0x24BEE6A78]);
  *(_QWORD *)(v7 + 168) = v12;
  *(_QWORD *)(v7 + 176) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 184) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2476FE720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_2576B7B00 != -1)
    a1 = swift_once();
  v3 = v1[19];
  v2 = v1[20];
  OUTLINED_FUNCTION_17_2(a1, &qword_2576B7B90, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = OUTLINED_FUNCTION_8_3();
  *(_OWORD *)(v4 + 16) = xmmword_24772E730;
  swift_retain();
  *(_QWORD *)(v4 + 32) = sub_24772C508();
  *(_QWORD *)(v4 + 40) = v5;
  sub_2476FF23C(v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24772CE38();
  OUTLINED_FUNCTION_38_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v1[24] = v6;
  OUTLINED_FUNCTION_188(v6);
  OUTLINED_FUNCTION_26();
  return sub_24772CE44();
}

uint64_t sub_2476FE874()
{
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

void sub_2476FE8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  int v17;
  uint64_t v18;
  int v19;
  char *v20;
  unsigned __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41[2];

  v41[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 200) = v1;
  *(_QWORD *)(v0 + 208) = v2;
  if (!v2)
  {
LABEL_8:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_77_3();
    __asm { BR              X0 }
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 16))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 120));
  if (v1 == sub_24772C508() && v2 == v3)
  {
    v8 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    OUTLINED_FUNCTION_132();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v5 = sub_24772D4F8();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_137_0();
    if ((v5 & 1) == 0)
    {
      __break(1u);
      goto LABEL_8;
    }
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24772C508();
  v11 = (void *)sub_24772C9F4();
  OUTLINED_FUNCTION_132();
  v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (!v12)
    goto LABEL_21;
  v13 = *(_DWORD *)(v0 + 236);
  if ((v13 & 0x80000000) == 0)
  {
    *(_DWORD *)(v0 + 232) = v13 | dword_2477310A0[*(char *)(v0 + 240)] | 0x10000;
    *(_QWORD *)(v0 + 32) = sub_24772C508();
    *(_QWORD *)(v0 + 40) = v14;
    sub_24772CA3C();
    sub_2476B5B30();
    v15 = sub_24772D090();
    OUTLINED_FUNCTION_137_0();
    swift_bridgeObjectRelease();
    if (v15)
      v16 = (const char *)(v15 + 32);
    else
      v16 = 0;
    v17 = fsctl(v16, 0xC0084A44uLL, (void *)(v0 + 232), 0);
    v18 = OUTLINED_FUNCTION_132();
    if (v17)
    {
      v19 = MEMORY[0x249580B14](v18);
      if (v19)
      {
        v20 = sub_247726D08(v19);
        swift_willThrow();
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = 0xE000000000000000;
        sub_24772D144();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_130_1();
        *(_QWORD *)(v0 + 48) = v22;
        *(_QWORD *)(v0 + 56) = v21 | 0xEF206B72616D0000;
        sub_2476FBC10(&qword_2576B9030, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
        sub_24772D480();
        sub_24772CAFC();
        OUTLINED_FUNCTION_40_3();
        v23 = sub_24772CAFC();
        v24 = *(_QWORD *)(v0 + 48);
        v25 = *(_QWORD *)(v0 + 56);
        OUTLINED_FUNCTION_105_1(v23, &qword_2576B81F0, (unint64_t *)&qword_25444C3A8);
        v26 = OUTLINED_FUNCTION_8_3();
        *(_OWORD *)(v26 + 16) = xmmword_24772E730;
        *(_QWORD *)(v26 + 32) = v20;
        OUTLINED_FUNCTION_107_1();
        sub_2476FBC10(&qword_2576B9048, sub_2476FBB7C);
        v27 = swift_allocError();
        *(_BYTE *)v28 = 8;
        *(_QWORD *)(v28 + 8) = v24;
        *(_QWORD *)(v28 + 16) = v25;
        OUTLINED_FUNCTION_85_2(v27, v28);
        if (qword_2576B7AF0 != -1)
          swift_once();
        v29 = OUTLINED_FUNCTION_165_0();
        __swift_project_value_buffer(v29, (uint64_t)qword_2576B8FD0);
        OUTLINED_FUNCTION_185();
        OUTLINED_FUNCTION_185();
        OUTLINED_FUNCTION_11_2();
        v30 = sub_24772C784();
        v31 = sub_24772CFB8();
        v32 = os_log_type_enabled(v30, v31);
        v33 = *(_QWORD *)(v0 + 208);
        if (v32)
        {
          v34 = *(_QWORD *)(v0 + 200);
          v35 = OUTLINED_FUNCTION_87_2();
          v36 = (_QWORD *)OUTLINED_FUNCTION_87_2();
          v41[0] = OUTLINED_FUNCTION_87_2();
          *(_DWORD *)v35 = 136446466;
          sub_24772C91C();
          *(_QWORD *)(v35 + 4) = sub_247703404(v34, v33, v41);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v35 + 12) = 2114;
          OUTLINED_FUNCTION_185();
          v37 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v35 + 14) = v37;
          *v36 = v37;
          OUTLINED_FUNCTION_96_2();
        }
        OUTLINED_FUNCTION_96_2();
      }
    }
LABEL_21:
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v38;
    *v38 = v0;
    v38[1] = sub_2476FEEEC;
    OUTLINED_FUNCTION_175(*(_QWORD *)(v0 + 80));
    OUTLINED_FUNCTION_77_3();
    sub_2476FE19C(v39, v40);
    return;
  }
  sub_24772D348();
  OUTLINED_FUNCTION_77_3();
}

uint64_t sub_2476FEEEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 224) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2476FEF8C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  OUTLINED_FUNCTION_188(v1);
  OUTLINED_FUNCTION_26();
  return sub_24772CE44();
}

void sub_2476FF008()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  if (qword_2576B7AF0 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_165_0();
  __swift_project_value_buffer(v1, (uint64_t)qword_2576B8FD0);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_11_2();
  v2 = sub_24772C784();
  v3 = sub_24772CFB8();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 208);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 200);
    v7 = OUTLINED_FUNCTION_87_2();
    v8 = (_QWORD *)OUTLINED_FUNCTION_87_2();
    v10[0] = OUTLINED_FUNCTION_87_2();
    *(_DWORD *)v7 = 136446466;
    OUTLINED_FUNCTION_133_0();
    *(_QWORD *)(v7 + 4) = sub_247703404(v6, v5, v10);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2114;
    OUTLINED_FUNCTION_173();
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v7 + 14) = v9;
    *v8 = v9;
    OUTLINED_FUNCTION_54_3();
  }
  OUTLINED_FUNCTION_54_3();
}

uint64_t sub_2476FF23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;

  sub_2476C8858(0, &qword_2576B91E0, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A18]);
  MEMORY[0x24BDAC7A8](v3);
  v8 = v1;
  v9 = a1;
  (*(void (**)(_BYTE *, _QWORD))(v4 + 104))(&v7[-v5], *MEMORY[0x24BEE6A10]);
  return sub_24772CE5C();
}

uint64_t sub_2476FF300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_247703244(a1, 0, 0, 0, 1, 0, 0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2476FF400()
{
  sub_2476FE40C();
  return swift_deallocClassInstance();
}

void sub_2476FF420()
{
  uint64_t v0;
  char v1;

  v1 = 0;
  type metadata accessor for ActorQueue();
  swift_allocObject();
  ActorQueue.init(ordering:)(&v1);
  qword_2576C1600 = v0;
}

uint64_t sub_2476FF46C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = OUTLINED_FUNCTION_16_10();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2476CB854();
  OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_6();
  v10 = v9 - v8;
  v11 = sub_24772CDF0();
  OUTLINED_FUNCTION_169_0(v10, v12, v13, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = (v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v14, v6, v3);
  *(_QWORD *)(v16 + v15) = 1;
  sub_2476BD510();
  v18 = v17;
  OUTLINED_FUNCTION_38_2(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  *(_QWORD *)(v1 + 16) = v18;
  return v1;
}

uint64_t type metadata accessor for NoPurgeAssertion(uint64_t a1)
{
  return sub_2476FF82C(a1, (uint64_t *)&unk_2576B90E0);
}

uint64_t sub_2476FF5BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return sub_2476FD3A8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(unsigned __int8 *)(v3 + 24)) & 1;
}

unint64_t sub_2476FF5E0()
{
  unint64_t result;

  result = qword_2576B9088;
  if (!qword_2576B9088)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for FileCacheError, &type metadata for FileCacheError);
    atomic_store(result, (unint64_t *)&qword_2576B9088);
  }
  return result;
}

unint64_t sub_2476FF620()
{
  unint64_t result;

  result = qword_2576B9090;
  if (!qword_2576B9090)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2576B9090);
  }
  return result;
}

unint64_t sub_2476FF65C(uint64_t a1)
{
  unint64_t result;

  result = sub_2476FF680();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2476FF680()
{
  unint64_t result;

  result = qword_2576B9098;
  if (!qword_2576B9098)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for FileCacheError, &type metadata for FileCacheError);
    atomic_store(result, (unint64_t *)&qword_2576B9098);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FileCacheError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FileCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2476FF790 + 4 * byte_247730EAA[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2476FF7C4 + 4 * byte_247730EA5[v4]))();
}

uint64_t sub_2476FF7C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476FF7CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2476FF7D4);
  return result;
}

uint64_t sub_2476FF7E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2476FF7E8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2476FF7EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2476FF7F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileCacheError()
{
  return &type metadata for FileCacheError;
}

uint64_t sub_2476FF810()
{
  return type metadata accessor for FileCache(0);
}

uint64_t type metadata accessor for FileCache(uint64_t a1)
{
  return sub_2476FF82C(a1, (uint64_t *)&unk_2576B90A0);
}

uint64_t sub_2476FF82C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2476FF85C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24772C544();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FileCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FileCache.__allocating_init(containerURL:temporaryContainerURL:contentType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

char *initializeBufferWithCopyOfBuffer for FileCache.Entry(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24772C544();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[6];
    *(_DWORD *)&a1[a3[5]] = *(_DWORD *)((char *)a2 + a3[5]);
    v10 = &a1[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *(_QWORD *)v10 = *v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = a3[7];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    sub_24772C91C();
    v8(v14, v15, v7);
    *(_QWORD *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for FileCache.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_24772C544();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 28), v4);
  return swift_release();
}

uint64_t initializeWithCopy for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_24772C544();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  sub_24772C91C();
  v7(v13, v14, v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_24772C544();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_24772C544();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_24772C544();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileCache.Entry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2476FFD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_16_10();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_44();
}

uint64_t storeEnumTagSinglePayload for FileCache.Entry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2476FFD94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_16_10();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2476FFE08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24772C544();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileCache.Policy()
{
  return &type metadata for FileCache.Policy;
}

uint64_t sub_2476FFEA8()
{
  return type metadata accessor for NoPurgeAssertion(0);
}

uint64_t sub_2476FFEB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24772C544();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2476FFF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2476FFF5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void *, uint64_t);

  if (qword_2576B7B08 != -1)
    swift_once();
  v2 = v0[3];
  v1 = v0[4];
  v0[5] = qword_2576C1600;
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  OUTLINED_FUNCTION_177((int *)&unk_2576B9280);
  OUTLINED_FUNCTION_39_0();
  v4 = (_QWORD *)OUTLINED_FUNCTION_102();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_247700014;
  return v6(&unk_2576B9278, v3);
}

uint64_t sub_247700014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_140(v4);
  *(_QWORD *)(v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v6 = *(_QWORD **)(v2 + 16);
    swift_release();
    *v6 = a1;
    OUTLINED_FUNCTION_81();
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_49(v7);
  }
}

uint64_t sub_247700084()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477000B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = type metadata accessor for SQLDatabase.Location(0);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247700114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = OUTLINED_FUNCTION_16_10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  *(_DWORD *)(v0 + 49) = 16777473;
  *(_DWORD *)(v0 + 53) = 0;
  *(_DWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 60) = 2;
  OUTLINED_FUNCTION_108_1();
  swift_allocObject();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_2477001DC;
  v5 = OUTLINED_FUNCTION_175(*(_QWORD *)(v0 + 96));
  return SQLDatabase.init(location:options:)(v5, (char *)(v0 + 49));
}

uint64_t sub_2477001DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  _QWORD *v8;

  v8 = (_QWORD *)*v2;
  v4 = v8;
  OUTLINED_FUNCTION_140(&v8);
  v4[14] = a1;
  v4[15] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v7 = (uint64_t (*)(void))((char *)&dword_2576B92A8 + dword_2576B92A8);
    OUTLINED_FUNCTION_79();
    v6 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v4[16] = v6;
    OUTLINED_FUNCTION_92_2(v6, (uint64_t)sub_247700274);
    return OUTLINED_FUNCTION_49(v7);
  }
}

uint64_t sub_247700274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_151_0();
  *(_QWORD *)(v2 + 136) = v1;
  *(_QWORD *)(v2 + 144) = v0;
  OUTLINED_FUNCTION_192();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_2477002CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_135_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2477002F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1 == *(_QWORD *)(v0 + 80))
  {
    OUTLINED_FUNCTION_113_0();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_55(v2);
  }
  else if (v1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = 0xD000000000000129;
    OUTLINED_FUNCTION_127_0();
    *(_QWORD *)(v0 + 32) = 0;
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 24) = v3;
    *(_BYTE *)(v0 + 48) = 0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v4;
    *v4 = v0;
    v4[1] = sub_247700394;
    v5 = OUTLINED_FUNCTION_90_3();
    SQLDatabase.execute(_:)(v5);
  }
}

uint64_t sub_247700394()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  v0[20] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_14();
    v0[21] = (uint64_t)v5;
    *v5 = v2;
    v5[1] = sub_247700410;
    v6 = OUTLINED_FUNCTION_175(v0[10]);
    return OUTLINED_FUNCTION_5_6(v6, v7);
  }
}

uint64_t sub_247700410()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770045C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_113_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_247700480()
{
  uint64_t v0;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_135_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477004AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_135_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477004D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_135_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247700504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  sub_247704674(0);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v4 = type metadata accessor for ActorQueue.QueuedTask();
  v3[30] = v4;
  v3[31] = *(_QWORD *)(v4 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2477005F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);

  v1 = v0[24];
  OUTLINED_FUNCTION_6_3();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 120) + 24);
  v3 = v0[24];
  if (v2 || (*(_BYTE *)(v3 + 128) & 1) != 0)
  {
    v0[20] = sub_24770A900(0, 15, 0xD000000000000040, 0x8000000247734C80);
    v4 = MEMORY[0x24BEE0718];
    sub_2476C8858(0, (unint64_t *)&qword_2576B8088, MEMORY[0x24BEE0718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24770432C(&qword_2576B8090, (unint64_t *)&qword_2576B8088, v4);
    v5 = sub_24772CB8C();
    v7 = v6;
    v0[39] = v6;
    v8 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[40] = v8;
    v8[2] = v3;
    v8[3] = v5;
    v8[4] = v7;
    v9 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[41] = v9;
    v9[2] = v3;
    v9[3] = v5;
    v9[4] = v7;
    sub_2476FBC10(&qword_2576B9298, (void (*)(uint64_t))type metadata accessor for ActorQueue);
    v10 = (_QWORD *)swift_task_alloc();
    v0[42] = v10;
    *v10 = v0;
    v10[1] = sub_247700818;
    return sub_24772D504();
  }
  else
  {
    *(_BYTE *)(v3 + 128) = 1;
    v12 = (_QWORD *)OUTLINED_FUNCTION_14();
    v0[37] = v12;
    v13 = OUTLINED_FUNCTION_189(v12);
    return v14(v13);
  }
}

uint64_t sub_2477007C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_247700818()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v1 + 344) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_5();
}

void sub_24770088C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_BYTE *)(*(_QWORD *)(v0 + 192) + 128) == 1)
  {
    v1 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 352) = v1;
    v2 = OUTLINED_FUNCTION_189(v1);
    OUTLINED_FUNCTION_5_6(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2477008E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 360) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

void sub_247700938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_22_6();
  v2 = *(_QWORD *)(v1 + 192);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  if (*(_BYTE *)(v2 + 128) == 1)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_51_9();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 232));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v7)
    {
      sub_2477047A8(*(_QWORD *)(v1 + 232), (uint64_t (*)(_QWORD))sub_247704674);
      *(_BYTE *)(v2 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_60_7(*(_QWORD *)(v1 + 232));
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_23_9();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_12_10(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_247700A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_168_0();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v12 = OUTLINED_FUNCTION_64_5();
    if (v13 != v14)
    {
      v16 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_51_9();
      v15 = *(_QWORD *)(v10 + 360);
      OUTLINED_FUNCTION_62_6(*(_QWORD *)(v10 + 224));
      if (v15)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v16 = 0;
    }
    OUTLINED_FUNCTION_13_15(v12, v16);
    OUTLINED_FUNCTION_26_9();
    if (v17)
    {
      v18 = *(_QWORD *)(v10 + 192);
      sub_2477047A8(*(_QWORD *)(v10 + 224), (uint64_t (*)(_QWORD))sub_247704674);
      *(_BYTE *)(v18 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_60_7(*(_QWORD *)(v10 + 224));
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_61_6();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_44_8(a10, *(uint64_t (**)(void))(v10 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_247700B3C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_168_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_51_9();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 216));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v7)
    {
      v8 = *(_QWORD *)(v1 + 192);
      sub_2477047A8(*(_QWORD *)(v1 + 216), (uint64_t (*)(_QWORD))sub_247704674);
      *(_BYTE *)(v8 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_60_7(*(_QWORD *)(v1 + 216));
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_23_9();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_12_10(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_247700C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_168_0();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v12 = OUTLINED_FUNCTION_64_5();
    if (v13 != v14)
    {
      v16 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_51_9();
      v15 = *(_QWORD *)(v10 + 304);
      OUTLINED_FUNCTION_62_6(*(_QWORD *)(v10 + 208));
      if (v15)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v16 = 0;
    }
    OUTLINED_FUNCTION_13_15(v12, v16);
    OUTLINED_FUNCTION_26_9();
    if (v17)
    {
      v18 = *(_QWORD *)(v10 + 192);
      sub_2477047A8(*(_QWORD *)(v10 + 208), (uint64_t (*)(_QWORD))sub_247704674);
      *(_BYTE *)(v18 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_60_7(*(_QWORD *)(v10 + 208));
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_61_6();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_44_8(a10, *(uint64_t (**)(void))(v10 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_247700D2C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_168_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_51_9();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 200));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v7)
    {
      v8 = *(_QWORD *)(v1 + 192);
      sub_2477047A8(*(_QWORD *)(v1 + 200), (uint64_t (*)(_QWORD))sub_247704674);
      *(_BYTE *)(v8 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_60_7(*(_QWORD *)(v1 + 200));
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_23_9();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_12_10(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_247700E1C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 1168) = a6;
  *(double *)(v6 + 1160) = a1;
  *(_QWORD *)(v6 + 1152) = a5;
  *(_QWORD *)(v6 + 1144) = a4;
  *(_QWORD *)(v6 + 1136) = a3;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_247700E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_2476C5B34();
  *(_QWORD *)(v0 + 16) = 0xD000000000000050;
  OUTLINED_FUNCTION_147_0((uint64_t)"    INSERT OR REPLACE INTO entries (fileName, purgeable, timestamp)\n    VALUES (");
  OUTLINED_FUNCTION_2_11();
  v22 = v21;
  v1 = *(_QWORD *)(v0 + 1152);
  v2 = *(_QWORD *)(v0 + 1144);
  *(_QWORD *)(v21 + 16) = 0xD000000000000047;
  OUTLINED_FUNCTION_32_6();
  *(_QWORD *)(v0 + 1080) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 1088) = &protocol witness table for String;
  *(_QWORD *)(v0 + 1056) = v2;
  *(_QWORD *)(v0 + 1064) = v1;
  OUTLINED_FUNCTION_56_7();
  *(_BYTE *)(v0 + 248) = 1;
  v3 = *(_QWORD *)(v22 + 16);
  v4 = *(_QWORD *)(v22 + 24);
  OUTLINED_FUNCTION_133_0();
  if (v3 >= v4 >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v23;
  }
  *(_QWORD *)(v22 + 16) = v3 + 1;
  OUTLINED_FUNCTION_26_6(v22 + 80 * v3);
  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v0 + 256) = 0x202C30202CLL;
  *(_QWORD *)(v0 + 264) = 0xE500000000000000;
  *(_BYTE *)(v0 + 328) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v24;
  }
  OUTLINED_FUNCTION_100_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v25;
  }
  v6 = *(_QWORD *)(v0 + 1160);
  *(_QWORD *)(v22 + 16) = v0 + 1056;
  OUTLINED_FUNCTION_19_6();
  *(_QWORD *)(v0 + 1040) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v0 + 1048) = &protocol witness table for Double;
  *(_QWORD *)(v0 + 1016) = v6;
  OUTLINED_FUNCTION_120_1();
  *(_BYTE *)(v0 + 488) = 1;
  OUTLINED_FUNCTION_143_0();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v26;
  }
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 496) = 0xD000000000000046;
  *(_QWORD *)(v0 + 504) = v7;
  *(_BYTE *)(v0 + 568) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v27;
  }
  OUTLINED_FUNCTION_101_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v28;
  }
  v8 = *(_QWORD *)(v0 + 1152);
  v9 = *(_QWORD *)(v0 + 1144);
  *(_QWORD *)(v22 + 16) = v0 + 1016;
  OUTLINED_FUNCTION_19_6();
  *(_QWORD *)(v0 + 960) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 968) = &protocol witness table for String;
  *(_QWORD *)(v0 + 936) = v9;
  *(_QWORD *)(v0 + 944) = v8;
  OUTLINED_FUNCTION_56_7();
  *(_BYTE *)(v0 + 728) = 1;
  v10 = *(_QWORD *)(v22 + 16);
  v11 = *(_QWORD *)(v22 + 24);
  OUTLINED_FUNCTION_133_0();
  if (v10 >= v11 >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v29;
  }
  v12 = v0 + 896;
  *(_QWORD *)(v22 + 16) = v10 + 1;
  OUTLINED_FUNCTION_26_6(v22 + 80 * v10);
  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v0 + 736) = 8236;
  *(_QWORD *)(v0 + 744) = 0xE200000000000000;
  *(_BYTE *)(v0 + 808) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v30;
  }
  OUTLINED_FUNCTION_100_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v31;
  }
  v13 = *(_QWORD *)(v0 + 1168);
  *(_QWORD *)(v22 + 16) = v0 + 936;
  OUTLINED_FUNCTION_19_6();
  *(_QWORD *)(v0 + 920) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v0 + 928) = &protocol witness table for UInt64;
  *(_QWORD *)(v0 + 896) = v13;
  OUTLINED_FUNCTION_120_1();
  *(_BYTE *)(v0 + 888) = 1;
  OUTLINED_FUNCTION_143_0();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v32;
  }
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_191();
  *(_QWORD *)(v0 + 576) = 8236;
  *(_QWORD *)(v0 + 584) = 0xE200000000000000;
  *(_BYTE *)(v0 + 648) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v33;
  }
  OUTLINED_FUNCTION_101_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v34;
  }
  v14 = *(_QWORD *)(v0 + 1160);
  *(_QWORD *)(v22 + 16) = v12;
  OUTLINED_FUNCTION_19_6();
  *(_QWORD *)(v0 + 1000) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v0 + 1008) = &protocol witness table for Double;
  *(_QWORD *)(v0 + 976) = v14;
  OUTLINED_FUNCTION_56_7();
  *(_BYTE *)(v0 + 408) = 1;
  OUTLINED_FUNCTION_101_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v35;
  }
  *(_QWORD *)(v22 + 16) = v12;
  OUTLINED_FUNCTION_26_6(v22 + 80 * v10);
  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v0 + 96) = 15145;
  *(_QWORD *)(v0 + 104) = 0xE200000000000000;
  *(_BYTE *)(v0 + 168) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v36;
  }
  OUTLINED_FUNCTION_100_1();
  if (v5)
  {
    OUTLINED_FUNCTION_2_11();
    v22 = v37;
  }
  *(_QWORD *)(v22 + 16) = v0 + 976;
  OUTLINED_FUNCTION_32_6();
  v38 = v22;
  v39 = MEMORY[0x24BEE4AF8];
  result = sub_247728928();
  v16 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v0 + 1176) = v16;
  if (v16)
  {
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v0 + 1208) = v39;
    *(_QWORD *)(v0 + 1200) = v17;
    *(_QWORD *)(v0 + 1192) = 0;
    *(_QWORD *)(v0 + 1184) = v38;
    *(_QWORD *)(v0 + 1096) = v38;
    *(_QWORD *)(v0 + 1104) = 0;
    *(_QWORD *)(v0 + 1112) = v17;
    *(_QWORD *)(v0 + 1120) = v39;
    *(_BYTE *)(v0 + 1128) = v18;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1216) = v19;
    *v19 = v0;
    v19[1] = sub_247701390;
    v20 = OUTLINED_FUNCTION_90_3();
    return OUTLINED_FUNCTION_41_9(v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247701390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v2 + 1224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_247701414()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247701420(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 552) = a5;
  *(_QWORD *)(v5 + 544) = a4;
  *(_BYTE *)(v5 + 89) = a3;
  *(_QWORD *)(v5 + 536) = a2;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_24770143C()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_31_5();
  sub_2476C5B34();
  *(_QWORD *)(v0 + 16) = 0xD00000000000002FLL;
  OUTLINED_FUNCTION_147_0((uint64_t)"    UPDATE OR IGNORE entries\n    SET purgeable=");
  OUTLINED_FUNCTION_2_11();
  v15 = v14;
  v1 = *(_BYTE *)(v0 + 89);
  *(_QWORD *)(v14 + 16) = 0xD000000000000015;
  OUTLINED_FUNCTION_32_6();
  *(_QWORD *)(v0 + 480) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v0 + 488) = &protocol witness table for Bool;
  *(_BYTE *)(v0 + 456) = v1;
  OUTLINED_FUNCTION_120_1();
  *(_BYTE *)(v0 + 248) = 1;
  OUTLINED_FUNCTION_143_0();
  if (v2)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v16;
  }
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 256) = 0xD000000000000014;
  *(_QWORD *)(v0 + 264) = v3;
  *(_BYTE *)(v0 + 328) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v17;
  }
  OUTLINED_FUNCTION_101_1();
  if (v2)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v18;
  }
  v4 = *(_QWORD *)(v0 + 552);
  v5 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v15 + 16) = v0 + 456;
  OUTLINED_FUNCTION_19_6();
  *(_QWORD *)(v0 + 440) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 448) = &protocol witness table for String;
  *(_QWORD *)(v0 + 416) = v5;
  *(_QWORD *)(v0 + 424) = v4;
  OUTLINED_FUNCTION_56_7();
  *(_BYTE *)(v0 + 408) = 1;
  v6 = *(_QWORD *)(v15 + 16);
  v7 = *(_QWORD *)(v15 + 24);
  OUTLINED_FUNCTION_133_0();
  if (v6 >= v7 >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v19;
  }
  *(_QWORD *)(v15 + 16) = v6 + 1;
  OUTLINED_FUNCTION_26_6(v15 + 80 * v6);
  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v0 + 96) = 59;
  *(_QWORD *)(v0 + 104) = 0xE100000000000000;
  *(_BYTE *)(v0 + 168) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v20;
  }
  OUTLINED_FUNCTION_100_1();
  if (v2)
  {
    OUTLINED_FUNCTION_2_11();
    v15 = v21;
  }
  *(_QWORD *)(v15 + 16) = v0 + 416;
  OUTLINED_FUNCTION_32_6();
  v22 = v15;
  v23 = MEMORY[0x24BEE4AF8];
  result = sub_247728928();
  v9 = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v0 + 560) = v9;
  if (v9)
  {
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v0 + 592) = v23;
    *(_QWORD *)(v0 + 584) = v10;
    *(_QWORD *)(v0 + 576) = 0;
    *(_QWORD *)(v0 + 568) = v22;
    *(_QWORD *)(v0 + 496) = v22;
    *(_QWORD *)(v0 + 504) = 0;
    *(_QWORD *)(v0 + 512) = v10;
    *(_QWORD *)(v0 + 520) = v23;
    *(_BYTE *)(v0 + 528) = v11;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v12;
    *v12 = v0;
    v12[1] = sub_247701708;
    v13 = OUTLINED_FUNCTION_90_3();
    return OUTLINED_FUNCTION_41_9(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247701708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_75_1();
  *(_QWORD *)(v2 + 608) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_8();
  if (!v0)
    return OUTLINED_FUNCTION_55(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770178C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247701798(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  *(double *)(v3 + 352) = a3;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = a2;
  return OUTLINED_FUNCTION_21();
}

uint64_t sub_2477017AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);

  v1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_148_0();
  sub_2476C5B34();
  v3 = v2;
  *(_QWORD *)(v0 + 16) = 0xD00000000000002DLL;
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 88) = 0;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v17;
  }
  v7 = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v3 + 16) = v6 + 1;
  OUTLINED_FUNCTION_26_6(v3 + 80 * v6);
  *(_QWORD *)(v0 + 280) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v0 + 288) = &protocol witness table for Double;
  *(_QWORD *)(v0 + 256) = v7;
  sub_2476B3F38(v0 + 256, v0 + 96);
  *(_BYTE *)(v0 + 168) = 1;
  v8 = *(_QWORD *)(v3 + 16);
  if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v18;
  }
  *(_QWORD *)(v3 + 16) = v8 + 1;
  OUTLINED_FUNCTION_23_6(v3 + 80 * v8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  OUTLINED_FUNCTION_127_0();
  *(_QWORD *)(v0 + 176) = 0xD000000000000027;
  *(_QWORD *)(v0 + 184) = v9;
  *(_BYTE *)(v0 + 248) = 0;
  if ((OUTLINED_FUNCTION_70_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v19;
  }
  v10 = *(_QWORD *)(v3 + 16);
  if (v10 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v20;
  }
  *(_QWORD *)(v3 + 16) = v10 + 1;
  OUTLINED_FUNCTION_26_6(v3 + 80 * v10);
  v21 = v3;
  result = sub_247728928();
  v12 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 360) = v12;
  if (v12)
  {
    OUTLINED_FUNCTION_125_0();
    *(_QWORD *)(v0 + 384) = v13;
    *(_QWORD *)(v0 + 392) = v1;
    *(_QWORD *)(v0 + 368) = v21;
    *(_QWORD *)(v0 + 376) = 0;
    *(_QWORD *)(v0 + 296) = v21;
    *(_QWORD *)(v0 + 304) = 0;
    *(_QWORD *)(v0 + 312) = v13;
    *(_QWORD *)(v0 + 320) = v1;
    *(_BYTE *)(v0 + 328) = v14;
    v22 = (uint64_t (*)(uint64_t))((char *)&dword_2576B95D0 + dword_2576B95D0);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v15;
    *v15 = v0;
    v15[1] = sub_2477019F0;
    v16 = OUTLINED_FUNCTION_90_3();
    return v22(v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2477019F0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  v6 = *v3;
  v13 = *v3;
  OUTLINED_FUNCTION_140(&v13);
  swift_task_dealloc();
  v7 = OUTLINED_FUNCTION_154_0();
  if (v2)
  {
    sub_2476B3EAC(v7, v8, v9, v10, v11);
    return OUTLINED_FUNCTION_55((uint64_t (*)(void))v3[1]);
  }
  else
  {
    *(_BYTE *)(v6 + 89) = a2;
    *(_QWORD *)(v6 + 408) = a1;
    sub_2476B3EAC(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_3_2();
  }
}

void sub_247701A74()
{
  uint64_t v0;
  double v1;
  void (*v2)(void);

  v1 = *(double *)(v0 + 408);
  if ((*(_BYTE *)(v0 + 89) & 1) != 0)
    v1 = 0.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 1.84467441e19)
  {
    **(_QWORD **)(v0 + 336) = (unint64_t)v1;
    v2 = (void (*)(void))OUTLINED_FUNCTION_76();
    v2();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_247701ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 544) = a4;
  *(_QWORD *)(v4 + 536) = a3;
  *(_QWORD *)(v4 + 528) = a2;
  *(_QWORD *)(v4 + 408) = 0xD000000000000027;
  *(_QWORD *)(v4 + 416) = 0x8000000247735E40;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2576B95C8 + dword_2576B95C8);
  *(_QWORD *)(v4 + 424) = 0;
  *(_QWORD *)(v4 + 432) = 0;
  *(_BYTE *)(v4 + 440) = 0;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 552) = v5;
  *v5 = v4;
  v5[1] = sub_247701B84;
  return v7(v4 + 320, v4 + 408);
}

uint64_t sub_247701B84()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_32_2();
  *(_QWORD *)(v1 + 560) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_247701BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  *(_QWORD *)(v0 + 568) = v1;
  *(_QWORD *)(v0 + 576) = v2;
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v0 + 584) = v3;
  *(_QWORD *)(v0 + 592) = v4;
  v5 = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 600) = v5;
  v6 = *(_BYTE *)(v0 + 360);
  *(_BYTE *)(v0 + 89) = v6;
  *(_QWORD *)(v0 + 256) = v1;
  *(_QWORD *)(v0 + 264) = v2;
  *(_QWORD *)(v0 + 272) = v3;
  *(_QWORD *)(v0 + 280) = v4;
  *(_QWORD *)(v0 + 288) = v5;
  *(_BYTE *)(v0 + 296) = v6;
  *(_QWORD *)(v0 + 304) = sub_2477042FC;
  *(_QWORD *)(v0 + 312) = 0;
  swift_retain();
  sub_2476B3E14(v2, v3, v4, v5, v6);
  v7 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 608) = v7;
  OUTLINED_FUNCTION_92_2(v7, (uint64_t)sub_247701C8C);
  return v9();
}

uint64_t sub_247701C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_151_0();
  *(_QWORD *)(v2 + 616) = v1;
  *(_QWORD *)(v2 + 624) = v3;
  *(_QWORD *)(v2 + 632) = v4;
  *(_BYTE *)(v2 + 90) = v5;
  *(_QWORD *)(v2 + 640) = v0;
  OUTLINED_FUNCTION_192();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_247701CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);

  OUTLINED_FUNCTION_22_6();
  v1 = *(_QWORD *)(v0 + 624);
  if (!v1)
  {
    sub_2476B45C0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_BYTE *)(v0 + 296));
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_8_0();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_12_10(v11);
  }
  v2 = *(_QWORD *)(v0 + 640);
  v3 = *(double *)(v0 + 632) == 1.0 && (*(_BYTE *)(v0 + 90) & 1) == 0;
  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _BOOL8))(v0 + 536))(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624), v3);
  if (v2)
  {
    v5 = *(_BYTE *)(v0 + 89);
    v6 = *(_QWORD *)(v0 + 600);
    v7 = *(_QWORD *)(v0 + 592);
    v8 = *(_QWORD *)(v0 + 584);
    v9 = *(_QWORD *)(v0 + 576);
    sub_2476B45C0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_BYTE *)(v0 + 296));
    swift_release();
    swift_release();
    sub_2476B3EAC(v9, v8, v7, v6, v5);
    OUTLINED_FUNCTION_32();
    return OUTLINED_FUNCTION_12_10(*(uint64_t (**)(void))(v0 + 8));
  }
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_32();
    v12 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 608) = v12;
    OUTLINED_FUNCTION_92_2(v12, (uint64_t)sub_247701C8C);
    v11 = v31;
    return OUTLINED_FUNCTION_12_10(v11);
  }
  v13 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_148_0();
  sub_2476C5B34();
  v15 = v14;
  *(_QWORD *)(v0 + 96) = 0xD000000000000023;
  *(_QWORD *)(v0 + 104) = 0x8000000247735E70;
  *(_BYTE *)(v0 + 168) = 0;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16 >= *(_QWORD *)(v14 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v15 = v27;
  }
  v17 = *(_QWORD *)(v0 + 616);
  *(_QWORD *)(v15 + 16) = v16 + 1;
  sub_2476E18A8((const void *)(v0 + 96), (void *)(v15 + 80 * v16 + 32));
  *(_QWORD *)(v0 + 392) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 400) = &protocol witness table for String;
  *(_QWORD *)(v0 + 368) = v17;
  *(_QWORD *)(v0 + 376) = v1;
  OUTLINED_FUNCTION_56_7();
  *(_BYTE *)(v0 + 248) = 1;
  v19 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  sub_24772C91C();
  if (v19 >= v18 >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v15 = v28;
  }
  *(_QWORD *)(v15 + 16) = v19 + 1;
  OUTLINED_FUNCTION_26_6(v15 + 80 * v19);
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_32();
  *(_QWORD *)(v0 + 16) = 59;
  *(_QWORD *)(v0 + 24) = 0xE100000000000000;
  *(_BYTE *)(v0 + 88) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_27_5();
    v15 = v29;
  }
  v20 = *(_QWORD *)(v15 + 16);
  if (v20 >= *(_QWORD *)(v15 + 24) >> 1)
  {
    OUTLINED_FUNCTION_27_5();
    v15 = v30;
  }
  *(_QWORD *)(v15 + 16) = v20 + 1;
  OUTLINED_FUNCTION_62_3(v15 + 80 * v20);
  *(_QWORD *)(v0 + 488) = v15;
  *(_QWORD *)(v0 + 496) = 0;
  *(_QWORD *)(v0 + 504) = 0;
  *(_QWORD *)(v0 + 512) = v13;
  result = sub_247728928();
  v21 = *(_QWORD *)(v0 + 512);
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v0 + 648) = v22;
  if (v22)
  {
    v24 = *(_QWORD *)(v0 + 488);
    v23 = *(_QWORD *)(v0 + 496);
    v25 = *(_QWORD *)(v0 + 504);
LABEL_23:
    *(_QWORD *)(v0 + 680) = v21;
    *(_QWORD *)(v0 + 672) = v25;
    *(_QWORD *)(v0 + 664) = v23;
    *(_QWORD *)(v0 + 656) = v24;
    *(_QWORD *)(v0 + 448) = v24;
    *(_QWORD *)(v0 + 456) = v23;
    *(_QWORD *)(v0 + 464) = v25;
    *(_QWORD *)(v0 + 472) = v21;
    *(_BYTE *)(v0 + 480) = v22 != 0;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 688) = v26;
    *v26 = v0;
    v26[1] = sub_2477020EC;
    return SQLDatabase.Transaction.execute(_:)(v0 + 448);
  }
  v23 = *(_QWORD *)(v0 + 504);
  if (v23)
  {
    v24 = *(_QWORD *)(v0 + 496);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32();
    v25 = 0;
    v21 = 0;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_247702054(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 520) = *(_QWORD *)(v1 + 640);
  OUTLINED_FUNCTION_55_1(a1, (unint64_t *)&qword_25444C3A8);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2477020B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_93_2();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477020EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 696) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_66_6();
  if (v1)
  {
    OUTLINED_FUNCTION_26();
    return OUTLINED_FUNCTION_5();
  }
  else
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_14();
    *(_QWORD *)(v0 + 608) = v4;
    OUTLINED_FUNCTION_92_2(v4, (uint64_t)sub_247701C8C);
    return OUTLINED_FUNCTION_49(v5);
  }
}

uint64_t sub_247702168()
{
  return OUTLINED_FUNCTION_90();
}

uint64_t sub_247702170()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_93_2();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_20_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477021AC()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2477021D0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = OUTLINED_FUNCTION_131_0(0, (uint64_t)a2, a3);
    v7 = v4(a1, v6);
    if (!v8)
      atomic_store(v7, v3);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_247702214()
{
  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_84_1();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_42_9();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247702278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_86_1();
  v2 = v0 + v1;
  v3 = *(_DWORD *)(v0 + v1);
  v5 = *(_QWORD *)(v0 + v4);
  v6 = *(_BYTE *)(v2 + 4);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_157(v7);
  v9 = OUTLINED_FUNCTION_118(v8);
  return sub_2476FE5E4(v9, v10, v11, v12, v3, v6, v5);
}

uint64_t sub_24770230C()
{
  uint64_t v0;
  uint64_t v1;

  sub_247704034(0);
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_247702354(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v7 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v8 = sub_247712890(), (v9 & 1) != 0))
  {
    sub_247704440(*(_QWORD *)(v7 + 56) + 8 * v8, (uint64_t)&v16, (uint64_t (*)(_QWORD))sub_2476DC42C);
    v10 = 0;
  }
  else
  {
    v16 = 0;
    v10 = 1;
  }
  v17 = v10;
  sub_247704440((uint64_t)&v16, (uint64_t)&v14, (uint64_t (*)(_QWORD))sub_247704018);
  if ((v15 & 1) != 0)
  {
    sub_2477047A8((uint64_t)&v14, (uint64_t (*)(_QWORD))sub_247704018);
  }
  else
  {
    Strong = swift_weakLoadStrong();
    sub_2477047A8((uint64_t)&v14, (uint64_t (*)(_QWORD))sub_2476DC42C);
    if (Strong)
    {
LABEL_14:
      sub_2477047A8((uint64_t)&v16, (uint64_t (*)(_QWORD))sub_247704018);
      return Strong;
    }
  }
  if (a4)
  {
    v11 = swift_retain();
    v12 = a4(v11);
    if (!v4)
    {
      Strong = v12;
      if (v12)
      {
        swift_weakInit();
        v15 = 0;
        sub_24772C91C();
        sub_2476D9F64((uint64_t)&v14);
        sub_2476BF020((uint64_t)a4);
        goto LABEL_14;
      }
    }
    sub_2477047A8((uint64_t)&v16, (uint64_t (*)(_QWORD))sub_247704018);
    sub_2476BF020((uint64_t)a4);
  }
  else
  {
    sub_2477047A8((uint64_t)&v16, (uint64_t (*)(_QWORD))sub_247704018);
    return 0;
  }
  return Strong;
}

uint64_t sub_24770250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  sub_2476C8858(0, &qword_2576B91E8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_2476CB854();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24772CDF0();
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0;
  *((_QWORD *)v16 + 4) = a2;
  *((_QWORD *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], v10, v7);
  sub_24772C91C();
  swift_retain();
  sub_2476BD3CC();
  return swift_release();
}

uint64_t sub_247702670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_24770268C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_2477026C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;

  v1 = v0[7];
  v2 = (_QWORD *)v0[6];
  v3 = (uint64_t *)(v0[8] + 112);
  OUTLINED_FUNCTION_6_4();
  sub_2477027D0(v3, v2, v1);
  v0[9] = 0;
  swift_endAccess();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_26();
  return swift_task_switch();
}

uint64_t sub_247702764(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_17_2(a1, &qword_2576B91E8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
  sub_24772CE20();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v1);
}

uint64_t sub_2477027A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477027D0(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t Strong;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[4];
  int isUniquelyReferenced_nonNull_native;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[8];

  v30 = a3;
  sub_2476C8858(0, &qword_2576B9200, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE69E8]);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v25 - v6;
  if (a2)
  {
    v7 = a2;
  }
  else
  {
    v8 = sub_24772C91C();
    v7 = sub_247703F24(v8);
    swift_bridgeObjectRelease();
  }
  v9 = v7[2];
  if (v9)
  {
    sub_24772C91C();
    v25[1] = v7;
    v10 = v7 + 5;
    do
    {
      v11 = *a1;
      if (*(_QWORD *)(*a1 + 16))
      {
        v13 = *(v10 - 1);
        v12 = *v10;
        sub_24772C91C();
        v14 = sub_247712890();
        if ((v15 & 1) != 0)
        {
          sub_247704440(*(_QWORD *)(v11 + 56) + 8 * v14, (uint64_t)&v32, (uint64_t (*)(_QWORD))sub_2476DC42C);
          sub_247704704((uint64_t)&v32, (uint64_t)v34, (uint64_t (*)(_QWORD))sub_2476DC42C);
          Strong = swift_weakLoadStrong();
          swift_release();
          if (!Strong)
          {
            sub_24772C91C();
            sub_24772C91C();
            v17 = sub_247712890();
            v19 = v18;
            swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v31 = *a1;
              v20 = v31;
              *a1 = 0x8000000000000000;
              v25[3] = *(_QWORD *)(v20 + 24);
              sub_2477040A0(0, &qword_2576B9208, (uint64_t (*)(uint64_t))sub_2476DC42C);
              sub_24772D324();
              v21 = v31;
              swift_bridgeObjectRelease();
              sub_247704704(*(_QWORD *)(v21 + 56) + 8 * v17, (uint64_t)&v32, (uint64_t (*)(_QWORD))sub_2476DC42C);
              sub_2476DC42C(0);
              v22 = MEMORY[0x24BEE0D00];
              sub_24772D330();
              *a1 = v21;
              swift_bridgeObjectRelease();
            }
            else
            {
              v32 = 0;
              v22 = MEMORY[0x24BEE0D00];
            }
            LOBYTE(v33) = (v19 & 1) == 0;
            swift_bridgeObjectRelease();
            sub_2477047A8((uint64_t)&v32, (uint64_t (*)(_QWORD))sub_247704018);
            v32 = v13;
            v33 = v12;
            sub_2476C8858(0, &qword_2576B91E8, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
            sub_24772C91C();
            v23 = v27;
            sub_24772CE14();
            (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v29);
          }
          sub_2477047A8((uint64_t)v34, (uint64_t (*)(_QWORD))sub_2476DC42C);
        }
        swift_bridgeObjectRelease();
      }
      v10 += 2;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24772C91C();
    return swift_bridgeObjectRelease();
  }
}

unint64_t *sub_247702AD0(unint64_t *result, uint64_t a2, unint64_t a3)
{
  unint64_t *v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t *__return_ptr, _QWORD *);
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;

  v4 = result;
  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  v8 = (void (*)(uint64_t *__return_ptr, _QWORD *))v3[3];
  v9 = v3[4];
  if (!a2)
  {
LABEL_10:
    a3 = 0;
    goto LABEL_15;
  }
  if (!a3)
  {
LABEL_15:
    *v4 = v5;
    v4[1] = v6;
    v4[2] = v7;
    v4[3] = a3;
    v4[4] = (unint64_t)v8;
    v4[5] = v9;
    return (unint64_t *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v7 + 16);
    if (v10)
    {
      v20 = v6;
      v21 = v5;
      v12 = 0;
      v13 = (_BYTE *)(v7 + 48);
      v18 = *(_QWORD *)(v7 + 16);
      v19 = a3;
      v14 = a3 - 1;
      v15 = v10 - 1;
      while (1)
      {
        v16 = *((_QWORD *)v13 - 1);
        v17 = *v13;
        v23[0] = *((_QWORD *)v13 - 2);
        v23[1] = v16;
        v24 = v17;
        OUTLINED_FUNCTION_25_2();
        v8(&v22, v23);
        swift_release();
        *(_QWORD *)(a2 + 8 * v12) = v22;
        if (v14 == v12)
        {
          a3 = v19;
          goto LABEL_14;
        }
        if (v15 == v12)
          break;
        v5 = *(_QWORD *)(v7 + 16);
        ++v12;
        v13 += 24;
        if (v12 >= v5)
        {
          __break(1u);
          goto LABEL_10;
        }
      }
      a3 = v18;
LABEL_14:
      v6 = v20;
      v5 = v21;
    }
    else
    {
      a3 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_247702BDC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_247702DD4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_247702FCC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_24772C91C();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_24772C91C();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2477031C8(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_157(v4);
  *v5 = v2;
  v5[1] = sub_247703220;
  return OUTLINED_FUNCTION_5_6(a1, v7);
}

uint64_t sub_247703220()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_26_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_247703244(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t result;
  unsigned __int8 v20;
  uint64_t v21;

  sub_2476CB854();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247704440(a1, (uint64_t)v16, v17);
  v18 = sub_24772CDF0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18) == 1)
  {
    sub_2477047A8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2476CB854);
    result = 0;
    if ((a2 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v20 = sub_24772CDE4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if ((a5 & 1) != 0)
LABEL_6:
    result |= 0x1000uLL;
LABEL_7:
  if ((a6 & 1) != 0)
    result |= 0x2000uLL;
  if ((a7 & 1) != 0)
    return result | 0x4000;
  return result;
}

uint64_t sub_247703380()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2477033A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_157(v1);
  *v2 = v0;
  v2[1] = sub_2476BB304;
  v3 = OUTLINED_FUNCTION_171();
  return v4(v3);
}

uint64_t sub_247703404(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_247703510(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2476B5E0C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2476B5E0C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_24772C91C();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

unint64_t sub_2477034D4()
{
  unint64_t result;

  result = qword_2576B91D0;
  if (!qword_2576B91D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_2576B91D0);
  }
  return result;
}

uint64_t sub_247703510(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_247703664((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_24772D060();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_247703728(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_24772D1F8();
    if (!v8)
    {
      result = sub_24772D348();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_247703664(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t sub_247703728(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2477037BC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_2477039EC(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_2477039EC((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2477037BC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_24772CB14();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_24770392C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_24772D150();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_24772D3B4();
  __break(1u);
LABEL_14:
  result = sub_24772D348();
  __break(1u);
  return result;
}

void sub_24770392C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    OUTLINED_FUNCTION_17_2(a1, (unint64_t *)&qword_2576B8230, MEMORY[0x24BEE4260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v4 = (_QWORD *)OUTLINED_FUNCTION_8_3();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_35();
}

void sub_247703998(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_24772CB50();
    OUTLINED_FUNCTION_145_0(v4);
  }
  else
  {
    v3 = MEMORY[0x249580E98](15, a1 >> 16);
    OUTLINED_FUNCTION_145_0(v3);
  }
  OUTLINED_FUNCTION_35();
}

char *sub_2477039EC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2476C8858(0, (unint64_t *)&qword_2576B8230, MEMORY[0x24BEE4260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_247703B98(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_247703AD4(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_247703AD4(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_24772D3B4();
  __break(1u);
  return result;
}

char *sub_247703B98(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_24772D3B4();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_247703C18(uint64_t a1)
{
  uint64_t v1;

  return sub_24770250C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_247703C20(uint64_t a1)
{
  OUTLINED_FUNCTION_17_2(a1, &qword_2576B91E8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
  OUTLINED_FUNCTION_88_2();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_42_9();
  return OUTLINED_FUNCTION_30_8();
}

uint64_t sub_247703C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2(a1, &qword_2576B91E8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = v1 + ((v3 + 48) & ~v3);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_157(v6);
  v8 = OUTLINED_FUNCTION_118(v7);
  return sub_247702670(v8, v9, v10, v11, v4, v5);
}

size_t sub_247703D20(size_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_17_2(result, &qword_2576B8240, (uint64_t)&unk_2518DA8B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v7 = (_QWORD *)OUTLINED_FUNCTION_8_3();
      result = _swift_stdlib_malloc_size(v7);
      v7[2] = v5;
      v7[3] = 2 * ((uint64_t)(result - 32) / 88);
    }
    if (v4 != a3)
    {
      sub_2476B21E4();
      return (size_t)v7;
    }
  }
  __break(1u);
  return result;
}

void sub_247703DEC(uint64_t a1)
{
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_17_2(a1, &qword_2576B82D0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v1 = (const void *)OUTLINED_FUNCTION_8_3();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_134_0((2 * ((uint64_t)(v2 - 32) / 8)) | 1);
    sub_247702BDC(v3, v4, v5, v6);
    OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_142_0();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_76_4();
}

void sub_247703E8C(uint64_t a1)
{
  const void *v1;
  size_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_161_0(a1, &qword_2576B92C0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey);
    v1 = (const void *)OUTLINED_FUNCTION_8_3();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_134_0(2 * ((uint64_t)(v2 - 32) / 8));
    sub_247702DD4(v3, v4, v5, v6);
    OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_142_0();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_76_4();
}

_QWORD *sub_247703F24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_2476C8858(0, &qword_2576B7B90, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  v5 = sub_247702FCC((uint64_t)&v7, v3 + 4, v1, a1);
  sub_24772C91C();
  sub_2476B5E58();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_247704018(uint64_t a1)
{
  sub_2477021D0(a1, &qword_2576B8930, (uint64_t (*)(uint64_t))sub_2476DC42C);
}

void sub_247704034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2576B9218)
  {
    sub_2477040A0(255, &qword_2576B9220, (uint64_t (*)(uint64_t))sub_2476DC42C);
    v5 = type metadata accessor for ActorBox(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2576B9218);
  }
}

void sub_2477040A0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t (*v4)(uint64_t, _QWORD, uint64_t, _QWORD);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = OUTLINED_FUNCTION_131_0(0, (uint64_t)a2, a3);
    v7 = v4(a1, MEMORY[0x24BEE0D00], v6, MEMORY[0x24BEE0D10]);
    if (!v8)
      atomic_store(v7, v3);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2477040F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_24772C424();
  if (!result || (result = sub_24772C448(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24772C43C();
      sub_24772C82C();
      sub_2476FBC10(&qword_2576B9250, (void (*)(uint64_t))MEMORY[0x24BDC6AF8]);
      return sub_24772C7FC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2477041B8()
{
  sub_24772C82C();
  sub_2476FBC10(&qword_2576B9250, (void (*)(uint64_t))MEMORY[0x24BDC6AF8]);
  return sub_24772C7FC();
}

uint64_t sub_2477042C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_247702354(a1, *a2, a2[1], a3);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_2477042FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_24770CAC4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7;
  }
}

void sub_24770432C(_QWORD *a1, unint64_t *a2, uint64_t a3)
{
  if (!*a1)
  {
    sub_2476C8858(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    OUTLINED_FUNCTION_159_0();
  }
  OUTLINED_FUNCTION_35();
}

uint64_t sub_247704368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_16_10();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2477043D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_86_1();
  return sub_2476FDB70(v0 + v1, *(_DWORD *)(v0 + v2), *(_BYTE *)(v0 + v2 + 4), *(_QWORD *)(v0 + v3));
}

uint64_t sub_247704424@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2477042C4(a1, *(uint64_t **)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), a2);
}

void sub_247704440(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_149_0(a1, a2, a3);
  OUTLINED_FUNCTION_172(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_35();
}

uint64_t sub_24770446C()
{
  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_88_2();
  swift_release();
  OUTLINED_FUNCTION_42_9();
  return OUTLINED_FUNCTION_30_8();
}

uint64_t sub_2477044B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_16_10();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_2476FE144(v2, v3, v4, v5, v6);
}

uint64_t sub_24770452C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2476D64E0(a1, a2);
  return a1;
}

uint64_t sub_247704540(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2476D5F88(a1, a2);
  return a1;
}

uint64_t sub_247704554()
{
  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_84_1();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_42_9();
  return OUTLINED_FUNCTION_30_8();
}

uint64_t sub_24770459C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_16_10();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_2476FFF40(v2, v3, v4, v5, v6);
}

uint64_t sub_247704620()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_157(v1);
  *v2 = v0;
  v2[1] = sub_2476BB304;
  v3 = OUTLINED_FUNCTION_171();
  return sub_2477000B4(v3, v4, v5);
}

void sub_247704674(uint64_t a1)
{
  sub_2477021D0(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
}

uint64_t sub_247704690(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_157(v7);
  *v8 = v2;
  v8[1] = sub_2476B9B58;
  return sub_24771E3A4(a1, v4, v5, v6);
}

uint64_t sub_2477046F8()
{
  uint64_t *v0;

  return sub_24771EAA4(v0[2], v0[3], v0[4]);
}

void sub_247704704(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_149_0(a1, a2, a3);
  OUTLINED_FUNCTION_172(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_35();
}

void sub_247704730()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B92A0)
  {
    sub_2476B443C(255, (unint64_t *)&qword_25444C3A8);
    v0 = sub_24772CD90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B92A0);
  }
}

void sub_2477047A8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_35();
}

uint64_t OUTLINED_FUNCTION_12_10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v3, a2, 1, v2);
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_14_10()
{
  return sub_24772CE68();
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return sub_24772C544();
}

uint64_t OUTLINED_FUNCTION_18_11()
{
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_19_6()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;

  return sub_2476E18A8(v2, (void *)(v0 + 80 * v1 + 32));
}

uint64_t OUTLINED_FUNCTION_20_9(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_24_11(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_24771F0D8((_QWORD *)(*(_QWORD *)(v2 + 120) + 16), *(_QWORD *)(v2 + 120) + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), a1);
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

void OUTLINED_FUNCTION_28_8()
{
  sub_247704730();
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return swift_deallocObject();
}

void *OUTLINED_FUNCTION_32_6()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;

  return sub_2476E18A8(v2, (void *)(v0 + 80 * v1 + 32));
}

void OUTLINED_FUNCTION_35_8()
{
  JUMPOUT(0x24958238CLL);
}

void *OUTLINED_FUNCTION_39_8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v3;
  return sub_2476E18A8(v2, (void *)(v0 + 80 * v1 + 32));
}

uint64_t OUTLINED_FUNCTION_41_9(uint64_t a1)
{
  return SQLDatabase.execute(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t OUTLINED_FUNCTION_44_8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_46_8()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_47_8()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_50_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return sub_2476CA280();
}

void OUTLINED_FUNCTION_53_9()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_2477047A8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_54_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2476B3F38(v0, v1);
}

void OUTLINED_FUNCTION_60_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_247704704(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_62_6(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_24771F0D8((_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 192) + 120) + 16), *(_QWORD *)(*(_QWORD *)(v2 + 192) + 120)+ ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), a1);
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_65_3@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  a1[1] = 0xD000000000000025;
  a1[2] = (a2 - 32) | 0x8000000000000000;
  a1[3] = v2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_66_6()
{
  _QWORD *v0;

  return sub_2476B3EAC(v0[82], v0[83], v0[84], v0[85], v0[81] != 0);
}

uint64_t OUTLINED_FUNCTION_70_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_73_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_85_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 24) = v2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return sub_24772C91C();
}

_QWORD *OUTLINED_FUNCTION_92_2@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  uint64_t v0;

  return sub_2476B45C0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_BYTE *)(v0 + 296));
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return sub_24772CAFC();
}

void OUTLINED_FUNCTION_96_2()
{
  JUMPOUT(0x2495821C4);
}

uint64_t OUTLINED_FUNCTION_98_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return sub_24772CD84();
}

void OUTLINED_FUNCTION_105_1(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_2476FBB2C(0, a2, a3);
}

void OUTLINED_FUNCTION_107_1()
{
  sub_2476FBB7C(0);
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  return type metadata accessor for SQLDatabase(0);
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_110_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return sub_24772C49C();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 64) = *(_QWORD *)(v0 + 112);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_115()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return sub_24772D144();
}

uint64_t OUTLINED_FUNCTION_118(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2476B3F38(v0, v1);
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return type metadata accessor for FileCache.Entry(0);
}

uint64_t OUTLINED_FUNCTION_131_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(255);
}

uint64_t OUTLINED_FUNCTION_132_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return sub_24772C91C();
}

void OUTLINED_FUNCTION_134_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_139_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_141_0()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_142_0()
{
  return sub_2476B5E58();
}

uint64_t OUTLINED_FUNCTION_144_0()
{
  return swift_task_dealloc();
}

unint64_t OUTLINED_FUNCTION_145_0(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void OUTLINED_FUNCTION_146_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_147_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v1 + 72) = 0;
}

uint64_t OUTLINED_FUNCTION_148_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_149_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_150_0()
{
  return sub_24772D480();
}

void OUTLINED_FUNCTION_151_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_153_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = *v3;
  *(_QWORD *)(a1 + 56) = v2;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 368);
}

uint64_t OUTLINED_FUNCTION_155_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_159_0()
{
  JUMPOUT(0x2495822A8);
}

void OUTLINED_FUNCTION_160_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

void OUTLINED_FUNCTION_161_0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  sub_2477021D0(0, a2, a3);
}

uint64_t OUTLINED_FUNCTION_163()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_164_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return sub_24772C790();
}

void OUTLINED_FUNCTION_166_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_167_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_169_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_170()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_171()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_172@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

id OUTLINED_FUNCTION_173()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_174()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_175@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

char *OUTLINED_FUNCTION_176@<X0>(int *a1@<X8>)
{
  return (char *)a1 + *a1;
}

char *OUTLINED_FUNCTION_177@<X0>(int *a1@<X8>)
{
  return (char *)a1 + *a1;
}

uint64_t OUTLINED_FUNCTION_183()
{
  return sub_24772D480();
}

id OUTLINED_FUNCTION_185()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_186(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2477047A8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_187()
{
  return sub_24772D480();
}

_QWORD *OUTLINED_FUNCTION_188(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  *result = v2;
  result[1] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_189(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_191()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_192()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_196()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
}

uint64_t OUTLINED_FUNCTION_197()
{
  return swift_task_alloc();
}

uint64_t sub_247705000(sqlite3 *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  const char *v16;
  uint64_t function_v2;
  _QWORD v18[2];

  v2 = v1;
  v4 = sub_24772CA48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[3];
  v18[0] = v1[2];
  v18[1] = v8;
  sub_24772C91C();
  sub_24772CA3C();
  sub_2476B5B30();
  v9 = sub_24772D090();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = swift_bridgeObjectRelease();
  v11 = v2[4];
  if (v11 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v11 > 0x7FFFFFFF)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v12 = v2[5];
  if ((v12 & 1) != 0)
    v13 = 2049;
  else
    v13 = 1;
  if ((v12 & 1) != 0)
    v14 = 526337;
  else
    v14 = 524289;
  if ((v12 & 2) != 0)
    v15 = v14;
  else
    v15 = v13;
  if (v9)
    v16 = (const char *)(v9 + 32);
  else
    v16 = 0;
  OUTLINED_FUNCTION_79();
  function_v2 = sqlite3_create_function_v2(a1, v16, v11, v15, v2, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_24770566C, 0, 0, (void (__cdecl *)(void *))sub_24770567C);
  swift_bridgeObjectRelease();
  return function_v2;
}

uint64_t SQLDatabase.ScalarFunctionOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SQLDatabase.ScalarFunctionOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SQLDatabase.ScalarFunctionOptions.deterministic.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static SQLDatabase.ScalarFunctionOptions.directOnly.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_247705188@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return SQLDatabase.ScalarFunctionOptions.init(rawValue:)(*a1, a2);
}

void sub_247705194(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24770519C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2477051A8(*a1, *v2, a2);
}

uint64_t sub_2477051A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_2477051B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2477051C0(*a1, *v2, a2);
}

uint64_t sub_2477051C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_2477051CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2477051D8(*a1, *v2, a2);
}

uint64_t sub_2477051D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_2477051E4(_QWORD *a1, uint64_t *a2)
{
  return sub_2477051EC(a1, *a2);
}

BOOL sub_2477051EC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_247705218@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247705220(*a1, a2);
}

uint64_t sub_247705220@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & result;
  if (v3)
    *v2 &= ~result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t sub_247705248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247705250(*a1, a2);
}

uint64_t sub_247705250@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  *v2 |= result;
  v4 = v3 & result;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v4 == 0;
  return result;
}

uint64_t sub_247705270(uint64_t *a1)
{
  return sub_247705278(*a1);
}

uint64_t sub_247705278(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_247705288(uint64_t *a1)
{
  return sub_247705290(*a1);
}

uint64_t sub_247705290(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_2477052A0(uint64_t *a1)
{
  return sub_2477052A8(*a1);
}

uint64_t sub_2477052A8(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_2477052B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2477052C4(*a1, *v2, a2);
}

uint64_t sub_2477052C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

BOOL sub_2477052D0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2477052DC(*a1, *v1);
}

BOOL sub_2477052DC(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_2477052E8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2477052F4(*a1, *v1);
}

BOOL sub_2477052F4(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_247705300(uint64_t *a1)
{
  uint64_t *v1;

  return sub_24770530C(*a1, *v1);
}

BOOL sub_24770530C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_247705318()
{
  uint64_t *v0;

  return sub_247705320(*v0);
}

BOOL sub_247705320(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_24770532C()
{
  return sub_24772D0F0();
}

uint64_t sub_247705344(uint64_t *a1)
{
  return sub_24770534C(*a1);
}

uint64_t sub_24770534C(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

uint64_t sub_24770535C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = SQLDatabase.ScalarFunctionOptions.init(rawValue:)(*a1, (_QWORD *)a2);
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_247705384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SQLDatabase.ScalarFunctionOptions.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2477053AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_247705400(sqlite3_context *a1, int a2, uint64_t *a3)
{
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD *__return_ptr, uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  sqlite3_context *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_24772CA48();
  MEMORY[0x24BDAC7A8](v6);
  if (!a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = sqlite3_user_data(a1);
  if (v7)
  {
    v8 = (void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))v7;
    v9 = swift_retain();
    if ((a2 & 0x80000000) == 0)
    {
      v10 = MEMORY[0x24BEE4AF8];
      if (!a2)
      {
LABEL_13:
        v8[6](&v19, v9, v10);
        swift_bridgeObjectRelease();
        v16 = v20;
        v17 = v21;
        __swift_project_boxed_opaque_existential_1(&v19, v20);
        (*(void (**)(sqlite3_context *, uint64_t, uint64_t))(v17 + 16))(a1, v16, v17);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
        return;
      }
      v18 = a1;
      v11 = a2;
      v19 = MEMORY[0x24BEE4AF8];
      sub_2476B313C(0, a2, 0);
      v10 = v19;
      v12 = a3;
      while (v11)
      {
        if (!a3)
          goto LABEL_16;
        v13 = *v12;
        if (!*v12)
          goto LABEL_17;
        v19 = v10;
        v15 = *(_QWORD *)(v10 + 16);
        v14 = *(_QWORD *)(v10 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_2476B313C(v14 > 1, v15 + 1, 1);
          v10 = v19;
        }
        *(_QWORD *)(v10 + 16) = v15 + 1;
        *(_QWORD *)(v10 + 8 * v15 + 32) = v13;
        ++v12;
        if (!--v11)
        {
          a1 = v18;
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_247705670(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_247705680()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_2477056A4()
{
  sub_247705680();
  return swift_deallocClassInstance();
}

uint64_t SQLDatabase.registerFunction(named:argumentCount:options:_:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a3;
  v7[8] = a5;
  v7[5] = a1;
  v7[6] = a2;
  v7[11] = *a4;
  return OUTLINED_FUNCTION_3_20();
}

_QWORD *sub_2477056E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;

  v2 = v0[10];
  v1 = v0[11];
  v4 = v0[8];
  v3 = v0[9];
  v5 = v0[6];
  v6 = v0[7];
  v7 = v0[5];
  v8 = OUTLINED_FUNCTION_8_3();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v3;
  _s14ScalarFunctionCMa();
  result = (_QWORD *)OUTLINED_FUNCTION_8_3();
  v0[12] = result;
  result[2] = v7;
  result[3] = v5;
  result[4] = v6;
  result[5] = v1;
  result[6] = sub_247705A58;
  result[7] = v8;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  v0[13] = v10;
  if (v10)
  {
    swift_retain();
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    swift_retain();
    return (_QWORD *)swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2477057B0()
{
  uint64_t *v0;

  sub_2476F01A0(v0[13], v0[12]);
  v0[14] = 0;
  swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_247705810()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  sub_24772D480();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_14_11();
  swift_endAccess();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_23();
  return OUTLINED_FUNCTION_20_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477058D8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24770590C(void *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD))
{
  int64_t v3;
  uint64_t v4;
  const sqlite3_value **v6;
  const sqlite3_value *v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void (*v12)(_QWORD, _QWORD);
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v12 = a3;
    v13 = MEMORY[0x24BEE4AF8];
    sub_2476B3064(0, v3, 0);
    v4 = v13;
    v6 = (const sqlite3_value **)(a2 + 32);
    type metadata accessor for SQLDynamicValue.Box();
    do
    {
      v7 = *v6;
      swift_allocObject();
      a1 = sub_2476B5FC0(v7);
      v8 = a1;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        a1 = sub_2476B3064((char *)(v9 > 1), v10 + 1, 1);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      *(_QWORD *)(v13 + 8 * v10 + 32) = v8;
      ++v6;
      --v3;
    }
    while (v3);
    a3 = v12;
  }
  a3(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247705A34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247705A58(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24770590C(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16));
}

uint64_t _s14ScalarFunctionCMa()
{
  return objc_opt_self();
}

uint64_t SQLDatabase.registerFunction<each A>(named:options:_:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;

  v9[15] = a8;
  v9[16] = v8;
  v9[13] = a6;
  v9[14] = a7;
  v9[11] = a4;
  v9[12] = a5;
  v9[9] = a1;
  v9[10] = a2;
  v9[17] = *a3;
  return OUTLINED_FUNCTION_3_20();
}

uint64_t sub_247705AB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)(v0 + 64) = 0;
  if (*(_QWORD *)(v0 + 104))
  {
    v1 = 0;
    v2 = *(_QWORD *)(v0 + 112) & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      v3 = *(_QWORD *)(v0 + 104);
      sub_247705E50(*(_QWORD *)(v2 + 8 * v1++), (_QWORD *)(v0 + 64));
    }
    while (v1 != v3);
    v4 = *(_QWORD *)(v0 + 104);
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v12 = *(_OWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 72);
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 64);
  v8 = OUTLINED_FUNCTION_8_3();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = swift_allocateMetadataPack();
  *(_QWORD *)(v8 + 32) = swift_allocateWitnessTablePack();
  *(_OWORD *)(v8 + 40) = v12;
  _s14ScalarFunctionCMa();
  result = OUTLINED_FUNCTION_8_3();
  *(_OWORD *)(result + 16) = v13;
  *(_QWORD *)(result + 32) = v7;
  *(_QWORD *)(result + 40) = v6;
  *(_QWORD *)(result + 48) = sub_247706A78;
  *(_QWORD *)(result + 56) = v8;
  v10 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  *(_QWORD *)(v0 + 144) = result;
  *(_QWORD *)(v0 + 152) = v10;
  v11 = *(_QWORD *)(v5 + v10);
  *(_QWORD *)(v0 + 160) = v11;
  if (v11)
  {
    sub_24772C91C();
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247705C1C()
{
  uint64_t v0;

  sub_2476C0718();
  *(_QWORD *)(v0 + 168) = 0;
  swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_247705C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0[16] + v0[19]);
  v0[22] = v1;
  if (v1)
  {
    swift_retain();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247705CC8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[21];
  sub_2476F01A0(v0[22], v0[18]);
  v0[23] = v1;
  if (!v1)
    swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_247705D28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 64);
  sub_24772D480();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_14_11();
  swift_endAccess();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_23();
  return OUTLINED_FUNCTION_20_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247705DF0()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_23();
  return OUTLINED_FUNCTION_10_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247705E20()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_23();
  return OUTLINED_FUNCTION_10_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247705E50(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  result = swift_beginAccess();
  if (__OFADD__(*a2, 1))
    __break(1u);
  else
    ++*a2;
  return result;
}

uint64_t sub_247705E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  _DWORD *v24;
  int v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *);
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a6;
  v37 = a7;
  v35 = a2;
  v10 = (uint64_t *)(a6 & 0xFFFFFFFFFFFFFFFELL);
  v11 = 8 * a5;
  v31 = a4;
  v32 = a3;
  v30 = a8;
  if (a5 == 1)
  {
    TupleTypeMetadata = *v10;
  }
  else
  {
    MEMORY[0x24BDAC7A8](a1);
    if (a5)
    {
      v13 = v10;
      v14 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
      v15 = a5;
      do
      {
        v16 = *v13++;
        *v14++ = v16;
        --v15;
      }
      while (v15);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  v34 = &v28;
  v28 = *(_QWORD *)(TupleTypeMetadata - 8);
  v17 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = &v28;
  v38 = 0;
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = result;
  if (a5)
  {
    v22 = 0;
    v23 = v37 & 0xFFFFFFFFFFFFFFFELL;
    v24 = (_DWORD *)(result + 32);
    while (1)
    {
      v25 = a5 == 1 ? 0 : *v24;
      v26 = &v19[v25];
      result = sub_2477060D4(v10[v22], &v38, v35, a5, v36, v10[v22], v37, *(_QWORD *)(v23 + 8 * v22));
      if (v8)
        break;
      *(_QWORD *)&v21[8 * v22++] = v26;
      v24 += 4;
      if (a5 == v22)
        goto LABEL_14;
    }
    if (v22)
    {
      v27 = v21 - 8;
      do
      {
        result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v10[v22 - 1] - 8) + 8))(*(_QWORD *)&v27[8 * v22]);
        --v22;
      }
      while (v22);
    }
  }
  else
  {
LABEL_14:
    v32(result, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v19, v29);
  }
  return result;
}

uint64_t sub_2477060D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;

  result = swift_beginAccess();
  v14 = *a2;
  if (*a2 < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= *(_QWORD *)(a3 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(a8 + 16))(*(_QWORD *)(a3 + 8 * v14 + 32), a6, a8);
  if (v8)
  {
    result = swift_beginAccess();
    v15 = *a2 + 1;
    if (!__OFADD__(*a2, 1))
      goto LABEL_8;
    __break(1u);
  }
  result = swift_beginAccess();
  v15 = *a2 + 1;
  if (!__OFADD__(*a2, 1))
  {
LABEL_8:
    *a2 = v15;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SQLDatabase.unregisterFunction(named:argumentCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return OUTLINED_FUNCTION_3_20();
}

uint64_t sub_2477061D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = v0[8];
  v2 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  v0[9] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  v3 = *(_QWORD *)(v1 + v2);
  v0[10] = v3;
  if (v3)
  {
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247706224()
{
  uint64_t v0;

  sub_2476C0718();
  *(_QWORD *)(v0 + 88) = 0;
  swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_247706284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0[8] + v0[9]);
  v0[12] = v1;
  if (v1)
  {
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2477062CC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[11];
  sub_2476F01BC(v0[12], v0[5], v0[6], v0[7]);
  v0[13] = v1;
  if (!v1)
    swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_247706330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  sub_24772D480();
  sub_24772CAFC();
  OUTLINED_FUNCTION_18_5();
  sub_24772C91C();
  sub_24772CAFC();
  OUTLINED_FUNCTION_53_1();
  swift_beginAccess();
  sub_2477068D4(v2, v1, (void (*)(_QWORD))sub_247707288, v3, (void (*)(uint64_t))_s14ScalarFunctionCMa);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_20_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247706438()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247706460()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247706488(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  const char *v14;
  uint64_t function_v2;
  _QWORD v16[2];

  v8 = sub_24772CA48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = a2;
  v16[1] = a3;
  sub_24772CA3C();
  sub_2476B5B30();
  v12 = sub_24772D090();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (v12)
    v14 = (const char *)(v12 + 32);
  else
    v14 = 0;
  function_v2 = sqlite3_create_function_v2(a1, v14, a4, 0, 0, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  return function_v2;
}

uint64_t sub_2477065B0()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_25_8();
  v1 = v0;
  sub_24772C91C();
  v2 = sub_2477128D4();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_8_15();
  sub_247707300();
  OUTLINED_FUNCTION_24_12();
  sub_24772D324();
  OUTLINED_FUNCTION_15_11();
  v5 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v2);
  _s9StatementCMa();
  sub_2476C1678();
  sub_24772D330();
  *v1 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

double sub_24770669C()
{
  _QWORD *v0;
  _QWORD *v1;
  _OWORD *v2;
  _OWORD *v3;
  unint64_t v4;
  char v5;
  char v6;
  double result;
  uint64_t v8;

  OUTLINED_FUNCTION_25_8();
  v1 = v0;
  v3 = v2;
  sub_24772C91C();
  v4 = sub_247712890();
  v6 = v5;
  OUTLINED_FUNCTION_18_5();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_8_15();
    sub_2477072A4();
    OUTLINED_FUNCTION_24_12();
    sub_24772D324();
    OUTLINED_FUNCTION_15_11();
    sub_2476B5E48((_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v4), v3);
    sub_24772D330();
    *v1 = v8;
    OUTLINED_FUNCTION_0_17();
  }
  else
  {
    result = 0.0;
    *v3 = 0u;
    v3[1] = 0u;
  }
  return result;
}

uint64_t sub_24770678C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  unint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;

  sub_24772C91C();
  v3 = sub_247712890();
  v5 = v4;
  result = OUTLINED_FUNCTION_53_1();
  if ((v5 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v7 = *v1;
    *v1 = 0x8000000000000000;
    sub_247706C34(0, &qword_2576B9208, 255, (uint64_t (*)(uint64_t))sub_2476DC42C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
    OUTLINED_FUNCTION_24_12();
    sub_24772D324();
    OUTLINED_FUNCTION_15_11();
    sub_2476DC490(*(_QWORD *)(v7 + 56) + 8 * v3, a1);
    sub_2476DC42C(0);
    sub_24772D330();
    *v1 = v7;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a1 = 0;
  }
  *(_BYTE *)(a1 + 8) = (v5 & 1) == 0;
  return result;
}

uint64_t sub_2477068BC(uint64_t a1, uint64_t a2)
{
  return sub_2477068D4(a1, a2, sub_247707268, 0, (void (*)(uint64_t))_s13TableFunctionCMa);
}

uint64_t sub_2477068D4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, void (*a5)(uint64_t))
{
  _QWORD *v5;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v9 = v5;
  sub_24772C91C();
  v10 = sub_247712890();
  v12 = v11;
  OUTLINED_FUNCTION_41_1();
  if ((v12 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_8_15();
  a3(0);
  OUTLINED_FUNCTION_24_12();
  sub_24772D324();
  OUTLINED_FUNCTION_15_11();
  v13 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v10);
  a5(a4);
  sub_24772D330();
  *v9 = v15;
  swift_bridgeObjectRelease();
  return v13;
}

#error "2477069F0: call analysis failed (funcsize=11)"

#error "247706A1C: call analysis failed (funcsize=11)"

#error "247706A48: call analysis failed (funcsize=11)"

uint64_t sub_247706A54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247706A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_247705E9C(a1, a2, *(void (**)(uint64_t, char *))(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

unint64_t sub_247706A9C()
{
  unint64_t result;

  result = qword_2576B92E0;
  if (!qword_2576B92E0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.ScalarFunctionOptions, &type metadata for SQLDatabase.ScalarFunctionOptions);
    atomic_store(result, (unint64_t *)&qword_2576B92E0);
  }
  return result;
}

unint64_t sub_247706ADC()
{
  unint64_t result;

  result = qword_2576B92E8;
  if (!qword_2576B92E8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.ScalarFunctionOptions, &type metadata for SQLDatabase.ScalarFunctionOptions);
    atomic_store(result, (unint64_t *)&qword_2576B92E8);
  }
  return result;
}

unint64_t sub_247706B1C()
{
  unint64_t result;

  result = qword_2576B92F0;
  if (!qword_2576B92F0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.ScalarFunctionOptions, &type metadata for SQLDatabase.ScalarFunctionOptions);
    atomic_store(result, (unint64_t *)&qword_2576B92F0);
  }
  return result;
}

unint64_t sub_247706B5C()
{
  unint64_t result;

  result = qword_2576B92F8;
  if (!qword_2576B92F8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.ScalarFunctionOptions, &type metadata for SQLDatabase.ScalarFunctionOptions);
    atomic_store(result, (unint64_t *)&qword_2576B92F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLFunctionContext()
{
  return &type metadata for SQLFunctionContext;
}

ValueMetadata *type metadata accessor for SQLDatabase.ScalarFunctionOptions()
{
  return &type metadata for SQLDatabase.ScalarFunctionOptions;
}

uint64_t sub_247706BB8()
{
  return sub_247706BC4();
}

uint64_t sub_247706BC4()
{
  uint64_t *v0;
  void (*v1)(_QWORD);
  void (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  OUTLINED_FUNCTION_25_8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v0;
  *v0 = 0x8000000000000000;
  sub_247706FEC(v8, v6, v4, isUniquelyReferenced_nonNull_native, v2);
  *v0 = v11;
  return OUTLINED_FUNCTION_0_17();
}

void sub_247706C34(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, MEMORY[0x24BEE0D00], v8, MEMORY[0x24BEE0D10]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_247706C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2477128D4();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_247707300();
  if ((sub_24772D324() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2477128D4();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_24772D588();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_24770710C(v11, a2, a3, a1, v15);
    return sub_24772C91C();
  }
  return result;
}

_OWORD *sub_247706DAC(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_247712890();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_2477072A4();
  if ((sub_24772D324() & 1) == 0)
    goto LABEL_5;
  v13 = sub_247712890();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_24772D588();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_2476B5E48(a1, v16);
  }
  else
  {
    sub_247707154(v11, a2, a3, a1, v15);
    return (_OWORD *)sub_24772C91C();
  }
}

uint64_t sub_247706EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_247712890();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_247706C34(0, &qword_2576B9208, 255, (uint64_t (*)(uint64_t))sub_2476DC42C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
  if ((sub_24772D324() & 1) == 0)
    goto LABEL_5;
  v13 = sub_247712890();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_24772D588();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_247707224(a1, v15[7] + 8 * v11);
  sub_2477071BC(v11, a2, a3, a1, v15);
  return sub_24772C91C();
}

uint64_t sub_247706FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD **v7;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;

  v7 = (_QWORD **)v5;
  v11 = (_QWORD *)*v5;
  v12 = sub_247712890();
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v12;
  v15 = v13;
  a5(0);
  if ((sub_24772D324() & 1) == 0)
    goto LABEL_5;
  v16 = sub_247712890();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    result = sub_24772D588();
    __break(1u);
    return result;
  }
  v14 = v16;
LABEL_5:
  v18 = *v7;
  if ((v15 & 1) != 0)
  {
    v19 = v18[7];
    result = swift_release();
    *(_QWORD *)(v19 + 8 * v14) = a1;
  }
  else
  {
    sub_24770710C(v14, a2, a3, a1, v18);
    return sub_24772C91C();
  }
  return result;
}

unint64_t sub_24770710C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_247707154(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2476B5E48(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_2477071BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2476DC490(a4, a5[7] + 8 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_247707224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2476DC42C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_247707268(uint64_t a1)
{
  sub_247706C34(a1, &qword_2576B9300, 255, (uint64_t (*)(uint64_t))_s13TableFunctionCMa, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
}

void sub_247707288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_247706C34(a1, &qword_2576B9308, a3, (uint64_t (*)(uint64_t))_s14ScalarFunctionCMa, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
}

void sub_2477072A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25444C3A0)
  {
    v0 = sub_24772D33C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25444C3A0);
  }
}

void sub_247707300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B9310)
  {
    _s9StatementCMa();
    sub_2476C1678();
    v0 = sub_24772D33C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B9310);
  }
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_8_15()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_10_13(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_14_11()
{
  return sub_247706BC4();
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return sub_24772CAFC();
}

void sub_247707490()
{
  static UnknownKeyCodable._decodeUnknownKeys(from:)();
}

void static UnknownKeyCodable._decodeUnknownKeys(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  OUTLINED_FUNCTION_7_14();
  v2 = v1;
  v4 = v3;
  v25 = v5;
  OUTLINED_FUNCTION_56_3();
  v22 = v4;
  v23 = v2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = OUTLINED_FUNCTION_16_11(AssociatedConformanceWitness, v7, v8, v9);
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, v10);
  v11 = sub_24772D438();
  v24 = sub_24772D018();
  v12 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - v14;
  v21 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - v17;
  OUTLINED_FUNCTION_18_13();
  sub_24772D684();
  if (!v0)
  {
    OUTLINED_FUNCTION_30_9((uint64_t)v15, 0);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v15, v11);
    sub_247707A24();
  }
  MEMORY[0x2495821C4](v0);
  OUTLINED_FUNCTION_30_9((uint64_t)v15, 1);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v24);
  v19 = v25;
  *v25 = 0;
  *((_BYTE *)v19 + 8) = 2;
  OUTLINED_FUNCTION_0_11();
}

uint64_t type metadata accessor for UnknownKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnknownKeys);
}

void sub_247707674()
{
  UnknownKeyCodable._encode(to:with:)();
}

void UnknownKeyCodable._encode(to:with:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  OUTLINED_FUNCTION_7_14();
  OUTLINED_FUNCTION_19_8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for UnknownKeys(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  OUTLINED_FUNCTION_15_12();
}

void sub_247707A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_56_3();
  OUTLINED_FUNCTION_22_7();
  v0 = OUTLINED_FUNCTION_21_7();
  v4 = type metadata accessor for UnknownKeys(v0, v1, v2, v3);
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, v4);
  sub_24772C8C8();
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, v4);
  sub_24772D438();
  sub_24772D42C();
  sub_24772CC88();
  OUTLINED_FUNCTION_24_13();
}

uint64_t sub_247707C54(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyCodable(a2, a1);
  return a2;
}

_OWORD *sub_247707C88(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_247707CA0()
{
  unint64_t result;

  result = qword_2576B9318;
  if (!qword_2576B9318)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2576B9318);
  }
  return result;
}

uint64_t sub_247707CDC(uint64_t a1)
{
  destroy for AnyCodable(a1);
  return a1;
}

uint64_t static Optional<A>._decodeUnknownKeys(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void Optional<A>._encode(to:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  OUTLINED_FUNCTION_7_14();
  v1 = v0;
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v2);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v12;
  v14 = *((_BYTE *)v12 + 8);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v11, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    OUTLINED_FUNCTION_18_13();
    sub_24772D69C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, v20);
    OUTLINED_FUNCTION_9_14();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    v18 = v13;
    v19 = v14;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v1 + 48))(v3, &v18, v5, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  OUTLINED_FUNCTION_0_11();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_247707EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Optional<A>._decodeUnknownKeys(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

void sub_247707EC0()
{
  Optional<A>._encode(to:with:)();
}

void static Array<A>._decodeUnknownKeys(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10[2];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;

  OUTLINED_FUNCTION_7_14();
  OUTLINED_FUNCTION_19_8();
  v9 = v2;
  v3 = OUTLINED_FUNCTION_56_3();
  v4 = OUTLINED_FUNCTION_22_7();
  v6 = type metadata accessor for UnknownKeys(255, v3, v4, v5);
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, v6);
  OUTLINED_FUNCTION_21_7();
  sub_24772D438();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_20_10(v0);
  sub_24772D66C();
  if (v1)
  {
    MEMORY[0x2495821C4](v1);
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_247708CC8((uint64_t)v10, &qword_2576B9320, (void (*)(uint64_t))sub_247708150);
    *(_QWORD *)v9 = 0;
    *(_BYTE *)(v9 + 8) = 2;
  }
  else
  {
    sub_2476B3F20(v10, (uint64_t)v12);
    MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, v6);
    OUTLINED_FUNCTION_21_7();
    sub_24772C94C();
    *(_QWORD *)&v10[0] = sub_24772C8D4();
    __swift_project_boxed_opaque_existential_1(v12, v13);
    sub_24772D4A4();
    if ((v8 & 1) == 0)
    {
      OUTLINED_FUNCTION_5_16();
      sub_24772CCC4();
    }
    if ((OUTLINED_FUNCTION_4_17() & 1) == 0)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
      sub_24772D498();
      sub_247707A24();
    }
    *(_QWORD *)v9 = *(_QWORD *)&v10[0];
    *(_BYTE *)(v9 + 8) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  OUTLINED_FUNCTION_0_11();
}

unint64_t sub_247708150()
{
  unint64_t result;

  result = qword_2576B9328;
  if (!qword_2576B9328)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B9328);
  }
  return result;
}

void Array<A>._encode(to:with:)()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_7_14();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_16_11(AssociatedConformanceWitness, v1, v2, v3);
  OUTLINED_FUNCTION_15_12();
}

void sub_2477087EC()
{
  static Array<A>._decodeUnknownKeys(from:)();
}

void sub_247708808()
{
  Array<A>._encode(to:with:)();
}

void AnyCodable.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  __int128 v35[4];

  OUTLINED_FUNCTION_7_14();
  v2 = (uint64_t)v1;
  v4 = v3;
  OUTLINED_FUNCTION_20_10(v1);
  sub_24772D678();
  if (!v0)
  {
    OUTLINED_FUNCTION_20_10(v34);
    if ((sub_24772D51C() & 1) != 0)
    {
      memset(v35, 0, 48);
    }
    else
    {
      v14 = MEMORY[0x24BEE1328];
      *(_QWORD *)&v15 = MEMORY[0x24BEE1348];
      *((_QWORD *)&v15 + 1) = MEMORY[0x24BEE1330];
      v16 = MEMORY[0x24BEE1768];
      v17 = MEMORY[0x24BEE1798];
      v18 = MEMORY[0x24BEE1770];
      v19 = MEMORY[0x24BEE1E88];
      v20 = MEMORY[0x24BEE1EB8];
      v21 = MEMORY[0x24BEE1E90];
      v22 = MEMORY[0x24BEE13C8];
      v5 = MEMORY[0x24BEE0D38];
      v23 = MEMORY[0x24BEE1400];
      v24 = MEMORY[0x24BEE13D8];
      v25 = MEMORY[0x24BEE0D00];
      v26 = MEMORY[0x24BEE0D38];
      v6 = MEMORY[0x24BEE0D08];
      v27 = MEMORY[0x24BEE0D08];
      sub_247708B18();
      v28 = v7;
      v29 = sub_247708B9C(&qword_2576B9338, (uint64_t (*)(void))sub_247708B60, MEMORY[0x24BEE12D0]);
      v30 = sub_247708B9C(&qword_2576B9348, (uint64_t (*)(void))sub_247707CA0, MEMORY[0x24BEE12A0]);
      sub_247708C00();
      v31 = v8;
      v32 = sub_247708C58(&qword_2576B9358, (uint64_t (*)(void))sub_247708B60, v5, MEMORY[0x24BEE04E0]);
      v33 = sub_247708C58(&qword_2576B9360, (uint64_t (*)(void))sub_247707CA0, v6, MEMORY[0x24BEE04C0]);
      v9 = v14;
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v11 = v9;
      v12 = v15;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v10);
      sub_24772D510();
      sub_247707C88(&v10, v13);
      sub_247707C88(v13, v35);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_247707C88(v35, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_0_11();
}

void sub_247708B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B9330)
  {
    v0 = sub_24772CD48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B9330);
  }
}

unint64_t sub_247708B60()
{
  unint64_t result;

  result = qword_2576B9340;
  if (!qword_2576B9340)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2576B9340);
  }
  return result;
}

uint64_t sub_247708B9C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_247708B18();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x2495822A8](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_247708C00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B9350)
  {
    v0 = sub_24772C94C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B9350);
  }
}

uint64_t sub_247708C58(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_247708C00();
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x2495822A8](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247708CC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_247708D04(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_247708D04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_24772D018();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_35();
}

unint64_t sub_247708D4C()
{
  unint64_t result;

  result = qword_2576B9370;
  if (!qword_2576B9370)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2576B9370);
  }
  return result;
}

uint64_t AnyCodable.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24772D69C();
  sub_247707C54(v1, (uint64_t)&v5);
  if (v6)
  {
    sub_247707C88(&v5, &v3);
    __swift_project_boxed_opaque_existential_1(&v3, v4);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_24772D528();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    OUTLINED_FUNCTION_9_14();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

void sub_247708EA0()
{
  AnyCodable.init(from:)();
}

uint64_t sub_247708EB4(_QWORD *a1)
{
  return AnyCodable.encode(to:)(a1);
}

void UnknownKeys.stringValue.getter()
{
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_35();
}

void UnknownKeys.stringValue.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_44();
}

double (*UnknownKeys.stringValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UnknownKeys.init(stringValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = sub_24772D018();
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - v8;
  sub_24772C91C();
  sub_24772D6D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a3) != 1)
  {
    swift_bridgeObjectRelease();
    a1 = 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return a1;
}

void UnknownKeys.init(intValue:)()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t UnknownKeys.intValue.getter()
{
  return 0;
}

uint64_t UnknownKeys.hash(into:)()
{
  sub_24772C91C();
  sub_24772CAC0();
  return swift_bridgeObjectRelease();
}

uint64_t static UnknownKeys.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_24772D4F8();
}

uint64_t UnknownKeys.hashValue.getter()
{
  OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_79_0();
  UnknownKeys.hash(into:)();
  return sub_24772D624();
}

uint64_t sub_2477090A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

uint64_t sub_2477090D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;

  result = UnknownKeys.init(stringValue:)(a1, a2, *(_QWORD *)(a3 + 16));
  *a4 = result;
  a4[1] = v6;
  return result;
}

void sub_247709100(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_247709108()
{
  return UnknownKeys.hashValue.getter();
}

uint64_t sub_247709110()
{
  return UnknownKeys.hash(into:)();
}

uint64_t sub_247709118()
{
  sub_24772D600();
  UnknownKeys.hash(into:)();
  return sub_24772D624();
}

uint64_t sub_247709154(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, a1);
  return sub_24772D6F0();
}

uint64_t sub_247709188(uint64_t a1)
{
  MEMORY[0x2495822A8](&protocol conformance descriptor for UnknownKeys<A>, a1);
  return sub_24772D6FC();
}

uint64_t sub_2477091BC(uint64_t *a1, uint64_t *a2)
{
  return static UnknownKeys.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void UnknownKeyCoding.init(wrappedValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_19_8();
  v3 = v2;
  v7 = v2 + *(int *)(type metadata accessor for UnknownKeyCoding(0, v4, v5, v6) + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v3, v1, v0);
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 2;
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for UnknownKeyCoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnknownKeyCoding);
}

uint64_t UnknownKeyCoding.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UnknownKeyCoding.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

double (*UnknownKeyCoding.wrappedValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UnknownKeyCoding.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t UnknownKeyCoding.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a4 + *(int *)(type metadata accessor for UnknownKeyCoding(0, v12, v13, v14) + 36);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 2;
  sub_2476B3F38(a1, (uint64_t)&v20);
  sub_24772CEEC();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a3 + 40))(&v20, a1, a2, a3);
    __swift_destroy_boxed_opaque_existential_1(a1);
    v17 = v20;
    v18 = v21;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v15 = v17;
    *(_BYTE *)(v15 + 8) = v18;
  }
  return result;
}

uint64_t UnknownKeyCoding.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v2 + *(int *)(a2 + 36));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  v6 = v4;
  v7 = (char)v3;
  return (*(uint64_t (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)(a2 + 24) + 48))(a1, &v6, *(_QWORD *)(a2 + 16));
}

uint64_t sub_247709414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return UnknownKeyCoding.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_247709430(uint64_t a1, uint64_t a2)
{
  return UnknownKeyCoding.encode(to:)(a1, a2);
}

uint64_t AnyCodingKey.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_24772D6E4();
  if ((v4 & 1) != 0)
    v5 = sub_24772D6CC();
  else
    v5 = sub_24772D480();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

SonicFoundation::AnyCodingKey_optional __swiftcall AnyCodingKey.init(intValue:)(Swift::Int intValue)
{
  uint64_t v2;
  void *v3;
  Swift::Int v4;
  Swift::Bool v5;
  SonicFoundation::AnyCodingKey_optional result;

  v2 = sub_24772D480();
  v4 = intValue;
  v5 = 0;
  result.value.intValue.value = v4;
  result.value.stringValue._object = v3;
  result.value.stringValue._countAndFlagsBits = v2;
  result.value.intValue.is_nil = v5;
  return result;
}

SonicFoundation::AnyCodingKey_optional __swiftcall AnyCodingKey.init(stringValue:)(Swift::String stringValue)
{
  Swift::Int v1;
  Swift::Bool v2;
  SonicFoundation::AnyCodingKey_optional result;

  v1 = 0;
  v2 = 1;
  result.value.stringValue = stringValue;
  result.value.intValue.value = v1;
  result.value.intValue.is_nil = v2;
  return result;
}

void AnyCodingKey.stringValue.getter()
{
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_35();
}

void AnyCodingKey.stringValue.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_44();
}

double (*AnyCodingKey.stringValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AnyCodingKey.intValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AnyCodingKey.intValue.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

double (*AnyCodingKey.intValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AnyCodingKey.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_24772C91C();
  sub_24772CAC0();
  swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return sub_24772D618();
  sub_24772D618();
  return sub_24772D60C();
}

uint64_t static AnyCodingKey.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_24772D4F8(), result = 0, (v13 & 1) != 0))
  {
    if ((a4 & 1) != 0)
    {
      if ((a8 & 1) != 0)
        return 1;
    }
    else if ((a8 & 1) == 0 && a3 == a7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t AnyCodingKey.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_79_0();
  sub_24772C91C();
  sub_24772CAC0();
  swift_bridgeObjectRelease();
  sub_24772D618();
  if ((a4 & 1) == 0)
    sub_24772D60C();
  return sub_24772D624();
}

uint64_t sub_24770974C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  *(_OWORD *)&result = (unsigned __int128)AnyCodingKey.init(stringValue:)(*(Swift::String *)&a1);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_24770977C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_247709788@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  SonicFoundation::AnyCodingKey_optional v4;

  v4 = AnyCodingKey.init(intValue:)(a1);
  *(_QWORD *)a2 = v4.value.stringValue._countAndFlagsBits;
  *(_QWORD *)(a2 + 8) = v4.value.stringValue._object;
  *(_QWORD *)(a2 + 16) = v4.value.intValue.value;
  *(_BYTE *)(a2 + 24) = 0;
  return v4.value.stringValue._countAndFlagsBits;
}

uint64_t sub_2477097B4()
{
  uint64_t v0;

  return AnyCodingKey.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2477097C4(uint64_t a1)
{
  uint64_t v1;

  return AnyCodingKey.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_2477097D4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_24772D600();
  sub_24772C91C();
  sub_24772CAC0();
  swift_bridgeObjectRelease();
  sub_24772D618();
  if (v1 != 1)
    sub_24772D60C();
  return sub_24772D624();
}

uint64_t sub_247709868(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2477098B0(a1, a2, a3, MEMORY[0x24BEE4AC0], MEMORY[0x24BEE4AA8]);
}

uint64_t sub_24770987C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24770989C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2477098B0(a1, a2, a3, MEMORY[0x24BEE12D0], MEMORY[0x24BEE12A0]);
}

uint64_t sub_2477098B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v8 = *a3;
  v11 = *(_QWORD *)(*a3 + 8);
  *(_QWORD *)(a1 + 8) = MEMORY[0x2495822A8](a4, a2, &v11);
  v10 = *(_QWORD *)(v8 + 16);
  result = MEMORY[0x2495822A8](a5, a2, &v10);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_24770991C()
{
  JUMPOUT(0x2495822A8);
}

void sub_24770992C()
{
  JUMPOUT(0x2495822A8);
}

void sub_24770993C()
{
  JUMPOUT(0x2495822A8);
}

unint64_t sub_247709950()
{
  unint64_t result;

  result = qword_2576B9378;
  if (!qword_2576B9378)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodingKey, &type metadata for AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_2576B9378);
  }
  return result;
}

unint64_t sub_247709990()
{
  unint64_t result;

  result = qword_2576B9380;
  if (!qword_2576B9380)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodingKey, &type metadata for AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_2576B9380);
  }
  return result;
}

unint64_t sub_2477099D0()
{
  unint64_t result;

  result = qword_2576B9388[0];
  if (!qword_2576B9388[0])
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodingKey, &type metadata for AnyCodingKey);
    atomic_store(result, qword_2576B9388);
  }
  return result;
}

uint64_t sub_247709A0C()
{
  sub_24770A724();
  return sub_24772D6F0();
}

uint64_t sub_247709A34()
{
  sub_24770A724();
  return sub_24772D6FC();
}

uint64_t sub_247709A5C(uint64_t a1, uint64_t a2)
{
  return static AnyCodingKey.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t dispatch thunk of static UnknownKeyCodable._decodeUnknownKeys(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of UnknownKeyCodable._encode(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t destroy for AnyCodable(uint64_t result)
{
  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v3;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_OWORD *)(a1 + 32) = a2[2];
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_2((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, _OWORD *a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_247709E48(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_247709E60(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for AnyCodable()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t sub_247709E9C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  sub_24772C91C();
  return a1;
}

uint64_t sub_247709ED0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_247709ED8(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247709F18(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247709F50(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_247709F90(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_247709FD4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_247709FEC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for _UnknownValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _UnknownValues);
}

uint64_t sub_24770A010()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24770A084(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_QWORD *)v10;
    LOBYTE(v10) = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = v11;
    *(_BYTE *)(v12 + 8) = v10;
    sub_24772C91C();
  }
  return v4;
}

uint64_t sub_24770A140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v8;
  sub_24772C91C();
  return a1;
}

uint64_t sub_24770A1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v8;
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24770A21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_24770A280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24770A2EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFD)
    v7 = 253;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0xFD)
    {
      v15 = *(unsigned __int8 *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v15 > 2)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24770A374 + 4 * byte_2477312D0[v13]))();
  }
}

void sub_24770A3FC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFDu)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_24770A514()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24770A58CLL);
}

void sub_24770A51C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24770A524);
  JUMPOUT(0x24770A58CLL);
}

void sub_24770A564()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24770A58CLL);
}

void sub_24770A56C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24770A58CLL);
}

uint64_t sub_24770A574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a2)
    goto LABEL_6;
  if (a3 < 0xFD)
  {
    if (a2 > 0xFD)
      JUMPOUT(0x24770A580);
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = -(char)a2;
LABEL_6:
    JUMPOUT(0x24770A58CLL);
  }
  return __swift_storeEnumTagSinglePayload(v6, a2, a3, a4);
}

uint64_t initializeWithCopy for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodingKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnyCodingKey()
{
  OUTLINED_FUNCTION_92_0();
}

unint64_t sub_24770A724()
{
  unint64_t result;

  result = qword_2576B9510;
  if (!qword_2576B9510)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for AnyCodingKey, &type metadata for AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_2576B9510);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return sub_24772D354();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 96));
  return sub_24772D4B0();
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return sub_24772CD48();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v1 - 72), *(_QWORD *)(v0 + 128));
}

uint64_t OUTLINED_FUNCTION_8_16()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 280) + 8))(*(_QWORD *)(v0 - 248), *(_QWORD *)(v0 - 256));
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return sub_24772D534();
}

uint64_t OUTLINED_FUNCTION_11_14()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v0, *(_QWORD *)(v1 - 176));
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_15_12()
{
  JUMPOUT(0x2495822A8);
}

uint64_t OUTLINED_FUNCTION_16_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for UnknownKeys(255, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_17_11()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[11] + 8))(v0[10], v0[9]);
}

_QWORD *OUTLINED_FUNCTION_18_13()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

_QWORD *OUTLINED_FUNCTION_20_10(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return sub_24772D018();
}

void OUTLINED_FUNCTION_24_13()
{
  JUMPOUT(0x249581090);
}

uint64_t OUTLINED_FUNCTION_30_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void static NanoID.small(size:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_3_21(0, a1, 64);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_1_17();
  }
}

uint64_t sub_24770A900(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result == a2)
  {
    OUTLINED_FUNCTION_132();
    return MEMORY[0x24BEE4AF8];
  }
  v5 = result;
  if (a2 < result)
    goto LABEL_18;
  v6 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v4 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v5 >= a2)
    {
      __break(1u);
      goto LABEL_16;
    }
    if (v6)
      break;
    if (++v5 == a2)
    {
      OUTLINED_FUNCTION_132();
      return v4;
    }
  }
  sub_24772C91C();
  result = sub_24772CACC();
  if (result < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result)
    OUTLINED_FUNCTION_9_15();
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_24770AAB0(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a3 != a4)
  {
    v6 = a3;
    if (a4 >= a3)
    {
      v7 = MEMORY[0x24BEE4AF8];
      while (v6 < a4)
      {
        v17 = v6;
        a1(&v15, &v17);
        if (v4)
        {
          swift_bridgeObjectRelease();
          return;
        }
        v8 = v16;
        if (v16)
        {
          v9 = v15;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2476C5900();
            v7 = v12;
          }
          v10 = *(_QWORD *)(v7 + 16);
          if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
          {
            sub_2476C5900();
            v7 = v13;
          }
          *(_QWORD *)(v7 + 16) = v10 + 1;
          v11 = v7 + 16 * v10;
          *(_QWORD *)(v11 + 32) = v9;
          *(_QWORD *)(v11 + 40) = v8;
        }
        if (a4 == ++v6)
          return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

SonicFoundation::NanoID __swiftcall NanoID.init(config:)(SonicFoundation::NanoID::Configuration config)
{
  if (config.size < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24770A900(0, config.size, config.characters._countAndFlagsBits, (unint64_t)config.characters._object);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_1_17();
  }
  return (SonicFoundation::NanoID)config.characters;
}

unint64_t static NanoID.Configuration.default.getter()
{
  return OUTLINED_FUNCTION_11_15(64);
}

unint64_t static NanoID.Configuration.noSimilarCharacters.getter()
{
  return OUTLINED_FUNCTION_11_15(49);
}

unint64_t static NanoID.Configuration.taggedPointer.getter()
{
  return 0xD00000000000003BLL;
}

unint64_t static NanoID.Configuration.small.getter()
{
  return 0xD000000000000040;
}

void NanoID.Configuration.characters.getter()
{
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_35();
}

uint64_t NanoID.Configuration.characters.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*NanoID.Configuration.characters.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NanoID.Configuration.size.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t NanoID.Configuration.size.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*NanoID.Configuration.size.modify())(_QWORD)
{
  return nullsub_1;
}

SonicFoundation::NanoID::Configuration __swiftcall NanoID.Configuration.with(size:)(Swift::Int size)
{
  Swift::Int v1;
  uint64_t v2;
  void *v3;
  Swift::Int v4;
  SonicFoundation::NanoID::Configuration result;

  OUTLINED_FUNCTION_8_17();
  v2 = OUTLINED_FUNCTION_15_13();
  v4 = v1;
  result.size = v4;
  result.characters._object = v3;
  result.characters._countAndFlagsBits = v2;
  return result;
}

unint64_t sub_24770AD58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576B8090;
  if (!qword_2576B8090)
  {
    sub_2476C3718();
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2576B8090);
  }
  return result;
}

uint64_t NanoID.init<A>(config:using:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[10];

  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = MEMORY[0x24BDAC7A8](result);
    v12[2] = v5;
    v12[3] = v6;
    v12[4] = v4;
    v12[5] = a2;
    v12[6] = v7;
    v12[7] = v8;
    sub_24770AAB0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_24770AFE8, (uint64_t)v12, 0, v9);
    v11 = v10;
    swift_bridgeObjectRelease();
    v12[8] = v11;
    sub_2476C3718();
    OUTLINED_FUNCTION_7_18();
    return sub_24772CB8C();
  }
  return result;
}

uint64_t static NanoID.small<A>(size:using:)(uint64_t result)
{
  if (result <= 15)
    return OUTLINED_FUNCTION_2_17(64, 0x8000000247734C80, result);
  __break(1u);
  return result;
}

void static NanoID.noSimilarCharacters(size:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_3_21(0, a1, 49);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_1_17();
  }
}

uint64_t static NanoID.noSimilarCharacters<A>(size:using:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_2_17(49, 0x80000002477361D0, a1);
}

void static NanoID.taggedPointer(size:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_3_21(0, a1, 59);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_1_17();
  }
}

uint64_t static NanoID.taggedPointer<A>(size:using:)(uint64_t result)
{
  if (result <= 9)
    return OUTLINED_FUNCTION_2_17(59, 0x8000000247736210, result);
  __break(1u);
  return result;
}

uint64_t sub_24770AF74()
{
  sub_2476C58C4();
  return sub_24772CF64();
}

uint64_t sub_24770AFE8()
{
  return sub_24770AF74();
}

void NanoID.nanoIDString.getter()
{
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_35();
}

void NanoID.description.getter()
{
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_35();
}

uint64_t NanoID.hash(into:)()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_13_16();
  return swift_bridgeObjectRelease();
}

uint64_t static NanoID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_24772D4F8();
}

void NanoID.hashValue.getter()
{
  sub_24772D600();
  sub_24772C91C();
  OUTLINED_FUNCTION_13_16();
  swift_bridgeObjectRelease();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

void sub_24770B0D8()
{
  NanoID.hashValue.getter();
}

uint64_t sub_24770B0E0()
{
  return NanoID.hash(into:)();
}

void sub_24770B0E8()
{
  sub_24772D600();
  sub_24772C91C();
  sub_24772CAC0();
  swift_bridgeObjectRelease();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

unint64_t sub_24770B138()
{
  unint64_t result;

  result = qword_2576B9518;
  if (!qword_2576B9518)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for NanoID, &type metadata for NanoID);
    atomic_store(result, (unint64_t *)&qword_2576B9518);
  }
  return result;
}

unint64_t sub_24770B178()
{
  unint64_t result;

  result = qword_2576B9520;
  if (!qword_2576B9520)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for NanoID, &type metadata for NanoID);
    atomic_store(result, (unint64_t *)&qword_2576B9520);
  }
  return result;
}

uint64_t sub_24770B1B4@<X0>(uint64_t a1@<X0>, SonicFoundation::NanoID *a2@<X8>)
{
  uint64_t result;
  SonicFoundation::NanoID v5;

  v5 = NanoID.init(_:)(*(Swift::String *)&a1);
  result = v5.nanoIDString._countAndFlagsBits;
  *a2 = v5;
  return result;
}

uint64_t sub_24770B1D8(uint64_t *a1, uint64_t *a2)
{
  return static NanoID.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void sub_24770B1EC()
{
  NanoID.description.getter();
}

ValueMetadata *type metadata accessor for NanoID()
{
  return &type metadata for NanoID;
}

_QWORD *sub_24770B208(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_24772C91C();
  return a1;
}

_QWORD *assignWithCopy for NanoID.Configuration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for NanoID.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for NanoID.Configuration()
{
  return &type metadata for NanoID.Configuration;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return sub_24772CB8C();
}

uint64_t OUTLINED_FUNCTION_2_17(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return NanoID.init<A>(config:using:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t OUTLINED_FUNCTION_3_21(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  return sub_24770A900(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, v3);
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return sub_24772C91C();
}

void OUTLINED_FUNCTION_5_17()
{
  sub_2476C3718();
}

unint64_t OUTLINED_FUNCTION_7_18()
{
  return sub_24770AD58();
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return sub_24772C91C();
}

void OUTLINED_FUNCTION_9_15()
{
  JUMPOUT(0x249582398);
}

unint64_t OUTLINED_FUNCTION_11_15(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return sub_24772CAC0();
}

void OUTLINED_FUNCTION_14_13()
{
  sub_2476C5900();
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  uint64_t v0;

  return v0;
}

void Duration.milliseconds.getter()
{
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_2_18();
  OUTLINED_FUNCTION_1_18();
}

void Duration.seconds.getter()
{
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_2_18();
  OUTLINED_FUNCTION_1_18();
}

void Duration.microseconds.getter()
{
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_2_18();
  OUTLINED_FUNCTION_1_18();
}

void Duration.nanoseconds.getter()
{
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_2_18();
  OUTLINED_FUNCTION_1_18();
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return sub_24772D6B4();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return sub_24772D6B4();
}

uint64_t sub_24770B4B0@<X0>(_QWORD *a1@<X8>)
{
  return sub_24770B6BC(a1);
}

uint64_t sub_24770B4B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_24772CAFC();
  sub_24772CAFC();
  result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_24770B54C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_24772CAFC();
  sub_24772CAFC();
  result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_24770B5E4@<X0>(unsigned __int8 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  sub_24770BB90(a1);
  sub_24772CAFC();
  sub_24772CAFC();
  result = swift_bridgeObjectRelease();
  *a2 = 39;
  a2[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_24770B674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24772D480();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24770B6BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_24772C91C();
  sub_24772CAFC();
  sub_24772CAFC();
  result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t SQLFunctionResult<>.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)&v10 - v6;
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 16))(AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
}

uint64_t sub_24770B844(Swift::OpaquePointer a1)
{
  return sub_24770B85C(a1);
}

uint64_t sub_24770B85C(Swift::OpaquePointer a1)
{
  sub_24772C91C();
  String.result(for:)(a1);
  return swift_bridgeObjectRelease();
}

uint64_t SQLFunctionResult<>.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  if (!v3)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 24) + 16) + 16))(a1, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
  return result;
}

void sub_24770B9B8(sqlite3_value *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24770B9DC(a1);
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  OUTLINED_FUNCTION_51_0();
}

uint64_t sub_24770B9DC(sqlite3_value *a1)
{
  const unsigned __int8 *v2;

  v2 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  return sub_2476ED1AC((uint64_t)v2);
}

uint64_t SQLFunctionArgument<>.init(functionArgument:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v12 - v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v3)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 56))(v9, a2, a3);
  return result;
}

uint64_t sub_24770BB24(char a1)
{
  if (!a1)
    return 99;
  if (a1 == 1)
    return 117;
  return 27504;
}

uint64_t sub_24770BB58(char a1)
{
  if ((a1 & 1) != 0)
    return 0x564953554C435845;
  else
    return 0x4C414D524F4ELL;
}

uint64_t sub_24770BB90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24770BBC0 + 4 * byte_2477317E0[a1]))(0x4554454C4544, 0xE600000000000000);
}

uint64_t sub_24770BBC0()
{
  return 0x455441434E555254;
}

uint64_t sub_24770BBD8()
{
  return 0x54534953524550;
}

uint64_t sub_24770BBF0()
{
  return 0x59524F4D454DLL;
}

uint64_t sub_24770BC00()
{
  return 4997463;
}

uint64_t sub_24770BC10()
{
  return 4605519;
}

uint64_t sub_24770BC20(uint64_t result)
{
  return result;
}

uint64_t sub_24770BC28@<X0>(uint64_t *a1@<X8>)
{
  return sub_24770B674(a1);
}

uint64_t sub_24770BC30@<X0>(_QWORD *a1@<X8>)
{
  return sub_24770B4B8(a1);
}

const char *sub_24770BC38(sqlite3_stmt *a1, uint64_t a2, uint64_t a3)
{
  return SQLValueObject<>.bind(to:index:)(a1, a2, a3, (uint64_t)&off_2518DE090);
}

const char *SQLValueObject<>.bind(to:index:)(sqlite3_stmt *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t (*v10)(uint64_t, uint64_t);
  const char *result;
  char v12;

  v5 = v4;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain();
  result = (const char *)v10(a3, a4);
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((v12 & 1) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result)
    return (const char *)sqlite3_bind_pointer(a1, a2, v5, result, (void (__cdecl *)(void *))sub_24770C038);
LABEL_9:
  __break(1u);
  return result;
}

void sub_24770BD08(sqlite3_context *a1, uint64_t a2)
{
  SQLValueObject<>.result(for:)(a1, a2, (uint64_t)&off_2518DE090);
}

void SQLValueObject<>.result(for:)(sqlite3_context *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  const char *v9;
  char v10;

  v4 = v3;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 32);
  swift_unknownObjectRetain();
  v9 = (const char *)v8(a2, a3);
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else if (v9)
  {
    sqlite3_result_pointer(a1, v4, v9, (void (__cdecl *)(void *))sub_24770C0B8);
    return;
  }
  __break(1u);
}

void sub_24770BDB4(sqlite3_value *a1@<X0>, const char **a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  const char *v5;

  v5 = SQLValueObject<>.init(functionArgument:)(a1, v2, (uint64_t)&off_2518DE090);
  if (!v3)
    *a2 = v5;
  OUTLINED_FUNCTION_51_0();
}

const char *SQLValueObject<>.init(functionArgument:)(sqlite3_value *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const char *result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = (const char *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  if ((v7 & 1) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (sqlite3_value_pointer(a1, result))
  {
    v9 = swift_unknownObjectRetain();
    result = (const char *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(&v10, &v9, a2);
    if (!v3)
      return (const char *)v10;
  }
  else
  {
    sub_24772D144();
    sub_24772CAFC();
    v9 = (uint64_t)a1;
    sub_24772D300();
    sub_24772CAFC();
    sub_24772D168();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_2476B3FD0();
    swift_allocError();
    *v8 = 0;
    v8[1] = 0xE000000000000000;
    return (const char *)swift_willThrow();
  }
  return result;
}

uint64_t sub_24770BF6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_2476D64E0(a1, a2);
}

uint64_t sub_24770BF74(uint64_t a1)
{
  sub_24772C91C();
  return a1;
}

void sub_24770BFA4(Swift::OpaquePointer a1)
{
  sub_2476EC378(a1);
}

uint64_t SQLValueObject.nativeValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

void SQLValueObject.debugSQL.getter(_QWORD *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

void SQLValueObject.init(nativeValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  OUTLINED_FUNCTION_51_0();
}

uint64_t SQLValueObject.init(raw:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 16))();
}

uint64_t sub_24770C038(uint64_t a1)
{
  return sub_24770C04C(a1);
}

uint64_t sub_24770C04C(uint64_t result)
{
  if (result)
    return swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t dispatch thunk of _SQLDebugValue.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SQLFunctionResult.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static SQLValueObject.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SQLFunctionPackedArgument.init(functionArgument:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_24770C098@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_24770B5E4(*v1, a1);
}

uint64_t sub_24770C0A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_24770B54C(a1);
}

uint64_t sub_24770C0C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_24770C110;
  OUTLINED_FUNCTION_50_6();
  return OUTLINED_FUNCTION_18_14(v2, v3, v4);
}

uint64_t sub_24770C110()
{
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C14C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_8_18();
  OUTLINED_FUNCTION_137((uint64_t)sub_24770E54C);
  OUTLINED_FUNCTION_66();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 192) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_133(v1, (uint64_t)sub_24770C1AC, v4, v5);
  return OUTLINED_FUNCTION_29_0(v2);
}

uint64_t sub_24770C1AC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_14();
  if (!v1)
  {
    *(_BYTE *)(v3 + 122) = v0;
    *(_QWORD *)(v3 + 208) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770C1FC()
{
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C238()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_24770C288;
  OUTLINED_FUNCTION_50_6();
  return OUTLINED_FUNCTION_18_14(v2, v3, v4);
}

uint64_t sub_24770C288()
{
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C2C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_8_18();
  OUTLINED_FUNCTION_137((uint64_t)sub_24770E570);
  OUTLINED_FUNCTION_66();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 192) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_133(v1, (uint64_t)sub_24770C324, v4, v5);
  return OUTLINED_FUNCTION_29_0(v2);
}

uint64_t sub_24770C324()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_14();
  if (!v1)
  {
    *(_BYTE *)(v3 + 122) = v0;
    *(_QWORD *)(v3 + 208) = v2;
  }
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770C374()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24770C380()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_14();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208), *(_BYTE *)(v0 + 122) & 1);
}

uint64_t sub_24770C3D8()
{
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C414()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_14();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24770C460(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2576B95A0 + dword_2576B95A0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 136) = v3;
  *v3 = v1;
  v3[1] = sub_24770C4D4;
  return v5(v1 + 80, a1);
}

uint64_t sub_24770C4D4()
{
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C510()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_8_18();
  OUTLINED_FUNCTION_137((uint64_t)sub_24770E5C4);
  OUTLINED_FUNCTION_66();
  v1 = (_QWORD *)OUTLINED_FUNCTION_14();
  *(_QWORD *)(v0 + 192) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_133(v1, (uint64_t)sub_24770C570, v4, v5);
  return OUTLINED_FUNCTION_29_0(v2);
}

uint64_t sub_24770C570(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  OUTLINED_FUNCTION_140(&v6);
  *(_QWORD *)(v4 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 122) = a1;
  OUTLINED_FUNCTION_26();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24770C5D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_14();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_33();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 122));
}

uint64_t sub_24770C624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  sub_2476B4654(a2, v3 + 16);
  v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(_BYTE *)(v3 + 49) = *(_BYTE *)(v3 + 48);
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_24770C674()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t (*v6)(void);

  v1 = *(_BYTE *)(v0 + 49);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_OWORD *)(v0 + 80);
  v5 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)v3 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 128);
  *(_OWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 24) = v5;
  *(_BYTE *)(v3 + 40) = v1;
  swift_retain();
  sub_2476BB28C(v2);
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v6);
}

uint64_t sub_24770C6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  sub_2476B4654(a2, v3 + 16);
  v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(_BYTE *)(v3 + 49) = *(_BYTE *)(v3 + 48);
  return swift_task_switch();
}

uint64_t sub_24770C720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  sub_2476B4654(a2, v3 + 16);
  v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(_BYTE *)(v3 + 49) = *(_BYTE *)(v3 + 48);
  return swift_task_switch();
}

uint64_t sub_24770C77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  sub_2476B4654(a2, v3 + 16);
  v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(_BYTE *)(v3 + 49) = *(_BYTE *)(v3 + 48);
  return swift_task_switch();
}

uint64_t sub_24770C7D8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t (*v7)(void);

  result = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (result)
  {
    v2 = *(_BYTE *)(v0 + 49);
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_OWORD *)(v0 + 80);
    v6 = *(_OWORD *)(v0 + 96);
    *(_QWORD *)v3 = result;
    *(_OWORD *)(v3 + 8) = v5;
    *(_OWORD *)(v3 + 24) = v6;
    *(_BYTE *)(v3 + 40) = v2;
    swift_retain();
    sub_2476BB28C(v4);
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_10(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24770C83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_2476C0310();
  v8 = a2;
  v9 = 0;
  v7 = a3;
  sub_2476D1430(a2, &v9, v6, a1, 1, (uint64_t)&v8, a2, (uint64_t)&v7);
}

void sub_24770C8BC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _QWORD v12[2];
  _QWORD v13[3];
  uint64_t v14;

  v9 = sub_2476C0310();
  v11 = 0;
  v14 = 0;
  v2 = 1;
  v3 = MEMORY[0x24BEE0D00];
  v4 = MEMORY[0x24BEE0D00];
  while (1)
  {
    sub_24770E68C();
    v7 = v6;
    v13[0] = v3;
    sub_24770E5EC();
    v13[1] = v8;
    v12[0] = &protocol witness table for String;
    v12[1] = sub_24770E634();
    sub_2476D1430(v4, &v14, v9, a1, 2, (uint64_t)v13, v4, (uint64_t)v12);
    if (v1)
      break;
    if ((v11 & 1) != 0)
      return;
    v2 = 0;
    v11 = 1;
    sub_24770E5EC();
    v4 = v5;
    sub_24770E634();
  }
  if ((v2 & 1) == 0)
    (*(void (**)(char *))(*(_QWORD *)(v13[0] - 8) + 8))((char *)&v13[2] + *(int *)(v7 + 32));
}

void sub_24770CA24(uint64_t a1)
{
  uint64_t v2;
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_2476C0310();
  v5 = 0;
  v4 = MEMORY[0x24BEE1328];
  v3 = &protocol witness table for Bool;
  sub_2476D1430(MEMORY[0x24BEE1328], &v5, v2, a1, 1, (uint64_t)&v4, MEMORY[0x24BEE1328], (uint64_t)&v3);
}

void sub_24770CAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24770C83C(a1, a2, a3);
}

void sub_24770CAC4(uint64_t a1)
{
  sub_24770C8BC(a1);
}

void sub_24770CAE8(uint64_t a1)
{
  sub_24770CA24(a1);
}

uint64_t sub_24770CAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = (_QWORD *)swift_task_alloc();
  v6[5] = v7;
  v8 = OUTLINED_FUNCTION_62_7(v7, (uint64_t)sub_24770CB4C);
  return OUTLINED_FUNCTION_33_10(v8, v9);
}

uint64_t sub_24770CB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v6;
  uint64_t *v7;

  v7 = *(uint64_t **)v2;
  v4 = v7;
  OUTLINED_FUNCTION_140(&v7);
  v4[6] = a1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v2 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v4[7] = (uint64_t)v6;
  *v6 = v2;
  v6[1] = sub_24770CBD4;
  return sub_247701ADC((uint64_t)v6, a1, v4[3], v4[4]);
}

uint64_t sub_24770CBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v3);
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_3_2();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v2;
  v5[1] = sub_24770CC48;
  return OUTLINED_FUNCTION_40_7();
}

uint64_t sub_24770CC48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_140(&v4);
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770CCA4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[11] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_24770CD58;
  return OUTLINED_FUNCTION_21_8();
}

uint64_t sub_24770CCEC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_39_9();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_10(v0);
}

uint64_t sub_24770CD10()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[11] = v0[10];
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_24770CD58;
  return OUTLINED_FUNCTION_21_8();
}

uint64_t sub_24770CD58()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141();
  *v2 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770CDB4()
{
  uint64_t v0;

  swift_willThrow();
  OUTLINED_FUNCTION_39_9();
  return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24770CDEC()
{
  uint64_t v0;

  MEMORY[0x2495821C4](*(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_39_9();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLDatabase.withTransaction<A>(named:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v7[5] = a6;
  v7[6] = v6;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v8 = (_QWORD *)swift_task_alloc();
  v7[7] = v8;
  v9 = OUTLINED_FUNCTION_62_7(v8, (uint64_t)sub_24770CE6C);
  return OUTLINED_FUNCTION_33_10(v9, v10);
}

uint64_t sub_24770CE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;

  v10 = *v2;
  v4 = v10;
  OUTLINED_FUNCTION_140(&v10);
  *(_QWORD *)(v4 + 64) = a1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_49((uint64_t (*)(void))v2[1]);
  v6 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v4 + 72) = v6;
  *v6 = v2;
  v6[1] = sub_24770CEE8;
  OUTLINED_FUNCTION_50_6();
  return OUTLINED_FUNCTION_18_14(v7, v8, v9);
}

uint64_t sub_24770CEE8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD *v6;

  v2 = (_QWORD *)*v1;
  v6 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_140(&v6);
  swift_task_dealloc();
  if (v0)
  {
    v2[12] = v0;
    v3 = (_QWORD *)swift_task_alloc();
    v2[13] = v3;
    *v3 = v1;
    v3[1] = sub_24770CFD0;
    return SQLDatabase.Transaction.rollback()();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v2[10] = v5;
    *v5 = v1;
    v5[1] = sub_24770CF7C;
    return OUTLINED_FUNCTION_40_7();
  }
}

uint64_t sub_24770CF7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770CFD0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770D02C()
{
  uint64_t v0;

  swift_willThrow();
  OUTLINED_FUNCTION_26_2();
  return OUTLINED_FUNCTION_49(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24770D064()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0[5] - 8) + 8))(v0[2]);
  v0[12] = v0[11];
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_24770CFD0;
  return OUTLINED_FUNCTION_21_8();
}

uint64_t sub_24770D0C0()
{
  uint64_t v0;

  MEMORY[0x2495821C4](*(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_26_2();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLDatabase.transaction(named:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  _s10ConnectionCMa();
  swift_allocObject();
  OUTLINED_FUNCTION_39_0();
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_24770D16C;
  return sub_2476F1770(v2);
}

uint64_t sub_24770D16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22();
  v3 = *v2;
  *(_QWORD *)(v0 + 48) = v4;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770D1D4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 80) = 0;
  type metadata accessor for SQLDatabase.Transaction();
  swift_allocObject();
  OUTLINED_FUNCTION_39_0();
  sub_24772C91C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_24770D270;
  return sub_24770D674(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (_BYTE *)(v0 + 80));
}

uint64_t sub_24770D270(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  OUTLINED_FUNCTION_140(&v6);
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 72) = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24770D2DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_9();
  return OUTLINED_FUNCTION_69(*(_QWORD *)(v0 + 72), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24770D308()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_9();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLDatabase.Transaction.commit()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770D34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_7();
  if ((*(_BYTE *)(v0 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_23_12();
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_7_19(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    *(_QWORD *)(v1 + 48) = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 128);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770D3E8()
{
  uint64_t v0;

  sub_2476F0074(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 56) = 0;
  swift_release();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24770D448()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 136) = 1;
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v1();
}

uint64_t sub_24770D464()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_9();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLDatabase.Transaction.rollback()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770D4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_7();
  if ((*(_BYTE *)(v0 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_23_12();
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_7_19(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    *(_QWORD *)(v1 + 48) = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 128);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770D53C()
{
  uint64_t v0;

  sub_2476F0090(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 56) = 0;
  swift_release();
  return OUTLINED_FUNCTION_5();
}

uint64_t type metadata accessor for SQLDatabase.Transaction()
{
  return objc_opt_self();
}

BOOL static SQLDatabase.Transaction.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDatabase.Transaction.Mode.hash(into:)()
{
  return sub_24772D60C();
}

void _s15SonicFoundation11SQLDatabaseC11TransactionC4ModeO9hashValueSivg_0()
{
  sub_24772D600();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

void sub_24770D644()
{
  sub_24772D600();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

uint64_t sub_24770D674(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  _QWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)(v5 + 32) = *v4;
  *(_BYTE *)(v5 + 40) = *a4;
  swift_defaultActor_initialize();
  v4[15] = a3;
  v4[16] = a1;
  v4[14] = a2;
  swift_retain();
  return OUTLINED_FUNCTION_3_2();
}

uint64_t sub_24770D6E4()
{
  uint64_t v0;

  sub_2476EFF68(*(_QWORD *)(v0 + 16));
  *(_BYTE *)(*(_QWORD *)(v0 + 24) + 136) = 0;
  return OUTLINED_FUNCTION_2_19();
}

uint64_t sub_24770D78C()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_69(*(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_24770D7BC()
{
  unint64_t result;

  result = qword_2576B9550;
  if (!qword_2576B9550)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Transaction.Error, &type metadata for SQLDatabase.Transaction.Error);
    atomic_store(result, (unint64_t *)&qword_2576B9550);
  }
  return result;
}

void sub_24770D7F8()
{
  OUTLINED_FUNCTION_19_9();
  sub_24772D144();
  swift_bridgeObjectRelease();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  sub_24772CAFC();
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_61_7();
  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_47_9();
}

uint64_t SQLDatabase.Transaction.deinit()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_0_6();
  if (*(_BYTE *)(v0 + 136) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_defaultActor_destroy();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SQLDatabase.Transaction.__deallocating_deinit()
{
  SQLDatabase.Transaction.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t SQLDatabase.Transaction.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_24772C91C();
  return v1;
}

uint64_t SQLDatabase.Transaction.isFinalized.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_6();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t SQLDatabase.Transaction.deferringForeignKeys.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  *(_QWORD *)(v0 + 16) = 0xD000000000000019;
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_2576B9560 + dword_2576B9560);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = 0x8000000247736340;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_24770DA3C;
  return v3(v0 + 16);
}

uint64_t sub_24770DA3C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_141();
  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t SQLDatabase.Transaction.deferForeignKeyEnforcement(enabled:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 336) = v1;
  *(_BYTE *)(v2 + 89) = a1;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770DAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = MEMORY[0x24BEE4AF8];
  sub_2476C5B34();
  v3 = v2;
  *(_QWORD *)(v0 + 16) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 24) = 0x8000000247736360;
  *(_BYTE *)(v0 + 88) = 0;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v11;
  }
  v5 = *(_BYTE *)(v0 + 89);
  *(_QWORD *)(v3 + 16) = v4 + 1;
  OUTLINED_FUNCTION_26_6(v3 + 80 * v4);
  *(_QWORD *)(v0 + 280) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v0 + 288) = &protocol witness table for Bool;
  *(_BYTE *)(v0 + 256) = v5;
  sub_2476B3F38(v0 + 256, v0 + 96);
  *(_BYTE *)(v0 + 168) = 1;
  v6 = *(_QWORD *)(v3 + 16);
  if (v6 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v12;
  }
  *(_QWORD *)(v3 + 16) = v6 + 1;
  sub_2476E18A8((const void *)(v0 + 96), (void *)(v3 + 80 * v6 + 32));
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0xE000000000000000;
  *(_BYTE *)(v0 + 248) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v13;
  }
  v7 = *(_QWORD *)(v3 + 16);
  if (v7 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_11();
    v3 = v14;
  }
  *(_QWORD *)(v3 + 16) = v7 + 1;
  OUTLINED_FUNCTION_26_6(v3 + 80 * v7);
  v15 = v3;
  result = sub_247728928();
  v9 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 344) = v9;
  if (v9)
  {
    *(_QWORD *)(v0 + 368) = 0;
    *(_QWORD *)(v0 + 376) = v1;
    *(_QWORD *)(v0 + 352) = v15;
    *(_QWORD *)(v0 + 360) = 0;
    *(_QWORD *)(v0 + 296) = v15;
    *(_QWORD *)(v0 + 304) = 0;
    *(_QWORD *)(v0 + 312) = 0;
    *(_QWORD *)(v0 + 320) = v1;
    *(_BYTE *)(v0 + 328) = v9 != 0;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v10;
    *v10 = v0;
    v10[1] = sub_24770DCF8;
    return SQLDatabase.Transaction.execute(_:)(v0 + 296);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24770DCF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*v1 + 376);
  v4 = *(_QWORD *)(*v1 + 360);
  v3 = *(_QWORD *)(*v1 + 368);
  v5 = *(_QWORD *)(*v1 + 352);
  v6 = *(_QWORD *)(*v1 + 344) != 0;
  v7 = *v1;
  *(_QWORD *)(v7 + 392) = v0;
  swift_task_dealloc();
  sub_2476B3EAC(v5, v4, v3, v2, v6);
  if (v0)
    return swift_task_switch();
  else
    return OUTLINED_FUNCTION_29_0(*(uint64_t (**)(void))(v7 + 8));
}

uint64_t sub_24770DDAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLDatabase.Transaction.Error.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

uint64_t SQLDatabase.Transaction.Error.message.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*SQLDatabase.Transaction.Error.message.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Transaction.save(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770DE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_16_12();
  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_52_7();
    OUTLINED_FUNCTION_13_12();
    sub_24772CAFC();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_7_19(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 128);
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770DEF8()
{
  uint64_t *v0;

  sub_2476F0280(v0[9], v0[6], v0[7]);
  v0[10] = 0;
  swift_release();
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24770DF5C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[7];
  v2 = (_QWORD *)v0[5];
  *v2 = v0[6];
  v2[1] = v1;
  v4 = (uint64_t (*)(void))v0[1];
  sub_24772C91C();
  return OUTLINED_FUNCTION_10(v4);
}

uint64_t sub_24770DF98()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

void sub_24770DFC4()
{
  sub_24772CAFC();
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_61_7();
  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_47_9();
}

uint64_t SQLDatabase.Transaction.release(savepoint:)(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  v2[5] = v1;
  v2[6] = v3;
  v2[7] = v4;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770E048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_16_12();
  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_52_7();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_29_12();
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_7_19(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_44_9();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770E0F0()
{
  uint64_t *v0;
  uint64_t (*v1)(void);

  sub_2476F029C(v0[8], v0[6], v0[7]);
  v0[9] = 0;
  OUTLINED_FUNCTION_26_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_49(v1);
}

uint64_t sub_24770E150()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_2();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLDatabase.Transaction.rollback(to:)(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  v2[5] = v1;
  v2[6] = v3;
  v2[7] = v4;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770E194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_16_12();
  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_52_7();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_29_12();
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_7_19(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_44_9();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770E23C()
{
  uint64_t *v0;
  uint64_t (*v1)(void);

  sub_2476F02CC(v0[8], v0[6], v0[7]);
  v0[9] = 0;
  OUTLINED_FUNCTION_26_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_49(v1);
}

uint64_t SQLDatabase.Transaction.lastInsertedRowID.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24770E2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_16_12();
  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_9();
    sub_24772D144();
    OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_23_12();
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_41_10();
    v2 = OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_10_14(v2, v3);
    return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 128);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_150();
    return OUTLINED_FUNCTION_2_19();
  }
}

uint64_t sub_24770E358()
{
  uint64_t v0;
  uint64_t v1;
  sqlite3_int64 insert_rowid;

  v1 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_16_12();
  insert_rowid = sqlite3_last_insert_rowid(*(sqlite3 **)(v1 + 136));
  OUTLINED_FUNCTION_33();
  return (*(uint64_t (**)(sqlite3_int64))(v0 + 8))(insert_rowid);
}

void SQLDatabase.Transaction.unownedExecutor.getter()
{
  OUTLINED_FUNCTION_92_0();
}

void sub_24770E3AC()
{
  SQLDatabase.Transaction.unownedExecutor.getter();
}

unint64_t sub_24770E3C8()
{
  unint64_t result;

  result = qword_2576B9590;
  if (!qword_2576B9590)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Transaction.Mode, &type metadata for SQLDatabase.Transaction.Mode);
    atomic_store(result, (unint64_t *)&qword_2576B9590);
  }
  return result;
}

unint64_t sub_24770E408()
{
  unint64_t result;

  result = qword_2576B9598;
  if (!qword_2576B9598)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Transaction.State, &type metadata for SQLDatabase.Transaction.State);
    atomic_store(result, (unint64_t *)&qword_2576B9598);
  }
  return result;
}

uint64_t method lookup function for SQLDatabase.Transaction()
{
  return swift_lookUpClassMethod();
}

void type metadata accessor for SQLDatabase.Transaction.Mode()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s11TransactionC4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24770E4AC + 4 * byte_247731895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24770E4E0 + 4 * asc_247731890[v4]))();
}

uint64_t sub_24770E4E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24770E4E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24770E4F0);
  return result;
}

uint64_t sub_24770E4FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24770E504);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24770E508(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24770E510(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.Transaction.State()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLDatabase.Transaction.Error()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLDatabase.Transaction.Savepoint()
{
  OUTLINED_FUNCTION_92_0();
}

void sub_24770E54C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24770E594(a1, MEMORY[0x24BEE1768], (uint64_t)&protocol witness table for Int, a2);
}

void sub_24770E570(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24770E594(a1, MEMORY[0x24BEE13C8], (uint64_t)&protocol witness table for Double, a2);
}

void sub_24770E594(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  char v7;

  sub_24770CAA4(a1, a2, a3);
  if (!v4)
  {
    *(_QWORD *)a4 = v6;
    *(_BYTE *)(a4 + 8) = v7 & 1;
  }
}

void sub_24770E5C4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_24770CAE8(a1);
  if (!v2)
    *a2 = v4;
}

void sub_24770E5EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B95B0)
  {
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B95B0);
  }
}

unint64_t sub_24770E634()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_2576B95B8;
  if (!qword_2576B95B8)
  {
    sub_24770E5EC();
    v2 = &protocol witness table for Double;
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2576B95B8);
  }
  return result;
}

void sub_24770E68C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576B95C0)
  {
    sub_24770E5EC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576B95C0);
  }
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_7_19(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_8_18()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  result = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 152) = result;
  *(_QWORD *)(v0 + 160) = v2;
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 168) = v3;
  *(_QWORD *)(v0 + 176) = v4;
  v5 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 184) = v5;
  v6 = *(_BYTE *)(v0 + 120);
  *(_BYTE *)(v0 + 121) = v6;
  *(_QWORD *)(v0 + 16) = result;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  *(_BYTE *)(v0 + 56) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_14(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_14()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_14()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_16_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_18_14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  return SQLDatabase.Transaction.rollback()();
}

uint64_t OUTLINED_FUNCTION_23_12()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  return swift_task_dealloc();
}

unint64_t OUTLINED_FUNCTION_26_10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 200);
  return sub_2476BAF4C();
}

uint64_t OUTLINED_FUNCTION_29_12()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_33_10(uint64_t a1, uint64_t a2)
{
  return SQLDatabase.transaction(named:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  sqlite3 *v0;
  uint64_t v1;

  return sqlite3_exec(v0, (const char *)(v1 + 32), 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_7()
{
  return SQLDatabase.Transaction.commit()();
}

unint64_t OUTLINED_FUNCTION_41_10()
{
  return sub_24770D7BC();
}

uint64_t OUTLINED_FUNCTION_44_9()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 128);
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_54_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return sub_24772CA78();
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62_7@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t LRUDictionary.Container<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24772C988();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 52) + 8) == 1)
    return sub_24772D618();
  sub_24772D618();
  return sub_24772D60C();
}

uint64_t LRUDictionary.Container<>.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  OUTLINED_FUNCTION_79_0();
  LRUDictionary.Container<>.hash(into:)((uint64_t)v3, a1);
  return sub_24772D624();
}

uint64_t sub_24770E9FC(uint64_t a1)
{
  return LRUDictionary.Container<>.hashValue.getter(a1);
}

uint64_t sub_24770EA04(uint64_t a1, uint64_t a2)
{
  return LRUDictionary.Container<>.hash(into:)(a1, a2);
}

uint64_t sub_24770EA0C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_24772D600();
  LRUDictionary.Container<>.hash(into:)((uint64_t)v4, a2);
  return sub_24772D624();
}

void LRUDictionary<>.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48) == 1)
  {
    sub_24772D618();
    sub_24772D618();
  }
  else
  {
    sub_24772D618();
    sub_24772D60C();
    sub_24772D618();
    sub_24772D60C();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_24770EB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1;
  MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>.Container<A1>, a1, &v3);
  sub_24772C700();
  swift_release();
  swift_release();
  return swift_release();
}

void LRUDictionary<>.hashValue.getter()
{
  OUTLINED_FUNCTION_79_0();
  LRUDictionary<>.hash(into:)();
}

uint64_t sub_24770EBE8()
{
  return sub_24772D624();
}

void sub_24770EC04()
{
  LRUDictionary<>.hashValue.getter();
}

void sub_24770EC0C()
{
  LRUDictionary<>.hash(into:)();
}

void sub_24770EC14()
{
  sub_24772D600();
  LRUDictionary<>.hash(into:)();
}

uint64_t sub_24770EC48()
{
  return sub_24772D624();
}

uint64_t sub_24770EC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>.Container<A1>, a1, &v4);
}

uint64_t sub_24770EC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>, a1, &v4);
}

uint64_t _sSo8NSBundleC15SonicFoundationE13bundleVersionSSvg_0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v1 = objc_msgSend(v0, sel_infoDictionary);
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = sub_24772C8F8();

  result = *MEMORY[0x24BDBD2A0];
  if (*MEMORY[0x24BDBD2A0])
  {
    sub_24772CA18();
    sub_2476C4988(v3, &v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24770EF5C();
    if ((swift_dynamicCast() & 1) != 0)
      return v6;
LABEL_5:
    v5 = *(_QWORD *)a000;
    sub_24772C91C();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t NSBundle.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  _OWORD v17[2];

  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_24772D018();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - v11;
  v13 = objc_msgSend(v4, sel_infoDictionary);
  if (v13)
  {
    v14 = v13;
    v15 = sub_24772C8F8();

    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_2476C4988(v15, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24770EF5C();
    if (swift_dynamicCast())
    {
      OUTLINED_FUNCTION_5_13((uint64_t)v12, 0);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a3, v12, AssociatedTypeWitness);
    }
    OUTLINED_FUNCTION_5_13((uint64_t)v12, 1);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
}

void sub_24770EF5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25444C3B0[0])
  {
    v0 = sub_24772D018();
    if (!v1)
      atomic_store(v0, qword_25444C3B0);
  }
}

uint64_t dispatch thunk of static BundleInfoKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static BundleInfoKey.infoDictionaryKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24770EFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2476B3168();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_24772C91C();
      if (v8 >= v7 >> 1)
        sub_2476B3168();
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24770F090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_2476B2F7C(0, v1, 0);
    v3 = *(unsigned __int8 *)(a1 + 48);
    sub_24772C91C();
    sub_24772CAFC();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24770F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t, char *);
  uint64_t result;
  uint64_t v19;

  v13 = *(_QWORD *)(a8 - 8);
  v14 = MEMORY[0x24BDAC7A8](a5);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v17(v14, v16);
  if (v11)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a11, v16, a8);
  return result;
}

uint64_t SQLVirtualTableIndexResults.init(index:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = 0;
  *(_BYTE *)(a4 + 48) = 1;
  *(_QWORD *)(a4 + 56) = 25;
  *(_BYTE *)(a4 + 64) = 0;
  return result;
}

uint64_t SQLTableFunctionCursorArguments.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*v4 + 8 * a1);
  if (v5)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 + 8) + 16))(v5, a3);
  sub_24772D144();
  swift_bridgeObjectRelease();
  sub_24772D480();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  sub_24772CAFC();
  sub_24772D720();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  sub_2476B3FD0();
  v7 = OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_13_18(v7, v8);
}

uint64_t sub_24770F3CC(sqlite3 *a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t module_v2;
  _QWORD v13[4];

  v2 = v1;
  v4 = sub_24772CA48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[3];
  v13[1] = v1[2];
  v13[2] = v8;
  sub_24772C91C();
  sub_24772CA3C();
  sub_2476B5B30();
  v9 = sub_24772D090();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  if (qword_2576B7B10 != -1)
    swift_once();
  if (v9)
    v10 = (const char *)(v9 + 32);
  else
    v10 = 0;
  OUTLINED_FUNCTION_6_3();
  swift_retain();
  module_v2 = sqlite3_create_module_v2(a1, v10, (const sqlite3_module *)&dword_2576C1628, v2, (void (__cdecl *)(void *))sub_247712194);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return module_v2;
}

SonicFoundation::SQLVirtualTableModuleOption_optional __swiftcall SQLVirtualTableModuleOption.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  SonicFoundation::SQLVirtualTableModuleOption_optional result;

  OUTLINED_FUNCTION_120_0(v1);
  return result;
}

uint64_t SQLVirtualTableModuleOption.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

void sub_24770F540()
{
  sub_24772AF2C();
}

void sub_24770F548()
{
  sub_24772B04C();
}

void sub_24770F550()
{
  sub_24772B4A8();
}

SonicFoundation::SQLVirtualTableModuleOption_optional sub_24770F558(Swift::Int *a1)
{
  return SQLVirtualTableModuleOption.init(rawValue:)(*a1);
}

void sub_24770F560(uint64_t *a1@<X8>)
{
  *a1 = SQLVirtualTableModuleOption.rawValue.getter();
  OUTLINED_FUNCTION_35();
}

void SQLIndexConstraint.columnName.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_17_12();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

double (*SQLIndexConstraint.columnName.modify())(_QWORD)
{
  return nullsub_1;
}

SonicFoundation::SQLIndexConstraint::Operator_optional __swiftcall SQLIndexConstraint.Operator.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  SonicFoundation::SQLIndexConstraint::Operator_optional result;

  OUTLINED_FUNCTION_120_0(v1);
  return result;
}

uint64_t SQLIndexConstraint.Operator.rawValue.getter()
{
  char *v0;

  return qword_247731F78[*v0];
}

BOOL sub_24770F694(char *a1, char *a2)
{
  return sub_2476E5904(*a1, *a2);
}

void sub_24770F6A0()
{
  sub_24772AF5C();
}

void sub_24770F6A8()
{
  sub_24772B070();
}

void sub_24770F6B0()
{
  sub_24772B470();
}

SonicFoundation::SQLIndexConstraint::Operator_optional sub_24770F6B8(Swift::Int *a1)
{
  return SQLIndexConstraint.Operator.init(rawValue:)(*a1);
}

void sub_24770F6C0(uint64_t *a1@<X8>)
{
  *a1 = SQLIndexConstraint.Operator.rawValue.getter();
  OUTLINED_FUNCTION_35();
}

void SQLIndexConstraint.operator.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLIndexConstraint.operator.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

double (*SQLIndexConstraint.operator.modify())(_QWORD)
{
  return nullsub_1;
}

sqlite3_value *SQLIndexConstraint.decodeValue<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unsigned int *v8;
  sqlite3_index_info::sqlite3_index_constraint *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  sqlite3_uint64 v13;
  __int128 v14;
  int v16;
  sqlite3_value *result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  sqlite3_index_info v21;
  char v22;
  sqlite3_value *ppVal[2];

  ppVal[1] = *(sqlite3_value **)MEMORY[0x24BDAC8D0];
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned int **)(v3 + 32);
  ppVal[0] = 0;
  if (!v8)
LABEL_15:
    __break(1u);
  v9 = (sqlite3_index_info::sqlite3_index_constraint *)*((_QWORD *)v8 + 1);
  v10 = v8[4];
  v11 = v8[10];
  v12 = v8[20];
  v13 = *((_QWORD *)v8 + 11);
  *(_QWORD *)&v21.nConstraint = *v8;
  v21.aConstraint = v9;
  *(_QWORD *)&v21.nOrderBy = v10;
  *(_OWORD *)&v21.aOrderBy = *(_OWORD *)(v8 + 6);
  *(_QWORD *)&v21.idxNum = v11;
  v14 = *((_OWORD *)v8 + 4);
  *(_OWORD *)&v21.idxStr = *((_OWORD *)v8 + 3);
  *(_OWORD *)&v21.estimatedCost = v14;
  *(_QWORD *)&v21.idxFlags = v12;
  v21.colUsed = v13;
  v22 = 0;
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = sqlite3_vtab_rhs_value(&v21, v7, ppVal);
  if (v16 == 12)
  {
    v18 = 1;
    return (sqlite3_value *)__swift_storeEnumTagSinglePayload(a3, v18, 1, a1);
  }
  if (v16)
  {
    sub_24772D144();
    sub_24772CAFC();
    sub_24772D480();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    sub_2476B3FD0();
    v19 = OUTLINED_FUNCTION_36();
    return (sqlite3_value *)OUTLINED_FUNCTION_13_18(v19, v20);
  }
  else
  {
    result = ppVal[0];
    if (ppVal[0])
    {
      result = (sqlite3_value *)(*(uint64_t (**)(sqlite3_value *, uint64_t))(*(_QWORD *)(a2 + 8) + 16))(ppVal[0], a1);
      if (!v4)
      {
        v18 = 0;
        return (sqlite3_value *)__swift_storeEnumTagSinglePayload(a3, v18, 1, a1);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t SQLIndexConstraint.isUsable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SQLIndexConstraint.isUsable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

double (*SQLIndexConstraint.isUsable.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLIndexOrderingTerm.columnName.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_17_12();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

double (*SQLIndexOrderingTerm.columnName.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLIndexOrderingTerm.isDescending.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SQLIndexOrderingTerm.isDescending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

double (*SQLIndexOrderingTerm.isDescending.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.constraints.getter()
{
  return sub_24772C91C();
}

void SQLVirtualTableIndexQuery.constraints.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_35();
}

double (*SQLVirtualTableIndexQuery.constraints.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.orderingTerms.getter()
{
  return sub_24772C91C();
}

void SQLVirtualTableIndexQuery.orderingTerms.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_17_12();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_35();
}

double (*SQLVirtualTableIndexQuery.orderingTerms.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.usedColumns.getter()
{
  return sub_24772C91C();
}

void SQLVirtualTableIndexQuery.usedColumns.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_35();
}

double (*SQLVirtualTableIndexQuery.usedColumns.modify())(_QWORD)
{
  return nullsub_1;
}

void sub_24770FA24(uint64_t a1@<X0>, int *a2@<X1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = *a2;
  v5 = *((_QWORD *)a2 + 1);
  v48 = a2[4];
  v6 = (int *)*((_QWORD *)a2 + 3);
  v52 = *((_QWORD *)a2 + 11);
  sub_2476C61C8();
  v57 = v7;
  v55 = a1;
  if (v5 && v4)
  {
    v8 = v7;
    v9 = 0;
    v51 = (unsigned __int8 *)(v5 + 12 * v4);
    v49 = a1 + 32;
    v10 = (unsigned __int8 *)(v5 + 4);
    do
    {
      v12 = v10 - 4;
      v11 = *((int *)v10 - 1);
      if (v10[1])
      {
        SQLIndexConstraint.Operator.init(rawValue:)(*v10);
        if (v56 == 17)
        {
          swift_bridgeObjectRelease();
          sub_24772D144();
          swift_bridgeObjectRelease();
          sub_24772D480();
          sub_24772CAFC();
          swift_bridgeObjectRelease();
          sub_2476B3FD0();
          swift_allocError();
          *v46 = 0xD000000000000024;
          v46[1] = 0x8000000247736610;
          swift_willThrow();
          swift_bridgeObjectRelease();
          return;
        }
        if ((v11 & 0x80000000) != 0)
          goto LABEL_40;
        if (*(_QWORD *)(a1 + 16) <= v11)
          goto LABEL_41;
        v13 = (uint64_t *)(v49 + 16 * v11);
        v14 = v13[1];
        v53 = *v13;
        v16 = *(_QWORD *)(v8 + 16);
        v15 = *(_QWORD *)(v8 + 24);
        sub_24772C91C();
        if (v16 >= v15 >> 1)
        {
          sub_2476C61C8();
          v8 = v18;
        }
        *(_QWORD *)(v8 + 16) = v16 + 1;
        v17 = v8 + 40 * v16;
        a1 = v55;
        *(_QWORD *)(v17 + 32) = v53;
        *(_QWORD *)(v17 + 40) = v14;
        *(_BYTE *)(v17 + 48) = v56;
        *(_BYTE *)(v17 + 49) = 1;
        *(_QWORD *)(v17 + 56) = v9;
        *(_QWORD *)(v17 + 64) = a2;
        v57 = v8;
      }
      v10 += 12;
      ++v9;
    }
    while (v12 + 12 != v51);
  }
  v19 = MEMORY[0x24BEE4AF8];
  sub_2476C611C();
  v21 = v20;
  v58 = v20;
  if (!v6 || !(_DWORD)v48)
  {
LABEL_21:
    v59 = v19;
    v33 = *(_QWORD *)(a1 + 16);
    if (!v33)
    {
      swift_bridgeObjectRelease();
      v36 = MEMORY[0x24BEE4AF8];
LABEL_35:
      *a3 = v57;
      a3[1] = v21;
      a3[2] = v36;
      return;
    }
    v34 = 0;
    v54 = a1 + 32;
    v35 = (uint64_t *)(a1 + 40);
    v36 = MEMORY[0x24BEE4AF8];
    while (v34 <= 0x3F)
    {
      if (((v52 >> v34) & 1) != 0)
        goto LABEL_27;
LABEL_32:
      ++v34;
      v35 += 2;
      if (v33 == v34)
      {
        swift_bridgeObjectRelease();
        v21 = v58;
        goto LABEL_35;
      }
    }
    v37 = *(_QWORD *)(a1 + 16);
    if (v37 < 0x3F)
      goto LABEL_39;
    v38 = (2 * v37) | 1;
    v39 = sub_24772C91C();
    sub_2476C9B44(v39, v54, 63, v38);
    v36 = v59;
LABEL_27:
    v40 = *(v35 - 1);
    v41 = *v35;
    sub_24772C91C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2476C5EEC();
      v36 = v44;
    }
    v42 = *(_QWORD *)(v36 + 16);
    if (v42 >= *(_QWORD *)(v36 + 24) >> 1)
    {
      sub_2476C5EEC();
      v36 = v45;
    }
    *(_QWORD *)(v36 + 16) = v42 + 1;
    v43 = v36 + 16 * v42;
    *(_QWORD *)(v43 + 32) = v40;
    *(_QWORD *)(v43 + 40) = v41;
    v59 = v36;
    a1 = v55;
    goto LABEL_32;
  }
  v22 = &v6[2 * v48];
  v23 = a1 + 32;
  while (1)
  {
    v24 = *v6;
    if ((v24 & 0x80000000) != 0)
      break;
    if (*(_QWORD *)(a1 + 16) <= v24)
      goto LABEL_38;
    v25 = *((unsigned __int8 *)v6 + 4);
    v26 = (uint64_t *)(v23 + 16 * v24);
    v27 = *v26;
    v28 = v26[1];
    v30 = *(_QWORD *)(v21 + 16);
    v29 = *(_QWORD *)(v21 + 24);
    sub_24772C91C();
    if (v30 >= v29 >> 1)
    {
      sub_2476C611C();
      v21 = v32;
    }
    *(_QWORD *)(v21 + 16) = v30 + 1;
    v31 = v21 + 24 * v30;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = v28;
    *(_BYTE *)(v31 + 48) = v25 != 0;
    v6 += 2;
    a1 = v55;
    if (v6 == v22)
    {
      v58 = v21;
      v19 = MEMORY[0x24BEE4AF8];
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t SQLVirtualTableIndexResults.index.getter()
{
  unsigned int *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

void SQLVirtualTableIndexResults.index.setter(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_DWORD *)v3 = a1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 8) = a2;
  *(_QWORD *)(v3 + 16) = a3;
  OUTLINED_FUNCTION_44();
}

double (*SQLVirtualTableIndexResults.index.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.constraint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 17);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  return sub_24772C91C();
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.constraint.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = *((_BYTE *)a1 + 17);
  v6 = a1[3];
  v7 = a1[4];
  result = OUTLINED_FUNCTION_17_12();
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 17) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  return result;
}

double (*SQLVirtualTableIndexResults.ConstraintUsage.constraint.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.cursorArguments.getter()
{
  return sub_24772C91C();
}

void SQLVirtualTableIndexResults.cursorArguments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_35();
}

double (*SQLVirtualTableIndexResults.cursorArguments.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.isAlreadyOrdered.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SQLVirtualTableIndexResults.isAlreadyOrdered.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.isAlreadyOrdered.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.estimatedCost.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t SQLVirtualTableIndexResults.estimatedCost.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

double (*SQLVirtualTableIndexResults.estimatedCost.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.estimatedRows.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t SQLVirtualTableIndexResults.estimatedRows.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.estimatedRows.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.hasAtMostOneRow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t SQLVirtualTableIndexResults.hasAtMostOneRow.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.hasAtMostOneRow.modify())(_QWORD)
{
  return nullsub_1;
}

char *sub_247710050(char *result)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t inited;
  va_list v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  _DWORD *v18;
  BOOL *v19;

  v2 = result;
  v4 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(unsigned __int8 *)(v1 + 64);
  *((_DWORD *)result + 10) = *(_DWORD *)v1;
  if (v3)
  {
    sub_2476F8D74();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24772E730;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_2477138A4();
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v3;
    sub_24772C91C();
    v11 = (va_list)sub_24772D72C();
    swift_setDeallocating();
    sub_2477127D8();
    result = sqlite3_vmprintf("%s", v11);
    *((_QWORD *)v2 + 6) = result;
    *((_DWORD *)v2 + 14) = 1;
  }
  v12 = *(_QWORD *)(v5 + 16);
  if (v12)
  {
    v13 = *((_QWORD *)v2 + 4);
    if (v13)
    {
      v14 = 0;
      v15 = (_BYTE *)(v5 + 72);
      v16 = v12 - 1;
      while (v14 != 0x7FFFFFFF)
      {
        v17 = *v15;
        v18 = (_DWORD *)(v13 + 8 * *((_QWORD *)v15 - 2));
        *v18 = v14 + 1;
        v19 = (BOOL *)(v18 + 1);
        *v19 = (v17 & 1) != 0;
        if (v16 == v14)
          goto LABEL_12;
        v15 += 48;
        ++v14;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    if ((v7 & 1) == 0)
      *((_QWORD *)v2 + 8) = v6;
    *((_QWORD *)v2 + 9) = v8;
    if (v9)
      *((_DWORD *)v2 + 20) = 1;
  }
  return result;
}

uint64_t sub_2477101B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = v1 + *(int *)(a1 + 36);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = sub_24772D018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  result = swift_release();
  *(_QWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_24771021C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a8 = a1;
  *(_DWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  v9 = a8 + *(int *)(_s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a6, a7, a4) + 36);
  v10 = sub_24772D018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a5, v10);
}

uint64_t sub_24771028C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v1[5] = 0;
  v3 = (uint64_t)v1 + *(int *)(a1 + 44);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_24772D018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, AssociatedTypeWitness);
  v1[4] = 0;
  result = swift_release();
  v1[1] = 0;
  return result;
}

uint64_t sub_247710328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  v11 = a9 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a8, a10, a4) + 44);
  swift_getAssociatedTypeWitness();
  v12 = sub_24772D018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a7, v12);
}

double sub_2477103C4()
{
  double result;

  dword_2576C1628 = 4;
  qword_2576C1630 = 0;
  unk_2576C1638 = sub_2477105C8;
  qword_2576C1640 = (uint64_t)sub_24771063C;
  unk_2576C1648 = sub_2477106A0;
  qword_2576C1650 = 0;
  unk_2576C1658 = sub_247710714;
  qword_2576C1660 = (uint64_t)sub_247710778;
  unk_2576C1668 = sub_247710844;
  qword_2576C1670 = (uint64_t)sub_2477108A4;
  unk_2576C1678 = sub_2477108B8;
  qword_2576C1680 = (uint64_t)sub_24771093C;
  unk_2576C1688 = sub_247710974;
  result = 0.0;
  unk_2576C1690 = 0u;
  unk_2576C16A0 = 0u;
  unk_2576C16B0 = 0u;
  unk_2576C16C0 = 0u;
  unk_2576C16D0 = 0u;
  qword_2576C16E0 = 0;
  return result;
}

uint64_t sub_24771045C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  if (!a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 48);
  result = swift_retain();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a5)
  {
    swift_retain();
    v8 = v7(v6, a5);
    sub_2476BF020((uint64_t)v7);
    swift_release();
    return v8;
  }
LABEL_9:
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_2477105CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  v3 = *(_QWORD *)(result + 24);
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 80);
    swift_retain();
    v6 = v5(v2, a2);
    swift_release();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_247710640(_QWORD *result)
{
  void *v1;
  uint64_t v2;
  void (*v3)(void *);

  if (result)
  {
    v1 = result;
    v2 = result[3];
    if (v2)
    {
      v3 = *(void (**)(void *))(v2 + 64);
      swift_retain();
      v3(v1);
      swift_release();
      sqlite3_free(v1);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2477106A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  v3 = *(_QWORD *)(result + 24);
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96);
    swift_retain();
    v6 = v5(v2, a2);
    swift_release();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_247710718(_QWORD *result)
{
  void *v1;
  uint64_t v2;
  void (*v3)(void *);

  if (result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
    {
      v3 = *(void (**)(void *))(v2 + 112);
      swift_retain();
      v3(v1);
      swift_release();
      sqlite3_free(v1);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24771077C(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v14;

  v8 = result;
  if (a3)
  {
    result = sub_24772CB08();
    v9 = result;
    v11 = v10;
    if (v8)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = 0;
  v11 = 0;
  if (!result)
    goto LABEL_6;
LABEL_3:
  v12 = *(_QWORD *)(v8 + 8);
  if (v12)
  {
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v12 + 128);
    sub_24772C91C();
    swift_retain();
    v14 = v13(v8, a2, v9, v11, a5, a4);
    swift_bridgeObjectRelease_n();
    swift_release();
    return v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_247710848(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  if (result)
  {
    v1 = result;
    v2 = *(_QWORD *)(result + 8);
    if (v2)
    {
      v3 = *(uint64_t (**)(uint64_t))(v2 + 144);
      swift_retain();
      v4 = v3(v1);
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2477108A8(uint64_t result)
{
  if (result)
    return *(unsigned __int8 *)(result + 24);
  __break(1u);
  return result;
}

uint64_t sub_2477108BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = *(_QWORD *)(result + 8);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 160);
    swift_retain();
    v8 = v7(v3, a2, a3);
    swift_release();
    return v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_247710940(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = result;
    if ((*(_BYTE *)(result + 24) & 1) != 0)
      return 12;
    if (a2)
    {
      result = 0;
      *a2 = *(_QWORD *)(v2 + 16);
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247710978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_2477109E4(a1, a2, a3, a4, a5);
  return v10;
}

void sub_2477109E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5[2] = a2;
  v5[3] = a3;
  v5[4] = a1;
  v5[5] = a5;
  v8 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  v5[8] = sub_2477138E4;
  v5[9] = v8;
  v9 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  v5[10] = sub_247713918;
  v5[11] = v9;
  v10 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a5;
  v5[12] = sub_247713924;
  v5[13] = v10;
  v11 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v5[14] = sub_247713930;
  v5[15] = v11;
  v12 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v5[16] = sub_247713964;
  v5[17] = v12;
  v13 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a5;
  v5[18] = sub_247713970;
  v5[19] = v13;
  v14 = OUTLINED_FUNCTION_2_20();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  v5[20] = sub_24771397C;
  v5[21] = v14;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = v5;
  v5[6] = sub_2477139A8;
  v5[7] = v15;
  OUTLINED_FUNCTION_39_0();
  sub_2476BF020(0);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_247710B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a2, a3, a4);
  return sub_2477101B0(v4);
}

uint64_t sub_247710B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v8 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a3, a4, a4);
  v12 = a3;
  v13 = a4;
  v14 = a2;
  sub_24770F204(v8, 1, (uint64_t)sub_247713B18, (uint64_t)v11, a1, (uint64_t)&_s13TableFunctionC13_VirtualTableVN, v8, MEMORY[0x24BEE4078], MEMORY[0x24BEE3F88], MEMORY[0x24BEE40A8], v10);
  return v15;
}

uint64_t sub_247710BD8@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X8>)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t inited;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  va_list v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;

  v38 = a5;
  v10 = sub_24772D018();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v33 - v12;
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v14 = sub_24770EFBC(v13);
  swift_bridgeObjectRelease();
  sub_24770FA24(v14, a2, &v40);
  v37 = a1;
  if (v5)
  {
    sub_2476F8D74();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24772E730;
    v40 = (uint64_t)v5;
    v22 = v5;
    sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
    v23 = sub_24772CA54();
    v25 = v24;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_2477138A4();
    *(_QWORD *)(inited + 32) = v23;
    *(_QWORD *)(inited + 40) = v25;
    v26 = (va_list)sub_24772D72C();
    swift_setDeallocating();
    sub_2477127D8();
    v27 = sqlite3_vmprintf("%s", v26);
    *(_QWORD *)(v37 + 16) = v27;
    result = MEMORY[0x2495821C4](v5);
    v28 = 1;
LABEL_5:
    *v38 = v28;
    return result;
  }
  v34 = (char *)a2;
  v16 = v40;
  v35 = v41;
  v17 = v42;
  v18 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a3, a4, v15);
  v19 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v36, a1 + *(int *)(v18 + 36), v10);
  result = __swift_getEnumTagSinglePayload(v19, 1, a3);
  if ((_DWORD)result != 1)
  {
    v39[0] = v16;
    v39[1] = v35;
    v39[2] = v17;
    (*(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t))(a4 + 48))(&v40, v39, a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(v19, a3);
    v29 = v43;
    if (v43)
    {
      v36 = v46;
      v37 = v45;
      v31 = v41;
      v30 = v42;
      v32 = v40;
      LOBYTE(v44) = v44 & 1;
      LOBYTE(v45) = v45 & 1;
      v47 &= 1u;
      sub_247710050(v34);
      result = sub_247713B38(v32, v31, v30, v29);
      v28 = 0;
    }
    else
    {
      v28 = 19;
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_247710F34(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sqlite3_uint64 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[8];

  v8 = *(_QWORD *)(*(_QWORD *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a3, a4, a4) - 8) + 64);
  if ((v8 & 0x8000000000000000) != 0)
  {
    result = sub_24772D348();
    __break(1u);
  }
  else
  {
    v9 = sqlite3_malloc64(v8);
    if (v9)
    {
      v11 = v9;
      v12 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a3, a4, v10);
      v13 = MEMORY[0x24BDAC7A8](v12);
      v16[2] = a3;
      v16[3] = a4;
      v16[4] = v11;
      v16[5] = a1;
      sub_24770F204(v13, 1, (uint64_t)sub_247713AD8, (uint64_t)v16, a1, (uint64_t)&_s13TableFunctionC13_VirtualTableVN, v13, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v15);
      result = 0;
      *a2 = v11;
    }
    else
    {
      return 7;
    }
  }
  return result;
}

uint64_t sub_247711080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a4, a5, a4);
  v14 = a4;
  v15 = a5;
  v16 = a3;
  v17 = a1;
  return sub_2477112B0(v10, 1, (uint64_t)sub_247713AF8, (uint64_t)v13, a2, v10, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v12);
}

uint64_t sub_247711130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;

  v6 = v5;
  v26 = a3;
  v27 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_24772D018();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - v11;
  v14 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a4, a5, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - v16;
  v18 = *(_QWORD *)(a2 + 24);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  v20 = v19(a4, a5);
  v21 = v6;
  v22 = sub_24770EFBC(v20);
  v24 = v21;
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, AssociatedTypeWitness);
  sub_247710328(0, v18, 0, 1, v26, v22, (uint64_t)v12, a4, (uint64_t)v17, a5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 40))(v27, v17, v14);
}

uint64_t sub_2477112B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, char *);
  uint64_t result;
  uint64_t v18;

  v12 = *(_QWORD *)(a7 - 8);
  v13 = MEMORY[0x24BDAC7A8](a5);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v16(v13, v15);
  if (v10)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a10, v15, a7);
  return result;
}

uint64_t sub_247711330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v11 = a4(0);
  v15 = a2;
  v16 = a3;
  return sub_24770F204(v11, 1, a5, (uint64_t)v14, a1, a6, v11, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v13);
}

uint64_t sub_2477113C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a2, a3, a4);
  return sub_24771028C(v4);
}

uint64_t sub_2477113F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;

  v16 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a7, a8, a4);
  v20 = a7;
  v21 = a8;
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  sub_24770F204(v16, 1, (uint64_t)sub_247713A88, (uint64_t)v19, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v16, MEMORY[0x24BEE4078], MEMORY[0x24BEE3F88], MEMORY[0x24BEE40A8], v18);
  return v27;
}

uint64_t sub_2477114B4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  va_list v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  _QWORD v48[2];
  uint64_t v49;

  v46 = a4;
  v42 = a9;
  v43 = a6;
  v45 = a3;
  v44 = a2;
  v13 = sub_24772D018();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v21 = (char *)&v41 - v20;
  v49 = a1;
  v22 = *(_QWORD *)(a1 + 32);
  if (!v22)
  {
    __break(1u);
    goto LABEL_10;
  }
  v23 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a7, a8, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22 + *(int *)(v23 + 36), v13);
  result = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, a7);
  if ((_DWORD)result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v48[0] = a5;
  v48[1] = v43;
  v24 = v47;
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a8 + 56))(v44, v45, v46, v48, a7, a8);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(a7 - 8) + 8))(v16, a7);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v34 = v49;
    *(_QWORD *)(v49 + 16) = v26;
    *(_BYTE *)(v34 + 24) = v35 & 1;
    v37 = v34 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a7, a8, v36) + 44);
    v38 = sub_24772D018();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
    v39 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v37, v21, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload(v37, 0, 1, AssociatedTypeWitness);
    result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v21, AssociatedTypeWitness);
    v40 = 0;
LABEL_8:
    *v42 = v40;
    return result;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(a7 - 8) + 8))(v16, a7);
  v27 = *(_QWORD *)(v49 + 32);
  if (v27)
  {
    sub_2476F8D74();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24772E730;
    v48[0] = v24;
    v29 = v24;
    sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
    v30 = sub_24772CA54();
    v32 = v31;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_2477138A4();
    *(_QWORD *)(inited + 32) = v30;
    *(_QWORD *)(inited + 40) = v32;
    v33 = (va_list)sub_24772D72C();
    swift_setDeallocating();
    sub_2477127D8();
    *(_QWORD *)(v27 + 16) = sqlite3_vmprintf("%s", v33);
    result = MEMORY[0x2495821C4](v24);
    v40 = 1;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2477117FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v7 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a2, a3, a4);
  v11 = a2;
  v12 = a3;
  sub_24770F204(v7, 1, (uint64_t)sub_247713A6C, (uint64_t)v10, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v7, MEMORY[0x24BEE4078], MEMORY[0x24BEE3F88], MEMORY[0x24BEE40A8], v9);
  return v13;
}

uint64_t sub_247711888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  char v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list v19;
  int v20;

  v8 = a1 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a2, a3, a4) + 44);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = __swift_getEnumTagSinglePayload(v8, 1, AssociatedTypeWitness);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    if (!v5)
    {
      v20 = 0;
      *(_QWORD *)(a1 + 16) = result;
      *(_BYTE *)(a1 + 24) = v12 & 1;
      goto LABEL_6;
    }
    v13 = *(_QWORD *)(a1 + 32);
    if (v13)
    {
      sub_2476F8D74();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24772E730;
      v15 = v5;
      sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
      v16 = sub_24772CA54();
      v18 = v17;
      *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 64) = sub_2477138A4();
      *(_QWORD *)(inited + 32) = v16;
      *(_QWORD *)(inited + 40) = v18;
      v19 = (va_list)sub_24772D72C();
      swift_setDeallocating();
      sub_2477127D8();
      *(_QWORD *)(v13 + 16) = sqlite3_vmprintf("%s", v19);
      result = MEMORY[0x2495821C4](v5);
      v20 = 1;
LABEL_6:
      *a5 = v20;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_247711A38(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v10 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a4, a5, a4);
  v14 = a4;
  v15 = a5;
  v16 = a3;
  v17 = a2;
  sub_24770F204(v10, 1, (uint64_t)sub_247713A48, (uint64_t)v13, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v10, MEMORY[0x24BEE4078], MEMORY[0x24BEE3F88], MEMORY[0x24BEE40A8], v12);
  return v18;
}

uint64_t sub_247711AE4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  void (*v24)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  va_list v34;
  uint64_t v35;
  _DWORD *v36;
  _QWORD v37[2];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v35 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_24772D018();
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v35 - v16;
  v18 = *(_QWORD *)(a1 + 40);
  if (!v18)
    goto LABEL_12;
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)(v18 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v36 = a6;
  v19 = v18 + 16 * a2;
  v20 = *(_QWORD *)(v19 + 32);
  v21 = *(_QWORD *)(v19 + 40);
  v22 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(0, a4, a5, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, a1 + *(int *)(v22 + 44), v12);
  result = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, AssociatedTypeWitness);
  if ((_DWORD)result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v37[0] = v20;
  v37[1] = v21;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  sub_24772C91C();
  v25 = v41;
  v24(v38, v37, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v17, AssociatedTypeWitness);
    v26 = v39;
    v27 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v35, v26, v27);
    *v36 = 0;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v17, AssociatedTypeWitness);
  v28 = *(_QWORD *)(a1 + 32);
  if (v28)
  {
    sub_2476F8D74();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24772E730;
    v38[0] = v25;
    v30 = v25;
    sub_2476B443C(0, (unint64_t *)&qword_25444C3A8);
    v31 = sub_24772CA54();
    v33 = v32;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_2477138A4();
    *(_QWORD *)(inited + 32) = v31;
    *(_QWORD *)(inited + 40) = v33;
    v34 = (va_list)sub_24772D72C();
    swift_setDeallocating();
    sub_2477127D8();
    *(_QWORD *)(v28 + 16) = sqlite3_vmprintf("%s", v34);
    result = MEMORY[0x2495821C4](v25);
    *v36 = 1;
    return result;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_247711DB8(sqlite3 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  sqlite3_uint64 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  _QWORD v26[7];
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v11 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a4, a5, a4);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  if ((v12 & 0x8000000000000000) != 0)
  {
    result = sub_24772D348();
    __break(1u);
  }
  else
  {
    v13 = sqlite3_malloc64(v12);
    if (!v13)
      return 7;
    v14 = (uint64_t)v13;
    v27 = a2;
    v28 = v5;
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (unsigned __int8 *)(v15 + 32);
      do
      {
        v18 = *v17++;
        sqlite3_vtab_config_1(a1, v18 + 1);
        --v16;
      }
      while (v16);
    }
    v19 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v19);
    v26[2] = a4;
    v26[3] = a5;
    v26[4] = a3;
    sub_2477112B0(v11, 1, (uint64_t)sub_2477139D4, (uint64_t)v26, v14, v11, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v25);
    *v27 = v14;
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_24772D144();
    swift_bridgeObjectRelease();
    v30 = 0xD00000000000001CLL;
    v31 = 0x80000002477365E0;
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
    v21 = sub_24770F090(v20);
    swift_bridgeObjectRelease();
    v29 = v21;
    sub_2477139F4();
    sub_2476C5830();
    sub_24772C9AC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    v22 = sub_24772CA78();
    swift_bridgeObjectRelease();
    v23 = sqlite3_declare_vtab(a1, (const char *)(v22 + 32));
    swift_release();
    return v23;
  }
  return result;
}

uint64_t sub_247712068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD v18[2];

  v8 = sub_24772D018();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - v9;
  v12 = _s13TableFunctionC13_VirtualTableV8FunctionVMa(0, a3, a4, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - v14;
  v16 = *(void (**)(uint64_t, uint64_t))(a4 + 40);
  swift_retain();
  v16(a3, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, a3);
  sub_24771021C(0, 0, 0, a2, (uint64_t)v10, a3, a4, (uint64_t)v15);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 40))(a1, v15, v12);
}

uint64_t sub_247712198()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2476BF020(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2477121F4()
{
  sub_247712198();
  return swift_deallocClassInstance();
}

uint64_t SQLDatabase.registerFunction<A>(_:named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return OUTLINED_FUNCTION_3_20();
}

uint64_t sub_24771222C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0[10];
  v2 = v0[6];
  v3 = v0[7];
  v4 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v0[11] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v5 = (uint64_t *)(v1 + v4);
  OUTLINED_FUNCTION_6_3();
  v6 = *v5;
  OUTLINED_FUNCTION_2_2();
  sub_2476C4A28(v2, v3, v6);
  v8 = v7;
  OUTLINED_FUNCTION_40_3();
  if (v8)
  {
    v9 = v0[5];
    swift_endAccess();
    v10 = *(_QWORD *)(v8 + 32);
    swift_release();
    if (v10 == v9)
    {
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return v11();
    }
  }
  else
  {
    swift_endAccess();
  }
  v13 = v0[9];
  v14 = v0[10];
  v16 = v0[7];
  v15 = v0[8];
  v18 = v0[5];
  v17 = v0[6];
  _s13TableFunctionCMa();
  OUTLINED_FUNCTION_2_2();
  result = sub_247710978(v18, v17, v16, v15, v13);
  v0[12] = result;
  v19 = *(_QWORD *)(v14 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  v0[13] = v19;
  if (v19)
  {
    swift_retain();
    OUTLINED_FUNCTION_39_0();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247712370()
{
  uint64_t *v0;

  sub_2476F0498(v0[13], v0[12]);
  v0[14] = 0;
  swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_2477123D0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_6_3();
  sub_24772C91C();
  swift_retain();
  sub_247706BB8();
  OUTLINED_FUNCTION_16_13();
  swift_bridgeObjectRelease();
  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v0();
}

uint64_t _s13TableFunctionCMa()
{
  return objc_opt_self();
}

uint64_t SQLDatabase.unregisterFunction(named:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return OUTLINED_FUNCTION_3_20();
}

uint64_t sub_247712494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v1 = v0[7];
  v2 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v0[8] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v3 = v1 + v2;
  OUTLINED_FUNCTION_6_3();
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    OUTLINED_FUNCTION_16_13();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_2_2();
  sub_247712890();
  v5 = v4;
  OUTLINED_FUNCTION_16_13();
  result = OUTLINED_FUNCTION_40_3();
  if ((v5 & 1) == 0)
  {
LABEL_6:
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_7_20(v10);
  }
  v7 = v0[7];
  v8 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  v0[9] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  v9 = *(_QWORD *)(v7 + v8);
  v0[10] = v9;
  if (v9)
  {
    OUTLINED_FUNCTION_39_0();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247712564()
{
  uint64_t v0;

  sub_2476C0718();
  *(_QWORD *)(v0 + 88) = 0;
  swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_2477125C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0[7] + v0[9]);
  v0[12] = v1;
  if (v1)
  {
    sub_24772C91C();
    OUTLINED_FUNCTION_39_0();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24771261C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[11];
  sub_2476F059C(v0[12], v0[5], v0[6]);
  v0[13] = v1;
  if (!v1)
    swift_release();
  return OUTLINED_FUNCTION_1_16();
}

uint64_t sub_24771267C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_2_2();
  sub_2477068BC(v1, v2);
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_40_3();
  swift_release();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_7_20(v3);
}

uint64_t sub_2477126E8(sqlite3 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t module_v2;
  _QWORD v14[2];

  v6 = sub_24772CA48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a2;
  v14[1] = a3;
  sub_24772CA3C();
  sub_2476B5B30();
  v10 = sub_24772D090();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
    v11 = (const char *)(v10 + 32);
  else
    v11 = 0;
  module_v2 = sqlite3_create_module_v2(a1, v11, 0, 0, 0);
  swift_bridgeObjectRelease();
  return module_v2;
}

uint64_t sub_2477127D8()
{
  sub_2476B443C(0, (unint64_t *)&qword_2576B8F70);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

void sub_247712834(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((_DWORD)isUniquelyReferenced_nonNull_native && a1 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_44();
  }
  else
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    sub_2476B2F7C(isUniquelyReferenced_nonNull_native, v5, 0);
  }
}

unint64_t sub_247712890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_16();
  OUTLINED_FUNCTION_18_15();
  v2 = sub_24772D624();
  return sub_247712920(v1, v0, v2);
}

unint64_t sub_2477128D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_16();
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_40_3();
  v2 = sub_24772D624();
  return sub_247712920(v1, v0, v2);
}

unint64_t sub_247712920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24772D4F8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24772D4F8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_247712A04()
{
  unint64_t result;

  result = qword_2576B9610;
  if (!qword_2576B9610)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLVirtualTableModuleOption, &type metadata for SQLVirtualTableModuleOption);
    atomic_store(result, (unint64_t *)&qword_2576B9610);
  }
  return result;
}

unint64_t sub_247712A44()
{
  unint64_t result;

  result = qword_2576B9618;
  if (!qword_2576B9618)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLIndexConstraint.Operator, &type metadata for SQLIndexConstraint.Operator);
    atomic_store(result, (unint64_t *)&qword_2576B9618);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SQLVirtualTableModuleOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_247712ACC + 4 * byte_247731B26[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_247712B00 + 4 * byte_247731B21[v4]))();
}

uint64_t sub_247712B00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247712B08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247712B10);
  return result;
}

uint64_t sub_247712B1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247712B24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_247712B28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247712B30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLVirtualTableModuleOption()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t dispatch thunk of static SQLTableFunction.columns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static SQLTableFunction.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SQLTableFunction.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SQLTableFunction.index(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SQLTableFunction.makeCursor(index:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t getEnumTagSinglePayload for SQLTableFunctionCursorArguments(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SQLTableFunctionCursorArguments(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for SQLTableFunctionCursorArguments()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t dispatch thunk of SQLTableFunctionCursor.next()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SQLTableFunctionCursor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t initializeWithCopy for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLIndexConstraint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLIndexConstraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLIndexConstraint()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t getEnumTagSinglePayload for SQLIndexConstraint.Operator(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 16) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v5 = v6 - 17;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLIndexConstraint.Operator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_247712E90 + 4 * byte_247731B30[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_247712EC4 + 4 * byte_247731B2B[v4]))();
}

uint64_t sub_247712EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247712ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247712ED4);
  return result;
}

uint64_t sub_247712EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247712EE8);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_247712EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247712EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLIndexConstraint.Operator()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t sub_247712F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for SQLIndexOrderingTerm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SQLIndexOrderingTerm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLIndexOrderingTerm(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLIndexOrderingTerm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLIndexOrderingTerm()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t destroy for SQLVirtualTableIndexQuery()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s15SonicFoundation25SQLVirtualTableIndexQueryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  sub_24772C91C();
  sub_24772C91C();
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_44();
}

_QWORD *assignWithCopy for SQLVirtualTableIndexQuery(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLVirtualTableIndexQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLVirtualTableIndexQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLVirtualTableIndexQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLVirtualTableIndexQuery()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t destroy for SQLVirtualTableIndexResults()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLVirtualTableIndexResults(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  sub_24772C91C();
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for SQLVirtualTableIndexResults(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SQLVirtualTableIndexResults(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

void type metadata accessor for SQLVirtualTableIndexResults()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t initializeWithCopy for SQLVirtualTableIndexResults.ConstraintUsage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for SQLVirtualTableIndexResults.ConstraintUsage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for SQLVirtualTableIndexResults.ConstraintUsage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLVirtualTableIndexResults.ConstraintUsage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLVirtualTableIndexResults.ConstraintUsage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLVirtualTableIndexResults.ConstraintUsage()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwxx()
{
  return swift_release();
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s13TableFunctionC19_VirtualTableCursorVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s13TableFunctionC19_VirtualTableCursorVMa()
{
  return &_s13TableFunctionC19_VirtualTableCursorVN;
}

uint64_t _s13TableFunctionC13_VirtualTableVwxx()
{
  return swift_release();
}

uint64_t _s13TableFunctionC13_VirtualTableVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

uint64_t _s13TableFunctionC13_VirtualTableVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s13TableFunctionC13_VirtualTableVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_release();
  return a1;
}

uint64_t _s13TableFunctionC13_VirtualTableVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s13TableFunctionC13_VirtualTableVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *_s13TableFunctionC13_VirtualTableVMa()
{
  return &_s13TableFunctionC13_VirtualTableVN;
}

unint64_t sub_2477138A4()
{
  unint64_t result;

  result = qword_2576B9620[0];
  if (!qword_2576B9620[0])
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, qword_2576B9620);
  }
  return result;
}

uint64_t sub_2477138E4(uint64_t a1)
{
  uint64_t v1;

  return sub_247711330(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))_s13TableFunctionC13_VirtualTableV8FunctionVMa, (uint64_t)sub_247713B68, (uint64_t)&_s13TableFunctionC13_VirtualTableVN);
}

uint64_t sub_247713918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_247710B3C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_247713924(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_247710F34(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_247713930(uint64_t a1)
{
  uint64_t v1;

  return sub_247711330(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))_s13TableFunctionC19_VirtualTableCursorV6CursorVMa, (uint64_t)sub_247713ABC, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN);
}

uint64_t sub_247713964(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_2477113F0(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

uint64_t sub_247713970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2477117FC(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_24771397C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return sub_247711A38(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_247713984()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2477139A8(sqlite3 *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_247711DB8(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t _s13TableFunctionC13_VirtualTableV8FunctionVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s13TableFunctionC13_VirtualTableV8FunctionVMn);
}

uint64_t sub_2477139D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_247712068(a1, v1[4], v1[2], v1[3]);
}

void sub_2477139F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576B81D0)
  {
    v0 = sub_24772CD48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576B81D0);
  }
}

uint64_t _s13TableFunctionC19_VirtualTableCursorV6CursorVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorV6CursorVMn);
}

uint64_t sub_247713A48@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_247711AE4(a1, *(_DWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247713A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X8>)
{
  uint64_t v3;

  return sub_247711888(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_247713A88@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  uint64_t v2;

  return sub_2477114B4(a1, *(_DWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247713ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2477113C0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247713AD8(uint64_t a1)
{
  uint64_t *v1;

  return sub_247711080(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_247713AF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_247711130(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_247713B18@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  uint64_t v2;

  return sub_247710BD8(a1, *(int **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247713B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247713B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_247710B0C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247713B84()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_24772D018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_247713C30(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 48) & ~v7) + v8 > 0x18)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v13 = AssociatedTypeWitness;
    v14 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
    v15 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = (void *)(((unint64_t)v15 + v7 + 8) & ~v7);
    v18 = (const void *)(((unint64_t)v16 + v7 + 8) & ~v7);
    swift_retain();
    sub_24772C91C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v13))
    {
      memcpy(v17, v18, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v17, v18, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t sub_247713DA0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = ((((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = __swift_getEnumTagSinglePayload(v4, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, AssociatedTypeWitness);
  return result;
}

uint64_t sub_247713E48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v4 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  swift_retain();
  sub_24772C91C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v7 + 84))
      v11 = *(_QWORD *)(v7 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_247713F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  size_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v5 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  sub_24772C91C();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness);
  if ((_DWORD)v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v13);
  return a1;
}

unint64_t sub_2477140E4(unint64_t a1, unint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v3 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)(((unint64_t)v3 + v7 + 8) & ~v7);
  v9 = (const void *)(((unint64_t)v4 + v7 + 8) & ~v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(v8, v9, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v8, v9, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_2477141E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  size_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v5 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness);
  if ((_DWORD)v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v13);
  return a1;
}

uint64_t sub_247714348(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  int v17;
  unint64_t v18;
  unsigned int EnumTagSinglePayload;
  int v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (a2 > v8)
  {
    v11 = v9 + ((v10 + 48) & ~v10);
    v12 = 8 * v11;
    if (v11 > 3)
      goto LABEL_12;
    v15 = ((a2 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 >= 2)
    {
LABEL_12:
      v13 = *(unsigned __int8 *)(a1 + v11);
      if (!*(_BYTE *)(a1 + v11))
        goto LABEL_29;
LABEL_20:
      v16 = (v13 - 1) << v12;
      if (v11 > 3)
        v16 = 0;
      if ((_DWORD)v11)
      {
        if (v11 <= 3)
          v17 = v11;
        else
          v17 = 4;
        __asm { BR              X12 }
      }
      v20 = v8 + v16;
      return (v20 + 1);
    }
  }
LABEL_29:
  if (v7 <= 0x7FFFFFFE)
  {
    v18 = *(_QWORD *)(a1 + 8);
    if (v18 >= 0xFFFFFFFF)
      LODWORD(v18) = -1;
    v20 = v18 - 1;
    if (v20 < 0)
      v20 = -1;
    return (v20 + 1);
  }
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10, v6, AssociatedTypeWitness);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_247714500(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char v15;
  unsigned int v16;
  int v17;
  int v18;

  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (v8)
    v13 = v12;
  else
    v13 = v12 + 1;
  v14 = v11 + v13;
  v15 = 8 * (v11 + v13);
  if (a3 > v10)
  {
    if (v14 <= 3)
    {
      v16 = ((a3 - v10 + ~(-1 << v15)) >> v15) + 1;
      if (HIWORD(v16))
      {
        v6 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v16 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v17 = ~v10 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v17 & ~(-1 << v15);
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_247714780()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_247714788()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_2477147A8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2477147B8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2477147C0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_2477147CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24772D018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_247714844(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 32) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v13 = a2[3];
    v3[2] = a2[2];
    v3[3] = v13;
    v14 = (void *)(((unint64_t)v3 + v7 + 32) & ~v7);
    v15 = (const void *)(((unint64_t)a2 + v7 + 32) & ~v7);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v4))
    {
      memcpy(v14, v15, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v14, v15, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_247714954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

uint64_t sub_2477149CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((v7 + 32 + a1) & ~v7);
  v9 = (const void *)((v7 + 32 + a2) & ~v7);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(v8, v9, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_247714A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int EnumTagSinglePayload;
  int v12;
  size_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)((v8 + 32 + a1) & ~v8);
  v10 = (const void *)((v8 + 32 + a2) & ~v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

_OWORD *sub_247714BB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)(((unint64_t)a1 + v7 + 32) & ~v7);
  v9 = (const void *)(((unint64_t)a2 + v7 + 32) & ~v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(v8, v9, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v8, v9, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_247714C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v9 + 32 + a1) & ~v9);
  v11 = (const void *)((v9 + 32 + a2) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v7);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
  return a1;
}

uint64_t sub_247714D80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  unint64_t v18;
  int v19;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 > v8)
  {
    v12 = v9 + ((v10 + 32) & ~v10);
    v13 = 8 * v12;
    if (v12 > 3)
      goto LABEL_12;
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 >= 2)
    {
LABEL_12:
      v14 = *(unsigned __int8 *)(a1 + v12);
      if (!*(_BYTE *)(a1 + v12))
        goto LABEL_27;
LABEL_20:
      v17 = (v14 - 1) << v13;
      if (v12 > 3)
        v17 = 0;
      if ((_DWORD)v12)
      {
        if (v12 > 3)
          LODWORD(v12) = 4;
        __asm { BR              X12 }
      }
      v19 = v8 + v17;
      return (v19 + 1);
    }
  }
LABEL_27:
  if (v7 <= 0x7FFFFFFE)
  {
    v18 = *(_QWORD *)(a1 + 24);
    if (v18 >= 0xFFFFFFFF)
      LODWORD(v18) = -1;
    v19 = v18 - 1;
    if (v19 < 0)
      v19 = -1;
    return (v19 + 1);
  }
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((a1 + v10 + 32) & ~v10, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_247714EFC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_247715150()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_247715158()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_247715178()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_247715188()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_247715190()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_2_20()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_20(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_10_15@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_24772D600();
}

uint64_t OUTLINED_FUNCTION_13_18(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return sub_24772CAC0();
}

uint64_t static SonicFeatureFlag.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24772D168();
  v2 = v1;
  if (v0 == sub_24772D168() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_24772D4F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t SonicFeatureFlag.description.getter()
{
  return sub_24772D168();
}

uint64_t sub_2477152D8(uint64_t a1)
{
  return SonicFeatureFlag.init(stringLiteral:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t RawRepresentable<>.feature.getter()
{
  uint64_t v1;

  sub_24772CC40();
  return v1;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v2, v3);
  LOBYTE(v3) = sub_24772C604();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3 & 1;
}

unint64_t sub_247715378()
{
  unint64_t result;

  result = qword_2576B9728;
  if (!qword_2576B9728)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SonicFeatureFlag, &type metadata for SonicFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2576B9728);
  }
  return result;
}

uint64_t sub_2477153B4()
{
  return MEMORY[0x24BEE25D0];
}

unint64_t sub_2477153C4()
{
  unint64_t result;

  result = qword_2576B9730;
  if (!qword_2576B9730)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SonicFeatureFlag, &type metadata for SonicFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2576B9730);
  }
  return result;
}

uint64_t sub_247715400()
{
  return MEMORY[0x24BEE25E8];
}

uint64_t sub_24771540C()
{
  return MEMORY[0x24BEE25E0];
}

uint64_t getEnumTagSinglePayload for SonicFeatureFlag(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SonicFeatureFlag(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SonicFeatureFlag()
{
  return &type metadata for SonicFeatureFlag;
}

uint64_t OUTLINED_FUNCTION_0_21@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_247715484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = sub_24772C544();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_7_21();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_1_19();
  sub_247704440(v0 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for SQLDatabase.Location);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    v9 = sub_24772C4C0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_24772D144();
    swift_bridgeObjectRelease();
    v11 = 0x3A656C6966;
    v12 = 0xE500000000000000;
    sub_24772CAFC();
    swift_bridgeObjectRelease();
    sub_24772CAFC();
    return v11;
  }
  return v9;
}

uint64_t SQLDatabase.AttachedLocation.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

void SQLDatabase.AttachedLocation.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_44();
}

double (*SQLDatabase.AttachedLocation.name.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLDatabase.AttachedLocation.location.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_19();
  sub_247704440(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SQLDatabase.Location);
}

uint64_t type metadata accessor for SQLDatabase.AttachedLocation()
{
  uint64_t result;

  result = qword_2576B9748;
  if (!qword_2576B9748)
    return swift_getSingletonMetadata();
  return result;
}

void SQLDatabase.AttachedLocation.location.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_19();
  sub_24771642C(a1, v1 + *(int *)(v3 + 20), type metadata accessor for SQLDatabase.Location);
}

double (*SQLDatabase.AttachedLocation.location.modify())(_QWORD)
{
  OUTLINED_FUNCTION_1_19();
  return nullsub_1;
}

uint64_t SQLDatabase.attach(name:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = OUTLINED_FUNCTION_1_19();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247715798()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[10];
  v1 = (_QWORD *)v0[11];
  v4 = v0[8];
  v3 = v0[9];
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[5];
  sub_247704440(v5, (uint64_t)v1 + *(int *)(v3 + 20), type metadata accessor for SQLDatabase.Location);
  *v1 = v7;
  v1[1] = v6;
  v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_attachedLocations);
  OUTLINED_FUNCTION_2_21();
  sub_24772C91C();
  sub_2476D5698();
  v9 = *(_QWORD *)(*v8 + 16);
  sub_2476D571C(v9);
  v10 = *v8;
  *(_QWORD *)(v10 + 16) = v9 + 1;
  sub_247715940((uint64_t)v1, v10+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v9);
  swift_endAccess();
  return OUTLINED_FUNCTION_0_22();
}

uint64_t SQLDatabase.detach(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

void sub_247715898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_attachedLocations);
  OUTLINED_FUNCTION_2_21();
  sub_24772C91C();
  sub_247715984(v4, v3, v2);
  v6 = *(_QWORD *)(*v4 + 16);
  if (v6 < v5)
  {
    __break(1u);
  }
  else
  {
    sub_247715D64(v5, v6);
    swift_endAccess();
    OUTLINED_FUNCTION_0_22();
  }
}

uint64_t sub_247715940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SQLDatabase.AttachedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_247715984(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = type metadata accessor for SQLDatabase.AttachedLocation();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v31 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v31 - v13);
  v15 = *a1;
  v16 = *(_QWORD *)(*a1 + 16);
  if (!v16)
    goto LABEL_12;
  v33 = v3;
  v17 = 0;
  v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = *(_QWORD *)(v12 + 72);
  v35 = v18;
  while (1)
  {
    v20 = *(_QWORD *)(v15 + v18) == a2 && *(_QWORD *)(v15 + v18 + 8) == a3;
    if (v20 || (sub_24772D4F8() & 1) != 0)
      break;
    ++v17;
    v18 += v19;
    if (v16 == v17)
      goto LABEL_12;
  }
  if (!__OFADD__(v17, 1))
  {
    v21 = *(_QWORD *)(v15 + 16);
    if (v17 + 1 == v21)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      return;
    }
    v22 = v19 + v18;
    v23 = v17 + 1;
    v32 = a1;
    while (v23 < v21)
    {
      sub_247704440(v15 + v22, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
      if (*v14 == a2 && v14[1] == a3)
      {
        sub_2477047A8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
      }
      else
      {
        v25 = sub_24772D4F8();
        sub_2477047A8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
        if ((v25 & 1) == 0)
        {
          if (v23 != v17)
          {
            if ((v17 & 0x8000000000000000) != 0)
              goto LABEL_39;
            v26 = *a1;
            v27 = *(_QWORD *)(*a1 + 16);
            if (v17 >= v27)
              goto LABEL_40;
            v34 = v17 * v19;
            sub_247704440(v26 + v35 + v17 * v19, v36, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
            if (v23 >= v27)
              goto LABEL_41;
            sub_247704440(v26 + v22, v37, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a1 = v32;
            *v32 = v26;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v26 = sub_247719274();
              *a1 = v26;
            }
            if (v17 >= *(_QWORD *)(v26 + 16))
              goto LABEL_42;
            sub_24771642C(v37, v26 + v35 + v34, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
            if (v23 >= *(_QWORD *)(*a1 + 16))
              goto LABEL_43;
            sub_24771642C(v36, *a1 + v22, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.AttachedLocation);
          }
          if (__OFADD__(v17++, 1))
            goto LABEL_38;
        }
      }
      v30 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_37;
      v15 = *a1;
      v21 = *(_QWORD *)(*a1 + 16);
      ++v23;
      v22 += v19;
      if (v30 == v21)
        goto LABEL_12;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  __break(1u);
}

void sub_247715C78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_14;
  }
  else
  {
    sub_2476C591C();
    v4 = v10;
    if (!v8)
    {
LABEL_14:
      *v2 = v4;
      return;
    }
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_20;
  sub_2476B1BEC((char *)(v4 + 32 + a2), v11 - a2, (char *)(v4 + 32 + a1));
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_247715D64(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(_QWORD *)(v4 + 24) >> 1)
    v4 = sub_2476C6428();
  v9 = *(_QWORD *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = *(_QWORD *)(v9 + 72);
  v12 = v10 + v11 * v6;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_13;
  v13 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_19;
  result = sub_2476B2104(v10 + v11 * a2, v13 - a2, v12);
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, v8);
  v16 = v14 - v7;
  if (!v15)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_13:
    *v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t *_s16AttachedLocationVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    type metadata accessor for SQLDatabase.Location(0);
    sub_24772C91C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_24772C544();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      v11 = v8[1];
      *v7 = *v8;
      v7[1] = v11;
      sub_24772C91C();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t _s16AttachedLocationVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SQLDatabase.Location(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v5 = sub_24772C544();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s16AttachedLocationVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  type metadata accessor for SQLDatabase.Location(0);
  sub_24772C91C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_24772C544();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    v9 = v7[1];
    *v6 = *v7;
    v6[1] = v9;
    sub_24772C91C();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s16AttachedLocationVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2477047A8((uint64_t)a1 + v6, type metadata accessor for SQLDatabase.Location);
    type metadata accessor for SQLDatabase.Location(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_24772C544();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      v7[1] = v8[1];
      sub_24772C91C();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s16AttachedLocationVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for SQLDatabase.Location(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_24772C544();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *_s16AttachedLocationVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_2477047A8((uint64_t)a1 + v7, type metadata accessor for SQLDatabase.Location);
    v10 = type metadata accessor for SQLDatabase.Location(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_24772C544();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s16AttachedLocationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2477162DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_7_21();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s16AttachedLocationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_247716358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_44();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_7_21();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_2477163B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SQLDatabase.Location(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_24771642C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_149_0(a1, a2, a3);
  OUTLINED_FUNCTION_172(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_35();
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return sub_24772D354();
}

uint64_t OUTLINED_FUNCTION_1_19()
{
  return type metadata accessor for SQLDatabase.AttachedLocation();
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_21()
{
  return type metadata accessor for SQLDatabase.Location(0);
}

uint64_t static SQLError.Code.== infix(_:_:)(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_2477164D8 + 4 * byte_2477321A0[*(unsigned __int8 *)(a1 + 4)]))();
}

BOOL sub_2477164D8@<W0>(int a1@<W8>)
{
  int v1;
  int v2;

  return !v2 && v1 == a1;
}

uint64_t sub_247716788@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  char v4;
  BOOL v5;
  char v6;
  char v7;
  int v8;
  int v9;
  char v10;
  BOOL v11;
  char v12;
  int v13;

  v2 = 0;
  v3 = result & 0xFFFFFF00;
  v4 = 14;
  switch((char)result)
  {
    case 0:
      v4 = 1;
      v5 = v3 == 512;
      v6 = 1;
      v7 = 1;
      if (v3 == 512)
        v8 = 1;
      else
        v8 = 2;
      goto LABEL_65;
    case 1:
      if (v3 == 512)
        v9 = 1;
      else
        v9 = 3;
      if (v3 == 768)
        v9 = 2;
      if (v3 == 256)
        v2 = 0;
      else
        v2 = v9;
      v4 = 2;
      break;
    case 2:
      break;
    case 3:
      v2 = 1;
      break;
    case 4:
      v2 = v3 != 512;
      v4 = 3;
      break;
    case 5:
      v4 = 4;
      v10 = 4;
      v11 = v3 == 512;
      v7 = 4;
      v12 = 4;
      goto LABEL_28;
    case 6:
      v4 = 5;
      v5 = v3 == 512;
      v6 = 5;
      v7 = 5;
      goto LABEL_62;
    case 7:
      v2 = 2;
      break;
    case 8:
      v2 = (v3 - 256) >> 8;
      v4 = 6;
      if (v2 >= 6)
        v2 = 6;
      break;
    case 9:
      v2 = 3;
      break;
    case 10:
      if ((v3 - 256) >> 8 >= 0x21)
        v2 = 33;
      else
        v2 = (v3 - 256) >> 8;
      v4 = 7;
      break;
    case 11:
      v4 = 8;
      v10 = 8;
      v11 = v3 == 512;
      v7 = 8;
      v12 = 8;
LABEL_28:
      if (v11)
        v13 = 1;
      else
        v13 = 3;
      if (v11)
        v7 = v12;
      if (v3 == 768)
        v8 = 2;
      else
        v8 = v13;
      if (v3 == 768)
        v7 = v10;
      goto LABEL_67;
    case 12:
      v2 = 4;
      break;
    case 13:
      v2 = 5;
      break;
    case 14:
      if ((v3 - 256) >> 8 >= 6)
        v2 = 6;
      else
        v2 = (v3 - 256) >> 8;
      v4 = 9;
      break;
    case 15:
      v2 = 6;
      break;
    case 16:
      v2 = 7;
      break;
    case 17:
      v2 = 8;
      break;
    case 18:
      v2 = 9;
      break;
    case 19:
      if ((v3 - 256) >> 8 >= 0xC)
        v2 = 12;
      else
        v2 = (v3 - 256) >> 8;
      v4 = 10;
      break;
    case 20:
      v2 = 10;
      break;
    case 21:
      v2 = 11;
      break;
    case 22:
      v2 = 12;
      break;
    case 23:
      v2 = v3 != 256;
      v4 = 11;
      break;
    case 24:
      v2 = 13;
      break;
    case 25:
      v2 = 14;
      break;
    case 26:
      v2 = 15;
      break;
    case 27:
      v4 = 12;
      v5 = v3 == 512;
      v6 = 12;
      v7 = 12;
LABEL_62:
      if (v5)
        v8 = 1;
      else
        v8 = 2;
LABEL_65:
      if (!v5)
        v7 = v6;
LABEL_67:
      if (v3 == 256)
        v2 = 0;
      else
        v2 = v8;
      if (v3 != 256)
        v4 = v7;
      break;
    case 28:
      v2 = v3 != 256;
      v4 = 13;
      break;
    default:
      v2 = result;
      v4 = 0;
      break;
  }
  *(_DWORD *)a2 = v2;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_247716A40()
{
  return SQLError.Code.Extended.Auth.hashValue.getter();
}

void sub_247716A54()
{
  SQLError.Code.Extended.Auth.hash(into:)();
}

BOOL static SQLError.Code.Extended.Constraint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void SQLError.Code.Extended.Constraint.hash(into:)()
{
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_35();
}

void _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO7GenericO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_14_2();
}

void sub_247716AC4()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_14_2();
}

void SQLError.Code.Extended.Auth.hash(into:)()
{
  sub_24772D60C();
  OUTLINED_FUNCTION_35();
}

void _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO5AbortO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_14_2();
}

void sub_247716B44()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_14_2();
}

BOOL static SQLError.Code.Extended.OK.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SQLError.Code.Extended.OK.hash(into:)()
{
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_35();
}

uint64_t SQLError.codeValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SQLError.codeValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*SQLError.codeValue.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLError.code.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 4);
  *(_BYTE *)(a1 + 4) = v2;
}

uint64_t SQLError.code.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 4);
  *(_DWORD *)(v1 + 4) = *(_DWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

double (*SQLError.code.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLError.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_24772C91C();
  return v1;
}

void SQLError.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_44();
}

double (*SQLError.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLError.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_24772C91C();
  return v1;
}

void SQLError.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_44();
}

double (*SQLError.message.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_247716CC8()
{
  sub_247717BA4();
  return sub_24772D5A0();
}

uint64_t sub_247716CF0()
{
  sub_247717BA4();
  return sub_24772D594();
}

unint64_t static SQLError.errorDomain.getter()
{
  return 0xD000000000000017;
}

uint64_t SQLError.errorCode.getter()
{
  int *v0;

  return *v0;
}

uint64_t SQLError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_2476F6498();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24772E730;
  *(_QWORD *)(inited + 32) = sub_24772CA18();
  *(_QWORD *)(inited + 40) = v4;
  sub_24772C91C();
  sub_24772CAFC();
  sub_24772C91C();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  return sub_24772C904();
}

unint64_t sub_247716E1C()
{
  unint64_t result;

  result = qword_2576B9758;
  if (!qword_2576B9758)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Generic, &type metadata for SQLError.Code.Extended.Generic);
    atomic_store(result, (unint64_t *)&qword_2576B9758);
  }
  return result;
}

unint64_t sub_247716E5C()
{
  unint64_t result;

  result = qword_2576B9760;
  if (!qword_2576B9760)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.IO, &type metadata for SQLError.Code.Extended.IO);
    atomic_store(result, (unint64_t *)&qword_2576B9760);
  }
  return result;
}

unint64_t sub_247716E9C()
{
  unint64_t result;

  result = qword_2576B9768;
  if (!qword_2576B9768)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Locked, &type metadata for SQLError.Code.Extended.Locked);
    atomic_store(result, (unint64_t *)&qword_2576B9768);
  }
  return result;
}

unint64_t sub_247716EDC()
{
  unint64_t result;

  result = qword_2576B9770;
  if (!qword_2576B9770)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Busy, &type metadata for SQLError.Code.Extended.Busy);
    atomic_store(result, (unint64_t *)&qword_2576B9770);
  }
  return result;
}

unint64_t sub_247716F1C()
{
  unint64_t result;

  result = qword_2576B9778;
  if (!qword_2576B9778)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.CantOpen, &type metadata for SQLError.Code.Extended.CantOpen);
    atomic_store(result, (unint64_t *)&qword_2576B9778);
  }
  return result;
}

unint64_t sub_247716F5C()
{
  unint64_t result;

  result = qword_2576B9780;
  if (!qword_2576B9780)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Corrupt, &type metadata for SQLError.Code.Extended.Corrupt);
    atomic_store(result, (unint64_t *)&qword_2576B9780);
  }
  return result;
}

unint64_t sub_247716F9C()
{
  unint64_t result;

  result = qword_2576B9788;
  if (!qword_2576B9788)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.ReadOnly, &type metadata for SQLError.Code.Extended.ReadOnly);
    atomic_store(result, (unint64_t *)&qword_2576B9788);
  }
  return result;
}

unint64_t sub_247716FDC()
{
  unint64_t result;

  result = qword_2576B9790;
  if (!qword_2576B9790)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Abort, &type metadata for SQLError.Code.Extended.Abort);
    atomic_store(result, (unint64_t *)&qword_2576B9790);
  }
  return result;
}

unint64_t sub_24771701C()
{
  unint64_t result;

  result = qword_2576B9798;
  if (!qword_2576B9798)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Constraint, &type metadata for SQLError.Code.Extended.Constraint);
    atomic_store(result, (unint64_t *)&qword_2576B9798);
  }
  return result;
}

unint64_t sub_24771705C()
{
  unint64_t result;

  result = qword_2576B97A0;
  if (!qword_2576B97A0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Notice, &type metadata for SQLError.Code.Extended.Notice);
    atomic_store(result, (unint64_t *)&qword_2576B97A0);
  }
  return result;
}

unint64_t sub_24771709C()
{
  unint64_t result;

  result = qword_2576B97A8;
  if (!qword_2576B97A8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Warning, &type metadata for SQLError.Code.Extended.Warning);
    atomic_store(result, (unint64_t *)&qword_2576B97A8);
  }
  return result;
}

unint64_t sub_2477170DC()
{
  unint64_t result;

  result = qword_2576B97B0;
  if (!qword_2576B97B0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.Auth, &type metadata for SQLError.Code.Extended.Auth);
    atomic_store(result, (unint64_t *)&qword_2576B97B0);
  }
  return result;
}

unint64_t sub_24771711C()
{
  unint64_t result;

  result = qword_2576B97B8;
  if (!qword_2576B97B8)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError.Code.Extended.OK, &type metadata for SQLError.Code.Extended.OK);
    atomic_store(result, (unint64_t *)&qword_2576B97B8);
  }
  return result;
}

unint64_t sub_24771715C()
{
  static SQLError.errorDomain.getter();
  return 0xD000000000000017;
}

uint64_t destroy for SQLError()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLError(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  sub_24772C91C();
  sub_24772C91C();
  return a1;
}

uint64_t assignWithCopy for SQLError(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLError(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SQLError()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SQLError.Code(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF2 && *(_BYTE *)(a1 + 5))
    {
      v2 = *(_DWORD *)a1 + 241;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 4);
      if (v3 <= 0xE)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError.Code(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF1)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 242;
    if (a3 >= 0xF2)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xF2)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_2477173FC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 0xDu)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 14);
}

uint64_t sub_247717414(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xE)
  {
    *(_DWORD *)result = a2 - 14;
    LOBYTE(a2) = 14;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

void type metadata accessor for SQLError.Code()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Generic()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t getEnumTagSinglePayload for SQLError.Code.Extended.IO(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE0)
  {
    if (a2 + 32 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 32) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 33;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v5 = v6 - 33;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError.Code.Extended.IO(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_24771752C + 4 * byte_2477321E3[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_247717560 + 4 * byte_2477321DE[v4]))();
}

uint64_t sub_247717560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247717568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247717570);
  return result;
}

uint64_t sub_24771757C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247717584);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_247717588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247717590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLError.Code.Extended.IO()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Locked()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Busy()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.CantOpen()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO7GenericOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_7_22(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_7_22(v8);
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO7GenericOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2477176AC + 4 * byte_2477321ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_14_15 + 4 * byte_2477321E8[v4]))();
}

uint64_t sub_2477176E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2477176ECLL);
  return result;
}

uint64_t sub_2477176F4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2477176FCLL);
  return OUTLINED_FUNCTION_13_19();
}

void type metadata accessor for SQLError.Code.Extended.Corrupt()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO8ReadOnlyOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_7_22(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_7_22(v8);
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO8ReadOnlyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2477177E8 + 4 * byte_2477321F7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_14_15_0 + 4 * byte_2477321F2[v4]))();
}

uint64_t sub_247717820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247717828);
  return result;
}

uint64_t sub_247717830(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x247717838);
  return OUTLINED_FUNCTION_13_19();
}

void type metadata accessor for SQLError.Code.Extended.ReadOnly()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Abort()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t getEnumTagSinglePayload for SQLError.Code.Extended.Constraint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError.Code.Extended.Constraint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_24771793C + 4 * byte_247732201[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_247717970 + 4 * byte_2477321FC[v4]))();
}

uint64_t sub_247717970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247717978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247717980);
  return result;
}

uint64_t sub_24771798C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247717994);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_247717998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2477179A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLError.Code.Extended.Constraint()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Notice()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLError.Code.Extended.Warning()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO5AbortOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_247717A10 + 4 * byte_247732206[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_247717A30 + 4 * byte_24773220B[v4]))();
}

_BYTE *sub_247717A10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_247717A30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_247717A38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_247717A40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_247717A48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_247717A50(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SQLError.Code.Extended.Auth()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO2OKOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_7_22(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_7_22((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_7_22(v8);
}

uint64_t _s15SonicFoundation8SQLErrorV4CodeO8ExtendedO2OKOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_247717B38 + 4 * byte_247732215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_14_15_1 + 4 * byte_247732210[v4]))();
}

uint64_t sub_247717B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247717B78);
  return result;
}

uint64_t sub_247717B80(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x247717B88);
  return OUTLINED_FUNCTION_13_19();
}

void type metadata accessor for SQLError.Code.Extended.OK()
{
  OUTLINED_FUNCTION_92_0();
}

unint64_t sub_247717BA4()
{
  unint64_t result;

  result = qword_2576B97C0;
  if (!qword_2576B97C0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLError, &type metadata for SQLError);
    atomic_store(result, (unint64_t *)&qword_2576B97C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return sub_24772D624();
}

uint64_t OUTLINED_FUNCTION_7_22@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  return sub_24772D60C();
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return sub_24772D600();
}

uint64_t OUTLINED_FUNCTION_11_17(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_12(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *OUTLINED_FUNCTION_13_19@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_15(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

SonicFoundation::MarkdownTable __swiftcall MarkdownTable.init(headers:rows:)(Swift::OpaquePointer headers, Swift::OpaquePointer rows)
{
  uint64_t v2;
  SonicFoundation::MarkdownTable result;

  *(_BYTE *)v2 = 0;
  *(Swift::OpaquePointer *)(v2 + 8) = headers;
  *(Swift::OpaquePointer *)(v2 + 16) = rows;
  result.headers = rows;
  result._updatingHeaders = (Swift::Bool)headers._rawValue;
  return result;
}

{
  uint64_t v2;
  void *rawValue;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  SonicFoundation::MarkdownTable result;

  rawValue = rows._rawValue;
  v5 = v2;
  v6 = *((_QWORD *)headers._rawValue + 2);
  if (v6)
  {
    v17 = v2;
    v19 = MEMORY[0x24BEE4AF8];
    sub_2476B3000(0, v6, 0);
    v7 = v19;
    v8 = (uint64_t *)((char *)headers._rawValue + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = *(_QWORD *)(v19 + 16);
      v12 = *(_QWORD *)(v19 + 24);
      sub_24772C91C();
      if (v11 >= v12 >> 1)
        sub_2476B3000((char *)(v12 > 1), v11 + 1, 1);
      *(_QWORD *)(v19 + 16) = v11 + 1;
      v13 = v19 + 24 * v11;
      *(_BYTE *)(v13 + 32) = 3;
      v8 += 2;
      *(_QWORD *)(v13 + 40) = v9;
      *(_QWORD *)(v13 + 48) = v10;
      --v6;
    }
    while (v6);
    v14 = swift_bridgeObjectRelease();
    v5 = v17;
    rawValue = rows._rawValue;
  }
  else
  {
    v14 = swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  *(_BYTE *)v5 = 0;
  *(_QWORD *)(v5 + 8) = v7;
  *(_QWORD *)(v5 + 16) = rawValue;
  result.rows._rawValue = v16;
  result.headers._rawValue = v15;
  result._updatingHeaders = v14;
  return result;
}

uint64_t MarkdownTable.Header.Alignment.hash(into:)()
{
  return sub_24772D60C();
}

BOOL static MarkdownTable.Header.Alignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MarkdownTable.Header.Alignment.hashValue.getter()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

uint64_t static MarkdownTable.Header.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *a2;
  if (v4 != 3)
  {
    if (v7 != 3 && v4 == v7)
      goto LABEL_3;
    return 0;
  }
  if (v7 != 3)
    return 0;
LABEL_3:
  if (v5 == *((_QWORD *)a2 + 1) && v6 == *((_QWORD *)a2 + 2))
    return 1;
  else
    return sub_24772D4F8();
}

uint64_t MarkdownTable.headers.getter()
{
  return sub_24772C91C();
}

uint64_t sub_247717D70()
{
  uint64_t v0;

  v0 = sub_24772C91C();
  return MarkdownTable.headers.setter(v0);
}

uint64_t MarkdownTable.headers.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_14_16();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247717DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(_QWORD *, _QWORD);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  _QWORD v80[6];

  v2 = v1;
  sub_247719714();
  v5 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v64 - v9;
  sub_2476C8858(0, &qword_2576B97E0, (uint64_t)&type metadata for MarkdownTable.Header, MEMORY[0x24BEE3128]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v64 - v16;
  v80[0] = *(_QWORD *)(v2 + 8);
  v80[4] = a1;
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250];
  sub_2476C8858(0, &qword_2576B97F0, (uint64_t)&type metadata for MarkdownTable.Header, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2477197B4(&qword_2576B97F8, &qword_2576B97F0, v18, MEMORY[0x24BEE12B0]);
  sub_2477197FC();
  v19 = (uint64_t)v10;
  v20 = v12;
  sub_24772C9A0();
  *(_BYTE *)v2 = 1;
  v73 = v13;
  v71 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v71(v8, v17, v12);
  sub_2477197B4(&qword_2576B97E8, &qword_2576B97E0, MEMORY[0x24BEE3128], MEMORY[0x24BEE3150]);
  v22 = v21;
  v65 = v17;
  sub_24772CF10();
  *(_QWORD *)&v8[*(int *)(v5 + 36)] = v80[0];
  sub_247719838((uint64_t)v8, v19);
  v23 = (uint64_t *)(v19 + *(int *)(v5 + 36));
  v24 = *v23;
  sub_24772CF4C();
  if (v24 == v80[0])
  {
LABEL_52:
    sub_24771988C(v19);
    result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v65, v20);
    *(_BYTE *)v2 = 0;
    return result;
  }
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  v66 = v19;
  v67 = v2;
  v69 = v12;
  v70 = v22;
  v68 = v23;
  while (1)
  {
    v26 = (void (*)(_QWORD *, _QWORD))sub_24772CF88();
    v28 = *v27;
    v29 = v27[2];
    v30 = v27[3];
    v31 = v27[4];
    v32 = *((unsigned __int8 *)v27 + 40);
    v33 = *((unsigned __int8 *)v27 + 41);
    v75 = v27[1];
    v76 = v29;
    v77 = v30;
    v78 = v31;
    v79 = v32;
    sub_24771987C();
    v26(v80, 0);
    v34 = v72;
    v71(v72, (char *)v19, v20);
    sub_24772CF58();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v20);
    v35 = *(_QWORD **)(v2 + 16);
    v36 = v35[2];
    v74 = v33;
    if ((v33 & 1) != 0)
    {
      if (v36)
      {
        v80[0] = MEMORY[0x24BEE4AF8];
        sub_24772C91C();
        sub_2476B2FD4();
        if (v28 < 0)
          goto LABEL_60;
        v37 = 0;
        v38 = v80[0];
        while (1)
        {
          v39 = v35[v37 + 4];
          swift_bridgeObjectRetain_n();
          v40 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_247719288();
            v40 = v45;
          }
          v41 = *(_QWORD *)(v40 + 16);
          if (v28 >= v41)
            break;
          v42 = v41 - 1;
          v43 = v41 - 1 - v28;
          if (v43 < 0)
            goto LABEL_62;
          memmove((void *)(v40 + 16 * v28 + 32), (const void *)(v40 + 16 * v28 + 48), 16 * v43);
          *(_QWORD *)(v40 + 16) = v42;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80[0] = v38;
          v44 = *(_QWORD *)(v38 + 16);
          if (v44 >= *(_QWORD *)(v38 + 24) >> 1)
          {
            sub_2476B2FD4();
            v38 = v80[0];
          }
          ++v37;
          *(_QWORD *)(v38 + 16) = v44 + 1;
          *(_QWORD *)(v38 + 8 * v44 + 32) = v40;
          if (v36 == v37)
          {
            swift_bridgeObjectRelease();
            v19 = v66;
            v2 = v67;
            goto LABEL_29;
          }
        }
        __break(1u);
        goto LABEL_54;
      }
      v38 = MEMORY[0x24BEE4AF8];
LABEL_29:
      if ((*(_BYTE *)v2 & 1) == 0)
      {
        v54 = v35[2];
        if (v54)
        {
          v55 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 16);
          if (*(_QWORD *)(v35[4] + 16) != v55)
            goto LABEL_56;
          if (v54 != 1)
          {
            if (*(_QWORD *)(v35[5] + 16) != v55)
              goto LABEL_56;
            if (v54 != 2)
            {
              v56 = 6;
              while (1)
              {
                v57 = v56 - 3;
                if (__OFADD__(v56 - 4, 1))
                  goto LABEL_58;
                if (*(_QWORD *)(v35[v56] + 16) != v55)
                  goto LABEL_56;
                ++v56;
                if (v57 == v54)
                  goto LABEL_51;
              }
            }
          }
        }
      }
      goto LABEL_51;
    }
    if (v36)
    {
      v80[0] = MEMORY[0x24BEE4AF8];
      sub_24772C91C();
      sub_2476B2FD4();
      if (v28 < 0)
        goto LABEL_61;
      v46 = 0;
      v38 = v80[0];
      while (1)
      {
        v47 = v35[v46 + 4];
        v48 = *(_QWORD *)(v47 + 16);
        if ((uint64_t)v48 < v28)
          break;
        sub_24772C91C();
        if (!swift_isUniquelyReferenced_nonNull_native() || v48 >= *(_QWORD *)(v47 + 24) >> 1)
        {
          sub_2476C65BC();
          v47 = v49;
        }
        sub_2476C8858(0, (unint64_t *)&qword_2576B7B88, MEMORY[0x24BEE0D00], v25);
        swift_arrayDestroy();
        v50 = *(_QWORD *)(v47 + 16);
        v51 = __OFSUB__(v50, v28);
        v52 = v50 - v28;
        if (v51)
          goto LABEL_55;
        if (v52 < 0)
          goto LABEL_62;
        memmove((void *)(v47 + 16 * v28 + 48), (const void *)(v47 + 16 * v28 + 32), 16 * v52);
        ++*(_QWORD *)(v47 + 16);
        *(_QWORD *)(v47 + 16 * v28 + 32) = 0;
        *(_QWORD *)(v47 + 16 * v28 + 40) = 0;
        v80[0] = v38;
        v53 = *(_QWORD *)(v38 + 16);
        if (v53 >= *(_QWORD *)(v38 + 24) >> 1)
        {
          sub_2476B2FD4();
          v38 = v80[0];
        }
        ++v46;
        *(_QWORD *)(v38 + 16) = v53 + 1;
        *(_QWORD *)(v38 + 8 * v53 + 32) = v47;
        if (v36 == v46)
        {
          swift_bridgeObjectRelease();
          v19 = v66;
          v2 = v67;
          goto LABEL_41;
        }
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      swift_bridgeObjectRelease();
      sub_247719884();
      __break(1u);
LABEL_57:
      swift_bridgeObjectRelease();
      sub_247719884();
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v38 = MEMORY[0x24BEE4AF8];
LABEL_41:
    if ((*(_BYTE *)v2 & 1) == 0)
    {
      v58 = v35[2];
      if (v58)
      {
        v59 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 16);
        if (*(_QWORD *)(v35[4] + 16) != v59)
          goto LABEL_57;
        if (v58 != 1)
        {
          if (*(_QWORD *)(v35[5] + 16) != v59)
            goto LABEL_57;
          if (v58 != 2)
            break;
        }
      }
    }
LABEL_51:
    swift_bridgeObjectRelease();
    sub_247719884();
    *(_QWORD *)(v2 + 16) = v38;
    v20 = v69;
    v62 = *v68;
    sub_24772CF4C();
    if (v62 == v80[0])
      goto LABEL_52;
  }
  v60 = 6;
  while (1)
  {
    v61 = v60 - 3;
    if (__OFADD__(v60 - 4, 1))
      break;
    if (*(_QWORD *)(v35[v60] + 16) != v59)
      goto LABEL_57;
    ++v60;
    if (v61 == v58)
      goto LABEL_51;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  result = sub_24772D3B4();
  __break(1u);
  return result;
}

uint64_t MarkdownTable.rows.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  sub_2477185F4();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

void MarkdownTable.headers.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  sub_24772C91C();
  OUTLINED_FUNCTION_35();
}

uint64_t sub_247718584(_QWORD *a1, char a2)
{
  *(_QWORD *)(a1[1] + 8) = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_2();
    OUTLINED_FUNCTION_14_16();
    OUTLINED_FUNCTION_40_3();
  }
  else
  {
    OUTLINED_FUNCTION_14_16();
  }
  return OUTLINED_FUNCTION_3_23();
}

uint64_t MarkdownTable.rows.getter()
{
  return sub_24772C91C();
}

uint64_t sub_2477185CC()
{
  uint64_t v0;

  v0 = sub_24772C91C();
  return MarkdownTable.rows.setter(v0);
}

void sub_2477185F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;

  if ((*(_BYTE *)v0 & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
      if (*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16) != v3)
      {
LABEL_12:
        __break(1u);
        return;
      }
      if (v2 != 1)
      {
        for (i = 5; ; ++i)
        {
          v5 = i - 3;
          if (__OFADD__(i - 4, 1))
            break;
          if (*(_QWORD *)(*(_QWORD *)(v1 + 8 * i) + 16) != v3)
            goto LABEL_11;
          if (v5 == v2)
            return;
        }
        __break(1u);
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
  }
}

void MarkdownTable.rows.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  sub_24772C91C();
  OUTLINED_FUNCTION_35();
}

uint64_t sub_247718698(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  sub_2477185F4();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_40_3();
    *(_QWORD *)(v4 + 16) = v3;
    return OUTLINED_FUNCTION_3_23();
  }
  else
  {
    result = OUTLINED_FUNCTION_40_3();
    *(_QWORD *)(v4 + 16) = v3;
  }
  return result;
}

uint64_t MarkdownTable.RenderOptions.fitColumns.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MarkdownTable.RenderOptions.fitColumns.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*MarkdownTable.RenderOptions.fitColumns.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MarkdownTable.RenderOptions.raw.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MarkdownTable.RenderOptions.raw.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

double (*MarkdownTable.RenderOptions.raw.modify())(_QWORD)
{
  return nullsub_1;
}

SonicFoundation::MarkdownTable::RenderOptions __swiftcall MarkdownTable.RenderOptions.init(fitColumns:raw:)(Swift::Bool fitColumns, Swift::Bool raw)
{
  Swift::Bool *v2;
  SonicFoundation::MarkdownTable::RenderOptions result;

  *v2 = fitColumns;
  v2[1] = raw;
  result.fitColumns = fitColumns;
  return result;
}

Swift::String __swiftcall MarkdownTable.render(options:)(SonicFoundation::MarkdownTable::RenderOptions options)
{
  unsigned __int8 *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Swift::String result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v2 = *(_BYTE *)(*(_QWORD *)&options.fitColumns + 1);
  v45 = **(unsigned __int8 **)&options.fitColumns;
  v46 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v4 = *((_QWORD *)v1 + 2);
  v50 = 0;
  v51 = 0xE000000000000000;
  v5 = *(_QWORD *)(v3 + 16);
  v40 = v4;
  v44 = v3;
  if (v5)
  {
    v48 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_45();
    sub_2476B3194(0, v5, 0);
    v6 = v3 + 48;
    do
    {
      sub_24772C91C();
      v7 = OUTLINED_FUNCTION_21_9();
      OUTLINED_FUNCTION_41_1();
      if (v7 <= 3)
        v8 = 3;
      else
        v8 = v7;
      v10 = *(_QWORD *)(v48 + 16);
      v9 = *(_QWORD *)(v48 + 24);
      if (v10 >= v9 >> 1)
        sub_2476B3194(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v48 + 16) = v10 + 1;
      *(_QWORD *)(v48 + 8 * v10 + 32) = v8;
      v6 += 24;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v11 = v48;
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  v49 = v11;
  if ((v45 & 1) != 0)
  {
    v38 = *(_QWORD *)(v4 + 16);
    if (v38)
    {
      v37 = v4 + 32;
      OUTLINED_FUNCTION_2_2();
      for (i = 0; i != v38; ++i)
      {
        if (i >= *(_QWORD *)(v4 + 16))
          goto LABEL_56;
        v13 = *(_QWORD *)(*(_QWORD *)(v37 + 8 * i) + 16);
        if (v13)
        {
          v41 = i;
          v14 = 0;
          v15 = sub_24772C91C() + 40;
          do
          {
            if ((v2 & 1) != 0)
            {
              OUTLINED_FUNCTION_11_2();
            }
            else
            {
              OUTLINED_FUNCTION_10_17();
              sub_2477191FC();
              sub_2476C58C4();
              OUTLINED_FUNCTION_11_2();
              OUTLINED_FUNCTION_0_23();
              OUTLINED_FUNCTION_10_17();
              OUTLINED_FUNCTION_0_23();
            }
            if (v14 >= *(_QWORD *)(v11 + 16))
              goto LABEL_52;
            v16 = *(_QWORD *)(v11 + 8 * v14 + 32);
            v17 = sub_24772CACC();
            swift_bridgeObjectRelease();
            if (v17 <= v16)
              v18 = v16;
            else
              v18 = v17;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24771929C();
              v11 = v19;
            }
            if (v14 >= *(_QWORD *)(v11 + 16))
              goto LABEL_53;
            v15 += 16;
            *(_QWORD *)(v11 + 8 * v14++ + 32) = v18;
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          v49 = v11;
          v4 = v40;
          i = v41;
        }
      }
      OUTLINED_FUNCTION_40_3();
    }
  }
  OUTLINED_FUNCTION_23_13();
  v20 = *(_QWORD *)(v44 + 16);
  if (v20)
  {
    v21 = v11;
    v42 = v11 + 32;
    sub_24772C91C();
    v22 = 0;
    v23 = (uint64_t *)(v44 + 48);
    v24 = v44;
    while (1)
    {
      v25 = *(v23 - 1);
      v26 = *v23;
      sub_24772C91C();
      sub_247718FBC(v25, v26, v22, v45, v46, v24, v40, (uint64_t)&v49);
      sub_24772CAFC();
      OUTLINED_FUNCTION_63_0();
      sub_24772C91C();
      OUTLINED_FUNCTION_1_7();
      OUTLINED_FUNCTION_63_0();
      sub_24772CAFC();
      OUTLINED_FUNCTION_63_0();
      swift_bridgeObjectRelease();
      if (v22 >= *(_QWORD *)(v21 + 16))
        break;
      v23 += 3;
      MEMORY[0x249580EE0](45, 0xE100000000000000, *(_QWORD *)(v42 + 8 * v22));
      sub_2477191FC();
      sub_2476C58C4();
      sub_24772CF94();
      OUTLINED_FUNCTION_98_0();
      sub_24772C91C();
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_98_0();
      sub_24772CAFC();
      OUTLINED_FUNCTION_98_0();
      ++v22;
      v24 = v44;
      if (v20 == v22)
      {
        OUTLINED_FUNCTION_63_0();
        v4 = v40;
        v11 = v21;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    JUMPOUT(0x247718FACLL);
  }
  v24 = v44;
LABEL_37:
  OUTLINED_FUNCTION_1_7();
  sub_24772CAFC();
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v4 + 16);
  if (v36)
  {
    v43 = v11;
    v35 = v4 + 32;
    OUTLINED_FUNCTION_2_2();
    v27 = 0;
    while (1)
    {
      if (v27 >= *(_QWORD *)(v4 + 16))
        goto LABEL_55;
      v39 = v27;
      v28 = *(_QWORD *)(v35 + 8 * v27);
      OUTLINED_FUNCTION_45();
      OUTLINED_FUNCTION_1_7();
      v47 = *(_QWORD *)(v28 + 16);
      if (v47)
        break;
LABEL_47:
      v27 = v39 + 1;
      swift_bridgeObjectRelease();
      v4 = v40;
      if (v39 + 1 == v36)
      {
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
    }
    v29 = 0;
    v30 = v28 + 40;
    v31 = v24 + 48;
    while (!v45)
    {
      OUTLINED_FUNCTION_11_2();
      ++v29;
      v30 += 16;
      OUTLINED_FUNCTION_2_22();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_45();
      OUTLINED_FUNCTION_1_7();
      OUTLINED_FUNCTION_32();
      sub_24772CAFC();
      OUTLINED_FUNCTION_32();
      v31 += 24;
      if (v47 == v29)
        goto LABEL_47;
    }
    if (v29 >= *(_QWORD *)(v44 + 16))
    {
      __break(1u);
    }
    else if (v29 < *(_QWORD *)(v43 + 16))
    {
      __asm { BR              X9 }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    JUMPOUT(0x247718F98);
  }
LABEL_49:
  OUTLINED_FUNCTION_40_3();
  v32 = v50;
  v33 = (void *)v51;
  result._object = v33;
  result._countAndFlagsBits = v32;
  return result;
}

uint64_t sub_247718FBC(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;

  if ((a4 & 1) != 0)
  {
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a6 + 16) > a3)
    {
      v11 = *(unsigned __int8 *)(a6 + 24 * a3 + 32);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)a8 + 16) > a3)
        __asm { BR              X9 }
LABEL_9:
      __break(1u);
      JUMPOUT(0x2477191E4);
    }
    __break(1u);
    goto LABEL_9;
  }
  sub_24772C91C();
  return a1;
}

unint64_t sub_2477191FC()
{
  unint64_t result;

  result = qword_2576B97C8;
  if (!qword_2576B97C8)
  {
    result = MEMORY[0x2495822A8](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2576B97C8);
  }
  return result;
}

void sub_247719238()
{
  sub_2476C5A9C();
}

void sub_24771924C()
{
  sub_2476C5E38();
}

void sub_247719260(uint64_t a1)
{
  sub_2476C6274(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_247719274()
{
  return sub_2476C6428();
}

void sub_247719288()
{
  sub_2476C65BC();
}

void sub_24771929C()
{
  sub_2476C667C();
}

unint64_t sub_2477192B4()
{
  unint64_t result;

  result = qword_2576B97D0;
  if (!qword_2576B97D0)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for MarkdownTable.Header.Alignment, &type metadata for MarkdownTable.Header.Alignment);
    atomic_store(result, (unint64_t *)&qword_2576B97D0);
  }
  return result;
}

uint64_t sub_2477192F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_7_23(*(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_2477192FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_7_23(*(_QWORD *)(a1 + 16), a2);
}

uint64_t destroy for MarkdownTable()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s15SonicFoundation13MarkdownTableVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v2 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v2;
  sub_24772C91C();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_35();
}

uint64_t assignWithCopy for MarkdownTable(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MarkdownTable(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MarkdownTable()
{
  OUTLINED_FUNCTION_92_0();
}

void sub_247719420(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  sub_24772C91C();
  OUTLINED_FUNCTION_35();
}

uint64_t assignWithCopy for MarkdownTable.Header(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_24772C91C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MarkdownTable.Header(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MarkdownTable.Header()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t storeEnumTagSinglePayload for MarkdownTable.Header.Alignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_247719528 + 4 * byte_247732A55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24771955C + 4 * byte_247732A50[v4]))();
}

uint64_t sub_24771955C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247719564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771956CLL);
  return result;
}

uint64_t sub_247719578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247719580);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_247719584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771958C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MarkdownTable.Header.Alignment()
{
  OUTLINED_FUNCTION_92_0();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MarkdownTable.RenderOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MarkdownTable.RenderOptions(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_247719698 + 4 * byte_247732A5F[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2477196CC + 4 * byte_247732A5A[v4]))();
}

uint64_t sub_2477196CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2477196D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2477196DCLL);
  return result;
}

uint64_t sub_2477196E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2477196F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2477196F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2477196FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for MarkdownTable.RenderOptions()
{
  OUTLINED_FUNCTION_92_0();
}

void sub_247719714()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2576B97D8)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3128];
    sub_2476C8858(255, &qword_2576B97E0, (uint64_t)&type metadata for MarkdownTable.Header, MEMORY[0x24BEE3128]);
    sub_2477197B4(&qword_2576B97E8, &qword_2576B97E0, v0, MEMORY[0x24BEE3150]);
    v1 = sub_24772D318();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2576B97D8);
  }
}

void sub_2477197B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    sub_2476C8858(255, a2, (uint64_t)&type metadata for MarkdownTable.Header, a3);
    atomic_store(MEMORY[0x2495822A8](a4, v6), a1);
  }
  OUTLINED_FUNCTION_35();
}

unint64_t sub_2477197FC()
{
  unint64_t result;

  result = qword_2576B9800;
  if (!qword_2576B9800)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for MarkdownTable.Header, &type metadata for MarkdownTable.Header);
    atomic_store(result, (unint64_t *)&qword_2576B9800);
  }
  return result;
}

uint64_t sub_247719838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247719714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24771987C()
{
  return sub_24772C91C();
}

uint64_t sub_247719884()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24771988C(uint64_t a1)
{
  uint64_t v2;

  sub_247719714();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  return sub_24772CF94();
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return sub_24772CAFC();
}

uint64_t OUTLINED_FUNCTION_3_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_23@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  return sub_24772C91C();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  uint64_t v0;

  return sub_247717DC0(v0);
}

void OUTLINED_FUNCTION_15_15()
{
  JUMPOUT(0x249580EE0);
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_20_11()
{
  return sub_2476B5B30();
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return sub_24772CACC();
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return sub_24772CAFC();
}

BOOL static UUID.v7Precision.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t UUID.v7Precision.hash(into:)()
{
  return sub_24772D60C();
}

uint64_t UUID.v7Precision.hashValue.getter()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

BOOL sub_2477199F0(char *a1, char *a2)
{
  return static UUID.v7Precision.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_2477199FC()
{
  return UUID.v7Precision.hashValue.getter();
}

uint64_t sub_247719A04()
{
  return UUID.v7Precision.hash(into:)();
}

void static UUID.v7(precision:)(char a1)
{
  _QWORD *v2;
  os_unfair_lock_s *v3;
  __uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_2576B7B18 != -1)
    swift_once();
  v2 = off_2576B9808;
  v3 = (os_unfair_lock_s *)((char *)off_2576B9808 + 56);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = clock_gettime_nsec_np(_CLOCK_REALTIME);
  v5 = v4 / 0x3B9ACA00;
  v6 = v4 % 0x3B9ACA00;
  v12 = 0;
  MEMORY[0x249582398](&v12, 8);
  if (!a1)
  {
    v9 = v6 / 0xF4240;
    if (v2[2] != v5 || v2[3] != v9)
    {
      v2[2] = v5;
      v2[3] = v9;
      v2[6] = 0;
      goto LABEL_20;
    }
    v10 = v2[6];
    if (!__OFADD__(v10, 1))
    {
      v2[6] = v10 + 1;
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  if (a1 == 1)
  {
    v7 = v6 / 0x3E8;
    if (v2[2] != v5 || v2[4] != v7)
    {
      v2[2] = v5;
      v2[4] = v7;
      v2[6] = 0;
      goto LABEL_20;
    }
    v8 = v2[6];
    if (!__OFADD__(v8, 1))
    {
      v2[6] = v8 + 1;
LABEL_20:
      sub_24772C5EC();
      os_unfair_lock_unlock(v3);
      swift_release();
      OUTLINED_FUNCTION_0_24();
      return;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v2[2] != v5 || v2[5] != v6)
  {
    v2[2] = v5;
    v2[5] = v6;
    v2[6] = 0;
    goto LABEL_20;
  }
  v11 = v2[6];
  if (!__OFADD__(v11, 1))
  {
    v2[6] = v11 + 1;
    goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

void static UUID._v7<A>(precision:ns:random:counters:)(char a1, unint64_t a2, uint64_t a3, unint64_t *a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v6 = a2 / 0x3B9ACA00;
  v7 = a2 % 0x3B9ACA00;
  v8 = sub_24772C97C();
  if (!a1)
  {
    v11 = v7 / 0xF4240;
    if (*a4 != v6 || a4[1] != v11)
    {
      *a4 = v6;
      a4[1] = v11;
      a4[4] = 0;
      goto LABEL_16;
    }
    v12 = a4[4];
    if (!__OFADD__(v12, 1))
    {
      a4[4] = v12 + 1;
      goto LABEL_16;
    }
    goto LABEL_21;
  }
  if (a1 == 1)
  {
    v9 = v7 / 0x3E8;
    if (*a4 != v6 || a4[2] != v9)
    {
      *a4 = v6;
      a4[2] = v9;
      a4[4] = 0;
      goto LABEL_16;
    }
    v10 = a4[4];
    if (!__OFADD__(v10, 1))
    {
      a4[4] = v10 + 1;
LABEL_16:
      OUTLINED_FUNCTION_1_20(v8);
      goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*a4 != v6 || a4[3] != v7)
  {
    *a4 = v6;
    a4[3] = v7;
    a4[4] = 0;
    goto LABEL_19;
  }
  v13 = a4[4];
  if (!__OFADD__(v13, 1))
  {
    a4[4] = v13 + 1;
LABEL_19:
    sub_24772C5EC();
    OUTLINED_FUNCTION_0_24();
    return;
  }
LABEL_22:
  __break(1u);
}

uint64_t UUID.UUIDv7Counters.s.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UUID.UUIDv7Counters.s.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*UUID.UUIDv7Counters.s.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UUID.UUIDv7Counters.ms.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t UUID.UUIDv7Counters.ms.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*UUID.UUIDv7Counters.ms.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UUID.UUIDv7Counters.us.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UUID.UUIDv7Counters.us.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*UUID.UUIDv7Counters.us.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UUID.UUIDv7Counters.ns.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UUID.UUIDv7Counters.ns.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

double (*UUID.UUIDv7Counters.ns.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UUID.UUIDv7Counters.counter.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UUID.UUIDv7Counters.counter.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

double (*UUID.UUIDv7Counters.counter.modify())(_QWORD)
{
  return nullsub_1;
}

double sub_247719EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double result;

  sub_24771A278(0, a2, a3, a4);
  v4 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 44) = 0u;
  off_2576B9808 = (_UNKNOWN *)v4;
  return result;
}

uint64_t UUID.UUIDVersion.init(rawValue:)(char a1)
{
  if ((a1 - 1) >= 0xFu)
    return 15;
  else
    return (a1 - 1);
}

uint64_t UUID.UUIDVersion.rawValue.getter(int a1)
{
  return (a1 + 1);
}

void sub_247719F40()
{
  sub_24772AF94();
}

void sub_247719F48()
{
  sub_24772B274();
}

void sub_247719F50()
{
  sub_24772B294();
}

uint64_t sub_247719F58@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = UUID.UUIDVersion.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_247719F80@<X0>(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = UUID.UUIDVersion.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t UUID.version.getter()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_24772C5F8();
  result = UUID.UUIDVersion.init(rawValue:)((v0 >> 52) & 0xF);
  if (result == 15)
    __break(1u);
  return result;
}

unint64_t sub_247719FD8()
{
  unint64_t result;

  result = qword_2576B9810;
  if (!qword_2576B9810)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for UUID.v7Precision, &type metadata for UUID.v7Precision);
    atomic_store(result, (unint64_t *)&qword_2576B9810);
  }
  return result;
}

unint64_t sub_24771A018()
{
  unint64_t result;

  result = qword_2576B9818;
  if (!qword_2576B9818)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for UUID.UUIDVersion, &type metadata for UUID.UUIDVersion);
    atomic_store(result, (unint64_t *)&qword_2576B9818);
  }
  return result;
}

uint64_t _s11v7PrecisionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24771A0A0 + 4 * byte_247732B65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24771A0D4 + 4 * asc_247732B60[v4]))();
}

uint64_t sub_24771A0D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771A0DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771A0E4);
  return result;
}

uint64_t sub_24771A0F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771A0F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24771A0FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771A104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UUID.v7Precision()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for UUID.UUIDv7Counters()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s11UUIDVersionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 14) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v5 = v6 - 15;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s11UUIDVersionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_24771A1FC + 4 * byte_247732B6F[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_24771A230 + 4 * byte_247732B6A[v4]))();
}

uint64_t sub_24771A230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771A238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771A240);
  return result;
}

uint64_t sub_24771A24C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771A254);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_24771A258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771A260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UUID.UUIDVersion()
{
  OUTLINED_FUNCTION_92_0();
}

void sub_24771A278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t locked;
  uint64_t v5;

  if (!qword_2576B9820)
  {
    locked = type metadata accessor for ManagedCriticalState.LockedBuffer(0, (uint64_t)&_s13UUIDv7StorageVN, a3, a4);
    if (!v5)
      atomic_store(locked, (unint64_t *)&qword_2576B9820);
  }
}

uint64_t _s13UUIDv7StorageVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13UUIDv7StorageVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *_s13UUIDv7StorageVMa()
{
  return &_s13UUIDv7StorageVN;
}

uint64_t OUTLINED_FUNCTION_1_20(uint64_t result)
{
  return result;
}

uint64_t static LRUDictionary.Container<>.== infix(_:_:)()
{
  return sub_24772C9DC() & 1;
}

uint64_t sub_24771A38C()
{
  return static LRUDictionary.Container<>.== infix(_:_:)();
}

void static LRUDictionary<>.== infix(_:_:)()
{
  type metadata accessor for LRUDictionary.Container();
}

uint64_t sub_24771A3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1;
  MEMORY[0x2495822A8](&protocol conformance descriptor for <> LRUDictionary<A, B>.Container<A1>, a1, &v3);
  return sub_24772C70C() & 1;
}

void sub_24771A450()
{
  static LRUDictionary<>.== infix(_:_:)();
}

uint64_t sub_24771A464(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_24771A47C(a1, a2);
}

uint64_t sub_24771A47C(Swift::OpaquePointer a1, Swift::Int a2)
{
  sub_24772C91C();
  String.bind(to:index:)(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t SQLBindable<>.bind(to:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v15 - v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  if (!v4)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8))(a1, a2, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  return result;
}

uint64_t SQLBindPosition.Error.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_24772C91C();
  return v1;
}

void SQLBindPosition.Error.message.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_44();
}

double (*SQLBindPosition.Error.message.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLBindPosition.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    sub_24772D60C();
    sub_24772CAC0();
  }
  else
  {
    sub_24772D60C();
    sub_24772D60C();
    OUTLINED_FUNCTION_44();
  }
}

uint64_t static SQLBindPosition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if (v4 != 1)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      sub_2476C3810(*(_QWORD *)a1, v3, 0);
      sub_2476C3810(v5, v6, 0);
      v9 = v2 == v5;
      return v9 & 1;
    }
LABEL_11:
    sub_24771A7E4(v5, v6, v7);
    sub_2476C3810(v2, v3, v4);
    sub_2476C3810(v5, v6, v7);
    v9 = 0;
    return v9 & 1;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    sub_24772C91C();
    goto LABEL_11;
  }
  if (v2 == v5 && v3 == v6)
    v9 = 1;
  else
    v9 = sub_24772D4F8();
  sub_24771A7E4(v5, v6, 1);
  sub_24771A7E4(v2, v3, 1);
  sub_2476C3810(v2, v3, 1);
  sub_2476C3810(v5, v6, 1);
  return v9 & 1;
}

uint64_t sub_24771A7E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return sub_24772C91C();
  return result;
}

uint64_t SQLBindPosition.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24772D600();
  sub_24772D60C();
  if (v1 == 1)
    sub_24772CAC0();
  else
    sub_24772D60C();
  return sub_24772D624();
}

uint64_t sub_24771A880()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24772D600();
  sub_24772D60C();
  if (v1 == 1)
    sub_24772CAC0();
  else
    sub_24772D60C();
  return sub_24772D624();
}

unint64_t sub_24771A904()
{
  unint64_t result;

  result = qword_2576B9828;
  if (!qword_2576B9828)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLBindPosition, &type metadata for SQLBindPosition);
    atomic_store(result, (unint64_t *)&qword_2576B9828);
  }
  return result;
}

uint64_t dispatch thunk of SQLBindable.bind(to:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SQLBindable.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for SQLBindPosition(uint64_t a1)
{
  return sub_2476C3810(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15SonicFoundation15SQLBindPositionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24771A7E4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLBindPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24771A7E4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2476C3810(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SQLBindPosition(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2476C3810(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLBindPosition(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLBindPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_24771AADC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24771AAE4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SQLBindPosition()
{
  return &type metadata for SQLBindPosition;
}

ValueMetadata *type metadata accessor for SQLBindPosition.Error()
{
  return &type metadata for SQLBindPosition.Error;
}

void ManagedCriticalState.withCriticalRegion<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_24771AC70(*(_QWORD *)v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + **(_QWORD **)v4 + 16), (os_unfair_lock_t)(*(_QWORD *)v4 + ((*(unsigned int *)(**(_QWORD **)v4 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, *(_QWORD *)(a3 + 16), a4, &v5);
}

uint64_t ManagedCriticalState.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t result;

  type metadata accessor for ManagedCriticalState.LockedBuffer(0, a2, a3, a4);
  v8 = sub_24772D1C8();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a5 = v8;
  return result;
}

uint64_t sub_24771ABFC()
{
  MEMORY[0x249581540]();
  return swift_deallocClassInstance();
}

uint64_t sub_24771AC1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2);
}

void sub_24771AC70(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState.LockedBuffer);
}

uint64_t sub_24771ACFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24771AC1C(a1, a2);
}

uint64_t type metadata accessor for ManagedCriticalState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState);
}

uint64_t sub_24771AD20()
{
  return swift_initClassMetadata2();
}

uint64_t SQLDatabase.Options.JournalMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24771AD8C + 4 * byte_247732E90[*v0]))(0x4554454C4544, 0xE600000000000000);
}

uint64_t sub_24771AD8C()
{
  return 0x455441434E555254;
}

uint64_t sub_24771ADA4()
{
  return 0x54534953524550;
}

uint64_t sub_24771ADBC()
{
  return 0x59524F4D454DLL;
}

uint64_t sub_24771ADCC()
{
  return 4997463;
}

uint64_t sub_24771ADDC()
{
  return 4605519;
}

uint64_t SQLDatabase.Options.LockingMode.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x564953554C435845;
  else
    return 0x4C414D524F4ELL;
}

BOOL static SQLDatabase.Options.ReadWriteMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double SQLDatabase.Options.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 16777473;
  *(_QWORD *)a1 = 16777473;
  *(_DWORD *)(a1 + 7) = 0;
  *(_BYTE *)(a1 + 11) = 2;
  return result;
}

void SQLDatabase.Options.ReadWriteMode.hash(into:)()
{
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.Options.ReadWriteMode.hashValue.getter()
{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

void SQLDatabase.Options.readWriteMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.Options.readWriteMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

double (*SQLDatabase.Options.readWriteMode.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.createIfNeeded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t SQLDatabase.Options.createIfNeeded.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

double (*SQLDatabase.Options.createIfNeeded.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.deleteWhenClosed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t SQLDatabase.Options.deleteWhenClosed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

double (*SQLDatabase.Options.deleteWhenClosed.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.optimizeWhenClosed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t SQLDatabase.Options.optimizeWhenClosed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

double (*SQLDatabase.Options.optimizeWhenClosed.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.exclusiveAccess.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t SQLDatabase.Options.exclusiveAccess.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

double (*SQLDatabase.Options.exclusiveAccess.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.assertProcessDuringWriteTransactions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t SQLDatabase.Options.assertProcessDuringWriteTransactions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

double (*SQLDatabase.Options.assertProcessDuringWriteTransactions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.enforceForeignKeyConstraints.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t SQLDatabase.Options.enforceForeignKeyConstraints.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

double (*SQLDatabase.Options.enforceForeignKeyConstraints.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.caseSensitiveLike.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t SQLDatabase.Options.caseSensitiveLike.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = result;
  return result;
}

double (*SQLDatabase.Options.caseSensitiveLike.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Options.recursiveTriggers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t SQLDatabase.Options.recursiveTriggers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double (*SQLDatabase.Options.recursiveTriggers.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLDatabase.Options.JournalMode.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v1;
  char v3;

  sub_24772D3F0();
  OUTLINED_FUNCTION_7_16();
  v3 = 6;
  if (v1 < 6)
    v3 = v1;
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_24771B018(char *a1)
{
  sub_2476E5A6C(*a1);
}

void sub_24771B024()
{
  sub_24772AFBC();
}

void sub_24771B02C(uint64_t a1)
{
  char *v1;

  sub_24772B1AC(a1, *v1);
}

void sub_24771B034()
{
  sub_24772B2EC();
}

void sub_24771B03C(char *a1@<X8>)
{
  SQLDatabase.Options.JournalMode.init(rawValue:)(a1);
}

void sub_24771B048(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SQLDatabase.Options.JournalMode.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.Options.journalingMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.Options.journalingMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = *result;
  return result;
}

double (*SQLDatabase.Options.journalingMode.modify())(_QWORD)
{
  return nullsub_1;
}

void SQLDatabase.Options.LockingMode.init(rawValue:)(char *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_24772D3F0();
  OUTLINED_FUNCTION_7_16();
  if (v1 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v1)
    v3 = 0;
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_24771B0DC(char *a1, char *a2)
{
  sub_2476E59EC(*a1, *a2);
}

void sub_24771B0E8()
{
  sub_24772AFE4();
}

uint64_t sub_24771B0F0()
{
  return sub_24772B15C();
}

void sub_24771B0F8()
{
  sub_24772B314();
}

void sub_24771B100(char *a1@<X8>)
{
  SQLDatabase.Options.LockingMode.init(rawValue:)(a1);
}

void sub_24771B10C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SQLDatabase.Options.LockingMode.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.Options.lockingMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.Options.lockingMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = *result;
  return result;
}

double (*SQLDatabase.Options.lockingMode.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static SQLDatabase.Options.DataProtectionClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void SQLDatabase.Options.DataProtectionClass.hash(into:)()
{
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_35();
}

void SQLDatabase.Options.DataProtectionClass.hashValue.getter()
{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_9_2();
  sub_24772D624();
  OUTLINED_FUNCTION_14_2();
}

void SQLDatabase.Options.dataProtectionClass.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_120_0(a1);
}

_BYTE *SQLDatabase.Options.dataProtectionClass.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 11) = *result;
  return result;
}

double (*SQLDatabase.Options.dataProtectionClass.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t sub_24771B1D8()
{
  unint64_t result;

  result = qword_2576B9830;
  if (!qword_2576B9830)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Options.ReadWriteMode, &type metadata for SQLDatabase.Options.ReadWriteMode);
    atomic_store(result, (unint64_t *)&qword_2576B9830);
  }
  return result;
}

unint64_t sub_24771B218()
{
  unint64_t result;

  result = qword_2576B9838;
  if (!qword_2576B9838)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Options.JournalMode, &type metadata for SQLDatabase.Options.JournalMode);
    atomic_store(result, (unint64_t *)&qword_2576B9838);
  }
  return result;
}

unint64_t sub_24771B258()
{
  unint64_t result;

  result = qword_2576B9840;
  if (!qword_2576B9840)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Options.LockingMode, &type metadata for SQLDatabase.Options.LockingMode);
    atomic_store(result, (unint64_t *)&qword_2576B9840);
  }
  return result;
}

unint64_t sub_24771B298()
{
  unint64_t result;

  result = qword_2576B9848;
  if (!qword_2576B9848)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for SQLDatabase.Options.DataProtectionClass, &type metadata for SQLDatabase.Options.DataProtectionClass);
    atomic_store(result, (unint64_t *)&qword_2576B9848);
  }
  return result;
}

uint64_t __swift_memcpy12_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s7OptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[12])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s7OptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for SQLDatabase.Options()
{
  OUTLINED_FUNCTION_92_0();
}

void type metadata accessor for SQLDatabase.Options.ReadWriteMode()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s7OptionsV11JournalModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24771B3D4 + 4 * byte_247732E9B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24771B408 + 4 * byte_247732E96[v4]))();
}

uint64_t sub_24771B408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771B418);
  return result;
}

uint64_t sub_24771B424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771B42CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24771B430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.Options.JournalMode()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s7OptionsV13ReadWriteModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24771B49C + 4 * byte_247732EA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24771B4D0 + 4 * byte_247732EA0[v4]))();
}

uint64_t sub_24771B4D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B4D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771B4E0);
  return result;
}

uint64_t sub_24771B4EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771B4F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24771B4F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.Options.LockingMode()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t _s7OptionsV19DataProtectionClassOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24771B564 + 4 * byte_247732EAF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24771B598 + 4 * byte_247732EAA[v4]))();
}

uint64_t sub_24771B598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771B5A8);
  return result;
}

uint64_t sub_24771B5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771B5BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24771B5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771B5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SQLDatabase.Options.DataProtectionClass()
{
  OUTLINED_FUNCTION_92_0();
}

uint64_t sub_24771B5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_24772CDF0();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_24771F928(a1, &qword_2576B7F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
  }
  else
  {
    sub_24772CDE4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24772CD60();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

void ActorQueue.__allocating_init(ordering:)(char *a1)
{
  swift_allocObject();
  ActorQueue.init(ordering:)(a1);
  OUTLINED_FUNCTION_35();
}

uint64_t sub_24771B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 216) = a6;
  *(double *)(v7 + 208) = a7;
  *(_QWORD *)(v7 + 192) = a4;
  *(_QWORD *)(v7 + 200) = a5;
  *(_QWORD *)(v7 + 176) = a2;
  *(_QWORD *)(v7 + 184) = a3;
  *(_QWORD *)(v7 + 168) = a1;
  OUTLINED_FUNCTION_14_4(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  *(_QWORD *)(v7 + 224) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 232) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 240) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 248) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 256) = OUTLINED_FUNCTION_9_17();
  v8 = OUTLINED_FUNCTION_13_5();
  *(_QWORD *)(v7 + 264) = v8;
  *(_QWORD *)(v7 + 272) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 280) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 288) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 296) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 304) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v7 + 312) = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771B83C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;

  v1 = v0[22];
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_71_5();
  if (v2 || (*(_BYTE *)(v1 + 128) & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_15_16((uint64_t)"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-");
    OUTLINED_FUNCTION_44_10(v3);
    OUTLINED_FUNCTION_80_3((unint64_t *)&qword_2576B8090, v4, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
    OUTLINED_FUNCTION_43_9();
    v0[42] = v5;
    v6 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[43] = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_42_10(v6);
    v0[44] = v7;
    OUTLINED_FUNCTION_86_2(v7);
    sub_247721298(&qword_2576B9298, v8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
    v9 = (_QWORD *)swift_task_alloc();
    v0[45] = v9;
    *v9 = v0;
    v9[1] = sub_24771B9C8;
    OUTLINED_FUNCTION_39_10();
    return OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_94_4();
    v11 = (_QWORD *)swift_task_alloc();
    v0[40] = v11;
    OUTLINED_FUNCTION_68_6(v11);
    OUTLINED_FUNCTION_58_0();
    return sub_247700E1C(v17, v12, v13, v14, v15, v16);
  }
}

uint64_t sub_24771B978()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771B9C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_140(&v4);
  *(_QWORD *)(v2 + 368) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_10_3();
}

void sub_24771BA40()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;

  OUTLINED_FUNCTION_90_4();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v2;
    v3 = OUTLINED_FUNCTION_68_6(v2);
    sub_247700E1C(v8, v3, v4, v5, v6, v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771BA90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 384) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771BAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_3();
  if (!v3)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v4 = OUTLINED_FUNCTION_64_5();
  if (v5 != v6)
  {
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 256));
    if (v0)
    {
      OUTLINED_FUNCTION_16_15();
      return;
    }
    v7 = 0;
  }
  OUTLINED_FUNCTION_13_15(v4, v7);
  OUTLINED_FUNCTION_26_9();
  if (v3)
  {
    sub_24771F928(*(_QWORD *)(v1 + 256), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v2 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 256), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_77_4();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
  OUTLINED_FUNCTION_3_3(v9);
}

void sub_24771BBF0()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = v0[48];
      OUTLINED_FUNCTION_8_19(v0[31]);
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = v0[22];
      sub_24771F928(v0[31], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(v0[31], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_47_10();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771BCF4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 240));
      if (v0)
      {
        OUTLINED_FUNCTION_16_15();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = *(_QWORD *)(v1 + 176);
      sub_24771F928(*(_QWORD *)(v1 + 240), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 240), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_47_10();
    OUTLINED_FUNCTION_77_4();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_3_3(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771BDF8()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = v0[41];
      OUTLINED_FUNCTION_8_19(v0[29]);
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = v0[22];
      sub_24771F928(v0[29], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(v0[29], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_47_10();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771BEFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 224));
      if (v0)
      {
        OUTLINED_FUNCTION_16_15();
        return;
      }
      v6 = 0;
    }
    v7 = *(_QWORD *)(v1 + 264);
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v9)
    {
      v10 = OUTLINED_FUNCTION_96_3();
      sub_24771F928(v10, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v7 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 224), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_47_10();
    OUTLINED_FUNCTION_77_4();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_3_3(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771BFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[24] = a4;
  v5[25] = a5;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  OUTLINED_FUNCTION_14_4(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5[26] = OUTLINED_FUNCTION_9_17();
  v5[27] = OUTLINED_FUNCTION_9_17();
  v5[28] = OUTLINED_FUNCTION_9_17();
  v5[29] = OUTLINED_FUNCTION_9_17();
  v5[30] = OUTLINED_FUNCTION_9_17();
  v6 = OUTLINED_FUNCTION_13_5();
  v5[31] = v6;
  v5[32] = *(_QWORD *)(v6 - 8);
  v5[33] = OUTLINED_FUNCTION_9_17();
  v5[34] = OUTLINED_FUNCTION_9_17();
  v5[35] = OUTLINED_FUNCTION_9_17();
  v5[36] = OUTLINED_FUNCTION_9_17();
  v5[37] = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771C0CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[22];
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_71_5();
  if (v2 || (*(_BYTE *)(v1 + 128) & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_15_16((uint64_t)"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-");
    OUTLINED_FUNCTION_44_10(v3);
    OUTLINED_FUNCTION_80_3((unint64_t *)&qword_2576B8090, v4, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
    OUTLINED_FUNCTION_43_9();
    v0[40] = v5;
    v6 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[41] = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_42_10(v6);
    v0[42] = v7;
    OUTLINED_FUNCTION_86_2(v7);
    sub_247721298(&qword_2576B9298, v8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
    v9 = (_QWORD *)swift_task_alloc();
    v0[43] = v9;
    *v9 = v0;
    v9[1] = sub_24771C490;
    OUTLINED_FUNCTION_39_10();
    return OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_94_4();
    OUTLINED_FUNCTION_58_0();
    return swift_task_switch();
  }
}

uint64_t sub_24771C1F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 304) = v1;
  v2 = OUTLINED_FUNCTION_48_9(v1);
  return OUTLINED_FUNCTION_75_4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_24771C234()
{
  OUTLINED_FUNCTION_62_8();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771C274()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_70_7();
  if (!v1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v2 = OUTLINED_FUNCTION_72_5();
  if (v3 ^ v4 | v1)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    v5 = v0[39];
    OUTLINED_FUNCTION_8_19(v0[30]);
    if (v5)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v2, v6);
  OUTLINED_FUNCTION_26_9();
  if (v1)
  {
    v8 = v0[22];
    sub_24771F928(v0[30], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(v0[30], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_47_10();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_12_10(v9);
}

void sub_24771C38C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_70_7();
  if (!v2)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v3 = OUTLINED_FUNCTION_72_5();
  if (v4 ^ v5 | v2)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 232));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v3, v6);
  OUTLINED_FUNCTION_26_9();
  if (v2)
  {
    v8 = *(_QWORD *)(v1 + 176);
    sub_24771F928(*(_QWORD *)(v1 + 232), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 232), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_37_9();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_46_9();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

uint64_t sub_24771C490()
{
  uint64_t v0;

  OUTLINED_FUNCTION_57_7();
  if (!v0)
  {
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_10_3();
}

void sub_24771C4E4()
{
  char v0;

  OUTLINED_FUNCTION_90_4();
  if (v0)
    OUTLINED_FUNCTION_7_0();
  else
    __break(1u);
}

uint64_t sub_24771C508()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
  *(_QWORD *)(v0 + 360) = v1;
  v2 = OUTLINED_FUNCTION_48_9(v1);
  return OUTLINED_FUNCTION_75_4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_24771C544()
{
  OUTLINED_FUNCTION_61_8();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771C584()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_70_7();
  if (!v1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v2 = OUTLINED_FUNCTION_72_5();
  if (v3 ^ v4 | v1)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    v5 = v0[46];
    OUTLINED_FUNCTION_8_19(v0[28]);
    if (v5)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v6 = 0;
  }
  v7 = v0[31];
  OUTLINED_FUNCTION_13_15(v2, v6);
  OUTLINED_FUNCTION_26_9();
  if (v1)
  {
    v9 = OUTLINED_FUNCTION_96_3();
    sub_24771F928(v9, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v7 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(v0[28], v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_47_10();
  v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_12_10(v10);
}

void sub_24771C6A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_70_7();
  if (!v2)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v3 = OUTLINED_FUNCTION_72_5();
  if (v4 ^ v5 | v2)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 216));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v3, v6);
  OUTLINED_FUNCTION_26_9();
  if (v2)
  {
    v8 = *(_QWORD *)(v1 + 176);
    sub_24771F928(*(_QWORD *)(v1 + 216), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 216), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_37_9();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_46_9();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

void sub_24771C7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_3();
  if (!v3)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v4 = OUTLINED_FUNCTION_64_5();
  if (v5 != v6)
  {
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 208));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v7 = 0;
  }
  OUTLINED_FUNCTION_13_15(v4, v7);
  OUTLINED_FUNCTION_26_9();
  if (v3)
  {
    sub_24771F928(*(_QWORD *)(v1 + 208), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v2 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 208), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_37_9();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_46_9();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

uint64_t sub_24771C8B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 192) = a5;
  *(_QWORD *)(v6 + 200) = a6;
  *(_BYTE *)(v6 + 376) = a4;
  *(_QWORD *)(v6 + 176) = a2;
  *(_QWORD *)(v6 + 184) = a3;
  *(_QWORD *)(v6 + 168) = a1;
  OUTLINED_FUNCTION_14_4(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  *(_QWORD *)(v6 + 208) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 216) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 224) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 232) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 240) = OUTLINED_FUNCTION_9_17();
  v7 = OUTLINED_FUNCTION_13_5();
  *(_QWORD *)(v6 + 248) = v7;
  *(_QWORD *)(v6 + 256) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 264) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 272) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 280) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 288) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v6 + 296) = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771C98C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[22];
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_71_5();
  if (v2 || (*(_BYTE *)(v1 + 128) & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_15_16((uint64_t)"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-");
    OUTLINED_FUNCTION_44_10(v3);
    OUTLINED_FUNCTION_80_3((unint64_t *)&qword_2576B8090, v4, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
    OUTLINED_FUNCTION_43_9();
    v0[40] = v5;
    v6 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[41] = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_42_10(v6);
    v0[42] = v7;
    OUTLINED_FUNCTION_86_2(v7);
    sub_247721298(&qword_2576B9298, v8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
    v9 = (_QWORD *)swift_task_alloc();
    v0[43] = v9;
    *v9 = v0;
    v9[1] = sub_24771CB08;
    OUTLINED_FUNCTION_39_10();
    return OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_94_4();
    v11 = (_QWORD *)swift_task_alloc();
    v0[38] = v11;
    OUTLINED_FUNCTION_79_2(v11);
    OUTLINED_FUNCTION_58_0();
    return sub_247701420(v12, v13, v14, v15, v16);
  }
}

uint64_t sub_24771CAC8()
{
  OUTLINED_FUNCTION_62_8();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771CB08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_57_7();
  if (!v0)
  {
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_10_3();
}

void sub_24771CB5C()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_90_4();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v2;
    v3 = OUTLINED_FUNCTION_79_2(v2);
    sub_247701420(v3, v4, v5, v6, v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771CBAC()
{
  OUTLINED_FUNCTION_61_8();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771CBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_3();
  if (!v3)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v4 = OUTLINED_FUNCTION_64_5();
  if (v5 != v6)
  {
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 240));
    if (v0)
    {
      OUTLINED_FUNCTION_16_15();
      return;
    }
    v7 = 0;
  }
  OUTLINED_FUNCTION_13_15(v4, v7);
  OUTLINED_FUNCTION_26_9();
  if (v3)
  {
    sub_24771F928(*(_QWORD *)(v1 + 240), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v2 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 240), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_77_4();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
  OUTLINED_FUNCTION_3_3(v9);
}

void sub_24771CCFC()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = v0[46];
      OUTLINED_FUNCTION_8_19(v0[29]);
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = v0[22];
      sub_24771F928(v0[29], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(v0[29], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_54_10();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_47_10();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771CE00()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 224));
      if (v0)
      {
        OUTLINED_FUNCTION_16_15();
        return;
      }
      v6 = 0;
    }
    v7 = *(_QWORD *)(v1 + 248);
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v9)
    {
      v10 = OUTLINED_FUNCTION_96_3();
      sub_24771F928(v10, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v7 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 224), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_35_10();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_47_10();
    OUTLINED_FUNCTION_77_4();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_3_3(v11);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771CF00()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = v0[39];
      OUTLINED_FUNCTION_8_19(v0[27]);
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = v0[22];
      sub_24771F928(v0[27], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(v0[27], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_54_10();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_47_10();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771D004()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 208));
      if (v0)
      {
        OUTLINED_FUNCTION_16_15();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = *(_QWORD *)(v1 + 176);
      sub_24771F928(*(_QWORD *)(v1 + 208), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 208), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_35_10();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_47_10();
    OUTLINED_FUNCTION_77_4();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_3_3(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771D108(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(double *)(v3 + 192) = a3;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = a2;
  OUTLINED_FUNCTION_14_4(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  *(_QWORD *)(v3 + 200) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 208) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 216) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 224) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 232) = OUTLINED_FUNCTION_9_17();
  v4 = OUTLINED_FUNCTION_13_5();
  *(_QWORD *)(v3 + 240) = v4;
  *(_QWORD *)(v3 + 248) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 256) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 264) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 272) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 280) = OUTLINED_FUNCTION_9_17();
  *(_QWORD *)(v3 + 288) = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771D1D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;

  v1 = v0[22];
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_71_5();
  if (v2 || (*(_BYTE *)(v1 + 128) & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_15_16((uint64_t)"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-");
    OUTLINED_FUNCTION_44_10(v3);
    OUTLINED_FUNCTION_80_3((unint64_t *)&qword_2576B8090, v4, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
    OUTLINED_FUNCTION_43_9();
    v0[39] = v5;
    v6 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[40] = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_42_10(v6);
    v0[41] = v7;
    OUTLINED_FUNCTION_86_2(v7);
    sub_247721298(&qword_2576B9298, v8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
    v9 = (_QWORD *)swift_task_alloc();
    v0[42] = v9;
    *v9 = v0;
    v9[1] = sub_24771D364;
    OUTLINED_FUNCTION_39_10();
    return OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_94_4();
    v11 = (_QWORD *)swift_task_alloc();
    v0[37] = v11;
    *v11 = v0;
    v11[1] = sub_24771D324;
    OUTLINED_FUNCTION_58_0();
    return sub_247701798(v12, v13, v14);
  }
}

uint64_t sub_24771D324()
{
  OUTLINED_FUNCTION_63_5();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771D364()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58_6();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_10_3();
}

void sub_24771D3C4()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_90_4();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v2;
    *v2 = v0;
    v2[1] = sub_24771D428;
    sub_247701798(v0 + 168, *(_QWORD *)(v0 + 184), *(double *)(v0 + 192));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771D428()
{
  OUTLINED_FUNCTION_64_6();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771D468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_3();
  if (!v3)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v4 = OUTLINED_FUNCTION_64_5();
  if (v5 != v6)
  {
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 232));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v7 = 0;
  }
  OUTLINED_FUNCTION_13_15(v4, v7);
  OUTLINED_FUNCTION_26_9();
  if (v3)
  {
    sub_24771F928(*(_QWORD *)(v1 + 232), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v2 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 232), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_46_9();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

void sub_24771D574()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = *(_QWORD *)(v0 + 360);
      OUTLINED_FUNCTION_8_19(*(_QWORD *)(v0 + 224));
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    v7 = *(_QWORD *)(v0 + 240);
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v9)
    {
      v10 = OUTLINED_FUNCTION_96_3();
      sub_24771F928(v10, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v7 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v0 + 224), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_40_8();
    v11 = *(_QWORD *)(v0 + 168);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_44_8(v11, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_24771D69C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 216));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = *(_QWORD *)(v1 + 176);
      sub_24771F928(*(_QWORD *)(v1 + 216), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 216), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_38_10();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_46_9();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_24771D79C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      v5 = *(_QWORD *)(v0 + 304);
      OUTLINED_FUNCTION_8_19(*(_QWORD *)(v0 + 208));
      if (v5)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = *(_QWORD *)(v0 + 176);
      sub_24771F928(*(_QWORD *)(v0 + 208), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v0 + 208), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_40_8();
    v10 = *(_QWORD *)(v0 + 168);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_44_8(v10, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
}

void sub_24771D8C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_50_7();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v3 = OUTLINED_FUNCTION_64_5();
    if (v4 != v5)
    {
      v6 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_13_20();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 200));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v6 = 0;
    }
    OUTLINED_FUNCTION_13_15(v3, v6);
    OUTLINED_FUNCTION_26_9();
    if (v8)
    {
      v9 = *(_QWORD *)(v1 + 176);
      sub_24771F928(*(_QWORD *)(v1 + 200), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v9 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 200), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_38_10();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_46_9();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
    OUTLINED_FUNCTION_12_10(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t ActorQueue.run<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  OUTLINED_FUNCTION_14_4(a1, &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4[25] = OUTLINED_FUNCTION_9_17();
  v4[26] = OUTLINED_FUNCTION_9_17();
  v4[27] = OUTLINED_FUNCTION_9_17();
  v4[28] = OUTLINED_FUNCTION_9_17();
  v4[29] = OUTLINED_FUNCTION_9_17();
  v5 = OUTLINED_FUNCTION_13_5();
  v4[30] = v5;
  v4[31] = *(_QWORD *)(v5 - 8);
  v4[32] = OUTLINED_FUNCTION_9_17();
  v4[33] = OUTLINED_FUNCTION_9_17();
  v4[34] = OUTLINED_FUNCTION_9_17();
  v4[35] = OUTLINED_FUNCTION_9_17();
  v4[36] = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_150();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771DA90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);

  v1 = v0[24];
  OUTLINED_FUNCTION_6_3();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 120) + 24);
  v3 = v0[24];
  if (v2 || (*(_BYTE *)(v3 + 128) & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_15_16((uint64_t)"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-");
    OUTLINED_FUNCTION_44_10(v4);
    OUTLINED_FUNCTION_80_3((unint64_t *)&qword_2576B8090, v5, (uint64_t (*)(uint64_t))sub_2476C3718, MEMORY[0x24BEE12C8]);
    OUTLINED_FUNCTION_43_9();
    v0[39] = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_197();
    v0[40] = v7;
    v8 = (_QWORD *)OUTLINED_FUNCTION_42_10(v7);
    v0[41] = v8;
    OUTLINED_FUNCTION_86_2(v8);
    sub_247721298(&qword_2576B9298, v9, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
    v10 = (_QWORD *)swift_task_alloc();
    v0[42] = v10;
    *v10 = v0;
    v10[1] = sub_24771DD44;
    OUTLINED_FUNCTION_39_10();
    return sub_24772D504();
  }
  else
  {
    v12 = (int *)v0[22];
    *(_BYTE *)(v3 + 128) = 1;
    v15 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[37] = v13;
    v14 = OUTLINED_FUNCTION_93_3(v13);
    return v15(v14);
  }
}

uint64_t sub_24771DBFC()
{
  OUTLINED_FUNCTION_63_5();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771DC3C()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_70_7();
  if (!v1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v2 = OUTLINED_FUNCTION_64_5();
  if (v3 != v4)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_21_10();
    v5 = v0[38];
    OUTLINED_FUNCTION_8_19(v0[29]);
    if (v5)
    {
      OUTLINED_FUNCTION_66_7();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v2, v6);
  OUTLINED_FUNCTION_26_9();
  if (v1)
  {
    v8 = v0[24];
    sub_24771F928(v0[29], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(v0[29], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_9_0(v9);
}

uint64_t sub_24771DD44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58_6();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_70();
  }
  return OUTLINED_FUNCTION_10_3();
}

void sub_24771DDA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  if (*(_BYTE *)(*(_QWORD *)(v0 + 192) + 128) == 1)
  {
    v1 = (_QWORD *)OUTLINED_FUNCTION_4_2();
    *(_QWORD *)(v0 + 352) = v1;
    v2 = OUTLINED_FUNCTION_93_3(v1);
    v3(v2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24771DDFC()
{
  OUTLINED_FUNCTION_64_6();
  return OUTLINED_FUNCTION_6_18();
}

void sub_24771DE3C()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_70_7();
  if (!v1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v2 = OUTLINED_FUNCTION_64_5();
  if (v3 != v4)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_21_10();
    v5 = v0[45];
    OUTLINED_FUNCTION_8_19(v0[28]);
    if (v5)
    {
      OUTLINED_FUNCTION_66_7();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v2, v6);
  OUTLINED_FUNCTION_26_9();
  if (v1)
  {
    v8 = v0[24];
    sub_24771F928(v0[28], &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(v0[28], v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_9_0(v9);
}

void sub_24771DF4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_70_7();
  if (!v2)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v3 = OUTLINED_FUNCTION_64_5();
  if (v4 != v5)
  {
    v6 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_21_10();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 216));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v6 = 0;
  }
  OUTLINED_FUNCTION_13_15(v3, v6);
  OUTLINED_FUNCTION_26_9();
  if (v2)
  {
    v8 = *(_QWORD *)(v1 + 192);
    sub_24771F928(*(_QWORD *)(v1 + 216), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v8 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 216), v7, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

void sub_24771E050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  v2 = *(_QWORD *)(v1 + 192);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_3();
  if (!v3)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_18_11();
  v4 = OUTLINED_FUNCTION_64_5();
  if (v5 != v6)
  {
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_21_10();
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 208));
    if (v0)
    {
      OUTLINED_FUNCTION_8_14();
      return;
    }
    v7 = 0;
  }
  OUTLINED_FUNCTION_13_15(v4, v7);
  OUTLINED_FUNCTION_26_9();
  if (v3)
  {
    sub_24771F928(*(_QWORD *)(v1 + 208), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
    *(_BYTE *)(v2 + 128) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 208), v8, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_104_1();
    OUTLINED_FUNCTION_25_9();
  }
  OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_81();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_12_10(v9);
}

void sub_24771E168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_22_6();
  if ((*(_BYTE *)(*(_QWORD *)(v1 + 192) + 128) & 1) != 0)
  {
    OUTLINED_FUNCTION_18_11();
    v2 = OUTLINED_FUNCTION_64_5();
    if (v3 != v4)
    {
      v5 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        OUTLINED_FUNCTION_21_10();
      OUTLINED_FUNCTION_24_11(*(_QWORD *)(v1 + 200));
      if (v0)
      {
        OUTLINED_FUNCTION_8_14();
        return;
      }
      v5 = 0;
    }
    OUTLINED_FUNCTION_13_15(v2, v5);
    OUTLINED_FUNCTION_26_9();
    if (v7)
    {
      v8 = *(_QWORD *)(v1 + 192);
      sub_24771F928(*(_QWORD *)(v1 + 200), &qword_2576B9288, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
      *(_BYTE *)(v8 + 128) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_22_8(*(_QWORD *)(v1 + 200), v6, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_104_1();
      OUTLINED_FUNCTION_25_9();
    }
    OUTLINED_FUNCTION_23_9();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_110_1();
    OUTLINED_FUNCTION_123_1();
    OUTLINED_FUNCTION_81();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_59_8();
    OUTLINED_FUNCTION_12_10(v9);
  }
  else
  {
    __break(1u);
  }
}

BOOL static ActorQueue.OrderingPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActorQueue.OrderingPolicy.hash(into:)()
{
  return sub_24772D60C();
}

uint64_t ActorQueue.OrderingPolicy.hashValue.getter()
{
  sub_24772D600();
  sub_24772D60C();
  return sub_24772D624();
}

void ActorQueue.ordering.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 112);
}

void ActorQueue.init(ordering:)(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 120) = *(_QWORD *)sub_24772C73C();
  *(_BYTE *)(v1 + 128) = 0;
  *(_BYTE *)(v1 + 112) = v2;
  swift_retain();
  OUTLINED_FUNCTION_35();
}

uint64_t type metadata accessor for ActorQueue.QueuedTask()
{
  uint64_t result;

  result = qword_2576B9868;
  if (!qword_2576B9868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ActorQueue.count.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_3();
  return *(_QWORD *)(*(_QWORD *)(v0 + 120) + 24);
}

uint64_t sub_24771E3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_24771E3B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  sub_24772CE98();
  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  sub_247721298(&qword_2576B9298, v4, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue, (uint64_t)&protocol conformance descriptor for ActorQueue);
  v5 = (_QWORD *)OUTLINED_FUNCTION_197();
  v0[5] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_24771E4A4;
  OUTLINED_FUNCTION_58_0();
  return sub_24772D558();
}

uint64_t sub_24771E4A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_140(v2);
  *(_QWORD *)(v0 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return OUTLINED_FUNCTION_6_18();
}

uint64_t sub_24771E504()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24771E530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v8 = type metadata accessor for ActorQueue.QueuedTask();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v30 - v13);
  v15 = *(_BYTE *)(a2 + 112);
  sub_24772C91C();
  v16 = (uint64_t *)(a2 + 120);
  if ((v15 & 1) != 0)
  {
    sub_24772CE8C();
    v17 = (char *)v12 + *(int *)(v8 + 24);
    sub_247704730();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a1, v18);
    *v12 = a3;
    v12[1] = a4;
    swift_beginAccess();
    result = *v16;
    v20 = *(_QWORD *)(*v16 + 24);
    v21 = v20 + 1;
    if (!__OFADD__(v20, 1))
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = *v16;
      if (*(_QWORD *)(*v16 + 16) < v21 || (isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24771F9CC(v21);
        v23 = *v16;
      }
      sub_24771FFF4((_QWORD *)(v23 + 16), v23 + ((*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v12);
      swift_endAccess();
      sub_24771F09C((uint64_t)v12);
      swift_beginAccess();
      sub_24771E780(v16);
      return swift_endAccess();
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  sub_24772CDD8();
  v24 = (char *)v14 + *(int *)(v8 + 24);
  sub_247704730();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, a1, v25);
  *v14 = a3;
  v14[1] = a4;
  swift_beginAccess();
  result = *v16;
  v26 = *(_QWORD *)(*v16 + 24);
  v27 = v26 + 1;
  if (__OFADD__(v26, 1))
    goto LABEL_14;
  v28 = swift_isUniquelyReferenced_nonNull_native();
  v29 = *v16;
  if (*(_QWORD *)(*v16 + 16) < v27 || (v28 & 1) == 0)
  {
    sub_24771F9CC(v27);
    v29 = *v16;
  }
  sub_24771FFF4((_QWORD *)(v29 + 16), v29 + ((*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v14);
  swift_endAccess();
  return sub_24771F09C((uint64_t)v14);
}

void sub_24771E780(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v3 = type metadata accessor for ActorQueue.QueuedTask();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_2476CA280();
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 40) & ~v7;
  sub_247721EA8((_QWORD *)(*a1 + 16), *a1 + v8);
  if (!v1 && (v9 & 1) != 0)
  {
    v10 = *a1;
    v32 = (_QWORD *)(*a1 + 16);
    v11 = *(_QWORD **)(v10 + 24);
    swift_retain();
    v12 = sub_24771EF84((uint64_t)v11);
    v30 = v10;
    v31 = v12;
    v14 = v13;
    sub_2476CA620(v32, v10 + v8, (uint64_t)&v33);
    v15 = v34;
    if (v34 < 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v29 = v14;
    v32 = v11;
    sub_247721F44(v33, v34, 0, v34, v14);
    sub_2477212D4((uint64_t)&v35, (uint64_t)v36, (uint64_t (*)(_QWORD))sub_247722094);
    sub_2477212D4((uint64_t)v36, (uint64_t)&v37, (uint64_t (*)(_QWORD))sub_247722094);
    if ((v39 & 1) != 0)
    {
      v16 = v32;
    }
    else
    {
      v17 = v15 + v38;
      if (__OFADD__(v15, v38))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v16 = v32;
      if (v17 < v15)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      sub_247721F44(v37, v38, v15, v15 + v38, v29);
      v15 = v17;
    }
    if ((uint64_t)v16 < v15)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v18 = v31;
    *(_QWORD *)(v31 + 16) = v15;
    swift_release();
    v40 = v18;
    sub_24771EA24(&v40);
    v19 = v40;
    v20 = *(_QWORD *)(*a1 + 24);
    if (v20 < 0)
    {
LABEL_36:
      __break(1u);
      return;
    }
    if (v20)
    {
      v21 = *(_QWORD *)(v40 + 16);
      if (v21)
      {
        v22 = 0;
        v31 = v20 - 1;
        v32 = (_QWORD *)(v40 + ((v7 + 32) & ~v7));
        v23 = v21 - 1;
        while (v22 < *(_QWORD *)(v19 + 16))
        {
          v24 = *(_QWORD *)(v4 + 72);
          sub_24771F988((uint64_t)v32 + v24 * v22, (uint64_t)v6);
          if ((int64_t)v22 >= *(_QWORD *)(*a1 + 24))
            goto LABEL_31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_2476CA280();
          v25 = *(_QWORD *)(*a1 + 32);
          if ((int64_t)(v22 + v25) >= *(_QWORD *)(*a1 + 16))
            v26 = *(_QWORD *)(*a1 + 16);
          else
            v26 = 0;
          sub_2477220CC((uint64_t)v6, *a1 + v8 + (v22 + v25 - v26) * v24);
          sub_24771F09C((uint64_t)v6);
          v27 = v31 == v22 || v23 == v22;
          ++v22;
          if (v27)
            goto LABEL_28;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
LABEL_28:
    swift_release();
  }
}

void sub_24771EA24(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ActorQueue.QueuedTask() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24771F068();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_2477200A0(v6);
  *a1 = v3;
}

uint64_t sub_24771EAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  OUTLINED_FUNCTION_14_4(a1, &qword_2576B7F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  v9 = OUTLINED_FUNCTION_97_2();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = a3;
  swift_retain();
  sub_24772C91C();
  sub_24771B5E0((uint64_t)v8, (uint64_t)&unk_2576B9890, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_24771EB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_24771EBA0()
{
  uint64_t v0;

  sub_24771EBCC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24771EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;

  sub_247704730();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ActorQueue.QueuedTask();
  v9 = *(_QWORD *)(v40 - 8);
  v10 = MEMORY[0x24BDAC7A8](v40);
  v41 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v36 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - v15;
  v43 = (uint64_t *)(v2 + 120);
  result = swift_beginAccess();
  v18 = *(_QWORD **)(v2 + 120);
  v19 = v18[3];
  if (!v19)
    return result;
  v38 = v7;
  v39 = v6;
  v37 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = (char *)v18 + v37;
  sub_24772C91C();
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v21 >= v19)
    {
      __break(1u);
      goto LABEL_24;
    }
    v22 = v18[4];
    v23 = v21 + v22 >= v18[2] ? v18[2] : 0;
    v24 = *(_QWORD *)(v9 + 72);
    sub_24771F988((uint64_t)&v20[(v21 + v22 - v23) * v24], (uint64_t)v16);
    sub_2477212D4((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
    v25 = *v14 == a1 && v14[1] == a2;
    if (v25 || (sub_24772D4F8() & 1) != 0)
      break;
    result = sub_24771F09C((uint64_t)v14);
    ++v21;
    v19 = v18[3];
    if (v21 == v19)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  sub_24771F09C((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  v26 = v43;
  swift_beginAccess();
  result = *v26;
  if (v21 >= *(_QWORD *)(*v26 + 24))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    result = sub_2476CA280();
  v27 = *v26;
  if (v21 >= *(_QWORD *)(*v26 + 24))
    goto LABEL_25;
  v28 = *(_QWORD *)(v27 + 32);
  if (v28 + v21 >= *(_QWORD *)(v27 + 16))
    v29 = *(_QWORD *)(v27 + 16);
  else
    v29 = 0;
  v30 = v27 + v37;
  v31 = v41;
  sub_24771F988(v27 + v37 + (v28 - v29 + v21) * v24, v41);
  swift_retain();
  sub_247721190(v21, v21 + 1, (uint64_t *)(v27 + 16), v30);
  swift_endAccess();
  swift_release();
  v32 = v39;
  v33 = v38;
  v34 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v42, v31 + *(int *)(v40 + 24), v39);
  sub_24772CD9C();
  sub_247721298(qword_2576B83F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
  v35 = swift_allocError();
  sub_24772C8E0();
  v44 = v35;
  sub_24772CD78();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  return sub_24771F09C(v31);
}

uint64_t ActorQueue.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActorQueue.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ActorQueue.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24771EF6C()
{
  return ActorQueue.unownedExecutor.getter();
}

uint64_t sub_24771EF84(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_24772D348();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      type metadata accessor for ActorQueue.QueuedTask();
      v2 = sub_24772CCF4();
      *(_QWORD *)(v2 + 16) = a1;
    }
    else
    {
      v2 = MEMORY[0x24BEE4AF8];
    }
    type metadata accessor for ActorQueue.QueuedTask();
    return v2;
  }
  return result;
}

void sub_24771F040(uint64_t a1)
{
  sub_2476B31EC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_24771F054(uint64_t a1)
{
  sub_2476B32C8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_24771F068()
{
  sub_2476B3C78();
}

uint64_t type metadata accessor for ActorQueue()
{
  return objc_opt_self();
}

uint64_t sub_24771F09C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActorQueue.QueuedTask();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24771F0D8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a1[2];
  v7 = type metadata accessor for ActorQueue.QueuedTask();
  sub_2477212D4(a2 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, a3, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
  v8 = a1[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    v11 = a1[1];
    if (v10 >= *a1)
      v10 = 0;
    a1[2] = v10;
    if (!__OFSUB__(v11, 1))
    {
      a1[1] = v11 - 1;
      return;
    }
  }
  __break(1u);
}

unint64_t sub_24771F170()
{
  unint64_t result;

  result = qword_2576B9860;
  if (!qword_2576B9860)
  {
    result = MEMORY[0x2495822A8](&protocol conformance descriptor for ActorQueue.OrderingPolicy, &type metadata for ActorQueue.OrderingPolicy);
    atomic_store(result, (unint64_t *)&qword_2576B9860);
  }
  return result;
}

uint64_t method lookup function for ActorQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActorQueue.__allocating_init(ordering:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for ActorQueue.OrderingPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24771F20C + 4 * byte_24773325D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24771F240 + 4 * byte_247733258[v4]))();
}

uint64_t sub_24771F240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771F248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24771F250);
  return result;
}

uint64_t sub_24771F25C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24771F264);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24771F268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24771F270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActorQueue.OrderingPolicy()
{
  return &type metadata for ActorQueue.OrderingPolicy;
}

uint64_t *sub_24771F28C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24772CDF0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_24772C91C();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    sub_247704730();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_24771F364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_24772CDF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  sub_247704730();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_24771F3D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24772CDF0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_24772C91C();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_247704730();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_24771F484(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_24772C91C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24772CDF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_247704730();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_24771F534(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24772CDF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_247704730();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_24771F5CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24772CDF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_247704730();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_24771F66C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24771F678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_97_2();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      sub_247704730();
      v9 = v11;
      v10 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_24771F70C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24771F718(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_97_2();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      sub_247704730();
      v9 = v11;
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_24771F7A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_24772CDF0();
  if (v0 <= 0x3F)
  {
    sub_247704730();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24771F838()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_60_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157(v0);
  v2 = OUTLINED_FUNCTION_34_9(v1);
  return OUTLINED_FUNCTION_24_15(v2, v3, v4, v5);
}

uint64_t sub_24771F878()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24771F8AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_157(v9);
  *v10 = v2;
  v10[1] = sub_2476B9B58;
  return sub_24771EB84(a1, v4, v5, v6, v7, v8);
}

void sub_24771F928(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  OUTLINED_FUNCTION_14_4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_35();
}

uint64_t sub_24771F964()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24771F988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActorQueue.QueuedTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24771F9CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v2 = v1;
  v3 = *v1;
  v4 = (uint64_t *)(*v1 + 16);
  v5 = *v4;
  if (*v4 >= a1)
  {
    v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActorQueue.QueuedTask() - 8) + 80);
    sub_2476CA9B4(0, &qword_2576B82B8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, MEMORY[0x24BE18BE8]);
    v11 = swift_allocObject();
    v13 = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v13;
    if ((uint64_t)v13 >= 1)
      sub_2476CA4B4(v11 + 16, v11 + ((v12 + 40) & ~v12), v4, v3 + ((v12 + 40) & ~v12));
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v1;
    v8 = type metadata accessor for ActorQueue.QueuedTask();
    sub_24772C754();
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 24);
      sub_2476CA9B4(0, &qword_2576B82B8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, MEMORY[0x24BE18BE8]);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = sub_2476CA6D8();
      *(_QWORD *)(v11 + 24) = v10;
      *(_QWORD *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_24771FC34(v11 + 16, v11 + ((v9 + 40) & ~v9), (_QWORD *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
        *(_QWORD *)(v7 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_2476CA9B4(0, &qword_2576B82B8, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, MEMORY[0x24BE18BE8]);
      v11 = swift_allocObject();
      v14 = sub_2476CA6D8();
      v15 = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v11 + 16) = v14;
      *(_QWORD *)(v11 + 24) = v15;
      *(_QWORD *)(v11 + 32) = 0;
      if (v15 >= 1)
        sub_24771FD40(v11 + 16, v11 + ((v9 + 40) & ~v9), (_QWORD *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
    }
  }
  result = swift_release();
  *v2 = v11;
  return result;
}

uint64_t sub_24771FBF4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  BOOL v4;

  v4 = __OFADD__(a1, a2);
  result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a2 < 0)
  {
LABEL_7:
    if ((result & 0x8000000000000000) == 0)
      return result;
    v4 = __OFADD__(result, *a3);
    result += *a3;
    if (!v4)
      return result;
LABEL_11:
    __break(1u);
    return result;
  }
  v4 = __OFSUB__(result, *a3);
  if (result >= *a3)
  {
    result -= *a3;
    if (v4)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
  return result;
}

void sub_24771FC34(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  _BOOL4 v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  v8 = a3[1];
  v9 = type metadata accessor for ActorQueue.QueuedTask();
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = 0;
  v10 = 0;
  v11 = v8;
LABEL_6:
  v13 = v5 < v8;
  v14 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72);
  v15 = v10 != 0;
  v16 = v13 && v15;
  if (v13 && v15)
    v17 = v12;
  else
    v17 = 0;
  if (v13 && v15)
    v18 = v10;
  else
    v18 = 0;
  if (v11 >= 1)
  {
    if (a4)
    {
      sub_2476B2110(a4 + v14 * v4, v11, a2);
      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = 0;
LABEL_16:
  if (!v16 || v18 <= 0)
    return;
  if (!v17)
  {
LABEL_23:
    __break(1u);
    return;
  }
  sub_2476B2110(v17, v18, a2 + v14 * v11);
}

uint64_t sub_24771FD40(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v17;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  v8 = a3[1];
  result = type metadata accessor for ActorQueue.QueuedTask();
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = 0;
  v10 = 0;
  v11 = v8;
LABEL_6:
  v13 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (v11 < 1)
  {
    v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v14 = a4 + v13 * v4;
  if (v14 < a2 + v13 * v11 && v14 + v13 * v11 > a2)
    goto LABEL_30;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 >= v8 || v10 < 1)
    return result;
  if (!v12)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    result = sub_24772D3B4();
    __break(1u);
    return result;
  }
  v17 = a2 + v13 * v11;
  if (v17 + v13 * v10 > v12 && v17 < v12 + v13 * v10)
    goto LABEL_30;
  return swift_arrayInitWithCopy();
}

uint64_t sub_24771FEBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  v5 = a3[2];
  v6 = v5 + result;
  v7 = *a3;
  if (v5 + result >= *a3)
    v8 = *a3;
  else
    v8 = 0;
  v9 = v5 + a2;
  if (v5 + a2 >= v7)
    v10 = *a3;
  else
    v10 = 0;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v12 = v6 - v8;
    v13 = v9 - v10;
    if (v11)
      v14 = v12 < v13;
    else
      v14 = 1;
    v15 = v14;
    if (v15 == 1)
    {
      v16 = 0;
      v13 = 0;
LABEL_18:
      *(_QWORD *)a5 = a4 + 40 * v12;
      *(_QWORD *)(a5 + 8) = v11;
      *(_QWORD *)(a5 + 16) = v16;
      *(_QWORD *)(a5 + 24) = v13;
      *(_BYTE *)(a5 + 32) = v15;
      return result;
    }
    v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24771FF38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  uint64_t v18;

  v6 = a3[2];
  v7 = v6 + result;
  v8 = *a3;
  if (v6 + result >= *a3)
    v9 = *a3;
  else
    v9 = 0;
  v10 = v6 + a2;
  if (v10 >= v8)
    v11 = *a3;
  else
    v11 = 0;
  v12 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v14 = v7 - v9;
    v15 = v10 - v11;
    if (v12)
      v16 = v14 < v15;
    else
      v16 = 1;
    v17 = v16;
    result = type metadata accessor for ActorQueue.QueuedTask();
    if (v17 == 1)
    {
      v18 = 0;
      v15 = 0;
LABEL_18:
      *(_QWORD *)a5 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v14;
      *(_QWORD *)(a5 + 8) = v12;
      *(_QWORD *)(a5 + 16) = v18;
      *(_QWORD *)(a5 + 24) = v15;
      *(_BYTE *)(a5 + 32) = v17;
      return result;
    }
    v12 = v8 - v14;
    if (!__OFSUB__(v8, v14))
    {
      v18 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_24771FFF4(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result[1];
  v4 = result[2];
  v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        v10 = type metadata accessor for ActorQueue.QueuedTask();
        result = (_QWORD *)sub_24771F988(a3, a2 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5);
        v11 = v8[1];
        v9 = __OFADD__(v11, 1);
        v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9)
        goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_2477200A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v2 = v1;
  v136 = type metadata accessor for ActorQueue.QueuedTask();
  v4 = *(_QWORD *)(v136 - 8);
  v5 = MEMORY[0x24BDAC7A8](v136);
  v127 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v137 = (uint64_t)&v120 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v133 = (uint64_t)&v120 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v132 = (uint64_t)&v120 - v11;
  v12 = a1[1];
  v13 = sub_24772D474();
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_2477209B0(0, v12, 1, a1);
      return;
    }
    goto LABEL_142;
  }
  v14 = v13;
  v135 = a1;
  v123 = sub_24771EF84(v12 / 2);
  v124 = v12;
  v129 = v15;
  v130 = v4;
  if (v12 <= 0)
  {
LABEL_106:
    v17 = (char *)MEMORY[0x24BEE4AF8];
    v51 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_107:
    v113 = v17;
    if (v51 < 2)
    {
LABEL_118:
      swift_bridgeObjectRelease();
      if (v124 >= -1)
        goto LABEL_119;
      goto LABEL_146;
    }
    v114 = *v135;
    while (1)
    {
      v115 = v51 - 2;
      if (v51 < 2)
        break;
      if (!v114)
        goto LABEL_150;
      v116 = *(_QWORD *)&v113[16 * v115 + 32];
      v117 = *(_QWORD *)&v113[16 * v51 + 24];
      sub_247720BC4(v114 + *(_QWORD *)(v130 + 72) * v116, v114 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v113[16 * v51 + 16], v114 + *(_QWORD *)(v130 + 72) * v117, v129);
      if (v2)
        goto LABEL_104;
      if (v117 < v116)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v113 = sub_247721054((uint64_t)v113);
      if (v115 >= *((_QWORD *)v113 + 2))
        goto LABEL_138;
      v118 = &v113[16 * v115 + 32];
      *(_QWORD *)v118 = v116;
      *((_QWORD *)v118 + 1) = v117;
      v119 = *((_QWORD *)v113 + 2);
      if (v51 > v119)
        goto LABEL_139;
      memmove(&v113[16 * v51 + 16], &v113[16 * v51 + 32], 16 * (v119 - v51));
      *((_QWORD *)v113 + 2) = v119 - 1;
      v51 = v119 - 1;
      if (v119 <= 2)
        goto LABEL_118;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    return;
  }
  v122 = v14;
  v16 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v18 = v12;
  while (1)
  {
    v19 = v16;
    v20 = v16 + 1;
    v128 = v16;
    if (v16 + 1 >= v18)
    {
      v28 = v16 + 1;
    }
    else
    {
      v21 = *v135;
      v22 = *(_QWORD *)(v4 + 72);
      v23 = v132;
      sub_24771F988(*v135 + v22 * v20, v132);
      v131 = v18;
      v24 = v133;
      sub_24771F988(v21 + v22 * v19, v133);
      v25 = sub_24772CDCC();
      v26 = v24;
      v18 = v131;
      sub_24771F09C(v26);
      sub_24771F09C(v23);
      v27 = v22;
      v28 = v19 + 2;
      v126 = v21;
      v138 = v27;
      if (v19 + 2 >= v18)
      {
        v4 = v130;
        if ((v25 & 1) == 0)
          goto LABEL_11;
      }
      else
      {
        v125 = v2;
        v29 = v27 * v20;
        v30 = v19 + 2;
        v31 = v27 * v28;
        while (1)
        {
          v32 = v132;
          sub_24771F988(v21 + v31, v132);
          v33 = v133;
          sub_24771F988(v21 + v29, v133);
          v34 = sub_24772CDCC();
          sub_24771F09C(v33);
          sub_24771F09C(v32);
          if (((v25 ^ v34) & 1) != 0)
            break;
          v21 += v138;
          ++v30;
          v18 = v131;
          if (v30 >= v131)
          {
            v28 = v131;
            v4 = v130;
            goto LABEL_83;
          }
        }
        v4 = v130;
        v18 = v131;
        v28 = v30;
LABEL_83:
        v2 = v125;
        v19 = v128;
        if ((v25 & 1) == 0)
          goto LABEL_11;
      }
      v101 = v138;
      if (v28 < v19)
        goto LABEL_145;
      if (v19 < v28)
      {
        v125 = v2;
        v102 = v28;
        v103 = 0;
        v104 = v138 * (v102 - 1);
        v105 = v19;
        v106 = v102 * v138;
        v107 = v105;
        v108 = v105 * v138;
        v35 = v135;
        do
        {
          v109 = v102;
          if (v107 != v102 + v103 - 1)
          {
            v110 = v126;
            if (!v126)
              goto LABEL_149;
            v111 = v126 + v108;
            v134 = v126 + v104;
            sub_2477212D4(v126 + v108, v127, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
            if (v108 < v104 || v111 >= v110 + v106)
            {
              swift_arrayInitWithTakeFrontToBack();
              v101 = v138;
            }
            else
            {
              v101 = v138;
              if (v108 != v104)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_2477212D4(v127, v134, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
            v35 = v135;
          }
          ++v107;
          --v103;
          v102 = v109;
          v104 -= v101;
          v106 -= v101;
          v108 += v101;
        }
        while (v107 < v109 + v103);
        v2 = v125;
        v4 = v130;
        v18 = v131;
        v28 = v102;
        v19 = v128;
        goto LABEL_12;
      }
    }
LABEL_11:
    v35 = v135;
LABEL_12:
    if (v28 < v18)
    {
      if (__OFSUB__(v28, v19))
        goto LABEL_141;
      if (v28 - v19 < v122)
      {
        if (__OFADD__(v19, v122))
          goto LABEL_143;
        if (v19 + v122 >= v18)
          v36 = v18;
        else
          v36 = v19 + v122;
        if (v36 < v19)
          goto LABEL_144;
        if (v28 != v36)
        {
          v121 = v17;
          v125 = v2;
          v126 = v36;
          v37 = *(_QWORD *)(v4 + 72);
          v38 = v37 * (v28 - 1);
          v131 = v37;
          v138 = v28 * v37;
          do
          {
            v39 = 0;
            v40 = v19;
            v134 = v28;
            while (1)
            {
              v41 = *v35;
              v42 = v132;
              sub_24771F988(v138 + v39 + *v35, v132);
              v43 = v38;
              v44 = v38 + v39 + v41;
              v45 = v133;
              sub_24771F988(v44, v133);
              LOBYTE(v41) = sub_24772CDCC();
              sub_24771F09C(v45);
              sub_24771F09C(v42);
              if ((v41 & 1) == 0)
                break;
              v46 = *v35;
              if (!*v35)
                goto LABEL_147;
              v38 = v43;
              v47 = v46 + v43 + v39;
              sub_2477212D4(v46 + v138 + v39, v137, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
              v48 = v134;
              swift_arrayInitWithTakeFrontToBack();
              sub_2477212D4(v137, v47, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
              v39 -= v131;
              ++v40;
              v35 = v135;
              if (v48 == v40)
                goto LABEL_28;
            }
            v48 = v134;
            v38 = v43;
LABEL_28:
            v28 = v48 + 1;
            v38 += v131;
            v138 += v131;
            v19 = v128;
          }
          while (v28 != v126);
          v28 = v126;
          v2 = v125;
          v17 = v121;
        }
      }
    }
    if (v28 < v19)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_247720F4C(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v50 = *((_QWORD *)v17 + 2);
    v49 = *((_QWORD *)v17 + 3);
    v51 = v50 + 1;
    v52 = v2;
    if (v50 >= v49 >> 1)
      v17 = sub_247720F4C((char *)(v49 > 1), v50 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v51;
    v53 = v17 + 32;
    v54 = &v17[16 * v50 + 32];
    *(_QWORD *)v54 = v19;
    *((_QWORD *)v54 + 1) = v28;
    v134 = v28;
    if (v50)
      break;
    v51 = 1;
LABEL_78:
    v18 = v135[1];
    v16 = v134;
    v2 = v52;
    v4 = v130;
    if (v134 >= v18)
      goto LABEL_107;
  }
  while (1)
  {
    v55 = v51 - 1;
    if (v51 >= 4)
    {
      v60 = &v53[16 * v51];
      v61 = *((_QWORD *)v60 - 8);
      v62 = *((_QWORD *)v60 - 7);
      v66 = __OFSUB__(v62, v61);
      v63 = v62 - v61;
      if (v66)
        goto LABEL_125;
      v65 = *((_QWORD *)v60 - 6);
      v64 = *((_QWORD *)v60 - 5);
      v66 = __OFSUB__(v64, v65);
      v58 = v64 - v65;
      v59 = v66;
      if (v66)
        goto LABEL_126;
      v67 = v51 - 2;
      v68 = &v53[16 * v51 - 32];
      v70 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      v66 = __OFSUB__(v69, v70);
      v71 = v69 - v70;
      if (v66)
        goto LABEL_127;
      v66 = __OFADD__(v58, v71);
      v72 = v58 + v71;
      if (v66)
        goto LABEL_129;
      if (v72 >= v63)
      {
        v90 = &v53[16 * v55];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v66 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v66)
          goto LABEL_135;
        v83 = v58 < v93;
        goto LABEL_67;
      }
    }
    else
    {
      if (v51 != 3)
      {
        v84 = *((_QWORD *)v17 + 4);
        v85 = *((_QWORD *)v17 + 5);
        v66 = __OFSUB__(v85, v84);
        v77 = v85 - v84;
        v78 = v66;
        goto LABEL_61;
      }
      v57 = *((_QWORD *)v17 + 4);
      v56 = *((_QWORD *)v17 + 5);
      v66 = __OFSUB__(v56, v57);
      v58 = v56 - v57;
      v59 = v66;
    }
    if ((v59 & 1) != 0)
      goto LABEL_128;
    v67 = v51 - 2;
    v73 = &v53[16 * v51 - 32];
    v75 = *(_QWORD *)v73;
    v74 = *((_QWORD *)v73 + 1);
    v76 = __OFSUB__(v74, v75);
    v77 = v74 - v75;
    v78 = v76;
    if (v76)
      goto LABEL_130;
    v79 = &v53[16 * v55];
    v81 = *(_QWORD *)v79;
    v80 = *((_QWORD *)v79 + 1);
    v66 = __OFSUB__(v80, v81);
    v82 = v80 - v81;
    if (v66)
      goto LABEL_132;
    if (__OFADD__(v77, v82))
      goto LABEL_134;
    if (v77 + v82 >= v58)
    {
      v83 = v58 < v82;
LABEL_67:
      if (v83)
        v55 = v67;
      goto LABEL_69;
    }
LABEL_61:
    if ((v78 & 1) != 0)
      goto LABEL_131;
    v86 = &v53[16 * v55];
    v88 = *(_QWORD *)v86;
    v87 = *((_QWORD *)v86 + 1);
    v66 = __OFSUB__(v87, v88);
    v89 = v87 - v88;
    if (v66)
      goto LABEL_133;
    if (v89 < v77)
      goto LABEL_78;
LABEL_69:
    v94 = v17;
    v95 = v55 - 1;
    if (v55 - 1 >= v51)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v135)
      goto LABEL_148;
    v96 = &v53[16 * v95];
    v97 = *(_QWORD *)v96;
    v98 = &v53[16 * v55];
    v99 = *((_QWORD *)v98 + 1);
    sub_247720BC4(*v135 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v96, *v135 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v98, *v135 + *(_QWORD *)(v130 + 72) * v99, v129);
    if (v52)
      break;
    if (v99 < v97)
      goto LABEL_122;
    if (v55 > *((_QWORD *)v94 + 2))
      goto LABEL_123;
    *(_QWORD *)v96 = v97;
    *(_QWORD *)&v53[16 * v95 + 8] = v99;
    v100 = *((_QWORD *)v94 + 2);
    if (v55 >= v100)
      goto LABEL_124;
    v17 = v94;
    v51 = v100 - 1;
    memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
    *((_QWORD *)v94 + 2) = v100 - 1;
    if (v100 <= 2)
      goto LABEL_78;
  }
  v2 = v52;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v124 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_119:
  *(_QWORD *)(v123 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_2477209B0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a1;
  v27 = type metadata accessor for ActorQueue.QueuedTask();
  v7 = MEMORY[0x24BDAC7A8](v27);
  v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v22 - v13;
  v26 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v30 = v15 * (v26 - 1);
    v25 = v15;
    v29 = v15 * v26;
    while (2)
    {
      v16 = 0;
      v17 = v24;
      do
      {
        v18 = *a4;
        sub_24771F988(v29 + v16 + *a4, (uint64_t)v14);
        sub_24771F988(v30 + v16 + v18, (uint64_t)v11);
        LOBYTE(v18) = sub_24772CDCC();
        sub_24771F09C((uint64_t)v11);
        sub_24771F09C((uint64_t)v14);
        if ((v18 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v30 + v16;
        sub_2477212D4(v19 + v29 + v16, v28, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
        swift_arrayInitWithTakeFrontToBack();
        sub_2477212D4(v28, v21, (uint64_t (*)(_QWORD))type metadata accessor for ActorQueue.QueuedTask);
        v16 -= v25;
        ++v17;
        a4 = v20;
      }
      while (v26 != v17);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23)
        continue;
      break;
    }
  }
}

