void sub_1C18B0178(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 40;
    v6 = MEMORY[0x1E0DEE9D8];
    v16 = a2;
    v15 = a1 + 40;
    do
    {
      v7 = (uint64_t *)(v5 + 16 * v4);
      v8 = v4;
      while (1)
      {
        if (v8 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v9 = *(v7 - 1);
        v10 = *v7;
        v11 = v9 == 0x797469746E65 && v10 == 0xE600000000000000;
        if (!v11 && (sub_1C1B0FC44() & 1) == 0)
          break;
        ++v8;
        v7 += 2;
        if (v3 == v8)
        {
          a2 = v16;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C15F0C7C();
      v12 = *(_QWORD *)(v6 + 16);
      v13 = v12 + 1;
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1C15F0C7C();
        v13 = v12 + 1;
      }
      v4 = v8 + 1;
      *(_QWORD *)(v6 + 16) = v13;
      v14 = v6 + 16 * v12;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v10;
      a2 = v16;
      v5 = v15;
    }
    while (v3 - 1 != v8);
  }
LABEL_17:

  swift_bridgeObjectRelease();
}

void sub_1C18B0310(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v4 = 0;
  v21 = a1 + 32;
  v19 = a2 + 7;
  v20 = MEMORY[0x1E0DEE9D8];
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v5 = (uint64_t *)(v21 + 16 * v4);
    v6 = *v5;
    v7 = v5[1];
    ++v4;
    v8 = a2[2];
    if (!v8)
      goto LABEL_19;
    v9 = a2[4] == v6 && a2[5] == v7;
    if (!v9 && (sub_1C1B0FC44() & 1) == 0)
    {
      if (v8 != 1)
      {
        v10 = v19;
        v11 = 1;
        while (1)
        {
          v12 = v11 + 1;
          if (__OFADD__(v11, 1))
            break;
          v13 = *(v10 - 1) == v6 && *v10 == v7;
          if (v13 || (sub_1C1B0FC44() & 1) != 0)
            goto LABEL_24;
          v10 += 2;
          ++v11;
          if (v12 == v8)
            goto LABEL_19;
        }
        __break(1u);
        break;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C15F0C7C();
        v15 = v20;
      }
      v16 = v15;
      v17 = *(_QWORD *)(v15 + 16);
      if (v17 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C15F0C7C();
        v16 = v20;
      }
      *(_QWORD *)(v16 + 16) = v17 + 1;
      v20 = v16;
      v18 = v16 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v6;
      *(_QWORD *)(v18 + 40) = v7;
    }
LABEL_24:
    if (v4 == v22)
      goto LABEL_25;
  }
  __break(1u);
}

void sub_1C18B04D4(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;

  v3 = v2;
  v28 = a2;
  v4 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v29 = MEMORY[0x1E0DEE9D8];
      sub_1C15F0C7C();
      if (v5 < 0)
        break;
      v6 = 0;
      v7 = v29;
      v24[1] = v3;
      v25 = v4 & 0xC000000000000001;
      v26 = v5;
      v27 = v4;
      while (v5 != v6)
      {
        if (v25)
          v8 = (id)MEMORY[0x1C3BB22A8](v6, v4);
        else
          v8 = *(id *)(v4 + 8 * v6 + 32);
        v9 = v8;
        v10 = objc_msgSend(v28, sel_locale);
        v11 = sub_1C1B0DD6C();
        v12 = *(_QWORD *)(v11 - 8);
        MEMORY[0x1E0C80A78](v11, v13, v14, v15);
        v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1C1B0DD30();

        sub_1C1B0DD0C();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        v18 = (void *)sub_1C1B0F1F4();
        swift_bridgeObjectRelease();
        v19 = objc_msgSend(v9, sel_localizedStringForLocaleIdentifier_, v18);

        v20 = sub_1C1B0F224();
        v3 = v21;

        v29 = v7;
        v22 = *(_QWORD *)(v7 + 16);
        if (v22 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1C15F0C7C();
          v7 = v29;
        }
        ++v6;
        *(_QWORD *)(v7 + 16) = v22 + 1;
        v23 = v7 + 16 * v22;
        *(_QWORD *)(v23 + 32) = v20;
        *(_QWORD *)(v23 + 40) = v3;
        v5 = v26;
        v4 = v27;
        if (v26 == v6)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v5 = sub_1C1B0FB3C();
      swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:

  }
}

void sub_1C18B0728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C15F0E74();
    v3 = v28;
    v4 = sub_1C18BB758(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(a1 + 32))
      {
        v7 = a1 + 64;
        v21 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if ((_DWORD)v5 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v23 = v5;
          v24 = v6 >> 6;
          v22 = v1;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v6);
          v9 = v8[1];
          v26 = *v8;
          v27 = v9;
          v10 = sub_1C1B0DA30();
          v25 = &v20;
          v11 = *(_QWORD *)(v10 - 8);
          MEMORY[0x1E0C80A78](v10, v12, v13, v14);
          v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
          swift_bridgeObjectRetain();
          sub_1C1B0DA18();
          sub_1C15DFF38();
          v17 = sub_1C1B0F8CC();
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          swift_bridgeObjectRelease();
          v28 = v3;
          v18 = *(_QWORD *)(v3 + 16);
          if (v18 >= *(_QWORD *)(v3 + 24) >> 1)
          {
            sub_1C15F0E74();
            v3 = v28;
          }
          *(_QWORD *)(v3 + 16) = v18 + 1;
          *(_QWORD *)(v3 + 8 * v18 + 32) = v17;
          if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = v21;
          if ((*(_QWORD *)(v21 + 8 * v24) & (1 << v6)) == 0)
            goto LABEL_20;
          if ((_DWORD)v23 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v19 = sub_1C1B0F974();
          v1 = v22 - 1;
          if (v22 == 1)
            return;
          v6 = v19;
          if ((v19 & 0x8000000000000000) == 0)
          {
            v5 = *(unsigned int *)(a1 + 36);
            if (v19 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_1C18B0978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C15F0C7C();
    v3 = sub_1C18BB758(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(v2 + 32))
      {
        v6 = v4;
        v7 = v2 + 64;
        v15 = v2 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(v2 + 36))
            goto LABEL_18;
          v8 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v5);
          v9 = v8[1];
          v16 = v1;
          v17 = *v8;
          v10 = v2;
          v12 = *(_QWORD *)(v18 + 16);
          v11 = *(_QWORD *)(v18 + 24);
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1)
            sub_1C15F0C7C();
          *(_QWORD *)(v18 + 16) = v12 + 1;
          v13 = v18 + 16 * v12;
          *(_QWORD *)(v13 + 32) = v17;
          *(_QWORD *)(v13 + 40) = v9;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v10 + 32)))
            goto LABEL_19;
          v7 = v15;
          if ((*(_QWORD *)(v15 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          v2 = v10;
          if (v6 != *(_DWORD *)(v10 + 36))
            goto LABEL_21;
          v14 = sub_1C1B0F974();
          v1 = v16 - 1;
          if (v16 == 1)
            return;
          v5 = v14;
          if ((v14 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(v2 + 36);
            if (v14 < 1 << *(_BYTE *)(v2 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_1C18B0B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1C15F0C7C();
    v3 = sub_1C18BB758(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(v2 + 32))
      {
        v6 = v2 + 64;
        v16 = v2 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(v2 + 36))
            goto LABEL_18;
          v17 = v1;
          v18 = v4;
          v7 = v2;
          v8 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v5);
          v9 = objc_msgSend(v8, sel_identifier);
          v10 = sub_1C1B0F224();
          v12 = v11;

          v13 = *(_QWORD *)(v19 + 16);
          if (v13 >= *(_QWORD *)(v19 + 24) >> 1)
            sub_1C15F0C7C();
          *(_QWORD *)(v19 + 16) = v13 + 1;
          v14 = v19 + 16 * v13;
          *(_QWORD *)(v14 + 32) = v10;
          *(_QWORD *)(v14 + 40) = v12;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v7 + 32)))
            goto LABEL_19;
          v2 = v7;
          v6 = v16;
          if ((*(_QWORD *)(v16 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v18 != *(_DWORD *)(v2 + 36))
            goto LABEL_21;
          v15 = sub_1C1B0F974();
          v1 = v17 - 1;
          if (v17 == 1)
            return;
          v5 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(v2 + 36);
            if (v15 < 1 << *(_BYTE *)(v2 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1C18B0D1C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v6 = *(v5 - 1) == 0x797469746E65 && *v5 == 0xE600000000000000;
      if (v6 || (sub_1C1B0FC44() & 1) != 0)
        break;
      v5 += 2;
      if (v3 == ++v4)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v4 = 0;
  }

  return v4;
}

void *sub_1C18B0DD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unint64_t v20;
  unint64_t v21;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1C1B0FB3C())
  {
    v20 = v5;
    v21 = v5 & 0xC000000000000001;
    v7 = 4;
    while (1)
    {
      v8 = v21 ? (id)MEMORY[0x1C3BB22A8](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v10 = v6;
      v11 = v8;
      v12 = a3;
      v13 = objc_msgSend(v8, sel_identifier);
      v14 = sub_1C1B0F224();
      v16 = v15;

      a3 = v12;
      v17 = v14 == a2 && v16 == v12;
      if (v17)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v11;
      }
      v18 = sub_1C1B0FC44();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_17;

      ++v7;
      v6 = v10;
      v17 = v9 == v10;
      v5 = v20;
      if (v17)
        goto LABEL_20;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1C18B0F84(unint64_t a1, uint64_t i)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v15;

  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1C1B0FB3C())
  {
    v15 = (void *)i;
    for (i = 4; ; ++i)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BB22A8](i - 4, a1) : *(id *)(a1 + 8 * i);
      v6 = v5;
      v7 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_identifier);
      v9 = sub_1C1B0F224();
      v11 = v10;

      if (v9 == 0x797469746E65 && v11 == 0xE600000000000000)
      {

        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        return v6;
      }
      v13 = sub_1C1B0FC44();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
      {

        goto LABEL_17;
      }

      if (v7 == v4)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C18B1138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC860);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  OUTLINED_FUNCTION_52();
  v10 = v9 - v8;
  v11 = sub_1C1B0F4AC();
  OUTLINED_FUNCTION_62_4(v10, v12, v13, v11);
  v14 = (_QWORD *)OUTLINED_FUNCTION_108();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = a2;
  v15 = (_QWORD *)OUTLINED_FUNCTION_108();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = &unk_1EF702698;
  v15[5] = v14;
  sub_1C18BADC8(v10, (uint64_t)&unk_1EF7026A8, (uint64_t)v15);
  swift_release();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C18B11F4(uint64_t a1, void *a2)
{
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t result;
  uint64_t v32;
  int64_t v33;
  _QWORD v35[5];

  sub_1C1811A0C(v35);
  v2 = v35[0];
  v3 = v35[3];
  v4 = v35[4];
  v32 = v35[1];
  v33 = (unint64_t)(v35[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_3;
LABEL_2:
  v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v7 = v6 | (v3 << 6);
  while (1)
  {
    v11 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v7);
    v12 = objc_msgSend(v11, sel_descriptionMetadata);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, sel_searchKeywords);

      sub_1C15B882C(0, (unint64_t *)&unk_1EF6FB3F0);
      v15 = sub_1C1B0F380();

      sub_1C18B04D4(v15, a2);
      v17 = v16;

      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v5 + 16);
      v20 = v19 + v18;
      if (__OFADD__(v19, v18))
        goto LABEL_43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_20;
    }
    else
    {

      v21 = *(_QWORD *)(v5 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = 0;
      v17 = MEMORY[0x1E0DEE9D8];
      if (isUniquelyReferenced_nonNull_native)
      {
        v20 = v21;
LABEL_20:
        if (v20 <= *(_QWORD *)(v5 + 24) >> 1)
          goto LABEL_22;
      }
    }
    sub_1C160B45C();
    v5 = v23;
LABEL_22:
    if (!*(_QWORD *)(v17 + 16))
      break;
    v24 = *(_QWORD *)(v5 + 16);
    if ((*(_QWORD *)(v5 + 24) >> 1) - v24 < v18)
      goto LABEL_44;
    v25 = v5 + 16 * v24 + 32;
    if (v17 + 32 < v25 + 16 * v18 && v25 < v17 + 32 + 16 * v18)
      goto LABEL_47;
    swift_arrayInitWithCopy();
    if (v18)
    {
      v27 = *(_QWORD *)(v5 + 16);
      v28 = __OFADD__(v27, v18);
      v29 = v27 + v18;
      if (v28)
        goto LABEL_45;
      *(_QWORD *)(v5 + 16) = v29;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_46;
    if (v8 >= v33)
      goto LABEL_41;
    v9 = *(_QWORD *)(v32 + 8 * v8);
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v32 + 8 * v10);
      if (v9)
        goto LABEL_12;
      v10 = v3 + 3;
      if (v3 + 3 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v32 + 8 * v10);
      if (v9)
        goto LABEL_12;
      v10 = v3 + 4;
      if (v3 + 4 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v32 + 8 * v10);
      if (v9)
      {
LABEL_12:
        v8 = v10;
      }
      else
      {
        v8 = v3 + 5;
        if (v3 + 5 >= v33)
          goto LABEL_41;
        v9 = *(_QWORD *)(v32 + 8 * v8);
        if (!v9)
        {
          v30 = v3 + 6;
          while (v30 < v33)
          {
            v9 = *(_QWORD *)(v32 + 8 * v30++);
            if (v9)
            {
              v8 = v30 - 1;
              goto LABEL_13;
            }
          }
LABEL_41:

          swift_release();
          return v5;
        }
      }
    }
LABEL_13:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v8 << 6);
    v3 = v8;
  }
  if (!v18)
    goto LABEL_33;
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1C1B0FB60();
  __break(1u);
  return result;
}

id WFEntityUpdatingAction.init(identifier:metadata:metadataForParameterIdentifier:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8)
{
  char *v8;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  objc_super v56;

  v14 = &v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)v14 = 1;
  *((_QWORD *)v14 + 1) = v15;
  v14[16] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_preprocessedEntity] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___addButtonParameter] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___tableParameter] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___batchExecutor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_metadataForParameterIdentifier] = a4;
  v16 = (void *)sub_1C1B0F1F4();
  OUTLINED_FUNCTION_56();
  if (a6)
  {
    OUTLINED_FUNCTION_16_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB380);
    v17 = (void *)sub_1C1B0F14C();
    OUTLINED_FUNCTION_29();
  }
  else
  {
    v17 = 0;
  }
  v56.receiver = v8;
  v56.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  v18 = objc_msgSendSuper2(&v56, sel_initWithIdentifier_metadata_definition_serializedParameters_appIntentDescriptor_fullyQualifiedActionIdentifier_, v16, a3, a5, v17, a7, a8);
  v19 = (char *)v18;

  if (v19)
  {

    if (a6)
    {
      v20 = v19;
      v21 = OUTLINED_FUNCTION_59_12();
      v23 = sub_1C162BAEC(v21, v22);
      OUTLINED_FUNCTION_29();
      if (v23)
      {
        v24 = v20;
        v25 = (void *)sub_1C18B1B20((uint64_t)v24);
        sub_1C18B37D4(v23, (uint64_t)v18, v25, (uint64_t)&v48);
        v26 = v49;
        if (v49)
        {
          v27 = v48;
          v28 = v50 & 1;
          v29 = &v24[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
          OUTLINED_FUNCTION_4_4();
          *(_QWORD *)v29 = v27;
          *((_QWORD *)v29 + 1) = v26;
          v29[16] = v28;
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      v30 = v19;
    }
    v31 = &v19[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
    OUTLINED_FUNCTION_4_4();
    if (*(_QWORD *)(*((_QWORD *)v31 + 1) + 16) || (WFEntityUpdatingAction.createTableRow()(), (v32 = v54) == 0))
    {

    }
    else
    {
      v45 = v55;
      v33 = v51;
      v43 = v52;
      v44 = v53;
      v41 = v51;
      v42 = a7;
      v34 = v50;
      v46 = a3;
      v47 = v49;
      v35 = v48;
      OUTLINED_FUNCTION_4_4();
      v36 = v33;
      OUTLINED_FUNCTION_33();
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_142_3();
      sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160B5BC);
      v37 = *(_QWORD *)(*((_QWORD *)v31 + 1) + 16);
      sub_1C18BB0F4(v37, (uint64_t (*)(BOOL))sub_1C160B5BC);
      v38 = *((_QWORD *)v31 + 1);
      *(_QWORD *)(v38 + 16) = v37 + 1;
      v39 = v38 + (v37 << 6);
      *(_QWORD *)(v39 + 32) = v35;
      *(_QWORD *)(v39 + 40) = v47;
      *(_QWORD *)(v39 + 48) = v34;
      *(_QWORD *)(v39 + 56) = v41;
      *(_BYTE *)(v39 + 64) = v43;
      *(_QWORD *)(v39 + 72) = v44;
      *(_QWORD *)(v39 + 80) = v32;
      *(_BYTE *)(v39 + 88) = v45 & 1;
      *(_BYTE *)(v39 + 89) = BYTE1(v45) & 1;
      *(_BYTE *)(v39 + 90) = BYTE2(v45) & 1;
      *(_BYTE *)(v39 + 91) = HIBYTE(v45) & 1;
      swift_endAccess();

      sub_1C17DDB2C(v35, v47, v34, v41, v43, v44, v32);
    }
  }
  else
  {

    OUTLINED_FUNCTION_29();
    return 0;
  }
  return v18;
}

uint64_t type metadata accessor for WFEntityUpdatingAction()
{
  return objc_opt_self();
}

uint64_t sub_1C18B18F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState;
  OUTLINED_FUNCTION_4_4();
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return swift_bridgeObjectRetain();
}

void sub_1C18B1948(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  id v16;
  uint64_t v17;

  OUTLINED_FUNCTION_172_2(a1);
  v10 = *(_QWORD *)(v17 + 16);
  v11 = swift_bridgeObjectRelease();
  if (v10 == 1)
  {
    OUTLINED_FUNCTION_172_2(v11);
    if (*(_QWORD *)(v17 + 16))
    {
      v2 = *(_QWORD *)(v17 + 32);
      v4 = *(_QWORD *)(v17 + 40);
      v10 = *(_QWORD *)(v17 + 48);
      v5 = *(void **)(v17 + 56);
      v6 = *(unsigned __int8 *)(v17 + 64);
      v7 = *(_QWORD *)(v17 + 72);
      v3 = *(_QWORD *)(v17 + 80);
      if (*(_BYTE *)(v17 + 89))
        v12 = 256;
      else
        v12 = 0;
      v13 = v12 | *(unsigned __int8 *)(v17 + 88);
      if (*(_BYTE *)(v17 + 90))
        v14 = 0x10000;
      else
        v14 = 0;
      if (*(_BYTE *)(v17 + 91))
        v15 = 0x1000000;
      else
        v15 = 0;
      v8 = v13 | v14 | v15;
      v16 = v5;
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_25_6();
    }
    else
    {
      OUTLINED_FUNCTION_68_12();
    }
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_68_12();
  }
  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v3;
  *(_DWORD *)(a2 + 56) = v8;
}

BOOL sub_1C18B1A3C()
{
  return (sub_1C18B40A8() & 1) == 0;
}

BOOL sub_1C18B1A58()
{
  _QWORD *v0;

  return ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))() & 1) == 0;
}

void *sub_1C18B1A8C()
{
  if ((sub_1C18B40A8() & 1) != 0)
    return sub_1C18B43FC();
  else
    return 0;
}

void sub_1C18B1AB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_preprocessedEntity);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_preprocessedEntity) = a1;

}

void sub_1C18B1AC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___addButtonParameter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___addButtonParameter);
  if (!v2)
  {
    OUTLINED_FUNCTION_66_2();
    v3 = sub_1C18B56D4(v0);
    *(_QWORD *)(v0 + v1) = v3;
    v4 = v3;
    OUTLINED_FUNCTION_49_2();
    v2 = 0;
  }
  v5 = v2;
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C18B1B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  __CFString *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;

  v2 = OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___tableParameter;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___tableParameter);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___tableParameter);
  }
  else
  {
    v4 = v1;
    OUTLINED_FUNCTION_10_0(a1, (unint64_t *)&unk_1EF6FDDB0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1B3BEB0;
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 32) = CFSTR("Key");
    strcpy((char *)(inited + 40), "tableTemplate");
    *(_WORD *)(inited + 54) = -4864;
    type metadata accessor for Key(0);
    sub_1C15BC148((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
    v6 = CFSTR("Key");
    v7 = sub_1C1B0F170();
    sub_1C163A904(v7);
    OUTLINED_FUNCTION_63_6();
    v8 = objc_allocWithZone((Class)type metadata accessor for WFTableTemplateEntityUpdaterParameter());
    OUTLINED_FUNCTION_15_9(v8, sel_initWithDefinition_);
    OUTLINED_FUNCTION_38_5();
    v9 = inited + OBJC_IVAR____TtC11WorkflowKit37WFTableTemplateEntityUpdaterParameter_delegate;
    OUTLINED_FUNCTION_4_4();
    *(_QWORD *)(v9 + 8) = &protocol witness table for WFEntityUpdatingAction;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v4 + v2) = inited;
    v10 = (id)inited;
    OUTLINED_FUNCTION_292();
    v3 = 0;
  }
  v11 = v3;
  return v4;
}

id sub_1C18B1CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  objc_class *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  v2 = OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___batchExecutor;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___batchExecutor);
  if (v3)
  {
    v4 = *(id *)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction____lazy_storage___batchExecutor);
  }
  else
  {
    v5 = OUTLINED_FUNCTION_8_3(a1, sel_executorOptions);
    v4 = OUTLINED_FUNCTION_8_3((uint64_t)v5, sel_progress);
    v6 = (objc_class *)type metadata accessor for BatchActionExecutor();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_queuedActionIdentifiers] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_connection] = 0;
    swift_unknownObjectWeakInit();
    v8 = &v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_provider];
    *(_QWORD *)&v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_provider + 8] = 0;
    swift_unknownObjectWeakInit();
    v9 = (uint64_t)&v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_continuation];
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FF7C8);
    OUTLINED_FUNCTION_62_4(v9, v11, v12, v10);
    *(_QWORD *)&v7[OBJC_IVAR____TtC11WorkflowKit19BatchActionExecutor_options] = v5;
    *((_QWORD *)v8 + 1) = &off_1E7AE4248;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectWeakAssign();
    v18.receiver = v7;
    v18.super_class = v6;
    v13 = v5;
    v14 = objc_msgSendSuper2(&v18, sel_init);

    *(_QWORD *)(v1 + v2) = v14;
    v15 = v14;
    OUTLINED_FUNCTION_49_2();
    v3 = 0;
  }
  v16 = v3;
  return v4;
}

uint64_t sub_1C18B1E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1C18B1E4C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;

  v2 = OUTLINED_FUNCTION_34_2(a1, sel_value);
  v3 = objc_msgSend(v2, sel_valueType);

  v5 = OUTLINED_FUNCTION_34_2(v4, sel_value);
  v6 = OUTLINED_FUNCTION_50_3((uint64_t)v5, sel_fullyQualifiedLinkActionIdentifier);
  v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (!v7)
  {
    sub_1C1B0F224();
    v7 = (id)sub_1C1B0F1F4();
    OUTLINED_FUNCTION_34();
  }
  sub_1C17DD98C(*(void **)(v1 + 128));
  if (v8)
  {
    v9 = (void *)sub_1C1B0F1F4();
    OUTLINED_FUNCTION_56();
  }
  else
  {
    v9 = 0;
  }
  v10 = *(void **)(v1 + 128);
  v11 = objc_msgSend(v3, sel_wf_contentCollectionFromLinkValue_appBundleIdentifier_displayedBundleIdentifier_, v5, v7, v9);

  objc_msgSend(v10, sel_setOutput_, v11);
  sub_1C18B1948(v12, (uint64_t)&v29);
  v14 = v29;
  v13 = v30;
  *(_QWORD *)(v1 + 136) = v29;
  *(_QWORD *)(v1 + 144) = v13;
  v15 = v32;
  *(_QWORD *)(v1 + 152) = v31;
  *(_QWORD *)(v1 + 160) = v15;
  v16 = v34;
  *(_QWORD *)(v1 + 168) = v33;
  *(_QWORD *)(v1 + 176) = v16;
  v17 = v35;
  *(_QWORD *)(v1 + 184) = v35;
  *(_DWORD *)(v1 + 208) = v36;
  if (v17)
  {
    if (v15)
    {
      OUTLINED_FUNCTION_25_6();
      v18 = v15;
      OUTLINED_FUNCTION_66();
      OUTLINED_FUNCTION_17_1();
      v19 = objc_msgSend(v18, (SEL)&selRef_xcTestMethodName);
      if (v19)
      {
        v20 = v19;
        v29 = 0;
        v30 = 0;
        sub_1C1B0F218();

        v21 = v30;
        v28 = v29;
        OUTLINED_FUNCTION_24_26(v14);
        if (v21)
        {
          v22 = sub_1C162BAF0(v28);
          *(_QWORD *)(v1 + 192) = v22;
          v23 = v22;
          swift_bridgeObjectRelease();
          if (v23)
          {
            v24 = *(void **)(v1 + 128);
            *(_QWORD *)(v1 + 16) = v1;
            *(_QWORD *)(v1 + 24) = sub_1C18B2104;
            v25 = swift_continuation_init();
            *(_QWORD *)(v1 + 80) = MEMORY[0x1E0C809B0];
            v26 = v1 + 80;
            *(_QWORD *)(v26 + 8) = 0x40000000;
            OUTLINED_FUNCTION_73_10(v25, (uint64_t)sub_1C18B7EF4);
            objc_msgSend(v24, sel_showChronoControlIfPossibleForIntent_completionHandler_, v23, v26);
            return swift_continuation_await();
          }
        }
      }
      else
      {
        OUTLINED_FUNCTION_24_26(v14);
      }
    }
    OUTLINED_FUNCTION_24_26(v14);
  }
  return OUTLINED_FUNCTION_38_16(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C18B2104()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_36_4();
  *(_QWORD *)(v0 + 200) = v1;
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B2144()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  sub_1C17DDB2C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(void **)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));

  return OUTLINED_FUNCTION_13_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C18B2184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;

  v9 = *(void **)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 184);
  swift_willThrow();
  v2 = OUTLINED_FUNCTION_89_7();
  sub_1C17DDB2C(v2, v3, v4, v5, v6, v7, v1);

  return OUTLINED_FUNCTION_85_7(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C18B2200(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t a1, uint64_t a2, void *a3), uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_1C18B226C(a1, a2, (int)&selRef_askForParameterValueForParameterName_request_dialogString_, (int)&unk_1E7AE9850, (int)sub_1C18BAFE8, (int)&block_descriptor_30, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28);
}

void sub_1C18B2224(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t a1, uint64_t a2, void *a3), uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_1C18B226C(a1, a2, (int)&selRef_confirmParameterValueForParameterName_request_dialogString_, (int)&unk_1E7AE98A0, (int)sub_1C18BB028, (int)&block_descriptor_10_0, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28);
}

void sub_1C18B2248(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t a1, uint64_t a2, void *a3), uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_1C18B226C(a1, a2, (int)&selRef_disambiguateParameterForParameterName_request_dialogString_, (int)&unk_1E7AE98F0, (int)sub_1C18BB084, (int)&block_descriptor_17, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28);
}

void sub_1C18B226C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t aBlock, uint64_t a12, uint64_t (*a13)(uint64_t a1, uint64_t a2, void *a3), uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  SEL *v34;
  SEL *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_123_6();
  a27 = v29;
  a28 = v30;
  v59 = v31;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = 0x797469746E65;
  v40 = OUTLINED_FUNCTION_34_2(v39, sel_parameterName);
  v41 = sub_1C1B0F224();
  v43 = v42;

  v44 = 0xE600000000000000;
  if (v41 == 0x797469746E65 && v43 == 0xE600000000000000)
  {
    v47 = swift_bridgeObjectRelease();
  }
  else
  {
    v46 = OUTLINED_FUNCTION_20_0();
    v47 = swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
    {
      v48 = OUTLINED_FUNCTION_114_6(v47, sel_action);
      v38 = sub_1C18B28F4(v48);
      v44 = v49;

    }
  }
  v50 = OUTLINED_FUNCTION_34_2(v47, sel_dialog);

  if (v50)
  {
    v52 = OUTLINED_FUNCTION_34_2(v51, sel_dialog);
    if (v52)
    {
      v53 = v52;
      v54 = OUTLINED_FUNCTION_108();
      swift_unknownObjectWeakInit();
      v55 = (_QWORD *)OUTLINED_FUNCTION_108();
      v55[2] = v54;
      v55[3] = v38;
      v55[4] = v44;
      v55[5] = v37;
      a15 = v33;
      a16 = v55;
      aBlock = MEMORY[0x1E0C809B0];
      a12 = 1107296256;
      a13 = sub_1C18B83E0;
      a14 = v59;
      v56 = _Block_copy(&aBlock);
      v57 = v37;
      swift_release();
      objc_msgSend(v53, sel_getResultWithCompletionHandler_, v56);
      _Block_release(v56);

      OUTLINED_FUNCTION_60_9();
    }
    else
    {
      OUTLINED_FUNCTION_60_9();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (v44)
    {
      v60 = sub_1C1B0F1F4();
      OUTLINED_FUNCTION_29();
    }
    else
    {
      v60 = 0;
    }
    objc_msgSend(v28, *v35, v60, v37, 0);
    OUTLINED_FUNCTION_60_9();

  }
}

BOOL sub_1C18B2490(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1C18B1948(a1, (uint64_t)&v41);
  if (!v45)
    return 0;
  v2 = v42;
  v39 = v41;
  v3 = v43;
  v4 = v44;
  sub_1C18B18F4((uint64_t)&v41);
  v5 = *(_QWORD *)(v42 + 16);
  v6 = swift_bridgeObjectRelease();
  WFEntityUpdatingAction.possibleSubjectValues.getter(v6);
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  v40 = v2;
  if ((v4 & 0xFE) != 0)
  {
    v9 = 0;
  }
  else
  {
    v10 = (void *)sub_1C1B0F1F4();
    v36 = v3;
    v11 = v8;
    v12 = v5;
    v13 = objc_msgSend(v1, sel_parameterStateForKey_, v10);
    swift_unknownObjectRelease();

    v14 = v13 == 0;
    v5 = v12;
    v8 = v11;
    v9 = v14;
  }
  v15 = sub_1C18B40A8();
  if ((v15 & 1) != 0)
  {
    OUTLINED_FUNCTION_48_14(v15, v16, v17, v18, v19, v20, v21, v22, v35, v36, v39, v40);
    v23 = v5 >= v8;
  }
  else
  {
    v37 = v5;
    v24 = (void *)OUTLINED_FUNCTION_16_17();
    v25 = OUTLINED_FUNCTION_105_3(v1, sel_parameterStateForKey_);
    OUTLINED_FUNCTION_48_14((uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, v35, v37, v39, v40);

    if (!v25)
      return 0;
    OUTLINED_FUNCTION_11_0();
    v23 = v38 >= v8;
  }
  if (v23)
    v33 = 1;
  else
    v33 = v9;
  return (v33 & 1) == 0;
}

void sub_1C18B2618()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  WFEntityUpdatingAction.createTableRow()();
  v1 = v30;
  if (v30)
  {
    v19 = v31;
    v2 = v27;
    v21 = v28;
    v22 = v29;
    v4 = v25;
    v3 = v26;
    v5 = v0 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState;
    OUTLINED_FUNCTION_4_4();
    v6 = v27;
    OUTLINED_FUNCTION_28();
    v20 = v24;
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_149_5();
    sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160B5BC);
    v7 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 16);
    sub_1C18BB0F4(v7, (uint64_t (*)(BOOL))sub_1C160B5BC);
    v8 = *(_QWORD *)(v5 + 8);
    *(_QWORD *)(v8 + 16) = v7 + 1;
    v9 = v8 + (v7 << 6);
    *(_QWORD *)(v9 + 32) = v20;
    *(_QWORD *)(v9 + 40) = v4;
    v10 = v4;
    *(_QWORD *)(v9 + 48) = v3;
    *(_QWORD *)(v9 + 56) = v2;
    v11 = v2;
    *(_BYTE *)(v9 + 64) = v21;
    *(_QWORD *)(v9 + 72) = v22;
    *(_QWORD *)(v9 + 80) = v1;
    *(_BYTE *)(v9 + 88) = v19 & 1;
    *(_BYTE *)(v9 + 89) = BYTE1(v19) & 1;
    *(_BYTE *)(v9 + 90) = BYTE2(v19) & 1;
    *(_BYTE *)(v9 + 91) = HIBYTE(v19) & 1;
    swift_endAccess();
    sub_1C18B18F4((uint64_t)&v24);
    v12 = v24;
    v13 = v25;
    LOBYTE(v7) = v26;
    v14 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FF870));
    v15 = (char *)v14 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v14) + 0x60);
    *(_QWORD *)v15 = v12;
    *((_QWORD *)v15 + 1) = v13;
    v15[16] = v7;
    v23.receiver = v14;
    v23.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7025C0);
    v16 = objc_msgSendSuper2(&v23, sel_init);
    v17 = objc_allocWithZone((Class)WFAddButtonParameterStateUpdate);
    v18 = (void *)sub_1C1B0F1F4();
    objc_msgSend(v17, sel_initWithParameterKey_parameterState_, v18, v16);

    sub_1C17DDB2C(v20, v10, v3, v11, v21, v22, v1);
  }
  OUTLINED_FUNCTION_7_26();
}

double sub_1C18B281C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _UNKNOWN **v4;
  id v5;
  char v6;
  double result;
  _QWORD v8[2];
  __int128 v9;
  char v10;

  sub_1C1B0F170();
  v3 = sub_1C1B0F14C();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_17_1();
  UpdatableParameterState.init(serializedRepresentation:variableProvider:parameter:)(v3, v1, 0, (uint64_t)v8);
  if (v8[0] == 1)
  {
    v4 = (_UNKNOWN **)v8[1];
    v1 = 1;
  }
  else
  {
    v5 = (id)v1;
    OUTLINED_FUNCTION_42_5();
    v4 = &protocol witness table for WFEntityUpdatingAction;
  }
  v6 = v10;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v4;
  result = *(double *)&v9;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_1C18B28F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v29;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_metadataForParameterIdentifier);
  v4 = *(_QWORD *)(v3 + 64);
  v26 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v27 = (unint64_t)(v5 + 63) >> 6;
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_metadataForParameterIdentifier);
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v29 + 48) + 16 * i);
    v16 = *(void **)(*(_QWORD *)(v29 + 56) + 8 * i);
    OUTLINED_FUNCTION_37();
    v17 = v16;
    v18 = objc_msgSend(v17, sel_identifier);
    v19 = OUTLINED_FUNCTION_116_2();
    OUTLINED_FUNCTION_98_6();
    v20 = objc_msgSend(a1, sel_identifier);
    v21 = OUTLINED_FUNCTION_116_2();
    v23 = v22;

    if (v19 == v21 && v2 == v23)
    {
      OUTLINED_FUNCTION_158_2();
      OUTLINED_FUNCTION_45_2();

      return v15;
    }
    v25 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_29();

    if ((v25 & 1) != 0)
    {
      OUTLINED_FUNCTION_158_2();
      return v15;
    }
    result = OUTLINED_FUNCTION_54();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v12 >= v27)
      goto LABEL_28;
    v13 = *(_QWORD *)(v26 + 8 * v12);
    ++v9;
    if (v13)
      goto LABEL_18;
    v9 = v12 + 1;
    if (v12 + 1 >= v27)
      goto LABEL_28;
    v13 = *(_QWORD *)(v26 + 8 * v9);
    if (v13)
      goto LABEL_18;
    v9 = v12 + 2;
    if (v12 + 2 >= v27)
      goto LABEL_28;
    v13 = *(_QWORD *)(v26 + 8 * v9);
    if (v13)
      goto LABEL_18;
    v14 = v12 + 3;
    if (v14 >= v27)
    {
LABEL_28:
      OUTLINED_FUNCTION_158_2();
      return 0;
    }
    v13 = *(_QWORD *)(v26 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        v9 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_31;
        if (v9 >= v27)
          goto LABEL_28;
        v13 = *(_QWORD *)(v26 + 8 * v9);
        ++v14;
        if (v13)
          goto LABEL_18;
      }
    }
    v9 = v14;
LABEL_18:
    v7 = (v13 - 1) & v13;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C18B2B38(uint64_t a1)
{
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t *v4;
  int v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;

  v3 = *(void **)(a1 + 24);
  if (!v3)
    return 0;
  v4 = v1;
  v5 = *(unsigned __int8 *)(a1 + 32);
  OUTLINED_FUNCTION_25_6();
  v6 = v3;
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_17_1();
  v7 = objc_msgSend(v6, sel_value);
  if (!v7)
  {
    OUTLINED_FUNCTION_54();

    OUTLINED_FUNCTION_42_5();
    OUTLINED_FUNCTION_11_0();
    return 0;
  }
  v8 = v7;
  OUTLINED_FUNCTION_155_2();

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_11_0();
  if (!v62)
    return 0;
  v9 = OUTLINED_FUNCTION_122_6(*v1);
  sub_1C162BBF0(v61, v62, v9);
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_13();
  if (!v13)
    return 0;
  v14 = (void *)MEMORY[0x1E0DEA968];
  if ((v5 - 2) < 3)
  {
    if ((OUTLINED_FUNCTION_18_26() & 1) != 0 && (OUTLINED_FUNCTION_29_21(*v4) & 1) != 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (v15)
      {
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_42();
        OUTLINED_FUNCTION_0_36();
        v17 = v16;
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_1_44();
        if (qword_1EF6FB700 == -1)
          goto LABEL_32;
        goto LABEL_75;
      }
LABEL_33:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB450);
      v30 = OUTLINED_FUNCTION_108();
      *(_OWORD *)(v30 + 16) = xmmword_1C1B3BEB0;
      *(_QWORD *)(v30 + 56) = v14;
      *(_QWORD *)(v30 + 64) = sub_1C163CDAC();
      *(_QWORD *)(v30 + 32) = v11;
      *(_QWORD *)(v30 + 40) = v13;
      OUTLINED_FUNCTION_68();
LABEL_49:
      v18 = OUTLINED_FUNCTION_117_7();
      OUTLINED_FUNCTION_51();
      goto LABEL_57;
    }
    if ((OUTLINED_FUNCTION_152_3() & 1) != 0)
    {
      if ((OUTLINED_FUNCTION_119_7() & 1) == 0)
      {
        sub_1C1B0F260();
        OUTLINED_FUNCTION_155_0();
        if (v33)
        {
          OUTLINED_FUNCTION_4_36();
          OUTLINED_FUNCTION_2_42();
          OUTLINED_FUNCTION_0_36();
          v14 = v34;
          OUTLINED_FUNCTION_56();
          OUTLINED_FUNCTION_1_44();
          if (qword_1EF6FB700 != -1)
            swift_once();
          v35 = (id)qword_1EF6FC9E8;
          v36 = (void *)OUTLINED_FUNCTION_16_28();
          OUTLINED_FUNCTION_13();
          v37 = (void *)OUTLINED_FUNCTION_35_18();
          OUTLINED_FUNCTION_51();
          v38 = OUTLINED_FUNCTION_7_33(v14, sel_localizedStringForKey_value_table_, (uint64_t)v36);
          OUTLINED_FUNCTION_94_8();

          OUTLINED_FUNCTION_88_11();
          OUTLINED_FUNCTION_62_12();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB450);
        v39 = OUTLINED_FUNCTION_108();
        *(_OWORD *)(v39 + 16) = xmmword_1C1B3BEB0;
        v40 = OUTLINED_FUNCTION_34_2(v39, sel_localizedDefaultOutputName);
        OUTLINED_FUNCTION_116_2();
        OUTLINED_FUNCTION_150_2();
        *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v39 + 64) = sub_1C163CDAC();
        *(_QWORD *)(v39 + 32) = v14;
        *(_QWORD *)(v39 + 40) = v2;
        goto LABEL_49;
      }
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (!v20)
        goto LABEL_56;
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_20_27();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 == -1)
        goto LABEL_55;
      goto LABEL_76;
    }
    sub_1C1B0F260();
    OUTLINED_FUNCTION_155_0();
    if (v23)
    {
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_20_27();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 == -1)
        goto LABEL_55;
      goto LABEL_76;
    }
    goto LABEL_56;
  }
  if (v5)
  {
    if ((OUTLINED_FUNCTION_18_26() & 1) != 0 && (OUTLINED_FUNCTION_29_21(*v4) & 1) != 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (!v24)
        goto LABEL_33;
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      v17 = v25;
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 == -1)
      {
LABEL_32:
        v26 = (id)qword_1EF6FC9E8;
        v27 = (void *)OUTLINED_FUNCTION_16_28();
        OUTLINED_FUNCTION_13();
        v28 = (void *)OUTLINED_FUNCTION_35_18();
        OUTLINED_FUNCTION_51();
        v29 = OUTLINED_FUNCTION_7_33(v17, sel_localizedStringForKey_value_table_, (uint64_t)v27);
        OUTLINED_FUNCTION_94_8();

        OUTLINED_FUNCTION_88_11();
        OUTLINED_FUNCTION_62_12();
        v14 = (void *)MEMORY[0x1E0DEA968];
        goto LABEL_33;
      }
      goto LABEL_75;
    }
    if ((OUTLINED_FUNCTION_152_3() & 1) == 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (v42)
      {
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_42();
        OUTLINED_FUNCTION_0_36();
        OUTLINED_FUNCTION_20_27();
        OUTLINED_FUNCTION_1_44();
        if (qword_1EF6FB700 == -1)
        {
LABEL_55:
          v43 = (id)qword_1EF6FC9E8;
          v44 = (void *)OUTLINED_FUNCTION_17_24();
          OUTLINED_FUNCTION_13();
          v45 = (void *)OUTLINED_FUNCTION_34_19();
          OUTLINED_FUNCTION_56();
          v46 = OUTLINED_FUNCTION_7_33(v14, sel_localizedStringForKey_value_table_, (uint64_t)v44);
          OUTLINED_FUNCTION_94_8();

          OUTLINED_FUNCTION_88_11();
          goto LABEL_56;
        }
LABEL_76:
        swift_once();
        goto LABEL_55;
      }
LABEL_56:
      v18 = sub_1C1B0F200();
      goto LABEL_57;
    }
    if ((OUTLINED_FUNCTION_119_7() & 1) != 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (v32)
      {
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_42();
        OUTLINED_FUNCTION_0_36();
        OUTLINED_FUNCTION_20_27();
        OUTLINED_FUNCTION_1_44();
        if (qword_1EF6FB700 == -1)
          goto LABEL_55;
        goto LABEL_76;
      }
      goto LABEL_56;
    }
    sub_1C1B0F260();
    OUTLINED_FUNCTION_79_13();
    if (v53)
    {
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      v14 = v54;
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 != -1)
        swift_once();
      v55 = (id)qword_1EF6FC9E8;
      v56 = (void *)OUTLINED_FUNCTION_16_28();
      OUTLINED_FUNCTION_13();
      v57 = (void *)OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_51();
      v58 = OUTLINED_FUNCTION_7_33(v14, sel_localizedStringForKey_value_table_, (uint64_t)v56);
      OUTLINED_FUNCTION_94_8();

      OUTLINED_FUNCTION_88_11();
      OUTLINED_FUNCTION_62_12();
    }
  }
  else
  {
    if ((OUTLINED_FUNCTION_18_26() & 1) != 0 && (OUTLINED_FUNCTION_29_21(*v4) & 1) != 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (!v21)
        goto LABEL_33;
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      v17 = v22;
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 == -1)
        goto LABEL_32;
LABEL_75:
      swift_once();
      goto LABEL_32;
    }
    if ((OUTLINED_FUNCTION_152_3() & 1) == 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (v41)
      {
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_42();
        OUTLINED_FUNCTION_0_36();
        OUTLINED_FUNCTION_20_27();
        OUTLINED_FUNCTION_1_44();
        if (qword_1EF6FB700 == -1)
          goto LABEL_55;
        goto LABEL_76;
      }
      goto LABEL_56;
    }
    if ((OUTLINED_FUNCTION_119_7() & 1) != 0)
    {
      sub_1C1B0F260();
      OUTLINED_FUNCTION_155_0();
      if (v31)
      {
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_42();
        OUTLINED_FUNCTION_0_36();
        OUTLINED_FUNCTION_20_27();
        OUTLINED_FUNCTION_1_44();
        if (qword_1EF6FB700 == -1)
          goto LABEL_55;
        goto LABEL_76;
      }
      goto LABEL_56;
    }
    sub_1C1B0F260();
    OUTLINED_FUNCTION_79_13();
    if (v47)
    {
      OUTLINED_FUNCTION_4_36();
      OUTLINED_FUNCTION_2_42();
      OUTLINED_FUNCTION_0_36();
      v14 = v48;
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_1_44();
      if (qword_1EF6FB700 != -1)
        swift_once();
      v49 = (id)qword_1EF6FC9E8;
      v50 = (void *)OUTLINED_FUNCTION_16_28();
      OUTLINED_FUNCTION_13();
      v51 = (void *)OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_51();
      v52 = OUTLINED_FUNCTION_7_33(v14, sel_localizedStringForKey_value_table_, (uint64_t)v50);
      OUTLINED_FUNCTION_94_8();

      OUTLINED_FUNCTION_88_11();
      OUTLINED_FUNCTION_62_12();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB450);
  v59 = OUTLINED_FUNCTION_108();
  *(_OWORD *)(v59 + 16) = xmmword_1C1B3BEB0;
  v60 = OUTLINED_FUNCTION_34_2(v59, sel_localizedDefaultOutputName);
  OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_150_2();
  *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v59 + 64) = sub_1C163CDAC();
  *(_QWORD *)(v59 + 32) = v14;
  *(_QWORD *)(v59 + 40) = v2;
  v18 = OUTLINED_FUNCTION_117_7();
  OUTLINED_FUNCTION_51();
LABEL_57:
  OUTLINED_FUNCTION_56();
  if ((OUTLINED_FUNCTION_121_9(*v4) & 1) != 0)
  {
    OUTLINED_FUNCTION_20();
  }
  else
  {
    sub_1C15DFF38();
    v18 = sub_1C1B0F8F0();
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_29();
  }
  return v18;
}

uint64_t sub_1C18B37D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;

  v42[0] = a1;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB270);
  if (!swift_dynamicCast()
    || (v7 = sub_1C1B0F224(), v9 = sub_1C162BAEC(v7, v8), swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), !v9)
    || (v42[0] = v9, (swift_dynamicCast() & 1) == 0))
  {
    swift_unknownObjectRelease();
LABEL_25:

    result = swift_unknownObjectRelease();
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 16) = 0;
    return result;
  }
  if (!sub_1C162BAEC(0xD00000000000001DLL, 0x80000001C1B631A0))
  {
    swift_unknownObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_29;
  }
  v32 = sub_1C1B0F50C();
  v10 = sub_1C162BAEC(0xD000000000000020, 0x80000001C1B63150);
  if (!v10
    || (v42[0] = v10,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FA880),
        result = swift_dynamicCast(),
        (result & 1) == 0))
  {
    v41 = MEMORY[0x1E0DEE9D8];
    goto LABEL_32;
  }
  v12 = v48;
  if (!(v48 >> 62))
  {
    v13 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_10;
LABEL_31:
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C1B0FB3C();
  result = swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_31;
LABEL_10:
  if (v13 >= 1)
  {
    v14 = 0;
    v38 = v48 & 0xC000000000000001;
    v41 = MEMORY[0x1E0DEE9D8];
    v36 = a2;
    v37 = a4;
    v34 = v48;
    v35 = a3;
    v33 = v13;
    do
    {
      if (v38)
      {
        v15 = MEMORY[0x1C3BB22A8](v14, v12);
      }
      else
      {
        v15 = *(_QWORD *)(v12 + 8 * v14 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v16 = a3;
      RowTemplatePropertySetterParameterState.init(serializedRepresentation:variableProvider:parameter:)(v15, a2, a3, (uint64_t)v42);
      v17 = v46;
      if (v46)
      {
        v18 = v42[0];
        v19 = v42[1];
        v20 = v42[2];
        v21 = v44;
        v39 = v45;
        v22 = v47;
        v23 = v43;
        v24 = v43;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v40 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C160B5BC();
          v41 = v27;
        }
        v25 = *(_QWORD *)(v41 + 16);
        if (v25 >= *(_QWORD *)(v41 + 24) >> 1)
        {
          sub_1C160B5BC();
          v41 = v28;
        }
        *(_QWORD *)(v41 + 16) = v25 + 1;
        v26 = v41 + (v25 << 6);
        *(_QWORD *)(v26 + 32) = v18;
        *(_QWORD *)(v26 + 40) = v19;
        *(_QWORD *)(v26 + 48) = v20;
        *(_QWORD *)(v26 + 56) = v23;
        *(_BYTE *)(v26 + 64) = v40;
        *(_QWORD *)(v26 + 72) = v39;
        *(_QWORD *)(v26 + 80) = v17;
        *(_BYTE *)(v26 + 88) = v22 & 1;
        *(_BYTE *)(v26 + 89) = BYTE1(v22) & 1;
        *(_BYTE *)(v26 + 90) = BYTE2(v22) & 1;
        *(_BYTE *)(v26 + 91) = HIBYTE(v22) & 1;
        swift_unknownObjectRelease();
        sub_1C17DDB2C(v18, v19, v20, v23, v40, v39, v17);
        a2 = v36;
        a4 = v37;
        v12 = v34;
        a3 = v35;
        v13 = v33;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
LABEL_32:
    v29 = sub_1C162BAEC(0xD00000000000001DLL, 0x80000001C1B63180);
    swift_bridgeObjectRelease();
    if (v29)
    {
      objc_opt_self();
      v30 = (void *)swift_dynamicCastObjCClass();
      if (v30)
      {
        v31 = objc_msgSend(v30, sel_BOOLValue);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_37:

        result = swift_unknownObjectRelease();
        *(_QWORD *)a4 = v32;
        *(_QWORD *)(a4 + 8) = v41;
        *(_BYTE *)(a4 + 16) = v31;
        return result;
      }
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v31 = 0;
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C18B3CB8@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;

  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB270);
  if (!OUTLINED_FUNCTION_61_1()
    || (v4 = sub_1C1B0F224(), v6 = sub_1C162BAEC(v4, v5), OUTLINED_FUNCTION_56(), OUTLINED_FUNCTION_20(), !v6)
    || (OUTLINED_FUNCTION_61_1() & 1) == 0)
  {
    OUTLINED_FUNCTION_3_9();
LABEL_25:

    result = swift_unknownObjectRelease();
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
    return result;
  }
  if (!OUTLINED_FUNCTION_77_10((uint64_t)"WFActionParameterFilterPrefix"))
  {
    OUTLINED_FUNCTION_3_9();
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  objc_opt_self();
  if (!OUTLINED_FUNCTION_8_0())
  {
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_3_9();
    goto LABEL_29;
  }
  v7 = sub_1C1B0F50C();
  v8 = sub_1C162BAEC(0xD000000000000020, 0x80000001C1B63150);
  v32 = v7;
  if (!v8
    || (v36 = v8,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FA880),
        result = OUTLINED_FUNCTION_61_1(),
        (result & 1) == 0))
  {
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_30;
  }
  if (!(v42 >> 62))
  {
    v10 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_10;
LABEL_37:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1C1B0FB3C();
  result = OUTLINED_FUNCTION_34();
  if (!v10)
    goto LABEL_37;
LABEL_10:
  if (v10 >= 1)
  {
    v11 = v10;
    v12 = 0;
    v13 = v42;
    v14 = MEMORY[0x1E0DEE9D8];
    v35 = a2;
    v33 = v11;
    v34 = a1;
    do
    {
      if ((v42 & 0xC000000000000001) != 0)
        MEMORY[0x1C3BB22A8](v12, v13);
      else
        OUTLINED_FUNCTION_149_5();
      OUTLINED_FUNCTION_149_5();
      swift_unknownObjectRetain();
      v15 = a1;
      RowTemplateConditionalParameterState.init(serializedRepresentation:variableProvider:parameter:)();
      if (v37)
      {
        v16 = v41;
        OUTLINED_FUNCTION_66();
        OUTLINED_FUNCTION_33();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v21 = OUTLINED_FUNCTION_204();
          sub_1C160BD04(v21, v22, v23, v24);
          v14 = v25;
        }
        v18 = *(_QWORD *)(v14 + 16);
        v17 = *(_QWORD *)(v14 + 24);
        v19 = v14;
        if (v18 >= v17 >> 1)
        {
          v26 = OUTLINED_FUNCTION_101_3(v17);
          sub_1C160BD04(v26, v18 + 1, 1, v27);
          v19 = v28;
        }
        *(_QWORD *)(v19 + 16) = v18 + 1;
        v14 = v19;
        v20 = v19 + 48 * v18;
        *(_QWORD *)(v20 + 32) = v36;
        *(_QWORD *)(v20 + 40) = v37;
        *(_BYTE *)(v20 + 48) = v38 & 1;
        *(_QWORD *)(v20 + 56) = v39;
        *(_QWORD *)(v20 + 64) = v40;
        *(_QWORD *)(v20 + 72) = v41;
        swift_unknownObjectRelease();
        sub_1C16F2800(v36, v37, v38, v39, v40, v41);
        a2 = v35;
        v11 = v33;
        a1 = v34;
        v13 = v42;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v12;
    }
    while (v11 != v12);
    OUTLINED_FUNCTION_13();
LABEL_30:
    v29 = OUTLINED_FUNCTION_77_10((uint64_t)"WFContentPredicateBoundedDate");
    OUTLINED_FUNCTION_20();
    if (v29)
    {
      objc_opt_self();
      v30 = (void *)OUTLINED_FUNCTION_8_0();
      if (v30)
      {
        v31 = objc_msgSend(v30, sel_BOOLValue);
        OUTLINED_FUNCTION_11_0();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_3_9();
LABEL_35:

        result = swift_unknownObjectRelease();
        *(_QWORD *)a2 = v32;
        *(_QWORD *)(a2 + 8) = v14;
        *(_BYTE *)(a2 + 16) = v31;
        return result;
      }
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_3_9();
    swift_unknownObjectRelease();
    v31 = 0;
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C18B40A8()
{
  uint64_t *v0;
  uint64_t result;
  void *v2;
  id v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[5];

  result = OUTLINED_FUNCTION_30_17(*v0);
  if (!result)
    return result;
  v2 = (void *)result;
  v3 = objc_msgSend((id)result, sel_systemProtocolMetadata);

  type metadata accessor for LNSystemEntityProtocolIdentifier(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FA8B0);
  sub_1C15BC148((unint64_t *)&qword_1EF700FE0, (uint64_t (*)(uint64_t))type metadata accessor for LNSystemEntityProtocolIdentifier, (uint64_t)&unk_1C1B3D88C);
  sub_1C1B0F164();

  sub_1C1811A0C(v18);
  v4 = v18[1];
  v5 = v18[3];
  v6 = v18[4];
  v7 = (unint64_t)(v18[2] + 64) >> 6;
  result = OUTLINED_FUNCTION_33();
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_23;
    }
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    if (v8 >= v7)
      goto LABEL_31;
    v9 = *(_QWORD *)(v4 + 8 * v8);
    v10 = v5 + 1;
    if (!v9)
    {
      v10 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_31;
      v9 = *(_QWORD *)(v4 + 8 * v10);
      if (!v9)
      {
        v10 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_31;
        v9 = *(_QWORD *)(v4 + 8 * v10);
        if (!v9)
        {
          v10 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_31;
          v9 = *(_QWORD *)(v4 + 8 * v10);
          if (!v9)
          {
            v10 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_31;
            v9 = *(_QWORD *)(v4 + 8 * v10);
            if (!v9)
            {
              v10 = v5 + 6;
              if (v5 + 6 >= v7)
                goto LABEL_31;
              v9 = *(_QWORD *)(v4 + 8 * v10);
              if (!v9)
                break;
            }
          }
        }
      }
    }
LABEL_22:
    v6 = (v9 - 1) & v9;
    v5 = v10;
LABEL_23:
    v12 = sub_1C1B0F224();
    v14 = v13;
    if (v12 == OUTLINED_FUNCTION_49_4() && v14 == v15)
    {
      OUTLINED_FUNCTION_45_2();
LABEL_30:
      OUTLINED_FUNCTION_13();
      swift_release();
      return 1;
    }
    v17 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_54();
    result = OUTLINED_FUNCTION_34();
    if ((v17 & 1) != 0)
      goto LABEL_30;
  }
  v11 = v5 + 7;
  while (v11 < v7)
  {
    v9 = *(_QWORD *)(v4 + 8 * v11++);
    if (v9)
    {
      v10 = v11 - 1;
      goto LABEL_22;
    }
  }
LABEL_31:
  OUTLINED_FUNCTION_13();
  swift_release();
  return 0;
}

uint64_t WFEntityUpdatingAction.getValueForParameterData(_:ofProcessedParameters:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1C18B430C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)OUTLINED_FUNCTION_116_9();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF7025D0);
  *v5 = v0;
  v5[1] = sub_1C18B43C4;
  OUTLINED_FUNCTION_19_0();
  return sub_1C1B0FC08();
}

uint64_t sub_1C18B43C4()
{
  OUTLINED_FUNCTION_56_1();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

void *sub_1C18B43FC()
{
  uint64_t *v0;
  void *result;
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  result = (void *)OUTLINED_FUNCTION_30_17(*v0);
  if (result)
  {
    v2 = (unint64_t)result;
    v3 = objc_msgSend(result, sel_properties);
    OUTLINED_FUNCTION_117_2();
    OUTLINED_FUNCTION_10_0(v4, qword_1EF6FB360);
    OUTLINED_FUNCTION_50_2();
    OUTLINED_FUNCTION_292();
    if (v2 >> 62)
    {
      OUTLINED_FUNCTION_28();
      v5 = OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_15();
    }
    else
    {
      v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    OUTLINED_FUNCTION_15();
    return (void *)(v5 == 1);
  }
  return result;
}

void WFEntityUpdatingAction.createTableRow()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unsigned __int8 v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_19_1();
  v51 = v0;
  v52 = v1;
  v3 = v2;
  sub_1C18B281C((uint64_t)&v45);
  v5 = v45;
  if ((_QWORD)v45 == 1)
    goto LABEL_14;
  v6 = *((_QWORD *)&v45 + 1);
  v7 = v46;
  v8 = v47;
  v9 = OUTLINED_FUNCTION_8_3(v4, sel_availableSubjectValues);
  v10 = (_QWORD *)sub_1C1B0F380();

  if (!v10[2])
  {
    OUTLINED_FUNCTION_13();
    v37 = OUTLINED_FUNCTION_165_0();
    sub_1C1605ED4(v37, v38, v39, v40);
LABEL_14:
    *(_OWORD *)(v3 + 44) = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_OWORD *)(v3 + 32) = 0u;
    *(_OWORD *)v3 = 0u;
    return;
  }
  v11 = v10[4];
  v43 = (void *)v10[5];
  v44 = v11;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13();
  v12 = sub_1C1B0DD00();
  v41 = (uint64_t)&v41;
  v42 = v6;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16);
  OUTLINED_FUNCTION_52();
  v19 = v18 - v17;
  v20 = *((id *)&v7 + 1);
  OUTLINED_FUNCTION_25_6();
  swift_unknownObjectRetain();
  sub_1C1B0DCF4();
  v21 = sub_1C1B0DCC4();
  v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v12);
  *(_QWORD *)&v45 = v5;
  *((_QWORD *)&v45 + 1) = v42;
  v46 = v7;
  v47 = v8;
  v48 = v21;
  v49 = v23;
  v50 = 16842752;
  v24 = v43;
  OUTLINED_FUNCTION_24_14();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_15_9(objc_allocWithZone((Class)WFStringSubstitutableState), sel_initWithValue_);
  OUTLINED_FUNCTION_52_5();
  RowTemplatePropertySetterParameterState.subject.setter(v24);
  v25 = OUTLINED_FUNCTION_165_0();
  sub_1C1605ED4(v25, v26, v27, v28);
  v29 = v47;
  v30 = v48;
  v31 = v49;
  if (BYTE1(v50))
    v32 = 256;
  else
    v32 = 0;
  v33 = v32 | v50;
  if (BYTE2(v50))
    v34 = 0x10000;
  else
    v34 = 0;
  if (HIBYTE(v50))
    v35 = 0x1000000;
  else
    v35 = 0;
  v36 = v46;
  *(_OWORD *)v3 = v45;
  *(_OWORD *)(v3 + 16) = v36;
  *(_QWORD *)(v3 + 32) = v29;
  *(_QWORD *)(v3 + 40) = v30;
  *(_QWORD *)(v3 + 48) = v31;
  *(_DWORD *)(v3 + 56) = v33 | v34 | v35;
}

uint64_t sub_1C18B4698(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v6)(uint64_t, void *, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  if (a2)
    v7 = sub_1C1B0F164();
  else
    v7 = 0;
  swift_retain();
  v8 = a3;
  v9 = a4;
  v6(v7, a3, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t static WFEntityUpdatingAction.entityParameterName.getter()
{
  return 0x797469746E65;
}

void sub_1C18B4798()
{
  OUTLINED_FUNCTION_53_14();
  __break(1u);
}

void sub_1C18B47D8()
{
  OUTLINED_FUNCTION_53_14();
  __break(1u);
}

void WFEntityUpdatingAction.__allocating_init(identifier:metadata:metadataForParameterIdentifier:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)()
{
  objc_class *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_19_1();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  objc_allocWithZone(v0);
  WFEntityUpdatingAction.init(identifier:metadata:metadataForParameterIdentifier:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)(v16, v14, v12, v10, v8, v6, v4, v2);
  OUTLINED_FUNCTION_10_1();
}

id sub_1C18B4990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id result;

  OUTLINED_FUNCTION_19_1();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_66_2();
  v5 = OUTLINED_FUNCTION_8_3(v4, sel_identifier);
  v6 = OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_98_6();
  v8 = OUTLINED_FUNCTION_22_7(v7, sel_metadata);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_metadataForParameterIdentifier);
  v10 = OUTLINED_FUNCTION_16_1();
  v11 = OUTLINED_FUNCTION_22_7(v10, sel_definition);
  if (!v11)
  {
    sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
    v12 = OUTLINED_FUNCTION_63_6();
    _s3__C3KeyVMa_0(v12);
    sub_1C15BC148((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
    v13 = sub_1C1B0F170();
    sub_1C163A920(v13);
    v11 = v14;
  }
  v15 = OUTLINED_FUNCTION_68();
  v16 = OUTLINED_FUNCTION_22_7(v15, sel_appIntentDescriptor);
  v17 = OUTLINED_FUNCTION_22_7((uint64_t)v16, sel_fullyQualifiedLinkActionIdentifier);
  v18 = objc_allocWithZone((Class)type metadata accessor for WFEntityUpdatingAction());
  result = WFEntityUpdatingAction.init(identifier:metadata:metadataForParameterIdentifier:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)(v6, v1, v8, v9, v11, v3, v16, v17);
  if (result)
    return (id)swift_dynamicCastClassUnconditional();
  __break(1u);
  return result;
}

void sub_1C18B4BCC()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  objc_super v8;

  v1 = (void *)OUTLINED_FUNCTION_30_17(*v0);
  if (v1 && (v2 = sub_1C18BB1C8(v1), v3))
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_allocWithZone(MEMORY[0x1E0CBD728]);
    sub_1C17DB740(v4, v5);
  }
  else
  {
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
    v7 = objc_msgSendSuper2(&v8, sel_displayableAppDescriptor);
  }
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C18B4CA0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __CFString *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  v2 = objc_msgSendSuper2(&v10, sel_disabledOnPlatforms);
  v3 = OUTLINED_FUNCTION_63_6();
  type metadata accessor for WFExecutionPlatform(v3);
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_292();
  v4 = CFSTR("XR");
  OUTLINED_FUNCTION_28();
  v5 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_204();
    sub_1C160C154();
    v5 = v8;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_1C160C154();
    v5 = v9;
  }
  *(_QWORD *)(v5 + 16) = v6 + 1;
  *(_QWORD *)(v5 + 8 * v6 + 32) = v4;

  OUTLINED_FUNCTION_15();
  return v5;
}

void *sub_1C18B4D80()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v1 = OUTLINED_FUNCTION_30_17(*v0);
  v2 = (void *)v1;
  if (v1)
  {
    v3 = OUTLINED_FUNCTION_34_2(v1, sel_displayRepresentation);
    OUTLINED_FUNCTION_117_2();
    v5 = OUTLINED_FUNCTION_8_3(v4, sel_name);
    OUTLINED_FUNCTION_292();
    v7 = OUTLINED_FUNCTION_50_3(v6, sel_locale);
    v8 = OUTLINED_FUNCTION_170_2();
    v9 = *(_QWORD *)(v8 - 8);
    MEMORY[0x1E0C80A78](v8, v10, v11, v12);
    OUTLINED_FUNCTION_52();
    v15 = v14 - v13;
    sub_1C1B0DD30();

    sub_1C1B0DD0C();
    OUTLINED_FUNCTION_172(v15, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    v16 = (void *)sub_1C1B0F1F4();
    OUTLINED_FUNCTION_34();
    v17 = OUTLINED_FUNCTION_15_9(v2, sel_localizedStringForLocaleIdentifier_);

    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_65_8();
  }
  return v2;
}

void sub_1C18B4F40()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43[5];

  OUTLINED_FUNCTION_19_1();
  v1 = v0;
  v3 = v2;
  v43[4] = MEMORY[0x1E0DEE9E8];
  v4 = (void *)OUTLINED_FUNCTION_30_17(*v0);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_displayRepresentation);

    v8 = OUTLINED_FUNCTION_28_4(v7, sel_name);
    v10 = OUTLINED_FUNCTION_50_3(v9, sel_locale);
    v11 = OUTLINED_FUNCTION_170_2();
    v12 = *(_QWORD *)(v11 - 8);
    MEMORY[0x1E0C80A78](v11, v13, v14, v15);
    OUTLINED_FUNCTION_52();
    v18 = v17 - v16;
    sub_1C1B0DD30();

    sub_1C1B0DD0C();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
    v19 = (void *)sub_1C1B0F1F4();
    OUTLINED_FUNCTION_51();
    v20 = OUTLINED_FUNCTION_15_9(v8, sel_localizedStringForLocaleIdentifier_);

    v21 = sub_1C1B0F224();
    v23 = v22;

    sub_1C17A0310(v43, v21, v23);
    swift_bridgeObjectRelease();
  }
  v24 = v3;
  v25 = OUTLINED_FUNCTION_33();
  v26 = sub_1C18B11F4(v25, v24);
  OUTLINED_FUNCTION_13();
  sub_1C1830C34(v26);
  v27 = OUTLINED_FUNCTION_122_6(*v1);
  sub_1C18B0728(v27);
  v29 = v28;
  OUTLINED_FUNCTION_13();
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    OUTLINED_FUNCTION_28();
    v31 = 0;
    v32 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v33 = *(_QWORD *)(v29 + 8 * v31 + 32);
      v34 = *(_QWORD *)(v33 + 16);
      v35 = *(_QWORD *)(v32 + 16);
      if (__OFADD__(v35, v34))
        break;
      OUTLINED_FUNCTION_37();
      if (!OUTLINED_FUNCTION_102_9() || v35 + v34 > *(_QWORD *)(v32 + 24) >> 1)
      {
        OUTLINED_FUNCTION_47_13();
        v32 = v36;
      }
      if (*(_QWORD *)(v33 + 16))
      {
        v37 = *(_QWORD *)(v32 + 16);
        if ((*(_QWORD *)(v32 + 24) >> 1) - v37 < v34)
          goto LABEL_26;
        v38 = v32 + 16 * v37 + 32;
        if (v33 + 32 < v38 + 16 * v34 && v38 < v33 + 32 + 16 * v34)
          goto LABEL_28;
        swift_arrayInitWithCopy();
        if (v34)
        {
          v40 = *(_QWORD *)(v32 + 16);
          v41 = __OFADD__(v40, v34);
          v42 = v40 + v34;
          if (v41)
            goto LABEL_27;
          *(_QWORD *)(v32 + 16) = v42;
        }
      }
      else if (v34)
      {
        goto LABEL_25;
      }
      OUTLINED_FUNCTION_54();
      if (v30 == ++v31)
      {
        OUTLINED_FUNCTION_15();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1C1B0FB60();
    __break(1u);
  }
  else
  {
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_23:
    OUTLINED_FUNCTION_15();
    sub_1C1830C34(v32);
    sub_1C163D1D8();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_10_1();
  }
}

_QWORD *sub_1C18B52E0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10[2];
  unsigned __int8 v11;
  objc_super v12;
  _QWORD *v13;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  v2 = objc_msgSendSuper2(&v12, sel_serializedParameters);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB380);
  sub_1C1B0F164();
  OUTLINED_FUNCTION_49_2();
  v13 = v0;
  sub_1C18B18F4((uint64_t)v10);
  v3 = sub_1C16ECCA4(v10[0], v10[1], v11);
  OUTLINED_FUNCTION_20();
  if (v3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = v0;
    OUTLINED_FUNCTION_66_2();
    sub_1C1637000(v3, 0x54656C6261544657, 0xEF6574616C706D65, isUniquelyReferenced_nonNull_native, &v9);
    v5 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_59_12();
    sub_1C1636C84(v6, v7);
    swift_unknownObjectRelease();
    return v13;
  }
  return v5;
}

uint64_t sub_1C18B5454(uint64_t a1)
{
  void *v1;
  uint64_t result;
  uint64_t v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  objc_msgSendSuper2(&v5, sel_configureParameter_, a1);
  type metadata accessor for WFUpdatableParameter();
  result = swift_dynamicCastClass();
  if (result)
  {
    v4 = result + OBJC_IVAR___WFUpdatableParameter_stateDataSource;
    OUTLINED_FUNCTION_4_4();
    *(_QWORD *)(v4 + 8) = &protocol witness table for WFEntityUpdatingAction;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

#error "1C18B553C: call analysis failed (funcsize=12)"

void sub_1C18B5558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;

  OUTLINED_FUNCTION_123_6();
  a29 = v30;
  a30 = v31;
  sub_1C18B1948(v31, (uint64_t)&a9);
  v32 = a15;
  if (a15)
  {
    a16 &= 0x101u;
    a17 &= 1u;
    a18 &= 1u;
    sub_1C18B2B38((uint64_t)&a9);
    v34 = v33;
    v35 = OUTLINED_FUNCTION_89_7();
    sub_1C17DDB2C(v35, v36, v37, v38, v39, v40, v32);
    if (!v34)
      goto LABEL_11;
  }
  else
  {
    v42 = sub_1C18B40A8();
    if ((v42 & 1) != 0)
    {
      OUTLINED_FUNCTION_8_3(v42, sel_localizedName);
    }
    else
    {
      sub_1C1B0F260();
      if (qword_1EF6FB700 != -1)
        swift_once();
      v43 = (id)qword_1EF6FC9E8;
      v44 = (void *)OUTLINED_FUNCTION_2_25();
      v45 = (void *)OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_7_33(v43, sel_localizedStringForKey_value_table_, (uint64_t)v44);

    }
    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_65_8();
  }
  OUTLINED_FUNCTION_10_0(v41, &qword_1EF700F00);
  sub_1C16EEA00();
LABEL_11:
  OUTLINED_FUNCTION_60_9();
}

id sub_1C18B56D4(uint64_t a1)
{
  uint64_t inited;
  __CFString *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("Key");
  *(_QWORD *)(inited + 40) = 1937075312;
  *(_QWORD *)(inited + 48) = 0xE400000000000000;
  type metadata accessor for Key(0);
  sub_1C15BC148((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v3 = CFSTR("Key");
  v4 = sub_1C1B0F170();
  sub_1C163A904(v4);
  v6 = v5;
  v7 = objc_msgSend(objc_allocWithZone((Class)WFAddButtonParameter), sel_initWithDefinition_, v5);

  objc_msgSend(v7, sel_setDelegate_, a1);
  return v7;
}

uint64_t *sub_1C18B5804(uint64_t a1)
{
  uint64_t *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  objc_super v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  char v45;
  char v46;
  uint64_t v47;

  v47 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 1) == 0)
  {
    v3 = OUTLINED_FUNCTION_34_2(a1, sel_parametersByKey);
    OUTLINED_FUNCTION_10_0((uint64_t)v3, (unint64_t *)&qword_1EF6FC4F0);
    sub_1C1B0F164();
    OUTLINED_FUNCTION_52_5();
    v4 = (void *)sub_1C162BAF0(0x797469746E65);
    v5 = OUTLINED_FUNCTION_54();
    if (v4)
    {
      if ((OUTLINED_FUNCTION_121_9(*v1) & 1) != 0)
      {
        v6 = v4;
        OUTLINED_FUNCTION_76_9();
      }

    }
    sub_1C18B1948(v5, (uint64_t)&v37);
    v8 = v43;
    if (v43)
    {
      v9 = v37;
      v10 = v38;
      v11 = v39;
      v12 = v40;
      v13 = v41;
      v14 = v42;
      if (v40)
      {
        swift_unknownObjectRetain();
        v15 = v12;
        OUTLINED_FUNCTION_68();
        swift_unknownObjectRetain();
        v16 = objc_msgSend(v15, sel_value);
        if (v16)
        {
          v17 = v16;
          OUTLINED_FUNCTION_155_2();

          v18 = v38;
          v19 = OUTLINED_FUNCTION_45_11();
          OUTLINED_FUNCTION_73_15(v19, v20, v21, v22);
          if (v18)
          {
            v37 = v9;
            v38 = v10;
            v39 = v11;
            v40 = v12;
            LOBYTE(v41) = v13;
            v42 = v14;
            v43 = v8;
            v44 = v13 & 0x101;
            v45 = BYTE2(v13) & 1;
            v46 = BYTE3(v13) & 1;
            RowTemplatePropertySetterParameterState.operators.getter();
            OUTLINED_FUNCTION_63_6();
            v23 = objc_allocWithZone((Class)type metadata accessor for RowTemplateOperatorPickerParameter());
            sub_1C16B2344(0x726F74617265706FLL, 0xE800000000000000, (uint64_t)&v37, 0);
            OUTLINED_FUNCTION_76_9();
          }
          v24 = OUTLINED_FUNCTION_45_11();
          v28 = v13;
        }
        else
        {
          v31 = OUTLINED_FUNCTION_45_11();
          OUTLINED_FUNCTION_73_15(v31, v32, v33, v34);
          v24 = OUTLINED_FUNCTION_45_11();
          v28 = v13;
        }
        v29 = v14;
        v30 = v8;
      }
      else
      {
        v24 = v37;
        v25 = v38;
        v26 = v39;
        v27 = 0;
        v28 = v41;
        v29 = v42;
        v30 = v43;
      }
      sub_1C17DDB2C(v24, v25, v26, v27, v28, v29, v30);
    }
    sub_1C18B1B20(v7);
    OUTLINED_FUNCTION_76_9();
  }
  v36.receiver = v1;
  v36.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  v2 = objc_msgSendSuper2(&v36, sel_visibleParametersWithProcessing_, 1);
  OUTLINED_FUNCTION_10_0((uint64_t)v2, (unint64_t *)&qword_1EF6FC4F0);
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_292();
  return v1;
}

void __swiftcall WFEntityUpdatingAction.makeValueParameter(for:)(WFParameter *__return_ptr retstr, Swift::String a2)
{
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  countAndFlagsBits = a2._countAndFlagsBits;
  v3 = OUTLINED_FUNCTION_8_3(a2._countAndFlagsBits, sel_parametersByKey);
  OUTLINED_FUNCTION_10_0((uint64_t)v3, (unint64_t *)&qword_1EF6FC4F0);
  sub_1C1B0F164();
  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_28();
  v4 = (void *)sub_1C162BAF0(countAndFlagsBits);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_54();
  if (v4)
  {
    type metadata accessor for WFUpdatableParameter();
    v5 = swift_dynamicCastClass();
    if (v5)
    {
      v6 = *(id *)(v5 + OBJC_IVAR___WFUpdatableParameter_underlyingParameter);
      OUTLINED_FUNCTION_292();
      return;
    }

  }
  sub_1C1B0FA10();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_224();
  sub_1C1B0F2A8();
  sub_1C1B0FB30();
  __break(1u);
}

id sub_1C18B5E20()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  char *v14;
  uint64_t v16;
  Swift::String v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  objc_super v23;
  objc_super v24;
  objc_super v25;
  _QWORD v26[2];
  uint64_t v27;
  void *v28;
  uint64_t v29;

  OUTLINED_FUNCTION_61_10();
  v6 = v2 == v5 && v3 == v4;
  if (v6 || (v7 = v3, v8 = v2, v9 = OUTLINED_FUNCTION_41_16(), (v9 & 1) != 0))
  {
    sub_1C18B18F4((uint64_t)v26);
    v11 = v26[0];
    v10 = v26[1];
    v12 = v27;
    v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FF870));
    v14 = (char *)v13 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v13) + 0x60);
    *(_QWORD *)v14 = v11;
    *((_QWORD *)v14 + 1) = v10;
    v14[16] = v12;
    OUTLINED_FUNCTION_33();
    v23.receiver = v13;
    v23.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7025C0);
    v0 = objc_msgSendSuper2(&v23, sel_init);
    OUTLINED_FUNCTION_13();
  }
  else
  {
    sub_1C18B1948(v9, (uint64_t)v26);
    if (v29)
    {
      v16 = v27;
      v0 = v28;
      swift_bridgeObjectRetain();
      v17._countAndFlagsBits = v8;
      v17._object = v7;
      RowTemplateLayoutElement.init(rawValue:)(v17);
      if (LOBYTE(v26[0]) == 3)
      {
        OUTLINED_FUNCTION_142_3();
        OUTLINED_FUNCTION_8_37();
        return (id)v16;
      }
      else if (LOBYTE(v26[0]) == 1)
      {
        sub_1C1B0F518();
        OUTLINED_FUNCTION_15_9(objc_allocWithZone((Class)WFNumberSubstitutableState), sel_initWithNumber_);
        OUTLINED_FUNCTION_38_5();
        OUTLINED_FUNCTION_8_37();
        return (id)v8;
      }
      else if (LOBYTE(v26[0]))
      {
        v21 = (void *)OUTLINED_FUNCTION_166_2();
        v24.receiver = v1;
        v24.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
        v22 = objc_msgSendSuper2(&v24, sel_parameterStateForKey_, v21);
        OUTLINED_FUNCTION_8_37();

        return v22;
      }
      else
      {
        v18 = v0;
        OUTLINED_FUNCTION_8_37();
      }
    }
    else
    {
      v19 = OUTLINED_FUNCTION_166_2();
      v25.receiver = v1;
      v25.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
      v20 = objc_msgSendSuper2(&v25, sel_parameterStateForKey_, v19);
      OUTLINED_FUNCTION_49_2();
    }
  }
  return v0;
}

uint64_t sub_1C18B6070(unint64_t a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t ObjectType;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  char *v23;
  uint64_t v24;
  char v25;
  char *v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  objc_super v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  OUTLINED_FUNCTION_61_10();
  v13 = v11 == v12 && v9 == v10;
  if (v13 || (v8 = OUTLINED_FUNCTION_41_16(), (v8 & 1) != 0))
  {
    if (a1)
    {
      ObjectType = swift_getObjectType();
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7025E0);
      v16 = sub_1C18BB298();
      v8 = WFParameterState.swiftParameterState<A>(_:)(v15, ObjectType, v15, v16);
      if (v37)
      {
        v17 = &v4[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
        OUTLINED_FUNCTION_4_4();
        *((_QWORD *)v17 + 1) = v37;
        swift_bridgeObjectRelease();
LABEL_35:
        v22 = sub_1C18B6394(v4);
        return v22 & 1;
      }
    }
  }
  sub_1C18B1948(v8, (uint64_t)&v36);
  v18 = v42;
  sub_1C17DDB2C(v36, v37, v38, v39, v40, v41, v42);
  if (v18)
  {
    OUTLINED_FUNCTION_37();
    v19._countAndFlagsBits = (uint64_t)a2;
    v19._object = a3;
    LOBYTE(v20) = RowTemplateLayoutElement.init(rawValue:)(v19);
    switch(v34)
    {
      case 3:
        v23 = &v4[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
        OUTLINED_FUNCTION_4_4();
        v24 = *((_QWORD *)v23 + 1);
        OUTLINED_FUNCTION_25_6();
        v25 = OUTLINED_FUNCTION_87_8();
        *((_QWORD *)v23 + 1) = v24;
        if ((v25 & 1) == 0)
        {
          sub_1C16F2ED8();
          v24 = v31;
          *((_QWORD *)v23 + 1) = v31;
        }
        if (*(_QWORD *)(v24 + 16))
        {
          *(_QWORD *)(v24 + 48) = a1;
LABEL_30:
          swift_endAccess();
          OUTLINED_FUNCTION_11_0();
          goto LABEL_35;
        }
        __break(1u);
        break;
      case 1:
        if (!a1
          || (objc_opt_self(),
              (v20 = objc_msgSend((id)OUTLINED_FUNCTION_151_3(), sel_number)) == 0))
        {
          OUTLINED_FUNCTION_10_0((uint64_t)v20, (unint64_t *)&qword_1ED1E7460);
          OUTLINED_FUNCTION_63_6();
          sub_1C1B0F7AC();
        }
        sub_1C1B0F50C();
        OUTLINED_FUNCTION_38_5();
        if (a1 >= 5)
          LOBYTE(v24) = 0;
        else
          LOBYTE(v24) = a1;
        v23 = &v4[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
        OUTLINED_FUNCTION_4_4();
        v26 = (char *)*((_QWORD *)v23 + 1);
        v27 = OUTLINED_FUNCTION_102_9();
        *((_QWORD *)v23 + 1) = v26;
        if ((v27 & 1) != 0)
          goto LABEL_28;
        break;
      case 0:
        if (a1)
        {
          objc_opt_self();
          a2 = (void *)OUTLINED_FUNCTION_151_3();
          if (a2)
            OUTLINED_FUNCTION_25_6();
        }
        else
        {
          a2 = 0;
        }
        v26 = &v4[OBJC_IVAR____TtC11WorkflowKit22WFEntityUpdatingAction_tableTemplateState];
        OUTLINED_FUNCTION_4_4();
        v28 = *((_QWORD *)v26 + 1);
        v29 = OUTLINED_FUNCTION_87_8();
        *((_QWORD *)v26 + 1) = v28;
        if ((v29 & 1) == 0)
          goto LABEL_41;
        while (!*(_QWORD *)(v28 + 16))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          sub_1C16F2ED8();
          v28 = v33;
          *((_QWORD *)v26 + 1) = v33;
        }
        RowTemplatePropertySetterParameterState.subject.setter(a2);
        swift_endAccess();
        goto LABEL_35;
      default:
        goto LABEL_16;
    }
    sub_1C16F2ED8();
    v26 = v32;
    *((_QWORD *)v23 + 1) = v32;
LABEL_28:
    if (!*((_QWORD *)v26 + 2))
    {
      __break(1u);
      goto LABEL_40;
    }
    v26[64] = v24;
    *((_QWORD *)v26 + 6) = 0;
    goto LABEL_30;
  }
LABEL_16:
  v21 = (void *)OUTLINED_FUNCTION_24_14();
  v35.receiver = v4;
  v35.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  v22 = objc_msgSendSuper2(&v35, sel_setParameterState_forKey_, a1, v21);

  return v22 & 1;
}

uint64_t sub_1C18B6394(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  objc_class *v52;
  uint64_t result;
  id v54;
  id v55;
  id v56;
  char v57;
  uint64_t v58;
  objc_super v59;
  objc_super v60;
  _QWORD *v61;
  uint64_t v62;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FDB40);
  v58 = sub_1C1B0F170();
  v54 = a1;
  sub_1C18B18F4((uint64_t)&v61);
  v2 = *(_QWORD *)(v62 + 16);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v54, sel_parameters);
    sub_1C15B882C(0, (unint64_t *)&qword_1EF6FC4F0);
    v19 = sub_1C1B0F380();

    if (v19 >> 62)
      goto LABEL_44;
    v34 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_21;
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  v3 = v62 + 40;
  while (1)
  {
    v4 = *(void **)(v3 + 16);
    if (v4)
      break;
LABEL_18:
    v3 += 64;
    if (!--v2)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)v3;
  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(_BYTE *)(v3 + 24);
  swift_unknownObjectRetain_n();
  v9 = v4;
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  v10 = v9;
  swift_unknownObjectRetain();
  v11 = objc_msgSend(v10, sel_value);
  if (!v11)
  {
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v12 = v11;
  v57 = v8;
  v61 = 0;
  v62 = 0;
  sub_1C1B0F218();

  v13 = (uint64_t)v61;
  v14 = v62;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v14)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();

LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_unknownObjectRelease();

  v15 = v13;
  v16 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC3C0);
  v17 = (char *)objc_allocWithZone(v16);
  v18 = &v17[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v17) + 0x60)];
  *(_QWORD *)v18 = v6;
  *((_QWORD *)v18 + 1) = v5;
  *((_QWORD *)v18 + 2) = v7;
  *((_QWORD *)v18 + 3) = v4;
  v18[32] = v57;
  v59.receiver = v17;
  v59.super_class = v16;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v55 = v10;
  v56 = objc_msgSendSuper2(&v59, sel_init);
  swift_isUniquelyReferenced_nonNull_native();
  v61 = (_QWORD *)v58;
  v19 = v14;
  v20 = sub_1C15B75EC(v15, v14);
  if (!__OFADD__(*(_QWORD *)(v58 + 16), (v21 & 1) == 0))
  {
    v22 = v20;
    v23 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FCD90);
    v24 = sub_1C1B0FB00();
    v25 = v61;
    if ((v24 & 1) != 0)
    {
      v26 = sub_1C15B75EC(v15, v14);
      if ((v23 & 1) != (v27 & 1))
        goto LABEL_47;
      v22 = v26;
    }
    v58 = (uint64_t)v25;
    if ((v23 & 1) != 0)
    {
      v28 = v25[7];
      swift_unknownObjectRelease();
      *(_QWORD *)(v28 + 8 * v22) = v56;
    }
    else
    {
      v25[(v22 >> 6) + 8] |= 1 << v22;
      v29 = (uint64_t *)(v25[6] + 16 * v22);
      *v29 = v15;
      v29[1] = v14;
      *(_QWORD *)(v25[7] + 8 * v22) = v56;
      v30 = v25[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_43;
      v25[2] = v32;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_17;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  swift_bridgeObjectRetain();
  v34 = sub_1C1B0FB3C();
  swift_bridgeObjectRelease();
  if (!v34)
    goto LABEL_41;
LABEL_21:
  if (v34 >= 1)
  {
    v35 = 0;
    while (1)
    {
      if ((v19 & 0xC000000000000001) != 0)
        v36 = (id)MEMORY[0x1C3BB22A8](v35, v19);
      else
        v36 = *(id *)(v19 + 8 * v35 + 32);
      v37 = v36;
      v38 = objc_msgSend(v36, "key");
      v39 = sub_1C1B0F224();
      v41 = v40;

      if (v39 == 0x797469746E65 && v41 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_1C1B0FC44();
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
        {
          v44 = objc_msgSend(v37, "key");
          v45 = sub_1C1B0F224();
          v47 = v46;

          if (*(_QWORD *)(v58 + 16) && (v48 = sub_1C15B75EC(v45, v47), (v49 & 1) != 0))
          {
            v50 = *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v48);
            swift_unknownObjectRetain();
          }
          else
          {
            v50 = 0;
          }
          swift_bridgeObjectRelease();
          v51 = objc_msgSend(v37, "key");
          if (!v51)
          {
            sub_1C1B0F224();
            v51 = (id)sub_1C1B0F1F4();
            swift_bridgeObjectRelease();
          }
          v52 = (objc_class *)type metadata accessor for WFEntityUpdatingAction();
          v60.receiver = v54;
          v60.super_class = v52;
          objc_msgSendSuper2(&v60, sel_setParameterState_forKey_, v50, v51);

          swift_unknownObjectRelease();
          goto LABEL_40;
        }
      }

LABEL_40:
      if (v34 == ++v35)
        goto LABEL_41;
    }
  }
  __break(1u);
LABEL_47:
  result = sub_1C1B0FC8C();
  __break(1u);
  return result;
}

uint64_t sub_1C18B69BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[27] = v0;
  v1[28] = swift_getObjectType();
  v2 = sub_1C1B0DFD0();
  v1[29] = v2;
  v1[30] = *(_QWORD *)(v2 - 8);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B6A58()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  _BYTE v74[8];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(*(id *)(v0 + 216), sel_connection);
  *(_QWORD *)(v0 + 264) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = OUTLINED_FUNCTION_30_17(**(_QWORD **)(v0 + 216));
    *(_QWORD *)(v0 + 272) = v3;
    if (v3)
    {
      v72 = v2;
      v4 = (uint64_t *)(v0 + 176);
      sub_1C18BB160(*(void **)(v0 + 216));
      if (v5)
      {
        sub_1C18B0978(v5);
        v7 = v6;
        OUTLINED_FUNCTION_56();
      }
      else
      {
        v7 = MEMORY[0x1E0DEE9D8];
      }
      v14 = *(void **)(v0 + 216);
      OUTLINED_FUNCTION_15();
      *(_QWORD *)(v0 + 176) = v7;
      v15 = objc_msgSend(v14, sel_parameterIdentifiersNeedingValues);
      v16 = objc_msgSend(v15, sel_allKeys);

      v17 = sub_1C1B0F380();
      sub_1C18B7BDC(v17);
      OUTLINED_FUNCTION_56();
      sub_1C15F0830();
      v18 = *(_QWORD *)(v0 + 176);
      v19 = v14;
      v20 = swift_bridgeObjectRetain();
      v21 = sub_1C18B0D1C(v20, v19);
      v23 = v22;
      OUTLINED_FUNCTION_56();
      if ((v23 & 1) != 0)
        goto LABEL_15;
      v24 = v21 + 1;
      if (!__OFADD__(v21, 1))
      {
        v25 = *(_QWORD *)(v18 + 16);
        if (v24 == v25)
        {
LABEL_13:
          if ((uint64_t)v24 >= v21)
          {
LABEL_16:
            sub_1C183DCCC(v21, v24);
            v26 = *v4;
            if (!*(_QWORD *)(*v4 + 16))
            {
              sub_1C18B18F4((uint64_t)v74);
              v27 = v75;
              v28 = *(_QWORD *)(v75 + 16);
              if (v28)
              {
                OUTLINED_FUNCTION_33();
                v71 = v27;
                v29 = v27 + 48;
                v73 = MEMORY[0x1E0DEE9D8];
                do
                {
                  v30 = *(void **)(v29 + 8);
                  if (*(unsigned __int8 *)(v29 + 16) <= 1u && v30 != 0)
                  {
                    swift_unknownObjectRetain_n();
                    v32 = v30;
                    swift_bridgeObjectRetain_n();
                    swift_unknownObjectRetain();
                    v33 = v32;
                    swift_unknownObjectRetain();
                    v34 = objc_msgSend(v33, sel_value);
                    if (v34)
                    {
                      v35 = v34;
                      v76 = 0;
                      v77 = 0;
                      sub_1C1B0F218();

                      v36 = v76;
                      v37 = v77;
                      OUTLINED_FUNCTION_4_1();
                      OUTLINED_FUNCTION_4_1();

                      OUTLINED_FUNCTION_45_2();
                      if (v37)
                      {
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_1C160B45C();
                          v73 = v41;
                        }
                        v39 = *(_QWORD *)(v73 + 16);
                        v38 = *(_QWORD *)(v73 + 24);
                        if (v39 >= v38 >> 1)
                        {
                          OUTLINED_FUNCTION_101_3(v38);
                          sub_1C160B45C();
                          v73 = v42;
                        }
                        *(_QWORD *)(v73 + 16) = v39 + 1;
                        v40 = v73 + 16 * v39;
                        *(_QWORD *)(v40 + 32) = v36;
                        *(_QWORD *)(v40 + 40) = v37;
                      }
                    }
                    else
                    {
                      OUTLINED_FUNCTION_4_1();
                      OUTLINED_FUNCTION_4_1();

                      OUTLINED_FUNCTION_45_2();
                    }
                  }
                  v29 += 64;
                  --v28;
                }
                while (v28);
                OUTLINED_FUNCTION_13();
                v55 = v73;
              }
              else
              {
                v55 = MEMORY[0x1E0DEE9D8];
              }
              OUTLINED_FUNCTION_13();
              v56 = *(_QWORD *)(v55 + 16);
              if (v56)
              {
                v57 = (uint64_t *)(v55 + 40);
                do
                {
                  v58 = *(v57 - 1);
                  v59 = *v57;
                  swift_bridgeObjectRetain_n();
                  if ((OUTLINED_FUNCTION_102_9() & 1) == 0)
                  {
                    OUTLINED_FUNCTION_47_13();
                    v26 = v66;
                  }
                  v61 = *(_QWORD *)(v26 + 16);
                  v60 = *(_QWORD *)(v26 + 24);
                  if (v61 >= v60 >> 1)
                  {
                    OUTLINED_FUNCTION_101_3(v60);
                    OUTLINED_FUNCTION_47_13();
                    v26 = v67;
                  }
                  v62 = *(void **)(v0 + 216);
                  *(_QWORD *)(v26 + 16) = v61 + 1;
                  v63 = v26 + 16 * v61;
                  *(_QWORD *)(v63 + 32) = v58;
                  *(_QWORD *)(v63 + 40) = v59;
                  v64 = objc_msgSend(v62, sel_parameterIdentifiersNeedingValues, v71);
                  v65 = (void *)sub_1C1B0F44C();
                  *(_QWORD *)(v0 + 152) = v58;
                  *(_QWORD *)(v0 + 160) = v59;
                  OUTLINED_FUNCTION_16_1();
                  objc_msgSend(v64, sel___swift_setObject_forKeyedSubscript_, v65, sub_1C1B0FC74());
                  OUTLINED_FUNCTION_29_4();

                  OUTLINED_FUNCTION_29();
                  v57 += 2;
                  --v56;
                }
                while (v56);
                swift_bridgeObjectRelease();
                v4 = (uint64_t *)(v0 + 176);
                *(_QWORD *)(v0 + 176) = v26;
              }
              else
              {
                OUTLINED_FUNCTION_15();
                v4 = (uint64_t *)(v0 + 176);
              }
            }
            v68 = *(_QWORD *)(v0 + 216);
            v69 = (_QWORD *)OUTLINED_FUNCTION_116_9();
            *(_QWORD *)(v0 + 280) = v69;
            v69[2] = v68;
            v69[3] = v4;
            v69[4] = v72;
            v70 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 288) = v70;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7025F8);
            *v70 = v0;
            v70[1] = sub_1C18B7128;
            OUTLINED_FUNCTION_19_0();
            return sub_1C1B0FC5C();
          }
          __break(1u);
LABEL_15:
          v21 = *(_QWORD *)(v18 + 16);
          v24 = v21;
          goto LABEL_16;
        }
        if ((v24 & 0x8000000000000000) != 0)
LABEL_66:
          __break(1u);
        v43 = 16 * v21;
        while (v24 < v25)
        {
          v44 = v18 + v43;
          v45 = *(_QWORD *)(v18 + v43 + 48) == 0x797469746E65 && *(_QWORD *)(v18 + v43 + 56) == 0xE600000000000000;
          if (!v45 && (OUTLINED_FUNCTION_20_0() & 1) == 0)
          {
            if (v24 != v21)
            {
              if (v21 >= v25)
                goto LABEL_63;
              v46 = (uint64_t *)(v18 + 32 + 16 * v21);
              v47 = *v46;
              v48 = v46[1];
              v49 = *(_QWORD *)(v44 + 48);
              v50 = *(_QWORD *)(v44 + 56);
              OUTLINED_FUNCTION_66();
              OUTLINED_FUNCTION_16_1();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C16F2E28();
                v18 = v54;
              }
              v51 = v18 + 16 * v21;
              *(_QWORD *)(v51 + 32) = v49;
              *(_QWORD *)(v51 + 40) = v50;
              swift_bridgeObjectRelease();
              if (v24 >= *(_QWORD *)(v18 + 16))
                goto LABEL_64;
              v52 = v18 + v43;
              *(_QWORD *)(v52 + 48) = v47;
              *(_QWORD *)(v52 + 56) = v48;
              swift_bridgeObjectRelease();
              *v4 = v18;
            }
            if (__OFADD__(v21++, 1))
              goto LABEL_62;
          }
          ++v24;
          v25 = *(_QWORD *)(v18 + 16);
          v43 += 16;
          if (v24 == v25)
            goto LABEL_13;
        }
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
      }
      __break(1u);
      goto LABEL_66;
    }

  }
  sub_1C1B0DF94();
  v8 = sub_1C1B0DFC4();
  v9 = sub_1C1B0F5FC();
  if (os_log_type_enabled(v8, v9))
  {
    *(_WORD *)OUTLINED_FUNCTION_94_5() = 0;
    OUTLINED_FUNCTION_110_6(&dword_1C15B3000, v8, v10, "Missing connection or entity metadata.");
    OUTLINED_FUNCTION_125_7();
  }
  v12 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);

  OUTLINED_FUNCTION_172(v11, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_1C18B7A3C();
  swift_willThrow();
  OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_24_2();
  return OUTLINED_FUNCTION_38_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C18B7128()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_19_0();
  return swift_task_switch();
}

uint64_t sub_1C18B71DC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;

  v1 = *(void **)(v0 + 192);
  *(_QWORD *)(v0 + 304) = v1;
  if (!v1)
  {
LABEL_9:
    sub_1C1B0DF94();
    v27 = sub_1C1B0DFC4();
    v28 = sub_1C1B0F5FC();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(void **)(v0 + 272);
    if (v29)
    {
      *(_WORD *)OUTLINED_FUNCTION_94_5() = 0;
      OUTLINED_FUNCTION_110_6(&dword_1C15B3000, v27, v31, "Ran successfully but missing entity result.");
      OUTLINED_FUNCTION_125_7();
    }

    v32 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 232);
    v34 = *(_QWORD *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    OUTLINED_FUNCTION_80_11();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_24_2();
    v35 = *(uint64_t (**)(void))(v0 + 8);
    return OUTLINED_FUNCTION_85_7(v35);
  }
  v2 = *(void **)(v0 + 216);
  v3 = v1;
  v4 = objc_msgSend(v3, sel_action);
  v5 = objc_msgSend(v4, sel_parameters);

  OUTLINED_FUNCTION_10_0(v6, (unint64_t *)&qword_1ED1E7520);
  v7 = sub_1C1B0F380();

  v8 = sub_1C18B0F84(v7, (uint64_t)v2);
  *(_QWORD *)(v0 + 312) = v8;
  v9 = OUTLINED_FUNCTION_56();
  if (!v8)
  {

    goto LABEL_9;
  }
  v10 = OUTLINED_FUNCTION_34_2(v9, sel_value);
  if (!v10
    || (v11 = v10,
        v12 = objc_msgSend(v10, sel_value),
        v11,
        sub_1C1B0F944(),
        v13 = OUTLINED_FUNCTION_64_7(),
        OUTLINED_FUNCTION_10_0(v13, (unint64_t *)&unk_1EF6FA9A0),
        (OUTLINED_FUNCTION_61_1() & 1) == 0))
  {

    goto LABEL_9;
  }
  v14 = *(_QWORD *)(v0 + 272);
  v15 = *(void **)(v0 + 168);
  *(_QWORD *)(v0 + 320) = v15;
  v16 = objc_msgSend((id)objc_opt_self(), sel_policyWithEntityMetadata_, v14);
  *(_QWORD *)(v0 + 184) = 0;
  v17 = OUTLINED_FUNCTION_105_3(v16, sel_connectionWithError_);
  *(_QWORD *)(v0 + 328) = v17;

  v19 = *(void **)(v0 + 184);
  if (v17)
  {
    v20 = *(void **)(v0 + 272);
    OUTLINED_FUNCTION_10_0(v18, (unint64_t *)&unk_1EF702600);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
    v21 = OUTLINED_FUNCTION_108();
    *(_OWORD *)(v21 + 16) = xmmword_1C1B3D9B0;
    *(_QWORD *)(v21 + 32) = OUTLINED_FUNCTION_28_4((uint64_t)v19, sel_identifier);
    v40 = v21;
    sub_1C1B0F3A4();
    v22 = objc_allocWithZone(MEMORY[0x1E0D44230]);
    v39 = OUTLINED_FUNCTION_28_4((uint64_t)v20, sel_init);
    v23 = sub_1C1B0F740();
    *(_QWORD *)(v0 + 336) = v23;
    *(_QWORD *)(v0 + 56) = v0 + 208;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1C18B7648;
    v24 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v25 = v0 + 80;
    *(_QWORD *)(v25 + 8) = 0x40000000;
    OUTLINED_FUNCTION_73_10(v24, (uint64_t)sub_1C162E50C);
    objc_msgSend(v17, sel_performConfigurableQuery_completionHandler_, v23, v25, v39, v40);
    return swift_continuation_await();
  }
  v37 = *(void **)(v0 + 264);
  v36 = *(void **)(v0 + 272);
  v38 = v19;
  sub_1C1B0DBB0();

  swift_willThrow();
  OUTLINED_FUNCTION_80_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_1();
  v35 = *(uint64_t (**)(void))(v0 + 8);
  return OUTLINED_FUNCTION_85_7(v35);
}

uint64_t sub_1C18B7648()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_36_4();
  *(_QWORD *)(v0 + 344) = v1;
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B76CC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[41];
  v2 = (void *)v0[42];
  v3 = v0[26];
  v4 = (_QWORD *)v0[27];
  v0[44] = v3;

  v5 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x138);
  v6 = *v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[45] = v7;
  *v7 = v0;
  v7[1] = sub_1C18B777C;
  return OUTLINED_FUNCTION_7_2(v3, (uint64_t (*)(void))((char *)v5 + v6));
}

uint64_t sub_1C18B777C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_56_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B7810()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_70_13();

  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_2();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_171_2();
  return OUTLINED_FUNCTION_32_1(v5);
}

uint64_t sub_1C18B788C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 272);

  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_24_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C18B790C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(void **)(v0 + 336);
  v3 = *(void **)(v0 + 320);
  v2 = *(void **)(v0 + 328);
  v5 = *(void **)(v0 + 304);
  v4 = *(void **)(v0 + 312);
  v7 = *(void **)(v0 + 264);
  v6 = *(void **)(v0 + 272);
  swift_willThrow();

  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_24_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C18B79C4()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_70_13();

  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_24_2();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_171_2();
  return OUTLINED_FUNCTION_32_1(v5);
}

uint64_t sub_1C18B7A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v0 = sub_1C1B0F224();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(inited + 32) = sub_1C1B0F224();
  *(_QWORD *)(inited + 40) = v4;
  sub_1C1B0F260();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v5 = (id)qword_1EF6FC9E8;
  v6 = (void *)sub_1C1B0F1F4();
  v7 = (void *)sub_1C1B0F1F4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, 0);

  v9 = sub_1C1B0F224();
  v11 = v10;

  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v11;
  v12 = sub_1C1B0F170();
  v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  return sub_1C161CE44(v0, v2, 16, v12);
}

uint64_t sub_1C18B7BDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1C15F0C7C();
  v3 = v11;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1C15BFD78(i, (uint64_t)v10);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C15F0C7C();
        v3 = v11;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1C15F0C7C();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1C18B7D20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;

  v6 = sub_1C18B1CB0(a1);
  v7 = swift_bridgeObjectRetain();
  sub_1C1783E84(v7, a4, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C18B7DE0(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_1C18B7E54;
  return sub_1C18B69BC();
}

uint64_t sub_1C18B7E54()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)(*v1 + 16);
  v2 = *(void **)(*v1 + 24);
  v4 = *v1;
  swift_task_dealloc();

  v5 = *(_QWORD *)(v4 + 32);
  if (v0)
  {
    v6 = (void *)sub_1C1B0DBA4();

    OUTLINED_FUNCTION_172(v5, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 32), 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1C18B7EF4(uint64_t a1, void *a2)
{
  if (a2)
    return sub_1C1662320(*(_QWORD *)(a1 + 32), a2);
  else
    return j__swift_continuation_throwingResume();
}

void sub_1C18B7F30(void *a1)
{
  void *v1;
  objc_super v3;

  sub_1C18B1AB0(0);
  if (a1)
    a1 = (void *)sub_1C1B0DBA4();
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  objc_msgSendSuper2(&v3, sel_finishRunningWithError_, a1);

}

void sub_1C18B7FDC(void *a1, void *a2, char a3, void *a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  objc_super v16;
  _QWORD aBlock[6];
  _BYTE v18[24];
  uint64_t v19;
  _OWORD v20[2];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  _Block_copy(a5);
  v11 = sub_1C18BB234(a1);
  if (!v12)
  {
    a5[2](a5, 0, 0);
    swift_release();
    _Block_release(a5);
    return;
  }
  if (a2)
  {
    sub_1C162BE40(v11, v12, (uint64_t)a2, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    memset(v20, 0, sizeof(v20));
  }
  sub_1C16A5DE0((uint64_t)v20, (uint64_t)v18);
  if (!v19)
    goto LABEL_13;
  sub_1C16A5DE0((uint64_t)v18, (uint64_t)aBlock);
  sub_1C15B882C(0, (unint64_t *)&unk_1ED1E7580);
  if (!swift_dynamicCast())
  {
    sub_1C15B882C(0, (unint64_t *)&unk_1EF702610);
    if ((swift_dynamicCast() & 1) != 0
      || (sub_1C15B882C(0, (unint64_t *)&qword_1ED1E7520), swift_dynamicCast()))
    {
      v13 = objc_msgSend(v15, sel_value);
      ((void (**)(_QWORD, id, _QWORD))a5)[2](a5, v13, 0);

      sub_1C15BC0E8((uint64_t)v20, (uint64_t *)&unk_1EF6FB470);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_13:
    if (a2)
      a2 = (void *)sub_1C1B0F14C();
    aBlock[4] = sub_1C16A5DD8;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C182DE50;
    aBlock[3] = &block_descriptor_37;
    v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v16.receiver = a4;
    v16.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
    objc_msgSendSuper2(&v16, sel_getValueForParameterData_ofProcessedParameters_fallingBackToDefaultValue_completionHandler_, a1, a2, a3 & 1, v14);
    _Block_release(v14);

    sub_1C15BC0E8((uint64_t)v20, (uint64_t *)&unk_1EF6FB470);
    goto LABEL_16;
  }
  ((void (**)(_QWORD, id, _QWORD))a5)[2](a5, v15, 0);

  sub_1C15BC0E8((uint64_t)v20, (uint64_t *)&unk_1EF6FB470);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_16:
  sub_1C15BC0E8((uint64_t)v18, (uint64_t *)&unk_1EF6FB470);
  swift_release();
  _Block_release(a5);
}

uint64_t sub_1C18B83E0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

#error "1C18B8480: call analysis failed (funcsize=22)"

#error "1C18B84D8: call analysis failed (funcsize=22)"

void sub_1C18B84F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, SEL *a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v11 = a3 + 16;
  OUTLINED_FUNCTION_4_4();
  v12 = MEMORY[0x1C3BB3F94](v11);
  if (v12)
  {
    v13 = (void *)v12;
    if (a5)
    {
      v12 = OUTLINED_FUNCTION_24_14();
      a5 = (void *)v12;
    }
    if (a1)
    {
      v14 = OUTLINED_FUNCTION_28_4(v12, sel_captionPrint);
      v15 = sub_1C1B0F380();

      if (*(_QWORD *)(v15 + 16))
      {
        OUTLINED_FUNCTION_66();
        OUTLINED_FUNCTION_34();
        a1 = (void *)sub_1C1B0F1F4();
        OUTLINED_FUNCTION_51();
      }
      else
      {
        OUTLINED_FUNCTION_34();
        a1 = 0;
      }
    }
    objc_msgSend(v13, *a7, a5, a6, a1);

  }
}

#error "1C18B8638: call analysis failed (funcsize=22)"

void sub_1C18B8658()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_28();
  sub_1C18B0B38(v0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_3();
}

void WFEntityUpdatingAction.possibleSubjectValues.getter(uint64_t a1)
{
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = OUTLINED_FUNCTION_8_3(a1, sel_parameterDefinitions);
  OUTLINED_FUNCTION_10_0((uint64_t)v3, (unint64_t *)&unk_1EF6FDDB0);
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_292();
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_28();
    v4 = OUTLINED_FUNCTION_32();
  }
  else
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_28();
  }
  v16 = v2;
  if (v4)
  {
    if (v4 >= 1)
    {
      v5 = 0;
      v6 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if ((v1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1C3BB22A8](v5, v1);
        else
          v7 = *(id *)(v1 + 8 * v5 + 32);
        v8 = v7;
        if (objc_msgSend(v7, sel_objectForKey_, CFSTR("Key")))
        {
          sub_1C1B0F944();
          OUTLINED_FUNCTION_11_0();
        }
        else
        {
          memset(v17, 0, sizeof(v17));
        }
        sub_1C16069C8((uint64_t)v17, (uint64_t)v18);
        if (v19)
        {
          if ((OUTLINED_FUNCTION_61_1() & 1) != 0)
            goto LABEL_17;
        }
        else
        {
          sub_1C15BC0E8((uint64_t)v18, (uint64_t *)&unk_1EF6FB470);
        }
        v20 = 0;
        v21 = 0;
LABEL_17:

        v9 = v21;
        if (v21)
        {
          v10 = v20;
          if ((OUTLINED_FUNCTION_87_8() & 1) == 0)
          {
            OUTLINED_FUNCTION_93_2();
            v6 = v14;
          }
          v12 = *(_QWORD *)(v6 + 16);
          v11 = *(_QWORD *)(v6 + 24);
          if (v12 >= v11 >> 1)
          {
            OUTLINED_FUNCTION_101_3(v11);
            OUTLINED_FUNCTION_93_2();
            v6 = v15;
          }
          *(_QWORD *)(v6 + 16) = v12 + 1;
          v13 = v6 + 16 * v12;
          *(_QWORD *)(v13 + 32) = v10;
          *(_QWORD *)(v13 + 40) = v9;
        }
        if (v4 == ++v5)
          goto LABEL_26;
      }
    }
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    OUTLINED_FUNCTION_45_2();
    sub_1C18B0178(v6, v16);
    OUTLINED_FUNCTION_7_26();
  }
}

id WFEntityUpdatingAction.__allocating_init(identifier:metadata:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v14;
  void *v15;
  id v16;

  v8 = v7;
  v14 = (void *)sub_1C1B0F1F4();
  OUTLINED_FUNCTION_29();
  if (a5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FB380);
    v15 = (void *)sub_1C1B0F14C();
    OUTLINED_FUNCTION_51();
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone(v8), sel_initWithIdentifier_metadata_definition_serializedParameters_appIntentDescriptor_fullyQualifiedActionIdentifier_, v14, a3, a4, v15, a6, a7);

  return v16;
}

void WFEntityUpdatingAction.init(identifier:metadata:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WFEntityUpdatingAction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WFEntityUpdatingAction();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL WFEntityUpdatingAction.showsAddButton.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_172_2(a1);
  v1 = *(_QWORD *)(v6 + 16);
  v2 = swift_bridgeObjectRelease();
  WFEntityUpdatingAction.possibleSubjectValues.getter(v2);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  return v1 < v4;
}

id sub_1C18B8BB8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();
  OUTLINED_FUNCTION_292();
  v5 = (void *)sub_1C1B0F374();
  OUTLINED_FUNCTION_15();
  return v5;
}

void WFEntityUpdatingAction.availableSubjectValues.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_123_6();
  a27 = v28;
  a28 = v29;
  sub_1C18B18F4((uint64_t)&a14);
  v30 = a15;
  v31 = *(_QWORD *)(a15 + 16);
  if (v31)
  {
    OUTLINED_FUNCTION_28();
    v32 = v30 + 48;
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v34 = *(void **)(v32 + 8);
      if (v34)
      {
        swift_unknownObjectRetain();
        v35 = v34;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_142_3();
        v36 = objc_msgSend(v35, sel_value);
        if (v36)
        {
          v37 = v36;
          sub_1C1B0F218();

        }
        OUTLINED_FUNCTION_56();

        OUTLINED_FUNCTION_29_4();
        OUTLINED_FUNCTION_3_9();
      }
      v32 += 64;
      --v31;
    }
    while (v31);
    OUTLINED_FUNCTION_15();
  }
  else
  {
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v38 = OUTLINED_FUNCTION_15();
  WFEntityUpdatingAction.possibleSubjectValues.getter(v38);
  sub_1C18B0310(v39, v33);
  OUTLINED_FUNCTION_60_9();
}

void WFEntityUpdatingAction.makeValueParameterState(for:serializedRepresentation:)(uint64_t a1@<X0>, uint64_t a2@<X2>, WFParameter *a3@<X8>)
{
  uint64_t v4;
  void *v6;
  void *v7;

  WFEntityUpdatingAction.makeValueParameter(for:)(a3, *(Swift::String *)&a1);
  v7 = v6;
  objc_msgSend(v6, sel_stateClass);
  swift_getObjCClassMetadata();
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSerializedRepresentation_variableProvider_parameter_, a2, v4, v7);
  OUTLINED_FUNCTION_49_2();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C18B8DC4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11, v12, v13);
  if (a4)
    a4 = (void *)sub_1C1B0F14C();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1C18BB870;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C182DE50;
  aBlock[3] = &block_descriptor_83_0;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_getValueForParameterData_ofProcessedParameters_completionHandler_, a3, a4, v16);
  _Block_release(v16);

}

uint64_t sub_1C18B8F3C(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  return sub_1C1B0F47C();
}

uint64_t WFEntityUpdatingAction.getEntityPropertyValue(for:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[51] = a3;
  v4[52] = v3;
  v4[49] = a1;
  v4[50] = a2;
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B8FDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)(void);

  OUTLINED_FUNCTION_202();
  v1 = OUTLINED_FUNCTION_30_17(**(_QWORD **)(v0 + 416));
  *(_QWORD *)(v0 + 424) = v1;
  if (!v1)
    goto LABEL_19;
  v2 = (void *)v1;
  v3 = *(void **)(v0 + 416);
  v4 = sub_1C18B40A8();
  if ((v4 & 1) == 0)
  {
    v23 = objc_msgSend(*(id *)(v0 + 416), sel_parameterIdentifiersNeedingValues);
    *(_QWORD *)(v0 + 312) = 0x797469746E65;
    *(_QWORD *)(v0 + 320) = 0xE600000000000000;
    v24 = objc_msgSend(v23, sel___swift_objectForKeyedSubscript_, sub_1C1B0FC74());
    OUTLINED_FUNCTION_64_7();

    if (v24)
    {
      sub_1C1B0F944();
      OUTLINED_FUNCTION_29_4();
    }
    else
    {
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
    }
    v25 = sub_1C16069C8(v0 + 120, v0 + 280);
    if (*(_QWORD *)(v0 + 304))
    {
      OUTLINED_FUNCTION_10_0(v25, (unint64_t *)&qword_1ED1E7460);
      v26 = OUTLINED_FUNCTION_61_1();
      if ((v26 & 1) != 0)
      {
        v27 = *(void **)(v0 + 368);
        *(_QWORD *)(v0 + 432) = v27;
        OUTLINED_FUNCTION_10_0(v26, (unint64_t *)&unk_1ED1E7390);
        v28 = (void *)sub_1C1B0F7A0();
        v29 = sub_1C1B0F7C4();

        if ((v29 & 1) != 0)
        {
          v30 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 440) = v30;
          *v30 = v0;
          v30[1] = sub_1C18B94D0;
          return sub_1C18BA2E4();
        }

      }
    }
    else
    {
      sub_1C15BC0E8(v0 + 280, (uint64_t *)&unk_1EF6FB470);
    }
    v31 = *(void **)(v0 + 416);
    v32 = (void *)OUTLINED_FUNCTION_16_17();
    v33 = OUTLINED_FUNCTION_105_3(v31, sel_parameterStateForKey_);
    *(_QWORD *)(v0 + 464) = v33;

    if (v33)
    {
      v34 = OUTLINED_FUNCTION_66_2();
      v35 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 472) = v35;
      *v35 = v0;
      v35[1] = sub_1C18B97E4;
      return WFParameterState.process(context:)(*(_QWORD *)(v0 + 408), v34);
    }
    goto LABEL_18;
  }
  v5 = OUTLINED_FUNCTION_34_2(v4, sel_identifier);
  OUTLINED_FUNCTION_116_2();

  v7 = OUTLINED_FUNCTION_34_2(v6, sel_identifier);
  OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_98_6();
  sub_1C1B0F2A8();
  objc_allocWithZone(MEMORY[0x1E0D43C80]);
  v8 = sub_1C18BAC50();
  *(_QWORD *)(v0 + 496) = 0;
  *(_QWORD *)(v0 + 504) = v8;
  v2 = *(void **)(v0 + 424);
  if (!v8)
  {
LABEL_18:

LABEL_19:
    v36 = OUTLINED_FUNCTION_128_9();
    return OUTLINED_FUNCTION_14_27(v36, v37);
  }
  v9 = v8;
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_policyWithEntityMetadata_, v2);
  *(_QWORD *)(v0 + 328) = 0;
  v13 = OUTLINED_FUNCTION_105_3(v12, sel_connectionWithError_);
  OUTLINED_FUNCTION_97_8((uint64_t)v13);
  v14 = *(void **)(v0 + 328);
  if (v2)
  {
    OUTLINED_FUNCTION_124_5();
    OUTLINED_FUNCTION_10_0(v15, (unint64_t *)&unk_1EF702600);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
    v16 = OUTLINED_FUNCTION_108();
    *(_OWORD *)(v16 + 16) = xmmword_1C1B3D9B0;
    *(_QWORD *)(v16 + 32) = v11;
    sub_1C1B0F3A4();
    v17 = objc_allocWithZone(MEMORY[0x1E0D44230]);
    OUTLINED_FUNCTION_151_4();
    v18 = v14;
    OUTLINED_FUNCTION_114_6((uint64_t)v10, sel_init);
    v19 = OUTLINED_FUNCTION_12_25();
    OUTLINED_FUNCTION_129_6(v19);
    v20 = OUTLINED_FUNCTION_52_13((uint64_t)sub_1C18B9B14);
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    v21 = OUTLINED_FUNCTION_73_10(v20, (uint64_t)sub_1C162E50C);
    OUTLINED_FUNCTION_1_40(v21, sel_performConfigurableQuery_completionHandler_);
    return OUTLINED_FUNCTION_15_32();
  }
  else
  {
    OUTLINED_FUNCTION_161_2();
    OUTLINED_FUNCTION_96_7();
    OUTLINED_FUNCTION_117_2();
    OUTLINED_FUNCTION_141_4();

    return OUTLINED_FUNCTION_45_5(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C18B94D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_132_6();
  *(_QWORD *)(v2 + 448) = v1;
  *(_QWORD *)(v2 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B9568()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  __n128 *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  OUTLINED_FUNCTION_202();
  v2 = *(void **)(v0 + 448);
  if (v2)
  {
    v3 = (void *)(v0 + 184);
    v4 = OUTLINED_FUNCTION_8_3(v1, sel_value);
    OUTLINED_FUNCTION_146_6();
    v5 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_10_0(v5, (unint64_t *)&unk_1EF6FA9A0);
    v6 = OUTLINED_FUNCTION_61_1();
    v7 = *(void **)(v0 + 432);
    if ((v6 & 1) == 0)
    {
      v23 = *(void **)(v0 + 424);

      goto LABEL_8;
    }
    v8 = *(void **)(v0 + 384);
    v9 = OUTLINED_FUNCTION_50_3(v6, sel_identifier);
    OUTLINED_FUNCTION_292();

    *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 456);
    *(_QWORD *)(v0 + 504) = v3;
    v10 = *(void **)(v0 + 424);
    if (v0 != -184)
    {
      v11 = (void *)objc_opt_self();
      v3;
      v12 = OUTLINED_FUNCTION_15_9(v11, sel_policyWithEntityMetadata_);
      *(_QWORD *)(v0 + 328) = 0;
      v13 = OUTLINED_FUNCTION_105_3(v12, sel_connectionWithError_);
      OUTLINED_FUNCTION_97_8((uint64_t)v13);
      v14 = *(void **)(v0 + 328);
      OUTLINED_FUNCTION_124_5();
      OUTLINED_FUNCTION_10_0(v15, (unint64_t *)&unk_1EF702600);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
      v16 = (__n128 *)OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_93_9(v16, (__n128)xmmword_1C1B3D9B0);
      v17 = objc_allocWithZone(MEMORY[0x1E0D44230]);
      OUTLINED_FUNCTION_151_4();
      v18 = v14;
      OUTLINED_FUNCTION_114_6((uint64_t)v11, sel_init);
      v19 = OUTLINED_FUNCTION_12_25();
      OUTLINED_FUNCTION_129_6(v19);
      v20 = OUTLINED_FUNCTION_52_13((uint64_t)sub_1C18B9B14);
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 88) = 0x40000000;
      v21 = OUTLINED_FUNCTION_73_10(v20, (uint64_t)sub_1C162E50C);
      OUTLINED_FUNCTION_1_40(v21, sel_performConfigurableQuery_completionHandler_);
      return OUTLINED_FUNCTION_15_32();
    }
  }
  else
  {
    v10 = *(void **)(v0 + 424);

  }
LABEL_8:
  v24 = OUTLINED_FUNCTION_128_9();
  return OUTLINED_FUNCTION_14_27(v24, v25);
}

uint64_t sub_1C18B97E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_132_6();
  *(_QWORD *)(v2 + 480) = v1;
  *(_QWORD *)(v2 + 488) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B987C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  __n128 *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  OUTLINED_FUNCTION_202();
  v1 = *(_QWORD *)(v0 + 480);
  swift_unknownObjectRelease();
  if (!v1)
  {
LABEL_7:

    goto LABEL_8;
  }
  objc_opt_self();
  v2 = (void *)OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_value);
    OUTLINED_FUNCTION_146_6();
    v4 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_10_0(v4, (unint64_t *)&unk_1EF6FA9A0);
    v5 = OUTLINED_FUNCTION_61_1();
    if ((_DWORD)v5)
    {
      v6 = *(void **)(v0 + 376);
      v7 = OUTLINED_FUNCTION_50_3(v5, sel_identifier);
      OUTLINED_FUNCTION_11_0();

      *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 488);
      *(_QWORD *)(v0 + 504) = v7;
      if (v7)
      {
        v8 = (void *)objc_opt_self();
        v7;
        v9 = OUTLINED_FUNCTION_15_9(v8, sel_policyWithEntityMetadata_);
        *(_QWORD *)(v0 + 328) = 0;
        v10 = OUTLINED_FUNCTION_105_3(v9, sel_connectionWithError_);
        OUTLINED_FUNCTION_97_8((uint64_t)v10);
        v11 = *(void **)(v0 + 328);
        OUTLINED_FUNCTION_124_5();
        OUTLINED_FUNCTION_10_0(v12, (unint64_t *)&unk_1EF702600);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
        v13 = (__n128 *)OUTLINED_FUNCTION_108();
        OUTLINED_FUNCTION_93_9(v13, (__n128)xmmword_1C1B3D9B0);
        v14 = objc_allocWithZone(MEMORY[0x1E0D44230]);
        OUTLINED_FUNCTION_151_4();
        v15 = v11;
        OUTLINED_FUNCTION_114_6((uint64_t)v8, sel_init);
        v16 = OUTLINED_FUNCTION_12_25();
        OUTLINED_FUNCTION_129_6(v16);
        v17 = OUTLINED_FUNCTION_52_13((uint64_t)sub_1C18B9B14);
        *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
        *(_QWORD *)(v0 + 88) = 0x40000000;
        v18 = OUTLINED_FUNCTION_73_10(v17, (uint64_t)sub_1C162E50C);
        OUTLINED_FUNCTION_1_40(v18, sel_performConfigurableQuery_completionHandler_);
        return OUTLINED_FUNCTION_15_32();
      }
      goto LABEL_7;
    }
  }
  v20 = *(void **)(v0 + 424);
  OUTLINED_FUNCTION_11_0();

LABEL_8:
  v21 = OUTLINED_FUNCTION_128_9();
  return OUTLINED_FUNCTION_14_27(v21, v22);
}

uint64_t sub_1C18B9B14()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_36_4();
  *(_QWORD *)(v0 + 528) = v1;
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18B9B98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  void *v43;
  void *v44;

  v2 = v1 + 42;
  v3 = (void *)v1[65];
  v4 = (void *)v1[64];
  v5 = (void *)v1[43];
  v6 = OUTLINED_FUNCTION_28_4(a1, sel_value);
  v1[67] = v6;

  v8 = OUTLINED_FUNCTION_34_2(v7, sel_value);
  sub_1C1B0F944();
  OUTLINED_FUNCTION_29_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB480);
  if (!OUTLINED_FUNCTION_61_1())
  {
    v28 = (void *)v1[63];
    v10 = (void *)v1[53];
LABEL_28:

    goto LABEL_29;
  }
  v9 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  v39 = OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_34();
  if (!v39)
  {
LABEL_27:
    v28 = (void *)v1[63];
    v10 = (void *)v1[53];
    OUTLINED_FUNCTION_34();
    goto LABEL_28;
  }
LABEL_4:
  v10 = v1 + 27;
  sub_1C1698ABC(0, (v9 & 0xC000000000000001) == 0, v9);
  if ((v9 & 0xC000000000000001) != 0)
    v11 = (id)MEMORY[0x1C3BB22A8](0, v9);
  else
    v11 = *(id *)(v9 + 32);
  v12 = v11;
  v1[68] = v11;
  v13 = (void *)v1[52];
  OUTLINED_FUNCTION_34();
  v14 = v12;
  sub_1C18B1AB0((uint64_t)v12);
  v16 = OUTLINED_FUNCTION_8_3(v15, sel_parameterIdentifiersNeedingValues);
  v17 = (void *)OUTLINED_FUNCTION_16_17();
  objc_msgSend(v16, sel_removeObjectForKey_, v17);

  v19 = OUTLINED_FUNCTION_28_4(v18, sel_value);
  sub_1C1B0F944();
  v20 = OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_10_0(v20, (unint64_t *)&unk_1EF6FA9A0);
  if (OUTLINED_FUNCTION_61_1())
    v21 = (void *)v1[44];
  else
    v21 = 0;
  if ((sub_1C18B40A8() & 1) == 0)
  {
    if (v21)
    {
LABEL_21:
      v30 = v1[49];
      v29 = (void *)v1[50];
      v31 = OUTLINED_FUNCTION_92_7();
      OUTLINED_FUNCTION_10_0((uint64_t)v31, (unint64_t *)&qword_1ED1E7520);
      v32 = sub_1C1B0F380();

      OUTLINED_FUNCTION_33();
      v10 = sub_1C18B0DD0(v32, v30, (uint64_t)v29);
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_22:
        v33 = v10;
        v1[70] = v33;
        v1[69] = v21;
        v34 = v1[53];
        v35 = (_QWORD *)OUTLINED_FUNCTION_116_9();
        v1[71] = v35;
        v35[2] = v33;
        v35[3] = v21;
        v35[4] = v34;
        v36 = v21;
        v37 = (_QWORD *)swift_task_alloc();
        v1[72] = v37;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF7025D0);
        *v37 = v1;
        v37[1] = sub_1C18BA088;
        OUTLINED_FUNCTION_19_0();
        return sub_1C1B0FC08();
      }
      OUTLINED_FUNCTION_141_6();

      goto LABEL_25;
    }
LABEL_23:
    OUTLINED_FUNCTION_141_6();

LABEL_25:
LABEL_29:

    goto LABEL_30;
  }
  if (!v21)
    goto LABEL_23;
  v22 = OUTLINED_FUNCTION_92_7();
  OUTLINED_FUNCTION_10_0((uint64_t)v22, (unint64_t *)&qword_1ED1E7520);
  v23 = sub_1C1B0F380();

  if (v23 >> 62)
  {
    OUTLINED_FUNCTION_68();
    v24 = sub_1C1B0FB3C();
    OUTLINED_FUNCTION_20();
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_20();
  if (v24 != 1)
    goto LABEL_21;
  v25 = OUTLINED_FUNCTION_92_7();
  v26 = sub_1C1B0F380();

  if (v26 >> 62)
  {
    OUTLINED_FUNCTION_33();
    v42 = sub_1C1B0FB3C();
    OUTLINED_FUNCTION_13();
    if (v42)
      goto LABEL_16;
  }
  else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    sub_1C1698ABC(0, (v26 & 0xC000000000000001) == 0, v26);
    if ((v26 & 0xC000000000000001) != 0)
      v27 = (id)MEMORY[0x1C3BB22A8](0, v26);
    else
      v27 = *(id *)(v26 + 32);
    v10 = v27;
    OUTLINED_FUNCTION_13();
    goto LABEL_22;
  }
  v43 = (void *)v1[63];
  v44 = (void *)v1[53];

  OUTLINED_FUNCTION_13();
LABEL_30:
  v40 = OUTLINED_FUNCTION_128_9();
  return v41(v40);
}

uint64_t sub_1C18BA088()
{
  OUTLINED_FUNCTION_56_1();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18BA0F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 560);
  v2 = *(void **)(v0 + 552);
  v3 = *(void **)(v0 + 544);
  v4 = *(void **)(v0 + 536);
  v5 = *(void **)(v0 + 504);
  v6 = *(void **)(v0 + 424);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 360));
}

uint64_t sub_1C18BA1A0()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);

  v1 = *(void **)(v0 + 424);

  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_171_2();
  return OUTLINED_FUNCTION_13_0(v2);
}

uint64_t sub_1C18BA1F8()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);

  v1 = *(void **)(v0 + 424);
  swift_unknownObjectRelease();

  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_171_2();
  return OUTLINED_FUNCTION_13_0(v2);
}

uint64_t sub_1C18BA254()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 520);
  v3 = *(void **)(v0 + 504);
  v2 = *(void **)(v0 + 512);
  v4 = *(void **)(v0 + 424);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C18BA2E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1C18BA2FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t (*v11)(void);

  v1 = *(void **)(v0 + 24);
  v2 = (void *)OUTLINED_FUNCTION_16_17();
  v3 = objc_msgSend(v1, sel_parameterForKey_, v2);
  *(_QWORD *)(v0 + 32) = v3;

  if (v3)
  {
    v4 = objc_msgSend(*(id *)(v0 + 24), sel_workQueue);
    *(_QWORD *)(v0 + 40) = v4;
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v0 + 24);
      v7 = (_QWORD *)OUTLINED_FUNCTION_116_9();
      *(_QWORD *)(v0 + 48) = v7;
      v7[2] = v6;
      v7[3] = v3;
      v7[4] = v5;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF7025D0);
      *v8 = v0;
      v8[1] = sub_1C18BA428;
      OUTLINED_FUNCTION_19_0();
      return sub_1C1B0FC5C();
    }

  }
  v10 = OUTLINED_FUNCTION_128_9();
  return OUTLINED_FUNCTION_7_2(v10, v11);
}

uint64_t sub_1C18BA428()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_19_0();
  return swift_task_switch();
}

uint64_t sub_1C18BA490()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C18BA4C8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);

  OUTLINED_FUNCTION_34_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C18BA508(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11, v12, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1C18BB724;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C179D6B8;
  aBlock[3] = &block_descriptor_77;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_wf_getValueForEntity_entityMetadata_completionHandler_, a3, a4, v16);
  _Block_release(v16);
}

void sub_1C18BA650(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD aBlock[3];
  void *v27;
  uint64_t (*v28)(uint64_t, uint64_t, void *);
  uint64_t v29;

  v24 = a2;
  v25 = a4;
  v23 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF7026C0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5, v8, v9, v10);
  v27 = (void *)sub_1C15B882C(0, (unint64_t *)&qword_1EF6FC4F0);
  aBlock[0] = a3;
  v11 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v12 = a3;
  sub_1C18BACC8(aBlock);
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FDB40);
  sub_1C1B0F170();
  v15 = (void *)sub_1C1B0F14C();
  swift_bridgeObjectRelease();
  sub_1C1B0F170();
  v16 = (void *)sub_1C1B0F14C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v5);
  v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v19 = v24;
  *(_QWORD *)(v18 + ((v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  v28 = sub_1C18BB6B4;
  v29 = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C18B4698;
  v27 = &block_descriptor_71_0;
  v20 = _Block_copy(aBlock);
  v21 = v19;
  swift_release();
  objc_msgSend(v21, sel_askForValuesOfParameters_withDefaultStates_prompts_input_workQueue_completionHandler_, v14, v15, v16, 0, v25, v20);
  _Block_release(v20);

}

uint64_t sub_1C18BA8A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  id v14;
  NSObject *v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;

  v5 = sub_1C1B0DFD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1C162BE40(0x797469746E65, 0xE600000000000000, a1, &v20);
    if (v21)
    {
      sub_1C15B882C(0, (unint64_t *)&unk_1ED1E7580);
      v12 = swift_dynamicCast();
      v13 = v19[1];
      if (!v12)
        v13 = 0;
    }
    else
    {
      sub_1C15BC0E8((uint64_t)&v20, (uint64_t *)&unk_1EF6FB470);
      v13 = 0;
    }
    *(_QWORD *)&v20 = v13;
  }
  else
  {
    if (a3)
    {
      *(_QWORD *)&v20 = a3;
      v14 = a3;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EF7026C0);
      return sub_1C1B0F470();
    }
    sub_1C1B0DF94();
    v16 = sub_1C1B0DFC4();
    v17 = sub_1C1B0F5FC();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1C15B3000, v16, (os_log_type_t)v17, "askForValues failed with no error", v18, 2u);
      MEMORY[0x1C3BB3ED4](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    *(_QWORD *)&v20 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF7026C0);
  return sub_1C1B0F47C();
}

uint64_t sub_1C18BAA8C()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_availableSubjectValues);
  v2 = sub_1C1B0F380();

  return v2;
}

uint64_t sub_1C18BAAD8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t sub_1C18BAAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C15E4A74;
  return WFEntityUpdatingAction.getValueForParameterData(_:ofProcessedParameters:)(a1, a2);
}

id sub_1C18BAB58()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1C1B0F1F4();
  v2 = objc_msgSend(v0, sel_parameterStateForKey_, v1);

  return v2;
}

id sub_1C18BABA4()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1C1B0F1F4();
  v2 = objc_msgSend(v0, sel_parameterMetadataForIdentifier_, v1);

  return v2;
}

uint64_t sub_1C18BABEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C18BB8C8;
  return WFEntityUpdatingAction.getEntityPropertyValue(for:context:)(a1, a2, a3);
}

id sub_1C18BAC50()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)sub_1C1B0F1F4();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_224();
  v2 = (void *)sub_1C1B0F1F4();
  OUTLINED_FUNCTION_15();
  v3 = objc_msgSend(v0, sel_initWithTypeIdentifier_instanceIdentifier_, v1, v2);

  return v3;
}

void sub_1C18BACC8(_QWORD *a1)
{
  void *v1;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1B0FC2C();
  OUTLINED_FUNCTION_105_3(v1, sel_initWithObject_);
  OUTLINED_FUNCTION_42_5();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C18BAD20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1C16F5D58;
  return v6();
}

uint64_t sub_1C18BAD74(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1C16F5D58;
  return v7();
}

uint64_t sub_1C18BADC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C1B0F4AC();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_1C15BC0E8(a1, &qword_1EF6FC860);
  }
  else
  {
    sub_1C1B0F4A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1B0F464();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

void sub_1C18BAF0C()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160B54C);
}

void sub_1C18BAF18()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160B5BC);
}

void sub_1C18BAF24()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160B8B4);
}

void sub_1C18BAF30()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160BC44);
}

void sub_1C18BAF3C()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160BD04);
}

void sub_1C18BAF48()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160BEF8);
}

void sub_1C18BAF54()
{
  sub_1C18BAF60((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C160BFD0);
}

void sub_1C18BAF60(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = OUTLINED_FUNCTION_102_9();
  *v1 = v3;
  if (!(_DWORD)v4)
    *v1 = a1(v4, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C18BAFA8(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160B54C);
}

uint64_t sub_1C18BAFB4(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160B5BC);
}

uint64_t sub_1C18BAFC0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C18BAFE8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C18B84F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), (SEL *)&selRef_askForParameterValueForParameterName_request_dialogString_);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

void sub_1C18BB028(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C18B84F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), (SEL *)&selRef_confirmParameterValueForParameterName_request_dialogString_);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1C18BB084(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C18B84F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), (SEL *)&selRef_disambiguateParameterForParameterName_request_dialogString_);
}

void sub_1C18BB0A8(uint64_t a1)
{
  uint64_t v1;

  sub_1C18B8DC4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1C18BB0B4(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160B8B4);
}

uint64_t sub_1C18BB0C4(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160BC44);
}

uint64_t sub_1C18BB0D0(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160BD04);
}

uint64_t sub_1C18BB0DC(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160BEF8);
}

uint64_t sub_1C18BB0E8(uint64_t a1)
{
  return sub_1C18BB0F4(a1, (uint64_t (*)(BOOL))sub_1C160BFD0);
}

uint64_t sub_1C18BB0F4(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1C18BB134(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1C1B0F3BC();
  return result;
}

void sub_1C18BB160(void *a1)
{
  if (objc_msgSend(a1, sel_processedParameters))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC9E0);
    sub_1C1B0F164();
    OUTLINED_FUNCTION_117_2();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1C18BB1C8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_attributionBundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_1C1B0F224();

  return v3;
}

uint64_t sub_1C18BB234(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C1B0F224();

  return v3;
}

unint64_t sub_1C18BB298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7025E8;
  if (!qword_1EF7025E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF7025E0);
    result = MEMORY[0x1C3BB3DF0](&protocol conformance descriptor for TableTemplateParameterState<A>, v1);
    atomic_store(result, &qword_1EF7025E8);
  }
  return result;
}

uint64_t sub_1C18BB2DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C18B7D20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_1C18BB2E8(uint64_t a1)
{
  uint64_t v1;

  sub_1C18BA508(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t method lookup function for WFEntityUpdatingAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.entityMetadata.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.localizedNameForParameterKey.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.__allocating_init(identifier:metadata:metadataForParameterIdentifier:definition:serializedParameters:appIntentDescriptor:fullyQualifiedActionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.executor(_:needsValueWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.executor(_:needsConfirmationWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.executor(_:needsDisambiguationWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.showsAddButton(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of WFEntityUpdatingAction.parameterStateUpdateForPlusButton(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t sub_1C18BB3CC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C18BB3F0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C18BB424()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1C1606858;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1EF702678 + dword_1EF702678))(v2, v3, v4);
}

uint64_t sub_1C18BB494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1C16F5D58;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF702690 + dword_1EF702690))(v2, v3, v4);
}

uint64_t objectdestroy_43Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C18BB53C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1C16F5D58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF7026A0 + dword_1EF7026A0))(a1, v4, v5, v6);
}

uint64_t sub_1C18BB5C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C18BB5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C1608BAC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF7026B0 + dword_1EF7026B0))(a1, v4);
}

void sub_1C18BB654(uint64_t a1)
{
  uint64_t v1;

  sub_1C18BA650(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C18BB660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF7026C0);
  OUTLINED_FUNCTION_66_0();
  v3 = (v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_28_0(v4);

  return OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C18BB6B4(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF7026C0);
  return sub_1C18BA8A0(a1, a2, a3);
}

uint64_t sub_1C18BB724(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  OUTLINED_FUNCTION_67_1();
  return sub_1C183524C(a1);
}

uint64_t sub_1C18BB758(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C18BB7D8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return (uint64_t)*(id *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t objectdestroy_73Tm_0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_28_0(v0);
  return OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C18BB870()
{
  void *v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF700FF0);
  OUTLINED_FUNCTION_67_1();
  v0 = (void *)OUTLINED_FUNCTION_224();
  return sub_1C18B8F3C(v0);
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  return sub_1C1B0F8F0();
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  return sub_1C1B0F2A8();
}

unint64_t OUTLINED_FUNCTION_2_42()
{
  return sub_1C15DFF38();
}

uint64_t OUTLINED_FUNCTION_4_36()
{
  return sub_1C1B0FA10();
}

id OUTLINED_FUNCTION_7_33(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3, 0);
}

void OUTLINED_FUNCTION_8_37()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C17DDB2C(v5, v4, v1, v0, v3, v2, v6);
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return sub_1C1B0F740();
}

uint64_t OUTLINED_FUNCTION_14_27(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_15_32()
{
  return swift_continuation_await();
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return sub_1C1B0F1F4();
}

uint64_t OUTLINED_FUNCTION_17_24()
{
  return sub_1C1B0F1F4();
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0xB8))();
}

uint64_t OUTLINED_FUNCTION_20_27()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_24_26(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  sub_1C17DDB2C(a1, v1, v2, v6, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_29_21@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & a1) + 0xB0))();
}

uint64_t OUTLINED_FUNCTION_30_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xD8))();
}

uint64_t OUTLINED_FUNCTION_34_19()
{
  return sub_1C1B0F1F4();
}

uint64_t OUTLINED_FUNCTION_35_18()
{
  return sub_1C1B0F1F4();
}

uint64_t OUTLINED_FUNCTION_38_16(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_41_16()
{
  return sub_1C1B0FC44();
}

uint64_t OUTLINED_FUNCTION_45_11()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_47_13()
{
  sub_1C160B45C();
}

void OUTLINED_FUNCTION_48_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  sub_1C17DDB2C(a11, a12, v16, v15, v13, v14, v12);
}

uint64_t OUTLINED_FUNCTION_52_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = a1;
  return swift_continuation_init();
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return sub_1C1B0FB30();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  return 0x54656C6261544657;
}

void OUTLINED_FUNCTION_62_12()
{
  void *v0;

}

void OUTLINED_FUNCTION_70_13()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_73_15(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C17DDB2C(a1, a2, a3, a4, v5, v6, v4);
}

void OUTLINED_FUNCTION_76_9()
{
  JUMPOUT(0x1C3BB1BC4);
}

uint64_t OUTLINED_FUNCTION_77_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C162BAEC(0xD00000000000001DLL, (a1 - 32) | 0x8000000000000000, v1);
}

uint64_t OUTLINED_FUNCTION_80_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85_7(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_88_11()
{
  return sub_1C1B0F224();
}

uint64_t OUTLINED_FUNCTION_89_7()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_92_7()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 4040));
}

uint64_t OUTLINED_FUNCTION_93_9(__n128 *a1, __n128 a2)
{
  unint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_1C1B0F3A4();
}

void OUTLINED_FUNCTION_94_8()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_96_7()
{
  return sub_1C1B0DBB0();
}

void OUTLINED_FUNCTION_97_8(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 512) = a1;

}

uint64_t OUTLINED_FUNCTION_102_9()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_110_6(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

id OUTLINED_FUNCTION_114_6(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_116_9()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_117_7()
{
  return sub_1C1B0F200();
}

void *OUTLINED_FUNCTION_119_7()
{
  return sub_1C18B43FC();
}

uint64_t OUTLINED_FUNCTION_121_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xA8))();
}

uint64_t OUTLINED_FUNCTION_122_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xE0))();
}

void OUTLINED_FUNCTION_125_7()
{
  JUMPOUT(0x1C3BB3ED4);
}

uint64_t OUTLINED_FUNCTION_128_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_129_6(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 520) = result;
  *(_QWORD *)(v1 + 56) = v2;
  return result;
}

void OUTLINED_FUNCTION_132_6()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_134_5(uint64_t a1@<X8>)
{
  uint64_t v1;

}

void OUTLINED_FUNCTION_141_6()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_144_3()
{
  return sub_1C1B0F3EC();
}

uint64_t OUTLINED_FUNCTION_146_6()
{
  return sub_1C1B0F944();
}

uint64_t OUTLINED_FUNCTION_149_5()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_150_2()
{
  void *v0;

}

id OUTLINED_FUNCTION_151_4()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_152_3()
{
  return sub_1C18B40A8();
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  return sub_1C1B0F218();
}

uint64_t OUTLINED_FUNCTION_158_2()
{
  return swift_release();
}

id OUTLINED_FUNCTION_161_2()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_166_2()
{
  return sub_1C1B0F1F4();
}

uint64_t OUTLINED_FUNCTION_170_2()
{
  return sub_1C1B0DD6C();
}

uint64_t OUTLINED_FUNCTION_171_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_172_2(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1C18B18F4((uint64_t)va);
}

uint64_t sub_1C18BBE64()
{
  return 8;
}

void sub_1C18BBE6C(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1C18BBE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C160F70C;
  return sub_1C1661FB8(a1, a2);
}

uint64_t sub_1C18BBEEC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = v4;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a3;
  *(_OWORD *)(v5 + 200) = *a2;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1C18BBF08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_24_27();
  v1 = OUTLINED_FUNCTION_21_8((uint64_t)sub_1C18BBF74);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v2 = (_QWORD *)(v0 + 80);
  v2[1] = 0x40000000;
  v2[2] = sub_1C16622C8;
  v2[3] = &block_descriptor_31;
  v2[4] = v1;
  OUTLINED_FUNCTION_25_8(v1, sel_getStringRepresentation_);
  return OUTLINED_FUNCTION_19_9();
}

uint64_t sub_1C18BBF74()
{
  OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18BBFB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_5_41();
  *(_QWORD *)(v0 + 240) = v1;
  v2 = OUTLINED_FUNCTION_14_28(v1, (uint64_t)sub_1C18BBFE4);
  return OUTLINED_FUNCTION_16_9(v2, v3, v4, v5, v6);
}

uint64_t sub_1C18BBFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_37();
  if (!v1)
  {
    *(_QWORD *)(v3 + 256) = v0;
    *(_QWORD *)(v3 + 264) = v2;
  }
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C18BC028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BOOL8 v7;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 144) = v3;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FEB20);
  OUTLINED_FUNCTION_21_25();
  v4 = OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_22_28(v4);
  v5 = OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_25_27();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v7 = (((_BYTE)v0 - 104) & 1) == 0 && v5 < 0x4000;
  return OUTLINED_FUNCTION_10_30(v7, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C18BC0E8(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C1776C24;
  return sub_1C18BBEEC(a1, a2, a3, v8);
}

uint64_t sub_1C18BC15C()
{
  return 9;
}

void sub_1C18BC164(_QWORD *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C18BC170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C1608BAC;
  return sub_1C1661EB0(a1, a2);
}

uint64_t sub_1C18BC1E4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = v4;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a3;
  *(_OWORD *)(v5 + 200) = *a2;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1C18BC200()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_24_27();
  v1 = OUTLINED_FUNCTION_21_8((uint64_t)sub_1C18BC26C);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v2 = (_QWORD *)(v0 + 80);
  v2[1] = 0x40000000;
  v2[2] = sub_1C16622C8;
  v2[3] = &block_descriptor_16_0;
  v2[4] = v1;
  OUTLINED_FUNCTION_25_8(v1, sel_getStringRepresentation_);
  return OUTLINED_FUNCTION_19_9();
}

uint64_t sub_1C18BC26C()
{
  OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1C18BC2A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_5_41();
  *(_QWORD *)(v0 + 240) = v1;
  v2 = OUTLINED_FUNCTION_14_28(v1, (uint64_t)sub_1C18BC2DC);
  return OUTLINED_FUNCTION_16_9(v2, v3, v4, v5, v6);
}

uint64_t sub_1C18BC2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_37();
  if (!v1)
  {
    *(_QWORD *)(v3 + 256) = v0;
    *(_QWORD *)(v3 + 264) = v2;
  }
  OUTLINED_FUNCTION_19_0();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C18BC320()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 192) + *(int *)(*(_QWORD *)(v0 + 176) + 36));
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  if (v1)
    v4 = 5;
  else
    v4 = 4;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 152) = v2;
  *(_QWORD *)(v0 + 160) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FEB20);
  OUTLINED_FUNCTION_21_25();
  v5 = OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_22_28(v5);
  OUTLINED_FUNCTION_15_33();
  v7 = v6;
  OUTLINED_FUNCTION_25_27();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 232);
    if ((v8 & 0x2000000000000000) != 0)
      v9 = HIBYTE(v8) & 0xF;
    else
      v9 = *(_QWORD *)(v0 + 224) & 0xFFFFFFFFFFFFLL;
    v10 = v7 >> 14 == 4 * v9;
  }
  return OUTLINED_FUNCTION_10_30(v10, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C18BC40C()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C18BC44C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C18BC484(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C17759E8;
  return sub_1C18BC1E4(a1, a2, a3, v8);
}

uint64_t sub_1C18BC4F8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB3DF0](&unk_1C1B477DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C18BC524(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB3DF0](&unk_1C1B477C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C18BC550(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB3DF0](&unk_1C1B47864);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C18BC57C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB3DF0](&unk_1C1B47848);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C18BC5A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FEB20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for BeginsWithStringOperator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BeginsWithStringOperator);
}

uint64_t sub_1C18BC600()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C18BC674(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;
  int v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_21;
  v10 = v8 + 1;
  v11 = 8 * (v8 + 1);
  if ((v8 + 1) > 3)
    goto LABEL_7;
  v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
  if (HIWORD(v13))
  {
    v12 = *(_DWORD *)(a1 + v10);
    if (v12)
      goto LABEL_14;
    goto LABEL_21;
  }
  if (v13 > 0xFF)
  {
    v12 = *(unsigned __int16 *)(a1 + v10);
    if (*(_WORD *)(a1 + v10))
      goto LABEL_14;
LABEL_21:
    if (v6 >= 0xFE)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    v16 = *(unsigned __int8 *)(v8 + a1);
    if (v16 < 2)
      return 0;
    v17 = (v16 + 2147483646) & 0x7FFFFFFF;
    return (v17 + 1);
  }
  if (v13 < 2)
    goto LABEL_21;
LABEL_7:
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_21;
LABEL_14:
  v14 = (v12 - 1) << v11;
  if (v10 > 3)
    v14 = 0;
  if (!(_DWORD)v10)
  {
    v17 = v7 + v14;
    return (v17 + 1);
  }
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C18BC734 + 4 * byte_1C1B47760[(v10 - 1)]))();
}

void sub_1C18BC7A0(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v6 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v13 = v11 & ~(-1 << v9);
        OUTLINED_FUNCTION_24_8();
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          *(_BYTE *)(a1 + 2) = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_24_8();
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for EndsWithStringOperator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EndsWithStringOperator);
}

uint64_t OUTLINED_FUNCTION_5_41()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[16];
  v0[28] = v0[15];
  v0[29] = v1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_6_37()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 248) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_30(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_14_28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 200);
}

uint64_t OUTLINED_FUNCTION_15_33()
{
  return sub_1C1B0F92C();
}

void OUTLINED_FUNCTION_17_25()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v2 = *v0;
  v3 = (uint64_t *)(v1 - 8);
  *v3 = *v0;
  *v3 = *v0;
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(v2 + 48);
}

uint64_t OUTLINED_FUNCTION_21_25()
{
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_22_28(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return sub_1C15DFF38();
}

void OUTLINED_FUNCTION_24_27()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = v0 + 120;
}

uint64_t OUTLINED_FUNCTION_25_27()
{
  uint64_t v0;

  return sub_1C18BC5A8(v0);
}

uint64_t OUTLINED_FUNCTION_28_19()
{
  return sub_1C1B0DD6C();
}

void sub_1C18BCA9C()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD000000000000024, 0x80000001C1B4B410, (uint64_t)sub_1C18BCAC4, 0);
}

void sub_1C18BCAC4()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  __CFString *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  __CFString *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  __CFString *v56;
  __CFString *v57;
  __CFString *v58;
  __CFString *v59;
  uint64_t v60;
  uint64_t v61;
  __CFString *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __CFString *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  __CFString *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __CFString *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __CFString *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __CFString *v144;
  void *v145;
  __CFString *v146;
  __CFString *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  __CFString *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __CFString *v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __CFString *v182;
  __CFString *v183;
  void *v184;
  __CFString *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  __CFString *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  id v207;
  uint64_t v208;
  __CFString *v209;
  uint64_t v210;
  uint64_t v211;
  __CFString *v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  __CFString *v219;
  __CFString *v220;
  __CFString *v221;
  uint64_t v222;
  __CFString *v223;
  uint64_t v224;
  __CFString *v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  __CFString *v235;
  __CFString *v236;
  uint64_t v237;
  __CFString *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  __CFString *v252;
  uint64_t v253;
  __CFString *v254;
  __CFString *v255;
  __CFString *v256;
  __CFString *v257;
  __CFString *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  id v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  id v267;
  __CFString *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  __CFString *v272;
  __CFString *v273;
  __CFString *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  id v283;
  uint64_t v284;
  __CFString *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  unint64_t v292;
  __CFString *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  __CFString *v297;
  __CFString *v298;
  __CFString *v299;
  __CFString *v300;
  __CFString *v301;
  __CFString *v302;
  __CFString *v303;
  __CFString *v304;
  __CFString *v305;
  __CFString *v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  id v316;
  uint64_t v317;
  uint64_t v318;
  void *v319;
  id v320;
  uint64_t v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  id v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  uint64_t v331;
  __CFString *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  __CFString *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  id v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  id v348;
  void *v349;
  void *v350;
  id v351;
  uint64_t v352;
  _QWORD *v353;
  __CFString *v354;
  uint64_t v355;
  _QWORD v356[2];
  uint64_t v357;
  uint64_t v358;
  __CFString *v359;
  __CFString *v360;
  id v361;
  __CFString *v362;
  __CFString *v363;
  __CFString *v364;
  __CFString *v365;
  __CFString *v366;
  __CFString *v367;
  __CFString *v368;
  __CFString *v369;
  uint64_t v370;
  __int128 v371;
  unint64_t v372;
  uint64_t v373;
  __CFString *v374;
  __CFString *v375;
  uint64_t v376;
  unint64_t v377;
  unint64_t v378;
  unint64_t v379;
  __int128 v380;
  __int128 v381;
  __CFString *v382;
  __int128 v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  uint64_t v388;
  _QWORD *v389;
  _QWORD *v390;
  _QWORD *v391;
  uint64_t v392;
  uint64_t v393;
  _QWORD *v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;

  v370 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D9F0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000018;
  *(_QWORD *)(inited + 48) = 0x80000001C1B8F4C0;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  sub_1C1B0F260();
  v4 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v395 = v8;
  v398 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v9 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v10 = sub_1C1B0DC1C();
  v397 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10, v11, v12, v13);
  v396 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v17 = v16;
  v18 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v393 = v18;
  *(_QWORD *)(inited + 80) = v17;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = CFSTR("Description");
  v392 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1B3D9C0;
  *(_QWORD *)(v19 + 32) = CFSTR("DescriptionResult");
  v20 = CFSTR("Description");
  v21 = CFSTR("DescriptionResult");
  v22 = sub_1C1B0F260();
  v390 = v23;
  v391 = (_QWORD *)v22;
  v24 = sub_1C1B0F260();
  v394 = v356;
  MEMORY[0x1E0C80A78](v24, v25, v26, v27);
  sub_1C1B0DD24();
  v28 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v387 = (_QWORD *)inited;
  v29 = v28;
  MEMORY[0x1E0C80A78](v28, v30, v31, v32);
  sub_1C1B0DC04();

  v33 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v34 = v393;
  *(_QWORD *)(v19 + 40) = v35;
  *(_QWORD *)(v19 + 64) = v34;
  *(_QWORD *)(v19 + 72) = CFSTR("DescriptionSummary");
  v36 = CFSTR("DescriptionSummary");
  v37 = sub_1C1B0F260();
  v390 = v38;
  v391 = (_QWORD *)v37;
  v389 = (_QWORD *)sub_1C1B0F260();
  v394 = v356;
  MEMORY[0x1E0C80A78](v389, v39, v40, v41);
  sub_1C1B0DD24();
  v42 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v42, v43, v44, v45);
  sub_1C1B0DC04();

  v46 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v19 + 104) = v34;
  *(_QWORD *)(v19 + 80) = v47;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v394 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v48 = v392;
  v49 = sub_1C18C3CBC();
  v50 = v387;
  v387[15] = v49;
  v50[18] = v48;
  v50[19] = CFSTR("IconColor");
  v50[20] = 1953392980;
  v50[21] = 0xE400000000000000;
  v51 = MEMORY[0x1E0DEA968];
  v50[23] = MEMORY[0x1E0DEA968];
  v50[24] = CFSTR("IconSymbol");
  v372 = 0xD000000000000022;
  v50[25] = 0xD000000000000022;
  v50[26] = 0x80000001C1B8F690;
  v50[28] = v51;
  v50[29] = CFSTR("IconSymbolColor");
  v50[30] = 1702194242;
  v50[31] = 0xE400000000000000;
  v50[33] = v51;
  v50[34] = CFSTR("Input");
  v52 = v51;
  v53 = v50;
  v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v54 = swift_initStackObject();
  v383 = xmmword_1C1B3D970;
  *(_OWORD *)(v54 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v54 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v54 + 40) = 0xE800000000000000;
  v55 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v54 + 48) = 0;
  *(_QWORD *)(v54 + 72) = v55;
  strcpy((char *)(v54 + 80), "ParameterKey");
  *(_BYTE *)(v54 + 93) = 0;
  *(_WORD *)(v54 + 94) = -5120;
  strcpy((char *)(v54 + 96), "WFXCallbackURL");
  *(_BYTE *)(v54 + 111) = -18;
  *(_QWORD *)(v54 + 120) = v52;
  *(_QWORD *)(v54 + 128) = 0x6465726975716552;
  *(_QWORD *)(v54 + 136) = 0xE800000000000000;
  *(_BYTE *)(v54 + 144) = 1;
  *(_QWORD *)(v54 + 168) = v55;
  *(_QWORD *)(v54 + 176) = 0x7365707954;
  *(_QWORD *)(v54 + 184) = 0xE500000000000000;
  v373 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v54 + 216) = v373;
  *(_QWORD *)(v54 + 192) = &unk_1E7ADED88;
  v56 = CFSTR("IconColor");
  v57 = CFSTR("IconSymbol");
  v58 = CFSTR("IconSymbolColor");
  v59 = CFSTR("Input");
  v60 = sub_1C1B0F170();
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  v392 = v61;
  v53[35] = v60;
  v53[38] = v61;
  v53[39] = CFSTR("Name");
  v62 = CFSTR("Name");
  v63 = sub_1C1B0F260();
  v389 = v64;
  v390 = (_QWORD *)v63;
  v65 = sub_1C1B0F260();
  v391 = v356;
  MEMORY[0x1E0C80A78](v65, v66, v67, v68);
  sub_1C1B0DD24();
  v69 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v69, v70, v71, v72);
  sub_1C1B0DC04();

  v73 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v74 = v387;
  v387[40] = v75;
  v76 = v393;
  v74[43] = v393;
  v74[44] = CFSTR("Output");
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = v383;
  *(_QWORD *)(v77 + 32) = 0x75736F6C63736944;
  *(_QWORD *)(v77 + 40) = 0xEF6C6576654C6572;
  *(_QWORD *)(v77 + 48) = 0x63696C627550;
  *(_QWORD *)(v77 + 56) = 0xE600000000000000;
  *(_QWORD *)(v77 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v77 + 80) = 0x656C7069746C754DLL;
  *(_QWORD *)(v77 + 88) = 0xE800000000000000;
  *(_BYTE *)(v77 + 96) = 0;
  *(_QWORD *)(v77 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v77 + 128) = 0x614E74757074754FLL;
  *(_QWORD *)(v77 + 136) = 0xEA0000000000656DLL;
  v78 = CFSTR("Output");
  v79 = sub_1C1B0F260();
  v389 = v80;
  v390 = (_QWORD *)v79;
  v81 = sub_1C1B0F260();
  v388 = v82;
  v391 = v356;
  MEMORY[0x1E0C80A78](v81, v82, v83, v84);
  sub_1C1B0DD24();
  v85 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v85, v86, v87, v88);
  sub_1C1B0DC04();

  v89 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v77 + 144) = v90;
  *(_QWORD *)(v77 + 168) = v76;
  *(_QWORD *)(v77 + 176) = 0x7365707954;
  *(_QWORD *)(v77 + 216) = v373;
  *(_QWORD *)(v77 + 184) = 0xE500000000000000;
  *(_QWORD *)(v77 + 192) = &unk_1E7ADEDB8;
  v91 = MEMORY[0x1E0DEA968];
  v92 = sub_1C1B0F170();
  v93 = v387;
  v387[45] = v92;
  v93[48] = v392;
  v93[49] = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v392 = swift_allocObject();
  *(_OWORD *)(v392 + 16) = xmmword_1C1B43080;
  v391 = (_QWORD *)sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  v390 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = v383;
  v369 = (__CFString *)0xD000000000000011;
  *(_QWORD *)(v94 + 32) = CFSTR("Class");
  *(_QWORD *)(v94 + 40) = 0xD000000000000011;
  v368 = (__CFString *)0x80000001C1B4FF70;
  *(_QWORD *)(v94 + 48) = 0x80000001C1B4FF70;
  *(_QWORD *)(v94 + 64) = v91;
  *(_QWORD *)(v94 + 72) = CFSTR("Description");
  v95 = CFSTR("Parameters");
  v382 = CFSTR("Class");
  v367 = CFSTR("Description");
  v388 = sub_1C1B0F260();
  v385 = v96;
  v97 = sub_1C1B0F260();
  v384 = v98;
  v389 = v356;
  MEMORY[0x1E0C80A78](v97, v98, v99, v100);
  sub_1C1B0DD24();
  v101 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v101, v102, v103, v104);
  sub_1C1B0DC04();

  v105 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v94 + 80) = v106;
  v107 = v393;
  *(_QWORD *)(v94 + 104) = v393;
  *(_QWORD *)(v94 + 112) = CFSTR("Key");
  v374 = (__CFString *)0xD000000000000020;
  v375 = (__CFString *)0x80000001C1B8F8E0;
  *(_QWORD *)(v94 + 120) = 0xD000000000000020;
  *(_QWORD *)(v94 + 128) = 0x80000001C1B8F8E0;
  *(_QWORD *)(v94 + 144) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v94 + 152) = CFSTR("Label");
  *(_QWORD *)&v380 = CFSTR("Key");
  *(_QWORD *)&v381 = CFSTR("Label");
  v388 = sub_1C1B0F260();
  v385 = v108;
  v109 = sub_1C1B0F260();
  v389 = v356;
  MEMORY[0x1E0C80A78](v109, v110, v111, v112);
  sub_1C1B0DD24();
  v113 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v113, v114, v115, v116);
  sub_1C1B0DC04();

  v117 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v94 + 184) = v107;
  *(_QWORD *)(v94 + 160) = v118;
  type metadata accessor for Key(0);
  v389 = v119;
  v388 = sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v120 = sub_1C1B0F170();
  sub_1C163A904(v120);
  *(_QWORD *)(v392 + 32) = v121;
  v122 = swift_allocObject();
  v371 = xmmword_1C1B3D990;
  *(_OWORD *)(v122 + 16) = xmmword_1C1B3D990;
  v123 = v382;
  *(_QWORD *)(v122 + 32) = v382;
  *(_QWORD *)(v122 + 40) = 0xD000000000000014;
  v384 = 0x80000001C1B4DAB0;
  *(_QWORD *)(v122 + 48) = 0x80000001C1B4DAB0;
  v124 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v122 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v122 + 72) = CFSTR("DefaultValue");
  *(_QWORD *)(v122 + 80) = 0x7365636375732D78;
  *(_QWORD *)(v122 + 88) = 0xE900000000000073;
  v125 = (void *)v380;
  *(_QWORD *)(v122 + 104) = v124;
  *(_QWORD *)(v122 + 112) = v125;
  v385 = 0xD00000000000001BLL;
  *(_QWORD *)(v122 + 120) = 0xD00000000000001BLL;
  *(_QWORD *)(v122 + 128) = 0x80000001C1B8F960;
  *(_QWORD *)(v122 + 144) = v124;
  *(_QWORD *)(v122 + 152) = CFSTR("KeyboardType");
  *(_QWORD *)(v122 + 160) = 5001813;
  *(_QWORD *)(v122 + 168) = 0xE300000000000000;
  v126 = (void *)v381;
  *(_QWORD *)(v122 + 184) = v124;
  *(_QWORD *)(v122 + 192) = v126;
  v365 = v123;
  v366 = CFSTR("DefaultValue");
  v361 = v125;
  v363 = CFSTR("KeyboardType");
  v362 = v126;
  sub_1C1B0F260();
  v127 = sub_1C1B0F260();
  v382 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v127, v128, v129, v130);
  sub_1C1B0DD24();
  v131 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v131, v132, v133, v134);
  sub_1C1B0DC04();

  v135 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v122 + 200) = v136;
  *(_QWORD *)(v122 + 224) = v393;
  *(_QWORD *)(v122 + 232) = CFSTR("RequiredResources");
  v382 = (__CFString *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEE0);
  v137 = swift_allocObject();
  v381 = xmmword_1C1B3BEB0;
  *(_OWORD *)(v137 + 16) = xmmword_1C1B3BEB0;
  v138 = swift_allocObject();
  v380 = xmmword_1C1B3D9D0;
  *(_OWORD *)(v138 + 16) = xmmword_1C1B3D9D0;
  strcpy((char *)(v138 + 32), "WFParameterKey");
  *(_BYTE *)(v138 + 47) = -18;
  v139 = v375;
  *(_QWORD *)(v138 + 48) = v374;
  *(_QWORD *)(v138 + 56) = v139;
  v379 = 0xD000000000000010;
  v140 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v138 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v138 + 80) = 0xD000000000000010;
  v378 = 0x80000001C1B48120;
  *(_QWORD *)(v138 + 88) = 0x80000001C1B48120;
  *(_BYTE *)(v138 + 96) = 1;
  *(_QWORD *)(v138 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v138 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v138 + 168) = v140;
  *(_QWORD *)(v138 + 136) = 0xEF7373616C436563;
  v377 = 0x80000001C1B48140;
  *(_QWORD *)(v138 + 144) = v385;
  *(_QWORD *)(v138 + 152) = 0x80000001C1B48140;
  v360 = CFSTR("RequiredResources");
  *(_QWORD *)(v137 + 32) = sub_1C1B0F170();
  v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEE8);
  *(_QWORD *)(v122 + 264) = v376;
  *(_QWORD *)(v122 + 240) = v137;
  v141 = sub_1C1B0F170();
  sub_1C163A904(v141);
  *(_QWORD *)(v392 + 40) = v142;
  v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = v371;
  v144 = v365;
  *(_QWORD *)(v143 + 32) = v365;
  *(_QWORD *)(v143 + 40) = 0xD000000000000014;
  *(_QWORD *)(v143 + 48) = v384;
  v145 = v361;
  v146 = v362;
  *(_QWORD *)(v143 + 64) = v140;
  *(_QWORD *)(v143 + 72) = v145;
  *(_QWORD *)(v143 + 80) = 0xD00000000000001ALL;
  *(_QWORD *)(v143 + 88) = 0x80000001C1B8F9C0;
  v147 = v363;
  *(_QWORD *)(v143 + 104) = v140;
  *(_QWORD *)(v143 + 112) = v147;
  *(_QWORD *)(v143 + 120) = 5001813;
  *(_QWORD *)(v143 + 128) = 0xE300000000000000;
  *(_QWORD *)(v143 + 144) = v140;
  *(_QWORD *)(v143 + 152) = v146;
  v364 = v144;
  v361 = v145;
  v365 = v147;
  v363 = v146;
  v148 = sub_1C1B0F260();
  v358 = v149;
  v359 = (__CFString *)v148;
  v357 = sub_1C1B0F260();
  v362 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v357, v150, v151, v152);
  sub_1C1B0DD24();
  v153 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v153, v154, v155, v156);
  sub_1C1B0DC04();

  v157 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v143 + 160) = v158;
  v159 = v393;
  *(_QWORD *)(v143 + 184) = v393;
  *(_QWORD *)(v143 + 192) = CFSTR("Placeholder");
  v362 = CFSTR("Placeholder");
  v160 = sub_1C1B0F260();
  v357 = v161;
  v358 = v160;
  v162 = sub_1C1B0F260();
  v356[1] = v163;
  v359 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v162, v163, v164, v165);
  sub_1C1B0DD24();
  v166 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v166, v167, v168, v169);
  sub_1C1B0DC04();

  v170 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v171 = v360;
  *(_QWORD *)(v143 + 200) = v172;
  *(_QWORD *)(v143 + 224) = v159;
  *(_QWORD *)(v143 + 232) = v171;
  v173 = swift_allocObject();
  *(_OWORD *)(v173 + 16) = v381;
  v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = v380;
  strcpy((char *)(v174 + 32), "WFParameterKey");
  *(_BYTE *)(v174 + 47) = -18;
  v175 = v375;
  *(_QWORD *)(v174 + 48) = v374;
  *(_QWORD *)(v174 + 56) = v175;
  v176 = MEMORY[0x1E0DEA968];
  v177 = v379;
  *(_QWORD *)(v174 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v174 + 80) = v177;
  *(_QWORD *)(v174 + 88) = v378;
  *(_BYTE *)(v174 + 96) = 1;
  *(_QWORD *)(v174 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v174 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v174 + 168) = v176;
  *(_QWORD *)(v174 + 136) = 0xEF7373616C436563;
  v178 = v377;
  *(_QWORD *)(v174 + 144) = v385;
  *(_QWORD *)(v174 + 152) = v178;
  v359 = v171;
  *(_QWORD *)(v173 + 32) = sub_1C1B0F170();
  *(_QWORD *)(v143 + 264) = v376;
  *(_QWORD *)(v143 + 240) = v173;
  v179 = sub_1C1B0F170();
  sub_1C163A904(v179);
  *(_QWORD *)(v392 + 48) = v180;
  v181 = swift_allocObject();
  *(_OWORD *)(v181 + 16) = v371;
  v182 = v364;
  v183 = v365;
  *(_QWORD *)(v181 + 32) = v364;
  *(_QWORD *)(v181 + 40) = 0xD000000000000014;
  *(_QWORD *)(v181 + 48) = v384;
  v184 = v361;
  *(_QWORD *)(v181 + 64) = v176;
  *(_QWORD *)(v181 + 72) = v184;
  *(_QWORD *)(v181 + 80) = 0xD000000000000019;
  *(_QWORD *)(v181 + 88) = 0x80000001C1B8FA50;
  *(_QWORD *)(v181 + 104) = v176;
  *(_QWORD *)(v181 + 112) = v183;
  *(_QWORD *)(v181 + 120) = 5001813;
  *(_QWORD *)(v181 + 128) = 0xE300000000000000;
  *(_QWORD *)(v181 + 144) = v176;
  v185 = v363;
  *(_QWORD *)(v181 + 152) = v363;
  v360 = v182;
  v364 = v184;
  v365 = v183;
  v363 = v185;
  v361 = (id)sub_1C1B0F260();
  v358 = v186;
  v357 = sub_1C1B0F260();
  *(_QWORD *)&v371 = v356;
  MEMORY[0x1E0C80A78](v357, v187, v188, v189);
  sub_1C1B0DD24();
  v190 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v190, v191, v192, v193);
  sub_1C1B0DC04();

  v194 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v181 + 160) = v195;
  v196 = v393;
  v197 = v362;
  *(_QWORD *)(v181 + 184) = v393;
  *(_QWORD *)(v181 + 192) = v197;
  *(_QWORD *)&v371 = v197;
  v361 = (id)sub_1C1B0F260();
  v358 = v198;
  v199 = sub_1C1B0F260();
  v362 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v199, v200, v201, v202);
  sub_1C1B0DD24();
  v203 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v203, v204, v205, v206);
  sub_1C1B0DC04();

  v207 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v181 + 200) = v208;
  v209 = v359;
  *(_QWORD *)(v181 + 224) = v196;
  *(_QWORD *)(v181 + 232) = v209;
  v210 = swift_allocObject();
  *(_OWORD *)(v210 + 16) = v381;
  v211 = swift_allocObject();
  *(_OWORD *)(v211 + 16) = v380;
  strcpy((char *)(v211 + 32), "WFParameterKey");
  *(_BYTE *)(v211 + 47) = -18;
  v212 = v375;
  *(_QWORD *)(v211 + 48) = v374;
  *(_QWORD *)(v211 + 56) = v212;
  v213 = MEMORY[0x1E0DEA968];
  v214 = v379;
  *(_QWORD *)(v211 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v211 + 80) = v214;
  *(_QWORD *)(v211 + 88) = v378;
  *(_BYTE *)(v211 + 96) = 1;
  *(_QWORD *)(v211 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v211 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v211 + 168) = v213;
  *(_QWORD *)(v211 + 136) = 0xEF7373616C436563;
  v215 = v377;
  *(_QWORD *)(v211 + 144) = v385;
  *(_QWORD *)(v211 + 152) = v215;
  v375 = v209;
  *(_QWORD *)(v210 + 32) = sub_1C1B0F170();
  *(_QWORD *)(v181 + 264) = v376;
  *(_QWORD *)(v181 + 240) = v210;
  v216 = sub_1C1B0F170();
  sub_1C163A904(v216);
  *(_QWORD *)(v392 + 56) = v217;
  v218 = swift_allocObject();
  *(_OWORD *)(v218 + 16) = v383;
  v219 = v360;
  v220 = v369;
  *(_QWORD *)(v218 + 32) = v360;
  *(_QWORD *)(v218 + 40) = v220;
  v221 = v367;
  *(_QWORD *)(v218 + 48) = v368;
  *(_QWORD *)(v218 + 64) = v213;
  *(_QWORD *)(v218 + 72) = v221;
  v374 = v219;
  v367 = v221;
  v222 = sub_1C1B0F260();
  v368 = v223;
  v369 = (__CFString *)v222;
  v224 = sub_1C1B0F260();
  v362 = v225;
  *(_QWORD *)&v383 = v356;
  MEMORY[0x1E0C80A78](v224, v225, v226, v227);
  sub_1C1B0DD24();
  v228 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v228, v229, v230, v231);
  sub_1C1B0DC04();

  v232 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v218 + 80) = v233;
  v234 = v393;
  v236 = v363;
  v235 = v364;
  *(_QWORD *)(v218 + 104) = v393;
  *(_QWORD *)(v218 + 112) = v235;
  *(_QWORD *)&v383 = 0x80000001C1B8FC40;
  *(_QWORD *)(v218 + 120) = v372;
  *(_QWORD *)(v218 + 128) = 0x80000001C1B8FC40;
  *(_QWORD *)(v218 + 144) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v218 + 152) = v236;
  v368 = v235;
  v369 = v236;
  v237 = sub_1C1B0F260();
  v362 = v238;
  v363 = (__CFString *)v237;
  v239 = sub_1C1B0F260();
  v364 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v239, v240, v241, v242);
  sub_1C1B0DD24();
  v243 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v243, v244, v245, v246);
  sub_1C1B0DC04();

  v247 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v218 + 184) = v234;
  *(_QWORD *)(v218 + 160) = v248;
  v249 = sub_1C1B0F170();
  sub_1C163A904(v249);
  *(_QWORD *)(v392 + 64) = v250;
  v251 = swift_allocObject();
  *(_OWORD *)(v251 + 16) = xmmword_1C1B3DA00;
  v252 = v374;
  *(_QWORD *)(v251 + 32) = v374;
  *(_QWORD *)(v251 + 40) = 0xD000000000000014;
  *(_QWORD *)(v251 + 48) = v384;
  v253 = MEMORY[0x1E0DEA968];
  v254 = v366;
  v255 = v367;
  *(_QWORD *)(v251 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v251 + 72) = v254;
  *(_QWORD *)(v251 + 80) = 0xD000000000000014;
  *(_QWORD *)(v251 + 88) = 0x80000001C1B8FCD0;
  *(_QWORD *)(v251 + 104) = v253;
  *(_QWORD *)(v251 + 112) = v255;
  v374 = v252;
  v256 = v254;
  v257 = v255;
  v366 = (__CFString *)sub_1C1B0F260();
  v364 = v258;
  v259 = sub_1C1B0F260();
  v367 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v259, v260, v261, v262);
  sub_1C1B0DD24();
  v263 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v263, v264, v265, v266);
  sub_1C1B0DC04();

  v267 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v268 = v368;
  *(_QWORD *)(v251 + 120) = v269;
  v270 = v393;
  *(_QWORD *)(v251 + 144) = v393;
  *(_QWORD *)(v251 + 152) = v268;
  *(_QWORD *)(v251 + 160) = v385;
  *(_QWORD *)(v251 + 168) = 0x80000001C1B8FDA0;
  v271 = MEMORY[0x1E0DEA968];
  v272 = v365;
  *(_QWORD *)(v251 + 184) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v251 + 192) = v272;
  *(_QWORD *)(v251 + 200) = 5001813;
  *(_QWORD *)(v251 + 208) = 0xE300000000000000;
  v273 = v369;
  *(_QWORD *)(v251 + 224) = v271;
  *(_QWORD *)(v251 + 232) = v273;
  v368 = v268;
  v367 = v272;
  v369 = v273;
  sub_1C1B0F260();
  v365 = v274;
  v275 = sub_1C1B0F260();
  v366 = (__CFString *)v356;
  MEMORY[0x1E0C80A78](v275, v276, v277, v278);
  sub_1C1B0DD24();
  v279 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v279, v280, v281, v282);
  sub_1C1B0DC04();

  v283 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v251 + 240) = v284;
  v285 = v375;
  *(_QWORD *)(v251 + 264) = v270;
  *(_QWORD *)(v251 + 272) = v285;
  v286 = swift_allocObject();
  *(_OWORD *)(v286 + 16) = v381;
  v287 = swift_allocObject();
  *(_OWORD *)(v287 + 16) = v380;
  strcpy((char *)(v287 + 32), "WFParameterKey");
  *(_BYTE *)(v287 + 47) = -18;
  v288 = v383;
  *(_QWORD *)(v287 + 48) = v372;
  *(_QWORD *)(v287 + 56) = v288;
  v289 = MEMORY[0x1E0DEA968];
  v290 = v379;
  *(_QWORD *)(v287 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v287 + 80) = v290;
  *(_QWORD *)(v287 + 88) = v378;
  *(_BYTE *)(v287 + 96) = 1;
  v291 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v287 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v287 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v287 + 168) = v289;
  *(_QWORD *)(v287 + 136) = 0xEF7373616C436563;
  v292 = v377;
  *(_QWORD *)(v287 + 144) = v385;
  *(_QWORD *)(v287 + 152) = v292;
  v293 = v285;
  *(_QWORD *)(v286 + 32) = sub_1C1B0F170();
  *(_QWORD *)(v251 + 304) = v376;
  *(_QWORD *)(v251 + 280) = v286;
  v294 = sub_1C1B0F170();
  sub_1C163A904(v294);
  *(_QWORD *)(v392 + 72) = v295;
  v296 = swift_allocObject();
  *(_OWORD *)(v296 + 16) = xmmword_1C1B3BEA0;
  *(_QWORD *)(v296 + 32) = CFSTR("AutocapitalizationType");
  *(_QWORD *)(v296 + 40) = 1701736270;
  *(_QWORD *)(v296 + 48) = 0xE400000000000000;
  v297 = v374;
  *(_QWORD *)(v296 + 64) = v289;
  *(_QWORD *)(v296 + 72) = v297;
  *(_QWORD *)(v296 + 80) = 0xD000000000000014;
  *(_QWORD *)(v296 + 88) = v384;
  *(_QWORD *)(v296 + 104) = v289;
  *(_QWORD *)(v296 + 112) = CFSTR("DisableAutocorrection");
  *(_BYTE *)(v296 + 120) = 1;
  v298 = v368;
  *(_QWORD *)(v296 + 144) = v291;
  *(_QWORD *)(v296 + 152) = v298;
  strcpy((char *)(v296 + 160), "WFXCallbackURL");
  *(_BYTE *)(v296 + 175) = -18;
  v299 = v367;
  *(_QWORD *)(v296 + 184) = v289;
  *(_QWORD *)(v296 + 192) = v299;
  *(_QWORD *)(v296 + 200) = 5001813;
  *(_QWORD *)(v296 + 208) = 0xE300000000000000;
  v300 = v369;
  *(_QWORD *)(v296 + 224) = v289;
  *(_QWORD *)(v296 + 232) = v300;
  v301 = CFSTR("AutocapitalizationType");
  v302 = v297;
  v303 = CFSTR("DisableAutocorrection");
  v304 = v298;
  v305 = v299;
  v306 = v300;
  v307 = sub_1C1B0F260();
  v385 = v308;
  v386 = v307;
  v384 = sub_1C1B0F260();
  v390 = v356;
  MEMORY[0x1E0C80A78](v384, v309, v310, v311);
  sub_1C1B0DD24();
  v312 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  *(_QWORD *)&v383 = v356;
  MEMORY[0x1E0C80A78](v312, v313, v314, v315);
  sub_1C1B0DC04();

  v316 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v296 + 240) = v317;
  v318 = v393;
  v319 = (void *)v371;
  *(_QWORD *)(v296 + 264) = v393;
  *(_QWORD *)(v296 + 272) = v319;
  v320 = v319;
  v321 = sub_1C1B0F260();
  v385 = v322;
  v386 = v321;
  v384 = sub_1C1B0F260();
  v390 = v356;
  MEMORY[0x1E0C80A78](v384, v323, v324, v325);
  sub_1C1B0DD24();
  v326 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v326, v327, v328, v329);
  sub_1C1B0DC04();

  v330 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v296 + 280) = v331;
  *(_QWORD *)(v296 + 304) = v318;
  *(_QWORD *)(v296 + 312) = CFSTR("TextContentType");
  *(_QWORD *)(v296 + 344) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v296 + 320) = 5001813;
  *(_QWORD *)(v296 + 328) = 0xE300000000000000;
  v332 = CFSTR("TextContentType");
  v333 = sub_1C1B0F170();
  sub_1C163A904(v333);
  v334 = v392;
  *(_QWORD *)(v392 + 80) = v335;
  v399 = v334;
  sub_1C1B0F3A4();
  v336 = v399;
  v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  v338 = v387;
  v387[50] = v336;
  v338[53] = v337;
  v338[54] = CFSTR("ParameterSummary");
  v339 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v340 = sub_1C1B0F260();
  MEMORY[0x1E0C80A78](v340, v341, v342, v343);
  sub_1C1B0DD24();
  v344 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v344, v345, v346, v347);
  sub_1C1B0DC04();

  v348 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v350 = v349;
  v351 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v349);

  v352 = sub_1C15B882C(0, &qword_1EF700F00);
  v353 = v387;
  v387[55] = v351;
  v353[58] = v352;
  v353[59] = CFSTR("RequiredResources");
  v353[63] = v373;
  v353[60] = &unk_1E7ADEDF8;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v354 = CFSTR("RequiredResources");
  v355 = sub_1C1B0F170();
  sub_1C163A920(v355);
}

void sub_1C18BEED8()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD00000000000001FLL, 0x80000001C1B4B1C0, (uint64_t)sub_1C18BEF00, 0);
}

void sub_1C18BEF00()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  __CFString *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __CFString *v38;
  __CFString *v39;
  __CFString *v40;
  uint64_t v41;
  uint64_t v42;
  __CFString *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  __CFString *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __CFString *v72;
  __CFString *v73;
  __CFString *v74;
  __CFString *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t *v88;
  __CFString *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __CFString *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  void *v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  __CFString *v121;
  __CFString *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;

  v131 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D9F0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000013;
  *(_QWORD *)(inited + 48) = 0x80000001C1B8FEB0;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  sub_1C1B0F260();
  v4 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v135 = v8;
  v138 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v9 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v10 = sub_1C1B0DC1C();
  v136 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10, v11, v12, v13);
  v137 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v17 = v16;
  v18 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v133 = (uint64_t *)v18;
  *(_QWORD *)(inited + 80) = v17;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = CFSTR("Description");
  *(_QWORD *)&v132 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v19 + 32) = CFSTR("DescriptionSummary");
  v20 = CFSTR("Description");
  v21 = CFSTR("DescriptionSummary");
  sub_1C1B0F260();
  v130 = v22;
  v23 = sub_1C1B0F260();
  v134 = &v124;
  MEMORY[0x1E0C80A78](v23, v24, v25, v26);
  sub_1C1B0DD24();
  v27 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v27, v28, v29, v30);
  sub_1C1B0DC04();

  v31 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v19 + 64) = v133;
  *(_QWORD *)(v19 + 40) = v32;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v134 = (uint64_t *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v33 = v132;
  *(_QWORD *)(inited + 120) = sub_1C18C3CBC();
  *(_QWORD *)(inited + 144) = v33;
  *(_QWORD *)(inited + 152) = CFSTR("IconColor");
  *(_QWORD *)(inited + 160) = 2036429383;
  *(_QWORD *)(inited + 168) = 0xE400000000000000;
  v34 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 184) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 192) = CFSTR("IconSymbol");
  *(_QWORD *)(inited + 200) = 0xD000000000000017;
  *(_QWORD *)(inited + 208) = 0x80000001C1B5C800;
  *(_QWORD *)(inited + 224) = v34;
  *(_QWORD *)(inited + 232) = CFSTR("Input");
  v35 = v34;
  v128 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v36 = swift_initStackObject();
  v132 = xmmword_1C1B3D970;
  *(_OWORD *)(v36 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v36 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v36 + 40) = 0xE800000000000000;
  v37 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v36 + 48) = 1;
  *(_QWORD *)(v36 + 72) = v37;
  strcpy((char *)(v36 + 80), "ParameterKey");
  *(_BYTE *)(v36 + 93) = 0;
  *(_WORD *)(v36 + 94) = -5120;
  *(_QWORD *)(v36 + 96) = 0x7475706E494657;
  *(_QWORD *)(v36 + 104) = 0xE700000000000000;
  *(_QWORD *)(v36 + 120) = v35;
  *(_QWORD *)(v36 + 128) = 0x6465726975716552;
  *(_QWORD *)(v36 + 136) = 0xE800000000000000;
  *(_BYTE *)(v36 + 144) = 1;
  *(_QWORD *)(v36 + 168) = v37;
  *(_QWORD *)(v36 + 176) = 0x7365707954;
  *(_QWORD *)(v36 + 184) = 0xE500000000000000;
  v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v36 + 216) = v130;
  *(_QWORD *)(v36 + 192) = &unk_1E7ADEE28;
  v38 = CFSTR("IconColor");
  v39 = CFSTR("IconSymbol");
  v40 = CFSTR("Input");
  v41 = sub_1C1B0F170();
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  v129 = v42;
  *(_QWORD *)(inited + 240) = v41;
  *(_QWORD *)(inited + 264) = v42;
  *(_QWORD *)(inited + 272) = CFSTR("Name");
  v43 = CFSTR("Name");
  v44 = sub_1C1B0F260();
  v125 = v45;
  v126 = v44;
  v46 = sub_1C1B0F260();
  v127 = &v124;
  MEMORY[0x1E0C80A78](v46, v47, v48, v49);
  sub_1C1B0DD24();
  v50 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v50, v51, v52, v53);
  sub_1C1B0DC04();

  v54 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(inited + 280) = v55;
  v56 = v133;
  *(_QWORD *)(inited + 304) = v133;
  *(_QWORD *)(inited + 312) = CFSTR("Output");
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v132;
  *(_QWORD *)(v57 + 32) = 0x75736F6C63736944;
  *(_QWORD *)(v57 + 40) = 0xEF6C6576654C6572;
  *(_QWORD *)(v57 + 48) = 0x63696C627550;
  *(_QWORD *)(v57 + 56) = 0xE600000000000000;
  *(_QWORD *)(v57 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v57 + 80) = 0x656C7069746C754DLL;
  *(_QWORD *)(v57 + 88) = 0xE800000000000000;
  *(_BYTE *)(v57 + 96) = 1;
  *(_QWORD *)(v57 + 120) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v57 + 128) = 0x614E74757074754FLL;
  *(_QWORD *)(v57 + 136) = 0xEA0000000000656DLL;
  v58 = CFSTR("Output");
  v59 = sub_1C1B0F260();
  v126 = v60;
  v127 = (uint64_t *)v59;
  v125 = (uint64_t *)sub_1C1B0F260();
  v128 = &v124;
  MEMORY[0x1E0C80A78](v125, v61, v62, v63);
  sub_1C1B0DD24();
  v64 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v64, v65, v66, v67);
  sub_1C1B0DC04();

  v68 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v57 + 144) = v69;
  *(_QWORD *)(v57 + 168) = v56;
  *(_QWORD *)(v57 + 176) = 0x7365707954;
  *(_QWORD *)(v57 + 216) = v130;
  *(_QWORD *)(v57 + 184) = 0xE500000000000000;
  *(_QWORD *)(v57 + 192) = &unk_1E7ADEE58;
  v70 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 320) = sub_1C1B0F170();
  *(_QWORD *)(inited + 344) = v129;
  *(_QWORD *)(inited + 352) = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = xmmword_1C1B3D9B0;
  v129 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v71 = swift_initStackObject();
  *(_OWORD *)(v71 + 16) = v132;
  *(_QWORD *)(v71 + 32) = CFSTR("Class");
  *(_QWORD *)(v71 + 40) = 0xD000000000000019;
  *(_QWORD *)(v71 + 48) = 0x80000001C1B4D5D0;
  *(_QWORD *)(v71 + 64) = v70;
  *(_QWORD *)(v71 + 72) = CFSTR("Key");
  *(_QWORD *)(v71 + 80) = 0x7475706E494657;
  *(_QWORD *)(v71 + 88) = 0xE700000000000000;
  *(_QWORD *)(v71 + 104) = v70;
  *(_QWORD *)(v71 + 112) = CFSTR("Label");
  v72 = CFSTR("Parameters");
  v73 = CFSTR("Class");
  v74 = CFSTR("Key");
  v75 = CFSTR("Label");
  v76 = sub_1C1B0F260();
  v127 = v77;
  v128 = (uint64_t *)v76;
  v78 = sub_1C1B0F260();
  v126 = v79;
  *(_QWORD *)&v132 = &v124;
  MEMORY[0x1E0C80A78](v78, v79, v80, v81);
  sub_1C1B0DD24();
  v82 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v125 = &v124;
  MEMORY[0x1E0C80A78](v82, v83, v84, v85);
  sub_1C1B0DC04();

  v86 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v71 + 120) = v87;
  v88 = v133;
  *(_QWORD *)(v71 + 144) = v133;
  *(_QWORD *)(v71 + 152) = CFSTR("Placeholder");
  v89 = CFSTR("Placeholder");
  v90 = sub_1C1B0F260();
  v127 = v91;
  v128 = (uint64_t *)v90;
  v126 = sub_1C1B0F260();
  *(_QWORD *)&v132 = &v124;
  MEMORY[0x1E0C80A78](v126, v92, v93, v94);
  sub_1C1B0DD24();
  v95 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v95, v96, v97, v98);
  sub_1C1B0DC04();

  v99 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v71 + 184) = v88;
  *(_QWORD *)(v71 + 160) = v100;
  type metadata accessor for Key(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v101 = sub_1C1B0F170();
  sub_1C163A904(v101);
  v102 = v130;
  *(_QWORD *)(v130 + 32) = v103;
  v139 = v102;
  sub_1C1B0F3A4();
  v104 = v139;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  *(_QWORD *)(inited + 360) = v104;
  *(_QWORD *)(inited + 384) = v105;
  *(_QWORD *)(inited + 392) = CFSTR("ParameterSummary");
  v106 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v107 = sub_1C1B0F260();
  v133 = &v124;
  MEMORY[0x1E0C80A78](v107, v108, v109, v110);
  sub_1C1B0DD24();
  v111 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v111, v112, v113, v114);
  sub_1C1B0DC04();

  v115 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v117 = v116;
  v118 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v116);

  v119 = sub_1C15B882C(0, &qword_1EF700F00);
  *(_QWORD *)(inited + 400) = v118;
  *(_QWORD *)(inited + 424) = v119;
  *(_QWORD *)(inited + 432) = CFSTR("ResidentCompatible");
  *(_BYTE *)(inited + 440) = 1;
  v120 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 464) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 472) = CFSTR("SuggestedNever");
  *(_QWORD *)(inited + 504) = v120;
  *(_BYTE *)(inited + 480) = 1;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v121 = CFSTR("ResidentCompatible");
  v122 = CFSTR("SuggestedNever");
  v123 = sub_1C1B0F170();
  sub_1C163A920(v123);
}

void sub_1C18BFD0C()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD000000000000019, 0x80000001C1B49880, (uint64_t)sub_1C18BFD34, 0);
}

void sub_1C18BFD34()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  __CFString *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __CFString *v38;
  __CFString *v39;
  __CFString *v40;
  __CFString *v41;
  uint64_t v42;
  uint64_t v43;
  __CFString *v44;
  __CFString *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __CFString *v58;
  __CFString *v59;
  __CFString *v60;
  __CFString *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  __CFString *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  __CFString *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  __CFString *v106;
  __CFString *v107;
  uint64_t v108;
  __CFString *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t *v126;

  v119 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D9A0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  strcpy((char *)(inited + 40), "WFPrintAction");
  *(_WORD *)(inited + 54) = -4864;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  v123 = (uint64_t *)sub_1C1B0F260();
  sub_1C1B0F260();
  v4 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v124 = v8;
  v125 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v9 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v10 = sub_1C1B0DC1C();
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10, v12, v13, v14);
  v121 = v11;
  v122 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v17 = v16;
  v18 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v123 = (uint64_t *)v18;
  *(_QWORD *)(inited + 80) = v17;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = CFSTR("Description");
  v118 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v19 + 32) = CFSTR("DescriptionSummary");
  v20 = CFSTR("Description");
  v21 = CFSTR("DescriptionSummary");
  sub_1C1B0F260();
  v117 = v22;
  v23 = sub_1C1B0F260();
  v120 = &v111;
  MEMORY[0x1E0C80A78](v23, v24, v25, v26);
  sub_1C1B0DD24();
  v27 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v27, v28, v29, v30);
  sub_1C1B0DC04();

  v31 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v19 + 64) = v123;
  *(_QWORD *)(v19 + 40) = v32;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v120 = (uint64_t *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v33 = v118;
  *(_QWORD *)(inited + 120) = sub_1C18C3CBC();
  *(_QWORD *)(inited + 144) = v33;
  *(_QWORD *)(inited + 152) = CFSTR("DisabledOnPlatforms");
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(inited + 160) = &unk_1E7ADEE88;
  *(_QWORD *)(inited + 184) = v34;
  *(_QWORD *)(inited + 192) = CFSTR("IconColor");
  v118 = v34;
  *(_QWORD *)(inited + 200) = 2036429383;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  v35 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 224) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 232) = CFSTR("IconSymbol");
  strcpy((char *)(inited + 240), "printer.fill");
  *(_BYTE *)(inited + 253) = 0;
  *(_WORD *)(inited + 254) = -5120;
  *(_QWORD *)(inited + 264) = v35;
  *(_QWORD *)(inited + 272) = CFSTR("Input");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v36 = swift_initStackObject();
  v115 = xmmword_1C1B3D970;
  *(_OWORD *)(v36 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v36 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v36 + 40) = 0xE800000000000000;
  v37 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v36 + 48) = 0;
  *(_QWORD *)(v36 + 72) = v37;
  strcpy((char *)(v36 + 80), "ParameterKey");
  *(_BYTE *)(v36 + 93) = 0;
  *(_WORD *)(v36 + 94) = -5120;
  *(_QWORD *)(v36 + 96) = 0x7475706E494657;
  *(_QWORD *)(v36 + 104) = 0xE700000000000000;
  *(_QWORD *)(v36 + 120) = v35;
  *(_QWORD *)(v36 + 128) = 0x6465726975716552;
  *(_QWORD *)(v36 + 136) = 0xE800000000000000;
  *(_BYTE *)(v36 + 144) = 1;
  *(_QWORD *)(v36 + 168) = v37;
  *(_QWORD *)(v36 + 176) = 0x7365707954;
  *(_QWORD *)(v36 + 216) = v34;
  *(_QWORD *)(v36 + 184) = 0xE500000000000000;
  *(_QWORD *)(v36 + 192) = &unk_1E7ADEEB8;
  v38 = CFSTR("DisabledOnPlatforms");
  v39 = CFSTR("IconColor");
  v40 = CFSTR("IconSymbol");
  v41 = CFSTR("Input");
  v42 = sub_1C1B0F170();
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  *(_QWORD *)(inited + 280) = v42;
  *(_QWORD *)(inited + 304) = v43;
  *(_QWORD *)(inited + 312) = CFSTR("InputPassthrough");
  *(_BYTE *)(inited + 320) = 1;
  *(_QWORD *)(inited + 344) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 352) = CFSTR("Name");
  v44 = CFSTR("InputPassthrough");
  v45 = CFSTR("Name");
  sub_1C1B0F260();
  v46 = sub_1C1B0F260();
  v117 = &v111;
  MEMORY[0x1E0C80A78](v46, v47, v48, v49);
  sub_1C1B0DD24();
  v50 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v50, v51, v52, v53);
  sub_1C1B0DC04();

  v54 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(inited + 360) = v55;
  *(_QWORD *)(inited + 384) = v123;
  *(_QWORD *)(inited + 392) = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v117 = (uint64_t *)swift_allocObject();
  *((_OWORD *)v117 + 1) = xmmword_1C1B3D9B0;
  v116 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v115;
  *(_QWORD *)(v56 + 32) = CFSTR("Class");
  *(_QWORD *)(v56 + 40) = 0xD000000000000019;
  *(_QWORD *)(v56 + 48) = 0x80000001C1B4D5D0;
  v57 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v56 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v56 + 72) = CFSTR("Key");
  *(_QWORD *)(v56 + 80) = 0x7475706E494657;
  *(_QWORD *)(v56 + 88) = 0xE700000000000000;
  *(_QWORD *)(v56 + 104) = v57;
  *(_QWORD *)(v56 + 112) = CFSTR("Label");
  v58 = CFSTR("Parameters");
  v59 = CFSTR("Class");
  v60 = CFSTR("Key");
  v61 = CFSTR("Label");
  v62 = sub_1C1B0F260();
  v113 = v63;
  v114 = v62;
  v64 = sub_1C1B0F260();
  v112 = v65;
  *(_QWORD *)&v115 = &v111;
  MEMORY[0x1E0C80A78](v64, v65, v66, v67);
  sub_1C1B0DD24();
  v68 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v111 = (uint64_t)&v111;
  MEMORY[0x1E0C80A78](v68, v69, v70, v71);
  sub_1C1B0DC04();

  v72 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v56 + 120) = v73;
  *(_QWORD *)(v56 + 144) = v123;
  *(_QWORD *)(v56 + 152) = CFSTR("Placeholder");
  v74 = CFSTR("Placeholder");
  v75 = sub_1C1B0F260();
  v113 = v76;
  v114 = v75;
  v112 = sub_1C1B0F260();
  *(_QWORD *)&v115 = &v111;
  MEMORY[0x1E0C80A78](v112, v77, v78, v79);
  sub_1C1B0DD24();
  v80 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v80, v81, v82, v83);
  sub_1C1B0DC04();

  v84 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v56 + 184) = v123;
  *(_QWORD *)(v56 + 160) = v85;
  type metadata accessor for Key(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v86 = sub_1C1B0F170();
  sub_1C163A904(v86);
  v87 = v117;
  v117[4] = v88;
  v126 = v87;
  sub_1C1B0F3A4();
  v89 = v126;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  *(_QWORD *)(inited + 400) = v89;
  *(_QWORD *)(inited + 424) = v90;
  *(_QWORD *)(inited + 432) = CFSTR("ParameterSummary");
  v91 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v92 = sub_1C1B0F260();
  v123 = &v111;
  MEMORY[0x1E0C80A78](v92, v93, v94, v95);
  sub_1C1B0DD24();
  v96 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v96, v97, v98, v99);
  sub_1C1B0DC04();

  v100 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v102 = v101;
  v103 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v101);

  v104 = sub_1C15B882C(0, &qword_1EF700F00);
  *(_QWORD *)(inited + 440) = v103;
  *(_QWORD *)(inited + 464) = v104;
  *(_QWORD *)(inited + 472) = CFSTR("RequiredResources");
  *(_QWORD *)(inited + 480) = &unk_1E7ADEEF8;
  v105 = v118;
  *(_QWORD *)(inited + 504) = v118;
  *(_QWORD *)(inited + 512) = CFSTR("UserInterfaceClasses");
  v106 = CFSTR("RequiredResources");
  v107 = CFSTR("UserInterfaceClasses");
  v108 = sub_1C1B0F170();
  *(_QWORD *)(inited + 544) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBB8);
  *(_QWORD *)(inited + 520) = v108;
  *(_QWORD *)(inited + 552) = CFSTR("UserInterfaces");
  *(_QWORD *)(inited + 584) = v105;
  *(_QWORD *)(inited + 560) = &unk_1E7ADEF88;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v109 = CFSTR("UserInterfaces");
  v110 = sub_1C1B0F170();
  sub_1C163A920(v110);
}

void sub_1C18C09D8()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD00000000000001FLL, 0x80000001C1B4B600, (uint64_t)sub_1C18C0A00, 0);
}

void sub_1C18C0A00()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  __CFString *v3;
  __CFString *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __CFString *v24;
  __CFString *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __CFString *v41;
  uint64_t v42;
  uint64_t v43;
  __CFString *v44;
  __CFString *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  __CFString *v58;
  __CFString *v59;
  __CFString *v60;
  __CFString *v61;
  uint64_t v62;
  __CFString *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __CFString *v89;
  __CFString *v90;
  __CFString *v91;
  __CFString *v92;
  __CFString *v93;
  __CFString *v94;
  __CFString *v95;
  __CFString *v96;
  __CFString *v97;
  uint64_t v98;
  __CFString *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  _QWORD *v110;
  __CFString *v111;
  uint64_t v112;
  __CFString *v113;
  uint64_t v114;
  __CFString *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  __CFString *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  __CFString *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  void *v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  __CFString *v145;
  __CFString *v146;
  __CFString *v147;
  uint64_t v148;
  _QWORD v149[2];
  _QWORD *v150;
  __CFString *v151;
  __CFString *v152;
  __CFString *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  _QWORD *v169;

  v159 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D9F0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000013;
  *(_QWORD *)(inited + 48) = 0x80000001C1B900E0;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = inited;
  v3 = CFSTR("ActionClass");
  v4 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  sub_1C1B0F260();
  v5 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v5, v6, v7, v8);
  v167 = v9;
  v168 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v10 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v11 = sub_1C1B0DC1C();
  v165 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  MEMORY[0x1E0C80A78](v11, v12, v13, v14);
  v166 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v16 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v18 = v17;
  v19 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v164 = (_QWORD *)v19;
  *(_QWORD *)(v2 + 80) = v18;
  *(_QWORD *)(v2 + 104) = v19;
  *(_QWORD *)(v2 + 112) = CFSTR("AppDefinition");
  v20 = CFSTR("AppDefinition");
  v21 = sub_1C1B0F170();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBB8);
  v158 = v22;
  *(_QWORD *)(v2 + 120) = v21;
  *(_QWORD *)(v2 + 144) = v22;
  *(_QWORD *)(v2 + 152) = CFSTR("Description");
  v162 = (_QWORD *)sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v23 + 32) = CFSTR("DescriptionSummary");
  v24 = CFSTR("Description");
  v25 = CFSTR("DescriptionSummary");
  sub_1C1B0F260();
  v161 = v26;
  v27 = sub_1C1B0F260();
  v163 = v149;
  MEMORY[0x1E0C80A78](v27, v28, v29, v30);
  sub_1C1B0DD24();
  v31 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v31, v32, v33, v34);
  sub_1C1B0DC04();

  v35 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v23 + 64) = v164;
  *(_QWORD *)(v23 + 40) = v36;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v163 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v37 = v162;
  *(_QWORD *)(v2 + 160) = sub_1C18C3CBC();
  *(_QWORD *)(v2 + 184) = v37;
  *(_QWORD *)(v2 + 192) = CFSTR("Input");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v38 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v38 + 40) = 0xE800000000000000;
  v39 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v38 + 48) = 0;
  *(_QWORD *)(v38 + 72) = v39;
  strcpy((char *)(v38 + 80), "ParameterKey");
  *(_BYTE *)(v38 + 93) = 0;
  *(_WORD *)(v38 + 94) = -5120;
  *(_QWORD *)(v38 + 96) = 0x4C52554657;
  *(_QWORD *)(v38 + 104) = 0xE500000000000000;
  *(_QWORD *)(v38 + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v38 + 128) = 0x6465726975716552;
  *(_QWORD *)(v38 + 136) = 0xE800000000000000;
  *(_BYTE *)(v38 + 144) = 1;
  *(_QWORD *)(v38 + 168) = v39;
  *(_QWORD *)(v38 + 176) = 0x7365707954;
  v40 = v39;
  *(_QWORD *)(v38 + 184) = 0xE500000000000000;
  v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v38 + 216) = v157;
  *(_QWORD *)(v38 + 192) = &unk_1E7ADEFF8;
  v41 = CFSTR("Input");
  v42 = sub_1C1B0F170();
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  v160 = (_QWORD *)v2;
  *(_QWORD *)(v2 + 200) = v42;
  *(_QWORD *)(v2 + 224) = v43;
  *(_QWORD *)(v2 + 232) = CFSTR("InputPassthrough");
  *(_BYTE *)(v2 + 240) = 1;
  *(_QWORD *)(v2 + 264) = v40;
  *(_QWORD *)(v2 + 272) = CFSTR("Name");
  v44 = CFSTR("InputPassthrough");
  v45 = CFSTR("Name");
  sub_1C1B0F260();
  v46 = sub_1C1B0F260();
  v162 = v149;
  MEMORY[0x1E0C80A78](v46, v47, v48, v49);
  sub_1C1B0DD24();
  v50 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v50, v51, v52, v53);
  sub_1C1B0DC04();

  v54 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v55 = v160;
  v160[35] = v56;
  v55[38] = v164;
  v55[39] = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v162 = (_QWORD *)swift_allocObject();
  *((_OWORD *)v162 + 1) = xmmword_1C1B3D980;
  v161 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  v156 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1C1B3DA30;
  *(_QWORD *)(v57 + 32) = CFSTR("Class");
  *(_QWORD *)(v57 + 40) = 0xD000000000000011;
  *(_QWORD *)(v57 + 48) = 0x80000001C1B4FF70;
  *(_QWORD *)(v57 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v57 + 72) = CFSTR("DefaultValue");
  *(_BYTE *)(v57 + 80) = 0;
  *(_QWORD *)(v57 + 104) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v57 + 112) = CFSTR("Description");
  v58 = CFSTR("Parameters");
  v153 = CFSTR("Class");
  v59 = CFSTR("DefaultValue");
  v60 = CFSTR("Description");
  v154 = sub_1C1B0F260();
  v152 = v61;
  v62 = sub_1C1B0F260();
  v151 = v63;
  v155 = v149;
  MEMORY[0x1E0C80A78](v62, v63, v64, v65);
  sub_1C1B0DD24();
  v66 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v66, v67, v68, v69);
  sub_1C1B0DC04();

  v70 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v57 + 120) = v71;
  v72 = v164;
  *(_QWORD *)(v57 + 144) = v164;
  *(_QWORD *)(v57 + 152) = CFSTR("Key");
  *(_QWORD *)(v57 + 160) = 0xD000000000000013;
  *(_QWORD *)(v57 + 168) = 0x80000001C1B902A0;
  *(_QWORD *)(v57 + 184) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v57 + 192) = CFSTR("Label");
  v151 = CFSTR("Key");
  v152 = CFSTR("Label");
  v154 = sub_1C1B0F260();
  v150 = v73;
  v74 = sub_1C1B0F260();
  v149[1] = v75;
  v155 = v149;
  MEMORY[0x1E0C80A78](v74, v75, v76, v77);
  sub_1C1B0DD24();
  v78 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v78, v79, v80, v81);
  sub_1C1B0DC04();

  v82 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v57 + 224) = v72;
  *(_QWORD *)(v57 + 200) = v83;
  type metadata accessor for Key(0);
  v155 = v84;
  v154 = sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v85 = sub_1C1B0F170();
  sub_1C163A904(v85);
  v162[4] = v86;
  v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1C1B3BEA0;
  *(_QWORD *)(v87 + 32) = CFSTR("AutocapitalizationType");
  *(_QWORD *)(v87 + 40) = 1701736270;
  *(_QWORD *)(v87 + 48) = 0xE400000000000000;
  v88 = MEMORY[0x1E0DEA968];
  v89 = v153;
  *(_QWORD *)(v87 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v87 + 72) = v89;
  *(_QWORD *)(v87 + 80) = 0xD000000000000014;
  *(_QWORD *)(v87 + 88) = 0x80000001C1B4DAB0;
  *(_QWORD *)(v87 + 104) = v88;
  *(_QWORD *)(v87 + 112) = CFSTR("DisableAutocorrection");
  *(_BYTE *)(v87 + 120) = 1;
  v91 = v151;
  v90 = v152;
  *(_QWORD *)(v87 + 144) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v87 + 152) = v91;
  *(_QWORD *)(v87 + 160) = 0x4C52554657;
  *(_QWORD *)(v87 + 168) = 0xE500000000000000;
  *(_QWORD *)(v87 + 184) = v88;
  *(_QWORD *)(v87 + 192) = CFSTR("KeyboardType");
  *(_QWORD *)(v87 + 200) = 5001813;
  *(_QWORD *)(v87 + 208) = 0xE300000000000000;
  *(_QWORD *)(v87 + 224) = v88;
  *(_QWORD *)(v87 + 232) = v90;
  v92 = CFSTR("AutocapitalizationType");
  v93 = v89;
  v94 = CFSTR("DisableAutocorrection");
  v95 = v91;
  v96 = CFSTR("KeyboardType");
  v97 = v90;
  v98 = sub_1C1B0F260();
  v152 = v99;
  v153 = (__CFString *)v98;
  v151 = (__CFString *)sub_1C1B0F260();
  v156 = v149;
  v100 = v160;
  MEMORY[0x1E0C80A78](v151, v101, v102, v103);
  sub_1C1B0DD24();
  v104 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v150 = v149;
  MEMORY[0x1E0C80A78](v104, v105, v106, v107);
  sub_1C1B0DC04();

  v108 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v87 + 240) = v109;
  v110 = v164;
  *(_QWORD *)(v87 + 264) = v164;
  *(_QWORD *)(v87 + 272) = CFSTR("Placeholder");
  v111 = CFSTR("Placeholder");
  v112 = sub_1C1B0F260();
  v152 = v113;
  v153 = (__CFString *)v112;
  v114 = sub_1C1B0F260();
  v151 = v115;
  v156 = v149;
  MEMORY[0x1E0C80A78](v114, v115, v116, v117);
  sub_1C1B0DD24();
  v118 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v118, v119, v120, v121);
  sub_1C1B0DC04();

  v122 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v87 + 280) = v123;
  *(_QWORD *)(v87 + 304) = v110;
  *(_QWORD *)(v87 + 312) = CFSTR("TextContentType");
  *(_QWORD *)(v87 + 344) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v87 + 320) = 5001813;
  *(_QWORD *)(v87 + 328) = 0xE300000000000000;
  v124 = CFSTR("TextContentType");
  v125 = sub_1C1B0F170();
  sub_1C163A904(v125);
  v126 = v162;
  v162[5] = v127;
  v169 = v126;
  sub_1C1B0F3A4();
  v128 = v169;
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  v100[40] = v128;
  v100[43] = v129;
  v100[44] = CFSTR("ParameterSummary");
  v130 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v131 = sub_1C1B0F260();
  v164 = v149;
  MEMORY[0x1E0C80A78](v131, v132, v133, v134);
  sub_1C1B0DD24();
  v135 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v135, v136, v137, v138);
  sub_1C1B0DC04();

  v139 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v141 = v140;
  v142 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v140);

  v143 = sub_1C15B882C(0, &qword_1EF700F00);
  v100[45] = v142;
  v100[48] = v143;
  v100[49] = CFSTR("RequiredResources");
  v100[50] = &unk_1E7ADF038;
  v144 = v157;
  v100[53] = v157;
  v100[54] = CFSTR("UserInterfaceClasses");
  v145 = CFSTR("RequiredResources");
  v146 = CFSTR("UserInterfaceClasses");
  v100[55] = sub_1C1B0F170();
  v100[58] = v158;
  v100[59] = CFSTR("UserInterfaces");
  v100[63] = v144;
  v100[60] = &unk_1E7ADF0E8;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v147 = CFSTR("UserInterfaces");
  v148 = sub_1C1B0F170();
  sub_1C163A920(v148);
}

void sub_1C18C19EC()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD000000000000023, 0x80000001C1B49EA0, (uint64_t)sub_1C18C1A14, 0);
}

void sub_1C18C1A14()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __CFString *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __CFString *v23;
  __CFString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __CFString *v39;
  __CFString *v40;
  __CFString *v41;
  __CFString *v42;
  __CFString *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  __CFString *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __CFString *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __CFString *v90;
  __CFString *v91;
  __CFString *v92;
  uint64_t *v93;
  uint64_t v94;
  __CFString *v95;
  __CFString *v96;
  __CFString *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  __CFString *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  void *v124;
  void *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __CFString *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __CFString *v150;
  __CFString *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  __CFString *v156;
  __CFString *v157;
  __CFString *v158;
  unint64_t v159;
  uint64_t *v160;
  __int128 v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t *v173;
  unint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t *v177;

  v165 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D960;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000017;
  *(_QWORD *)(inited + 48) = 0x80000001C1B90370;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  sub_1C1B0F260();
  v4 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v174 = v8;
  *(_QWORD *)&v176 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v9 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v10 = sub_1C1B0DC1C();
  v175 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10, v11, v12, v13);
  v172 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v17 = v16;
  v18 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v171 = (uint64_t *)v18;
  *(_QWORD *)(inited + 80) = v17;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = CFSTR("AppDefinition");
  v19 = CFSTR("AppDefinition");
  v20 = sub_1C1B0F170();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBB8);
  *(_QWORD *)(inited + 120) = v20;
  *(_QWORD *)(inited + 144) = v21;
  *(_QWORD *)(inited + 152) = CFSTR("Description");
  *(_QWORD *)&v169 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v22 = swift_initStackObject();
  v170 = xmmword_1C1B3BEB0;
  *(_OWORD *)(v22 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v22 + 32) = CFSTR("DescriptionSummary");
  v23 = CFSTR("Description");
  v24 = CFSTR("DescriptionSummary");
  sub_1C1B0F260();
  v168 = v25;
  v26 = sub_1C1B0F260();
  v173 = &v153;
  MEMORY[0x1E0C80A78](v26, v27, v28, v29);
  sub_1C1B0DD24();
  v30 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v30, v31, v32, v33);
  sub_1C1B0DC04();

  v34 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v22 + 64) = v171;
  *(_QWORD *)(v22 + 40) = v35;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v173 = (uint64_t *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v36 = v169;
  *(_QWORD *)(inited + 160) = sub_1C18C3CBC();
  *(_QWORD *)(inited + 184) = v36;
  *(_QWORD *)(inited + 192) = CFSTR("IconColor");
  *(_QWORD *)(inited + 200) = 1953392980;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  v37 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 224) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 232) = CFSTR("IconSymbol");
  *(_QWORD *)(inited + 240) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 248) = 0x80000001C1B903E0;
  *(_QWORD *)(inited + 264) = v37;
  *(_QWORD *)(inited + 272) = CFSTR("IconSymbolColor");
  *(_QWORD *)(inited + 280) = 0x6E65657247;
  *(_QWORD *)(inited + 288) = 0xE500000000000000;
  *(_QWORD *)(inited + 304) = v37;
  *(_QWORD *)(inited + 312) = CFSTR("LocallyProcessesData");
  v38 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 320) = 1;
  *(_QWORD *)(inited + 344) = v38;
  *(_QWORD *)(inited + 352) = CFSTR("Name");
  v39 = CFSTR("IconColor");
  v40 = CFSTR("IconSymbol");
  v41 = CFSTR("IconSymbolColor");
  v42 = CFSTR("LocallyProcessesData");
  v43 = CFSTR("Name");
  v44 = sub_1C1B0F260();
  v167 = v45;
  v168 = v44;
  v46 = sub_1C1B0F260();
  *(_QWORD *)&v169 = &v153;
  MEMORY[0x1E0C80A78](v46, v47, v48, v49);
  sub_1C1B0DD24();
  v50 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v50, v51, v52, v53);
  sub_1C1B0DC04();

  v54 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(inited + 360) = v55;
  v56 = v171;
  *(_QWORD *)(inited + 384) = v171;
  *(_QWORD *)(inited + 392) = CFSTR("Output");
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v57 = swift_initStackObject();
  v169 = xmmword_1C1B3D9D0;
  *(_OWORD *)(v57 + 16) = xmmword_1C1B3D9D0;
  *(_QWORD *)(v57 + 32) = 0x75736F6C63736944;
  *(_QWORD *)(v57 + 40) = 0xEF6C6576654C6572;
  *(_QWORD *)(v57 + 48) = 0x63696C627550;
  *(_QWORD *)(v57 + 56) = 0xE600000000000000;
  *(_QWORD *)(v57 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v57 + 80) = 0x614E74757074754FLL;
  *(_QWORD *)(v57 + 88) = 0xEA0000000000656DLL;
  v58 = CFSTR("Output");
  v166 = sub_1C1B0F260();
  v164 = v59;
  v60 = sub_1C1B0F260();
  v163 = v61;
  v167 = &v153;
  MEMORY[0x1E0C80A78](v60, v61, v62, v63);
  sub_1C1B0DD24();
  v64 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v64, v65, v66, v67);
  sub_1C1B0DC04();

  v68 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v57 + 96) = v69;
  *(_QWORD *)(v57 + 120) = v56;
  *(_QWORD *)(v57 + 128) = 0x7365707954;
  *(_QWORD *)(v57 + 136) = 0xE500000000000000;
  *(_QWORD *)(v57 + 168) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v57 + 144) = &unk_1E7ADF168;
  v70 = MEMORY[0x1E0DEA968];
  v71 = sub_1C1B0F170();
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  *(_QWORD *)(inited + 400) = v71;
  *(_QWORD *)(inited + 424) = v72;
  *(_QWORD *)(inited + 432) = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v167 = (uint64_t *)swift_allocObject();
  *((_OWORD *)v167 + 1) = xmmword_1C1B3D980;
  v166 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v73 = swift_allocObject();
  v161 = xmmword_1C1B3D970;
  *(_OWORD *)(v73 + 16) = xmmword_1C1B3D970;
  v74 = CFSTR("Parameters");
  *(_QWORD *)(v73 + 32) = sub_1C1B0F1F4();
  *(_BYTE *)(v73 + 40) = 1;
  *(_QWORD *)(v73 + 64) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v73 + 72) = CFSTR("Class");
  v159 = 0xD000000000000013;
  v160 = (uint64_t *)0x80000001C1B4DCE0;
  *(_QWORD *)(v73 + 80) = 0xD000000000000013;
  *(_QWORD *)(v73 + 88) = 0x80000001C1B4DCE0;
  *(_QWORD *)(v73 + 104) = v70;
  *(_QWORD *)(v73 + 112) = CFSTR("Key");
  v163 = 0xD00000000000001ELL;
  v164 = 0x80000001C1B90480;
  *(_QWORD *)(v73 + 120) = 0xD00000000000001ELL;
  *(_QWORD *)(v73 + 128) = 0x80000001C1B90480;
  *(_QWORD *)(v73 + 144) = v70;
  *(_QWORD *)(v73 + 152) = CFSTR("Label");
  v157 = CFSTR("Class");
  v156 = CFSTR("Key");
  v158 = CFSTR("Label");
  sub_1C1B0F260();
  v154 = v75;
  v76 = sub_1C1B0F260();
  v155 = &v153;
  MEMORY[0x1E0C80A78](v76, v77, v78, v79);
  sub_1C1B0DD24();
  v80 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v80, v81, v82, v83);
  sub_1C1B0DC04();

  v84 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v73 + 184) = v171;
  *(_QWORD *)(v73 + 160) = v85;
  type metadata accessor for Key(0);
  v155 = v86;
  v154 = sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v87 = sub_1C1B0F170();
  sub_1C163A904(v87);
  v167[4] = v88;
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v161;
  *(_QWORD *)(v89 + 32) = sub_1C1B0F1F4();
  *(_BYTE *)(v89 + 40) = 1;
  v91 = v156;
  v90 = v157;
  *(_QWORD *)(v89 + 64) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v89 + 72) = v90;
  v92 = v158;
  v93 = v160;
  *(_QWORD *)(v89 + 80) = v159;
  *(_QWORD *)(v89 + 88) = v93;
  v94 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v89 + 104) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v89 + 112) = v91;
  *(_QWORD *)&v161 = 0xD00000000000001FLL;
  v162 = 0x80000001C1B904E0;
  *(_QWORD *)(v89 + 120) = 0xD00000000000001FLL;
  *(_QWORD *)(v89 + 128) = 0x80000001C1B904E0;
  *(_QWORD *)(v89 + 144) = v94;
  *(_QWORD *)(v89 + 152) = v92;
  v95 = v90;
  v96 = v91;
  v97 = v92;
  sub_1C1B0F260();
  v159 = v98;
  v99 = sub_1C1B0F260();
  v160 = &v153;
  MEMORY[0x1E0C80A78](v99, v100, v101, v102);
  sub_1C1B0DD24();
  v103 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v103, v104, v105, v106);
  sub_1C1B0DC04();

  v107 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v89 + 184) = v171;
  *(_QWORD *)(v89 + 160) = v108;
  v109 = sub_1C1B0F170();
  sub_1C163A904(v109);
  v110 = v167;
  v167[5] = v111;
  v177 = v110;
  sub_1C1B0F3A4();
  v112 = v177;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  *(_QWORD *)(inited + 440) = v112;
  *(_QWORD *)(inited + 464) = v113;
  *(_QWORD *)(inited + 472) = CFSTR("ParameterSummary");
  v114 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v115 = sub_1C1B0F260();
  v171 = &v153;
  MEMORY[0x1E0C80A78](v115, v116, v117, v118);
  sub_1C1B0DD24();
  v119 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v119, v120, v121, v122);
  sub_1C1B0DC04();

  v123 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v125 = v124;
  v126 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v124);

  v127 = sub_1C15B882C(0, &qword_1EF700F00);
  *(_QWORD *)(inited + 480) = v126;
  *(_QWORD *)(inited + 504) = v127;
  *(_QWORD *)(inited + 512) = CFSTR("RequiredResources");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEE0);
  v175 = swift_allocObject();
  v176 = xmmword_1C1B3D9C0;
  *(_OWORD *)(v175 + 16) = xmmword_1C1B3D9C0;
  v128 = swift_initStackObject();
  *(_OWORD *)(v128 + 16) = v176;
  v172 = 0xD000000000000011;
  v174 = 0x80000001C1B4D7D0;
  *(_QWORD *)(v128 + 32) = 0xD000000000000011;
  *(_QWORD *)(v128 + 40) = 0x80000001C1B4D7D0;
  v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = v170;
  v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = v169;
  strcpy((char *)(v130 + 32), "WFParameterKey");
  *(_BYTE *)(v130 + 47) = -18;
  v131 = v162;
  *(_QWORD *)(v130 + 48) = v161;
  *(_QWORD *)(v130 + 56) = v131;
  v132 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v130 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v130 + 80) = 0xD000000000000010;
  v171 = (uint64_t *)0x80000001C1B48120;
  *(_QWORD *)(v130 + 88) = 0x80000001C1B48120;
  v133 = CFSTR("RequiredResources");
  v134 = v132;
  v135 = sub_1C1B0F170();
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBF00);
  *(_QWORD *)(v130 + 96) = v135;
  *(_QWORD *)(v130 + 120) = v136;
  *(_QWORD *)(v130 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v130 + 168) = v134;
  v166 = 0xD00000000000001BLL;
  v167 = (uint64_t *)v136;
  *(_QWORD *)(v130 + 136) = 0xEF7373616C436563;
  *(_QWORD *)(v130 + 144) = 0xD00000000000001BLL;
  *(_QWORD *)(v130 + 152) = 0x80000001C1B48140;
  *(_QWORD *)(v129 + 32) = sub_1C1B0F170();
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEE8);
  *(_QWORD *)(v128 + 48) = v129;
  *(_QWORD *)(v128 + 72) = v137;
  *(_QWORD *)(v128 + 80) = 0x72756F7365524657;
  *(_QWORD *)(v128 + 120) = v134;
  v162 = 0xD000000000000018;
  *(_QWORD *)(v128 + 88) = 0xEF7373616C436563;
  *(_QWORD *)(v128 + 96) = 0xD000000000000018;
  *(_QWORD *)&v161 = 0x80000001C1B48A10;
  *(_QWORD *)(v128 + 104) = 0x80000001C1B48A10;
  *(_QWORD *)(v175 + 32) = sub_1C1B0F170();
  v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = v176;
  v139 = v174;
  *(_QWORD *)(v138 + 32) = v172;
  *(_QWORD *)(v138 + 40) = v139;
  v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = v170;
  v141 = swift_allocObject();
  *(_OWORD *)(v141 + 16) = v169;
  strcpy((char *)(v141 + 32), "WFParameterKey");
  *(_BYTE *)(v141 + 47) = -18;
  v142 = v164;
  *(_QWORD *)(v141 + 48) = v163;
  *(_QWORD *)(v141 + 56) = v142;
  v143 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v141 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v141 + 80) = 0xD000000000000010;
  *(_QWORD *)(v141 + 88) = v171;
  v144 = v143;
  *(_QWORD *)(v141 + 96) = sub_1C1B0F170();
  *(_QWORD *)(v141 + 120) = v167;
  *(_QWORD *)(v141 + 128) = 0x72756F7365524657;
  *(_QWORD *)(v141 + 168) = v144;
  v145 = v166;
  *(_QWORD *)(v141 + 136) = 0xEF7373616C436563;
  *(_QWORD *)(v141 + 144) = v145;
  *(_QWORD *)(v141 + 152) = 0x80000001C1B48140;
  *(_QWORD *)(v140 + 32) = sub_1C1B0F170();
  *(_QWORD *)(v138 + 48) = v140;
  *(_QWORD *)(v138 + 72) = v137;
  *(_QWORD *)(v138 + 80) = 0x72756F7365524657;
  *(_QWORD *)(v138 + 120) = v144;
  v146 = v162;
  *(_QWORD *)(v138 + 88) = 0xEF7373616C436563;
  *(_QWORD *)(v138 + 96) = v146;
  *(_QWORD *)(v138 + 104) = v161;
  v147 = sub_1C1B0F170();
  v148 = v175;
  *(_QWORD *)(v175 + 40) = v147;
  *(_QWORD *)(inited + 544) = v137;
  *(_QWORD *)(inited + 520) = v148;
  *(_QWORD *)(inited + 552) = CFSTR("ResidentCompatible");
  v149 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 584) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 560) = 1;
  *(_QWORD *)(inited + 592) = CFSTR("SuggestedNever");
  *(_QWORD *)(inited + 624) = v149;
  *(_BYTE *)(inited + 600) = 1;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v150 = CFSTR("ResidentCompatible");
  v151 = CFSTR("SuggestedNever");
  v152 = sub_1C1B0F170();
  sub_1C163A920(v152);
}

void sub_1C18C2C60()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD000000000000023, 0x80000001C1B90650, (uint64_t)sub_1C18C2C88, 0);
}

void sub_1C18C2C88()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __CFString *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __CFString *v40;
  uint64_t v41;
  uint64_t v42;
  __CFString *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __CFString *v56;
  __CFString *v57;
  __CFString *v58;
  __CFString *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t *v72;
  __CFString *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  __CFString *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  __CFString *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t *v122;

  v115 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3D9F0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000016;
  *(_QWORD *)(inited + 48) = 0x80000001C1B90680;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  sub_1C1B0F260();
  v4 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v120 = v8;
  v121 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v9 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v10 = sub_1C1B0DC1C();
  v118 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10, v11, v12, v13);
  v119 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v17 = v16;
  v18 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v117 = (uint64_t *)v18;
  *(_QWORD *)(inited + 80) = v17;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = CFSTR("AppDefinition");
  v19 = CFSTR("AppDefinition");
  v20 = sub_1C1B0F170();
  *(_QWORD *)(inited + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBB8);
  *(_QWORD *)(inited + 120) = v20;
  *(_QWORD *)(inited + 152) = sub_1C1B0F1F4();
  v21 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 160) = 1;
  *(_QWORD *)(inited + 184) = v21;
  *(_QWORD *)(inited + 192) = CFSTR("DeletesInput");
  *(_BYTE *)(inited + 200) = 1;
  *(_QWORD *)(inited + 224) = v21;
  *(_QWORD *)(inited + 232) = CFSTR("Description");
  v114 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v22 + 32) = CFSTR("DescriptionSummary");
  v23 = CFSTR("DeletesInput");
  v24 = CFSTR("Description");
  v25 = CFSTR("DescriptionSummary");
  sub_1C1B0F260();
  v113 = v26;
  v27 = sub_1C1B0F260();
  v116 = &v107;
  MEMORY[0x1E0C80A78](v27, v28, v29, v30);
  sub_1C1B0DD24();
  v31 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v31, v32, v33, v34);
  sub_1C1B0DC04();

  v35 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v22 + 64) = v117;
  *(_QWORD *)(v22 + 40) = v36;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v116 = (uint64_t *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v37 = v114;
  *(_QWORD *)(inited + 240) = sub_1C18C3CBC();
  *(_QWORD *)(inited + 264) = v37;
  *(_QWORD *)(inited + 272) = CFSTR("Input");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v38 = swift_initStackObject();
  v111 = xmmword_1C1B3D970;
  *(_OWORD *)(v38 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v38 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v38 + 40) = 0xE800000000000000;
  *(_BYTE *)(v38 + 48) = 1;
  v39 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v38 + 72) = MEMORY[0x1E0DEAFA0];
  strcpy((char *)(v38 + 80), "ParameterKey");
  *(_BYTE *)(v38 + 93) = 0;
  *(_WORD *)(v38 + 94) = -5120;
  *(_QWORD *)(v38 + 96) = 0x7475706E494657;
  *(_QWORD *)(v38 + 104) = 0xE700000000000000;
  *(_QWORD *)(v38 + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v38 + 128) = 0x6465726975716552;
  *(_QWORD *)(v38 + 136) = 0xE800000000000000;
  *(_BYTE *)(v38 + 144) = 1;
  *(_QWORD *)(v38 + 168) = v39;
  *(_QWORD *)(v38 + 176) = 0x7365707954;
  *(_QWORD *)(v38 + 184) = 0xE500000000000000;
  v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v38 + 216) = v114;
  *(_QWORD *)(v38 + 192) = &unk_1E7ADF288;
  v40 = CFSTR("Input");
  v41 = sub_1C1B0F170();
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  *(_QWORD *)(inited + 280) = v41;
  *(_QWORD *)(inited + 304) = v42;
  *(_QWORD *)(inited + 312) = CFSTR("Name");
  v43 = CFSTR("Name");
  sub_1C1B0F260();
  v44 = sub_1C1B0F260();
  v113 = &v107;
  MEMORY[0x1E0C80A78](v44, v45, v46, v47);
  sub_1C1B0DD24();
  v48 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v48, v49, v50, v51);
  sub_1C1B0DC04();

  v52 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(inited + 320) = v53;
  *(_QWORD *)(inited + 344) = v117;
  *(_QWORD *)(inited + 352) = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v113 = (uint64_t *)swift_allocObject();
  *((_OWORD *)v113 + 1) = xmmword_1C1B3D9B0;
  v112 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v54 = swift_initStackObject();
  *(_OWORD *)(v54 + 16) = v111;
  *(_QWORD *)(v54 + 32) = CFSTR("Class");
  *(_QWORD *)(v54 + 40) = 0xD000000000000019;
  *(_QWORD *)(v54 + 48) = 0x80000001C1B4D5D0;
  v55 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v54 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v54 + 72) = CFSTR("Key");
  *(_QWORD *)(v54 + 80) = 0x7475706E494657;
  *(_QWORD *)(v54 + 88) = 0xE700000000000000;
  *(_QWORD *)(v54 + 104) = v55;
  *(_QWORD *)(v54 + 112) = CFSTR("Label");
  v56 = CFSTR("Parameters");
  v57 = CFSTR("Class");
  v58 = CFSTR("Key");
  v59 = CFSTR("Label");
  v60 = sub_1C1B0F260();
  v109 = v61;
  v110 = v60;
  v62 = sub_1C1B0F260();
  v108 = v63;
  *(_QWORD *)&v111 = &v107;
  MEMORY[0x1E0C80A78](v62, v63, v64, v65);
  sub_1C1B0DD24();
  v66 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v107 = (uint64_t)&v107;
  MEMORY[0x1E0C80A78](v66, v67, v68, v69);
  sub_1C1B0DC04();

  v70 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v54 + 120) = v71;
  v72 = v117;
  *(_QWORD *)(v54 + 144) = v117;
  *(_QWORD *)(v54 + 152) = CFSTR("Placeholder");
  v73 = CFSTR("Placeholder");
  v74 = sub_1C1B0F260();
  v109 = v75;
  v110 = v74;
  v108 = sub_1C1B0F260();
  *(_QWORD *)&v111 = &v107;
  MEMORY[0x1E0C80A78](v108, v76, v77, v78);
  sub_1C1B0DD24();
  v79 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v79, v80, v81, v82);
  sub_1C1B0DC04();

  v83 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v54 + 184) = v72;
  *(_QWORD *)(v54 + 160) = v84;
  type metadata accessor for Key(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v85 = sub_1C1B0F170();
  sub_1C163A904(v85);
  v86 = v113;
  v113[4] = v87;
  v122 = v86;
  sub_1C1B0F3A4();
  v88 = v122;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  *(_QWORD *)(inited + 360) = v88;
  *(_QWORD *)(inited + 384) = v89;
  *(_QWORD *)(inited + 392) = CFSTR("ParameterSummary");
  v90 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v91 = sub_1C1B0F260();
  v117 = &v107;
  MEMORY[0x1E0C80A78](v91, v92, v93, v94);
  sub_1C1B0DD24();
  v95 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v95, v96, v97, v98);
  sub_1C1B0DC04();

  v99 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v101 = v100;
  v102 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v100);

  v103 = sub_1C15B882C(0, &qword_1EF700F00);
  *(_QWORD *)(inited + 400) = v102;
  *(_QWORD *)(inited + 424) = v103;
  *(_QWORD *)(inited + 432) = CFSTR("RequiredResources");
  *(_QWORD *)(inited + 464) = v114;
  *(_QWORD *)(inited + 440) = &unk_1E7ADF2B8;
  v104 = CFSTR("RequiredResources");
  v105 = sub_1C1B0F1F4();
  *(_QWORD *)(inited + 504) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 472) = v105;
  *(_QWORD *)(inited + 480) = 0xD000000000000015;
  *(_QWORD *)(inited + 488) = 0x80000001C1B90750;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v106 = sub_1C1B0F170();
  sub_1C163A920(v106);
}

id sub_1C18C38FC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for LNPlatformName(0);
  sub_1C15B882C(0, &qword_1EF6FB3A0);
  sub_1C180A4E8();
  v1 = (void *)sub_1C1B0F14C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithAvailabilityAnnotations_, v1);

  return v2;
}

uint64_t sub_1C18C399C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  unsigned __int8 v20;
  void *v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_effectiveBundleIdentifiers);
  v3 = objc_msgSend(v2, sel_array);

  v4 = sub_1C1B0F380();
  v5 = sub_1C15BFC64(v4);
  OUTLINED_FUNCTION_34();
  if (!v5)
    return 0;
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_4;
    goto LABEL_11;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v6 = sub_1C1B0FB3C();
  if (!v6)
  {
LABEL_11:
    OUTLINED_FUNCTION_98_7();
    return 0;
  }
LABEL_4:
  v7 = 4;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1C3BB22A8](v7 - 4, v5);
    else
      v8 = *(id *)(v5 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (!objc_msgSend(v8, sel_type))
      break;

    ++v7;
    if (v10 == v6)
      goto LABEL_11;
  }
  OUTLINED_FUNCTION_98_7();
  v12 = objc_msgSend(v9, sel_bundleIdentifier);
  v13 = sub_1C1B0F224();
  v15 = v14;

  if (v13 == sub_1C1B0F224() && v15 == v16)
  {
    OUTLINED_FUNCTION_34();
  }
  else
  {
    v18 = sub_1C1B0FC44();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      OUTLINED_FUNCTION_34();

      return 0;
    }
  }
  if (sub_1C180A458(v1))
  {
    sub_1C15B882C(0, &qword_1EF7027C8);
    v19 = sub_1C18C38FC();
    v20 = objc_msgSend(v19, sel_availableForCurrentPlatformVersion);

    if ((v20 & 1) == 0)
    {

      OUTLINED_FUNCTION_34();
      return 0;
    }
  }
  v21 = (void *)sub_1C1B0F1F4();
  OUTLINED_FUNCTION_34();
  v22 = objc_msgSend(v1, sel_mangledTypeNameForBundleIdentifier_, v21);

  sub_1C1B0F224();
  v23 = sub_1C1B0FA28();
  OUTLINED_FUNCTION_34();

  if (!v23)
    return 0;
  return dynamic_cast_existential_1_conditional(v23);
}

id sub_1C18C3C58(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_1C18C3C90();

  return v2;
}

uint64_t sub_1C18C3C90()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C18C399C();
  if (result)
    return (*(uint64_t (**)(void))(v1 + 8))();
  return result;
}

id sub_1C18C3CBC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v1 = (void *)sub_1C1B0F14C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithDictionary_, v1);

  return v2;
}

void sub_1C18C3D60()
{
  static WFActionDefinitionRegistry.register(_:_:)(0xD000000000000020, 0x80000001C1B907D0, (uint64_t)sub_1C18C3D88, 0);
}

void sub_1C18C3D88()
{
  uint64_t inited;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __CFString *v35;
  __CFString *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __CFString *v54;
  __CFString *v55;
  uint64_t v56;
  uint64_t v57;
  __CFString *v58;
  __CFString *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __CFString *v73;
  __CFString *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  __CFString *v85;
  uint64_t v86;
  __CFString *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __CFString *v100;
  uint64_t v101;
  __CFString *v102;
  __CFString *v103;
  __CFString *v104;
  __CFString *v105;
  __CFString *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  __CFString *v118;
  __CFString *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __CFString *v133;
  uint64_t v134;
  __CFString *v135;
  __CFString *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __CFString *v150;
  __CFString *v151;
  __CFString *v152;
  __CFString *v153;
  uint64_t v154;
  __CFString *v155;
  __CFString *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  __CFString *v172;
  __CFString *v173;
  uint64_t v174;
  __CFString *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  __CFString *v186;
  __CFString *v187;
  __CFString *v188;
  uint64_t v189;
  __CFString *v190;
  uint64_t v191;
  __CFString *v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __CFString *v204;
  uint64_t v205;
  void *v206;
  void *v207;
  __CFString *v208;
  __CFString *v209;
  id v210;
  __CFString *v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  __CFString *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  __CFString *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  void *v240;
  void *v241;
  id v242;
  uint64_t v243;
  _QWORD *v244;
  __CFString *v245;
  uint64_t v246;
  _QWORD v247[2];
  _QWORD *v248;
  __CFString *v249;
  __CFString *v250;
  __CFString *v251;
  __CFString *v252;
  __CFString *v253;
  __CFString *v254;
  __CFString *v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  __int128 v259;
  unint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;

  v257 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1B3DA60;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = CFSTR("ActionClass");
  *(_QWORD *)(inited + 40) = 0xD000000000000013;
  *(_QWORD *)(inited + 48) = 0x80000001C1B90800;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = CFSTR("ActionKeywords");
  v2 = CFSTR("ActionClass");
  v3 = CFSTR("ActionKeywords");
  sub_1C1B0F260();
  v268 = v4;
  sub_1C1B0F260();
  v5 = sub_1C1B0DD6C();
  MEMORY[0x1E0C80A78](v5, v6, v7, v8);
  v270 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v271 = v9;
  sub_1C1B0DD24();
  if (qword_1EF6FB700 != -1)
    swift_once();
  v10 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v11 = sub_1C1B0DC1C();
  v272 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  MEMORY[0x1E0C80A78](v11, v12, v13, v14);
  v269 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_1C1B0DC04();

  v16 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v18 = v17;
  v19 = sub_1C15B882C(0, (unint64_t *)&qword_1EF6FBBB0);
  v268 = v19;
  *(_QWORD *)(inited + 80) = v18;
  *(_QWORD *)(inited + 104) = v19;
  *(_QWORD *)(inited + 112) = CFSTR("Attribution");
  v20 = CFSTR("Attribution");
  sub_1C1B0F260();
  v266 = v21;
  v22 = sub_1C1B0F260();
  v267 = v247;
  MEMORY[0x1E0C80A78](v22, v23, v24, v25);
  sub_1C1B0DD24();
  v26 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v27 = inited;
  MEMORY[0x1E0C80A78](v26, v28, v29, v30);
  sub_1C1B0DC04();

  v31 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v32 = v268;
  *(_QWORD *)(inited + 120) = v33;
  *(_QWORD *)(inited + 144) = v32;
  *(_QWORD *)(inited + 152) = CFSTR("Description");
  v266 = sub_1C15B882C(0, &qword_1EF6FBEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBEC8);
  v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C1B3BEB0;
  *(_QWORD *)(v34 + 32) = CFSTR("DescriptionSummary");
  v35 = CFSTR("Description");
  v36 = CFSTR("DescriptionSummary");
  v37 = sub_1C1B0F260();
  v264 = v38;
  v265 = v37;
  v39 = sub_1C1B0F260();
  v267 = v247;
  MEMORY[0x1E0C80A78](v39, v40, v41, v42);
  sub_1C1B0DD24();
  v43 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v43, v44, v45, v46);
  sub_1C1B0DC04();

  v47 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v34 + 64) = v32;
  *(_QWORD *)(v34 + 40) = v48;
  type metadata accessor for DescriptionKey(0);
  sub_1C15DB4C8((unint64_t *)&qword_1EF6FBD28, (uint64_t (*)(uint64_t))type metadata accessor for DescriptionKey, (uint64_t)&unk_1C1B3D914);
  v267 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1C1B0F170();
  v49 = v266;
  *(_QWORD *)(v27 + 160) = sub_1C18C3CBC();
  *(_QWORD *)(v27 + 184) = v49;
  *(_QWORD *)(v27 + 192) = CFSTR("IconName");
  *(_QWORD *)(v27 + 200) = 0x6472616F626E6950;
  *(_QWORD *)(v27 + 208) = 0xE800000000000000;
  v50 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 224) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 232) = CFSTR("Input");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FC8B0);
  v51 = swift_initStackObject();
  v259 = xmmword_1C1B3D970;
  *(_OWORD *)(v51 + 16) = xmmword_1C1B3D970;
  *(_QWORD *)(v51 + 32) = 0x656C7069746C754DLL;
  *(_QWORD *)(v51 + 40) = 0xE800000000000000;
  v52 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v51 + 48) = 0;
  *(_QWORD *)(v51 + 72) = v52;
  strcpy((char *)(v51 + 80), "ParameterKey");
  *(_BYTE *)(v51 + 93) = 0;
  *(_WORD *)(v51 + 94) = -5120;
  strcpy((char *)(v51 + 96), "WFPinboardURL");
  *(_WORD *)(v51 + 110) = -4864;
  *(_QWORD *)(v51 + 120) = v50;
  *(_QWORD *)(v51 + 128) = 0x6465726975716552;
  *(_QWORD *)(v51 + 136) = 0xE800000000000000;
  *(_BYTE *)(v51 + 144) = 1;
  *(_QWORD *)(v51 + 168) = v52;
  *(_QWORD *)(v51 + 176) = 0x7365707954;
  v53 = v52;
  *(_QWORD *)(v51 + 184) = 0xE500000000000000;
  v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FC5E0);
  *(_QWORD *)(v51 + 216) = v256;
  *(_QWORD *)(v51 + 192) = &unk_1E7ADF2F8;
  v54 = CFSTR("IconName");
  v55 = CFSTR("Input");
  v56 = sub_1C1B0F170();
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED0);
  v261 = (_QWORD *)v27;
  *(_QWORD *)(v27 + 240) = v56;
  *(_QWORD *)(v27 + 264) = v57;
  *(_QWORD *)(v27 + 272) = CFSTR("InputPassthrough");
  *(_BYTE *)(v27 + 280) = 1;
  *(_QWORD *)(v27 + 304) = v53;
  *(_QWORD *)(v27 + 312) = CFSTR("Name");
  v58 = CFSTR("InputPassthrough");
  v59 = CFSTR("Name");
  sub_1C1B0F260();
  v60 = sub_1C1B0F260();
  MEMORY[0x1E0C80A78](v60, v61, v62, v63);
  sub_1C1B0DD24();
  v64 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v64, v65, v66, v67);
  sub_1C1B0DC04();

  v68 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v69 = v261;
  v261[40] = v70;
  v69[43] = v268;
  v69[44] = CFSTR("Parameters");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6FB500);
  v266 = swift_allocObject();
  *(_OWORD *)(v266 + 16) = xmmword_1C1B3DA20;
  v265 = sub_1C15B882C(0, (unint64_t *)&unk_1EF6FDDB0);
  v264 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBBD0);
  v71 = swift_initStackObject();
  v258 = xmmword_1C1B3DA30;
  *(_OWORD *)(v71 + 16) = xmmword_1C1B3DA30;
  *(_QWORD *)(v71 + 32) = CFSTR("AutocapitalizationType");
  *(_QWORD *)(v71 + 40) = 0x7364726F57;
  *(_QWORD *)(v71 + 48) = 0xE500000000000000;
  v72 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v71 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v71 + 72) = CFSTR("Class");
  v260 = 0x80000001C1B4DAB0;
  *(_QWORD *)(v71 + 80) = 0xD000000000000014;
  *(_QWORD *)(v71 + 88) = 0x80000001C1B4DAB0;
  *(_QWORD *)(v71 + 104) = v72;
  *(_QWORD *)(v71 + 112) = CFSTR("Key");
  *(_QWORD *)(v71 + 120) = 0x7469546E69504657;
  *(_QWORD *)(v71 + 128) = 0xEA0000000000656CLL;
  *(_QWORD *)(v71 + 144) = v72;
  *(_QWORD *)(v71 + 152) = CFSTR("Label");
  v73 = CFSTR("Parameters");
  v254 = CFSTR("AutocapitalizationType");
  v252 = CFSTR("Class");
  v251 = CFSTR("Key");
  v253 = CFSTR("Label");
  v262 = sub_1C1B0F260();
  v255 = v74;
  v250 = (__CFString *)sub_1C1B0F260();
  v263 = v247;
  MEMORY[0x1E0C80A78](v250, v75, v76, v77);
  sub_1C1B0DD24();
  v78 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v249 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v78, v79, v80, v81);
  sub_1C1B0DC04();

  v82 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v71 + 160) = v83;
  v84 = v268;
  *(_QWORD *)(v71 + 184) = v268;
  *(_QWORD *)(v71 + 192) = CFSTR("Placeholder");
  v255 = CFSTR("Placeholder");
  v262 = sub_1C1B0F260();
  v250 = v85;
  v86 = sub_1C1B0F260();
  v249 = v87;
  v263 = v247;
  MEMORY[0x1E0C80A78](v86, v87, v88, v89);
  sub_1C1B0DD24();
  v90 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v90, v91, v92, v93);
  sub_1C1B0DC04();

  v94 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v71 + 224) = v84;
  *(_QWORD *)(v71 + 200) = v95;
  type metadata accessor for Key(0);
  v263 = v96;
  v262 = sub_1C15DB4C8((unint64_t *)&qword_1EF6FB2E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1C1B3CF70);
  v97 = sub_1C1B0F170();
  sub_1C163A904(v97);
  *(_QWORD *)(v266 + 32) = v98;
  v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = v258;
  v100 = v254;
  *(_QWORD *)(v99 + 32) = v254;
  *(_QWORD *)(v99 + 40) = 1701736270;
  *(_QWORD *)(v99 + 48) = 0xE400000000000000;
  v101 = MEMORY[0x1E0DEA968];
  v103 = v251;
  v102 = v252;
  *(_QWORD *)(v99 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v99 + 72) = v102;
  *(_QWORD *)(v99 + 80) = 0xD000000000000014;
  *(_QWORD *)(v99 + 88) = v260;
  *(_QWORD *)(v99 + 104) = v101;
  *(_QWORD *)(v99 + 112) = v103;
  *(_QWORD *)(v99 + 120) = 0x6761546E69504657;
  *(_QWORD *)(v99 + 128) = 0xE900000000000073;
  v104 = v253;
  *(_QWORD *)(v99 + 144) = v101;
  *(_QWORD *)(v99 + 152) = v104;
  v105 = v100;
  v250 = v102;
  v252 = v103;
  v254 = v104;
  v251 = (__CFString *)sub_1C1B0F260();
  v249 = v106;
  v107 = sub_1C1B0F260();
  v248 = v108;
  v253 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v107, v108, v109, v110);
  sub_1C1B0DD24();
  v111 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  v247[1] = v247;
  MEMORY[0x1E0C80A78](v111, v112, v113, v114);
  sub_1C1B0DC04();

  v115 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v99 + 160) = v116;
  v117 = v268;
  v118 = v255;
  *(_QWORD *)(v99 + 184) = v268;
  *(_QWORD *)(v99 + 192) = v118;
  v255 = v118;
  v251 = (__CFString *)sub_1C1B0F260();
  v249 = v119;
  v120 = sub_1C1B0F260();
  v253 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v120, v121, v122, v123);
  sub_1C1B0DD24();
  v124 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v124, v125, v126, v127);
  sub_1C1B0DC04();

  v128 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v99 + 224) = v117;
  *(_QWORD *)(v99 + 200) = v129;
  v130 = sub_1C1B0F170();
  sub_1C163A904(v130);
  *(_QWORD *)(v266 + 40) = v131;
  v132 = swift_allocObject();
  *(_OWORD *)(v132 + 16) = v259;
  v253 = (__CFString *)0xD000000000000011;
  v133 = v250;
  *(_QWORD *)(v132 + 32) = v250;
  *(_QWORD *)(v132 + 40) = 0xD000000000000011;
  v251 = (__CFString *)0x80000001C1B4FF70;
  *(_QWORD *)(v132 + 48) = 0x80000001C1B4FF70;
  v134 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v132 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v132 + 72) = CFSTR("DefaultValue");
  *(_BYTE *)(v132 + 80) = 1;
  v135 = v252;
  *(_QWORD *)(v132 + 104) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v132 + 112) = v135;
  *(_QWORD *)(v132 + 120) = 0x6275506E69504657;
  *(_QWORD *)(v132 + 128) = 0xEB0000000063696CLL;
  v136 = v254;
  *(_QWORD *)(v132 + 144) = v134;
  *(_QWORD *)(v132 + 152) = v136;
  v250 = v133;
  v249 = CFSTR("DefaultValue");
  v252 = v135;
  v254 = v136;
  sub_1C1B0F260();
  v137 = sub_1C1B0F260();
  v248 = v247;
  MEMORY[0x1E0C80A78](v137, v138, v139, v140);
  sub_1C1B0DD24();
  v141 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v141, v142, v143, v144);
  sub_1C1B0DC04();

  v145 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v132 + 184) = v268;
  *(_QWORD *)(v132 + 160) = v146;
  v147 = sub_1C1B0F170();
  sub_1C163A904(v147);
  *(_QWORD *)(v266 + 48) = v148;
  v149 = swift_allocObject();
  *(_OWORD *)(v149 + 16) = v259;
  v151 = v249;
  v150 = v250;
  v153 = v252;
  v152 = v253;
  *(_QWORD *)(v149 + 32) = v250;
  *(_QWORD *)(v149 + 40) = v152;
  *(_QWORD *)(v149 + 48) = v251;
  v154 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v149 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v149 + 72) = v151;
  *(_BYTE *)(v149 + 80) = 1;
  *(_QWORD *)(v149 + 104) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v149 + 112) = v153;
  *(_QWORD *)(v149 + 120) = 0x726E556E69504657;
  *(_QWORD *)(v149 + 128) = 0xEB00000000646165;
  v155 = v254;
  *(_QWORD *)(v149 + 144) = v154;
  *(_QWORD *)(v149 + 152) = v155;
  *(_QWORD *)&v259 = v150;
  v156 = v151;
  v252 = v153;
  v253 = v155;
  sub_1C1B0F260();
  v157 = sub_1C1B0F260();
  v254 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v157, v158, v159, v160);
  sub_1C1B0DD24();
  v161 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v161, v162, v163, v164);
  sub_1C1B0DC04();

  v165 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v149 + 184) = v268;
  *(_QWORD *)(v149 + 160) = v166;
  v167 = sub_1C1B0F170();
  sub_1C163A904(v167);
  *(_QWORD *)(v266 + 56) = v168;
  v169 = swift_allocObject();
  *(_OWORD *)(v169 + 16) = v258;
  v170 = (void *)v259;
  *(_QWORD *)(v169 + 32) = v259;
  *(_QWORD *)(v169 + 40) = 0xD000000000000014;
  *(_QWORD *)(v169 + 48) = v260;
  v171 = MEMORY[0x1E0DEA968];
  v172 = v252;
  v173 = v253;
  *(_QWORD *)(v169 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v169 + 72) = v172;
  *(_QWORD *)(v169 + 80) = 0xD000000000000010;
  *(_QWORD *)(v169 + 88) = 0x80000001C1B90940;
  *(_QWORD *)(v169 + 104) = v171;
  *(_QWORD *)(v169 + 112) = v173;
  v254 = v170;
  *(_QWORD *)&v258 = v172;
  *(_QWORD *)&v259 = v173;
  v174 = sub_1C1B0F260();
  v251 = v175;
  v252 = (__CFString *)v174;
  v250 = (__CFString *)sub_1C1B0F260();
  v253 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v250, v176, v177, v178);
  sub_1C1B0DD24();
  v179 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v179, v180, v181, v182);
  sub_1C1B0DC04();

  v183 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v169 + 120) = v184;
  v185 = v268;
  *(_QWORD *)(v169 + 144) = v268;
  *(_QWORD *)(v169 + 152) = CFSTR("Multiline");
  *(_BYTE *)(v169 + 160) = 1;
  v186 = v255;
  *(_QWORD *)(v169 + 184) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v169 + 192) = v186;
  v187 = CFSTR("Multiline");
  v188 = v186;
  v189 = sub_1C1B0F260();
  v252 = v190;
  v253 = (__CFString *)v189;
  v191 = sub_1C1B0F260();
  v251 = v192;
  v255 = (__CFString *)v247;
  MEMORY[0x1E0C80A78](v191, v192, v193, v194);
  sub_1C1B0DD24();
  v195 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v195, v196, v197, v198);
  sub_1C1B0DC04();

  v199 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v169 + 224) = v185;
  *(_QWORD *)(v169 + 200) = v200;
  v201 = sub_1C1B0F170();
  sub_1C163A904(v201);
  *(_QWORD *)(v266 + 64) = v202;
  v203 = swift_allocObject();
  *(_OWORD *)(v203 + 16) = xmmword_1C1B3D990;
  v204 = v254;
  *(_QWORD *)(v203 + 32) = v254;
  *(_QWORD *)(v203 + 40) = 0xD000000000000014;
  *(_QWORD *)(v203 + 48) = v260;
  v205 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v203 + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v203 + 72) = CFSTR("DisableAutocorrection");
  *(_BYTE *)(v203 + 80) = 1;
  v206 = (void *)v258;
  *(_QWORD *)(v203 + 104) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v203 + 112) = v206;
  strcpy((char *)(v203 + 120), "WFPinboardURL");
  *(_WORD *)(v203 + 134) = -4864;
  *(_QWORD *)(v203 + 144) = v205;
  *(_QWORD *)(v203 + 152) = CFSTR("KeyboardType");
  *(_QWORD *)(v203 + 160) = 5001813;
  *(_QWORD *)(v203 + 168) = 0xE300000000000000;
  v207 = (void *)v259;
  *(_QWORD *)(v203 + 184) = v205;
  *(_QWORD *)(v203 + 192) = v207;
  v208 = v204;
  v209 = CFSTR("DisableAutocorrection");
  v210 = v206;
  v211 = CFSTR("KeyboardType");
  v212 = v207;
  sub_1C1B0F260();
  v213 = sub_1C1B0F260();
  v264 = v247;
  MEMORY[0x1E0C80A78](v213, v214, v215, v216);
  sub_1C1B0DD24();
  v217 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v217, v218, v219, v220);
  sub_1C1B0DC04();

  v221 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  *(_QWORD *)(v203 + 200) = v222;
  *(_QWORD *)(v203 + 224) = v268;
  *(_QWORD *)(v203 + 232) = CFSTR("TextContentType");
  *(_QWORD *)(v203 + 264) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v203 + 240) = 5001813;
  *(_QWORD *)(v203 + 248) = 0xE300000000000000;
  v223 = CFSTR("TextContentType");
  v224 = sub_1C1B0F170();
  sub_1C163A904(v224);
  v225 = v266;
  *(_QWORD *)(v266 + 72) = v226;
  v273 = v225;
  sub_1C1B0F3A4();
  v227 = v273;
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6FBED8);
  v229 = v261;
  v261[45] = v227;
  v229[48] = v228;
  v229[49] = CFSTR("ParameterSummary");
  v230 = CFSTR("ParameterSummary");
  sub_1C1B0F260();
  v231 = sub_1C1B0F260();
  MEMORY[0x1E0C80A78](v231, v232, v233, v234);
  sub_1C1B0DD24();
  v235 = objc_msgSend((id)qword_1EF6FC9E8, sel_bundleURL);
  MEMORY[0x1E0C80A78](v235, v236, v237, v238);
  sub_1C1B0DC04();

  v239 = objc_allocWithZone(MEMORY[0x1E0CB3B78]);
  sub_1C163CC9C();
  v241 = v240;
  v242 = objc_msgSend(objc_allocWithZone((Class)WFActionParameterSummary), sel_initWithString_, v240);

  v243 = sub_1C15B882C(0, &qword_1EF700F00);
  v244 = v261;
  v261[50] = v242;
  v244[53] = v243;
  v244[54] = CFSTR("RequiredResources");
  v244[58] = v256;
  v244[55] = &unk_1E7ADF328;
  _s3__C3KeyVMa_0(0);
  sub_1C15DB4C8((unint64_t *)&qword_1ED1E7750, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_1C1B3CFB4);
  v245 = CFSTR("RequiredResources");
  v246 = sub_1C1B0F170();
  sub_1C163A920(v246);
}

uint64_t mtl_executeCleanupBlock(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)a1 + 16))();
}

void sub_1C18C7724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFBestFileTypeForSupportedContentTypes(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v10[4];
  id v11;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "containsObject:", v4))
  {
    v5 = (void *)objc_msgSend(v4, "copy");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __WFBestFileTypeForSupportedContentTypes_block_invoke;
    v10[3] = &unk_1E7AF3978;
    v11 = v6;
    v4 = v6;
    objc_msgSend(v3, "if_firstObjectPassingTest:", v10);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v7;
    if (v7)
      v8 = v7;

  }
  return v5;
}

Class __getICTextStyleClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!NotesUILibraryCore_frameworkLibrary)
    NotesUILibraryCore_frameworkLibrary = _sl_dlopen();
  if (!NotesUILibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *NotesUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLinkEntityContentItem.m"), 41, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("ICTextStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getICTextStyleClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLinkEntityContentItem.m"), 42, CFSTR("Unable to find class %s"), "ICTextStyle");

LABEL_8:
    __break(1u);
  }
  getICTextStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFEnforceClass(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  int v8;
  const char *v9;
  __int16 v10;
  id v11;
  __int16 v12;
  id v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0)
  {
    getWFGeneralLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
    {
      v8 = 136315906;
      v9 = "WFEnforceClass";
      v10 = 2114;
      v11 = v3;
      v12 = 2114;
      v13 = (id)objc_opt_class();
      v14 = 2114;
      v15 = a2;
      v6 = v13;
      _os_log_impl(&dword_1C15B3000, v5, OS_LOG_TYPE_FAULT, "%s Warning: %{public}@ is of type %{public}@, not %{public}@! Falling back to nil.", (uint8_t *)&v8, 0x2Au);

    }
    v4 = 0;
  }
  else
  {
    v4 = v3;
  }

  return v4;
}

uint64_t WFEnsureDaemonIsRunning()
{
  return notify_post("com.apple.shortcuts.daemon-wakeup-request");
}

void WFTerminateDaemon(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  objc_class *v8;
  id v9;
  void *v10;
  objc_class *v11;
  void *v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v30 = 0;
  v31 = &v30;
  v32 = 0x2050000000;
  v4 = (void *)getRBSProcessPredicateClass_softClass;
  v33 = getRBSProcessPredicateClass_softClass;
  if (!getRBSProcessPredicateClass_softClass)
  {
    v25 = MEMORY[0x1E0C809B0];
    v26 = 3221225472;
    v27 = (uint64_t)__getRBSProcessPredicateClass_block_invoke;
    v28 = &unk_1E7AF9520;
    v29 = &v30;
    __getRBSProcessPredicateClass_block_invoke((uint64_t)&v25);
    v4 = (void *)v31[3];
  }
  v5 = objc_retainAutorelease(v4);
  _Block_object_dispose(&v30, 8);
  objc_msgSend(v5, "predicateMatchingJobLabel:", *MEMORY[0x1E0DC7EA8]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v31 = &v30;
  v32 = 0x2050000000;
  v7 = (void *)getRBSTerminateContextClass_softClass;
  v33 = getRBSTerminateContextClass_softClass;
  if (!getRBSTerminateContextClass_softClass)
  {
    v25 = MEMORY[0x1E0C809B0];
    v26 = 3221225472;
    v27 = (uint64_t)__getRBSTerminateContextClass_block_invoke;
    v28 = &unk_1E7AF9520;
    v29 = &v30;
    __getRBSTerminateContextClass_block_invoke((uint64_t)&v25);
    v7 = (void *)v31[3];
  }
  v8 = objc_retainAutorelease(v7);
  _Block_object_dispose(&v30, 8);
  v9 = objc_alloc_init(v8);
  objc_msgSend(v9, "setMaximumTerminationResistance:", 40);
  v30 = 0;
  v31 = &v30;
  v32 = 0x2050000000;
  v10 = (void *)getRBSTerminateRequestClass_softClass;
  v33 = getRBSTerminateRequestClass_softClass;
  if (!getRBSTerminateRequestClass_softClass)
  {
    v25 = MEMORY[0x1E0C809B0];
    v26 = 3221225472;
    v27 = (uint64_t)__getRBSTerminateRequestClass_block_invoke;
    v28 = &unk_1E7AF9520;
    v29 = &v30;
    __getRBSTerminateRequestClass_block_invoke((uint64_t)&v25);
    v10 = (void *)v31[3];
  }
  v11 = objc_retainAutorelease(v10);
  _Block_object_dispose(&v30, 8);
  v12 = (void *)objc_msgSend([v11 alloc], "initWithPredicate:context:", v6, v9);
  v23 = 0;
  v24 = 0;
  v13 = objc_msgSend(v12, "execute:error:", &v24, &v23);
  v14 = v24;
  v15 = v23;
  if (a1)
    *a1 = objc_retainAutorelease(v14);
  if ((v13 & 1) != 0)
    goto LABEL_20;
  objc_msgSend(v15, "domain");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  v26 = (uint64_t)&v25;
  v27 = 0x2020000000;
  v17 = (id *)getRBSRequestErrorDomainSymbolLoc_ptr;
  v28 = (void *)getRBSRequestErrorDomainSymbolLoc_ptr;
  if (!getRBSRequestErrorDomainSymbolLoc_ptr)
  {
    v18 = RunningBoardServicesLibrary();
    v17 = (id *)dlsym(v18, "RBSRequestErrorDomain");
    *(_QWORD *)(v26 + 24) = v17;
    getRBSRequestErrorDomainSymbolLoc_ptr = (uint64_t)v17;
  }
  _Block_object_dispose(&v25, 8);
  if (v17)
  {
    v19 = *v17;
    if (objc_msgSend(v16, "isEqualToString:", v19))
    {
      v20 = objc_msgSend(v15, "code");

      if (v20 != 3)
        goto LABEL_18;
      v16 = v15;
      v15 = 0;
    }
    else
    {

    }
LABEL_18:
    if (a2)
    {
      v15 = objc_retainAutorelease(v15);
      *a2 = v15;
    }
LABEL_20:

    return;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSErrorDomain getRBSRequestErrorDomain(void)");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v22, CFSTR("WFDaemonControl.m"), 22, CFSTR("%s"), dlerror());

  __break(1u);
}

void sub_1C18CE628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getRBSProcessPredicateClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSProcessPredicate");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSProcessPredicateClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSProcessPredicateClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDaemonControl.m"), 19, CFSTR("Unable to find class %s"), "RBSProcessPredicate");

    __break(1u);
  }
}

void __getRBSTerminateContextClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSTerminateContext");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSTerminateContextClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSTerminateContextClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDaemonControl.m"), 20, CFSTR("Unable to find class %s"), "RBSTerminateContext");

    __break(1u);
  }
}

void __getRBSTerminateRequestClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSTerminateRequest");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSTerminateRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSTerminateRequestClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDaemonControl.m"), 21, CFSTR("Unable to find class %s"), "RBSTerminateRequest");

    __break(1u);
  }
}

void *RunningBoardServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
    RunningBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)RunningBoardServicesLibraryCore_frameworkLibrary;
  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RunningBoardServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFDaemonControl.m"), 17, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_1C18CEF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *ContactsLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!ContactsLibraryCore_frameworkLibrary)
    ContactsLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)ContactsLibraryCore_frameworkLibrary;
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("ICPhoneNumberContentMapping.m"), 13, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id INCLocalExtensionRegistryFunction()
{
  return (id)classINCLocalExtensionRegistry;
}

Class initINCLocalExtensionRegistry()
{
  Class result;

  if (IntentsCoreLibrary_sOnce != -1)
    dispatch_once(&IntentsCoreLibrary_sOnce, &__block_literal_global_174);
  result = objc_getClass("INCLocalExtensionRegistry");
  classINCLocalExtensionRegistry = (uint64_t)result;
  getINCLocalExtensionRegistryClass = (uint64_t (*)())INCLocalExtensionRegistryFunction;
  return result;
}

BOOL WFREPBAlertRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  WFREPBAlert *v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(WFREPBAlert **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(WFREPBAlert);
    objc_storeStrong((id *)(a1 + 8), v18);
    if (!PBReaderPlaceMark() || (WFREPBAlertReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFSearchActions(void *a1, void *a2)
{
  return WFSearchActionsWithKeywords(a1, a2, 0);
}

id WFSearchActionsWithKeywords(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  WFActionSearchRankedResults *v8;
  void *v9;
  void *v10;
  id v11;
  WFActionSearchRankedResults *v12;
  id v13;
  id v14;
  void *v15;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  WFActionSearchRankedResults *v21;
  uint64_t v22;

  v5 = a1;
  v6 = a3;
  v7 = a2;
  v8 = objc_alloc_init(WFActionSearchRankedResults);
  objc_msgSend(v5, "componentsSeparatedByString:", CFSTR(" "));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    objc_msgSend(v7, "residentCompatibleActionsForHome:", v6);
  else
    objc_msgSend(v7, "actions");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __WFSearchActionsWithKeywords_block_invoke;
  v17[3] = &unk_1E7AEA428;
  v18 = v6;
  v19 = v9;
  v11 = v5;
  v20 = v11;
  v22 = 385;
  v12 = v8;
  v21 = v12;
  v13 = v9;
  v14 = v6;
  objc_msgSend(v10, "enumerateObjectsUsingBlock:", v17);
  if (objc_msgSend(v11, "rangeOfString:options:", CFSTR("URL"), 385) != 0x7FFFFFFFFFFFFFFFLL)
    -[WFActionSearchRankedCollection prioritizeItem:type:](v12, "prioritizeItem:type:", *MEMORY[0x1E0D14150], 0);
  -[WFActionSearchRankedResults rankedGroups](v12, "rankedGroups");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

void sub_1C18D3270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t WFActionShouldBeIncludedInResults(void *a1, int a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  int v21;
  _BOOL4 v22;
  int v23;
  int v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t j;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t k;
  id v41;
  int v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[128];
  _BYTE v65[128];
  _BYTE v66[128];
  _BYTE v67[128];
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (objc_msgSend(v3, "visibleForUse:", 0)
    && (!a2 || objc_msgSend(v3, "isResidentCompatible")))
  {
    objc_msgSend(MEMORY[0x1E0DC7AC8], "currentDevice");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "idiom");

    v62 = 0u;
    v63 = 0u;
    v60 = 0u;
    v61 = 0u;
    objc_msgSend(v3, "disabledOnPlatforms");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v60, v67, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v61;
LABEL_6:
      v10 = 0;
      while (1)
      {
        if (*(_QWORD *)v61 != v9)
          objc_enumerationMutation(v6);
        if (WFDeviceIdiomForExecutionPlatform(*(void **)(*((_QWORD *)&v60 + 1) + 8 * v10)) == v5)
          goto LABEL_39;
        if (v8 == ++v10)
        {
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v60, v67, 16);
          if (v8)
            goto LABEL_6;
          break;
        }
      }
    }

    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    v47 = v3;
    objc_msgSend(v3, "resourceManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "resourceObjectsOfClass:", objc_opt_class());
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
    if (v13)
    {
      v14 = v13;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = *(_QWORD *)v57;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v57 != v18)
            objc_enumerationMutation(v12);
          v20 = *(void **)(*((_QWORD *)&v56 + 1) + 8 * i);
          v21 = objc_msgSend(v20, "isEqual");
          v22 = objc_msgSend(v20, "idiom") == v5;
          v23 = v22 | v15;
          v24 = v22 | v16;
          if (v21)
          {
            v16 = v24;
            v17 = 1;
          }
          else
          {
            v15 = v23;
          }
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
      }
      while (v14);
    }
    else
    {
      LOBYTE(v15) = 0;
      v16 = 0;
      v17 = 0;
    }

    v25 = 0;
    if ((v17 & ~v16 & 1) != 0)
    {
      v3 = v47;
    }
    else
    {
      v3 = v47;
      if ((v15 & 1) == 0)
      {
        objc_msgSend(v47, "resourceManager");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "resourceObjectsOfClass:", objc_opt_class());
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        v6 = v27;
        v28 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v52, v65, 16);
        if (v28)
        {
          v29 = v28;
          v30 = 0;
          v31 = *(_QWORD *)v53;
          do
          {
            for (j = 0; j != v29; ++j)
            {
              if (*(_QWORD *)v53 != v31)
                objc_enumerationMutation(v6);
              v30 |= objc_msgSend(*(id *)(*((_QWORD *)&v52 + 1) + 8 * j), "isAvailable");
            }
            v29 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v52, v65, 16);
          }
          while (v29);
        }
        else
        {
          LOBYTE(v30) = 0;
        }

        if (!objc_msgSend(v6, "count") || (v30 & 1) != 0)
        {
          objc_msgSend(v47, "resourceManager");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "resourceObjectsOfClass:", objc_opt_class());
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          v50 = 0u;
          v51 = 0u;
          v48 = 0u;
          v49 = 0u;
          v36 = v35;
          v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v48, v64, 16);
          if (v37)
          {
            v38 = v37;
            v39 = *(_QWORD *)v49;
            while (2)
            {
              for (k = 0; k != v38; ++k)
              {
                if (*(_QWORD *)v49 != v39)
                  objc_enumerationMutation(v36);
                if (!objc_msgSend(*(id *)(*((_QWORD *)&v48 + 1) + 8 * k), "isAvailable"))
                {
                  v25 = 0;
                  v41 = v36;
                  goto LABEL_60;
                }
              }
              v38 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v48, v64, 16);
              if (v38)
                continue;
              break;
            }
          }

          if (WFActionDenyListedBundles_onceToken != -1)
            dispatch_once(&WFActionDenyListedBundles_onceToken, &__block_literal_global_722);
          v41 = (id)WFActionDenyListedBundles_denyListedBundles;
          if (WFForceAllowActionsFromAllBundles_onceToken != -1)
            dispatch_once(&WFForceAllowActionsFromAllBundles_onceToken, &__block_literal_global_186);
          v42 = WFForceAllowActionsFromAllBundles_forceAllowActionsFromAllBundles;
          v43 = objc_msgSend(v41, "count");
          if (v42)
            goto LABEL_59;
          if (!v43)
            goto LABEL_59;
          v44 = (void *)MEMORY[0x1E0C99E60];
          objc_msgSend(v47, "supportedAppIdentifiers");
          v45 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "setWithArray:", v45);
          v46 = (void *)objc_claimAutoreleasedReturnValue();

          LOBYTE(v45) = objc_msgSend(v46, "intersectsSet:", v41);
          if ((v45 & 1) != 0)
            v25 = 0;
          else
LABEL_59:
            v25 = 1;
LABEL_60:

          goto LABEL_40;
        }
LABEL_39:
        v25 = 0;
LABEL_40:

      }
    }
  }
  else
  {
    v25 = 0;
  }

  return v25;
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1C18D3B5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&WFFeatureFlagTestingLock);
  _Unwind_Resume(a1);
}

void sub_1C18D55C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__954(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__955(uint64_t a1)
{

}

id WFCategorizedInputTypes()
{
  id v0;
  void *v1;
  WFStringSubstitutableState *v2;
  WFStringSubstitutableState *v3;
  void *v4;
  id v5;
  void *v6;
  WFStringSubstitutableState *v7;
  WFStringSubstitutableState *v8;
  WFStringSubstitutableState *v9;
  WFStringSubstitutableState *v10;
  WFStringSubstitutableState *v11;
  void *v12;
  id v13;
  void *v14;
  WFStringSubstitutableState *v15;
  WFStringSubstitutableState *v16;
  WFStringSubstitutableState *v17;
  void *v18;
  id v19;
  void *v20;
  WFStringSubstitutableState *v21;
  WFStringSubstitutableState *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  WFStringSubstitutableState *v27;
  WFStringSubstitutableState *v28;
  WFStringSubstitutableState *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  WFStringSubstitutableState *v34;
  WFStringSubstitutableState *v35;
  WFStringSubstitutableState *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  void *v43;
  void *v44;
  void *v45;
  _QWORD v46[6];
  _QWORD v47[3];
  _QWORD v48[3];
  _QWORD v49[2];
  _QWORD v50[3];
  _QWORD v51[5];
  _QWORD v52[4];

  v52[2] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Media"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFImageContentItem"));
  v52[0] = v2;
  v3 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFAVAssetContentItem"));
  v52[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v52, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v45 = (void *)objc_msgSend(v0, "initWithTitle:items:", v1, v4);

  v5 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Documents"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFGenericFileContentItem"));
  v51[0] = v7;
  v8 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFFolderContentItem"));
  v51[1] = v8;
  v9 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFPDFContentItem"));
  v51[2] = v9;
  v10 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFStringContentItem"));
  v51[3] = v10;
  v11 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFRichTextContentItem"));
  v51[4] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v51, 5);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v44 = (void *)objc_msgSend(v5, "initWithTitle:items:", v6, v12);

  v13 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Web"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFSafariWebPageContentItem"));
  v50[0] = v15;
  v16 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFURLContentItem"));
  v50[1] = v16;
  v17 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFArticleContentItem"));
  v50[2] = v17;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v50, 3);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = (void *)objc_msgSend(v13, "initWithTitle:items:", v14, v18);

  v19 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Places"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFDCMapsLinkContentItem"));
  v49[0] = v21;
  v22 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFLocationContentItem"));
  v49[1] = v22;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v49, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = (void *)objc_msgSend(v19, "initWithTitle:items:", v20, v23);

  v25 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Communication"));
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFContactContentItem"));
  v48[0] = v27;
  v28 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFEmailAddressContentItem"));
  v48[1] = v28;
  v29 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFPhoneNumberContentItem"));
  v48[2] = v29;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v48, 3);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = (void *)objc_msgSend(v25, "initWithTitle:items:", v26, v30);

  v32 = objc_alloc(MEMORY[0x1E0CBDA20]);
  WFLocalizedString(CFSTR("Other"));
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFDateContentItem"));
  v47[0] = v34;
  v35 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFAppStoreAppContentItem"));
  v47[1] = v35;
  v36 = -[WFVariableSubstitutableParameterState initWithValue:]([WFStringSubstitutableState alloc], "initWithValue:", CFSTR("WFiTunesProductContentItem"));
  v47[2] = v36;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v47, 3);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = (void *)objc_msgSend(v32, "initWithTitle:items:", v33, v37);

  v39 = objc_alloc(MEMORY[0x1E0CBDA10]);
  v46[0] = v45;
  v46[1] = v44;
  v46[2] = v43;
  v46[3] = v24;
  v46[4] = v31;
  v46[5] = v38;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 6);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v41 = (void *)objc_msgSend(v39, "initWithSections:", v40);

  return v41;
}

id WFAssetDataDirectoryForIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v6;
  void *v7;

  v1 = a1;
  if (!objc_msgSend(v1, "length"))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSURL * _Nonnull WFAssetDataDirectoryForIdentifier(NSString * _Nonnull __strong)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFRemoteQuarantinePolicyManager.m"), 311, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("identifier.length"));

  }
  WFAssetsDirectory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathExtension:", CFSTR("bundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "URLByAppendingPathComponent:isDirectory:", v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id WFAssetsDirectory()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "wf_shortcutsDirectoryURL");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "URLByAppendingPathComponent:isDirectory:", CFSTR("QuarantineAsset"), 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id HMCharacteristicMetadataFormatBoolFunction()
{
  return (id)constantHMCharacteristicMetadataFormatBool;
}

id initHMCharacteristicMetadataFormatBool()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatBool");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatBool", "WFGetHomeAccessoryStateAction.m", 26, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatBool, *v0);
  getHMCharacteristicMetadataFormatBool = (uint64_t (*)())HMCharacteristicMetadataFormatBoolFunction;
  return (id)constantHMCharacteristicMetadataFormatBool;
}

id HMCharacteristicMetadataFormatStringFunction()
{
  return (id)constantHMCharacteristicMetadataFormatString;
}

id initHMCharacteristicMetadataFormatString()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatString");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatString", "WFGetHomeAccessoryStateAction.m", 29, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatString, *v0);
  getHMCharacteristicMetadataFormatString = (uint64_t (*)())HMCharacteristicMetadataFormatStringFunction;
  return (id)constantHMCharacteristicMetadataFormatString;
}

id HMCharacteristicMetadataFormatIntFunction()
{
  return (id)constantHMCharacteristicMetadataFormatInt;
}

id initHMCharacteristicMetadataFormatInt()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatInt");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatInt", "WFGetHomeAccessoryStateAction.m", 27, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatInt, *v0);
  getHMCharacteristicMetadataFormatInt = (uint64_t (*)())HMCharacteristicMetadataFormatIntFunction;
  return (id)constantHMCharacteristicMetadataFormatInt;
}

id HMCharacteristicMetadataFormatFloatFunction()
{
  return (id)constantHMCharacteristicMetadataFormatFloat;
}

id initHMCharacteristicMetadataFormatFloat()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatFloat");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatFloat", "WFGetHomeAccessoryStateAction.m", 28, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatFloat, *v0);
  getHMCharacteristicMetadataFormatFloat = (uint64_t (*)())HMCharacteristicMetadataFormatFloatFunction;
  return (id)constantHMCharacteristicMetadataFormatFloat;
}

id HMCharacteristicMetadataFormatUInt8Function()
{
  return (id)constantHMCharacteristicMetadataFormatUInt8;
}

id initHMCharacteristicMetadataFormatUInt8()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatUInt8");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt8", "WFGetHomeAccessoryStateAction.m", 30, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt8, *v0);
  getHMCharacteristicMetadataFormatUInt8 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt8Function;
  return (id)constantHMCharacteristicMetadataFormatUInt8;
}

id HMCharacteristicMetadataFormatUInt16Function()
{
  return (id)constantHMCharacteristicMetadataFormatUInt16;
}

id initHMCharacteristicMetadataFormatUInt16()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatUInt16");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt16", "WFGetHomeAccessoryStateAction.m", 31, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt16, *v0);
  getHMCharacteristicMetadataFormatUInt16 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt16Function;
  return (id)constantHMCharacteristicMetadataFormatUInt16;
}

id HMCharacteristicMetadataFormatUInt32Function()
{
  return (id)constantHMCharacteristicMetadataFormatUInt32;
}

id initHMCharacteristicMetadataFormatUInt32()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatUInt32");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt32", "WFGetHomeAccessoryStateAction.m", 32, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt32, *v0);
  getHMCharacteristicMetadataFormatUInt32 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt32Function;
  return (id)constantHMCharacteristicMetadataFormatUInt32;
}

id HMCharacteristicMetadataFormatUInt64Function()
{
  return (id)constantHMCharacteristicMetadataFormatUInt64;
}

id initHMCharacteristicMetadataFormatUInt64()
{
  id *v0;

  if (HomeKitLibrary_sOnce != -1)
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_1353);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib, "HMCharacteristicMetadataFormatUInt64");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt64", "WFGetHomeAccessoryStateAction.m", 33, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt64, *v0);
  getHMCharacteristicMetadataFormatUInt64 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt64Function;
  return (id)constantHMCharacteristicMetadataFormatUInt64;
}

void sub_1C18DBFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C18DC3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1C18DC668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C18DCAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C18DE240(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPHAssetCollectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!PhotosLibraryCore_frameworkLibrary)
    PhotosLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!PhotosLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PhotosLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLinkActionPhotoItemCollectionParameterDefinition.m"), 27, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("PHAssetCollection");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPHAssetCollectionClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLinkActionPhotoItemCollectionParameterDefinition.m"), 28, CFSTR("Unable to find class %s"), "PHAssetCollection");

LABEL_8:
    __break(1u);
  }
  getPHAssetCollectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFSerializableHomeIdentifier(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "uuid");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "UUIDString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id HMHomeManagerFunction()
{
  return (id)classHMHomeManager;
}

id getWFRelevanceEngineLogObject()
{
  if (getWFRelevanceEngineLogObject_onceToken != -1)
    dispatch_once(&getWFRelevanceEngineLogObject_onceToken, &__block_literal_global_1834);
  return (id)getWFRelevanceEngineLogObject_log;
}

void __getWFRelevanceEngineLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "RelevanceEngine");
  v1 = (void *)getWFRelevanceEngineLogObject_log;
  getWFRelevanceEngineLogObject_log = (uint64_t)v0;

}

void sub_1C18E0BB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id HMCharacteristicMetadataFormatBoolFunction_2214()
{
  return (id)constantHMCharacteristicMetadataFormatBool_2260;
}

id initHMCharacteristicMetadataFormatBool_2215()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatBool");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatBool", "WFHomeAccessoryConditionalSubjectState.m", 26, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatBool_2260, *v0);
  getHMCharacteristicMetadataFormatBool_2213 = (uint64_t (*)())HMCharacteristicMetadataFormatBoolFunction_2214;
  return (id)constantHMCharacteristicMetadataFormatBool_2260;
}

id HMCharacteristicMetadataFormatStringFunction_2217()
{
  return (id)constantHMCharacteristicMetadataFormatString_2257;
}

id initHMCharacteristicMetadataFormatString_2218()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatString");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatString", "WFHomeAccessoryConditionalSubjectState.m", 29, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatString_2257, *v0);
  getHMCharacteristicMetadataFormatString_2216 = (uint64_t (*)())HMCharacteristicMetadataFormatStringFunction_2217;
  return (id)constantHMCharacteristicMetadataFormatString_2257;
}

id HMCharacteristicMetadataFormatIntFunction_2220()
{
  return (id)constantHMCharacteristicMetadataFormatInt_2254;
}

id initHMCharacteristicMetadataFormatInt_2221()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatInt");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatInt", "WFHomeAccessoryConditionalSubjectState.m", 27, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatInt_2254, *v0);
  getHMCharacteristicMetadataFormatInt_2219 = (uint64_t (*)())HMCharacteristicMetadataFormatIntFunction_2220;
  return (id)constantHMCharacteristicMetadataFormatInt_2254;
}

id HMCharacteristicMetadataFormatFloatFunction_2223()
{
  return (id)constantHMCharacteristicMetadataFormatFloat_2252;
}

id initHMCharacteristicMetadataFormatFloat_2224()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatFloat");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatFloat", "WFHomeAccessoryConditionalSubjectState.m", 28, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatFloat_2252, *v0);
  getHMCharacteristicMetadataFormatFloat_2222 = (uint64_t (*)())HMCharacteristicMetadataFormatFloatFunction_2223;
  return (id)constantHMCharacteristicMetadataFormatFloat_2252;
}

id HMCharacteristicMetadataFormatUInt8Function_2226()
{
  return (id)constantHMCharacteristicMetadataFormatUInt8_2249;
}

id initHMCharacteristicMetadataFormatUInt8_2227()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatUInt8");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt8", "WFHomeAccessoryConditionalSubjectState.m", 30, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt8_2249, *v0);
  getHMCharacteristicMetadataFormatUInt8_2225 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt8Function_2226;
  return (id)constantHMCharacteristicMetadataFormatUInt8_2249;
}

id HMCharacteristicMetadataFormatUInt16Function_2229()
{
  return (id)constantHMCharacteristicMetadataFormatUInt16_2247;
}

id initHMCharacteristicMetadataFormatUInt16_2230()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatUInt16");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt16", "WFHomeAccessoryConditionalSubjectState.m", 31, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt16_2247, *v0);
  getHMCharacteristicMetadataFormatUInt16_2228 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt16Function_2229;
  return (id)constantHMCharacteristicMetadataFormatUInt16_2247;
}

id HMCharacteristicMetadataFormatUInt32Function_2232()
{
  return (id)constantHMCharacteristicMetadataFormatUInt32_2244;
}

id initHMCharacteristicMetadataFormatUInt32_2233()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatUInt32");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt32", "WFHomeAccessoryConditionalSubjectState.m", 32, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt32_2244, *v0);
  getHMCharacteristicMetadataFormatUInt32_2231 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt32Function_2232;
  return (id)constantHMCharacteristicMetadataFormatUInt32_2244;
}

id HMCharacteristicMetadataFormatUInt64Function_2235()
{
  return (id)constantHMCharacteristicMetadataFormatUInt64_2241;
}

id initHMCharacteristicMetadataFormatUInt64_2236()
{
  id *v0;

  if (HomeKitLibrary_sOnce_2237 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_2237, &__block_literal_global_216);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2238, "HMCharacteristicMetadataFormatUInt64");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt64", "WFHomeAccessoryConditionalSubjectState.m", 33, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt64_2241, *v0);
  getHMCharacteristicMetadataFormatUInt64_2234 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt64Function_2235;
  return (id)constantHMCharacteristicMetadataFormatUInt64_2241;
}

uint64_t WFPBTriggeredAutomationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t result;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_21;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_21:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_55;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_55:
          v44 = v22 != 0;
          v45 = 32;
          goto LABEL_69;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v28) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v28) = 0;
LABEL_59:
          v46 = 8;
          goto LABEL_64;
        case 6u:
          v33 = 0;
          v34 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v28 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v28) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v28) = 0;
LABEL_63:
          v46 = 12;
LABEL_64:
          *(_DWORD *)(a1 + v46) = v28;
          continue;
        case 7u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v41 = *v3;
        v42 = *(_QWORD *)(a2 + v41);
        if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          break;
        v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
        *(_QWORD *)(a2 + v41) = v42 + 1;
        v40 |= (unint64_t)(v43 & 0x7F) << v38;
        if ((v43 & 0x80) == 0)
          goto LABEL_66;
        v38 += 7;
        v14 = v39++ >= 9;
        if (v14)
        {
          v40 = 0;
          goto LABEL_68;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_66:
      if (*(_BYTE *)(a2 + *v5))
        v40 = 0;
LABEL_68:
      v44 = v40 != 0;
      v45 = 33;
LABEL_69:
      *(_BYTE *)(a1 + v45) = v44;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C18E72EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2749(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2750(uint64_t a1)
{

}

void sub_1C18EA37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C18EA86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t WFVariableStringInferredContentTypeForItem(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v2 = 1;
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v2 = 2;
      }
      else
      {
        objc_msgSend(v1, "supportedItemClasses");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = objc_msgSend(v3, "containsObject:", objc_opt_class());

        v2 = v4;
      }
    }
  }

  return v2;
}

void WFAppendStringToVariableContentConcatenatingStringsIfNecessary(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a1;
  v3 = a2;
  if (v3)
  {
    objc_msgSend(v6, "lastObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v4, "stringByAppendingString:", v3);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "replaceObjectAtIndex:withObject:", objc_msgSend(v6, "count") - 1, v5);

    }
    else
    {
      objc_msgSend(v6, "addObject:", v3);
    }

  }
}

uint64_t __Block_byref_object_copy__3036(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3037(uint64_t a1)
{

}

BOOL WFVariableStringItemIsConsideredString(void *a1)
{
  return WFVariableStringInferredContentTypeForItem(a1) == 0;
}

BOOL WFAppShortcutDataSourceEnvironmentToOrganizationStyle(_BOOL8 result)
{
  if (result != 2)
    return result == 1;
  return result;
}

uint64_t (*initHKUILocalizedWorkoutTypeName(uint64_t a1))()
{
  uint64_t (*v2)();

  if (HealthUILibrary_sOnce != -1)
    dispatch_once(&HealthUILibrary_sOnce, &__block_literal_global_311);
  v2 = (uint64_t (*)())dlsym((void *)HealthUILibrary_sLib, "HKUILocalizedWorkoutTypeName");
  softLinkHKUILocalizedWorkoutTypeName = v2;
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
    v2 = (uint64_t (*)())objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

id HKWorkoutFunction()
{
  return (id)classHKWorkout;
}

Class initHKWorkout()
{
  Class result;

  if (HealthKitLibrary_sOnce != -1)
    dispatch_once(&HealthKitLibrary_sOnce, &__block_literal_global_308);
  result = objc_getClass("HKWorkout");
  classHKWorkout = (uint64_t)result;
  getHKWorkoutClass = (uint64_t (*)())HKWorkoutFunction;
  return result;
}

uint64_t WFPBRunShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_70;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_70;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_70;
        case 5u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 84) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_74:
          v56 = 8;
          goto LABEL_87;
        case 6u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 84) |= 4u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_78:
          v57 = v28 != 0;
          v58 = 80;
          goto LABEL_96;
        case 7u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 84) |= 0x10u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  v34 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
LABEL_82:
          v57 = v34 != 0;
          v58 = 82;
          goto LABEL_96;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_70;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_70;
        case 0xAu:
          v38 = 0;
          v39 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 84) |= 2u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v22 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_86:
          v56 = 48;
LABEL_87:
          *(_DWORD *)(a1 + v56) = v22;
          continue;
        case 0xBu:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_BYTE *)(a1 + 84) |= 8u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  v45 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v45 = 0;
LABEL_91:
          v57 = v45 != 0;
          v58 = 81;
          goto LABEL_96;
        case 0xCu:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_BYTE *)(a1 + 84) |= 0x20u;
          break;
        case 0xDu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_70;
        case 0xEu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
LABEL_70:
          v55 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v51 |= (unint64_t)(v54 & 0x7F) << v49;
        if ((v54 & 0x80) == 0)
          goto LABEL_93;
        v49 += 7;
        v14 = v50++ >= 9;
        if (v14)
        {
          v51 = 0;
          goto LABEL_95;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_93:
      if (*(_BYTE *)(a2 + *v5))
        v51 = 0;
LABEL_95:
      v57 = v51 != 0;
      v58 = 83;
LABEL_96:
      *(_BYTE *)(a1 + v58) = v57;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C18F2974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id HFTriggerActionSetsBuilderFunction()
{
  return (id)classHFTriggerActionSetsBuilder;
}

Class initHFTriggerActionSetsBuilder()
{
  Class result;

  if (HomeLibrary_sOnce != -1)
    dispatch_once(&HomeLibrary_sOnce, &__block_literal_global_185);
  result = objc_getClass("HFTriggerActionSetsBuilder");
  classHFTriggerActionSetsBuilder = (uint64_t)result;
  getHFTriggerActionSetsBuilderClass = (uint64_t (*)())HFTriggerActionSetsBuilderFunction;
  return result;
}

id WFMapPropertyListStrings(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v3;
  if (!v5)
    goto LABEL_24;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", v5);
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = (void *)v6;
    if (v6)
      v8 = (void *)v6;
    else
      v8 = v5;
    v9 = v8;

    goto LABEL_25;
  }

  v9 = v5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v23 = v5;
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    objc_msgSend(v9, "allKeys");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v25 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
          objc_msgSend(v9, "objectForKeyedSubscript:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          WFMapPropertyListStrings(v15, v4);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          WFMapPropertyListStrings(v16, v4);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v15, "isEqual:", v17) || (objc_msgSend(v16, "isEqual:", v18) & 1) == 0)
          {
            objc_msgSend(v9, "removeObjectForKey:", v15);
            objc_msgSend(v9, "setObject:forKey:", v18, v17);
          }

        }
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      }
      while (v12);
    }

    v5 = v23;
    goto LABEL_25;
  }

  v9 = v9;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_24:

    v9 = v5;
    goto LABEL_25;
  }
  if (objc_msgSend(v9, "count"))
  {
    v19 = 0;
    do
    {
      objc_msgSend(v9, "objectAtIndexedSubscript:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      WFMapPropertyListStrings(v20, v4);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:atIndexedSubscript:", v21, v19);

      ++v19;
    }
    while (v19 < objc_msgSend(v9, "count"));
  }
LABEL_25:

  return v9;
}

id WFLegacySerializedWorkflowToRunWorkflow(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;
  void *v17;
  const __CFString *v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[2];
  void *v22;
  uint8_t buf[4];
  const char *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSData * _Nullable WFLegacySerializedWorkflowToRunWorkflow(WFWorkflowReference * _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, CFSTR("WFWorkflowRecord+PeaceDeserialization.m"), 98, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("reference"));

  }
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBDB28]), "initWithWorkflowReference:includeIcon:", v3, 0);
  objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v4, 1, a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "length"))
  {
    v6 = objc_opt_new();
    objc_msgSend(v3, "name");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v7, CFSTR("WFLWorkflowName"));

    objc_msgSend(v3, "subtitle");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "length");

    if (v9)
    {
      objc_msgSend(v3, "subtitle");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v10, CFSTR("WFLWorkflowDescription"));

    }
    v19 = v5;
    v20[0] = CFSTR("WFLWorkflowActionIdentifier");
    v20[1] = CFSTR("WFLWorkflowActionParameters");
    v21[0] = CFSTR("com.apple.WorkflowKit.actions.handle-intent");
    v18 = CFSTR("IntentData");
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v21[1] = v11;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v12;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v22, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v13, CFSTR("WFLWorkflowActions"));

    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v6, 200, 0, a2);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    getWFWatchSyncLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v24 = "WFLegacySerializedWorkflowToRunWorkflow";
      _os_log_impl(&dword_1C15B3000, v6, OS_LOG_TYPE_DEFAULT, "%s Failed to serialize INRunWorkflowIntent for watch sync", buf, 0xCu);
    }
    v14 = 0;
  }

  return v14;
}

void sub_1C18F4E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a70;
  uint64_t v70;

  _Block_object_dispose((const void *)(v70 - 160), 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x238], 8);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose(&STACK[0x298], 8);
  _Unwind_Resume(a1);
}

id ATXClientFunction()
{
  return (id)classATXClient;
}

Class initATXClient()
{
  Class result;

  if (AppPredictionClientLibrary_sOnce != -1)
    dispatch_once(&AppPredictionClientLibrary_sOnce, &__block_literal_global_263);
  result = objc_getClass("ATXClient");
  classATXClient = (uint64_t)result;
  getATXClientClass = (uint64_t (*)())ATXClientFunction;
  return result;
}

id VCIntentsForAllPossibleParameterCombinationsOfIntent(void *a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  uint64_t v21;
  void *v22;
  void *v24;
  void *v25;
  id obj;
  uint64_t v27;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v28 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v2 = v1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_7;
  v3 = v2;
  objc_msgSend(v3, "mediaContainer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "type");

  if (v5 != 6)
  {
LABEL_6:

LABEL_7:
    objc_msgSend(v2, "_validParameterCombinations");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_8;
  }
  v6 = (void *)objc_msgSend(v3, "copy");
  objc_msgSend(v6, "setMediaItems:", MEMORY[0x1E0C9AA60]);
  objc_msgSend(v6, "setResumePlayback:", 0);
  objc_msgSend(v6, "_validParameterCombinations");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "count"))
  {

    goto LABEL_6;
  }

LABEL_8:
  v25 = v7;
  objc_msgSend(v7, "allKeys");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v8, "mutableCopy");

  objc_msgSend(v2, "_nonNilParameters");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "indexOfObject:");
  if (v10 && v10 != 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(v9, "exchangeObjectAtIndex:withObjectAtIndex:", v10, 0);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  obj = v9;
  v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
  if (v11)
  {
    v12 = v11;
    v27 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v34 != v27)
          objc_enumerationMutation(obj);
        v14 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * i);
        objc_msgSend(v2, "_emptyCopy");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = 0u;
        v30 = 0u;
        v31 = 0u;
        v32 = 0u;
        v16 = v14;
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
        if (v17)
        {
          v18 = v17;
          v19 = *(_QWORD *)v30;
          do
          {
            for (j = 0; j != v18; ++j)
            {
              if (*(_QWORD *)v30 != v19)
                objc_enumerationMutation(v16);
              v21 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * j);
              objc_msgSend(v2, "valueForKey:", v21);
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "setValue:forKey:", v22, v21);

            }
            v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
          }
          while (v18);
        }

        objc_msgSend(v28, "addObject:", v15);
      }
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
    }
    while (v12);
  }

  return v28;
}

id VCInteractionDonationFromINIntent(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = (objc_class *)MEMORY[0x1E0CBD9A8];
  v4 = a2;
  v5 = a1;
  v6 = (void *)objc_msgSend([v3 alloc], "initWithIntent:response:", v5, 0);

  v7 = objc_alloc(MEMORY[0x1E0DC7938]);
  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "UUIDString");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v7, "initWithIdentifier:sourceAppIdentifier:interaction:", v9, v4, v6);

  return v10;
}

uint64_t __Block_byref_object_copy__4690(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4691(uint64_t a1)
{

}

id ATXActionPredictionClientFunction()
{
  return (id)classATXActionPredictionClient;
}

Class initATXActionPredictionClient()
{
  Class result;

  if (AppPredictionClientLibrary_sOnce != -1)
    dispatch_once(&AppPredictionClientLibrary_sOnce, &__block_literal_global_263);
  result = objc_getClass("ATXActionPredictionClient");
  classATXActionPredictionClient = (uint64_t)result;
  getATXActionPredictionClientClass = (uint64_t (*)())ATXActionPredictionClientFunction;
  return result;
}

id VCActionDonationArrayFromINShortcutArray(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  void *v30;
  __int128 v32;
  uint64_t v33;
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  const char *v41;
  __int16 v42;
  void *v43;
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v34 = a2;
  v35 = (id)objc_opt_new();
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
  if (v5)
  {
    v7 = v5;
    v8 = *(_QWORD *)v37;
    *(_QWORD *)&v6 = 136315394;
    v32 = v6;
    v9 = 0x1E0CB3000uLL;
    v10 = 0x1E0CBD000uLL;
    do
    {
      v11 = 0;
      v33 = v7;
      do
      {
        if (*(_QWORD *)v37 != v8)
          objc_enumerationMutation(v4);
        v12 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * v11);
        objc_msgSend(v12, "intent", v32);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (v13)
        {
          v14 = objc_alloc(*(Class *)(v10 + 2472));
          objc_msgSend(v12, "intent");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = objc_msgSend(v14, "initWithIntent:response:", v15, 0);

          v17 = objc_alloc(MEMORY[0x1E0DC7938]);
          objc_msgSend(*(id *)(v9 + 2600), "UUID");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "UUIDString");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = (void *)objc_msgSend(v17, "initWithIdentifier:sourceAppIdentifier:interaction:", v19, v34, v16);
          objc_msgSend(v35, "addObject:", v20);

        }
        else
        {
          objc_msgSend(v12, "userActivity");
          v21 = (void *)objc_claimAutoreleasedReturnValue();

          if (v21)
          {
            v22 = objc_alloc(MEMORY[0x1E0DC7948]);
            objc_msgSend(v12, "userActivity");
            v16 = objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(v9 + 2600), "UUID");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "UUIDString");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = v8;
            v26 = v10;
            v27 = v9;
            v28 = v4;
            v29 = (void *)objc_opt_new();
            v30 = (void *)objc_msgSend(v22, "initWithUserActivity:identifier:sourceAppIdentifier:date:", v16, v24, v34, v29);
            objc_msgSend(v35, "addObject:", v30);

            v4 = v28;
            v9 = v27;
            v10 = v26;
            v8 = v25;
            v7 = v33;

          }
          else
          {
            getWFActionDonationsLogObject();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = v32;
              v41 = "VCActionDonationArrayFromINShortcutArray";
              v42 = 2114;
              v43 = v12;
              _os_log_impl(&dword_1C15B3000, v16, OS_LOG_TYPE_ERROR, "%s Invalid action: %{public}@", buf, 0x16u);
            }
          }
        }

        ++v11;
      }
      while (v7 != v11);
      v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
    }
    while (v7);
  }

  return v35;
}

uint64_t (*initSPGetDisabledAppSet())()
{
  uint64_t (*v0)();

  if (SearchLibrary_sOnce != -1)
    dispatch_once(&SearchLibrary_sOnce, &__block_literal_global_268);
  v0 = (uint64_t (*)())dlsym((void *)SearchLibrary_sLib, "SPGetDisabledAppSet");
  softLinkSPGetDisabledAppSet = v0;
  if (v0)
  {
    v0();
    v0 = (uint64_t (*)())objc_claimAutoreleasedReturnValue();
  }
  return v0;
}

void WFTransformValueForParameterDescription(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id *v16;
  id *v17;
  _QWORD v18[4];
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  void *v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = objc_msgSend(v6, "wf_objectClass");
  if (!v8)
  {
    (*((void (**)(id, _QWORD, _QWORD))v7 + 2))(v7, 0, 0);
    goto LABEL_20;
  }
  v9 = v8;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v10 = v5;
    goto LABEL_15;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v11 = (void *)MEMORY[0x1E0D13EA8];
    v25[0] = v5;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 1);
    v12 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        objc_msgSend(MEMORY[0x1E0D13EC0], "itemWithFile:", v5);
      else
        objc_msgSend(MEMORY[0x1E0D13EC0], "itemWithObject:", v5);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = (void *)MEMORY[0x1E0D13EA8];
      v24 = v13;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v24, 1);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "collectionWithItems:", v15);
      v10 = (id)objc_claimAutoreleasedReturnValue();

      goto LABEL_14;
    }
    v11 = (void *)MEMORY[0x1E0D13EA8];
    objc_msgSend(v5, "if_compactMap:", &__block_literal_global_4815);
    v12 = objc_claimAutoreleasedReturnValue();
  }
  v13 = (void *)v12;
  objc_msgSend(v11, "collectionWithItems:", v12);
  v10 = (id)objc_claimAutoreleasedReturnValue();
LABEL_14:

LABEL_15:
  if ((objc_msgSend(v6, "wf_multipleValues") & 1) != 0
    || !objc_msgSend((id)objc_msgSend(v6, "wf_objectClass"), "isEqual:", objc_opt_class()))
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __WFTransformValueForParameterDescription_block_invoke_3;
    v18[3] = &unk_1E7AF3258;
    v16 = &v19;
    v19 = v6;
    v17 = &v20;
    v20 = v7;
    objc_msgSend(v10, "getObjectRepresentations:forClass:", v18, v9);
  }
  else
  {
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __WFTransformValueForParameterDescription_block_invoke_2;
    v21[3] = &unk_1E7AF0C60;
    v16 = &v23;
    v23 = v7;
    v17 = &v22;
    v22 = v6;
    objc_msgSend(v10, "getObjectRepresentation:forClass:", v21, v9);
  }

LABEL_20:
}

id WFTransformObjectRepresentationToFacadeObject(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = v3;
  }
  else if (objc_msgSend(a2, "isEqual:", objc_opt_class()))
  {
    v4 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CBDC00]), "initWithSpokenPhrase:", v3);
  }
  else
  {
    if (!objc_msgSend(a2, "isEqual:", objc_opt_class()))
    {
      v5 = 0;
      goto LABEL_8;
    }
    v4 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CBD860]), "initWithStartDateComponents:endDateComponents:", v3, 0);
  }
  v5 = v4;
LABEL_8:

  return v5;
}

id WFAddSpacesToCamelCaseName(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  void *v4;
  unint64_t i;
  id v6;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = (void *)objc_msgSend(v1, "mutableCopy");
    v3 = objc_msgSend(v1, "length");
    objc_msgSend(MEMORY[0x1E0CB3500], "uppercaseLetterCharacterSet");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3 >= 2)
    {
      for (i = 1; i < v3; ++i)
      {
        if (objc_msgSend(v4, "characterIsMember:", objc_msgSend(v2, "characterAtIndex:", i)))
          objc_msgSend(v2, "insertString:atIndex:", CFSTR(" "), i++);
      }
    }
    v6 = (id)objc_msgSend(v2, "copy");

  }
  else
  {
    v6 = v1;
  }

  return v6;
}

id WFCapitalizeFirstLetter(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    objc_msgSend(v1, "substringToIndex:", 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "capitalizedString");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v1, "stringByReplacingCharactersInRange:withString:", 0, 1, v3);
    v4 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v4 = v1;
  }

  return v4;
}

uint64_t WFREPBRunRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v23;

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C18FE4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C18FE730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5033(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5034(uint64_t a1)
{

}

void WFConfigureIntentBasedParameterResources(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  objc_msgSend(v3, "resourceObjectsOfClass:", objc_opt_class(), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v11;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v9++), "setupWithAction:", v4);
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v7);
  }

}

BOOL WFExecutionContextSupportsLooping(uint64_t a1)
{
  return a1 == 9 || (unint64_t)(a1 - 1) < 2;
}

uint64_t WFREPBAlertButtonReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v24;

      }
      else if ((_DWORD)v17 == 2)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            break;
          v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0)
            goto LABEL_43;
          v26 += 7;
          v14 = v27++ >= 9;
          if (v14)
          {
            LODWORD(v28) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_45:
        *(_DWORD *)(a1 + 8) = v28;
      }
      else if ((_DWORD)v17 == 3)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_39;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_41:
        *(_BYTE *)(a1 + 24) = v20 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

const __CFString *NSStringFromSyncEventType(int a1)
{
  if ((a1 - 1) > 0xA)
    return CFSTR("RecordFetch");
  else
    return off_1E7AEBCF0[a1 - 1];
}

void sub_1C19065A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19066F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19068F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1906A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1906F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5997(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5998(uint64_t a1)
{

}

id WFPossibleMobileDocumentsFileProviderDomainIDs()
{
  if (WFPossibleMobileDocumentsFileProviderDomainIDs_onceToken != -1)
    dispatch_once(&WFPossibleMobileDocumentsFileProviderDomainIDs_onceToken, &__block_literal_global_6008);
  return (id)WFPossibleMobileDocumentsFileProviderDomainIDs_possibleDomainIDs;
}

uint64_t WFPBContextualActionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_23;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_23:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 3u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_41;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_41:
          *(_BYTE *)(a1 + 32) = v23 != 0;
          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v30 = *v3;
        v31 = *(_QWORD *)(a2 + v30);
        if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          break;
        v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
        *(_QWORD *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
          goto LABEL_43;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_45:
      *(_DWORD *)(a1 + 8) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFREPBSingleActionExecutionReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  WFREPBVariable *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
        goto LABEL_29;
      case 2u:
        v19 = objc_alloc_init(WFREPBVariable);
        objc_msgSend(a1, "addVariables:", v19);
        if (!PBReaderPlaceMark() || !WFREPBVariableReadFrom(v19, a2))
          goto LABEL_37;
        goto LABEL_32;
      case 3u:
        v19 = objc_alloc_init(WFREPBKeyValuePair);
        objc_msgSend(a1, "addProcessedParameters:", v19);
        if (!PBReaderPlaceMark() || !WFREPBKeyValuePairReadFrom((uint64_t)v19, a2))
          goto LABEL_37;
        goto LABEL_32;
      case 4u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
LABEL_29:
        v19 = *(WFREPBVariable **)&a1[v18];
        *(_QWORD *)&a1[v18] = v17;
        goto LABEL_33;
      case 5u:
        v19 = objc_alloc_init(WFREPBContentItem);
        objc_msgSend(a1, "addInput:", v19);
        if (PBReaderPlaceMark() && (WFREPBContentItemReadFrom((uint64_t)v19, a2) & 1) != 0)
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_37:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_34;
    }
  }
}

void sub_1C190DFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1C1913A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6937(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6938(uint64_t a1)
{

}

void sub_1C1916AA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id WFBackgroundShortcutRunnerLockFileURL()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0D140A0], "sharedAppGroupDirectoryURL");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "URLByAppendingPathComponent:", CFSTR("Library/Caches/BackgroundShortcutRunner.lock"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

void sub_1C1918C08(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id WFInputActionContentItemClassCorrespondingToAskForParameterValue(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Files")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Text")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Date")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Photos")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Contacts")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Email Address")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("Music")) & 1) != 0
    || objc_msgSend(v1, "isEqualToString:", CFSTR("Phone Number")))
  {
    objc_opt_class();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id WFInputActionParameterKeysForSelectingItemOfClass(objc_class *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if (!a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSSet<NSString *> * _Nonnull WFInputActionParameterKeysForSelectingItemOfClass(Class  _Nonnull __unsafe_unretained)");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("WFInputAction.m"), 230, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("contentItemClass"));

  }
  v16 = (void *)objc_opt_new();
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  WFContentSelectionActionParameterDefinitions();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        objc_msgSend(v7, "objectForKey:", CFSTR("WFInputActionParameterContentSelectionItemClass"));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (v8)
        {
          NSStringFromClass(a1);
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v10 = objc_msgSend(v8, "isEqualToString:", v9);

          if (v10)
          {
            objc_msgSend(v7, "objectForKey:", CFSTR("Key"));
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v16, "addObject:", v11);

          }
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v4);
  }

  v12 = (void *)objc_msgSend(v16, "copy");
  return v12;
}

id WFContentSelectionActionParameterDefinitions()
{
  if (WFContentSelectionActionParameterDefinitions_onceToken != -1)
    dispatch_once(&WFContentSelectionActionParameterDefinitions_onceToken, &__block_literal_global_207);
  return (id)WFContentSelectionActionParameterDefinitions_parameterDefinitions;
}

id WFSerializedResource(void *a1)
{
  id v1;
  void *v2;
  objc_class *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v8;
  void *v9;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary * _Nonnull WFSerializedResource(WFResource * _Nonnull __strong)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("WFInputAction.m"), 114, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("resource"));

  }
  objc_msgSend(v1, "definition");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = CFSTR("WFResourceClass");
  v3 = (objc_class *)objc_opt_class();
  NSStringFromClass(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "if_dictionaryByAddingEntriesFromDictionary:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1C19204C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1C1927F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(location);
  objc_destroyWeak(&a27);
  _Unwind_Resume(a1);
}

void sub_1C1928408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7848(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7849(uint64_t a1)
{

}

void WFMCIsAppAccountBasedSourceForOpenIn(void *a1)
{
  id v1;
  void (*v2)(id);
  void *v3;
  void *v4;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v1 = a1;
  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = (void (*)(id))getMCIsAppAccountBasedSourceForOpenInSymbolLoc_ptr;
  v9 = getMCIsAppAccountBasedSourceForOpenInSymbolLoc_ptr;
  if (!getMCIsAppAccountBasedSourceForOpenInSymbolLoc_ptr)
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __getMCIsAppAccountBasedSourceForOpenInSymbolLoc_block_invoke;
    v5[3] = &unk_1E7AF9520;
    v5[4] = &v6;
    __getMCIsAppAccountBasedSourceForOpenInSymbolLoc_block_invoke(v5);
    v2 = (void (*)(id))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    v2(v1);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFMCIsAppAccountBasedSourceForOpenIn(NSString *__strong)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFAction.m"), 66, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C1928F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getMCIsAppAccountBasedSourceForOpenInSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)ManagedConfigurationLibraryCore_frameworkLibrary;
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ManagedConfigurationLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFAction.m"), 65, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "MCIsAppAccountBasedSourceForOpenIn");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getMCIsAppAccountBasedSourceForOpenInSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1C192C818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WFVariableNameForActionOutputUUID(void *a1, const char *a2)
{
  return objc_msgSend(a1, "stringByAppendingString:", CFSTR("-output"));
}

id WFPreferredVariableNameForVariable(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v1, "outputUUID");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringByAppendingString:", CFSTR("-output"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v1, "name");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v3 = 0;
    }
  }

  return v3;
}

void sub_1C192DEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8820(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8821(uint64_t a1)
{

}

void sub_1C1931AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8855(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8856(uint64_t a1)
{

}

void WFInsertIdentifierForKey(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v8, "objectForKey:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    v7 = (void *)objc_opt_new();
    objc_msgSend(v8, "setObject:forKey:", v7, v5);
  }
  objc_msgSend(v7, "addObject:", v6);

}

uint64_t WFPBSetupGalleryShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_25:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 5u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_34;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          v23 = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_36:
      *(_BYTE *)(a1 + 40) = v23 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1935BA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9378(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9379(uint64_t a1)
{

}

BOOL WFPBRemoteExecutionErrorEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_24;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_24;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_24;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_24;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_24:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_25:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFFileLocationClassByType()
{
  _QWORD v1[9];
  _QWORD v2[10];

  v2[9] = *MEMORY[0x1E0C80C00];
  v1[0] = CFSTR("FileProvider");
  v2[0] = objc_opt_class();
  v1[1] = CFSTR("Desktop");
  v2[1] = objc_opt_class();
  v1[2] = CFSTR("Documents");
  v2[2] = objc_opt_class();
  v1[3] = CFSTR("Downloads");
  v2[3] = objc_opt_class();
  v1[4] = CFSTR("Shortcuts");
  v2[4] = objc_opt_class();
  v1[5] = CFSTR("iCloud");
  v2[5] = objc_opt_class();
  v1[6] = CFSTR("LocalStorage");
  v2[6] = objc_opt_class();
  v1[7] = CFSTR("Home");
  v2[7] = objc_opt_class();
  v1[8] = CFSTR("Absolute");
  v2[8] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v2, v1, 9);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1C19376C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C193783C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1937FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9647(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9648(uint64_t a1)
{

}

BOOL WFREPBRepeatedKeyValuePairReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (void *)a1[1];
        a1[1] = v17;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_25:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
      objc_msgSend(a1, "addValue:", v18);
    goto LABEL_23;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id getWFWFScreenOnObserverLogObject()
{
  if (getWFWFScreenOnObserverLogObject_onceToken != -1)
    dispatch_once(&getWFWFScreenOnObserverLogObject_onceToken, &__block_literal_global_9931);
  return (id)getWFWFScreenOnObserverLogObject_log;
}

void __getWFWFScreenOnObserverLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "WFScreenOnObserver");
  v1 = (void *)getWFWFScreenOnObserverLogObject_log;
  getWFWFScreenOnObserverLogObject_log = (uint64_t)v0;

}

_BYTE *mtl_copyPropertyAttributes(objc_property *a1)
{
  const char *Attributes;
  const char *v3;
  _BYTE *v4;
  const char *v5;
  char *v6;
  size_t v7;
  _BYTE *v8;
  _BYTE *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  size_t v24;
  uint64_t v25;
  char *v26;
  SEL v27;
  FILE *v28;
  const char *v29;
  FILE *v30;
  const char *v31;
  FILE *v32;
  FILE *v33;
  FILE *v34;
  FILE *v35;
  FILE *v36;
  const char *Name;
  const char *v38;
  const char *v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  FILE *v45;
  FILE *v47;
  FILE *v48;
  _QWORD v49[2];

  v49[1] = *MEMORY[0x1E0C80C00];
  Attributes = property_getAttributes(a1);
  if (!Attributes)
  {
    v32 = (FILE *)*MEMORY[0x1E0C80C10];
    property_getName(a1);
    fprintf(v32, "ERROR: Could not get attribute string from property %s\n");
    return 0;
  }
  v3 = Attributes;
  if (*Attributes != 84)
  {
    v33 = (FILE *)*MEMORY[0x1E0C80C10];
    property_getName(a1);
    fprintf(v33, "ERROR: Expected attribute string \"%s\" for property %s to start with 'T'\n");
    return 0;
  }
  v4 = Attributes + 1;
  v5 = NSGetSizeAndAlignment(Attributes + 1, 0, 0);
  if (!v5)
  {
    v34 = (FILE *)*MEMORY[0x1E0C80C10];
    property_getName(a1);
    fprintf(v34, "ERROR: Could not read past type in attribute string \"%s\" for property %s\n");
    return 0;
  }
  v6 = (char *)v5;
  v7 = v5 - v4;
  if (v5 == v4)
  {
    v35 = (FILE *)*MEMORY[0x1E0C80C10];
    property_getName(a1);
    fprintf(v35, "ERROR: Invalid type in attribute string \"%s\" for property %s\n");
    return 0;
  }
  v8 = malloc_type_calloc(1uLL, v7 + 49, 0xE6063BE9uLL);
  if (!v8)
  {
    v45 = (FILE *)*MEMORY[0x1E0C80C10];
    property_getName(a1);
    fprintf(v45, "ERROR: Could not allocate mtl_propertyAttributes structure for attribute string \"%s\" for property %s\n");
    return 0;
  }
  v9 = v8;
  strncpy(v8 + 48, v3 + 1, v7)[v7] = 0;
  if (*v4 == 64 && v3[2] == 34)
  {
    v6 = (char *)(v3 + 3);
    v10 = strchr((char *)v3 + 3, 34);
    if (!v10)
    {
      v47 = (FILE *)*MEMORY[0x1E0C80C10];
      property_getName(a1);
      fprintf(v47, "ERROR: Could not read class name in attribute string \"%s\" for property %s\n");
      goto LABEL_56;
    }
    v14 = v10;
    if (v6 != v10)
    {
      v15 = v10 - v6;
      MEMORY[0x1E0C80A78](v10, v11, v12, v13);
      v17 = strncpy((char *)v49 - v16, v3 + 3, v14 - v6);
      v17[v15] = 0;
      *((_QWORD *)v9 + 5) = objc_getClass(v17);
      v6 = v14;
    }
  }
  if (*v6)
  {
    v6 = strchr(v6, 44);
    if (!v6)
      goto LABEL_47;
  }
  while (1)
  {
LABEL_13:
    if (*v6 != 44)
    {
      if (*v6)
      {
        v36 = (FILE *)*MEMORY[0x1E0C80C10];
        Name = property_getName(a1);
        fprintf(v36, "Warning: Unparsed data \"%s\" in attribute string \"%s\" for property %s\n", v6, v3, Name);
      }
LABEL_47:
      if (!*((_QWORD *)v9 + 2))
      {
        v38 = property_getName(a1);
        *((_QWORD *)v9 + 2) = sel_registerName(v38);
      }
      if (!*((_QWORD *)v9 + 3))
      {
        v39 = property_getName(a1);
        v40 = strlen(v39);
        v44 = (char *)v49 - ((MEMORY[0x1E0C80A78](v40, v41, v42, v43) + 20) & 0xFFFFFFFFFFFFFFF0);
        v44[2] = 116;
        *(_WORD *)v44 = 25971;
        strncpy(v44 + 3, v39, v40);
        v44[3] = __toupper(v44[3]);
        *(_WORD *)&v44[v40 + 3] = 58;
        *((_QWORD *)v9 + 3) = sel_registerName(v44);
      }
      return v9;
    }
    v18 = v6[1];
    v6 += 2;
    if ((int)v18 > 66)
      break;
    if ((_DWORD)v18)
    {
      if ((_DWORD)v18 == 38)
      {
        *((_DWORD *)v9 + 2) = 1;
      }
      else
      {
LABEL_27:
        v30 = (FILE *)*MEMORY[0x1E0C80C10];
        v31 = property_getName(a1);
        fprintf(v30, "ERROR: Unrecognized attribute string flag '%c' in attribute string \"%s\" for property %s\n", v18, v3, v31);
      }
    }
  }
  switch((int)v18)
  {
    case 'C':
      *((_DWORD *)v9 + 2) = 2;
      goto LABEL_13;
    case 'D':
      v9[4] = 1;
      goto LABEL_35;
    case 'E':
    case 'F':
    case 'H':
    case 'I':
    case 'J':
    case 'K':
    case 'L':
    case 'M':
    case 'O':
    case 'Q':
    case 'T':
    case 'U':
      goto LABEL_27;
    case 'G':
    case 'S':
      v19 = strchr(v6, 44);
      if (!v19)
      {
        v27 = sel_registerName(v6);
        v6 = "";
        goto LABEL_38;
      }
      v23 = v19;
      v24 = v19 - v6;
      if (v19 != v6)
      {
        MEMORY[0x1E0C80A78](v19, v20, v21, v22);
        v26 = strncpy((char *)v49 - v25, v6, v24);
        v26[v24] = 0;
        v27 = sel_registerName(v26);
        v6 = v23;
LABEL_38:
        if ((_DWORD)v18 == 71)
          *((_QWORD *)v9 + 2) = v27;
        else
          *((_QWORD *)v9 + 3) = v27;
        goto LABEL_13;
      }
      v48 = (FILE *)*MEMORY[0x1E0C80C10];
      property_getName(a1);
      fprintf(v48, "ERROR: Found zero length selector name in attribute string \"%s\" for property %s\n");
LABEL_56:
      free(v9);
      return 0;
    case 'N':
      v9[1] = 1;
      goto LABEL_13;
    case 'P':
      v9[3] = 1;
      goto LABEL_13;
    case 'R':
      *v9 = 1;
      goto LABEL_13;
    case 'V':
      if (*v6)
      {
        *((_QWORD *)v9 + 4) = v6;
        v6 = "";
      }
      else
      {
LABEL_35:
        *((_QWORD *)v9 + 4) = 0;
      }
      goto LABEL_13;
    case 'W':
      v9[2] = 1;
      goto LABEL_13;
    default:
      if ((_DWORD)v18 != 116)
        goto LABEL_27;
      v28 = (FILE *)*MEMORY[0x1E0C80C10];
      v29 = property_getName(a1);
      fprintf(v28, "ERROR: Old-style type encoding is unsupported in attribute string \"%s\" for property %s\n", v3, v29);
      while (*v6 && *v6 != 44)
        ++v6;
      goto LABEL_13;
  }
}

BOOL WFPBSuspendShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 8;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C193E8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAXSDSettingsClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAXSDSettingsClass_softClass;
  v7 = getAXSDSettingsClass_softClass;
  if (!getAXSDSettingsClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAXSDSettingsClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getAXSDSettingsClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C193E99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getAXSDSettingsClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AXSoundDetectionLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AXSDSettings");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAXSDSettingsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAXSDSettingsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFAXSDSettings.m"), 19, CFSTR("Unable to find class %s"), "AXSDSettings");

    __break(1u);
  }
}

void *AXSoundDetectionLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AXSoundDetectionLibraryCore_frameworkLibrary)
    AXSoundDetectionLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)AXSoundDetectionLibraryCore_frameworkLibrary;
  if (!AXSoundDetectionLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AXSoundDetectionLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFAXSDSettings.m"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void getAXSDSoundDetectionTypeApplianceBeeps()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getAXSDSoundDetectionTypeApplianceBeepsSymbolLoc_ptr;
  v8 = getAXSDSoundDetectionTypeApplianceBeepsSymbolLoc_ptr;
  if (!getAXSDSoundDetectionTypeApplianceBeepsSymbolLoc_ptr)
  {
    v1 = AXSoundDetectionLibrary();
    v0 = (id *)dlsym(v1, "AXSDSoundDetectionTypeApplianceBeeps");
    v6[3] = (uint64_t)v0;
    getAXSDSoundDetectionTypeApplianceBeepsSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "AXSDSoundDetectionType getAXSDSoundDetectionTypeApplianceBeeps(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFAXSDSettings.m"), 21, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C193ED24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void soft_bmTypeForSoundDetectionType(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v1 = a1;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = getbmTypeForSoundDetectionTypeSymbolLoc_ptr;
  v11 = getbmTypeForSoundDetectionTypeSymbolLoc_ptr;
  if (!getbmTypeForSoundDetectionTypeSymbolLoc_ptr)
  {
    v3 = AXSoundDetectionLibrary();
    v2 = dlsym(v3, "bmTypeForSoundDetectionType");
    v9[3] = (uint64_t)v2;
    getbmTypeForSoundDetectionTypeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v8, 8);
  if (v2)
  {
    ((void (*)(id))v2)(v1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    v5 = v4;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BMSoundDetectionType soft_bmTypeForSoundDetectionType(__strong AXSDSoundDetectionType)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFAXSDSettings.m"), 25, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C193EE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getAXSDSoundDetectionTypeApplianceBuzzes()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getAXSDSoundDetectionTypeApplianceBuzzesSymbolLoc_ptr;
  v8 = getAXSDSoundDetectionTypeApplianceBuzzesSymbolLoc_ptr;
  if (!getAXSDSoundDetectionTypeApplianceBuzzesSymbolLoc_ptr)
  {
    v1 = AXSoundDetectionLibrary();
    v0 = (id *)dlsym(v1, "AXSDSoundDetectionTypeApplianceBuzzes");
    v6[3] = (uint64_t)v0;
    getAXSDSoundDetectionTypeApplianceBuzzesSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "AXSDSoundDetectionType getAXSDSoundDetectionTypeApplianceBuzzes(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFAXSDSettings.m"), 22, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C193EF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getAXSDSoundDetectionTypeApplianceBellDings()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getAXSDSoundDetectionTypeApplianceBellDingsSymbolLoc_ptr;
  v8 = getAXSDSoundDetectionTypeApplianceBellDingsSymbolLoc_ptr;
  if (!getAXSDSoundDetectionTypeApplianceBellDingsSymbolLoc_ptr)
  {
    v1 = AXSoundDetectionLibrary();
    v0 = (id *)dlsym(v1, "AXSDSoundDetectionTypeApplianceBellDings");
    v6[3] = (uint64_t)v0;
    getAXSDSoundDetectionTypeApplianceBellDingsSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "AXSDSoundDetectionType getAXSDSoundDetectionTypeApplianceBellDings(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFAXSDSettings.m"), 23, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C193F030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WFWorkflowHasActionsWithIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  objc_msgSend(a2, "objectForKey:", CFSTR("WFWorkflowActions"));
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v14;
    while (2)
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v14 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v8), "objectForKeyedSubscript:", CFSTR("WFWorkflowActionIdentifier"), (_QWORD)v13);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isEqualToString:", v3);

        if ((v10 & 1) != 0)
        {
          v11 = 1;
          goto LABEL_11;
        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v6)
        continue;
      break;
    }
  }
  v11 = 0;
LABEL_11:

  return v11;
}

id WFCLLocationManagerWithOptions(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  const __CFString *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD *v13;

  v5 = a2;
  v6 = a3;
  if (a1 == 3)
  {
    v7 = objc_alloc((Class)getCLLocationManagerClass());
    v8 = (void *)MEMORY[0x1E0CB34D0];
    v9 = CFSTR("/System/Library/PrivateFrameworks/AssistantServices.framework");
    goto LABEL_6;
  }
  if (a1 == 2)
  {
    v12 = objc_alloc((Class)getCLLocationManagerClass());
    v13 = (_QWORD *)MEMORY[0x1E0DC7EC8];
LABEL_9:
    v11 = (void *)objc_msgSend(v12, "initWithEffectiveBundleIdentifier:delegate:onQueue:", *v13, v5, v6);
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    v12 = objc_alloc((Class)getCLLocationManagerClass());
    v13 = (_QWORD *)MEMORY[0x1E0DC7FD8];
    goto LABEL_9;
  }
  v7 = objc_alloc((Class)getCLLocationManagerClass());
  v8 = (void *)MEMORY[0x1E0CB34D0];
  v9 = CFSTR("/System/Library/PrivateFrameworks/HomeKitDaemon.framework");
LABEL_6:
  objc_msgSend(v8, "bundleWithPath:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v7, "initWithEffectiveBundle:delegate:onQueue:", v10, v5, v6);

LABEL_10:
  return v11;
}

id getCLLocationManagerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCLLocationManagerClass_softClass;
  v7 = getCLLocationManagerClass_softClass;
  if (!getCLLocationManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCLLocationManagerClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getCLLocationManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C193F87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLLocationManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary)
    CoreLocationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("CLLocationManager+Workflow.m"), 16, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLLocationManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLLocationManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("CLLocationManager+Workflow.m"), 17, CFSTR("Unable to find class %s"), "CLLocationManager");

LABEL_8:
    __break(1u);
  }
  getCLLocationManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t WFCLLocationManagerAuthorizationStatusForWorkflowEnvironment(uint64_t a1)
{
  id CLLocationManagerClass;
  void *v2;
  const __CFString *v3;
  void *v4;
  uint64_t v5;
  id v7;
  _QWORD *v8;

  switch(a1)
  {
    case 3:
      CLLocationManagerClass = getCLLocationManagerClass();
      v2 = (void *)MEMORY[0x1E0CB34D0];
      v3 = CFSTR("/System/Library/PrivateFrameworks/AssistantServices.framework");
      goto LABEL_6;
    case 2:
      v7 = getCLLocationManagerClass();
      v8 = (_QWORD *)MEMORY[0x1E0DC7EC8];
      break;
    case 1:
      CLLocationManagerClass = getCLLocationManagerClass();
      v2 = (void *)MEMORY[0x1E0CB34D0];
      v3 = CFSTR("/System/Library/PrivateFrameworks/HomeKitDaemon.framework");
LABEL_6:
      objc_msgSend(v2, "bundleWithPath:", v3);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(CLLocationManagerClass, "authorizationStatusForBundle:", v4);

      return v5;
    default:
      v7 = getCLLocationManagerClass();
      v8 = (_QWORD *)MEMORY[0x1E0DC7FD8];
      break;
  }
  return objc_msgSend(v7, "authorizationStatusForBundleIdentifier:", *v8);
}

void WFSetEffectiveBundleForMKLocationManager(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  _QWORD *v7;
  id v8;

  v3 = a1;
  v8 = v3;
  if (a2 == 3)
  {
    v4 = (void *)MEMORY[0x1E0CB34D0];
    v5 = CFSTR("/System/Library/PrivateFrameworks/AssistantServices.framework");
    goto LABEL_6;
  }
  if (a2 == 2)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DC7EC8];
LABEL_9:
    objc_msgSend(v3, "setEffectiveBundleIdentifier:", *v7);
    goto LABEL_10;
  }
  if (a2 != 1)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DC7FD8];
    goto LABEL_9;
  }
  v4 = (void *)MEMORY[0x1E0CB34D0];
  v5 = CFSTR("/System/Library/PrivateFrameworks/HomeKitDaemon.framework");
LABEL_6:
  objc_msgSend(v4, "bundleWithPath:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setEffectiveBundle:", v6);

LABEL_10:
}

id WFMetricToImperialUnitMapping()
{
  void *v0;
  void *v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v31[13];
  _QWORD v32[15];

  v32[13] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "countryCode");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("US"));

  if ((v2 & 1) != 0)
    objc_msgSend(MEMORY[0x1E0CB3B08], "pints");
  else
    objc_msgSend(MEMORY[0x1E0CB3B08], "imperialPints");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3AE0], "kilograms");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v30;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "poundsMass");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v32[0] = v29;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "grams");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v28;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "ounces");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v32[1] = v27;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v26;
  objc_msgSend(MEMORY[0x1E0CB3B08], "quarts");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v32[2] = v25;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v24;
  objc_msgSend(MEMORY[0x1E0CB3B08], "cups");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v32[3] = v23;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v22;
  v32[4] = v17;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v21;
  objc_msgSend(MEMORY[0x1E0CB3B08], "gallons");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v32[5] = v20;
  objc_msgSend(MEMORY[0x1E0CB3B08], "milliliters");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v19;
  objc_msgSend(MEMORY[0x1E0CB3B08], "fluidOunces");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v32[6] = v18;
  objc_msgSend(MEMORY[0x1E0CB3AF8], "kilometersPerHour");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v16;
  objc_msgSend(MEMORY[0x1E0CB3AF8], "milesPerHour");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v32[7] = v15;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "kilometers");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v3;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "miles");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v32[8] = v4;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "meters");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v5;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "feet");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v32[9] = v6;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "meters");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v7;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "yards");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v32[10] = v8;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "centimeters");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[11] = v9;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "inches");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v32[11] = v10;
  objc_msgSend(MEMORY[0x1E0CB3B00], "celsius");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v31[12] = v11;
  objc_msgSend(MEMORY[0x1E0CB3B00], "fahrenheit");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v32[12] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v32, v31, 13);
  v14 = (id)objc_claimAutoreleasedReturnValue();

  return v14;
}

id WFImperialToMetricUnitMapping()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[14];
  _QWORD v31[16];

  v31[14] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3AE0], "poundsMass");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v29;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "kilograms");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v28;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "ounces");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v27;
  objc_msgSend(MEMORY[0x1E0CB3AE0], "grams");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v26;
  objc_msgSend(MEMORY[0x1E0CB3B08], "quarts");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v30[2] = v25;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v24;
  objc_msgSend(MEMORY[0x1E0CB3B08], "cups");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v30[3] = v23;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v22;
  objc_msgSend(MEMORY[0x1E0CB3B08], "pints");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v30[4] = v21;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v20;
  objc_msgSend(MEMORY[0x1E0CB3B08], "imperialPints");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v30[5] = v19;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v18;
  objc_msgSend(MEMORY[0x1E0CB3B08], "gallons");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v30[6] = v17;
  objc_msgSend(MEMORY[0x1E0CB3B08], "liters");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v16;
  objc_msgSend(MEMORY[0x1E0CB3B08], "fluidOunces");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v30[7] = v15;
  objc_msgSend(MEMORY[0x1E0CB3B08], "milliliters");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v14;
  objc_msgSend(MEMORY[0x1E0CB3AF8], "milesPerHour");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v30[8] = v13;
  objc_msgSend(MEMORY[0x1E0CB3AF8], "kilometersPerHour");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v12;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "miles");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v30[9] = v0;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "kilometers");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v1;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "feet");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v30[10] = v2;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "meters");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v3;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "yards");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v30[11] = v4;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "meters");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31[11] = v5;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "inches");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v30[12] = v6;
  objc_msgSend(MEMORY[0x1E0CB3AD8], "centimeters");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v31[12] = v7;
  objc_msgSend(MEMORY[0x1E0CB3B00], "fahrenheit");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v30[13] = v8;
  objc_msgSend(MEMORY[0x1E0CB3B00], "celsius");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[13] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 14);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_1C1941244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1C1941450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1941BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29,char a30)
{
  uint64_t v30;

  objc_destroyWeak(location);
  objc_destroyWeak(&a29);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11015(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11016(uint64_t a1)
{

}

id getWFRemoteQuarantineLogObject()
{
  if (getWFRemoteQuarantineLogObject_onceToken != -1)
    dispatch_once(&getWFRemoteQuarantineLogObject_onceToken, &__block_literal_global_11022);
  return (id)getWFRemoteQuarantineLogObject_log;
}

void __getWFRemoteQuarantineLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "RemoteQuarantine");
  v1 = (void *)getWFRemoteQuarantineLogObject_log;
  getWFRemoteQuarantineLogObject_log = (uint64_t)v0;

}

uint64_t WFShouldRequestAccessToFile(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0DC8058]))
  {

    goto LABEL_7;
  }
  if (objc_msgSend(v1, "code") != 10001)
  {
    v3 = objc_msgSend(v1, "code");

    if (v3 == 10003)
      goto LABEL_6;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }

LABEL_6:
  v4 = 1;
LABEL_8:

  return v4;
}

void sub_1C1944330(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C1944468(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C1944518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1944720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v8 - 176), 8);
  _Block_object_dispose((const void *)(v8 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11346(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11347(uint64_t a1)
{

}

uint64_t WFPBCreateFolderEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  void *v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_37;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (v14)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_41;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v21) = 0;
LABEL_41:
          v32 = 16;
          goto LABEL_46;
        case 3u:
          v25 = 0;
          v26 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_37:
          v31 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          break;
        v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
        *(_QWORD *)(a2 + v27) = v28 + 1;
        v21 |= (unint64_t)(v29 & 0x7F) << v25;
        if ((v29 & 0x80) == 0)
          goto LABEL_43;
        v25 += 7;
        v14 = v26++ >= 9;
        if (v14)
        {
          LODWORD(v21) = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v21) = 0;
LABEL_45:
      v32 = 32;
LABEL_46:
      *(_DWORD *)(a1 + v32) = v21;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBRunShortcutErrorEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_34;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_34;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_34;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_34;
        case 6u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          break;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_34;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_34:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_38;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          v22 = 0;
          goto LABEL_40;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
      if (*(_BYTE *)(a2 + *v5))
        v22 = 0;
LABEL_40:
      *(_BYTE *)(a1 + 56) = v22 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

__CFString *WFStringForDialogPresentationMode(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E7AED650[a1];
}

BOOL WFPBShowFocusConfigurationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_25:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_26:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void WFDyldBulkImageLoadCallback()
{
  do
    __ldaxr(WFShouldRediscoverActionDefinitions);
  while (__stlxr(1u, WFShouldRediscoverActionDefinitions));
}

uint64_t WFREPBRunRequestProgressReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v23 = 0;
        }
        *(_QWORD *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v19;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

Class initUIColor()
{
  Class result;

  if (UIKitLibrary_sOnce != -1)
    dispatch_once(&UIKitLibrary_sOnce, &__block_literal_global_12170);
  result = objc_getClass("UIColor");
  classUIColor = (uint64_t)result;
  getUIColorClass = (uint64_t (*)())UIColorFunction;
  return result;
}

Class initUIImageSymbolConfiguration()
{
  Class result;

  if (UIKitLibrary_sOnce != -1)
    dispatch_once(&UIKitLibrary_sOnce, &__block_literal_global_12170);
  result = objc_getClass("UIImageSymbolConfiguration");
  classUIImageSymbolConfiguration = (uint64_t)result;
  getUIImageSymbolConfigurationClass = (uint64_t (*)())UIImageSymbolConfigurationFunction;
  return result;
}

void sub_1C1949ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C194A0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12178(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12179(uint64_t a1)
{

}

void sub_1C194A770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getISIconClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getISIconClass_softClass;
  v7 = getISIconClass_softClass;
  if (!getISIconClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getISIconClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getISIconClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C194AA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageDescriptorClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISImageDescriptor");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISImageDescriptorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISImageDescriptorClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("LNImage+Workflow.m"), 24, CFSTR("Unable to find class %s"), "ISImageDescriptor");

    __break(1u);
  }
}

void *IconServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!IconServicesLibraryCore_frameworkLibrary)
    IconServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)IconServicesLibraryCore_frameworkLibrary;
  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IconServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("LNImage+Workflow.m"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getISIconClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISIcon");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISIconClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISIconClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("LNImage+Workflow.m"), 23, CFSTR("Unable to find class %s"), "ISIcon");

    __break(1u);
  }
}

uint64_t WFWorkflowReferenceType()
{
  return objc_msgSend(MEMORY[0x1E0CEC3F8], "exportedTypeWithIdentifier:", CFSTR("com.apple.shortcuts.workflow-reference"));
}

uint64_t WFRemoteExecuteActionIfApplicable(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  WFRemoteExecutionRunRequest *v19;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id v25;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  if (objc_msgSend(v11, "requiresRemoteExecution"))
  {
    +[WFRemoteExecutionCoordinator sharedCoordinator](WFRemoteExecutionCoordinator, "sharedCoordinator");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "hasPairedDevice");
    if ((_DWORD)v18)
    {
      v19 = -[WFRemoteExecutionRunRequest initWithAction:workflowControllerState:]([WFRemoteExecutionRunRequest alloc], "initWithAction:workflowControllerState:", v11, v12);
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = __WFRemoteExecuteActionIfApplicable_block_invoke;
      v21[3] = &unk_1E7AED8B8;
      v22 = v11;
      v23 = v15;
      v24 = v17;
      v25 = v16;
      objc_msgSend(v24, "sendRunRequest:userInterface:parameterInputProvider:completionHandler:", v19, v13, v14, v21);

    }
  }
  else
  {
    v18 = 0;
  }

  return v18;
}

id WFCoreDataCollectionsWithIdentifiers(void *a1, int a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t j;
  uint64_t v24;
  WFCoreDataCollection *v25;
  BOOL v26;
  void *v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  +[WFCoreDataCollection fetchRequest](WFCoreDataCollection, "fetchRequest");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("identifier"), v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPredicate:", v8);

  objc_msgSend(v7, "setReturnsObjectsAsFaults:", 0);
  v28 = v7;
  v29 = v6;
  objc_msgSend(v6, "executeFetchRequest:error:", v7, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_opt_new();
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v11 = v9;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v35 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
        objc_msgSend(v16, "identifier");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, v17);

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
    }
    while (v13);
  }

  v18 = (void *)objc_opt_new();
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v19 = v5;
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
  if (v20)
  {
    v21 = v20;
    v22 = *(_QWORD *)v31;
    do
    {
      for (j = 0; j != v21; ++j)
      {
        if (*(_QWORD *)v31 != v22)
          objc_enumerationMutation(v19);
        v24 = *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * j);
        objc_msgSend(v10, "objectForKeyedSubscript:", v24);
        v25 = (WFCoreDataCollection *)objc_claimAutoreleasedReturnValue();
        if (v25)
          v26 = 1;
        else
          v26 = a2 == 0;
        if (!v26)
        {
          v25 = -[WFCoreDataCollection initWithContext:]([WFCoreDataCollection alloc], "initWithContext:", v29);
          -[WFCoreDataCollection setIdentifier:](v25, "setIdentifier:", v24);
        }
        if (v25)
          objc_msgSend(v18, "addObject:", v25);

      }
      v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
    }
    while (v21);
  }

  return v18;
}

id WFOrderedSetFromOrderedRelationshipProperty(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v31;
  void *v32;
  void *v33;
  _QWORD v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = a1;
  objc_msgSend(v7, "entity");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "relationshipsByName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectForKey:", v5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSOrderedSet * _Nonnull WFOrderedSetFromOrderedRelationshipProperty(NSManagedObject * _Nonnull __strong, NSString * _Nonnull __strong, NSString * _Nonnull __strong)");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "handleFailureInFunction:file:lineNumber:description:", v32, CFSTR("WFCoreDataWorkflow.m"), 64, CFSTR("Relationship with name %@ does not exist."), v5);

  }
  v11 = (void *)MEMORY[0x1E0C97B48];
  objc_msgSend(v10, "destinationEntity");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "name");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "fetchRequestWithEntityName:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "setResultType:", 2);
  v15 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend(v10, "inverseRelationship");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "name");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "predicateWithFormat:", CFSTR("ANY %K == %@"), v17, v7);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setPredicate:", v18);

  v34[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setPropertiesToFetch:", v19);

  v20 = (void *)MEMORY[0x1E0CB3928];
  objc_msgSend(v10, "inverseRelationship");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "name");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "sortDescriptorWithKey:ascending:", v22, 1);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = v23;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v33, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setSortDescriptors:", v24);

  objc_msgSend(v7, "managedObjectContext");
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v25, "executeFetchRequest:error:", v14, 0);
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  v27 = (void *)MEMORY[0x1E0C99E40];
  if (v26)
  {
    objc_msgSend(v26, "valueForKey:", v6);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "orderedSetWithArray:", v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v29 = (void *)objc_opt_new();
  }

  return v29;
}

uint64_t WFPBShowWidgetConfigurationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_25:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 5u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_34;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          v23 = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_36:
      *(_BYTE *)(a1 + 40) = v23 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFREPBStopRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFPBBrowseGalleryCategoryEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1959698(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(void))(v1 + 16))();
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13582(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13583(uint64_t a1)
{

}

void sub_1C1959830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFMigrateContactFieldValueParameterValue(void *a1, unsigned int a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "objectForKey:", CFSTR("Value"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", CFSTR("WFContactFieldValues"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v13 = v3;
    v14 = v2;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v4 = v3;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v17;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v17 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * v8);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v9, "objectForKey:", CFSTR("WFContactProperty"));
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            v11 = objc_msgSend(v10, "isEqual:", &unk_1E7B8B260);

            if (v11)
            {
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", a2);
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v9, "setObject:forKey:", v12, CFSTR("WFContactProperty"));

              objc_msgSend(v9, "setObject:forKey:", &unk_1E7B8B278, CFSTR("WFContactMultivalue"));
            }
          }
          ++v8;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v6);
    }

    v3 = v13;
    v2 = v14;
  }

}

BOOL WFREPBAceCommandRequestResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WFREPBError *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
LABEL_26:
        v20 = *(WFREPBError **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_29:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v20 = objc_alloc_init(WFREPBError);
    objc_storeStrong((id *)(a1 + 16), v20);
    if (!PBReaderPlaceMark() || (WFREPBErrorReadFrom((uint64_t)v20, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_27;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFContactPropertySetFromContactFieldProperties(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(a1, "if_compactMap:", &__block_literal_global_13982);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setWithArray:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void WFAddEntriesToDictionary(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  WFParameterDefinition *v9;
  WFParameterDefinition *v10;
  id v11;

  v11 = a3;
  v5 = a2;
  v6 = a1;
  objc_msgSend(v6, "objectForKeyedSubscript:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "definitionByAddingEntriesInDictionary:", v11);
    v9 = (WFParameterDefinition *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v9 = -[WFParameterDefinition initWithDictionary:]([WFParameterDefinition alloc], "initWithDictionary:", v11);
  }
  v10 = v9;
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v9, v5);

}

void sub_1C19631E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C19650C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14524(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14525(uint64_t a1)
{

}

id UIApplicationDidBecomeActiveNotificationFunction()
{
  return (id)constantUIApplicationDidBecomeActiveNotification;
}

id initUIApplicationDidBecomeActiveNotification()
{
  id *v0;

  if (UIKitLibrary_sOnce_14528 != -1)
    dispatch_once(&UIKitLibrary_sOnce_14528, &__block_literal_global_14529);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_14530, "UIApplicationDidBecomeActiveNotification");
  if (!v0)
    __assert_rtn("initUIApplicationDidBecomeActiveNotification", "ICAppRegistry.m", 24, "constant");
  objc_storeStrong((id *)&constantUIApplicationDidBecomeActiveNotification, *v0);
  getUIApplicationDidBecomeActiveNotification = (uint64_t (*)())UIApplicationDidBecomeActiveNotificationFunction;
  return (id)constantUIApplicationDidBecomeActiveNotification;
}

void sub_1C1969C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFPSandboxingURLWrapperClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!FileProviderLibraryCore_frameworkLibrary)
    FileProviderLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFFileValue.m"), 27, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("FPSandboxingURLWrapper");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFPSandboxingURLWrapperClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFFileValue.m"), 28, CFSTR("Unable to find class %s"), "FPSandboxingURLWrapper");

LABEL_8:
    __break(1u);
  }
  getFPSandboxingURLWrapperClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFNewOutputTraversalContext()
{
  return (id)objc_opt_new();
}

BOOL WFPBRenameShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFDisplayNameForDeviceIdiom(uint64_t a1, void *a2)
{
  id v3;
  __CFString *v4;
  int v5;
  const __CFString *v6;
  void *v7;

  v3 = a2;
  v4 = CFSTR("Mac");
  switch(a1)
  {
    case 0:
    case 4:
      v5 = objc_msgSend(v3, "isEqualToString:", CFSTR("NotAvailableOnSpecifiedPlatform"));
      v6 = CFSTR("iPod touch");
      if (a1 != 4)
        v6 = CFSTR("iPhone or iPod touch");
      if (!a1)
        v6 = CFSTR("iPhone");
      if (v5)
        v4 = (__CFString *)v6;
      else
        v4 = CFSTR("iPhone or iPod touch");
      goto LABEL_13;
    case 1:
      v4 = CFSTR("iPad");
      goto LABEL_13;
    case 2:
      goto LABEL_13;
    case 3:
      v4 = CFSTR("Apple Watch");
      goto LABEL_13;
    case 5:
      v4 = CFSTR("Apple Vision Pro");
LABEL_13:
      WFLocalizedString(v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      v7 = 0;
      break;
  }

  return v7;
}

uint64_t __Block_byref_object_copy__16117(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16118(uint64_t a1)
{

}

void sub_1C196F060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  _Block_object_dispose(&a52, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16206(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16207(uint64_t a1)
{

}

void sub_1C196FEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id WFContentLocationByAccessResourceIdentifier()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  _QWORD v32[30];
  _QWORD v33[32];

  v33[30] = *MEMORY[0x1E0C80C00];
  v32[0] = CFSTR("WFAddToReadingListAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F40]);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v31;
  v32[1] = CFSTR("WFAppleMusicAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F00]);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v33[1] = v30;
  v32[2] = CFSTR("WFCameraAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7E98]);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v33[2] = v29;
  v32[3] = CFSTR("WFCalendarAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7E90]);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v33[3] = v28;
  v32[4] = CFSTR("WFContactAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EA0]);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v33[4] = v27;
  v32[5] = CFSTR("WFEvernoteAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "evernoteLocation");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v33[5] = v26;
  v32[6] = CFSTR("WFHealthKitAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EC0]);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v33[6] = v25;
  v32[7] = CFSTR("WFHomeKitAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EC8]);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v33[7] = v24;
  v32[8] = CFSTR("WFiCloudDriveAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EB0]);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v33[8] = v23;
  v32[9] = CFSTR("WFImgurAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "imgurLocation");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v33[9] = v22;
  v32[10] = CFSTR("WFInstapaperAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "instapaperLocation");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v33[10] = v21;
  v32[11] = CFSTR("WFLocalNotificationAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "notificationLocation");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v33[11] = v20;
  v32[12] = CFSTR("WFLocationAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "locationLocation");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v33[12] = v19;
  v32[13] = CFSTR("WFMessagesAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EE8]);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v33[13] = v18;
  v32[14] = CFSTR("WFMicrophoneAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "microphoneLocation");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v33[14] = v17;
  v32[15] = CFSTR("WFPhotoAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F20]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v33[15] = v16;
  v32[16] = CFSTR("WFPinboardAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "pinboardLocation");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v33[16] = v15;
  v32[17] = CFSTR("WFPocketAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "pocketLocation");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v33[17] = v14;
  v32[18] = CFSTR("WFPodcastsAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F28]);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v33[18] = v13;
  v32[19] = CFSTR("WFReminderAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F38]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v33[19] = v12;
  v32[20] = CFSTR("WFRequestPaymentAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7FC8]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v33[20] = v0;
  v32[21] = CFSTR("WFRunShortcutsAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "shortcutsAppLocation");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v33[21] = v1;
  v32[22] = CFSTR("WFScreenshotAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "screenshotLocation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v33[22] = v2;
  v32[23] = CFSTR("WFSendEmailAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7ED0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v33[23] = v3;
  v32[24] = CFSTR("WFShortcutsAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:promptingBehaviour:", *MEMORY[0x1E0DC7FD8], 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v33[24] = v4;
  v32[25] = CFSTR("WFSpeechRecognitionAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "speechRecognitionLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v33[25] = v5;
  v32[26] = CFSTR("WFStartCallAccessResource");
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EF0]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v33[26] = v6;
  v32[27] = CFSTR("WFTrelloAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "trelloLocation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v33[27] = v7;
  v32[28] = CFSTR("WFTumblrAccessResource");
  objc_msgSend(MEMORY[0x1E0D140C0], "tumblrLocation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v33[28] = v8;
  v32[29] = CFSTR("WFWallpaperModificationAccessResource");
  objc_msgSend(MEMORY[0x1E0D13EE0], "wallpaperLocation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v33[29] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, v32, 30);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  return v11;
}

id WFContentLocationToActionIdentifierMapping()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[28];
  _QWORD v31[30];

  v31[28] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7E90]);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v29;
  v31[0] = &unk_1E7B8D5B0;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EA0]);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v28;
  v31[1] = &unk_1E7B8D5C8;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EC0]);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v30[2] = v27;
  v31[2] = &unk_1E7B8D5E0;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EC8]);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v30[3] = v26;
  v31[3] = &unk_1E7B8D5F8;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7ED0]);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v30[4] = v25;
  v31[4] = &unk_1E7B8D610;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EE8]);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v30[5] = v24;
  v31[5] = &unk_1E7B8D628;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7EF0]);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v30[6] = v23;
  v31[6] = &unk_1E7B8D640;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F00]);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v30[7] = v22;
  v31[7] = &unk_1E7B8D658;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F18]);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v30[8] = v21;
  v31[8] = &unk_1E7B8D670;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F20]);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v30[9] = v20;
  v31[9] = &unk_1E7B8D688;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F28]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v30[10] = v19;
  v31[10] = &unk_1E7B8D6A0;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F38]);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v30[11] = v18;
  v31[11] = &unk_1E7B8D6B8;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7F40]);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v30[12] = v17;
  v31[12] = &unk_1E7B8D6D0;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:", *MEMORY[0x1E0DC7FC8]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v30[13] = v16;
  v31[13] = &unk_1E7B8D6E8;
  objc_msgSend(MEMORY[0x1E0D140C0], "evernoteLocation");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v30[14] = v15;
  v31[14] = &unk_1E7B8D700;
  objc_msgSend(MEMORY[0x1E0D140C0], "imgurLocation");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v30[15] = v14;
  v31[15] = &unk_1E7B8D718;
  objc_msgSend(MEMORY[0x1E0D140C0], "instapaperLocation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v30[16] = v13;
  v31[16] = &unk_1E7B8D730;
  objc_msgSend(MEMORY[0x1E0D13EE0], "notificationLocation");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v30[17] = v12;
  v31[17] = &unk_1E7B8D748;
  objc_msgSend(MEMORY[0x1E0D13EE0], "locationLocation");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v30[18] = v0;
  v31[18] = &unk_1E7B8D760;
  objc_msgSend(MEMORY[0x1E0D13EE0], "microphoneLocation");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v30[19] = v1;
  v31[19] = &unk_1E7B8D778;
  objc_msgSend(MEMORY[0x1E0D140C0], "pinboardLocation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v30[20] = v2;
  v31[20] = &unk_1E7B8D790;
  objc_msgSend(MEMORY[0x1E0D140C0], "pocketLocation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v30[21] = v3;
  v31[21] = &unk_1E7B8D7A8;
  objc_msgSend(MEMORY[0x1E0D13E00], "locationWithSystemAppBundleIdentifier:promptingBehaviour:", *MEMORY[0x1E0DC7FD8], 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v30[22] = v4;
  v31[22] = &unk_1E7B8D7C0;
  objc_msgSend(MEMORY[0x1E0D13E00], "screenshotLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v30[23] = v5;
  v31[23] = &unk_1E7B8D7D8;
  objc_msgSend(MEMORY[0x1E0D13EE0], "speechRecognitionLocation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v30[24] = v6;
  v31[24] = &unk_1E7B8D7F0;
  objc_msgSend(MEMORY[0x1E0D140C0], "trelloLocation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v30[25] = v7;
  v31[25] = &unk_1E7B8D808;
  objc_msgSend(MEMORY[0x1E0D140C0], "tumblrLocation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v30[26] = v8;
  v31[26] = &unk_1E7B8D820;
  objc_msgSend(MEMORY[0x1E0D13EE0], "wallpaperLocation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v30[27] = v9;
  v31[27] = &unk_1E7B8D838;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 28);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  return v11;
}

uint64_t WFActionIdentifiersUsingRemoteAccessResources()
{
  return objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", &unk_1E7B8D850);
}

uint64_t WFPBAddShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_32;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_32;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_32;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
LABEL_32:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_34;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_36:
      *(_DWORD *)(a1 + 8) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1974E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__17211(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17212(uint64_t a1)
{

}

uint64_t WFSettingsClientError(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("WFSettingsClientErrorDomain"), a1, 0);
}

id getWFWFRecordLogObject()
{
  if (getWFWFRecordLogObject_onceToken != -1)
    dispatch_once(&getWFWFRecordLogObject_onceToken, &__block_literal_global_17419);
  return (id)getWFWFRecordLogObject_log;
}

void __getWFWFRecordLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "WFRecord");
  v1 = (void *)getWFWFRecordLogObject_log;
  getWFWFRecordLogObject_log = (uint64_t)v0;

}

void sub_1C197BB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C197C530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  (*(void (**)(void))(a11 + 16))();
  (*(void (**)(uint64_t))(v11 + 16))(v11);
  _Unwind_Resume(a1);
}

id WFShortcutPackageFileFailedToSignShortcutFileError()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB35C8];
  v5 = *MEMORY[0x1E0CB2D50];
  WFLocalizedString(CFSTR("Failed to sign shortcut"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "errorWithDomain:code:userInfo:", CFSTR("WFWorkflowErrorDomain"), 4, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFShortcutPackageFileInvalidShortcutFileError()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB35C8];
  v5 = *MEMORY[0x1E0CB2D50];
  WFLocalizedString(CFSTR("Invalid shortcut file"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "errorWithDomain:code:userInfo:", CFSTR("WFWorkflowErrorDomain"), 3, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1C197D1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  (*(void (**)(uint64_t))(v13 + 16))(v13);
  (*(void (**)(void))(a13 + 16))();
  _Unwind_Resume(a1);
}

id WFShortcutPackageFileFailedToExtractShortcutFileError()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB35C8];
  v5 = *MEMORY[0x1E0CB2D50];
  WFLocalizedString(CFSTR("Failed to extract the shortcut file data"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "errorWithDomain:code:userInfo:", CFSTR("WFWorkflowErrorDomain"), 6, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t __Block_byref_object_copy__18056(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18057(uint64_t a1)
{

}

uint64_t WFPBPersonalAutomationSuggestionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  BOOL v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_48;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_48;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_48;
        case 4u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_52:
          v39 = v22 != 0;
          v40 = 58;
          goto LABEL_61;
        case 5u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_56:
          v39 = v28 != 0;
          v40 = 57;
          goto LABEL_61;
        case 6u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          break;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_48;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_48;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
LABEL_48:
          v38 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
        *(_QWORD *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0)
          goto LABEL_58;
        v32 += 7;
        v14 = v33++ >= 9;
        if (v14)
        {
          v34 = 0;
          goto LABEL_60;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
      if (*(_BYTE *)(a2 + *v5))
        v34 = 0;
LABEL_60:
      v39 = v34 != 0;
      v40 = 56;
LABEL_61:
      *(_BYTE *)(a1 + v40) = v39;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1980B74(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _QWORD *v33;
  uint64_t v34;
  id v37;
  NSObject *v38;
  uint64_t v39;

  _Block_object_dispose(&a33, 8);
  if (a2 == 1)
  {
    v37 = objc_begin_catch(a1);
    getWFTestHarnessLogObject();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)(v34 - 192) = 136315394;
      v39 = v34 - 192;
      *(_QWORD *)(v39 + 4) = "-[WFHarnessTestRunDescriptor loadTestCaseWithError:]";
      *(_WORD *)(v34 - 180) = 2112;
      *(_QWORD *)(v39 + 14) = v37;
      _os_log_impl(&dword_1C15B3000, v38, OS_LOG_TYPE_FAULT, "%s Exception thrown while constructing and calling test invocation method: %@", (uint8_t *)(v34 - 192), 0x16u);
    }

    if (v33)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0CB2FE0], 22, 0);
      *v33 = (id)objc_claimAutoreleasedReturnValue();
    }

    objc_end_catch();
    JUMPOUT(0x1C19803B0);
  }
  (*(void (**)(void))(a14 + 16))();
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18434(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18435(uint64_t a1)
{

}

void sub_1C19816AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18495(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18496(uint64_t a1)
{

}

BOOL WFErrorIsRemoteQuarantineDenialError(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "isEqualToString:", CFSTR("WFRemoteQuarantineErrorDomain")))
    v3 = objc_msgSend(v1, "code") == 0;
  else
    v3 = 0;

  return v3;
}

id WFAddRecoveryOptionsToRemoteQuarantineDenialError(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD v17[4];
  id v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (WFErrorIsRemoteQuarantineDenialError(v3))
  {
    objc_msgSend(v3, "userInfo");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(v5, "mutableCopy");

    WFLocalizedString(CFSTR("Cancel"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v20[0] = v7;
    WFLocalizedString(CFSTR("Delete"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v20[1] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v9, *MEMORY[0x1E0CB2D78]);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v10, *MEMORY[0x1E0D14200]);

    v11 = objc_alloc(MEMORY[0x1E0D13E20]);
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __WFAddRecoveryOptionsToRemoteQuarantineDenialError_block_invoke;
    v17[3] = &unk_1E7AEE658;
    v19 = 1;
    v18 = v4;
    v12 = (void *)objc_msgSend(v11, "initWithHandlerBlock:", v17);
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, *MEMORY[0x1E0CB3148]);
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, *MEMORY[0x1E0D142B8]);
    v13 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(v3, "domain");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "errorWithDomain:code:userInfo:", v14, objc_msgSend(v3, "code"), v6);
    v15 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v15 = v3;
  }

  return v15;
}

void sub_1C198346C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1985E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1986414(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1C1988EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C198960C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getAFDeviceSupportsSystemAssistantExperienceSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!AssistantServicesLibraryCore_frameworkLibrary)
    AssistantServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)AssistantServicesLibraryCore_frameworkLibrary;
  if (!AssistantServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFAssistantServicesWrapper.m"), 13, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "AFDeviceSupportsSystemAssistantExperience");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getAFDeviceSupportsSystemAssistantExperienceSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1C1989F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1C198A368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C198AD0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19876(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19877(uint64_t a1)
{

}

void sub_1C198E908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C198E9D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C198EB98(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id getWFLaunchAngelLogObject()
{
  if (getWFLaunchAngelLogObject_onceToken != -1)
    dispatch_once(&getWFLaunchAngelLogObject_onceToken, &__block_literal_global_20222);
  return (id)getWFLaunchAngelLogObject_log;
}

void __getWFLaunchAngelLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "LaunchAngel");
  v1 = (void *)getWFLaunchAngelLogObject_log;
  getWFLaunchAngelLogObject_log = (uint64_t)v0;

}

BOOL WFPBRemoteWidgetConfigurationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_25:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_26:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id UIPasteboardFunction()
{
  return (id)classUIPasteboard;
}

Class initUIPasteboard()
{
  Class result;

  if (UIKitLibrary_sOnce_20427 != -1)
    dispatch_once(&UIKitLibrary_sOnce_20427, &__block_literal_global_20428);
  result = objc_getClass("UIPasteboard");
  classUIPasteboard = (uint64_t)result;
  getUIPasteboardClass = (uint64_t (*)())UIPasteboardFunction;
  return result;
}

void sub_1C1991C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1991D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void __getPRSServiceClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  PosterBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("PRSService");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getPRSServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPRSServiceClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFPosterService.m"), 31, CFSTR("Unable to find class %s"), "PRSService");

    __break(1u);
  }
}

void PosterBoardServicesLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!PosterBoardServicesLibraryCore_frameworkLibrary)
    PosterBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!PosterBoardServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PosterBoardServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFPosterService.m"), 30, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getPRSExternalSystemServiceClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  PosterBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("PRSExternalSystemService");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getPRSExternalSystemServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPRSExternalSystemServiceClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFPosterService.m"), 32, CFSTR("Unable to find class %s"), "PRSExternalSystemService");

    __break(1u);
  }
}

id WFSanitizedPostersError(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  int v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD v19[2];
  _QWORD v20[2];
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "domain");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v5, "hasPrefix:", CFSTR("com.apple.PosterBoard")))
    {

    }
    else
    {
      objc_msgSend(v3, "domain");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "isEqualToString:", CFSTR("BSServiceConnectionErrorDomain"));

      if (!v8)
      {
        v6 = v3;
        goto LABEL_10;
      }
    }
    getWFActionsLogObject();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315650;
      v22 = "WFSanitizedPostersError";
      v23 = 2112;
      v24 = v4;
      v25 = 2112;
      v26 = v3;
      _os_log_impl(&dword_1C15B3000, v9, OS_LOG_TYPE_DEFAULT, "%s %@ failed with error: %@, being remapped to user-facing error", buf, 0x20u);
    }

    v10 = (void *)MEMORY[0x1E0CB3940];
    WFLocalizedString(CFSTR("Unable to %@"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "localizedStringWithFormat:", v11, v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = (void *)MEMORY[0x1E0CB35C8];
    v14 = *MEMORY[0x1E0CB2D68];
    v20[0] = v12;
    v15 = *MEMORY[0x1E0CB2D50];
    v19[0] = v14;
    v19[1] = v15;
    WFLocalizedString(CFSTR("An unknown error occurred while performing the operation."));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v20[1] = v16;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v20, v19, 2);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "errorWithDomain:code:userInfo:", CFSTR("com.apple.shortcuts.poster-service"), 1, v17);
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }
LABEL_10:

  return v6;
}

void sub_1C1992774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getALCityManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!AppSupportLibraryCore_frameworkLibrary)
    AppSupportLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!AppSupportLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppSupportLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFTimeZonePickerParameter.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("ALCityManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getALCityManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFTimeZonePickerParameter.m"), 18, CFSTR("Unable to find class %s"), "ALCityManager");

LABEL_8:
    __break(1u);
  }
  getALCityManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFINObjectFromSerializedRepresentation(void *a1, objc_class *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;

  v3 = a1;
  v4 = objc_opt_class();
  WFEnforceClass(v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("Identifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_opt_class();
  WFEnforceClass(v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("DisplayString"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_opt_class();
  WFEnforceClass(v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    v12 = [a2 alloc];
    objc_msgSend(v12, "wf_initWithIdentifier:displayString:", v8, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v13 = 0;
  }

  return v13;
}

id WFSerializedRepresentationFromWFINObject(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  objc_msgSend(v1, "spokenPhrase");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v3, CFSTR("DisplayString"));

  objc_msgSend(v1, "vocabularyIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "setValue:forKey:", v4, CFSTR("Identifier"));
  return v2;
}

void sub_1C199BBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 256), 8);
  _Unwind_Resume(a1);
}

id WFRunnerFailureErrorMessage(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    WFLocalizedString(CFSTR("Couldn’t Run “%@”"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "localizedStringWithFormat:", v3, v1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    WFLocalizedString(CFSTR("Couldn’t run shortcut"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  WFLocalizedString(CFSTR("The action couldn’t run because the runner quit unexpectedly."));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x1E0CB35C8];
  v7 = *MEMORY[0x1E0D14318];
  v8 = *MEMORY[0x1E0CB2D50];
  v12[0] = *MEMORY[0x1E0CB2D68];
  v12[1] = v8;
  v13[0] = v4;
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "errorWithDomain:code:userInfo:", v7, 1, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

uint64_t __Block_byref_object_copy__21943(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21944(uint64_t a1)
{

}

void WFDyldBulkImageLoadCallback_22207()
{
  do
    __ldaxr(WFShouldRediscoverParameterValueClasses);
  while (__stlxr(1u, WFShouldRediscoverParameterValueClasses));
}

uint64_t WFUserDefaultsKeyForCollapsedActionsInWorkflow(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("WFCollapsedActions-%@"), a1);
}

void sub_1C19A3B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v51;

  _Block_object_dispose((const void *)(v51 - 160), 8);
  _Block_object_dispose(&a51, 8);
  _Unwind_Resume(a1);
}

id getWFActionRegistryLogObject()
{
  if (getWFActionRegistryLogObject_onceToken != -1)
    dispatch_once(&getWFActionRegistryLogObject_onceToken, &__block_literal_global_22418);
  return (id)getWFActionRegistryLogObject_log;
}

void __getWFActionRegistryLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "ActionRegistry");
  v1 = (void *)getWFActionRegistryLogObject_log;
  getWFActionRegistryLogObject_log = (uint64_t)v0;

}

uint64_t __Block_byref_object_copy__22445(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22446(uint64_t a1)
{

}

uint64_t WFErrorIsExpiredCertificateError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t IsExpiredCertificateError;
  void *v6;
  void *v7;

  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    IsExpiredCertificateError = 0;
    goto LABEL_8;
  }
  objc_msgSend(v1, "domain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0CB2F90]))
  {

    goto LABEL_7;
  }
  v4 = objc_msgSend(v2, "code");

  if (v4 != -67818)
  {
LABEL_7:
    objc_msgSend(v2, "userInfo");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", *MEMORY[0x1E0CB3388]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    IsExpiredCertificateError = WFErrorIsExpiredCertificateError();

    goto LABEL_8;
  }
  IsExpiredCertificateError = 1;
LABEL_8:

  return IsExpiredCertificateError;
}

void sub_1C19A79EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getREMDisplayNameUtilsClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ReminderKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("REMDisplayNameUtils");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getREMDisplayNameUtilsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getREMDisplayNameUtilsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFRemindersListPickerParameter.m"), 24, CFSTR("Unable to find class %s"), "REMDisplayNameUtils");

    __break(1u);
  }
}

void ReminderKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ReminderKitLibraryCore_frameworkLibrary)
    ReminderKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ReminderKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ReminderKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFRemindersListPickerParameter.m"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

id getREMStoreClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getREMStoreClass_softClass;
  v7 = getREMStoreClass_softClass;
  if (!getREMStoreClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getREMStoreClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getREMStoreClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C19A7F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getREMStoreClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ReminderKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("REMStore");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getREMStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getREMStoreClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFRemindersListPickerParameter.m"), 23, CFSTR("Unable to find class %s"), "REMStore");

    __break(1u);
  }
}

void sub_1C19A9EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23377(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23378(uint64_t a1)
{

}

void WFMigratePaymentActionCurrencyAmount(void *a1)
{
  void *v1;
  void *v2;
  char v3;
  WFNumberStringSubstitutableState *v4;
  WFQuantityParameterState *v5;
  void *v6;
  void *v7;
  WFQuantityParameterState *v8;
  void *v9;
  id v10;

  v10 = a1;
  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("WFVenmoActionAmount"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      || (objc_msgSend(v1, "objectForKey:", CFSTR("WFSerializationType")),
          v2 = (void *)objc_claimAutoreleasedReturnValue(),
          v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("WFQuantityFieldValue")),
          v2,
          (v3 & 1) == 0))
    {
      v4 = -[WFVariableSubstitutableParameterState initWithSerializedRepresentation:variableProvider:parameter:]([WFNumberStringSubstitutableState alloc], "initWithSerializedRepresentation:variableProvider:parameter:", v1, 0, 0);
      v5 = [WFQuantityParameterState alloc];
      objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "currencyCode");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = -[WFQuantityParameterState initWithMagnitudeState:unitString:](v5, "initWithMagnitudeState:unitString:", v4, v7);

      -[WFQuantityParameterState serializedRepresentation](v8, "serializedRepresentation");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v9, CFSTR("WFVenmoActionAmount"));

    }
  }

}

id WFLinkActionSerializedParametersForLNAction(void *a1, void *a2)
{
  return WFLinkActionSerializedParametersForWFAction(0, a1, a2);
}

id WFLinkActionSerializedParametersForWFAction(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  uint64_t j;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t k;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id obj;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _BYTE v66[128];
  _BYTE v67[128];
  _BYTE v68[128];
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v49 = a1;
  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    if (v6)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull WFLinkActionSerializedParametersForWFAction(WFAction * _Nullable __strong, LNAction * _Nonnull __strong, LNActionMetadata * _Nonnull __strong)");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "handleFailureInFunction:file:lineNumber:description:", v43, CFSTR("WFLinkAction.m"), 30, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("lnAction"));

    if (v7)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull WFLinkActionSerializedParametersForWFAction(WFAction * _Nullable __strong, LNAction * _Nonnull __strong, LNActionMetadata * _Nonnull __strong)");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFLinkAction.m"), 31, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("metadata"));

LABEL_3:
  v47 = (void *)objc_opt_new();
  v8 = (void *)objc_opt_new();
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v65 = 0u;
  v46 = v5;
  objc_msgSend(v5, "parameters");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v62, v68, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v63;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v63 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * i);
        objc_msgSend(v14, "value");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "identifier");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v15, v16);

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v62, v68, 16);
    }
    while (v11);
  }

  v60 = 0u;
  v61 = 0u;
  v58 = 0u;
  v59 = 0u;
  objc_msgSend(v7, "parameters");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v53 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v67, 16);
  if (v53)
  {
    v51 = v8;
    v52 = *(_QWORD *)v59;
    do
    {
      for (j = 0; j != v53; ++j)
      {
        if (*(_QWORD *)v59 != v52)
          objc_enumerationMutation(obj);
        v18 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * j);
        objc_msgSend(v18, "valueType");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "wf_parameterDefinitionWithParameterMetadata:", v18);
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        if (v20)
        {
          objc_msgSend(v18, "name");
          v21 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v49, "parameterDefinitions");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v54 = 0u;
          v55 = 0u;
          v56 = 0u;
          v57 = 0u;
          v23 = v22;
          v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v54, v66, 16);
          v25 = v21;
          if (v24)
          {
            v26 = v24;
            v50 = v20;
            v27 = *(_QWORD *)v55;
            while (2)
            {
              for (k = 0; k != v26; ++k)
              {
                if (*(_QWORD *)v55 != v27)
                  objc_enumerationMutation(v23);
                v29 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * k);
                objc_msgSend(v29, "objectForKey:", CFSTR("Key"));
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                if (v30 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                {
                  if (objc_msgSend(v30, "isEqualToString:", v21))
                  {
                    objc_msgSend(v29, "objectForKey:", CFSTR("KeyForSerialization"));
                    v31 = objc_claimAutoreleasedReturnValue();
                    v32 = (void *)v31;
                    if (v31)
                    {
                      objc_opt_class();
                      if ((objc_opt_isKindOfClass() & 1) != 0)
                        v33 = v32;
                      else
                        v33 = 0;
                    }
                    else
                    {
                      v33 = 0;
                    }
                    v8 = v51;
                    v34 = v33;

                    if (v34)
                      v35 = v34;
                    else
                      v35 = v30;
                    v25 = v35;

                    goto LABEL_38;
                  }
                }
                else
                {

                  v30 = 0;
                }

              }
              v26 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v54, v66, 16);
              if (v26)
                continue;
              break;
            }
            v25 = v21;
            v8 = v51;
LABEL_38:
            v20 = v50;
          }

          objc_msgSend(v8, "objectForKeyedSubscript:", v21);
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          if (v36)
          {
            v37 = v20;
            objc_msgSend(v20, "parameterStateFromLinkValue:", v36);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v38, "serializedRepresentation");
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            if (v39)
              objc_msgSend(v47, "setObject:forKeyedSubscript:", v39, v25);

            v20 = v37;
            v8 = v51;
          }

        }
      }
      v53 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v67, 16);
    }
    while (v53);
  }

  v40 = (void *)objc_msgSend(v47, "copy");
  return v40;
}

void sub_1C19AFEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  (*(void (**)(void))(a12 + 16))();
  _Unwind_Resume(a1);
}

void sub_1C19B1914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C19B2704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19B2F7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19B5550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t WFProgressUnitsBetweenActions(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v6)
    v8 = objc_msgSend(v5, "indexOfObject:", v6);
  else
    v8 = 0;
  v9 = 0;
  while (1)
  {
    v10 = v7 ? objc_msgSend(v5, "indexOfObject:", v7) + 1 : objc_msgSend(v5, "count");
    if (v8 >= v10)
      break;
    objc_msgSend(v5, "objectAtIndex:", v8);
    v11 = (id)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_15;
    if (!objc_msgSend(v11, "mode") && v11 != v6)
    {
      objc_msgSend(v11, "groupedCloseAction");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v5, "indexOfObject:", v12);
      if (v13 != 0x7FFFFFFFFFFFFFFFLL)
        v8 = v13;

LABEL_15:
      ++v9;
    }

    ++v8;
  }

  return v9;
}

void __getRBSAssertionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary_24243();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSAssertion");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSAssertionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSAssertionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowController.m"), 36, CFSTR("Unable to find class %s"), "RBSAssertion");

    __break(1u);
  }
}

void __getRBSTargetClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary_24243();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSTarget");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSTargetClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSTargetClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowController.m"), 38, CFSTR("Unable to find class %s"), "RBSTarget");

    __break(1u);
  }
}

void __getRBSDomainAttributeClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary_24243();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSDomainAttribute");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSDomainAttributeClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSDomainAttributeClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowController.m"), 37, CFSTR("Unable to find class %s"), "RBSDomainAttribute");

    __break(1u);
  }
}

void RunningBoardServicesLibrary_24243()
{
  void *v0;
  void *v1;
  void *v2;

  if (!RunningBoardServicesLibraryCore_frameworkLibrary_24247)
    RunningBoardServicesLibraryCore_frameworkLibrary_24247 = _sl_dlopen();
  if (!RunningBoardServicesLibraryCore_frameworkLibrary_24247)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RunningBoardServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFWorkflowController.m"), 35, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

uint64_t __Block_byref_object_copy__24267(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24268(uint64_t a1)
{

}

id WFSupportedCharacteristicsForHMService(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(a1, "characteristicsSupportedForShortcutConditions");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "allObjects");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sortedArrayUsingComparator:", &__block_literal_global_24922);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFUnitForHMCharacteristic(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  int v17;
  void *v18;

  objc_msgSend(a1, "metadata");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "units");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  getHMCharacteristicMetadataUnitsCelsius();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqualToString:", v3);

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0CB3B00], "celsius");
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    getHMCharacteristicMetadataUnitsFahrenheit();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v2, "isEqualToString:", v6);

    if (v7)
    {
      objc_msgSend(MEMORY[0x1E0CB3B00], "fahrenheit");
      v5 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      getHMCharacteristicMetadataUnitsArcDegree();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v2, "isEqualToString:", v8);

      if (v9)
      {
        objc_msgSend(MEMORY[0x1E0CB3A60], "degrees");
        v5 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        getHMCharacteristicMetadataUnitsSeconds();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v2, "isEqualToString:", v10);

        if (v11)
        {
          objc_msgSend(MEMORY[0x1E0CB3A88], "seconds");
          v5 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          getHMCharacteristicMetadataUnitsLux();
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v2, "isEqualToString:", v12);

          if (v13)
          {
            objc_msgSend(MEMORY[0x1E0CB3AC8], "lux");
            v5 = objc_claimAutoreleasedReturnValue();
          }
          else
          {
            getHMCharacteristicMetadataUnitsPartsPerMillion();
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v2, "isEqualToString:", v14);

            if (v15)
            {
              objc_msgSend(MEMORY[0x1E0CB3A80], "partsPerMillion");
              v5 = objc_claimAutoreleasedReturnValue();
            }
            else
            {
              getHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter();
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              v17 = objc_msgSend(v2, "isEqualToString:", v16);

              if (!v17)
              {
                v18 = 0;
                goto LABEL_16;
              }
              objc_msgSend(MEMORY[0x1E0CB3A70], "wf_microgramsPerCubicMeter");
              v5 = objc_claimAutoreleasedReturnValue();
            }
          }
        }
      }
    }
  }
  v18 = (void *)v5;
LABEL_16:

  return v18;
}

id HMCharacteristicMetadataUnitsCelsiusFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsCelsius;
}

id initHMCharacteristicMetadataUnitsCelsius()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsCelsius");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsCelsius", "WFHomeUtilities.m", 50, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsCelsius, *v0);
  getHMCharacteristicMetadataUnitsCelsius = (uint64_t (*)())HMCharacteristicMetadataUnitsCelsiusFunction;
  return (id)constantHMCharacteristicMetadataUnitsCelsius;
}

id HMCharacteristicMetadataUnitsFahrenheitFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsFahrenheit;
}

id initHMCharacteristicMetadataUnitsFahrenheit()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsFahrenheit");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsFahrenheit", "WFHomeUtilities.m", 51, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsFahrenheit, *v0);
  getHMCharacteristicMetadataUnitsFahrenheit = (uint64_t (*)())HMCharacteristicMetadataUnitsFahrenheitFunction;
  return (id)constantHMCharacteristicMetadataUnitsFahrenheit;
}

id HMCharacteristicMetadataUnitsArcDegreeFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsArcDegree;
}

id initHMCharacteristicMetadataUnitsArcDegree()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsArcDegree");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsArcDegree", "WFHomeUtilities.m", 52, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsArcDegree, *v0);
  getHMCharacteristicMetadataUnitsArcDegree = (uint64_t (*)())HMCharacteristicMetadataUnitsArcDegreeFunction;
  return (id)constantHMCharacteristicMetadataUnitsArcDegree;
}

id HMCharacteristicMetadataUnitsSecondsFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsSeconds;
}

id initHMCharacteristicMetadataUnitsSeconds()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsSeconds");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsSeconds", "WFHomeUtilities.m", 53, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsSeconds, *v0);
  getHMCharacteristicMetadataUnitsSeconds = (uint64_t (*)())HMCharacteristicMetadataUnitsSecondsFunction;
  return (id)constantHMCharacteristicMetadataUnitsSeconds;
}

id HMCharacteristicMetadataUnitsLuxFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsLux;
}

id initHMCharacteristicMetadataUnitsLux()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsLux");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsLux", "WFHomeUtilities.m", 54, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsLux, *v0);
  getHMCharacteristicMetadataUnitsLux = (uint64_t (*)())HMCharacteristicMetadataUnitsLuxFunction;
  return (id)constantHMCharacteristicMetadataUnitsLux;
}

id HMCharacteristicMetadataUnitsPartsPerMillionFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsPartsPerMillion;
}

id initHMCharacteristicMetadataUnitsPartsPerMillion()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsPartsPerMillion");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsPartsPerMillion", "WFHomeUtilities.m", 55, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsPartsPerMillion, *v0);
  getHMCharacteristicMetadataUnitsPartsPerMillion = (uint64_t (*)())HMCharacteristicMetadataUnitsPartsPerMillionFunction;
  return (id)constantHMCharacteristicMetadataUnitsPartsPerMillion;
}

id HMCharacteristicMetadataUnitsMicrogramsPerCubicMeterFunction()
{
  return (id)constantHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter;
}

id initHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataUnitsMicrogramsPerCubicMeter");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter", "WFHomeUtilities.m", 56, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter, *v0);
  getHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter = (uint64_t (*)())HMCharacteristicMetadataUnitsMicrogramsPerCubicMeterFunction;
  return (id)constantHMCharacteristicMetadataUnitsMicrogramsPerCubicMeter;
}

uint64_t WFHMCharacteristicIsBooleanFormat(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  objc_msgSend(a1, "metadata");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "format");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  getHMCharacteristicMetadataFormatBool_24939();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqualToString:", v3);

  return v4;
}

id HMCharacteristicMetadataFormatBoolFunction_24940()
{
  return (id)constantHMCharacteristicMetadataFormatBool_24944;
}

id initHMCharacteristicMetadataFormatBool_24941()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataFormatBool");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatBool", "WFHomeUtilities.m", 38, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatBool_24944, *v0);
  getHMCharacteristicMetadataFormatBool_24939 = (uint64_t (*)())HMCharacteristicMetadataFormatBoolFunction_24940;
  return (id)constantHMCharacteristicMetadataFormatBool_24944;
}

id WFBooleanLocalizedDescriptionForHMCharacteristic(void *a1, int a2)
{
  void *v3;
  void *v4;
  int v5;
  const __CFString *v6;
  const __CFString *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  int v17;
  void *v18;
  int v19;
  void *v20;
  int v21;
  void *v22;
  int v23;
  void *v24;
  int v25;
  __CFString *v26;
  void *v27;

  objc_msgSend(a1, "characteristicType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  getHMCharacteristicTypePowerState();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "isEqualToString:", v4);

  if (v5)
  {
    v6 = CFSTR("Is Off");
    v7 = CFSTR("Is On");
  }
  else
  {
    getHMCharacteristicTypeObstructionDetected();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v3, "isEqualToString:", v8);

    if (v9)
    {
      v6 = CFSTR("Is Not Obstructed");
      v7 = CFSTR("Is Obstructed");
    }
    else
    {
      getHMCharacteristicTypeOutletInUse();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v3, "isEqualToString:", v10);

      if (v11)
      {
        v6 = CFSTR("Outlet Is Not In Use");
        v7 = CFSTR("Outlet Is In Use");
      }
      else
      {
        getHMCharacteristicTypeAudioFeedback();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v3, "isEqualToString:", v12);

        if (v13)
        {
          v6 = CFSTR("Audio Feedback Is Disabled");
          v7 = CFSTR("Audio Feedback Is Enabled");
        }
        else
        {
          getHMCharacteristicTypeAdminOnlyAccess();
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v3, "isEqualToString:", v14);

          if (v15)
          {
            v6 = CFSTR("Admin Access Is Not Required");
            v7 = CFSTR("Admin Access Is Required");
          }
          else
          {
            getHMCharacteristicTypeMotionDetected();
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = objc_msgSend(v3, "isEqualToString:", v16);

            if (v17)
            {
              v6 = CFSTR("Motion Is Not Detected");
              v7 = CFSTR("Motion Is Detected");
            }
            else
            {
              getHMCharacteristicTypeStatusActive();
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = objc_msgSend(v3, "isEqualToString:", v18);

              if (v19)
              {
                v6 = CFSTR("Is Not Active");
                v7 = CFSTR("Is Active");
              }
              else
              {
                getHMCharacteristicTypeMute();
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                v21 = objc_msgSend(v3, "isEqualToString:", v20);

                if (v21)
                {
                  v6 = CFSTR("Is Not Muted");
                  v7 = CFSTR("Is Muted");
                }
                else
                {
                  getHMCharacteristicTypeNightVision();
                  v22 = (void *)objc_claimAutoreleasedReturnValue();
                  v23 = objc_msgSend(v3, "isEqualToString:", v22);

                  if (v23)
                  {
                    v6 = CFSTR("Night Vision Is Not Enabled");
                    v7 = CFSTR("Night Vision Is Enabled");
                  }
                  else
                  {
                    getHMCharacteristicTypeImageMirroring();
                    v24 = (void *)objc_claimAutoreleasedReturnValue();
                    v25 = objc_msgSend(v3, "isEqualToString:", v24);

                    if (!v25)
                    {
                      v27 = 0;
                      goto LABEL_25;
                    }
                    v6 = CFSTR("Image Is Not Mirrored");
                    v7 = CFSTR("Image Is Mirrored");
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (a2)
    v26 = (__CFString *)v7;
  else
    v26 = (__CFString *)v6;
  WFLocalizedString(v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_25:

  return v27;
}

id HMCharacteristicTypePowerStateFunction()
{
  return (id)constantHMCharacteristicTypePowerState;
}

id initHMCharacteristicTypePowerState()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypePowerState");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypePowerState", "WFHomeUtilities.m", 39, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypePowerState, *v0);
  getHMCharacteristicTypePowerState = (uint64_t (*)())HMCharacteristicTypePowerStateFunction;
  return (id)constantHMCharacteristicTypePowerState;
}

id HMCharacteristicTypeObstructionDetectedFunction()
{
  return (id)constantHMCharacteristicTypeObstructionDetected;
}

id initHMCharacteristicTypeObstructionDetected()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeObstructionDetected");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeObstructionDetected", "WFHomeUtilities.m", 40, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeObstructionDetected, *v0);
  getHMCharacteristicTypeObstructionDetected = (uint64_t (*)())HMCharacteristicTypeObstructionDetectedFunction;
  return (id)constantHMCharacteristicTypeObstructionDetected;
}

id HMCharacteristicTypeOutletInUseFunction()
{
  return (id)constantHMCharacteristicTypeOutletInUse;
}

id initHMCharacteristicTypeOutletInUse()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeOutletInUse");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeOutletInUse", "WFHomeUtilities.m", 41, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeOutletInUse, *v0);
  getHMCharacteristicTypeOutletInUse = (uint64_t (*)())HMCharacteristicTypeOutletInUseFunction;
  return (id)constantHMCharacteristicTypeOutletInUse;
}

id HMCharacteristicTypeAudioFeedbackFunction()
{
  return (id)constantHMCharacteristicTypeAudioFeedback;
}

id initHMCharacteristicTypeAudioFeedback()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeAudioFeedback");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeAudioFeedback", "WFHomeUtilities.m", 42, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeAudioFeedback, *v0);
  getHMCharacteristicTypeAudioFeedback = (uint64_t (*)())HMCharacteristicTypeAudioFeedbackFunction;
  return (id)constantHMCharacteristicTypeAudioFeedback;
}

id HMCharacteristicTypeAdminOnlyAccessFunction()
{
  return (id)constantHMCharacteristicTypeAdminOnlyAccess;
}

id initHMCharacteristicTypeAdminOnlyAccess()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeAdminOnlyAccess");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeAdminOnlyAccess", "WFHomeUtilities.m", 43, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeAdminOnlyAccess, *v0);
  getHMCharacteristicTypeAdminOnlyAccess = (uint64_t (*)())HMCharacteristicTypeAdminOnlyAccessFunction;
  return (id)constantHMCharacteristicTypeAdminOnlyAccess;
}

id HMCharacteristicTypeMotionDetectedFunction()
{
  return (id)constantHMCharacteristicTypeMotionDetected;
}

id initHMCharacteristicTypeMotionDetected()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeMotionDetected");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeMotionDetected", "WFHomeUtilities.m", 44, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeMotionDetected, *v0);
  getHMCharacteristicTypeMotionDetected = (uint64_t (*)())HMCharacteristicTypeMotionDetectedFunction;
  return (id)constantHMCharacteristicTypeMotionDetected;
}

id HMCharacteristicTypeStatusActiveFunction()
{
  return (id)constantHMCharacteristicTypeStatusActive;
}

id initHMCharacteristicTypeStatusActive()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeStatusActive");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeStatusActive", "WFHomeUtilities.m", 45, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeStatusActive, *v0);
  getHMCharacteristicTypeStatusActive = (uint64_t (*)())HMCharacteristicTypeStatusActiveFunction;
  return (id)constantHMCharacteristicTypeStatusActive;
}

id HMCharacteristicTypeMuteFunction()
{
  return (id)constantHMCharacteristicTypeMute;
}

id initHMCharacteristicTypeMute()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeMute");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeMute", "WFHomeUtilities.m", 46, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeMute, *v0);
  getHMCharacteristicTypeMute = (uint64_t (*)())HMCharacteristicTypeMuteFunction;
  return (id)constantHMCharacteristicTypeMute;
}

id HMCharacteristicTypeNightVisionFunction()
{
  return (id)constantHMCharacteristicTypeNightVision;
}

id initHMCharacteristicTypeNightVision()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeNightVision");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeNightVision", "WFHomeUtilities.m", 47, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeNightVision, *v0);
  getHMCharacteristicTypeNightVision = (uint64_t (*)())HMCharacteristicTypeNightVisionFunction;
  return (id)constantHMCharacteristicTypeNightVision;
}

id HMCharacteristicTypeImageMirroringFunction()
{
  return (id)constantHMCharacteristicTypeImageMirroring;
}

id initHMCharacteristicTypeImageMirroring()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicTypeImageMirroring");
  if (!v0)
    __assert_rtn("initHMCharacteristicTypeImageMirroring", "WFHomeUtilities.m", 48, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicTypeImageMirroring, *v0);
  getHMCharacteristicTypeImageMirroring = (uint64_t (*)())HMCharacteristicTypeImageMirroringFunction;
  return (id)constantHMCharacteristicTypeImageMirroring;
}

BOOL WFHMCharacteristicIsEnumeration(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _BOOL8 v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;

  objc_msgSend(a1, "metadata");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "validValues");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  if (!v4)
  {
    objc_msgSend(v2, "format");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    getHMCharacteristicMetadataFormatUInt8_25017();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v6, "isEqualToString:", v7);
    if ((v8 & 1) != 0
      || (getHMCharacteristicMetadataFormatInt_25020(),
          v1 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v6, "isEqualToString:", v1)))
    {
      objc_msgSend(v2, "minimumValue");
      v9 = objc_claimAutoreleasedReturnValue();
      if (v9)
      {
        v10 = (void *)v9;
        objc_msgSend(v2, "maximumValue");
        v11 = objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          v12 = (void *)v11;
          objc_msgSend(v2, "stepValue");
          v13 = objc_claimAutoreleasedReturnValue();
          if (v13)
          {
            v14 = (void *)v13;
            objc_msgSend(v2, "units");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            v5 = v15 == 0;

            if ((v8 & 1) != 0)
              goto LABEL_15;
            goto LABEL_14;
          }

        }
      }
      v5 = 0;
      if ((v8 & 1) != 0)
      {
LABEL_15:

        goto LABEL_16;
      }
    }
    else
    {
      v5 = 0;
    }
LABEL_14:

    goto LABEL_15;
  }
  v5 = 1;
LABEL_16:

  return v5;
}

id HMCharacteristicMetadataFormatUInt8Function_25018()
{
  return (id)constantHMCharacteristicMetadataFormatUInt8_25028;
}

id initHMCharacteristicMetadataFormatUInt8_25019()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataFormatUInt8");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatUInt8", "WFHomeUtilities.m", 59, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatUInt8_25028, *v0);
  getHMCharacteristicMetadataFormatUInt8_25017 = (uint64_t (*)())HMCharacteristicMetadataFormatUInt8Function_25018;
  return (id)constantHMCharacteristicMetadataFormatUInt8_25028;
}

id HMCharacteristicMetadataFormatIntFunction_25021()
{
  return (id)constantHMCharacteristicMetadataFormatInt_25025;
}

id initHMCharacteristicMetadataFormatInt_25022()
{
  id *v0;

  if (HomeKitLibrary_sOnce_24926 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_24926, &__block_literal_global_177);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_24927, "HMCharacteristicMetadataFormatInt");
  if (!v0)
    __assert_rtn("initHMCharacteristicMetadataFormatInt", "WFHomeUtilities.m", 58, "constant");
  objc_storeStrong((id *)&constantHMCharacteristicMetadataFormatInt_25025, *v0);
  getHMCharacteristicMetadataFormatInt_25020 = (uint64_t (*)())HMCharacteristicMetadataFormatIntFunction_25021;
  return (id)constantHMCharacteristicMetadataFormatInt_25025;
}

id WFFormattedCharacteristicValueForCharacteristic(void *a1)
{
  id v1;
  void *v2;
  char isKindOfClass;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  if (WFHMCharacteristicIsEnumeration(v1)
    && (objc_msgSend(v1, "value"),
        v2 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_opt_class(),
        isKindOfClass = objc_opt_isKindOfClass(),
        v2,
        (isKindOfClass & 1) != 0))
  {
    if (HomeLibrary_sOnce_25031 != -1)
      dispatch_once(&HomeLibrary_sOnce_25031, &__block_literal_global_198);
    objc_msgSend(MEMORY[0x1E0CB3658], "hf_valueFormatterForCharacteristic:options:", v1, 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "value");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringForObjectValue:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(v1, "value");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v6;
}

id WFWFWorkflowControllerStateDefaultSerializedURLFromContext(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  id v5;
  NSObject *v6;
  void *v7;
  id v9;
  uint8_t buf[4];
  const char *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E98], "wf_savedShortcutStatesURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  v4 = objc_msgSend(v3, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v2, 0, 0, &v9);
  v5 = v9;

  if ((v4 & 1) != 0 || (objc_msgSend(v5, "vc_isFileAlreadyExists") & 1) != 0)
  {
    objc_msgSend(v1, "identifier");
    v6 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "URLByAppendingPathComponent:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    getWFGeneralLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136315394;
      v11 = "WFWFWorkflowControllerStateDefaultSerializedURLFromContext";
      v12 = 2112;
      v13 = v5;
      _os_log_impl(&dword_1C15B3000, v6, OS_LOG_TYPE_FAULT, "%s Unable to create folder for workflow controller states: %@", buf, 0x16u);
    }
    v7 = 0;
  }

  return v7;
}

id UIFontDescriptorFamilyAttributeFunction()
{
  return (id)constantUIFontDescriptorFamilyAttribute;
}

id initUIFontDescriptorFamilyAttribute()
{
  id *v0;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_25273, "UIFontDescriptorFamilyAttribute");
  if (!v0)
    __assert_rtn("initUIFontDescriptorFamilyAttribute", "WFFontDescriptor.m", 24, "constant");
  objc_storeStrong((id *)&constantUIFontDescriptorFamilyAttribute, *v0);
  getUIFontDescriptorFamilyAttribute = (uint64_t (*)())UIFontDescriptorFamilyAttributeFunction;
  return (id)constantUIFontDescriptorFamilyAttribute;
}

id UIFontDescriptorNameAttributeFunction()
{
  return (id)constantUIFontDescriptorNameAttribute;
}

id initUIFontDescriptorNameAttribute()
{
  id *v0;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_25273, "UIFontDescriptorNameAttribute");
  if (!v0)
    __assert_rtn("initUIFontDescriptorNameAttribute", "WFFontDescriptor.m", 22, "constant");
  objc_storeStrong((id *)&constantUIFontDescriptorNameAttribute, *v0);
  getUIFontDescriptorNameAttribute = (uint64_t (*)())UIFontDescriptorNameAttributeFunction;
  return (id)constantUIFontDescriptorNameAttribute;
}

id UIFontDescriptorFaceAttributeFunction()
{
  return (id)constantUIFontDescriptorFaceAttribute;
}

id initUIFontDescriptorFaceAttribute()
{
  id *v0;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_25273, "UIFontDescriptorFaceAttribute");
  if (!v0)
    __assert_rtn("initUIFontDescriptorFaceAttribute", "WFFontDescriptor.m", 23, "constant");
  objc_storeStrong((id *)&constantUIFontDescriptorFaceAttribute, *v0);
  getUIFontDescriptorFaceAttribute = (uint64_t (*)())UIFontDescriptorFaceAttributeFunction;
  return (id)constantUIFontDescriptorFaceAttribute;
}

id UIFontDescriptorVisibleNameAttributeFunction()
{
  return (id)constantUIFontDescriptorVisibleNameAttribute;
}

id initUIFontDescriptorVisibleNameAttribute()
{
  id *v0;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_25273, "UIFontDescriptorVisibleNameAttribute");
  if (!v0)
    __assert_rtn("initUIFontDescriptorVisibleNameAttribute", "WFFontDescriptor.m", 25, "constant");
  objc_storeStrong((id *)&constantUIFontDescriptorVisibleNameAttribute, *v0);
  getUIFontDescriptorVisibleNameAttribute = (uint64_t (*)())UIFontDescriptorVisibleNameAttributeFunction;
  return (id)constantUIFontDescriptorVisibleNameAttribute;
}

id UIFontDescriptorFunction()
{
  return (id)classUIFontDescriptor;
}

Class initUIFontDescriptor()
{
  Class result;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  result = objc_getClass("UIFontDescriptor");
  classUIFontDescriptor = (uint64_t)result;
  getUIFontDescriptorClass = (uint64_t (*)())UIFontDescriptorFunction;
  return result;
}

id UIFontFunction()
{
  return (id)classUIFont;
}

Class initUIFont()
{
  Class result;

  if (UIKitLibrary_sOnce_25268 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25268, &__block_literal_global_25269);
  result = objc_getClass("UIFont");
  classUIFont = (uint64_t)result;
  getUIFontClass = (uint64_t (*)())UIFontFunction;
  return result;
}

void sub_1C19C7184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25804(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25805(uint64_t a1)
{

}

id WFCreateDocumentInteractionController(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  objc_class *UIDocumentInteractionControllerSubclass;
  objc_ivar *InstanceVariable;
  void *v8;

  v3 = a2;
  v4 = a1;
  objc_msgSend(getUIDocumentInteractionControllerSubclass(), "interactionControllerWithURL:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  UIDocumentInteractionControllerSubclass = (objc_class *)getUIDocumentInteractionControllerSubclass();
  InstanceVariable = class_getInstanceVariable(UIDocumentInteractionControllerSubclass, "_wf_openCompletionHandler");
  v8 = (void *)objc_msgSend(v3, "copy");

  object_setIvarWithStrongDefault(v5, InstanceVariable, v8);
  return v5;
}

id getUIDocumentInteractionControllerSubclass()
{
  if (getUIDocumentInteractionControllerSubclass_onceToken != -1)
    dispatch_once(&getUIDocumentInteractionControllerSubclass_onceToken, &__block_literal_global_25807);
  return (id)getUIDocumentInteractionControllerSubclass_dynamicSubclass;
}

void __getUIDocumentInteractionControllerSubclass_block_invoke()
{
  objc_class *UIDocumentInteractionControllerClass;

  UIDocumentInteractionControllerClass = getUIDocumentInteractionControllerClass();
  getUIDocumentInteractionControllerSubclass_dynamicSubclass = (uint64_t)objc_allocateClassPair(UIDocumentInteractionControllerClass, "_WFUIDocumentInteractionController", 0);
  class_addIvar((Class)getUIDocumentInteractionControllerSubclass_dynamicSubclass, "_wf_openCompletionHandler", 8uLL, 3u, "@");
  class_addMethod((Class)getUIDocumentInteractionControllerSubclass_dynamicSubclass, sel_openResourceOperationDidComplete_, (IMP)WFOpenOperationDidComplete, "v@:@");
  class_addMethod((Class)getUIDocumentInteractionControllerSubclass_dynamicSubclass, sel_openResourceOperation_didFailWithError_, (IMP)WFOpenOperationDidFailWithError, "v@:@@");
  objc_registerClassPair((Class)getUIDocumentInteractionControllerSubclass_dynamicSubclass);
}

id UIDocumentInteractionControllerFunction()
{
  return (id)classUIDocumentInteractionController;
}

Class initUIDocumentInteractionController()
{
  Class result;

  if (UIKitLibrary_sOnce_25814 != -1)
    dispatch_once(&UIKitLibrary_sOnce_25814, &__block_literal_global_40);
  result = objc_getClass("UIDocumentInteractionController");
  classUIDocumentInteractionController = (uint64_t)result;
  getUIDocumentInteractionControllerClass = (uint64_t (*)())UIDocumentInteractionControllerFunction;
  return result;
}

void WFOpenOperationDidComplete(void *a1)
{
  id v1;
  objc_class *UIDocumentInteractionControllerSubclass;
  objc_ivar *InstanceVariable;
  void *v4;
  id v5;

  v1 = a1;
  UIDocumentInteractionControllerSubclass = (objc_class *)getUIDocumentInteractionControllerSubclass();
  InstanceVariable = class_getInstanceVariable(UIDocumentInteractionControllerSubclass, "_wf_openCompletionHandler");
  object_getIvar(v1, InstanceVariable);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  object_setIvar(v1, InstanceVariable, 0);

  v4 = v5;
  if (v5)
  {
    (*((void (**)(id, uint64_t))v5 + 2))(v5, 1);
    v4 = v5;
  }

}

void WFOpenOperationDidFailWithError(void *a1)
{
  id v1;
  objc_class *UIDocumentInteractionControllerSubclass;
  objc_ivar *InstanceVariable;
  void *v4;
  id v5;

  v1 = a1;
  UIDocumentInteractionControllerSubclass = (objc_class *)getUIDocumentInteractionControllerSubclass();
  InstanceVariable = class_getInstanceVariable(UIDocumentInteractionControllerSubclass, "_wf_openCompletionHandler");
  object_getIvar(v1, InstanceVariable);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  object_setIvar(v1, InstanceVariable, 0);

  v4 = v5;
  if (v5)
  {
    (*((void (**)(id, _QWORD))v5 + 2))(v5, 0);
    v4 = v5;
  }

}

void sub_1C19C7630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19C8D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19C93B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19C958C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMPMediaItemCollectionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMPMediaItemCollectionClass_softClass;
  v7 = getMPMediaItemCollectionClass_softClass;
  if (!getMPMediaItemCollectionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMPMediaItemCollectionClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getMPMediaItemCollectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C19C972C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getMPMediaItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemDescriptor+Library.m"), 16, CFSTR("Unable to find class %s"), "MPMediaItem");

    __break(1u);
  }
}

void *MediaPlayerLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!MediaPlayerLibraryCore_frameworkLibrary)
    MediaPlayerLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)MediaPlayerLibraryCore_frameworkLibrary;
  if (!MediaPlayerLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaPlayerLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFMediaItemDescriptor+Library.m"), 14, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getMPMediaItemCollectionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaItemCollection");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaItemCollectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaItemCollectionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemDescriptor+Library.m"), 17, CFSTR("Unable to find class %s"), "MPMediaItemCollection");

    __break(1u);
  }
}

id getMPMediaPropertyPredicateClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMPMediaPropertyPredicateClass_softClass;
  v7 = getMPMediaPropertyPredicateClass_softClass;
  if (!getMPMediaPropertyPredicateClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMPMediaPropertyPredicateClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getMPMediaPropertyPredicateClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C19C9A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WFGroupingPropertyForMediaType(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v7[7];
  _QWORD v8[8];

  v8[7] = *MEMORY[0x1E0C80C00];
  v7[0] = CFSTR("Album");
  v7[1] = CFSTR("Playlist");
  v8[0] = &unk_1E7B8B500;
  v8[1] = &unk_1E7B8B518;
  v7[2] = CFSTR("Song");
  v7[3] = CFSTR("Artist");
  v8[2] = &unk_1E7B8B530;
  v8[3] = &unk_1E7B8B548;
  v7[4] = CFSTR("Genre");
  v7[5] = CFSTR("Compilation");
  v8[4] = &unk_1E7B8B560;
  v8[5] = &unk_1E7B8B500;
  v7[6] = CFSTR("Composer");
  v8[6] = &unk_1E7B8B578;
  v1 = (void *)MEMORY[0x1E0C99D80];
  v2 = a1;
  objc_msgSend(v1, "dictionaryWithObjects:forKeys:count:", v8, v7, 7);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "integerValue");
  return v5;
}

void getMPMediaItemPropertyTitle()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getMPMediaItemPropertyTitleSymbolLoc_ptr;
  v8 = getMPMediaItemPropertyTitleSymbolLoc_ptr;
  if (!getMPMediaItemPropertyTitleSymbolLoc_ptr)
  {
    v1 = MediaPlayerLibrary();
    v0 = (id *)dlsym(v1, "MPMediaItemPropertyTitle");
    v6[3] = (uint64_t)v0;
    getMPMediaItemPropertyTitleSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getMPMediaItemPropertyTitle(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFMediaItemDescriptor+Library.m"), 27, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C19C9C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMPMediaQueryClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMPMediaQueryClass_softClass;
  v7 = getMPMediaQueryClass_softClass;
  if (!getMPMediaQueryClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMPMediaQueryClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getMPMediaQueryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C19C9D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getMPMediaQueryClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaQuery");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaQueryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaQueryClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemDescriptor+Library.m"), 18, CFSTR("Unable to find class %s"), "MPMediaQuery");

    __break(1u);
  }
}

void __getMPMediaPropertyPredicateClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaPropertyPredicate");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaPropertyPredicateClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaPropertyPredicateClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemDescriptor+Library.m"), 15, CFSTR("Unable to find class %s"), "MPMediaPropertyPredicate");

    __break(1u);
  }
}

void sub_1C19CAEBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1C19CEAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C19CEE7C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id WFSerializedParametersForDonatedIntent(void *a1, int a2, char a3, void *a4, void *a5)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  WFCodableAttributeBackedSubstitutableState *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  WFCodableAttributeBackedSubstitutableState *v32;
  void *v33;
  void *v34;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v44;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint8_t buf[4];
  const char *v51;
  __int16 v52;
  WFCodableAttributeBackedSubstitutableState *v53;
  __int16 v54;
  void *v55;
  __int16 v56;
  void *v57;
  __int16 v58;
  void *v59;
  _BYTE v60[128];
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v44 = a4;
  v41 = a5;
  objc_msgSend(v7, "_codableDescription");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "isConfigurable") & 1) == 0 && (objc_msgSend(v8, "isEligibleForWidgets") & 1) == 0 && !a2)
  {
    v9 = 0;
    goto LABEL_39;
  }
  v39 = v8;
  v40 = (void *)objc_opt_new();
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  objc_msgSend(v8, "displayOrderedAttributes");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v46, v60, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v47;
    v42 = v7;
LABEL_7:
    v14 = 0;
    while (1)
    {
      if (*(_QWORD *)v47 != v13)
        objc_enumerationMutation(v10);
      v15 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * v14);
      objc_msgSend(v15, "propertyName", v36);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v16, "isEqualToString:", CFSTR("_metadata"));

      if ((v17 & 1) != 0)
        goto LABEL_29;
      objc_msgSend(v15, "propertyName");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "valueForKey:", v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      if (v19)
      {
        if ((objc_msgSend(v15, "isConfigurable") & 1) == 0 && (a2 & 1) == 0)
        {
          if ((a3 & 1) == 0)
          {
            getWFGeneralLogObject();
            v30 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
            {
              objc_msgSend(v7, "launchId");
              v32 = (WFCodableAttributeBackedSubstitutableState *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v7, "_className");
              v33 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "propertyName");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 136315906;
              v51 = "WFSerializedParametersForDonatedIntent";
              v52 = 2114;
              v53 = v32;
              v54 = 2114;
              v55 = v33;
              v56 = 2114;
              v57 = v34;
              _os_log_impl(&dword_1C15B3000, v30, OS_LOG_TYPE_DEFAULT, "%s Skipping migration for donated intent: %{public}@ - %{public}@, because the intent has a value for %{public}@, but that parameter isn't configurable, so data loss would occur.", buf, 0x2Au);

              v7 = v42;
            }

            v9 = 0;
            v8 = v39;
            v29 = v40;
            goto LABEL_38;
          }
          goto LABEL_28;
        }
        objc_msgSend(v15, "propertyName");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v44, "objectForKey:", v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();

        if (v21)
          break;
      }
LABEL_28:

LABEL_29:
      if (v12 == ++v14)
      {
        v28 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v46, v60, 16);
        v12 = v28;
        if (v28)
          goto LABEL_7;
        goto LABEL_34;
      }
    }
    if (objc_msgSend(v15, "supportsDynamicEnumeration"))
    {
      v22 = -[WFCodableAttributeBackedSubstitutableState initWithValue:codableAttribute:stringLocalizer:]([WFCodableAttributeBackedSubstitutableState alloc], "initWithValue:codableAttribute:stringLocalizer:", v19, v15, v41);
      -[WFCodableAttributeBackedSubstitutableState serializedRepresentation](v22, "serializedRepresentation");
      v23 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v21, "definition");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "wf_parameterStateForIntentValue:parameterDefinition:", v19, v24);
      v22 = (WFCodableAttributeBackedSubstitutableState *)objc_claimAutoreleasedReturnValue();

      if (!v22)
      {
LABEL_26:

        v7 = v42;
        goto LABEL_27;
      }
      objc_msgSend(v21, "stateClass");
      v25 = (void *)objc_opt_class();
      if ((objc_msgSend(v25, "isSubclassOfClass:", objc_opt_class()) & 1) == 0)
      {
        v26 = (void *)objc_opt_class();
        objc_msgSend(v21, "stateClass");
        if ((objc_msgSend(v26, "isSubclassOfClass:", objc_opt_class()) & 1) == 0)
        {
          getWFGeneralLogObject();
          v27 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT))
          {
            NSStringFromClass((Class)objc_msgSend(v21, "stateClass"));
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v21, "key");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "propertyName");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 136316162;
            v51 = "WFSerializedParametersForDonatedIntent";
            v52 = 2114;
            v53 = v22;
            v54 = 2114;
            v55 = v38;
            v56 = 2114;
            v57 = v37;
            v58 = 2114;
            v59 = v36;
            _os_log_impl(&dword_1C15B3000, v27, OS_LOG_TYPE_FAULT, "%s Incorrect parameter state type found when converting donated intent to custom intent: %{public}@, expected %{public}@. Parameter: %{public}@, Intent slot: %{public}@", buf, 0x34u);

          }
LABEL_25:

          goto LABEL_26;
        }
      }
      -[WFCodableAttributeBackedSubstitutableState serializedRepresentation](v22, "serializedRepresentation");
      v23 = objc_claimAutoreleasedReturnValue();
      v7 = v42;
    }

    if (!v23)
    {
LABEL_27:

      goto LABEL_28;
    }
    objc_msgSend(v21, "key");
    v27 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "setObject:forKey:", v23, v27);
    v22 = (WFCodableAttributeBackedSubstitutableState *)v23;
    goto LABEL_25;
  }
LABEL_34:

  v29 = v40;
  v9 = v40;
  v8 = v39;
LABEL_38:

LABEL_39:
  return v9;
}

uint64_t __Block_byref_object_copy__26572(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26573(uint64_t a1)
{

}

uint64_t WFCustomIntentTypeName(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%@.%@"), *MEMORY[0x1E0CBDD68], a1, a2);
}

void WFMigrateDropboxAction(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v5 = a3;
  v6 = a1;
  objc_msgSend(v6, "setObject:forKey:", a2, CFSTR("WFWorkflowActionIdentifier"));
  objc_msgSend(v6, "objectForKey:", CFSTR("WFWorkflowActionParameters"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "setObject:forKey:", CFSTR("Dropbox"), CFSTR("WFFileStorageService"));
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __WFMigrateDropboxAction_block_invoke;
  v9[3] = &unk_1E7AF4688;
  v10 = v7;
  v8 = v7;
  objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v9);

}

id WFGallerySharingURLForIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://www.icloud.com/shortcuts"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v1)
  {
    WFGallerySharingIdentifierForRecordName(v1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "URLByAppendingPathComponent:", v4);
    v5 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = v2;
  }

  return v5;
}

id WFGallerySharingIdentifierForRecordName(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-"), &stru_1E7AFA810);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "lowercaseString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void initTCCAccessRequest(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t (*v5)();
  void *v6;
  id v7;

  v7 = a3;
  if (TCCLibrary_sOnce[0] != -1)
    dispatch_once(TCCLibrary_sOnce, &__block_literal_global_27945);
  v5 = (uint64_t (*)())dlsym((void *)TCCLibrary_sLib, "TCCAccessRequest");
  softLinkTCCAccessRequest = v5;
  v6 = v7;
  if (v5)
  {
    ((void (*)(uint64_t, uint64_t, id))v5)(a1, a2, v7);
    v6 = v7;
  }

}

void sub_1C19DABA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__28071(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28072(uint64_t a1)
{

}

void getEKEventStoreChangedNotification()
{
  id *v0;
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getEKEventStoreChangedNotificationSymbolLoc_ptr;
  v8 = getEKEventStoreChangedNotificationSymbolLoc_ptr;
  if (!getEKEventStoreChangedNotificationSymbolLoc_ptr)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __getEKEventStoreChangedNotificationSymbolLoc_block_invoke;
    v4[3] = &unk_1E7AF9520;
    v4[4] = &v5;
    __getEKEventStoreChangedNotificationSymbolLoc_block_invoke(v4);
    v0 = (id *)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v1 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNotificationName getEKEventStoreChangedNotification(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFCalendarPickerParameter.m"), 21, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C19DB00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getEKEventStoreChangedNotificationSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!EventKitLibraryCore_frameworkLibrary)
    EventKitLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)EventKitLibraryCore_frameworkLibrary;
  if (!EventKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *EventKitLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFCalendarPickerParameter.m"), 20, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "EKEventStoreChangedNotification");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getEKEventStoreChangedNotificationSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1C19DD004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNContactClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!ContactsLibraryCore_frameworkLibrary_28466)
    ContactsLibraryCore_frameworkLibrary_28466 = _sl_dlopen();
  if (!ContactsLibraryCore_frameworkLibrary_28466)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFMessageTrigger.m"), 16, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CNContact");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNContactClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFMessageTrigger.m"), 17, CFSTR("Unable to find class %s"), "CNContact");

LABEL_8:
    __break(1u);
  }
  getCNContactClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C19DE31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getUIImageSymbolConfigurationClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  UIKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("UIImageSymbolConfiguration");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getUIImageSymbolConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIImageSymbolConfigurationClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFExternalDisplayTrigger.m"), 18, CFSTR("Unable to find class %s"), "UIImageSymbolConfiguration");

    __break(1u);
  }
}

void __getUIImageClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  UIKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("UIImage");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getUIImageClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIImageClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFExternalDisplayTrigger.m"), 19, CFSTR("Unable to find class %s"), "UIImage");

    __break(1u);
  }
}

void UIKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!UIKitLibraryCore_frameworkLibrary)
    UIKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!UIKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFExternalDisplayTrigger.m"), 17, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

uint64_t WFREPBRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 8;
      }
      else
      {
        if ((_DWORD)v17 != 3)
        {
          if ((_DWORD)v17 == 2)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              LODWORD(v20) = 0;
LABEL_36:
            *(_DWORD *)(a1 + 24) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 16;
      }
      v26 = *(void **)(a1 + v25);
      *(_QWORD *)(a1 + v25) = v24;

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBAddAutomationActionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_31;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_31;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_31:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_33;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_35;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_35:
      *(_DWORD *)(a1 + 16) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBRunActionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  BOOL v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_50;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_50;
        case 5u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 76) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_54:
          v39 = v22 != 0;
          v40 = 72;
          goto LABEL_63;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_50;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_50;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_50;
        case 9u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 76) |= 2u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_58:
          v39 = v28 != 0;
          v40 = 73;
          goto LABEL_63;
        case 0xAu:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 76) |= 4u;
          break;
        case 0xBu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_50;
        case 0xCu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_50;
        case 0xDu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_50:
          v38 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
        *(_QWORD *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0)
          goto LABEL_60;
        v32 += 7;
        v14 = v33++ >= 9;
        if (v14)
        {
          v34 = 0;
          goto LABEL_62;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
      if (*(_BYTE *)(a2 + *v5))
        v34 = 0;
LABEL_62:
      v39 = v34 != 0;
      v40 = 74;
LABEL_63:
      *(_BYTE *)(a1 + v40) = v39;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MTLEqualObjects(void *a1, void *a2)
{
  if (a1 == a2)
    return 1;
  else
    return objc_msgSend(a1, "isEqual:", a2);
}

const __CFString *WFActionIdentifierForSelectingContentOfType(void *a1)
{
  void *v3;
  void *v4;

  if (!a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString * _Nullable WFActionIdentifierForSelectingContentOfType(Class  _Nonnull __unsafe_unretained)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFActionRegistry+ContentSelection.m"), 34, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("contentItemClass"));

  }
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.file.select");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.ask");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.date");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.selectphoto");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.selectcontacts");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.selectemail");
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return CFSTR("is.workflow.actions.exportsong");
  if (objc_msgSend(a1, "isEqual:", objc_opt_class()))
    return CFSTR("is.workflow.actions.selectphone");
  return 0;
}

id WFSyncedDefinitionDirectoryURL()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "wf_realLibraryDirectoryURL");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "URLByAppendingPathComponent:", CFSTR("SyncedIntentDefinitions"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id WFDefinitionDirectoryURLForBundleIdentifier(void *a1, void *a2)
{
  void *v2;
  void *v3;

  WFDefinitionDirectoryURLsForBundleIdentifier(a1, a2, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "anyObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFDefinitionDirectoryURLsForBundleIdentifier(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  objc_msgSend(v5, "URLByAppendingPathComponent:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "addObject:", v8);

  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CBD758], "sharedResolver");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "counterpartIdentifiersForLocalIdentifier:", v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v18;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v18 != v13)
            objc_enumerationMutation(v10);
          objc_msgSend(v5, "URLByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v14));
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "addObject:", v15);

          ++v14;
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v12);
    }

  }
  return v7;
}

uint64_t WFIsSyncedIntentDefinitionURL(void *a1)
{
  id v1;
  void *v2;
  _BOOL4 IsTransitivelyContainedInDirectory;
  void *v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;

  v1 = a1;
  WFSyncedDefinitionDirectoryURL();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsTransitivelyContainedInDirectory = WFFileIsTransitivelyContainedInDirectory(v2, v1);

  WFBundledDefinitionDirectoryURL();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = WFFileIsTransitivelyContainedInDirectory(v4, v1);

  objc_msgSend(v1, "pathExtension");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "isEqualToString:", CFSTR("intentdefinition")) & (IsTransitivelyContainedInDirectory
                                                                                     || v5);

  return v7;
}

BOOL WFFileIsTransitivelyContainedInDirectory(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  _BOOL8 v8;
  id v10;
  uint64_t v11;
  uint8_t buf[4];
  const char *v13;
  __int16 v14;
  id v15;
  __int16 v16;
  id v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v11 = 2;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  objc_msgSend(v5, "getRelationship:ofDirectoryAtURL:toItemAtURL:error:", &v11, v3, v4, &v10);
  v6 = v10;

  if (v6 && (objc_msgSend(v6, "vc_isFileNotFound") & 1) == 0)
  {
    getWFGeneralLogObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      v13 = "WFFileIsTransitivelyContainedInDirectory";
      v14 = 2112;
      v15 = v3;
      v16 = 2112;
      v17 = v4;
      v18 = 2112;
      v19 = v6;
      _os_log_impl(&dword_1C15B3000, v7, OS_LOG_TYPE_ERROR, "%s Error getting relationship between directory (%@) and file (%@): %@", buf, 0x2Au);
    }

  }
  v8 = v11 == 0;

  return v8;
}

id WFBundledDefinitionDirectoryURL()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundleURL");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "URLByAppendingPathComponent:", CFSTR("BundledIntentDefinitions"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1C19E8D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWFUserSettingsClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!WebContentAnalysisLibraryCore_frameworkLibrary)
    WebContentAnalysisLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!WebContentAnalysisLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WebContentAnalysisLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFScreenTimeHelper.m"), 16, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("WFUserSettings");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFUserSettingsClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFScreenTimeHelper.m"), 17, CFSTR("Unable to find class %s"), "WFUserSettings");

LABEL_8:
    __break(1u);
  }
  getWFUserSettingsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

BOOL WFREPBAskWhenRunRequestResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  WFREPBKeyValuePair *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 4)
        break;
      if ((_DWORD)v17 == 3)
      {
        v19 = objc_alloc_init(WFREPBKeyValuePair);
        objc_msgSend((id)a1, "addInputtedStates:", v19);
        if (!PBReaderPlaceMark() || !WFREPBKeyValuePairReadFrom((uint64_t)v19, a2))
          goto LABEL_33;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_28;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(WFREPBKeyValuePair **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v18;
LABEL_28:

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_30:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v19 = objc_alloc_init(WFREPBError);
    objc_storeStrong((id *)(a1 + 8), v19);
    if (!PBReaderPlaceMark() || (WFREPBErrorReadFrom((uint64_t)v19, a2) & 1) == 0)
    {
LABEL_33:

      return 0;
    }
    goto LABEL_27;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C19EA1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNFHardwareManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!NearFieldLibraryCore_frameworkLibrary)
    NearFieldLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!NearFieldLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *NearFieldLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFNFCTrigger.m"), 18, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("NFHardwareManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getNFHardwareManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFNFCTrigger.m"), 19, CFSTR("Unable to find class %s"), "NFHardwareManager");

LABEL_8:
    __break(1u);
  }
  getNFHardwareManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C19EC4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C19EC6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__30861(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__30862(uint64_t a1)
{

}

BOOL WFPBGallerySessionSearchEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C19EE000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

id HFTriggerActionSetsBuilderFunction_31068()
{
  return (id)classHFTriggerActionSetsBuilder_31077;
}

Class initHFTriggerActionSetsBuilder_31069()
{
  Class result;

  if (HomeLibrary_sOnce_31075 != -1)
    dispatch_once(&HomeLibrary_sOnce_31075, &__block_literal_global_235);
  result = objc_getClass("HFTriggerActionSetsBuilder");
  classHFTriggerActionSetsBuilder_31077 = (uint64_t)result;
  getHFTriggerActionSetsBuilderClass_31067 = (uint64_t (*)())HFTriggerActionSetsBuilderFunction_31068;
  return result;
}

uint64_t __Block_byref_object_copy__31084(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__31085(uint64_t a1)
{

}

id HMErrorDomainFunction()
{
  return (id)constantHMErrorDomain;
}

id initHMErrorDomain()
{
  id *v0;

  if (HomeKitLibrary_sOnce_31097 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_31097, &__block_literal_global_31098);
  v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_31099, "HMErrorDomain");
  if (!v0)
    __assert_rtn("initHMErrorDomain", "WFHomeAccessoryAction.m", 41, "constant");
  objc_storeStrong((id *)&constantHMErrorDomain, *v0);
  getHMErrorDomain = (uint64_t (*)())HMErrorDomainFunction;
  return (id)constantHMErrorDomain;
}

void WFBackgroundShortcutRunnerMakeResult(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void (**v13)(id, uint64_t);
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void (**v18)(id, uint64_t);
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void (**v26)(id, WFHarnessTestRunResult *);
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  char v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  WFHarnessTestRunResult *v56;
  id v57;
  id v58;
  void *v59;
  void (**v60)(id, WFHarnessTestRunResult *);
  id v61;
  id v62;
  void *v63;
  void *v64;
  _QWORD v65[4];
  id v66;
  id v67;
  void (**v68)(id, uint64_t);
  uint64_t v69;
  BOOL v70;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  if (objc_msgSend(v9, "outputBehavior") == 1)
  {
    v14 = objc_msgSend(objc_alloc(MEMORY[0x1E0DC7E68]), "initWithError:", v12);
LABEL_27:
    v24 = (id)v14;
    v13[2](v13, v14);
LABEL_28:

    goto LABEL_29;
  }
  v15 = v9;
  if (!v15)
    goto LABEL_26;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    v23 = v15;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v24 = v23;
      v62 = v10;
      v25 = v12;
      v26 = v13;
      v64 = v25;
      if (v26)
      {
        if (v25)
        {
LABEL_12:
          v60 = v26;
          v27 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
          objc_msgSend(v25, "localizedFailureReason");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = objc_msgSend(v28, "length");

          if (v29)
          {
            objc_msgSend(v25, "localizedFailureReason");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "appendString:", v30);

          }
          objc_msgSend(v25, "localizedDescription");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v32 = objc_msgSend(v31, "length");

          if (v32)
          {
            if (objc_msgSend(v27, "length"))
              objc_msgSend(v27, "appendString:", CFSTR("; "));
            objc_msgSend(v25, "localizedDescription");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "appendString:", v33);

          }
          objc_msgSend(v25, "localizedRecoverySuggestion");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          v35 = objc_msgSend(v34, "length");

          if (v35)
          {
            if (objc_msgSend(v27, "length"))
              objc_msgSend(v27, "appendString:", CFSTR("; "));
            objc_msgSend(v25, "localizedRecoverySuggestion");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "appendString:", v36);

          }
          if (objc_msgSend(v27, "wf_isEmpty"))
          {
            objc_msgSend(v25, "description");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "appendString:", v37);

          }
          objc_msgSend(v25, "userInfo");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "objectForKeyedSubscript:", CFSTR("WFHarnessTestErrorResult"));
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v40 = v39;
          if (v39)
          {
            v41 = v39;
          }
          else
          {
            +[WFHarnessTestResult failureWithReason:](WFHarnessTestResult, "failureWithReason:", v27);
            v41 = (id)objc_claimAutoreleasedReturnValue();
          }
          v49 = v41;

          v26 = v60;
          v50 = v62;
          goto LABEL_43;
        }
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void WFBackgroundShortcutRunnerMakeHarnessTestResult(WFHarnessTestRunRequest * _Nonnull __strong, WFContentCollection * _Nullable __strong, NSError * _Nullable __strong, WFBackgroundShortcutRunnerResultBlock  _Nonnull __strong)");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v54, "handleFailureInFunction:file:lineNumber:description:", v55, CFSTR("WFBackgroundShortcutRunnerResult.m"), 165, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("completion"));

        if (v25)
          goto LABEL_12;
      }
      v50 = v62;
      +[WFHarnessTestResult successWithOutput:](WFHarnessTestResult, "successWithOutput:", v62);
      v49 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_43:
      v56 = -[WFHarnessTestRunResult initWithTestResult:]([WFHarnessTestRunResult alloc], "initWithTestResult:", v49);
      v26[2](v26, v56);

      goto LABEL_28;
    }
LABEL_26:

    v14 = objc_msgSend(objc_alloc(MEMORY[0x1E0DC7E50]), "initWithOutput:runError:", v10, v12);
    goto LABEL_27;
  }
  v16 = v15;
  v61 = v10;
  v17 = v11;
  v58 = v12;
  v18 = v13;
  if (!v18)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void WFBackgroundShortcutRunnerMakeContextualActionsResult(WFContextualActionRunRequest * _Nonnull __strong, WFContentCollection * _Nullable __strong, NSDictionary<WFAction *,NSData *> * _Nullable __strong, NSError * _Nullable __strong, WFBackgroundShortcutRunnerResultBlock  _Nonnull __strong)");
    v52 = v17;
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v51, "handleFailureInFunction:file:lineNumber:description:", v53, CFSTR("WFBackgroundShortcutRunnerResult.m"), 115, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("completion"));

    v17 = v52;
  }
  objc_msgSend(v16, "action");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "allValues");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v63 = v16;
  v59 = v17;
  if (objc_msgSend(v20, "count") == 1)
  {
    objc_msgSend(v17, "allValues");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "firstObject");
    v22 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v22 = 0;
  }
  v57 = v11;

  v42 = objc_msgSend(v19, "outputsFiles");
  if (v61 && (v42 & 1) != 0)
  {
    v43 = objc_msgSend(v19, "resultFileOperation");
    v65[0] = MEMORY[0x1E0C809B0];
    v65[1] = 3221225472;
    v65[2] = __WFBackgroundShortcutRunnerMakeContextualActionsResult_block_invoke;
    v65[3] = &unk_1E7AF0ED8;
    v70 = v43 == 0;
    v66 = v61;
    v68 = v18;
    v69 = v43;
    v67 = v22;
    v44 = v63;
    objc_msgSend(v63, "getInputWithCompletionHandler:", v65);

    v45 = v58;
  }
  else
  {
    v46 = objc_alloc(MEMORY[0x1E0DC7E18]);
    v45 = v58;
    if (v58)
      v47 = 0;
    else
      v47 = v22;
    v48 = (void *)objc_msgSend(v46, "initWithOutput:files:runError:reversalState:", v61, 0, v58, v47);
    v18[2](v18, (uint64_t)v48);

    v44 = v63;
  }

  v11 = v57;
LABEL_29:

}

void WFGenerateContextualActionFile(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v7 = a3;
  v8 = a4;
  v9 = a2;
  objc_msgSend(v7, "wfType");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fileURL");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __WFGenerateContextualActionFile_block_invoke;
  v15[3] = &unk_1E7AF0F00;
  v18 = v8;
  v19 = a1;
  v16 = v7;
  v17 = v11;
  v12 = v11;
  v13 = v7;
  v14 = v8;
  objc_msgSend(v9, "getFileRepresentation:forType:", v15, v10);

}

void WFBackgroundShortcutRunnerMakeAllActionsResult(void *a1, uint64_t a2, void *a3, void *a4)
{
  objc_class *v6;
  void (**v7)(id, id);
  id v8;
  id v9;
  id v10;

  v6 = (objc_class *)MEMORY[0x1E0DC7968];
  v7 = a4;
  v8 = a3;
  v9 = a1;
  v10 = (id)objc_msgSend([v6 alloc], "initWithActionOutputs:runError:", v9, v8);

  v7[2](v7, v10);
}

id HMServiceFunction()
{
  return (id)classHMService;
}

Class initHMService()
{
  Class result;

  if (HomeKitLibrary_sOnce_31756 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_31756, &__block_literal_global_31757);
  result = objc_getClass("HMService");
  classHMService = (uint64_t)result;
  getHMServiceClass = (uint64_t (*)())HMServiceFunction;
  return result;
}

__CFString *WFExecutionPlatformForDeviceIdiom(unint64_t a1)
{
  if (a1 > 5)
    return 0;
  else
    return off_1E7AF12C8[a1];
}

uint64_t WFDeviceIdiomForExecutionPlatform(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Phone")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Pad")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Desktop")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Watch")) & 1) != 0)
  {
    v2 = 3;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("XR")))
  {
    v2 = 5;
  }
  else
  {
    v2 = -1;
  }

  return v2;
}

void sub_1C19F6978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C19F6E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C19F72D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getMPMediaPropertyPredicateClass_block_invoke_32277(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary_32294();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaPropertyPredicate");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaPropertyPredicateClass_softClass_32276 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaPropertyPredicateClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFiTunesObjectContentItem.m"), 23, CFSTR("Unable to find class %s"), "MPMediaPropertyPredicate");

    __break(1u);
  }
}

void __getMPMediaQueryClass_block_invoke_32280(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary_32294();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaQuery");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaQueryClass_softClass_32279 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaQueryClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFiTunesObjectContentItem.m"), 22, CFSTR("Unable to find class %s"), "MPMediaQuery");

    __break(1u);
  }
}

void MediaPlayerLibrary_32294()
{
  void *v0;
  void *v1;
  void *v2;

  if (!MediaPlayerLibraryCore_frameworkLibrary_32302)
    MediaPlayerLibraryCore_frameworkLibrary_32302 = _sl_dlopen();
  if (!MediaPlayerLibraryCore_frameworkLibrary_32302)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaPlayerLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFiTunesObjectContentItem.m"), 20, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

uint64_t __Block_byref_object_copy__32311(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32312(uint64_t a1)
{

}

id WFPossibleArtworkURLsForArtworkURL(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  id v10;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0DC7B30];
  objc_msgSend(v1, "lastPathComponent");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "typeFromFilename:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "conformsToUTType:", *MEMORY[0x1E0CEC530]);

  if (v5)
  {
    objc_msgSend(v1, "URLByDeletingPathExtension");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "URLByAppendingPathExtension:", CFSTR("png"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    v11[0] = v7;
    v11[1] = v1;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v10 = v1;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v10, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v8;
}

uint64_t WFPBAddAutomationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  BOOL v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_36;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_36;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_36;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_36;
        case 5u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 84) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_56:
          *(_DWORD *)(a1 + 8) = v22;
          continue;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_36;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_36;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_36;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_36:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 0xAu:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 84) |= 4u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  v29 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v29 = 0;
LABEL_60:
          v39 = v29 != 0;
          v40 = 81;
          goto LABEL_65;
        case 0xBu:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 84) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
        *(_QWORD *)(a2 + v36) = v37 + 1;
        v35 |= (unint64_t)(v38 & 0x7F) << v33;
        if ((v38 & 0x80) == 0)
          goto LABEL_62;
        v33 += 7;
        v14 = v34++ >= 9;
        if (v14)
        {
          v35 = 0;
          goto LABEL_64;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        v35 = 0;
LABEL_64:
      v39 = v35 != 0;
      v40 = 80;
LABEL_65:
      *(_BYTE *)(a1 + v40) = v39;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBRemoteExecutionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_26;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_26;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_26;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_26;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_26:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 6u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_37;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          v23 = 0;
          goto LABEL_39;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_39:
      *(_BYTE *)(a1 + 48) = v23 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C19FC3F8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1C19FC98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__33076(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33077(uint64_t a1)
{

}

void sub_1C19FE594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 192), 8);
  _Block_object_dispose((const void *)(v37 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t WFCompareBundleVersions(void *a1, void *a2)
{
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;

  v3 = a1;
  v4 = a2;
  if (v3)
    v5 = v3;
  else
    v5 = CFSTR("0");
  if (v4)
    v6 = v4;
  else
    v6 = CFSTR("0");
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3900]), "initWithString:", v5);
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3900]), "initWithString:", v6);
  v13 = 0;
  v14 = 0;
  v9 = 1;
  while (!objc_msgSend(v7, "isAtEnd", v13) || (objc_msgSend(v8, "isAtEnd") & 1) == 0)
  {
    if (objc_msgSend(v7, "isAtEnd"))
    {
      v14 = 0;
    }
    else if (!objc_msgSend(v7, "scanUnsignedLongLong:", &v14))
    {
      goto LABEL_36;
    }
    if (objc_msgSend(v8, "isAtEnd"))
    {
      v10 = 0;
      v13 = 0;
    }
    else
    {
      if (!objc_msgSend(v8, "scanUnsignedLongLong:", &v13))
        goto LABEL_36;
      v10 = v13;
    }
    v11 = v14;
    if ((objc_msgSend(v7, "isAtEnd", v13) & 1) == 0
      && !objc_msgSend(v7, "scanString:intoString:", CFSTR("."), 0)
      || (objc_msgSend(v8, "isAtEnd") & 1) == 0
      && !objc_msgSend(v8, "scanString:intoString:", CFSTR("."), 0))
    {
      goto LABEL_36;
    }
    if (v11 != v10)
    {
      if (v11 > v10)
        v9 = 2;
      else
        v9 = 3;
      break;
    }
  }
  if ((objc_msgSend(v7, "isAtEnd") & 1) != 0)
  {
LABEL_30:
    if ((objc_msgSend(v8, "isAtEnd") & 1) != 0)
      goto LABEL_37;
    while (objc_msgSend(v8, "scanUnsignedLongLong:", 0)
         && ((objc_msgSend(v8, "isAtEnd") & 1) != 0
          || objc_msgSend(v8, "scanString:intoString:", CFSTR("."), 0)))
    {
      if (objc_msgSend(v8, "isAtEnd"))
        goto LABEL_37;
    }
  }
  else
  {
    while (objc_msgSend(v7, "scanUnsignedLongLong:", 0)
         && ((objc_msgSend(v7, "isAtEnd") & 1) != 0
          || objc_msgSend(v7, "scanString:intoString:", CFSTR("."), 0)))
    {
      if ((objc_msgSend(v7, "isAtEnd") & 1) != 0)
        goto LABEL_30;
    }
  }
LABEL_36:
  v9 = 0;
LABEL_37:

  return v9;
}

id WFMaximumBundleVersion(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a1;
  v4 = a2;
  v5 = WFCompareBundleVersions(v3, v4);
  if (v5)
  {
    if (v5 == 2)
      v6 = v3;
    else
      v6 = v4;
    v7 = v6;
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id WFConvertToBundleString(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = v1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v3 = 0;
      goto LABEL_7;
    }
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%llu"), objc_msgSend(v1, "unsignedLongLongValue"));
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  v3 = v2;
LABEL_7:

  return v3;
}

BOOL WFBundleVersionGreaterThan(void *a1, void *a2)
{
  return WFCompareBundleVersions(a1, a2) == 2;
}

BOOL WFBundleVersionGreaterThanOrEqual(void *a1, void *a2)
{
  return (unint64_t)(WFCompareBundleVersions(a1, a2) - 1) < 2;
}

BOOL WFBundleVersionLessThan(void *a1, void *a2)
{
  return WFCompareBundleVersions(a1, a2) == 3;
}

uint64_t WFBundleVersionLessThanOrEqual(void *a1, void *a2)
{
  return WFCompareBundleVersions(a1, a2) & 1;
}

BOOL WFBundleVersionEqual(void *a1, void *a2)
{
  return WFCompareBundleVersions(a1, a2) == 1;
}

BOOL WFREPBDialogRequestResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WFREPBError *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
LABEL_26:
        v20 = *(WFREPBError **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_29:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v20 = objc_alloc_init(WFREPBError);
    objc_storeStrong((id *)(a1 + 16), v20);
    if (!PBReaderPlaceMark() || (WFREPBErrorReadFrom((uint64_t)v20, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_27;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id HFTriggerActionSetsBuilderFunction_33840()
{
  return (id)classHFTriggerActionSetsBuilder_33845;
}

Class initHFTriggerActionSetsBuilder_33841()
{
  Class result;

  if (HomeLibrary_sOnce_33842 != -1)
    dispatch_once(&HomeLibrary_sOnce_33842, &__block_literal_global_216_33843);
  result = objc_getClass("HFTriggerActionSetsBuilder");
  classHFTriggerActionSetsBuilder_33845 = (uint64_t)result;
  getHFTriggerActionSetsBuilderClass_33839 = (uint64_t (*)())HFTriggerActionSetsBuilderFunction_33840;
  return result;
}

id HMActionSetFunction()
{
  return (id)classHMActionSet;
}

Class initHMActionSet()
{
  Class result;

  if (HomeKitLibrary_sOnce_33850 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_33850, &__block_literal_global_213);
  result = objc_getClass("HMActionSet");
  classHMActionSet = (uint64_t)result;
  getHMActionSetClass = (uint64_t (*)())HMActionSetFunction;
  return result;
}

uint64_t WFPBGlyphSelectionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_34;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            v22 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_36:
        *(_BYTE *)(a1 + 24) = v22 != 0;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 8;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 16;
        }
        v26 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFWorkflowTypesContainsInputType(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v6;
  void *v7;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFWorkflowTypesContainsInputType(NSArray<WFWorkflowTypeName> * _Nonnull __strong)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFWorkflow.m"), 1333, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("workflowTypes"));

  }
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", *MEMORY[0x1E0DC84F0], *MEMORY[0x1E0DC8500], *MEMORY[0x1E0DC84F8], 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "intersectsSet:", v3);

  return v4;
}

uint64_t WFActionShouldBeIncludedInSummary(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = WFActionShouldBeIncludedInSummary_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&WFActionShouldBeIncludedInSummary_onceToken, &__block_literal_global_341);
  v3 = (void *)WFActionShouldBeIncludedInSummary_ignoredActionIdentifiers;
  objc_msgSend(v2, "identifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v3, "containsObject:", v4) ^ 1;
  return v5;
}

void sub_1C1A0A1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWFWorkflowLogObject()
{
  if (getWFWorkflowLogObject_onceToken != -1)
    dispatch_once(&getWFWorkflowLogObject_onceToken, &__block_literal_global_34301);
  return (id)getWFWorkflowLogObject_log;
}

void __getWFWorkflowLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "Workflow");
  v1 = (void *)getWFWorkflowLogObject_log;
  getWFWorkflowLogObject_log = (uint64_t)v0;

}

void sub_1C1A0A46C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id WFVariableSubstitutableParameterStateUpcast(void *a1)
{
  id v1;
  void *v3;
  void *v4;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFVariableSubstitutableParameterState * _Nonnull WFVariableSubstitutableParameterStateUpcast(id<WFParameterState>  _Nonnull __strong)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFVariableSubstitutableParameterState.m"), 175, CFSTR("State passed to WFVariableSubstitutableParameterStateUpcast must be a subclass of WFVariableSubstitutableParameterState"));

  }
  return v1;
}

id WFVariableSubstitutableParameterStateDowncast(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;

  return v2;
}

uint64_t WFRecoverDatabaseContentsIfNeeded(void *a1, _QWORD *a2)
{
  id v2;
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t j;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  int v30;
  void *v31;
  NSObject *v32;
  void *v33;
  char v34;
  NSObject *v35;
  id v36;
  void *v37;
  NSObject *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  int v44;
  NSObject *v45;
  NSObject *v46;
  id v47;
  void *v48;
  int v49;
  NSObject *v50;
  NSObject *v51;
  _BOOL4 v52;
  NSObject *v53;
  NSObject *v54;
  void *v55;
  NSObject *v56;
  NSObject *v57;
  NSObject *v59;
  void *v60;
  void *context;
  void *v62;
  _BOOL4 v63;
  int v64;
  void *v66;
  char v67;
  NSObject *v68;
  NSObject *v69;
  NSObject *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  id v75;
  _BYTE buf[24];
  void *v77;
  id v78;
  __int128 *v79;
  uint8_t v80[4];
  const char *v81;
  __int16 v82;
  NSObject *v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v60 = (void *)os_transaction_create();
  context = (void *)MEMORY[0x1C3BB3598]();
  v70 = 0;
  v3 = v2;
  objc_msgSend(v3, "orphanedFolders");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "count"))
  {
    getWFCloudKitSyncLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "WFRestoreOrphanedFolders";
      _os_log_impl(&dword_1C15B3000, v5, OS_LOG_TYPE_DEFAULT, "%s Attempting to restore orphaned folders and misplaced shortcuts", buf, 0xCu);
    }

    objc_msgSend(v3, "collectionRecordForCollectionIdentifier:createIfNecessary:", CFSTR("Root"), 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "collectionOrdering");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "mutableCopy");

    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v9 = v4;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v71, buf, 16);
    if (v10)
    {
      v11 = *(_QWORD *)v72;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v72 != v11)
            objc_enumerationMutation(v9);
          v13 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * i);
          v14 = (void *)MEMORY[0x1C3BB3598]();
          objc_msgSend(v13, "identifier");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "addObject:", v15);

          objc_autoreleasePoolPop(v14);
        }
        v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v71, buf, 16);
      }
      while (v10);
    }

    objc_msgSend(v6, "setCollectionOrdering:", v8);
    v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC7AA8]), "initWithIdentifier:objectType:", CFSTR("Root"), 2);
    v64 = objc_msgSend(v3, "saveRecord:withDescriptor:error:", v6, v16, &v70);

    if ((v64 & 1) == 0)
    {
      getWFCloudKitSyncLogObject();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v80 = 136315394;
        v81 = "WFRestoreOrphanedFolders";
        v82 = 2114;
        v83 = v70;
        _os_log_impl(&dword_1C15B3000, v17, OS_LOG_TYPE_ERROR, "%s Failed to save root collection: %{public}@", v80, 0x16u);
      }

    }
  }
  else
  {
    v64 = 1;
  }

  v59 = v70;
  v69 = v59;
  v18 = v3;
  objc_msgSend(v18, "sortedVisibleFolders");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v66, "count"))
  {
    v63 = 1;
    goto LABEL_38;
  }
  objc_msgSend(v18, "collectionRecordForCollectionIdentifier:createIfNecessary:", CFSTR("Root"), 1);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v62, "shortcutOrdering");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)objc_msgSend(v19, "mutableCopy");

  v73 = 0u;
  v74 = 0u;
  v71 = 0u;
  v72 = 0u;
  objc_msgSend(v66, "descriptors");
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = -[NSObject countByEnumeratingWithState:objects:count:](v21, "countByEnumeratingWithState:objects:count:", &v71, buf, 16);
  v63 = v22 == 0;
  if (!v22)
    goto LABEL_36;
  v67 = 0;
  v23 = *(_QWORD *)v72;
  do
  {
    for (j = 0; j != v22; ++j)
    {
      if (*(_QWORD *)v72 != v23)
        objc_enumerationMutation(v21);
      v25 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * j);
      v26 = (void *)MEMORY[0x1C3BB3598]();
      objc_msgSend(v25, "identifier");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "collectionRecordForCollectionIdentifier:createIfNecessary:", v27, 0);
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      if (v28)
      {
        objc_msgSend(v28, "shortcutOrdering");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = objc_msgSend(v20, "intersectsOrderedSet:", v29);

        if (v30)
        {
          objc_msgSend(v28, "shortcutOrdering");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "minusOrderedSet:", v31);

          v67 = 1;
        }
      }

      objc_autoreleasePoolPop(v26);
    }
    v22 = -[NSObject countByEnumeratingWithState:objects:count:](v21, "countByEnumeratingWithState:objects:count:", &v71, buf, 16);
  }
  while (v22);

  if ((v67 & 1) != 0)
  {
    getWFCloudKitSyncLogObject();
    v32 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v80 = 136315138;
      v81 = "WFPruneShortcutsInFoldersFromRootCollection";
      _os_log_impl(&dword_1C15B3000, v32, OS_LOG_TYPE_DEFAULT, "%s Modifying ordering of root collection after pruning from root collection shortcuts that are known to be in folders", v80, 0xCu);
    }

    objc_msgSend(v62, "setShortcutOrdering:", v20);
    v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC7AA8]), "initWithIdentifier:objectType:", CFSTR("Root"), 2);
    v34 = objc_msgSend(v18, "saveRecord:withDescriptor:error:", v62, v33, &v69);

    if ((v34 & 1) == 0)
    {
      getWFCloudKitSyncLogObject();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v80 = 136315394;
        v81 = "WFPruneShortcutsInFoldersFromRootCollection";
        v82 = 2114;
        v83 = v69;
        _os_log_impl(&dword_1C15B3000, v21, OS_LOG_TYPE_ERROR, "%s Failed to save root collection: %{public}@", v80, 0x16u);
      }
LABEL_36:

      goto LABEL_37;
    }
  }
  v63 = 1;
LABEL_37:

LABEL_38:
  v35 = v69;

  v68 = v35;
  v36 = v18;
  objc_msgSend(v36, "orphanedShortcuts");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v37, "count"))
  {
    getWFCloudKitSyncLogObject();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "WFAppendOrphanedShortcutsToRootCollection";
      _os_log_impl(&dword_1C15B3000, v38, OS_LOG_TYPE_DEFAULT, "%s Attempting to move orphaned shortcuts to the root collection", buf, 0xCu);
    }

    objc_msgSend(v36, "collectionRecordForCollectionIdentifier:createIfNecessary:", CFSTR("Root"), 1);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "shortcutOrdering");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v41 = (void *)objc_msgSend(v40, "mutableCopy");

    objc_msgSend(v37, "if_map:", &__block_literal_global_35252);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "addObjectsFromArray:", v42);

    objc_msgSend(v39, "setShortcutOrdering:", v41);
    v43 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC7AA8]), "initWithIdentifier:objectType:", CFSTR("Root"), 2);
    v44 = objc_msgSend(v36, "saveRecord:withDescriptor:error:", v39, v43, &v68);

    if ((v44 & 1) == 0)
    {
      getWFCloudKitSyncLogObject();
      v45 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        *(_QWORD *)&buf[4] = "WFAppendOrphanedShortcutsToRootCollection";
        *(_WORD *)&buf[12] = 2114;
        *(_QWORD *)&buf[14] = v68;
        _os_log_impl(&dword_1C15B3000, v45, OS_LOG_TYPE_ERROR, "%s Failed to save root collection: %{public}@", buf, 0x16u);
      }

    }
  }
  else
  {
    v44 = 1;
  }

  v46 = v68;
  v47 = v36;
  objc_msgSend(MEMORY[0x1E0C99EA0], "systemShortcutsUserDefaults");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v49 = objc_msgSend(v48, "BOOLForKey:", CFSTR("WFDidUnconflictShortcuts"));

  getWFCloudKitSyncLogObject();
  v50 = objc_claimAutoreleasedReturnValue();
  v51 = v50;
  if (v49)
  {
    v52 = 1;
    if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "WFUnconflictShortcutsWithAddedWatchWorkflowType";
      _os_log_impl(&dword_1C15B3000, v51, OS_LOG_TYPE_INFO, "%s Already un-conflicted shortcuts with added 'watch' workflow type, bailing out", buf, 0xCu);
    }
    v53 = v46;
  }
  else
  {
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "WFUnconflictShortcutsWithAddedWatchWorkflowType";
      _os_log_impl(&dword_1C15B3000, v51, OS_LOG_TYPE_DEFAULT, "%s Attempting to un-conflict shortcuts with added 'watch' workflow type", buf, 0xCu);
    }

    *(_QWORD *)&v71 = 0;
    *((_QWORD *)&v71 + 1) = &v71;
    *(_QWORD *)&v72 = 0x2020000000;
    BYTE8(v72) = 1;
    *(_QWORD *)buf = MEMORY[0x1E0C809B0];
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = __WFUnconflictShortcutsWithAddedWatchWorkflowType_block_invoke;
    v77 = &unk_1E7AF2DB0;
    v78 = v47;
    v79 = &v71;
    v75 = 0;
    objc_msgSend(v78, "performTransactionWithReason:block:error:", CFSTR("unconflict shortcuts added for watch workflow type"), buf, &v75);
    v51 = v75;
    if (*(_BYTE *)(*((_QWORD *)&v71 + 1) + 24))
    {
      getWFCloudKitSyncLogObject();
      v54 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v80 = 136315138;
        v81 = "WFUnconflictShortcutsWithAddedWatchWorkflowType";
        _os_log_impl(&dword_1C15B3000, v54, OS_LOG_TYPE_DEFAULT, "%s Un-conflicted shortcuts with added 'watch' workflow type", v80, 0xCu);
      }

      objc_msgSend(MEMORY[0x1E0C99EA0], "systemShortcutsUserDefaults");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v55, "setBool:forKey:", 1, CFSTR("WFDidUnconflictShortcuts"));

      v53 = v46;
    }
    else
    {
      getWFCloudKitSyncLogObject();
      v56 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v56, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)v80 = 136315394;
        v81 = "WFUnconflictShortcutsWithAddedWatchWorkflowType";
        v82 = 2114;
        v83 = v51;
        _os_log_impl(&dword_1C15B3000, v56, OS_LOG_TYPE_FAULT, "%s Failed to un-conflict shortcuts with added 'watch' workflow type: %{public}@", v80, 0x16u);
      }

      v53 = objc_retainAutorelease(v51);
    }
    v52 = *(_BYTE *)(*((_QWORD *)&v71 + 1) + 24) != 0;

    _Block_object_dispose(&v71, 8);
  }

  v57 = v53;
  objc_autoreleasePoolPop(context);
  if (a2)
    *a2 = objc_retainAutorelease(v57);

  return v64 & v63 & v44 & v52;
}

void sub_1C1A0E598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A12678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A1276C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A1289C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

BOOL WFActionUsesInputVariable(void *a1)
{
  void *v1;
  void *v2;
  _BOOL8 v3;

  objc_msgSend(a1, "containedVariables");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "if_firstObjectPassingTest:", &__block_literal_global_241_35738);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

uint64_t __Block_byref_object_copy__35748(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__35749(uint64_t a1)
{

}

BOOL WFActionHasEligibleOutput(void *a1, void *a2)
{
  id v3;
  id v4;
  _BOOL8 v5;
  void *v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v5 = objc_msgSend(v3, "mode") == 2;
  }
  else
  {
    objc_msgSend(v3, "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "containsObject:", v6) & 1) != 0 || (objc_msgSend(v3, "inputPassthrough") & 1) != 0)
    {
      v5 = 0;
    }
    else
    {
      objc_msgSend(v3, "outputContentClasses");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v7, "count") != 0;

    }
  }

  return v5;
}

id WFWorkflowGetAvailableVariableNamesAndDetails(void *a1, uint64_t a2, char a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v32;
  id v33;
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  __int128 *p_buf;
  uint64_t v42;
  char v43;
  _QWORD v44[4];
  id v45;
  id v46;
  _QWORD aBlock[4];
  id v48;
  id v49;
  __int128 buf;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v33 = a1;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  getWFGeneralLogObject();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf) = 136315138;
    *(_QWORD *)((char *)&buf + 4) = "WFWorkflowGetAvailableVariableNamesAndDetails";
    _os_log_impl(&dword_1C15B3000, v14, OS_LOG_TYPE_INFO, "%s Calculating variable availability", (uint8_t *)&buf, 0xCu);
  }

  v15 = (void *)objc_opt_new();
  if (!v13)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "strongToStrongObjectsMapTable");
    v13 = (id)objc_claimAutoreleasedReturnValue();
  }
  v16 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __WFWorkflowGetAvailableVariableNamesAndDetails_block_invoke;
  aBlock[3] = &unk_1E7AF2330;
  v17 = v15;
  v48 = v17;
  v18 = v13;
  v49 = v18;
  v19 = _Block_copy(aBlock);
  v44[0] = v16;
  v44[1] = 3221225472;
  v44[2] = __WFWorkflowGetAvailableVariableNamesAndDetails_block_invoke_2;
  v44[3] = &unk_1E7AF2330;
  v32 = v18;
  v45 = v32;
  v20 = v17;
  v46 = v20;
  v21 = _Block_copy(v44);
  LOBYTE(v18) = a3;
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v51 = 0x2020000000;
  v52 = 0;
  v22 = (void *)objc_opt_new();
  objc_msgSend(v33, "actions");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v34[0] = v16;
  v34[1] = 3221225472;
  v34[2] = __WFWorkflowGetAvailableVariableNamesAndDetails_block_invoke_3;
  v34[3] = &unk_1E7AF2358;
  p_buf = &buf;
  v42 = a2;
  v35 = 0;
  v24 = v22;
  v36 = v24;
  v25 = v19;
  v39 = v25;
  v26 = v11;
  v37 = v26;
  v27 = v12;
  v38 = v27;
  v43 = (char)v18;
  v28 = v21;
  v40 = v28;
  objc_msgSend(v23, "enumerateObjectsUsingBlock:", v34);

  v29 = v40;
  v30 = v20;

  _Block_object_dispose(&buf, 8);
  return v30;
}

void sub_1C1A14A20(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A154A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

BOOL WFPBGallerySessionStartEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1A17570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A179D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 200), 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A17C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A18310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__36181(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__36182(uint64_t a1)
{

}

id WFTriggerNotificationUserInfo(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  const char *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  _QWORD v24[3];
  _QWORD v25[4];

  v25[3] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary * _Nonnull WFTriggerNotificationUserInfo(NSString * _Nonnull __strong, NSArray<WFIcon *> * _Nullable __strong, NSArray<NSString *> * _Nullable __strong)");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "handleFailureInFunction:file:lineNumber:description:", v16, CFSTR("WFTriggerManager.m"), 364, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("triggerID"));

  }
  v24[0] = CFSTR("source");
  v24[1] = CFSTR("triggerID");
  v25[0] = CFSTR("trigger");
  v25[1] = v5;
  v24[2] = CFSTR("pendingIDs");
  if (v7)
    v8 = v7;
  else
    v8 = (id)MEMORY[0x1E0C9AA60];
  v25[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v25, v24, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v9, "mutableCopy");

  if (v6)
  {
    v17 = 0;
    objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v6, 1, &v17);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v17;
    if (v11)
    {
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("actionIconsData"));
    }
    else
    {
      getWFTriggersLogObject();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        v19 = "WFTriggerNotificationUserInfo";
        v20 = 2114;
        v21 = v6;
        v22 = 2114;
        v23 = v12;
        _os_log_impl(&dword_1C15B3000, v13, OS_LOG_TYPE_ERROR, "%s Failed to archive action icons: %{public}@ error: %{public}@", buf, 0x20u);
      }

    }
  }

  return v10;
}

id WFTriggerNotificationUserInfoForDisabling(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  objc_class *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  NSObject *v23;
  id v25;
  uint8_t buf[4];
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  id v31;
  _QWORD v32[5];
  _QWORD v33[6];

  v33[5] = *MEMORY[0x1E0C80C00];
  v33[0] = CFSTR("trigger");
  v32[0] = CFSTR("source");
  v32[1] = CFSTR("triggerID");
  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v33[1] = v5;
  v32[2] = CFSTR("triggerTitle");
  objc_msgSend(v4, "trigger");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "localizedDisplayName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v33[2] = v7;
  v32[3] = CFSTR("triggerDescription");
  objc_msgSend(v4, "trigger");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "localizedDescriptionWithConfigurationSummary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v33[3] = v9;
  v32[4] = CFSTR("triggerClassName");
  objc_msgSend(v4, "trigger");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (objc_class *)objc_opt_class();
  NSStringFromClass(v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v33[4] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, v32, 5);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)objc_msgSend(v13, "mutableCopy");

  objc_msgSend(v3, "actions");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "actions");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = objc_msgSend(v16, "count");
  if (v17 >= 8)
    v18 = 8;
  else
    v18 = v17;
  objc_msgSend(v15, "subarrayWithRange:", 0, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v19, "if_compactMap:", &__block_literal_global_240);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if (v20)
  {
    v25 = 0;
    objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v20, 1, &v25);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v25;
    if (v21)
    {
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v21, CFSTR("actionIconsData"));
    }
    else
    {
      getWFTriggersLogObject();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        v27 = "WFTriggerNotificationUserInfoForDisabling";
        v28 = 2114;
        v29 = v20;
        v30 = 2114;
        v31 = v22;
        _os_log_impl(&dword_1C15B3000, v23, OS_LOG_TYPE_ERROR, "%s Failed to archive action icons: %{public}@ error: %{public}@", buf, 0x20u);
      }

    }
  }

  return v14;
}

id WFAllTriggerNotificationUserInfoForDisablingTriggers(void *a1)
{
  id v1;
  void *v2;
  void *v4;
  void *v5;
  _QWORD v6[2];
  _QWORD v7[3];

  v7[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary * _Nonnull WFAllTriggerNotificationUserInfoForDisablingTriggers(NSArray<NSDictionary *> * _Nonnull __strong)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFTriggerManager.m"), 417, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("triggerUserInfo"));

  }
  v6[0] = CFSTR("triggerAndActionIcons");
  v6[1] = CFSTR("source");
  v7[0] = v1;
  v7[1] = CFSTR("trigger");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, v6, 2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id WFTriggerDisplayInfoToDisableFromNotificationUserInfo(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  const char *v8;
  NSObject *v9;
  uint32_t v10;
  NSObject *v11;
  int v13;
  const char *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315138;
      v14 = "WFTriggerDisplayInfoToDisableFromNotificationUserInfo";
      v8 = "%s Can't get trigger display info from nil userInfo";
      v9 = v6;
      v10 = 12;
LABEL_9:
      _os_log_impl(&dword_1C15B3000, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&v13, v10);
    }
LABEL_13:
    v7 = 0;
    goto LABEL_14;
  }
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("source"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("trigger"));

  if ((v4 & 1) == 0)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315394;
      v14 = "WFTriggerDisplayInfoToDisableFromNotificationUserInfo";
      v15 = 2114;
      v16 = v2;
      v8 = "%s This userInfo wasn't from a trigger notification: %{public}@";
      v9 = v6;
      v10 = 22;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  objc_msgSend(v2, "objectForKey:", CFSTR("triggerAndActionIcons"));
  v5 = objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    getWFTriggersLogObject();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315138;
      v14 = "WFTriggerDisplayInfoToDisableFromNotificationUserInfo";
      _os_log_impl(&dword_1C15B3000, v11, OS_LOG_TYPE_ERROR, "%s No trigger info for disabling triggers found!", (uint8_t *)&v13, 0xCu);
    }

    v6 = 0;
    goto LABEL_13;
  }
  v6 = v5;
  -[NSObject if_compactMap:](v5, "if_compactMap:", &__block_literal_global_244);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_14:

  return v7;
}

id WFActionIconsFromNotificationUserInfo(void *a1)
{
  NSObject *v1;
  NSObject *v2;
  void *v3;
  char v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v12;
  const char *v13;
  NSObject *v14;
  uint32_t v15;
  NSObject *v16;
  id v18;
  _QWORD v19[2];
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  NSObject *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    getWFTriggersLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      v21 = "WFActionIconsFromNotificationUserInfo";
      v13 = "%s Can't get actionIcons from nil userInfo";
      v14 = v5;
      v15 = 12;
LABEL_10:
      _os_log_impl(&dword_1C15B3000, v14, OS_LOG_TYPE_ERROR, v13, buf, v15);
    }
LABEL_11:
    v10 = 0;
    goto LABEL_20;
  }
  -[NSObject objectForKeyedSubscript:](v1, "objectForKeyedSubscript:", CFSTR("source"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("trigger"));

  if ((v4 & 1) == 0)
  {
    getWFTriggersLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v21 = "WFActionIconsFromNotificationUserInfo";
      v22 = 2114;
      v23 = v2;
      v13 = "%s This userInfo wasn't from a trigger notification: %{public}@";
      v14 = v5;
      v15 = 22;
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  -[NSObject objectForKeyedSubscript:](v2, "objectForKeyedSubscript:", CFSTR("actionIconsData"));
  v5 = objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = (void *)MEMORY[0x1E0CB3710];
    v7 = (void *)MEMORY[0x1E0C99E60];
    v19[0] = objc_opt_class();
    v19[1] = objc_opt_class();
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setWithArray:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0;
    objc_msgSend(v6, "unarchivedObjectOfClasses:fromData:error:", v9, v5, &v18);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v18;

    if (v10)
    {
      v12 = v10;
    }
    else
    {
      getWFTriggersLogObject();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v21 = "WFActionIconsFromNotificationUserInfo";
        v22 = 2112;
        v23 = v11;
        _os_log_impl(&dword_1C15B3000, v16, OS_LOG_TYPE_ERROR, "%s Failed to unarchive action icons: %@", buf, 0x16u);
      }

    }
  }
  else
  {
    getWFTriggersLogObject();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      v21 = "WFActionIconsFromNotificationUserInfo";
      _os_log_impl(&dword_1C15B3000, v11, OS_LOG_TYPE_ERROR, "%s No Data", buf, 0xCu);
    }
    v10 = 0;
  }

LABEL_20:
  return v10;
}

id WFTriggerIDFromNotificationUserInfo(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  void *v5;
  NSObject *v6;
  const char *v7;
  NSObject *v8;
  uint32_t v9;
  int v11;
  const char *v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v11 = 136315138;
      v12 = "WFTriggerIDFromNotificationUserInfo";
      v7 = "%s Can't get triggerID from nil userInfo";
      v8 = v6;
      v9 = 12;
LABEL_8:
      _os_log_impl(&dword_1C15B3000, v8, OS_LOG_TYPE_ERROR, v7, (uint8_t *)&v11, v9);
    }
LABEL_9:

    v5 = 0;
    goto LABEL_10;
  }
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("source"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("trigger"));

  if ((v4 & 1) == 0)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v11 = 136315394;
      v12 = "WFTriggerIDFromNotificationUserInfo";
      v13 = 2114;
      v14 = v2;
      v7 = "%s This userInfo wasn't from a trigger notification: %{public}@";
      v8 = v6;
      v9 = 22;
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  objc_msgSend(v2, "objectForKey:", CFSTR("triggerID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_10:

  return v5;
}

id WFTriggerIDsToDisableFromNotificationUserInfo(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  const char *v8;
  NSObject *v9;
  uint32_t v10;
  NSObject *v11;
  int v13;
  const char *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315138;
      v14 = "WFTriggerIDsToDisableFromNotificationUserInfo";
      v8 = "%s Can't get triggerIDs to dissable from nil userInfo";
      v9 = v6;
      v10 = 12;
LABEL_9:
      _os_log_impl(&dword_1C15B3000, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&v13, v10);
    }
LABEL_13:
    v7 = 0;
    goto LABEL_14;
  }
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("source"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("trigger"));

  if ((v4 & 1) == 0)
  {
    getWFTriggersLogObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315394;
      v14 = "WFTriggerIDsToDisableFromNotificationUserInfo";
      v15 = 2114;
      v16 = v2;
      v8 = "%s This userInfo wasn't from a trigger notification: %{public}@";
      v9 = v6;
      v10 = 22;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  objc_msgSend(v2, "objectForKey:", CFSTR("triggerAndActionIcons"));
  v5 = objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    getWFTriggersLogObject();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315138;
      v14 = "WFTriggerIDsToDisableFromNotificationUserInfo";
      _os_log_impl(&dword_1C15B3000, v11, OS_LOG_TYPE_ERROR, "%s No trigger info for disabling triggers found!", (uint8_t *)&v13, 0xCu);
    }

    v6 = 0;
    goto LABEL_13;
  }
  v6 = v5;
  -[NSObject if_compactMap:](v5, "if_compactMap:", &__block_literal_global_246_36290);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_14:

  return v7;
}

id WFPendingTriggerEventIDsFromNotificationUserInfo(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  NSObject *v7;
  const char *v8;
  NSObject *v9;
  uint32_t v10;
  id v11;
  int v13;
  const char *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    getWFTriggersLogObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315138;
      v14 = "WFPendingTriggerEventIDsFromNotificationUserInfo";
      v8 = "%s Can't get triggerID from nil userInfo";
      v9 = v7;
      v10 = 12;
LABEL_11:
      _os_log_impl(&dword_1C15B3000, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&v13, v10);
    }
LABEL_12:

    v11 = 0;
    goto LABEL_15;
  }
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("source"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("trigger"));

  if ((v4 & 1) == 0)
  {
    getWFTriggersLogObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v13 = 136315394;
      v14 = "WFPendingTriggerEventIDsFromNotificationUserInfo";
      v15 = 2114;
      v16 = v2;
      v8 = "%s This userInfo wasn't from a trigger notification: %{public}@";
      v9 = v7;
      v10 = 22;
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  objc_msgSend(v2, "objectForKey:", CFSTR("pendingIDs"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v6 = v5;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v11 = v6;

LABEL_15:
  return v11;
}

id WFTriggerIDsToDisableNotificationUserInfoFromTriggers(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __WFTriggerIDsToDisableNotificationUserInfoFromTriggers_block_invoke;
  v8[3] = &unk_1E7AF2620;
  v9 = v3;
  v4 = v3;
  objc_msgSend(a1, "if_compactMap:", v8);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  WFAllTriggerNotificationUserInfoForDisablingTriggers(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1C1A1B000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLCircularRegionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_36342)
    CoreLocationLibraryCore_frameworkLibrary_36342 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_36342)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLocationTrigger.m"), 16, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLCircularRegion");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLCircularRegionClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLocationTrigger.m"), 17, CFSTR("Unable to find class %s"), "CLCircularRegion");

LABEL_8:
    __break(1u);
  }
  getCLCircularRegionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1A1B730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getUIColorClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!UIKitLibraryCore_frameworkLibrary_36544)
    UIKitLibraryCore_frameworkLibrary_36544 = _sl_dlopen();
  if (!UIKitLibraryCore_frameworkLibrary_36544)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFUserFocusActivityTrigger.m"), 20, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("UIColor");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIColorClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFUserFocusActivityTrigger.m"), 21, CFSTR("Unable to find class %s"), "UIColor");

LABEL_8:
    __break(1u);
  }
  getUIColorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1A1DB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__36775(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__36776(uint64_t a1)
{

}

id WFGetSystemBuildNumber()
{
  void *v0;
  id v1;
  size_t size;
  int v4[2];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  size = 0;
  *(_QWORD *)v4 = 0x4100000001;
  sysctl(v4, 2u, 0, &size, 0, 0);
  v0 = malloc_type_malloc(size, 0xD0A41F62uLL);
  sysctl(v4, 2u, v0, &size, 0, 0);
  v1 = objc_alloc(MEMORY[0x1E0CB3940]);
  return (id)objc_msgSend(v1, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v0, size - 1, 4, 1);
}

id WFGetSystemMachine()
{
  void *v0;
  id v1;
  size_t size;

  size = 0;
  sysctlbyname("hw.machine", 0, &size, 0, 0);
  v0 = malloc_type_malloc(size, 0xB30F2A1uLL);
  sysctlbyname("hw.machine", v0, &size, 0, 0);
  v1 = objc_alloc(MEMORY[0x1E0CB3940]);
  return (id)objc_msgSend(v1, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v0, size - 1, 4, 1);
}

id WFGetBootSessionUUID()
{
  void *v0;
  id v1;
  size_t size;

  size = 0;
  sysctlbyname("kern.bootsessionuuid", 0, &size, 0, 0);
  v0 = malloc_type_malloc(size, 0x4C1F21A0uLL);
  sysctlbyname("kern.bootsessionuuid", v0, &size, 0, 0);
  v1 = objc_alloc(MEMORY[0x1E0CB3940]);
  return (id)objc_msgSend(v1, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v0, size - 1, 4, 1);
}

void sub_1C1A20858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  char a72;

  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a66, 8);
  _Block_object_dispose(&a72, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37005(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37006(uint64_t a1)
{

}

id UIPasteboardFunction_37010()
{
  return (id)classUIPasteboard_37022;
}

Class initUIPasteboard_37011()
{
  Class result;

  if (UIKitLibrary_sOnce_37013 != -1)
    dispatch_once(&UIKitLibrary_sOnce_37013, &__block_literal_global_37014);
  result = objc_getClass("UIPasteboard");
  classUIPasteboard_37022 = (uint64_t)result;
  getUIPasteboardClass_37009 = (uint64_t (*)(void))UIPasteboardFunction_37010;
  return result;
}

id UIPasteboardOptionLocalOnlyFunction()
{
  return (id)constantUIPasteboardOptionLocalOnly;
}

id initUIPasteboardOptionLocalOnly()
{
  id *v0;

  if (UIKitLibrary_sOnce_37013 != -1)
    dispatch_once(&UIKitLibrary_sOnce_37013, &__block_literal_global_37014);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_37015, "UIPasteboardOptionLocalOnly");
  if (!v0)
    __assert_rtn("initUIPasteboardOptionLocalOnly", "ICAction.m", 21, "constant");
  objc_storeStrong((id *)&constantUIPasteboardOptionLocalOnly, *v0);
  getUIPasteboardOptionLocalOnly = (uint64_t (*)(void))UIPasteboardOptionLocalOnlyFunction;
  return (id)constantUIPasteboardOptionLocalOnly;
}

uint64_t WFPBOpenShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_32;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_32;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_32;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
LABEL_32:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_34;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_36:
      *(_DWORD *)(a1 + 8) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1A2612C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A272CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A274B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A27754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__38009(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__38010(uint64_t a1)
{

}

void sub_1C1A27FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

id WFDescriptorsForObjectIDs(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __WFDescriptorsForObjectIDs_block_invoke;
  v7[3] = &unk_1E7AF2EA0;
  v8 = v3;
  v4 = v3;
  objc_msgSend(a1, "if_compactMap:", v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1C1A288C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFRecordStorageClassForObjectType(unint64_t a1)
{
  void *v2;

  if (objc_msgSend(MEMORY[0x1E0C99EA0], "databaseCoherenceEnabled") && a1 == 2)
  {
    objc_opt_class();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    WFCoreDataClassForObjectType(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

id WFCoreDataClassForObjectType(unint64_t a1)
{
  if (a1 > 0xA)
    return 0;
  objc_opt_class();
  return (id)objc_claimAutoreleasedReturnValue();
}

__CFString *WFEntityPrimaryKeyForObjectType(unint64_t a1)
{
  if (a1 > 0xA)
    return 0;
  else
    return off_1E7AF2F18[a1];
}

SEL MTLSelectorWithKeyPattern(void *a1, const char *a2)
{
  id v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  int v10;
  SEL result;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v13[0] = objc_msgSend(v3, "maximumLengthOfBytesUsingEncoding:", 4);
  v4 = strlen(a2);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7);
  v9 = (char *)v13 - v8;
  v10 = objc_msgSend(v3, "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:", (char *)v13 - v8, v13[0], v13, 4, 0, 0, objc_msgSend(v3, "length"), 0);

  result = 0;
  if (v10)
  {
    v12 = v13[0];
    memcpy((void *)&v9[v13[0]], a2, v4);
    v9[v12 + v4] = 0;
    return sel_registerName(v9);
  }
  return result;
}

SEL MTLSelectorWithCapitalizedKeyPattern(const char *a1, void *a2, const void *a3)
{
  size_t v6;
  size_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  int v21;
  SEL v22;
  uint64_t v23;
  uint64_t v24;
  const void *v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v6 = strlen(a1);
  v26 = a3;
  v7 = strlen((const char *)a3);
  v8 = a2;
  objc_msgSend(v8, "substringToIndex:", 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "uppercaseString");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = objc_msgSend(v10, "maximumLengthOfBytesUsingEncoding:", 4);
  v28[0] = v11;
  objc_msgSend(v8, "substringFromIndex:", 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend(v12, "maximumLengthOfBytesUsingEncoding:", 4);
  v27 = v13;
  v14 = v7 + v6;
  MEMORY[0x1E0C80A78](v13, v15, v16, v17);
  v19 = (char *)&v26 - v18;
  memcpy((char *)&v26 - v18, a1, v6);
  v20 = &v19[v6];
  v21 = objc_msgSend(v10, "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:", &v19[v6], v11, v28, 4, 0, 0, objc_msgSend(v10, "length"), 0);
  v22 = 0;
  if (v21)
  {
    v22 = 0;
    if (objc_msgSend(v12, "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:", &v20[v28[0]], v13, &v27, 4, 0, 0, objc_msgSend(v12, "length"), 0))
    {
      v24 = v27;
      v23 = v28[0];
      memcpy((void *)&v20[v28[0] + v27], v26, v7);
      v19[v14 + v23 + v24] = 0;
      v22 = sel_registerName(v19);
    }
  }

  return v22;
}

uint64_t MTLValidateAndSetValue(void *a1, void *a2, void *a3, char a4, uint64_t a5)
{
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v14;

  v9 = a1;
  v10 = a2;
  v11 = objc_retainAutorelease(a3);
  v14 = v11;
  if ((objc_msgSend(v9, "validateValue:forKey:error:", &v14, v10, a5) & 1) != 0)
  {
    if ((a4 & 1) != 0 || v14 != v11)
      objc_msgSend(v9, "setValue:forKey:", v14, v10);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1C1A2B264()
{
  objc_end_catch();
  JUMPOUT(0x1C1A2B26CLL);
}

void sub_1C1A2B574(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A2B840(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t WFPBSuggestAutomationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;
  BOOL v33;
  uint64_t v34;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_38;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_38;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_42:
          v33 = v22 != 0;
          v34 = 33;
          goto LABEL_47;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_38:
          v32 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_46:
      v33 = v28 != 0;
      v34 = 32;
LABEL_47:
      *(_BYTE *)(a1 + v34) = v33;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFPBGallerySessionAddShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 24;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id failureReasonForRunnerErrorCode(uint64_t a1)
{
  if (a1 != 1)
    return 0;
  WFLocalizedString(CFSTR("Couldn’t find shortcut"));
  return (id)objc_claimAutoreleasedReturnValue();
}

id WFBackgroundShortcutRunnerError(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v3 = a2;
  v4 = (void *)objc_opt_new();
  v5 = (_QWORD *)MEMORY[0x1E0CB2D68];
  if (v3)
  {
    v6 = (void *)objc_opt_new();
    objc_msgSend(v3, "localizedDescription");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_msgSend(v3, "localizedDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v8, *MEMORY[0x1E0CB2D50]);

    }
    objc_msgSend(v3, "localizedFailureReason");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      objc_msgSend(v3, "localizedFailureReason");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v10, *v5);

    }
    objc_msgSend(v3, "localizedRecoverySuggestion");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      objc_msgSend(v3, "localizedRecoverySuggestion");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, *MEMORY[0x1E0CB2D80]);

    }
    objc_msgSend(v3, "userInfo");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "objectForKey:", CFSTR("WFActionIndex"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      objc_msgSend(v3, "userInfo");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "objectForKey:", CFSTR("WFActionIndex"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v16, CFSTR("WFActionIndex"));

    }
    v17 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(v3, "domain");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v3, "code");
    v20 = (void *)objc_msgSend(v6, "copy");
    objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v21, *MEMORY[0x1E0CB3388]);

  }
  failureReasonForRunnerErrorCode(a1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  if (v22)
    objc_msgSend(v4, "setObject:forKey:", v22, *v5);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("WFBackgroundShortcutRunnerErrorDomain"), a1, v4);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  return v23;
}

void sub_1C1A33E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A340E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A343BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A34B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A34E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A35090(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1C1A3516C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1C1A3523C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1C1A35C28(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A35ED4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A37198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *WFValidTimeUnits()
{
  return &unk_1E7B8D9E8;
}

id WFDisplayableTimeUnitsForContentProperty(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_msgSend(&unk_1E7B8D9E8, "mutableCopy");
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = (void *)objc_msgSend(v2, "copy", 0);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        v9 = objc_msgSend(v8, "unsignedIntegerValue");
        if ((objc_msgSend(v1, "timeUnits") & v9) == 0)
          objc_msgSend(v2, "removeObject:", v8);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  return v2;
}

id WFComparableTimeUnitsForContentProperty(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_msgSend(&unk_1E7B8D9E8, "mutableCopy");
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = (void *)objc_msgSend(v2, "copy", 0);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        v9 = objc_msgSend(v8, "unsignedIntegerValue");
        if ((objc_msgSend(v1, "comparableUnits") & v9) == 0)
          objc_msgSend(v2, "removeObject:", v8);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  return v2;
}

id WFLabelForCalendarUnit(uint64_t a1, void *a2, char a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v5 = a2;
  v6 = (void *)objc_opt_new();
  if ((a3 & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    objc_msgSend(v5, "decimalNumber");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "doubleValue");
    v10 = v9;

    v7 = (uint64_t)fmin(v10, 150.0);
  }
  if (a1 == 0x2000)
    v11 = 4096;
  else
    v11 = a1;
  objc_msgSend(v6, "setValue:forComponent:", v7, v11);
  v12 = (void *)objc_opt_new();
  objc_msgSend(v12, "setUnitsStyle:", 3);
  objc_msgSend(v12, "setZeroFormattingBehavior:", 0);
  objc_msgSend(v12, "stringFromDateComponents:", v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3500], "decimalDigitCharacterSet");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "componentsSeparatedByCharactersInSet:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "componentsJoinedByString:", &stru_1E7AFA810);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceAndNewlineCharacterSet");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "stringByTrimmingCharactersInSet:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

void *WFValidByteCountUnits()
{
  return &unk_1E7B8DA00;
}

id WFLabelForByteCountUnit(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(v2, "setAllowedUnits:", a1);
  objc_msgSend(v2, "setAllowsNonnumericFormatting:", 0);
  objc_msgSend(v2, "setIncludesCount:", 0);
  objc_msgSend(v2, "stringFromByteCount:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFContentPredicateForRowTemplateValue(void *a1)
{
  id v1;
  unint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void (**v8)(void *, void *);
  void *v9;
  void *v10;
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void (**v27)(void *, void *);
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  void *v75;
  double v76;
  double v77;
  void *v78;
  BOOL v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  void *v83;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  void *v90;
  void (**v91)(void *, void *);
  void *v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  id *v102;
  uint64_t v103;
  void *v104;
  void *v105;
  _QWORD v106[4];
  id v107;
  void (**v108)(void *, void *);
  _QWORD v109[4];
  id v110;
  void (**v111)(void *, void *);
  _QWORD v112[4];
  id v113;
  id v114;
  void (**v115)(void *, void *);
  _QWORD aBlock[4];
  _QWORD v117[2];
  _QWORD v118[2];
  _QWORD v119[2];
  _QWORD v120[4];

  v120[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(v1, "comparisonOperator");
  v3 = (void *)objc_msgSend(v1, "contentItemClass");
  objc_msgSend(v1, "contentPropertyName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "propertyForName:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_msgSend((id)objc_msgSend(v5, "valueItemClass"), "tableTemplateSubjectType");
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6 == 4)
  {
    objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    v103 = objc_msgSend(v5, "comparableUnits");
    if (v103)
    {
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 3221225472;
      aBlock[2] = __WFContentPredicateForRowTemplateValue_block_invoke;
      aBlock[3] = &unk_1E7AF36A8;
      v117[1] = v103;
      v102 = (id *)v117;
      v7 = v104;
      v117[0] = v7;
      v8 = (void (**)(void *, void *))_Block_copy(aBlock);
      objc_msgSend(v7, "components:fromDate:", v103, v105);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "nextDateAfterDate:matchingComponents:options:", v105, v9, 1024);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = v10 != 0;

    }
    else
    {
      v11 = 0;
      v8 = (void (**)(void *, void *))&__block_literal_global_40050;
    }
    WFComparableTimeUnitsForContentProperty(v5);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "lastObject");
    v20 = objc_claimAutoreleasedReturnValue();

    if (v20)
      v21 = (void *)v20;
    else
      v21 = &unk_1E7B8B7B8;
    v22 = objc_msgSend(v21, "unsignedIntegerValue");
    if (v2 - 1000 < 2)
    {
      v26 = v21;
      if (v2 == 1001 && (v103 & 0x1C) == 0x1C)
      {
        v27 = v8;
        v28 = v105;
      }
      else
      {
        v27 = v8;
        v8[2](v8, v105);
        v28 = (id)objc_claimAutoreleasedReturnValue();
      }
      v24 = v28;
      objc_msgSend(v1, "number");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v48 = objc_msgSend(v47, "integerValue");

      objc_msgSend(v1, "calendarUnit");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = objc_msgSend(v49, "unsignedIntegerValue");
      if (v2 == 1001)
        v51 = -v48;
      else
        v51 = v48;
      objc_msgSend(v104, "dateByAddingUnit:value:toDate:options:", v50, v51, v105, 0);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      v8 = v27;
      v21 = v26;
      goto LABEL_44;
    }
    if (v2 == 1002)
    {
      if (v11)
      {
        v37 = (void *)MEMORY[0x1E0D13EB0];
        v109[0] = MEMORY[0x1E0C809B0];
        v109[1] = 3221225472;
        v109[2] = __WFContentPredicateForRowTemplateValue_block_invoke_4;
        v109[3] = &unk_1E7AF3760;
        v110 = v104;
        v111 = v8;
        objc_msgSend(v37, "predicateWithValueBlock:forProperty:", v109, v5);
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        v24 = v110;
        goto LABEL_54;
      }
      objc_msgSend(v104, "startOfDayForDate:", v105);
      v24 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v104, "dateByAddingUnit:value:toDate:options:", 16, 1, v24, 0);
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v24, v5, 3);
      v86 = (void *)objc_claimAutoreleasedReturnValue();
      v119[0] = v86;
      objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v85, v5, 0);
      v87 = (void *)objc_claimAutoreleasedReturnValue();
      v119[1] = v87;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v119, 2);
      v88 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0D13EB8], "andPredicateWithSubpredicates:", v88);
      v38 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      if (v2 == 1003)
      {
        objc_msgSend(v1, "date");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v8[2](v8, v23);
        v24 = (id)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v1, "anotherDate");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_44:
        v8[2](v8, v25);
        v52 = (void *)objc_claimAutoreleasedReturnValue();

        if (v2 == 1001)
          v53 = 1;
        else
          v53 = 3;
        if (v2 == 1001)
          v54 = 3;
        else
          v54 = 1;
        if (v11)
        {
          v55 = (void *)MEMORY[0x1E0CB3518];
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v24);
          v101 = v52;
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v55, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v56, v57, 0, v53, 0);
          v58 = (void *)objc_claimAutoreleasedReturnValue();

          v59 = (void *)MEMORY[0x1E0CB3518];
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v101);
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v59, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v60, v61, 0, v54, 0);
          v62 = (void *)objc_claimAutoreleasedReturnValue();

          v63 = (void *)MEMORY[0x1E0D13EB0];
          v112[0] = MEMORY[0x1E0C809B0];
          v112[1] = 3221225472;
          v112[2] = __WFContentPredicateForRowTemplateValue_block_invoke_2;
          v112[3] = &unk_1E7AF3738;
          v114 = v62;
          v115 = v8;
          v113 = v58;
          v64 = v62;
          v65 = v58;
          v66 = v63;
          v52 = v101;
          objc_msgSend(v66, "predicateWithValueBlock:forProperty:", v112, v5);
          v38 = (void *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v24, v5, v53);
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          v120[0] = v67;
          objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v52, v5, v54);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v120[1] = v68;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v120, 2);
          v65 = (id)objc_claimAutoreleasedReturnValue();

          objc_msgSend(MEMORY[0x1E0D13EB8], "andPredicateWithSubpredicates:", v65);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
        }

LABEL_54:
        if (v103)

        goto LABEL_88;
      }
      if (v11)
      {
        v39 = (void *)MEMORY[0x1E0CB3518];
        objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = (void *)MEMORY[0x1E0CB35D0];
        objc_msgSend(v1, "date");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        v8[2](v8, v42);
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "expressionForConstantValue:", v43);
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v40, v44, 0, v2, 0);
        v45 = (void *)objc_claimAutoreleasedReturnValue();

        v46 = (void *)MEMORY[0x1E0D13EB0];
        v106[0] = MEMORY[0x1E0C809B0];
        v106[1] = 3221225472;
        v106[2] = __WFContentPredicateForRowTemplateValue_block_invoke_5;
        v106[3] = &unk_1E7AF3760;
        v107 = v45;
        v108 = v8;
        v24 = v45;
        objc_msgSend(v46, "predicateWithValueBlock:forProperty:", v106, v5);
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_54;
      }
      if (v2 <= 4 && ((1 << v2) & 0x15) != 0)
      {
        v89 = v22;
        objc_msgSend(v1, "date");
        v90 = (void *)objc_claimAutoreleasedReturnValue();
        v91 = v8;
        v8[2](v8, v90);
        v24 = (id)objc_claimAutoreleasedReturnValue();

        if (v24)
        {
          objc_msgSend(v104, "dateByAddingUnit:value:toDate:options:", v89, 1, v24, 0);
          v92 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v92 = 0;
        }
        switch(v2)
        {
          case 0uLL:
            v93 = (void *)MEMORY[0x1E0D13EB0];
            v94 = v24;
            v95 = v5;
            v96 = 0;
            goto LABEL_100;
          case 4uLL:
            objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v24, v5, 3);
            v97 = (void *)objc_claimAutoreleasedReturnValue();
            v118[0] = v97;
            objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v92, v5, 0);
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            v118[1] = v98;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v118, 2);
            v99 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(MEMORY[0x1E0D13EB8], "andPredicateWithSubpredicates:", v99);
            v38 = (void *)objc_claimAutoreleasedReturnValue();

            goto LABEL_102;
          case 2uLL:
            v93 = (void *)MEMORY[0x1E0D13EB0];
            v94 = v92;
            v95 = v5;
            v96 = 2;
LABEL_100:
            objc_msgSend(v93, "predicateWithValue:forProperty:comparisonType:", v94, v95, v96);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_102:

            v8 = v91;
            goto LABEL_54;
        }

        v8 = v91;
      }
      v100 = (void *)MEMORY[0x1E0D13EB0];
      objc_msgSend(v1, "date");
      v24 = (id)objc_claimAutoreleasedReturnValue();
      v8[2](v8, v24);
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v100, "predicateWithValue:forProperty:comparisonType:", v85, v5, v2);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
    }

    goto LABEL_54;
  }
  if (objc_msgSend(v5, "hasPossibleValues"))
  {
    objc_msgSend(v1, "enumeration");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v12 = 0;
  }
  if ((objc_msgSend(v5, "hasPossibleValues") & 1) == 0 && v6 == 2)
  {
    objc_msgSend(v1, "string");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend((id)objc_msgSend(v5, "propertyClass"), "isSubclassOfClass:", objc_opt_class()))
    {
      v14 = (void *)MEMORY[0x1E0D14048];
      objc_msgSend(v1, "phone");
      v15 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "phoneNumberWithPhoneNumberString:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "normalizedPhoneNumber");
      v17 = objc_claimAutoreleasedReturnValue();

      v13 = (void *)v15;
    }
    else
    {
      if (!objc_msgSend((id)objc_msgSend(v5, "propertyClass"), "isSubclassOfClass:", objc_opt_class()))
      {
LABEL_32:
        if (objc_msgSend(v13, "length"))
        {
          v36 = v13;

          v12 = v36;
        }

        objc_msgSend(v1, "comparisonOperator");
        goto LABEL_76;
      }
      objc_msgSend(v1, "email");
      v17 = objc_claimAutoreleasedReturnValue();
    }

    v13 = (void *)v17;
    goto LABEL_32;
  }
  objc_msgSend(v1, "comparisonOperator");
  if ((unint64_t)(v6 - 5) >= 3 && v6 != 3)
  {
    if (v6 == 1)
    {
      objc_msgSend(v1, "BOOLean");
      v18 = objc_claimAutoreleasedReturnValue();

LABEL_75:
      v12 = (void *)v18;
      goto LABEL_76;
    }
    goto LABEL_73;
  }
  objc_msgSend(v1, "number");
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6 == 6)
  {
    objc_msgSend(v1, "byteCountUnit");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    v70 = objc_msgSend(v69, "unsignedIntegerValue");

    v71 = 1000;
    if (v70 != 2)
      v71 = 1;
    if (v70 == 4)
      v71 = 1000000;
    if (v70 == 8)
      v71 = 1000000000;
    if (v70 == 16)
      v71 = 1000000000000;
    if (v70 == 32)
      v71 = 1000000000000000;
    if (v70 == 64)
      v72 = 1000000000000000000;
    else
      v72 = v71;
    v73 = objc_alloc(MEMORY[0x1E0D13F80]);
    objc_msgSend(v1, "number");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v73, "initWithByteCount:", v72 * objc_msgSend(v30, "longLongValue"));

    goto LABEL_71;
  }
  if (v6 == 7)
  {
    objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "calendarUnit");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = objc_msgSend(v31, "integerValue");
    objc_msgSend(v1, "number");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "dateByAddingUnit:value:toDate:options:", v32, objc_msgSend(v33, "integerValue"), v105, 0);
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    v35 = objc_alloc(MEMORY[0x1E0D140A8]);
    objc_msgSend(v34, "timeIntervalSinceDate:", v105);
    v12 = (void *)objc_msgSend(v35, "initWithTimeInterval:");

LABEL_71:
    goto LABEL_76;
  }
  v12 = v29;
LABEL_73:
  if (v6 == 5)
  {
    v74 = objc_alloc(MEMORY[0x1E0CB3758]);
    objc_msgSend(v1, "number");
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v75, "doubleValue");
    v77 = v76;
    objc_msgSend(v1, "measurementUnit");
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v74, "initWithDoubleValue:unit:", v78, v77);

    goto LABEL_75;
  }
LABEL_76:
  v79 = v2 == 999 || v2 == 5;
  v80 = 4;
  if (!v79)
    v80 = 5;
  if (v12)
    v81 = v2;
  else
    v81 = v80;
  if (v81 == 999)
  {
    v82 = (void *)MEMORY[0x1E0D13EB8];
    objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v12, v5, 99);
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v82, "notPredicateWithSubpredicate:", v83);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D13EB0], "predicateWithValue:forProperty:comparisonType:", v12, v5);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
  }

LABEL_88:
  return v38;
}

uint64_t WFDateComparisonResultForComparisonOperator(unint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id *v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  void *v111;
  void *v112;
  _QWORD aBlock[4];
  _QWORD v114[2];
  void *v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t);
  void *v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;

  v122 = *MEMORY[0x1E0C80C00];
  v11 = a3;
  v12 = a4;
  v13 = a6;
  v14 = v11;
  v15 = v12;
  v16 = v13;
  v17 = (void *)MEMORY[0x1E0C99D68];
  v109 = a2;
  objc_msgSend(v17, "date");
  v18 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v19;
  if (a5)
  {
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __WFPredicateForComparisonOperator_block_invoke;
    aBlock[3] = &unk_1E7AF36A8;
    v114[1] = a5;
    v105 = (id *)v114;
    v21 = v19;
    v114[0] = v21;
    v112 = _Block_copy(aBlock);
    objc_msgSend(v21, "components:fromDate:", a5, v18);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "nextDateAfterDate:matchingComponents:options:", v18, v22, 1024);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    v24 = v23 != 0;
    v25 = a5;
  }
  else
  {
    v25 = 0;
    v24 = 0;
    v112 = &__block_literal_global_135_40055;
  }
  __WFPredicateForComparisonOperator_block_invoke_3(v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "lastObject");
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v27)
    v27 = &unk_1E7B8B7B8;
  v28 = objc_msgSend(v27, "unsignedIntegerValue");
  v110 = (void *)v18;
  v111 = v20;
  if (a1 - 1000 < 2)
    goto LABEL_9;
  if (a1 == 1002)
  {
    v107 = v16;
    if (v24)
    {
      v56 = (void *)MEMORY[0x1E0CB3880];
      v115 = (void *)MEMORY[0x1E0C809B0];
      v116 = 3221225472;
      v117 = __WFPredicateForComparisonOperator_block_invoke_5;
      v118 = &unk_1E7AF37D0;
      v119 = v20;
      v120 = v112;
      objc_msgSend(v56, "predicateWithBlock:", &v115);
      v50 = (void *)objc_claimAutoreleasedReturnValue();

      v30 = v119;
    }
    else
    {
      objc_msgSend(v20, "startOfDayForDate:", v18);
      v65 = objc_claimAutoreleasedReturnValue();
      v66 = v20;
      v30 = (id)v65;
      objc_msgSend(v66, "dateByAddingUnit:value:toDate:options:", 16, 1, v65, 0);
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v68 = (void *)MEMORY[0x1E0CB3518];
      v102 = v27;
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v30);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v68, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v99, v69, 0, 3, 0);
      v104 = a5;
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      v115 = v70;
      v71 = (void *)MEMORY[0x1E0CB3518];
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v67);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v71, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v72, v73, 0, 0, 0);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      v116 = (uint64_t)v74;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v115, 2);
      v75 = (void *)objc_claimAutoreleasedReturnValue();

      a5 = v104;
      objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v75);
      v50 = (void *)objc_claimAutoreleasedReturnValue();

      v27 = v102;
    }
    v53 = v107;
    goto LABEL_38;
  }
  if (a1 == 1003)
  {
LABEL_9:
    v101 = v27;
    v103 = a5;
    if (a1 == 1003)
      v29 = v14;
    else
      v29 = (id)v18;
    (*((void (**)(void *, id))v112 + 2))(v112, v29);
    v30 = (id)objc_claimAutoreleasedReturnValue();
    v31 = v15;
    if (a1 != 1003)
    {
      objc_msgSend(v16, "magnitude");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = objc_msgSend(v32, "integerValue");

      objc_msgSend(v16, "unitString");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = +[WFDurationQuantityFieldParameter calendarUnitFromUnitString:](WFDurationQuantityFieldParameter, "calendarUnitFromUnitString:", v34);

      if (a1 == 1001)
        v36 = -v33;
      else
        v36 = v33;
      objc_msgSend(v111, "dateByAddingUnit:value:toDate:options:", v35, v36, v110, 0);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
    }
    (*((void (**)(void *, void *))v112 + 2))(v112, v31);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    if (a1 != 1003)

    v106 = v16;
    if (objc_msgSend(v30, "compare:", v37) == 1)
    {
      objc_msgSend(v111, "dateByAddingUnit:value:toDate:options:", v28, 1, v30, 0);
      v38 = objc_claimAutoreleasedReturnValue();

      v30 = (id)v38;
    }
    if (a1 == 1001)
      v39 = 1;
    else
      v39 = 3;
    if (a1 == 1001)
      v40 = 3;
    else
      v40 = 1;
    v41 = (void *)MEMORY[0x1E0CB3518];
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v30);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v42, v43, 0, v39, 0);
    v44 = (void *)objc_claimAutoreleasedReturnValue();

    v45 = (void *)MEMORY[0x1E0CB3518];
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v37);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v46, v47, 0, v40, 0);
    v48 = (void *)objc_claimAutoreleasedReturnValue();

    if (v24)
    {
      v49 = (void *)MEMORY[0x1E0CB3880];
      v115 = (void *)MEMORY[0x1E0C809B0];
      v116 = 3221225472;
      v117 = __WFPredicateForComparisonOperator_block_invoke_4;
      v118 = &unk_1E7AF37A8;
      v121 = v112;
      v119 = v44;
      v120 = v48;
      objc_msgSend(v49, "predicateWithBlock:", &v115);
      v50 = (void *)objc_claimAutoreleasedReturnValue();

      v51 = v121;
    }
    else
    {
      v52 = (void *)MEMORY[0x1E0CB3528];
      v115 = v44;
      v116 = (uint64_t)v48;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v115, 2);
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v52, "andPredicateWithSubpredicates:", v51);
      v50 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v53 = v106;
    goto LABEL_31;
  }
  if (!v24)
  {
    if (a1 > 4 || ((1 << a1) & 0x15) == 0)
      goto LABEL_55;
    v103 = a5;
    (*((void (**)(void *, id))v112 + 2))(v112, v14);
    v30 = (id)objc_claimAutoreleasedReturnValue();
    if (v30)
    {
      objc_msgSend(v111, "dateByAddingUnit:value:toDate:options:", v28, 1, v30, 0);
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      if (a1)
      {
LABEL_46:
        if (a1 == 4)
        {
          v101 = v27;
          v53 = v16;
          v87 = (void *)MEMORY[0x1E0CB3518];
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
          v100 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v30);
          v98 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v87, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v100, v98, 0, 3, 0);
          v88 = (void *)objc_claimAutoreleasedReturnValue();
          v115 = v88;
          v89 = (void *)MEMORY[0x1E0CB3518];
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
          v90 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v78);
          v91 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v89, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v90, v91, 0, 0, 0);
          v92 = (void *)objc_claimAutoreleasedReturnValue();
          v116 = (uint64_t)v92;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v115, 2);
          v80 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v80);
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          goto LABEL_53;
        }
        if (a1 == 2)
        {
          v101 = v27;
          v53 = v16;
          v79 = (void *)MEMORY[0x1E0CB3518];
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
          v80 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v78);
          v81 = (void *)objc_claimAutoreleasedReturnValue();
          v82 = v79;
          v83 = v80;
          v84 = v81;
          v85 = 2;
LABEL_51:
          objc_msgSend(v82, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v83, v84, 0, v85, 0);
          v50 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_53:
LABEL_31:
          a5 = v103;
          v54 = v105;
          v55 = v109;
          v27 = v101;
          goto LABEL_39;
        }

        a5 = v103;
LABEL_55:
        v53 = v16;
        v93 = (void *)MEMORY[0x1E0CB3518];
        objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
        v30 = (id)objc_claimAutoreleasedReturnValue();
        v94 = (void *)MEMORY[0x1E0CB35D0];
        (*((void (**)(void *, id))v112 + 2))(v112, v14);
        v95 = v27;
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v94, "expressionForConstantValue:", v96);
        v97 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v93, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v30, v97, 0, a1, 0);
        v50 = (void *)objc_claimAutoreleasedReturnValue();

        v27 = v95;
        goto LABEL_38;
      }
    }
    else
    {
      v78 = 0;
      if (a1)
        goto LABEL_46;
    }
    v101 = v27;
    v53 = v16;
    v86 = (void *)MEMORY[0x1E0CB3518];
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v30);
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    v82 = v86;
    v83 = v80;
    v84 = v81;
    v85 = 0;
    goto LABEL_51;
  }
  v108 = v16;
  v57 = (void *)MEMORY[0x1E0CB3518];
  v58 = v27;
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForEvaluatedObject");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v60 = (void *)MEMORY[0x1E0CB35D0];
  (*((void (**)(void *, id))v112 + 2))(v112, v14);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "expressionForConstantValue:", v61);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "predicateWithLeftExpression:rightExpression:modifier:type:options:", v59, v62, 0, a1, 0);
  v63 = (void *)objc_claimAutoreleasedReturnValue();

  v27 = v58;
  v64 = (void *)MEMORY[0x1E0CB3880];
  v115 = (void *)MEMORY[0x1E0C809B0];
  v116 = 3221225472;
  v117 = __WFPredicateForComparisonOperator_block_invoke_6;
  v118 = &unk_1E7AF37D0;
  v119 = v63;
  v120 = v112;
  v53 = v108;
  v30 = v63;
  objc_msgSend(v64, "predicateWithBlock:", &v115);
  v50 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_38:
  v55 = v109;
  v54 = v105;
LABEL_39:

  if (a5)
  v76 = objc_msgSend(v50, "evaluateWithObject:", v55);

  return v76;
}

uint64_t WFPBSetupAutomationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;
  BOOL v33;
  uint64_t v34;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_39;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_39;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_43;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_43:
          v33 = v22 != 0;
          v34 = 40;
          goto LABEL_48;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_39;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_39:
          v32 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_45;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_47;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_47:
      v33 = v28 != 0;
      v34 = 41;
LABEL_48:
      *(_BYTE *)(a1 + v34) = v33;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1A3C234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A3D410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A3D538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A3D95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40568(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__40569(uint64_t a1)
{

}

id WFLNComparisonBetweenQueryWithDates(void *a1, uint64_t a2, void *a3, void *a4)
{
  objc_class *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v24[3];

  v24[2] = *MEMORY[0x1E0C80C00];
  v7 = (objc_class *)MEMORY[0x1E0D43E38];
  v8 = a4;
  v9 = a3;
  v10 = a1;
  v11 = [v7 alloc];
  objc_msgSend(MEMORY[0x1E0D43D90], "dateValueType");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithValue:valueType:", v9, v12);

  v14 = objc_alloc(MEMORY[0x1E0D43E38]);
  objc_msgSend(MEMORY[0x1E0D43D90], "dateValueType");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(v14, "initWithValue:valueType:", v8, v15);

  v17 = objc_alloc(MEMORY[0x1E0D43E38]);
  v24[0] = v13;
  v24[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D43D90], "dateValueType");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)objc_msgSend(v17, "initWithValues:memberValueType:", v18, v19);

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "wf_propertyQueryWithValue:contentOperator:parameterIndex:", v20, 1003, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  return v22;
}

id WFLNComparisonIsToday(void *a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v5 = (void *)MEMORY[0x1E0C99D48];
  v6 = a3;
  v7 = a1;
  objc_msgSend(v5, "currentCalendar");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "startOfDayForDate:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "dateByAddingUnit:value:toDate:options:", 16, 1, v9, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "dateByAddingUnit:value:toDate:options:", 0x8000, -1, v10, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  WFLNComparisonBetweenQueryWithDates(v7, a2, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

id WFLNComparisonInTheLast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v9 = (void *)MEMORY[0x1E0C99D48];
  v10 = a5;
  v11 = a1;
  objc_msgSend(v9, "currentCalendar");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "dateByAddingUnit:value:toDate:options:", a4, -a3, v10, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  WFLNComparisonBetweenQueryWithDates(v11, a2, v13, v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

id WFLNComparisonInTheNext(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v9 = (void *)MEMORY[0x1E0C99D48];
  v10 = a5;
  v11 = a1;
  objc_msgSend(v9, "currentCalendar");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "dateByAddingUnit:value:toDate:options:", a4, a3, v10, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  WFLNComparisonBetweenQueryWithDates(v11, a2, v10, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

id LNMeasurementValueTypeOfUnit(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D43D38], "lengthValueType");
    v2 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(MEMORY[0x1E0D43D38], "massValueType");
      v2 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(MEMORY[0x1E0D43D38], "temperatureValueType");
        v2 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(MEMORY[0x1E0D43D38], "volumeValueType");
          v2 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(MEMORY[0x1E0D43D38], "speedValueType");
            v2 = objc_claimAutoreleasedReturnValue();
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              objc_msgSend(MEMORY[0x1E0D43D38], "energyValueType");
              v2 = objc_claimAutoreleasedReturnValue();
            }
            else
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
                objc_msgSend(MEMORY[0x1E0D43D38], "durationValueType");
              else
                objc_msgSend(MEMORY[0x1E0D43D38], "unsupportedMeasurementValueType");
              v2 = objc_claimAutoreleasedReturnValue();
            }
          }
        }
      }
    }
  }
  v3 = (void *)v2;

  return v3;
}

id WFLNPropertyQueryForRowTemplateValue(void *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  __CFString *v34;
  __CFString *v35;
  int v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  char isKindOfClass;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  char v59;
  char v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  int v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  NSObject *v81;
  id v82;
  void *v83;
  double v84;
  double v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  void *v95;
  objc_class *aClass;
  uint64_t v97;
  id v98;
  id v99;
  _QWORD v100[4];
  id v101;
  _QWORD v102[4];
  id v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t);
  void (*v114)(uint64_t);
  id v115;
  uint8_t buf[4];
  const char *v117;
  __int16 v118;
  void *v119;
  uint64_t v120;

  v120 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v99 = a2;
  v98 = a3;
  v97 = objc_msgSend(v5, "comparisonOperator");
  v6 = (void *)objc_msgSend(v5, "contentItemClass");
  objc_msgSend(v5, "contentPropertyName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "propertyForName:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  aClass = (objc_class *)objc_msgSend(v8, "propertyClass");
  v9 = objc_msgSend((id)objc_msgSend(v8, "valueItemClass"), "tableTemplateSubjectType");
  objc_msgSend(v8, "userInfo");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
  }
  else
  {
    v11 = 0;
  }
  v12 = v11;

  v110 = 0;
  v111 = &v110;
  v112 = 0x3032000000;
  v113 = __Block_byref_object_copy__40684;
  v114 = __Block_byref_object_dispose__40685;
  v115 = 0;
  v106 = 0;
  v107 = &v106;
  v108 = 0x2020000000;
  v109 = 0;
  objc_msgSend(v99, "parameters");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = MEMORY[0x1E0C809B0];
  v102[0] = MEMORY[0x1E0C809B0];
  v102[1] = 3221225472;
  v102[2] = __WFLNPropertyQueryForRowTemplateValue_block_invoke;
  v102[3] = &unk_1E7AF3AE0;
  v15 = v12;
  v103 = v15;
  v104 = &v110;
  v105 = &v106;
  objc_msgSend(v13, "enumerateObjectsUsingBlock:", v102);

  v16 = (void *)v111[5];
  if (v16)
  {
    switch(v97)
    {
      case 1000:
        v17 = v107[3];
        objc_msgSend(v5, "number");
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = -[NSObject integerValue](v18, "integerValue");
        objc_msgSend(v5, "calendarUnit");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = objc_msgSend(v20, "unsignedIntegerValue");
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        WFLNComparisonInTheNext(v16, v17, v19, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_79;
      case 1001:
        v26 = v107[3];
        objc_msgSend(v5, "number");
        v18 = objc_claimAutoreleasedReturnValue();
        v27 = -[NSObject integerValue](v18, "integerValue");
        objc_msgSend(v5, "calendarUnit");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = objc_msgSend(v28, "unsignedIntegerValue");
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        WFLNComparisonInTheLast(v16, v26, v27, v29, v30);
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_79;
      case 1002:
        if ((-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()) & 1) != 0)
        {
          v24 = (void *)v111[5];
          v25 = v107[3];
          objc_msgSend(MEMORY[0x1E0C99D68], "date");
          v18 = objc_claimAutoreleasedReturnValue();
          WFLNComparisonIsToday(v24, v25, v18);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          getWFAppIntentsLogObject();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
          {
            NSStringFromClass(aClass);
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 136315394;
            v117 = "WFLNPropertyQueryForRowTemplateValue";
            v118 = 2112;
            v119 = v41;
            _os_log_impl(&dword_1C15B3000, v18, OS_LOG_TYPE_FAULT, "%s WFContentOperatorIsToday query has an invalid property class that is %@ instead of NSDate", buf, 0x16u);

          }
          v23 = 0;
        }
        goto LABEL_79;
      case 1003:
        if (!-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
          goto LABEL_14;
        v31 = (void *)v111[5];
        v32 = v107[3];
        objc_msgSend(v5, "date");
        v18 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "anotherDate");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        WFLNComparisonBetweenQueryWithDates(v31, v32, v18, v33);
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_79;
      default:
LABEL_14:
        v34 = (__CFString *)v98;
        v35 = CFSTR("is.workflow.actions.filter.notes");
        if (v34 == CFSTR("is.workflow.actions.filter.notes"))
        {
          v36 = 1;
        }
        else
        {
          if (!v34)
          {

            goto LABEL_28;
          }
          v36 = -[__CFString isEqualToString:](v34, "isEqualToString:", CFSTR("is.workflow.actions.filter.notes"));
        }

        if (v97 == 4)
          v37 = v36;
        else
          v37 = 0;
        if (v37 == 1 && v9 == 4)
        {
          objc_msgSend(v5, "date");
          v18 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "dateByAddingUnit:value:toDate:options:", 64, 1, v18, 0);
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "dateByAddingUnit:value:toDate:options:", 128, -1, v39, 0);
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          WFLNComparisonBetweenQueryWithDates((void *)v111[5], v107[3], v18, v40);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_79:
          goto LABEL_81;
        }
LABEL_28:
        if (-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
        {
          v42 = objc_alloc(MEMORY[0x1E0D43E38]);
          objc_msgSend(v5, "date");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D43D90], "dateValueType");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = objc_msgSend(v42, "initWithValue:valueType:", v43, v44);

        }
        else
        {
          v18 = 0;
        }
        objc_msgSend(v5, "enumeration");
        v45 = (void *)objc_claimAutoreleasedReturnValue();

        if (v45)
        {
          objc_msgSend(v5, "enumeration");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          if (!v46 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
          {

            objc_msgSend(v5, "enumeration");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            isKindOfClass = objc_opt_isKindOfClass();

            if ((isKindOfClass & 1) != 0)
            {
              objc_msgSend(v8, "possibleValues");
              v49 = (void *)objc_claimAutoreleasedReturnValue();
              WFContentPropertyGetPossibleValuesSynchronouslyWithSemaphore();
              v95 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v5, "enumeration");
              v100[0] = v14;
              v100[1] = 3221225472;
              v100[2] = __WFLNPropertyQueryForRowTemplateValue_block_invoke_124;
              v100[3] = &unk_1E7AF3B08;
              v50 = (id)objc_claimAutoreleasedReturnValue();
              v101 = v50;
              objc_msgSend(v95, "if_firstObjectPassingTest:", v100);
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v46)
              {
                v51 = objc_alloc(MEMORY[0x1E0D43E38]);
                objc_msgSend(v5, "enumeration");
                v52 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(MEMORY[0x1E0D43D90], "stringValueType");
                v53 = (void *)objc_claimAutoreleasedReturnValue();
                v46 = (void *)objc_msgSend(v51, "initWithValue:valueType:", v52, v53);

              }
            }
            else
            {
              v46 = 0;
            }
          }
          objc_msgSend(v5, "enumeration");
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          if (v54)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v55 = v54;
            else
              v55 = 0;
          }
          else
          {
            v55 = 0;
          }
          v56 = v55;

          if (!v46 && v56)
          {
            WFNotesFolderLinkValueFromIntentsValue(v56);
            v46 = (void *)objc_claimAutoreleasedReturnValue();
          }
          if (objc_msgSend(v8, "hasPossibleValues"))
          {
            v57 = (void *)v111[5];
            if (v57)
            {
              if (v46)
              {
                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v107[3]);
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v57, "wf_propertyQueryWithValue:contentOperator:parameterIndex:", v46, v97, v58);
                v23 = (void *)objc_claimAutoreleasedReturnValue();

                goto LABEL_79;
              }
            }
          }

        }
        v59 = objc_msgSend(v8, "hasPossibleValues");
        if (v9 == 2)
          v60 = v59;
        else
          v60 = 1;
        if ((v60 & 1) != 0)
          goto LABEL_64;
        objc_msgSend(v5, "string");
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        if (-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
        {
          v62 = (void *)MEMORY[0x1E0D14048];
          objc_msgSend(v5, "phone");
          v63 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v62, "phoneNumberWithPhoneNumberString:", v63);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v64, "normalizedPhoneNumber");
          v65 = objc_claimAutoreleasedReturnValue();

          v61 = (void *)v65;
        }
        else
        {
          if (!-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
            goto LABEL_61;
          objc_msgSend(v5, "email");
          v63 = v61;
          v61 = (void *)objc_claimAutoreleasedReturnValue();
        }

LABEL_61:
        if (objc_msgSend(v61, "length"))
        {
          v66 = objc_alloc(MEMORY[0x1E0D43E38]);
          objc_msgSend(v5, "string");
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D43D90], "stringValueType");
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v69 = objc_msgSend(v66, "initWithValue:valueType:", v67, v68);

          v18 = v69;
        }

LABEL_64:
        v70 = objc_msgSend(v5, "comparisonOperator");
        if ((unint64_t)(v9 - 5) < 3 || v9 == 3 || v9 == 4 && (v70 & 0xFFFFFFFFFFFFFFFELL) == 0x3E8)
        {
          v71 = objc_alloc(MEMORY[0x1E0D43E38]);
          objc_msgSend(v5, "number");
          v72 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D43D90], "int64ValueType");
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          v74 = objc_msgSend(v71, "initWithValue:valueType:", v72, v73);

          v18 = v74;
        }
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", 1);
        v75 = (void *)objc_claimAutoreleasedReturnValue();
        v76 = -[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class());

        if (v76)
        {
          v77 = objc_alloc(MEMORY[0x1E0D43E38]);
          objc_msgSend(v5, "BOOLean");
          v78 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0D43D90], "BOOLValueType");
          v79 = (void *)objc_claimAutoreleasedReturnValue();
          v80 = objc_msgSend(v77, "initWithValue:valueType:", v78, v79);

          v18 = v80;
        }
        if (-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
        {
          getWFAppIntentsLogObject();
          v81 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 136315138;
            v117 = "WFLNPropertyQueryForRowTemplateValue";
            _os_log_impl(&dword_1C15B3000, v81, OS_LOG_TYPE_ERROR, "%s Time intervals are not curently supported for link find/filter actions", buf, 0xCu);
          }

        }
        if (-[objc_class isSubclassOfClass:](aClass, "isSubclassOfClass:", objc_opt_class()))
        {
          v82 = objc_alloc(MEMORY[0x1E0CB3758]);
          objc_msgSend(v5, "number");
          v83 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v83, "doubleValue");
          v85 = v84;
          objc_msgSend(v5, "measurementUnit");
          v86 = (void *)objc_claimAutoreleasedReturnValue();
          v87 = (void *)objc_msgSend(v82, "initWithDoubleValue:unit:", v86, v85);

          v88 = objc_alloc(MEMORY[0x1E0D43E38]);
          objc_msgSend(v5, "measurementUnit");
          v89 = (void *)objc_claimAutoreleasedReturnValue();
          LNMeasurementValueTypeOfUnit(v89);
          v90 = (void *)objc_claimAutoreleasedReturnValue();
          v91 = objc_msgSend(v88, "initWithValue:valueType:", v87, v90);

          v18 = v91;
        }
        if (v18)
        {
          v92 = (void *)v111[5];
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v107[3]);
          v93 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v92, "wf_propertyQueryWithValue:contentOperator:parameterIndex:", v18, v97, v93);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          goto LABEL_79;
        }
        break;
    }
  }
  v23 = 0;
LABEL_81:

  _Block_object_dispose(&v106, 8);
  _Block_object_dispose(&v110, 8);

  return v23;
}

void sub_1C1A42830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40684(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__40685(uint64_t a1)
{

}

id WFQueryParameterMetadataByPropertyIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  _QWORD v6[4];
  id v7;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  objc_msgSend(v1, "parameters");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __WFQueryParameterMetadataByPropertyIdentifier_block_invoke;
  v6[3] = &unk_1E7AF3B30;
  v4 = v2;
  v7 = v4;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v6);

  return v4;
}

void WFDestroyDB()
{
  char v0;
  char v1;
  id v2;
  void *v3;
  NSObject *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  NSObject *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  id v46;
  id v47;
  id v48;
  _BYTE v49[128];
  _QWORD v50[3];
  uint8_t buf[4];
  const char *v52;
  __int16 v53;
  void *v54;
  __int16 v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[4];

  v59[1] = *MEMORY[0x1E0C80C00];
  v47 = 0;
  v48 = 0;
  WFTerminateDaemon(&v48, &v47);
  v1 = v0;
  v40 = v48;
  v2 = v47;
  v3 = v2;
  if ((v1 & 1) == 0 && v2)
  {
    getWFDatabaseLogObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136315394;
      v52 = "WFDestroyDB";
      v53 = 2114;
      v54 = v3;
      _os_log_impl(&dword_1C15B3000, v4, OS_LOG_TYPE_FAULT, "%s Failed to terminate siriactionsd before resetting the database: %{public}@", buf, 0x16u);
    }

  }
  objc_msgSend(MEMORY[0x1E0C97C08], "wf_shortcutsConfiguration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc(MEMORY[0x1E0C97C00]);
  v7 = (void *)MEMORY[0x1E0C97B98];
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v59[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v59, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "mergedModelFromBundles:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v6, "initWithManagedObjectModel:", v10);

  objc_msgSend(v5, "URL");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = *MEMORY[0x1E0C979E8];
  v57 = *MEMORY[0x1E0C97948];
  v58 = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v58, &v57, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v46 = v3;
  v38 = v11;
  v15 = objc_msgSend(v11, "destroyPersistentStoreAtURL:withType:options:error:", v12, v13, v14, &v46);
  v16 = v46;

  if ((v15 & 1) == 0)
  {
    getWFDatabaseLogObject();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
    {
      objc_msgSend(v5, "URL");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315650;
      v52 = "WFDestroyDB";
      v53 = 2114;
      v54 = v18;
      v55 = 2114;
      v56 = v16;
      _os_log_impl(&dword_1C15B3000, v17, OS_LOG_TYPE_FAULT, "%s Failed to destroy persistent store at URL: %{public}@. %{public}@", buf, 0x20u);

    }
  }
  objc_msgSend(v5, "URL");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v50[0] = v19;
  objc_msgSend(v5, "URL");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "URLByDeletingPathExtension");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "URLByAppendingPathExtension:", CFSTR("sqlite-shm"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v50[1] = v22;
  v39 = v5;
  objc_msgSend(v5, "URL");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "URLByDeletingPathExtension");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "URLByAppendingPathExtension:", CFSTR("sqlite-wal"));
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v50[2] = v25;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v50, 3);
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  v44 = 0u;
  v45 = 0u;
  v42 = 0u;
  v43 = 0u;
  v27 = v26;
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v42, v49, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v43;
    do
    {
      for (i = 0; i != v29; ++i)
      {
        v32 = v16;
        if (*(_QWORD *)v43 != v30)
          objc_enumerationMutation(v27);
        v33 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * i);
        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = v16;
        v35 = objc_msgSend(v34, "removeItemAtURL:error:", v33, &v41);
        v16 = v41;

        if ((v35 & 1) == 0 && (objc_msgSend(v16, "vc_isFileNotFound") & 1) == 0)
        {
          getWFDatabaseLogObject();
          v36 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 136315650;
            v52 = "WFDestroyDB";
            v53 = 2114;
            v54 = v33;
            v55 = 2114;
            v56 = v16;
            _os_log_impl(&dword_1C15B3000, v36, OS_LOG_TYPE_FAULT, "%s Failed to delete database file at %{public}@: %{public}@", buf, 0x20u);
          }

        }
      }
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v42, v49, 16);
    }
    while (v29);
  }

  objc_msgSend(v40, "invalidate");
  +[WFDatabase defaultDatabase](WFDatabase, "defaultDatabase");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "invalidateAllObjectsAndNotify");

}

void WFPresentInitializationErrorIfNecessary(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;

  v3 = a2;
  if (a1 == 2)
  {
    v4 = (void *)objc_opt_new();
    WFLocalizedString(CFSTR("Corrupt Database"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setTitle:", v5);

    WFLocalizedString(CFSTR("The Shortcuts database cannot be read because it is corrupt. You can fix this by resetting your shortcuts. Your shortcuts will be lost, but if you use iCloud Sync they will be restored."));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setMessage:", v6);

    v7 = (void *)MEMORY[0x1E0D13DE8];
    WFLocalizedString(CFSTR("Reset Shortcuts"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __WFPresentInitializationErrorIfNecessary_block_invoke;
    v14[3] = &unk_1E7AF94B0;
    v9 = v3;
    v15 = v9;
    objc_msgSend(v7, "buttonWithTitle:style:handler:", v8, 2, v14);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "addButton:", v10);

    v11 = (void *)MEMORY[0x1E0D13DE8];
    WFLocalizedString(CFSTR("Exit"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "buttonWithTitle:style:handler:", v12, 0, &__block_literal_global_40759);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "addButton:", v13);

    objc_msgSend(v9, "presentAlert:", v4);
  }

}

void WFSetIntentOnClientBoundCommand(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = (objc_class *)MEMORY[0x1E0D88160];
  v4 = a2;
  v5 = a1;
  v10 = objc_alloc_init(v3);
  objc_msgSend(v4, "_intentInstanceDescription");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "type");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setTypeName:", v7);

  objc_msgSend(v4, "backingStore");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "setData:", v9);
  objc_msgSend(v5, "setIntent:", v10);

}

id getWFCloudKitWSLogObject()
{
  if (getWFCloudKitWSLogObject_onceToken != -1)
    dispatch_once(&getWFCloudKitWSLogObject_onceToken, &__block_literal_global_41026);
  return (id)getWFCloudKitWSLogObject_log;
}

void __getWFCloudKitWSLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "CloudKitWS");
  v1 = (void *)getWFCloudKitWSLogObject_log;
  getWFCloudKitWSLogObject_log = (uint64_t)v0;

}

id WFSupportedContentOperatorsForContentType(uint64_t a1, char a2, char a3, char a4)
{
  void *v8;
  void *v9;
  void *v10;

  if (a1)
  {
    v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithObjects:", &unk_1E7B8B920, 0);
    v9 = v8;
    if (a1 != 1)
    {
      objc_msgSend(v8, "addObject:", &unk_1E7B8B938);
      objc_msgSend(v9, "addObject:", &unk_1E7B8B8F0);
      objc_msgSend(v9, "addObject:", &unk_1E7B8B908);
      if ((a2 & 1) == 0)
      {
        switch(a1)
        {
          case 2:
            objc_msgSend(v9, "addObject:", &unk_1E7B8B950);
            objc_msgSend(v9, "addObject:", &unk_1E7B8B968);
            objc_msgSend(v9, "addObject:", &unk_1E7B8B980);
            v10 = &unk_1E7B8B998;
            goto LABEL_10;
          case 3:
          case 5:
          case 6:
          case 7:
            objc_msgSend(v9, "addObject:", &unk_1E7B8B9B0);
            if ((a3 & 1) != 0)
            {
              objc_msgSend(v9, "addObject:", &unk_1E7B8B9E0);
              objc_msgSend(v9, "removeObject:", &unk_1E7B8B920);
              objc_msgSend(v9, "removeObject:", &unk_1E7B8B938);
            }
            else
            {
              objc_msgSend(v9, "addObject:", &unk_1E7B8B9C8);
              objc_msgSend(v9, "addObject:", &unk_1E7B8B9E0);
              objc_msgSend(v9, "addObject:", &unk_1E7B8B9F8);
            }
            v10 = &unk_1E7B8BA10;
            goto LABEL_10;
          case 4:
            objc_msgSend(v9, "addObject:", &unk_1E7B8B9B0);
            objc_msgSend(v9, "addObject:", &unk_1E7B8B9E0);
            objc_msgSend(v9, "addObject:", &unk_1E7B8BA28);
            objc_msgSend(v9, "addObject:", &unk_1E7B8BA10);
            if ((a4 & 2) != 0)
              objc_msgSend(v9, "addObject:", &unk_1E7B8BA40);
            if ((a4 & 1) == 0)
              return v9;
            v10 = &unk_1E7B8BA58;
LABEL_10:
            objc_msgSend(v9, "addObject:", v10);
            break;
          default:
            return v9;
        }
      }
    }
  }
  else
  {
    v9 = &unk_1E7B8DA78;
  }
  return v9;
}

void sub_1C1A4875C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A48ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!ContactsLibraryCore_frameworkLibrary_41591)
    ContactsLibraryCore_frameworkLibrary_41591 = _sl_dlopen();
  if (!ContactsLibraryCore_frameworkLibrary_41591)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLinkActionPlacemarkParameterDefinition.m"), 25, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CNPostalAddressFormatter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNPostalAddressFormatterClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLinkActionPlacemarkParameterDefinition.m"), 26, CFSTR("Unable to find class %s"), "CNPostalAddressFormatter");

LABEL_8:
    __break(1u);
  }
  getCNPostalAddressFormatterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCLPlacemarkClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_41611)
    CoreLocationLibraryCore_frameworkLibrary_41611 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_41611)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLinkActionPlacemarkParameterDefinition.m"), 28, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLPlacemark");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLPlacemarkClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLinkActionPlacemarkParameterDefinition.m"), 29, CFSTR("Unable to find class %s"), "CLPlacemark");

LABEL_8:
    __break(1u);
  }
  getCLPlacemarkClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1A49198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41680(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41681(uint64_t a1)
{

}

id WFContentOperatorToLNComparisonPropertyMapping()
{
  _QWORD v1[10];
  _QWORD v2[11];

  v2[10] = *MEMORY[0x1E0C80C00];
  v1[0] = &unk_1E7B8BA70;
  v1[1] = &unk_1E7B8BAA0;
  v2[0] = &unk_1E7B8BA88;
  v2[1] = &unk_1E7B8BAB8;
  v1[2] = &unk_1E7B8BAD0;
  v1[3] = &unk_1E7B8BB00;
  v2[2] = &unk_1E7B8BAE8;
  v2[3] = &unk_1E7B8BB18;
  v1[4] = &unk_1E7B8BB30;
  v1[5] = &unk_1E7B8BB60;
  v2[4] = &unk_1E7B8BB48;
  v2[5] = &unk_1E7B8BB78;
  v1[6] = &unk_1E7B8BB90;
  v1[7] = &unk_1E7B8BBC0;
  v2[6] = &unk_1E7B8BBA8;
  v2[7] = &unk_1E7B8BBD8;
  v1[8] = &unk_1E7B8BBF0;
  v1[9] = &unk_1E7B8BC20;
  v2[8] = &unk_1E7B8BC08;
  v2[9] = &unk_1E7B8BC38;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v2, v1, 10);
  return (id)objc_claimAutoreleasedReturnValue();
}

id WFMakeHomeError(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v8 = *MEMORY[0x1E0CB3388];
    v9[0] = v3;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v9, &v8, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("WFHomeWorkflowControllerErrorDomain"), a1, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1C1A4DB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  _Block_object_dispose(&a71, 8);
  _Unwind_Resume(a1);
}

uint64_t WFDefaultComparatorBlock_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = a2;
  v5 = a3;
  if ((objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    v6 = objc_msgSend(v4, "compare:", v5);
  }
  else if (v4 > v5)
  {
    v6 = -1;
  }
  else
  {
    v6 = v4 < v5;
  }

  return v6;
}

id WFGetClosestCommonElementForObject(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t i;
  void *v20;
  void *v21;
  void *v22;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  if (v9)
  {
    if (v10)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSObject>  _Nullable WFGetClosestCommonElementForObject(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, WFThreeWayMergingSearchDirection)");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "handleFailureInFunction:file:lineNumber:description:", v26, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 133, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("object"));

    if (v10)
    {
LABEL_3:
      if (v11)
        goto LABEL_4;
LABEL_28:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSObject>  _Nullable WFGetClosestCommonElementForObject(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, WFThreeWayMergingSearchDirection)");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "handleFailureInFunction:file:lineNumber:description:", v30, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 135, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("firstOrderedSet"));

      if (v12)
        goto LABEL_5;
LABEL_29:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSObject>  _Nullable WFGetClosestCommonElementForObject(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, WFThreeWayMergingSearchDirection)");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "handleFailureInFunction:file:lineNumber:description:", v32, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 136, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("secondOrderedSet"));

      goto LABEL_5;
    }
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSObject>  _Nullable WFGetClosestCommonElementForObject(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, WFThreeWayMergingSearchDirection)");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "handleFailureInFunction:file:lineNumber:description:", v28, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 134, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("baseOrderedSet"));

  if (!v11)
    goto LABEL_28;
LABEL_4:
  if (!v12)
    goto LABEL_29;
LABEL_5:
  v13 = objc_msgSend(v11, "indexOfObject:", v9);
  v14 = objc_msgSend(v12, "indexOfObject:", v9);
  v15 = 0;
  if (v13 == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_22;
  v16 = v14;
  if (v14 == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_22;
  if (!a5)
  {
    for (i = v13 + 1; i < objc_msgSend(v11, "count"); ++i)
    {
      v20 = (void *)MEMORY[0x1C3BB3598]();
      objc_msgSend(v11, "objectAtIndexedSubscript:", i);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if ((WFIsDeleted(v15, v10, v11, v12) & 1) == 0 && objc_msgSend(v12, "indexOfObject:", v15) > v16)
      {
        v24 = v20;
        goto LABEL_25;
      }

      objc_autoreleasePoolPop(v20);
    }
    goto LABEL_21;
  }
  if (a5 != 1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSObject>  _Nullable WFGetClosestCommonElementForObject(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, WFThreeWayMergingSearchDirection)");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v22, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 167, CFSTR("Unexpected direction value"));

    goto LABEL_21;
  }
  if (v13 < 1)
  {
LABEL_21:
    v15 = 0;
    goto LABEL_22;
  }
  v17 = v13 + 1;
  while (1)
  {
    v18 = (void *)MEMORY[0x1C3BB3598]();
    objc_msgSend(v11, "objectAtIndexedSubscript:", v17 - 2);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if ((WFIsDeleted(v15, v10, v11, v12) & 1) == 0 && objc_msgSend(v12, "indexOfObject:", v15) < v16)
      break;

    objc_autoreleasePoolPop(v18);
    if ((unint64_t)--v17 < 2)
      goto LABEL_21;
  }
  v24 = v18;
LABEL_25:
  objc_autoreleasePoolPop(v24);
LABEL_22:

  return v15;
}

uint64_t WFIsDeleted(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7)
  {
    if (v8)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFIsDeleted(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 120, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("object"));

    if (v8)
    {
LABEL_3:
      if (v9)
        goto LABEL_4;
LABEL_13:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFIsDeleted(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong)");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 122, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("firstOrderedSet"));

      if (v10)
        goto LABEL_5;
      goto LABEL_14;
    }
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFIsDeleted(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong)");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "handleFailureInFunction:file:lineNumber:description:", v16, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 121, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("baseOrderedSet"));

  if (!v9)
    goto LABEL_13;
LABEL_4:
  if (v10)
    goto LABEL_5;
LABEL_14:
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFIsDeleted(id<NSObject>  _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong, NSOrderedSet * _Nonnull __strong)");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 123, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("secondOrderedSet"));

LABEL_5:
  if (objc_msgSend(v8, "containsObject:", v7))
  {
    if (objc_msgSend(v9, "containsObject:", v7))
      v11 = objc_msgSend(v10, "containsObject:", v7) ^ 1;
    else
      v11 = 1;
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

BOOL WFOrderedSetContainsPath(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  unsigned int (**v10)(id, id);
  uint64_t v11;
  _BOOL8 v12;
  unint64_t v14;
  unint64_t v15;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7)
  {
    if (v8)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFOrderedSetContainsPath(NSOrderedSet * _Nonnull __strong, id<NSObject>  _Nonnull __strong, id<NSObject>  _Nonnull __strong, BOOL (^ _Nonnull __strong)(id<NSObject>  _Nonnull __strong))");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 175, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("orderedSet"));

    if (v8)
    {
LABEL_3:
      if (v9)
        goto LABEL_4;
LABEL_18:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFOrderedSetContainsPath(NSOrderedSet * _Nonnull __strong, id<NSObject>  _Nonnull __strong, id<NSObject>  _Nonnull __strong, BOOL (^ _Nonnull __strong)(id<NSObject>  _Nonnull __strong))");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v22, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 177, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("end"));

      if (v10)
        goto LABEL_5;
LABEL_19:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFOrderedSetContainsPath(NSOrderedSet * _Nonnull __strong, id<NSObject>  _Nonnull __strong, id<NSObject>  _Nonnull __strong, BOOL (^ _Nonnull __strong)(id<NSObject>  _Nonnull __strong))");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "handleFailureInFunction:file:lineNumber:description:", v24, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 178, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("shouldConsiderObjectBlock"));

      goto LABEL_5;
    }
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFOrderedSetContainsPath(NSOrderedSet * _Nonnull __strong, id<NSObject>  _Nonnull __strong, id<NSObject>  _Nonnull __strong, BOOL (^ _Nonnull __strong)(id<NSObject>  _Nonnull __strong))");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("NSOrderedSet+WFThreeWayMerging.m"), 176, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("start"));

  if (!v9)
    goto LABEL_18;
LABEL_4:
  if (!v10)
    goto LABEL_19;
LABEL_5:
  if (v10[2](v10, v8) && v10[2](v10, v9) && (v11 = objc_msgSend(v7, "indexOfObject:", v8), v11 != 0x7FFFFFFFFFFFFFFFLL))
  {
    v14 = v11;
    v15 = objc_msgSend(v7, "indexOfObject:", v9);
    v12 = v15 != 0x7FFFFFFFFFFFFFFFLL && v15 > v14;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

id WFVariableDictionaryWithAggrandizements(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  const __CFString *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    v5 = CFSTR("Aggrandizements");
    objc_msgSend(v1, "if_map:", &__block_literal_global_42691);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = v2;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = (void *)MEMORY[0x1E0C9AA70];
  }

  return v3;
}

void sub_1C1A50238(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42700(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42701(uint64_t a1)
{

}

id WFVariableClassesByType()
{
  _QWORD v1[7];
  _QWORD v2[8];

  v2[7] = *MEMORY[0x1E0C80C00];
  v1[0] = CFSTR("Variable");
  v2[0] = objc_opt_class();
  v1[1] = CFSTR("Clipboard");
  v2[1] = objc_opt_class();
  v1[2] = CFSTR("CurrentDate");
  v2[2] = objc_opt_class();
  v1[3] = CFSTR("DeviceDetails");
  v2[3] = objc_opt_class();
  v1[4] = CFSTR("ExtensionInput");
  v2[4] = objc_opt_class();
  v1[5] = CFSTR("ActionOutput");
  v2[5] = objc_opt_class();
  v1[6] = CFSTR("Ask");
  v2[6] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v2, v1, 7);
  return (id)objc_claimAutoreleasedReturnValue();
}

id UIApplicationWillEnterForegroundNotificationFunction()
{
  return (id)constantUIApplicationWillEnterForegroundNotification;
}

id initUIApplicationWillEnterForegroundNotification()
{
  id *v0;

  if (UIKitLibrary_sOnce_42807 != -1)
    dispatch_once(&UIKitLibrary_sOnce_42807, &__block_literal_global_42808);
  v0 = (id *)dlsym((void *)UIKitLibrary_sLib_42813, "UIApplicationWillEnterForegroundNotification");
  if (!v0)
    __assert_rtn("initUIApplicationWillEnterForegroundNotification", "ICPostToInstagramAction.m", 21, "constant");
  objc_storeStrong((id *)&constantUIApplicationWillEnterForegroundNotification, *v0);
  getUIApplicationWillEnterForegroundNotification[0] = (uint64_t (*)())UIApplicationWillEnterForegroundNotificationFunction;
  return (id)constantUIApplicationWillEnterForegroundNotification;
}

id UIPasteboardFunction_42805()
{
  return (id)classUIPasteboard_42810;
}

Class initUIPasteboard_42806()
{
  Class result;

  if (UIKitLibrary_sOnce_42807 != -1)
    dispatch_once(&UIKitLibrary_sOnce_42807, &__block_literal_global_42808);
  result = objc_getClass("UIPasteboard");
  classUIPasteboard_42810 = (uint64_t)result;
  getUIPasteboardClass_42804 = (uint64_t (*)())UIPasteboardFunction_42805;
  return result;
}

void sub_1C1A519EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A51B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A51CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A532EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getDNDAppActionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  DoNotDisturbLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DNDAppAction");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDNDAppActionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDNDAppActionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFFocusConfigurationLinkAction.m"), 29, CFSTR("Unable to find class %s"), "DNDAppAction");

    __break(1u);
  }
}

void *DoNotDisturbLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!DoNotDisturbLibraryCore_frameworkLibrary)
    DoNotDisturbLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)DoNotDisturbLibraryCore_frameworkLibrary;
  if (!DoNotDisturbLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DoNotDisturbLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFFocusConfigurationLinkAction.m"), 26, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getDNDModeConfigurationServiceClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  DoNotDisturbLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DNDModeConfigurationService");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDNDModeConfigurationServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDNDModeConfigurationServiceClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFFocusConfigurationLinkAction.m"), 27, CFSTR("Unable to find class %s"), "DNDModeConfigurationService");

    __break(1u);
  }
}

void __getDNDApplicationIdentifierClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  DoNotDisturbLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DNDApplicationIdentifier");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDNDApplicationIdentifierClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDNDApplicationIdentifierClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFFocusConfigurationLinkAction.m"), 28, CFSTR("Unable to find class %s"), "DNDApplicationIdentifier");

    __break(1u);
  }
}

void sub_1C1A546BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A547D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__43084(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__43085(uint64_t a1)
{

}

void sub_1C1A561C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v11;

  if (a2 == 1)
  {
    v11 = objc_begin_catch(exception_object);
    objc_opt_class();
    NSLog(CFSTR("*** Caught exception decoding value for key \"%@\" on class %@: %@"));
    objc_exception_throw(objc_retainAutorelease(v11));
  }
  _Unwind_Resume(exception_object);
}

uint64_t coderRequiresSecureCoding(void *a1)
{
  id v1;
  uint64_t (*v2)(id, char *);
  uint64_t v3;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (v2 = (uint64_t (*)(id, char *))objc_msgSend(v1, "methodForSelector:", sel_requiresSecureCoding)) != 0)
  {
    v3 = v2(v1, sel_requiresSecureCoding);
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void verifyAllowedClassesByPropertyKey(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  objc_msgSend(a1, "allowedSecureCodingClassesByPropertyKey");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v2 = objc_alloc(MEMORY[0x1E0C99E20]);
  objc_msgSend(v7, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v2, "initWithArray:", v3);

  objc_msgSend(a1, "encodingBehaviorsByPropertyKey");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "keysOfEntriesPassingTest:", &__block_literal_global_64);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "minusSet:", v6);
  if (objc_msgSend(v4, "count"))
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("Cannot encode %@ securely, because keys are missing from +allowedSecureCodingClassesByPropertyKey: %@"), a1, v4);

}

BOOL __encodablePropertyKeysForClass_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "unsignedIntegerValue") != 0;
}

void sub_1C1A56C44(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A56F60(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t WFPBAppSessionCompletedEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_34;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            LODWORD(v22) = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_36:
        *(_DWORD *)(a1 + 8) = v22;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 24;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 16;
        }
        v26 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1A5A7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t (*initSCPreferencesGetValue(uint64_t a1, uint64_t a2))()
{
  uint64_t (*result)();

  if (SystemConfigurationLibrary_sOnce != -1)
    dispatch_once(&SystemConfigurationLibrary_sOnce, &__block_literal_global_44091);
  result = (uint64_t (*)())dlsym((void *)SystemConfigurationLibrary_sLib, "SCPreferencesGetValue");
  softLinkSCPreferencesGetValue = result;
  if (result)
    return (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t))result)(a1, a2);
  return result;
}

uint64_t (*initSCPreferencesCreate(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t (*result)();

  if (SystemConfigurationLibrary_sOnce != -1)
    dispatch_once(&SystemConfigurationLibrary_sOnce, &__block_literal_global_44091);
  result = (uint64_t (*)())dlsym((void *)SystemConfigurationLibrary_sLib, "SCPreferencesCreate");
  softLinkSCPreferencesCreate = result;
  if (result)
    return (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t, uint64_t))result)(a1, a2, a3);
  return result;
}

id WFNoInputBehaviorSerializedRepresentation(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull WFNoInputBehaviorSerializedRepresentation(NSString * _Nonnull __strong, NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull __strong)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("WFWorkflowNoInputBehavior.m"), 39, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("behaviorName"));

    if (v5)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull WFNoInputBehaviorSerializedRepresentation(NSString * _Nonnull __strong, NSDictionary<NSString *,id<WFPropertyListObject>> * _Nonnull __strong)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("WFWorkflowNoInputBehavior.m"), 40, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("parameters"));

    goto LABEL_3;
  }
  if (!v4)
    goto LABEL_5;
LABEL_3:
  v12[0] = CFSTR("Name");
  v12[1] = CFSTR("Parameters");
  v13[0] = v3;
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id WFNoInputBehaviorParametersIfBehavior(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Name"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    v6 = 0;
    v8 = 0;
LABEL_13:

    goto LABEL_14;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    v8 = 0;
    v6 = v5;
    v5 = 0;
    goto LABEL_13;
  }
  if (objc_msgSend(v5, "isEqualToString:", v3))
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Parameters"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v7 = v6;
      else
        v7 = 0;
    }
    else
    {
      v7 = 0;
    }
    v8 = v7;
    goto LABEL_13;
  }
  v8 = 0;
LABEL_14:

  return v8;
}

uint64_t WFSerializedNoInputBehaviorResolvesInput(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  if (!a1)
    return 1;
  objc_msgSend(a1, "objectForKeyedSubscript:", CFSTR("Name"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    +[WFWorkflowNoInputBehaviorShowError behaviorName](WFWorkflowNoInputBehaviorShowError, "behaviorName");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v1, "isEqualToString:", v2) ^ 1;

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

id WFWorkflowNoInputBehaviorFromSerializedRepresentation(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  _QWORD v16[4];

  v16[3] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v16[0] = objc_opt_class();
    v16[1] = objc_opt_class();
    v16[2] = objc_opt_class();
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 3);
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v2 = (id)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v12;
      while (2)
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v12 != v5)
            objc_enumerationMutation(v2);
          v7 = objc_alloc(*(Class *)(*((_QWORD *)&v11 + 1) + 8 * v6));
          v8 = objc_msgSend(v7, "initWithSerializedRepresentation:", v1, (_QWORD)v11);
          if (v8)
          {
            v9 = (void *)v8;
            goto LABEL_13;
          }
          ++v6;
        }
        while (v4 != v6);
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
        if (v4)
          continue;
        break;
      }
    }
    v9 = 0;
LABEL_13:

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

id WFWalletTransactionTriggerLocalizedDescriptionWithConfigurationSummary(void *a1)
{
  return WFPassTypeToLocalizedDescriptionWithTrigger(a1, 0);
}

id WFPassTypeToLocalizedDescriptionWithTrigger(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __CFString *v13;
  void *v14;
  __CFString *v15;
  void *v16;
  __CFString *v17;
  uint64_t v18;
  void *v19;
  void *v20;

  v3 = a1;
  objc_msgSend(v3, "selectedPassUniqueIDs");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");

  if (v5 == 1)
  {
    objc_msgSend(v3, "selectedPassUniqueIDs");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "firstObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D66F08], "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "passWithUniqueID:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
    {
      if ((a2 & 1) != 0)
        v17 = CFSTR("Wallet pass or payment card tapped");
      else
        v17 = CFSTR("When I tap a Wallet pass or payment card");
      WFLocalizedString(v17);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_45;
    }
    objc_msgSend(v9, "secureElementPass");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (!v10)
    {
      v12 = (void *)MEMORY[0x1E0CB3940];
      if ((a2 & 1) != 0)
        v13 = CFSTR("%@ pass tapped");
      else
        v13 = CFSTR("When I tap my %@ pass");
      goto LABEL_44;
    }
    if (objc_msgSend(v10, "isAccessPass"))
    {
      switch(objc_msgSend(v11, "accessType"))
      {
        case 1:
          v12 = (void *)MEMORY[0x1E0CB3940];
          if ((a2 & 1) != 0)
            v13 = CFSTR("%@ room key tapped");
          else
            v13 = CFSTR("When I tap my %@ room key");
          break;
        case 2:
          v12 = (void *)MEMORY[0x1E0CB3940];
          if ((a2 & 1) != 0)
            v13 = CFSTR("%@ badge tapped");
          else
            v13 = CFSTR("When I tap my %@ badge");
          break;
        case 4:
          v12 = (void *)MEMORY[0x1E0CB3940];
          if ((a2 & 1) != 0)
            v13 = CFSTR("%@ car key tapped");
          else
            v13 = CFSTR("When I use my %@ car key");
          break;
        case 5:
          v12 = (void *)MEMORY[0x1E0CB3940];
          if ((a2 & 1) != 0)
            v13 = CFSTR("%@ resident key tapped");
          else
            v13 = CFSTR("When I tap my %@ resident key");
          break;
        default:
          v12 = (void *)MEMORY[0x1E0CB3940];
          if ((a2 & 1) != 0)
            v13 = CFSTR("%@ key tapped");
          else
            v13 = CFSTR("When I tap my %@ key");
          break;
      }
      goto LABEL_44;
    }
    if (!objc_msgSend(v11, "isIdentityPass"))
      goto LABEL_24;
    v18 = objc_msgSend(v11, "identityType");
    if (v18 == 2)
    {
      v12 = (void *)MEMORY[0x1E0CB3940];
      if ((a2 & 1) != 0)
        v13 = CFSTR("%@ State ID tapped");
      else
        v13 = CFSTR("When I tap my %@ State ID");
      goto LABEL_44;
    }
    if (v18 == 1)
    {
      v12 = (void *)MEMORY[0x1E0CB3940];
      if ((a2 & 1) != 0)
        v13 = CFSTR("%@ Driver’s License tapped");
      else
        v13 = CFSTR("When I tap my %@ Driver’s License");
    }
    else
    {
LABEL_24:
      v12 = (void *)MEMORY[0x1E0CB3940];
      if ((a2 & 1) != 0)
        v13 = CFSTR("%@ card tapped");
      else
        v13 = CFSTR("When I tap my %@ card");
    }
LABEL_44:
    WFLocalizedString(v13);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "localizedDescription");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringWithFormat:", v19, v20);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_45:
    goto LABEL_46;
  }
  v14 = (void *)MEMORY[0x1E0CB3940];
  if ((a2 & 1) != 0)
    v15 = CFSTR("Any of %1$lu Wallet passes or payment cards tapped");
  else
    v15 = CFSTR("When I tap any of %1$lu Wallet passes or payment cards");
  WFLocalizedString(v15);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "selectedPassUniqueIDs");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringWithFormat:", v6, objc_msgSend(v7, "count"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_46:

  return v16;
}

id WFWalletTransactionTriggerLocalizedPastTenseDescription(void *a1)
{
  return WFPassTypeToLocalizedDescriptionWithTrigger(a1, 1);
}

IMP WFDisableAppTrustChecking()
{
  objc_class *v0;
  objc_method *ClassMethod;
  void (*v2)(void);
  objc_method *v3;
  void (*v4)(void);
  objc_method *v5;
  void (*v6)(void);
  objc_method *v7;
  void (*v8)(void);

  v0 = NSClassFromString(CFSTR("INAppTrust"));
  ClassMethod = class_getClassMethod(v0, sel_shouldTrustExtensionForLaunch_);
  v2 = imp_implementationWithBlock(&__block_literal_global_44616);
  method_setImplementation(ClassMethod, v2);
  v3 = class_getClassMethod(v0, sel_extensionsTrustedForLaunch_);
  v4 = imp_implementationWithBlock(&__block_literal_global_5);
  method_setImplementation(v3, v4);
  v5 = class_getClassMethod(v0, sel_shouldTrustAppForLaunch_);
  v6 = imp_implementationWithBlock(&__block_literal_global_8);
  method_setImplementation(v5, v6);
  v7 = class_getClassMethod(v0, sel_appsTrustedForLaunch_);
  v8 = imp_implementationWithBlock(&__block_literal_global_11);
  return method_setImplementation(v7, v8);
}

id WFNotesFolderLinkValueFromIntentsValue(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = a1;
  objc_msgSend(v1, "spokenPhrase");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "vocabularyIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43C80]), "initWithValue:scope:typeName:", v3, 2, CFSTR("FolderEntity"));
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43C78]), "initWithIdentifier:", v4);
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43CB0]), "initWithTypeName:", CFSTR("FolderEntity"));
  v7 = objc_alloc(MEMORY[0x1E0D43C50]);
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43DF8]), "initWithLocalizedKey:bundleIdentifier:bundleURL:table:", v2, 0, 0, 0);
  v9 = (void *)objc_msgSend(v7, "initWithTitle:subtitle:image:", v8, 0, 0);

  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43E38]), "initWithValue:valueType:displayRepresentation:", v5, v6, v9);
  return v10;
}

id WFNotesFolderIntentsValueFromLinkValue(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = a1;
  objc_msgSend(v1, "displayRepresentation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "title");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "wf_localizedString");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "value");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v6 = v5;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = v6;

  objc_msgSend(v7, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "value");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = 0;
  if (v4 && v9)
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBDC00]), "initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:", v9, v4, 0);

  return v10;
}

void sub_1C1A5F218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id WFLocalizedRepeatActionVariableName(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "componentsSeparatedByString:", CFSTR(" "));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "count") == 2)
  {
    v9 = v6;
LABEL_6:
    v12 = v9;
    goto LABEL_7;
  }
  if (objc_msgSend(v8, "count") != 3)
  {
    v9 = v5;
    goto LABEL_6;
  }
  v10 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v8, "lastObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringWithFormat:", v7, objc_msgSend(v11, "integerValue"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_7:
  return v12;
}

void sub_1C1A60464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL WFPBGallerySessionBrowseCategoryEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 8;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void WFActionParameterSummaryValueCommonInit(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v29 = a1;
  v3 = a2;
  +[WFActionParameterSummaryValue parenthesisRegularExpression](WFActionParameterSummaryValue, "parenthesisRegularExpression");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = v3;
  objc_msgSend(v3, "componentsSeparatedByString:", CFSTR(","));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_opt_new();
  v7 = (void *)objc_opt_new();
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v31 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
        objc_msgSend(v4, "firstMatchInString:options:range:", v13, 0, 0, objc_msgSend(v13, "length"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = v14;
        if (v14)
        {
          v16 = objc_msgSend(v14, "rangeAtIndex:", 0);
          objc_msgSend(v13, "stringByReplacingCharactersInRange:withString:", v16, v17, &stru_1E7AFA810);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = objc_msgSend(v15, "rangeAtIndex:", 1);
          objc_msgSend(v13, "substringWithRange:", v19, v20);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "addObject:", v18);
          objc_msgSend(v7, "setObject:forKey:", v21, v18);

        }
        else if (objc_msgSend(v13, "length"))
        {
          objc_msgSend(v6, "addObject:", v13);
        }

      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v10);
  }

  v22 = objc_msgSend(v6, "copy");
  v23 = (void *)v29[1];
  v29[1] = v22;

  v24 = objc_msgSend(v7, "copy");
  v25 = (void *)v29[2];
  v29[2] = v24;

  v26 = objc_msgSend(v28, "copy");
  v27 = (void *)v29[3];
  v29[3] = v26;

}

uint64_t WFGetVariableInputContentForPreviewing(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_5;
  objc_msgSend(v5, "variableString");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v8, "representsSingleContentVariable"))
  {

LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __WFGetVariableInputContentForPreviewing_block_invoke;
  v11[3] = &unk_1E7AF7128;
  v12 = v7;
  objc_msgSend(v8, "processIntoContentItemsWithContext:completionHandler:", v6, v11);

  v9 = 1;
LABEL_6:

  return v9;
}

void WFShowResult(void *a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  id v29;

  v7 = a1;
  v8 = a2;
  v9 = a4;
  objc_msgSend(v7, "items");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "count");

  if (objc_msgSend(MEMORY[0x1E0C99EA0], "universalPreviewsEnabled"))
    v12 = v11 == 1;
  else
    v12 = 0;
  if (v12)
  {
    WFShowPreview(0, v7, v8, v9);
    goto LABEL_10;
  }
  if ((objc_opt_respondsToSelector() & 1) == 0 || (objc_msgSend(v8, "isRunningWithSiriUI") & 1) != 0)
  {
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __WFShowResult_block_invoke_2_127;
    v19[3] = &unk_1E7AF8790;
    v21 = v9;
    v20 = v8;
    objc_msgSend(v7, "getStringRepresentations:", v19);

    v13 = v21;
LABEL_8:

    goto LABEL_10;
  }
  if (!a3)
  {
    objc_msgSend(v7, "items");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __WFShowResult_block_invoke_125;
    v22[3] = &unk_1E7AF8790;
    v23 = v8;
    v24 = v9;
    objc_msgSend(v18, "if_mapAsynchronously:completionHandler:", &__block_literal_global_121_45331, v22);

    v13 = v23;
    goto LABEL_8;
  }
  v29 = 0;
  objc_msgSend(v7, "collectionByFilteringItemsWithBlock:excludedItems:", &__block_literal_global_45330, &v29);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v29;
  objc_msgSend(v15, "items");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "count");

  if (v17)
  {
    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 3221225472;
    v25[2] = __WFShowResult_block_invoke_2;
    v25[3] = &unk_1E7AF7FC8;
    v28 = v9;
    v26 = v14;
    v27 = v8;
    objc_msgSend(v7, "getStringRepresentations:", v25);

  }
  else
  {
    WFShowPreview(0, v14, v8, v9);
  }

LABEL_10:
}

void WFShowPreview(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[4];
  id v17;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = (void *)objc_opt_new();
  v12 = v11;
  if (v7)
    objc_msgSend(v11, "addObject:", v7);
  objc_msgSend(v8, "items");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "addItems:", v13);

  objc_msgSend(v12, "items");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "count");

  if (v15)
  {
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __WFShowPreview_block_invoke;
    v16[3] = &unk_1E7AF4A38;
    v17 = v10;
    objc_msgSend(v9, "showPreviewForContentCollection:completionHandler:", v12, v16);

  }
  else
  {
    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }

}

uint64_t WFContentItemIsAttachment(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;

  v1 = a1;
  v2 = objc_msgSend(v1, "preferredDisplayStyle");
  objc_msgSend(v1, "preferredFileType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "conformsToUTType:", *MEMORY[0x1E0CEC610]) ^ 1;
  if (v2 == 1)
    v5 = 1;
  else
    v5 = v4;

  return v5;
}

uint64_t WFPBAutoShortcutToggleEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_32;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_32;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_32;
        case 4u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          break;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_32:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_34;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          v22 = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        v22 = 0;
LABEL_36:
      *(_BYTE *)(a1 + 40) = v22 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id NRPairedDeviceRegistryFunction()
{
  return (id)classNRPairedDeviceRegistry;
}

Class initNRPairedDeviceRegistry()
{
  Class result;

  if (NanoRegistryLibrary_sOnce != -1)
    dispatch_once(&NanoRegistryLibrary_sOnce, &__block_literal_global_45603);
  result = objc_getClass("NRPairedDeviceRegistry");
  classNRPairedDeviceRegistry = (uint64_t)result;
  getNRPairedDeviceRegistryClass = (uint64_t (*)())NRPairedDeviceRegistryFunction;
  return result;
}

uint64_t (*initNRVersionIsGreaterThanOrEqual(uint64_t a1, uint64_t a2))()
{
  uint64_t (*result)();

  if (NanoRegistryLibrary_sOnce != -1)
    dispatch_once(&NanoRegistryLibrary_sOnce, &__block_literal_global_45603);
  result = (uint64_t (*)())dlsym((void *)NanoRegistryLibrary_sLib, "NRVersionIsGreaterThanOrEqual");
  softLinkNRVersionIsGreaterThanOrEqual = result;
  if (result)
    return (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t))result)(a1, a2);
  return result;
}

uint64_t initNRWatchOSVersionForRemoteDevice(void *a1)
{
  id v1;
  uint64_t (*v2)();
  uint64_t v3;

  v1 = a1;
  if (NanoRegistryLibrary_sOnce != -1)
    dispatch_once(&NanoRegistryLibrary_sOnce, &__block_literal_global_45603);
  v2 = (uint64_t (*)())dlsym((void *)NanoRegistryLibrary_sLib, "NRWatchOSVersionForRemoteDevice");
  softLinkNRWatchOSVersionForRemoteDevice = v2;
  if (v2)
    v3 = ((uint64_t (*)(id))v2)(v1);
  else
    v3 = 0xFFFFFFFFLL;

  return v3;
}

uint64_t WFPBGallerySessionEndEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_34;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            LODWORD(v22) = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_36:
        *(_DWORD *)(a1 + 8) = v22;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 24;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 16;
        }
        v26 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFREPBAskWhenRunRequestReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  WFREPBKeyValuePair *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_29;
      case 2u:
        PBReaderReadString();
        v19 = (WFREPBKeyValuePair *)objc_claimAutoreleasedReturnValue();
        if (v19)
          objc_msgSend(a1, "addParameterKeys:", v19);
        goto LABEL_33;
      case 3u:
        v19 = objc_alloc_init(WFREPBKeyValuePair);
        objc_msgSend(a1, "addParameterKeysAndStates:", v19);
        if (!PBReaderPlaceMark() || !WFREPBKeyValuePairReadFrom((uint64_t)v19, a2))
          goto LABEL_37;
        goto LABEL_32;
      case 4u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
        goto LABEL_29;
      case 5u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_29:
        v19 = *(WFREPBKeyValuePair **)&a1[v18];
        *(_QWORD *)&a1[v18] = v17;
        goto LABEL_33;
      case 6u:
        v19 = objc_alloc_init(WFREPBRepeatedKeyValuePair);
        objc_msgSend(a1, "addPossibleStates:", v19);
        if (PBReaderPlaceMark() && WFREPBRepeatedKeyValuePairReadFrom(v19, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_37:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_34;
    }
  }
}

void sub_1C1A6AE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getMPMediaPropertyPredicateClass_block_invoke_46474(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary_46483();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaPropertyPredicate");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaPropertyPredicateClass_softClass_46473 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaPropertyPredicateClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemState.m"), 23, CFSTR("Unable to find class %s"), "MPMediaPropertyPredicate");

    __break(1u);
  }
}

void __getMPMediaItemClass_block_invoke_46476(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary_46483();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaItemClass_softClass_46475 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemState.m"), 24, CFSTR("Unable to find class %s"), "MPMediaItem");

    __break(1u);
  }
}

uint64_t WFGroupingPropertyForMediaType_46477(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v7[7];
  _QWORD v8[8];

  v8[7] = *MEMORY[0x1E0C80C00];
  v7[0] = CFSTR("Album");
  v7[1] = CFSTR("Playlist");
  v8[0] = &unk_1E7B8BC68;
  v8[1] = &unk_1E7B8BC80;
  v7[2] = CFSTR("Song");
  v7[3] = CFSTR("Artist");
  v8[2] = &unk_1E7B8BC98;
  v8[3] = &unk_1E7B8BCB0;
  v7[4] = CFSTR("Genre");
  v7[5] = CFSTR("Compilation");
  v8[4] = &unk_1E7B8BCC8;
  v8[5] = &unk_1E7B8BC68;
  v7[6] = CFSTR("Composer");
  v8[6] = &unk_1E7B8BCE0;
  v1 = (void *)MEMORY[0x1E0C99D80];
  v2 = a1;
  objc_msgSend(v1, "dictionaryWithObjects:forKeys:count:", v8, v7, 7);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "integerValue");
  return v5;
}

void __getMPMediaQueryClass_block_invoke_46479(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaPlayerLibrary_46483();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaQuery");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMPMediaQueryClass_softClass_46478 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMPMediaQueryClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFMediaItemState.m"), 25, CFSTR("Unable to find class %s"), "MPMediaQuery");

    __break(1u);
  }
}

void MediaPlayerLibrary_46483()
{
  void *v0;
  void *v1;
  void *v2;

  if (!MediaPlayerLibraryCore_frameworkLibrary_46489)
    MediaPlayerLibraryCore_frameworkLibrary_46489 = _sl_dlopen();
  if (!MediaPlayerLibraryCore_frameworkLibrary_46489)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaPlayerLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFMediaItemState.m"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1C1A6D080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id INIntentFromAppBundleIdAndName(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint8_t buf[4];
  const char *v12;
  __int16 v13;
  id v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%@.%@"), *MEMORY[0x1E0CBDD68], v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  INIntentCreate();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    v8 = v6;
  }
  else
  {
    getWFActionDonationsLogObject();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315650;
      v12 = "INIntentFromAppBundleIdAndName";
      v13 = 2112;
      v14 = v4;
      v15 = 2112;
      v16 = v3;
      _os_log_impl(&dword_1C15B3000, v9, OS_LOG_TYPE_DEFAULT, "%s Unable to initialize intent with name: '%@' and bundleId: '%@'", buf, 0x20u);
    }

  }
  return v7;
}

id getWFActionDonationsLogObject()
{
  if (getWFActionDonationsLogObject_onceToken != -1)
    dispatch_once(&getWFActionDonationsLogObject_onceToken, &__block_literal_global_46725);
  return (id)getWFActionDonationsLogObject_log;
}

id getCNContactStoreClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCNContactStoreClass_softClass;
  v7 = getCNContactStoreClass_softClass;
  if (!getCNContactStoreClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCNContactStoreClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getCNContactStoreClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C1A6D2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *ContactsLibrary_46682()
{
  void *v0;
  void *v2;
  void *v3;

  if (!ContactsLibraryCore_frameworkLibrary_46720)
    ContactsLibraryCore_frameworkLibrary_46720 = _sl_dlopen();
  v0 = (void *)ContactsLibraryCore_frameworkLibrary_46720;
  if (!ContactsLibraryCore_frameworkLibrary_46720)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFActionDonationDefaultsRecommender.m"), 25, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

Class __getGEOMapURLBuilderClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!GeoServicesLibraryCore_frameworkLibrary)
    GeoServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!GeoServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *GeoServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFActionDonationDefaultsRecommender.m"), 31, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("GEOMapURLBuilder");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getGEOMapURLBuilderClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFActionDonationDefaultsRecommender.m"), 32, CFSTR("Unable to find class %s"), "GEOMapURLBuilder");

LABEL_8:
    __break(1u);
  }
  getGEOMapURLBuilderClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getCNFavoritesClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContactsLibrary_46682();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNFavorites");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNFavoritesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNFavoritesClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFActionDonationDefaultsRecommender.m"), 35, CFSTR("Unable to find class %s"), "CNFavorites");

    __break(1u);
  }
}

void __getCNContactStoreClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContactsLibrary_46682();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNContactStore");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNContactStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNContactStoreClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFActionDonationDefaultsRecommender.m"), 26, CFSTR("Unable to find class %s"), "CNContactStore");

    __break(1u);
  }
}

void __getWFActionDonationsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "ActionDonations");
  v1 = (void *)getWFActionDonationsLogObject_log;
  getWFActionDonationsLogObject_log = (uint64_t)v0;

}

void sub_1C1A6E068(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

__CFString *WFNSProgressCreateUserInfoKeyPathForKey(void *a1)
{
  id v1;
  __CFString *v2;
  void *v3;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = CFSTR("userInfo");
  if (objc_msgSend(v1, "length"))
  {
    v5[0] = CFSTR("userInfo");
    v5[1] = v1;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v5, 2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR("."));
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

id WFNSProgressCreateUserInfoKeyPathForProgressKeyPathAndKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "length"))
  {
    v9[0] = v3;
    WFNSProgressCreateUserInfoKeyPathForKey(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v9[1] = v5;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "componentsJoinedByString:", CFSTR("."));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    WFNSProgressCreateUserInfoKeyPathForKey(v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

void sub_1C1A70674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  _Block_object_dispose((const void *)(v14 - 112), 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47100(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47101(uint64_t a1)
{

}

Class __getAFClientLiteClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!AssistantServicesLibraryCore_frameworkLibrary_47107)
    AssistantServicesLibraryCore_frameworkLibrary_47107 = _sl_dlopen();
  if (!AssistantServicesLibraryCore_frameworkLibrary_47107)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFRemoteExtensionProxy.m"), 23, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("AFClientLite");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFClientLiteClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFRemoteExtensionProxy.m"), 24, CFSTR("Unable to find class %s"), "AFClientLite");

LABEL_8:
    __break(1u);
  }
  getAFClientLiteClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t WFNumberIsBoolean(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", objc_msgSend(objc_retainAutorelease(a1), "objCType"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("c"));

  return v2;
}

BOOL WFPBAutoShortcutButtonEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFUIPresenterXPCInterface()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EF72A580);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = (void *)MEMORY[0x1E0C99E60];
  v49 = (void *)MEMORY[0x1E0C99E20];
  v45 = objc_opt_class();
  v43 = objc_opt_class();
  v41 = objc_opt_class();
  v39 = objc_opt_class();
  v37 = objc_opt_class();
  v35 = objc_opt_class();
  v34 = objc_opt_class();
  v33 = objc_opt_class();
  v32 = objc_opt_class();
  v31 = objc_opt_class();
  v1 = objc_opt_class();
  v2 = objc_opt_class();
  v3 = objc_opt_class();
  v4 = objc_opt_class();
  v5 = objc_opt_class();
  v6 = objc_opt_class();
  v7 = objc_opt_class();
  v8 = objc_opt_class();
  v9 = objc_opt_class();
  objc_msgSend(v49, "setWithSet:", objc_msgSend(v47, "setWithObjects:", v45, v43, v41, v39, v37, v35, v34, v33, v32, v31, v1, v2, v3, v4,
      v5,
      v6,
      v7,
      v8,
      v9,
      objc_opt_class(),
      0));
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "addObject:", objc_opt_class());
  v46 = (void *)MEMORY[0x1E0C99E60];
  v48 = (void *)MEMORY[0x1E0C99E20];
  v44 = objc_opt_class();
  v42 = objc_opt_class();
  v40 = objc_opt_class();
  v38 = objc_opt_class();
  v36 = objc_opt_class();
  v10 = objc_opt_class();
  v11 = objc_opt_class();
  v12 = objc_opt_class();
  v13 = objc_opt_class();
  v14 = objc_opt_class();
  v15 = objc_opt_class();
  v16 = objc_opt_class();
  v17 = objc_opt_class();
  v18 = objc_opt_class();
  objc_msgSend(v48, "setWithSet:", objc_msgSend(v46, "setWithObjects:", v44, v42, v40, v38, v36, v10, v11, v12, v13, v14, v15, v16, v17, v18,
      objc_opt_class(),
      0));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "addObject:", objc_opt_class());
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v50, sel_showDialogRequest_runningContext_completionHandler_, 0, 0);
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v19, sel_showDialogRequest_runningContext_completionHandler_, 0, 1);
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v20, sel_showDialogRequest_runningContext_completionHandler_, 1, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v21, sel_openURL_completionHandler_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v22, sel_beginPersistentModeWithRunningContext_attribution_completionHandler_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v23, sel_beginPersistentModeWithRunningContext_attribution_completionHandler_, 1, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v24, sel_completePersistentModeWithSuccess_runningContext_completionHandler_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v25, sel_completePersistentModeWithSuccess_runningContext_completionHandler_, 1, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v26, sel_updateAttribution_runningContext_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v27, sel_updateAttribution_runningContext_, 1, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v28, sel_applicationWillLaunchInForegroundForRunningContext_isLastAction_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v29, sel_applicationWillLaunchInForegroundForRunningContext_isLastAction_, 1, 0);

  return v0;
}

id WFUIPresenterServiceInterface()
{
  if (WFUIPresenterServiceInterface_onceToken != -1)
    dispatch_once(&WFUIPresenterServiceInterface_onceToken, &__block_literal_global_47906);
  return (id)WFUIPresenterServiceInterface_interface;
}

uint64_t WFUIPresenterHostXPCInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EF728890);
}

uint64_t WFREPBAlertReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  WFREPBAlertButton *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
        goto LABEL_23;
      case 2u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_23:
        v20 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_38;
      case 3u:
        v21 = objc_alloc_init(WFREPBAlertButton);
        objc_msgSend((id)a1, "addButtons:", v21);
        if (PBReaderPlaceMark() && (WFREPBAlertButtonReadFrom((uint64_t)v21, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_38:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 4u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if (v27 < 0)
            {
              v22 += 7;
              v14 = v23++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_37;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_37:
        *(_DWORD *)(a1 + 24) = v24;
        goto LABEL_38;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_38;
    }
  }
}

id getWFWFRecordPropertyLogObject()
{
  if (getWFWFRecordPropertyLogObject_onceToken != -1)
    dispatch_once(&getWFWFRecordPropertyLogObject_onceToken, &__block_literal_global_48490);
  return (id)getWFWFRecordPropertyLogObject_log;
}

void __getWFWFRecordPropertyLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "WFRecordProperty");
  v1 = (void *)getWFWFRecordPropertyLogObject_log;
  getWFWFRecordPropertyLogObject_log = (uint64_t)v0;

}

void sub_1C1A78890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A789CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A78B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A78D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A78F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7912C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A792F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A794B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7966C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A79838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A79A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A79C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A79E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7A1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7A414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7A670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7A8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7AA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A7ABFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__48558(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__48559(uint64_t a1)
{

}

void sub_1C1A7B7A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1C1A7B9A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1C1A7BC60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1C1A7BE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void std::deque<WFDebouncerPokeReason * {__strong}>::pop_front(uint64_t a1)
{
  int64x2_t v2;

  objc_release(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + ((*(_QWORD *)(a1 + 32) >> 6) & 0x3FFFFFFFFFFFFF8))
                     + 8 * (*(_QWORD *)(a1 + 32) & 0x1FFLL)));
  v2 = vaddq_s64(*(int64x2_t *)(a1 + 32), (int64x2_t)xmmword_1C1B47E50);
  *(int64x2_t *)(a1 + 32) = v2;
  if (v2.i64[0] >= 0x400uLL)
  {
    operator delete(**(void ***)(a1 + 8));
    *(_QWORD *)(a1 + 8) += 8;
    *(_QWORD *)(a1 + 32) -= 512;
  }
}

uint64_t std::deque<WFDebouncerPokeReason * {__strong}>::~deque[abi:ne180100](uint64_t a1)
{
  void **v2;
  void **v3;
  _QWORD *v4;
  unint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  void *v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v4 = (_QWORD *)(a1 + 40);
    v3 = *(void ***)(a1 + 8);
  }
  else
  {
    v4 = (_QWORD *)(a1 + 40);
    v5 = *(_QWORD *)(a1 + 32);
    v6 = &v2[v5 >> 9];
    v7 = (void **)((char *)*v6 + 8 * (v5 & 0x1FF));
    v8 = *(uint64_t *)((char *)v2 + (((*(_QWORD *)(a1 + 40) + v5) >> 6) & 0x3FFFFFFFFFFFFF8))
       + 8 * ((*(_QWORD *)(a1 + 40) + v5) & 0x1FF);
    if (v7 != (void **)v8)
    {
      do
      {
        v9 = *v7++;

        if ((char *)v7 - (_BYTE *)*v6 == 4096)
        {
          v10 = (void **)v6[1];
          ++v6;
          v7 = v10;
        }
      }
      while (v7 != (void **)v8);
      v2 = *(void ***)(a1 + 8);
      v3 = *(void ***)(a1 + 16);
    }
  }
  *v4 = 0;
  v11 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v11 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v12 = v11 >> 3;
  if (v12 == 1)
  {
    v13 = 256;
    goto LABEL_14;
  }
  if (v12 == 2)
  {
    v13 = 512;
LABEL_14:
    *(_QWORD *)(a1 + 32) = v13;
  }
  if (v2 != v3)
  {
    do
    {
      v14 = *v2++;
      operator delete(v14);
    }
    while (v2 != v3);
    v16 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a1 + 16);
    if (v15 != v16)
      *(_QWORD *)(a1 + 16) = v15 + ((v16 - v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1C1A7C838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, __int128 a11)
{
  void *v11;

  operator delete(v11);
  if ((_QWORD)a11)
    operator delete((void *)a11);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<WFDebouncerPokeReason * {__strong}*>>(unint64_t a1)
{
  if (a1 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a1);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void sub_1C1A7CB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A7CB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1C1A7CBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id HMCharacteristicFunction()
{
  return (id)classHMCharacteristic;
}

Class initHMCharacteristic()
{
  Class result;

  if (HomeKitLibrary_sOnce_48938 != -1)
    dispatch_once(&HomeKitLibrary_sOnce_48938, &__block_literal_global_48939);
  result = objc_getClass("HMCharacteristic");
  classHMCharacteristic = (uint64_t)result;
  getHMCharacteristicClass = (uint64_t (*)())HMCharacteristicFunction;
  return result;
}

void sub_1C1A7FCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__49306(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49307(uint64_t a1)
{

}

uint64_t WFGetCustomIntentActionIdentifier(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), a1, a2);
}

id WFInjectDisabledPlatformsInActionDefinition(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  const __CFString *v22;
  id v23;
  const __CFString *v24;
  void *v25;
  uint8_t v26[128];
  uint8_t buf[4];
  const char *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "count"))
  {
    getWFActionsLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315650;
      v28 = "WFInjectDisabledPlatformsInActionDefinition";
      v29 = 2112;
      v30 = v3;
      v31 = 2112;
      v32 = v4;
      _os_log_impl(&dword_1C15B3000, v5, OS_LOG_TYPE_INFO, "%s Injecting disabled platforms: %@ into action definition: %@", buf, 0x20u);
    }

    objc_msgSend(v4, "objectForKey:", CFSTR("DisabledOnPlatforms"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v6, "mutableCopy");

    if (v7)
    {
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v8 = v3;
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v19;
        do
        {
          for (i = 0; i != v10; ++i)
          {
            if (*(_QWORD *)v19 != v11)
              objc_enumerationMutation(v8);
            v13 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * i);
            if ((objc_msgSend(v7, "containsObject:", v13, (_QWORD)v18) & 1) == 0)
              objc_msgSend(v7, "addObject:", v13);
          }
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
        }
        while (v10);
      }

      v24 = CFSTR("DisabledOnPlatforms");
      v14 = (void *)objc_msgSend(v7, "copy");
      v25 = v14;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "definitionByAddingEntriesInDictionary:", v15);
      v16 = (id)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v22 = CFSTR("DisabledOnPlatforms");
      v23 = v3;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "definitionByAddingEntriesInDictionary:", v14);
      v16 = (id)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    v16 = v4;
  }

  return v16;
}

void sub_1C1A808C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1C1A80C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCAXPredictionContextClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContextualActionsClientLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CAXPredictionContext");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCAXPredictionContextClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCAXPredictionContextClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionSuggester.m"), 20, CFSTR("Unable to find class %s"), "CAXPredictionContext");

    __break(1u);
  }
}

void ContextualActionsClientLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContextualActionsClientLibraryCore_frameworkLibrary)
    ContextualActionsClientLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ContextualActionsClientLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContextualActionsClientLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFContextualActionSuggester.m"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1C1A81208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCAXContextualActionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContextualActionsClientLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CAXContextualAction");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCAXContextualActionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCAXContextualActionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionSuggester.m"), 19, CFSTR("Unable to find class %s"), "CAXContextualAction");

    __break(1u);
  }
}

void __getCAXSuggestionProviderClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContextualActionsClientLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CAXSuggestionProvider");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCAXSuggestionProviderClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCAXSuggestionProviderClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionSuggester.m"), 21, CFSTR("Unable to find class %s"), "CAXSuggestionProvider");

    __break(1u);
  }
}

uint64_t WFPBEditShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_32;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_71:
          v52 = 8;
          goto LABEL_92;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_32;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_32;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
LABEL_32:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 7u:
          v27 = 0;
          v28 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 0x10u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v22 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_75:
          v52 = 52;
          goto LABEL_92;
        case 8u:
          v32 = 0;
          v33 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 2u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v22 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_79:
          v52 = 40;
          goto LABEL_92;
        case 9u:
          v37 = 0;
          v38 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 8u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v22 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_83:
          v52 = 48;
          goto LABEL_92;
        case 0xAu:
          v42 = 0;
          v43 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 4u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v22 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_87:
          v52 = 44;
          goto LABEL_92;
        case 0xBu:
          v47 = 0;
          v48 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 68) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v49 = *v3;
        v50 = *(_QWORD *)(a2 + v49);
        if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          break;
        v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
        *(_QWORD *)(a2 + v49) = v50 + 1;
        v22 |= (unint64_t)(v51 & 0x7F) << v47;
        if ((v51 & 0x80) == 0)
          goto LABEL_89;
        v47 += 7;
        v14 = v48++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_91;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_89:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_91:
      v52 = 64;
LABEL_92:
      *(_DWORD *)(a1 + v52) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t __Block_byref_object_copy__49711(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49712(uint64_t a1)
{

}

id WFConvertImage(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  if (v5)
  {
    if (v6)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFFileRepresentation * _Nullable WFConvertImage(WFImageContentItem * _Nonnull __strong, WFFinderImageResizeDescriptor * _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v21, CFSTR("WFFinderImageResizer.m"), 51, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

    if (v7)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFFileRepresentation * _Nullable WFConvertImage(WFImageContentItem * _Nonnull __strong, WFFinderImageResizeDescriptor * _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "handleFailureInFunction:file:lineNumber:description:", v23, CFSTR("WFFinderImageResizer.m"), 52, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("descriptor"));

LABEL_3:
  v8 = objc_msgSend(v7, "format");
  if (v8 > 2)
  {
    v9 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0DC7B30], "typeWithUTType:", **((_QWORD **)&unk_1E7AF5850 + v8));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v10 = objc_msgSend(v7, "size");
  v24 = 0;
  objc_msgSend(v5, "generateImageFileForType:includingMetadata:compressionQuality:error:", v9, objc_msgSend(v7, "preserveMetadata"), &unk_1E7B8E068, &v24);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v24;
  v13 = v12;
  if (v11)
  {
    if (v10)
    {
      WFImageSizeFromFile();
      WFTransformedImageFromImage();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "filename");
      v15 = (id)objc_claimAutoreleasedReturnValue();
      v16 = 0;
      if (v10 <= 3)
      {
        WFLocalizedString(*(&off_1E7AFA658 + v10 - 1));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v15, "wf_filenameTruncatedToMaximumLengthWithFormat:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      v18 = (id)objc_msgSend(v14, "copyWithName:addingExtensionIfNecessary:zone:", v17, 1, 0);
    }
    else
    {
      v18 = v11;
    }
  }
  else
  {
    v18 = 0;
    if (a3)
      *a3 = objc_retainAutorelease(v12);
  }

  return v18;
}

void sub_1C1A85F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getINUIImageLoaderClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!IntentsUILibraryCore_frameworkLibrary)
    IntentsUILibraryCore_frameworkLibrary = _sl_dlopen();
  if (!IntentsUILibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IntentsUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("INImage+Workflow.m"), 20, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("INUIImageLoader");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getINUIImageLoaderClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("INImage+Workflow.m"), 21, CFSTR("Unable to find class %s"), "INUIImageLoader");

LABEL_8:
    __break(1u);
  }
  getINUIImageLoaderClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1A867D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__50194(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__50195(uint64_t a1)
{

}

BOOL WFREPBRunRequestResponseReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 2u:
          PBReaderReadData();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if (v19)
            objc_msgSend(a1, "addVariablesData:", v19);
          goto LABEL_28;
        case 3u:
          PBReaderReadData();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if (v19)
            objc_msgSend(a1, "addOutputData:", v19);
          goto LABEL_28;
        case 4u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_27:
          v19 = *(void **)&a1[v18];
          *(_QWORD *)&a1[v18] = v17;
LABEL_28:

          goto LABEL_29;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFDurationQuantityPossibleUnits()
{
  _QWORD v1[8];

  v1[7] = *MEMORY[0x1E0C80C00];
  v1[0] = CFSTR("sec");
  v1[1] = CFSTR("min");
  v1[2] = CFSTR("hr");
  v1[3] = CFSTR("days");
  v1[4] = CFSTR("weeks");
  v1[5] = CFSTR("months");
  v1[6] = CFSTR("years");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v1, 7);
  return (id)objc_claimAutoreleasedReturnValue();
}

id UIWebClipFunction()
{
  return (id)classUIWebClip;
}

uint64_t WFUpdateWebClipForShortcutIfNeeded(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  WFWorkflow *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  void *v27;
  id v28;
  NSObject *v29;
  id v30;
  id v31;
  void *v32;
  char v33;
  int v34;
  id v35;
  id v36;
  void *v37;
  char v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  char v42;
  NSObject *v43;
  NSObject *v44;
  void *v46;
  void *v47;
  NSObject *v48;
  WFWorkflow *v49;
  void *v50;
  void *v51;
  void *v52;
  NSObject *v53;
  NSObject *v54;
  id v55;
  uint8_t buf[4];
  const char *v57;
  __int16 v58;
  _BYTE v59[10];
  NSObject *v60;
  __int16 v61;
  id v62;
  __int16 v63;
  void *v64;
  __int16 v65;
  uint64_t v66;
  __int16 v67;
  void *v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v7, "referenceForWorkflowID:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, "actionCount");
    objc_msgSend(v5, "shortcutIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "pageURL");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    getWFHomescreenLogObject();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315906;
      v57 = "WFUpdateWebClipForShortcutIfNeeded";
      v58 = 1024;
      *(_DWORD *)v59 = v10 == 1;
      *(_WORD *)&v59[4] = 1024;
      *(_DWORD *)&v59[6] = v11 != 0;
      LOWORD(v60) = 1024;
      *(_DWORD *)((char *)&v60 + 2) = v12 != 0;
      _os_log_impl(&dword_1C15B3000, v13, OS_LOG_TYPE_DEFAULT, "%s Considering web clip -- isSingleStepShortcut: %d, webClipHasShortcutIdentifier: %d, webClipOpensShortcutsJr: %d", buf, 0x1Eu);
    }

    if (v11 && v10 != 1 && v12)
    {
      getWFHomescreenLogObject();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315906;
        v57 = "WFUpdateWebClipForShortcutIfNeeded";
        v58 = 1024;
        *(_DWORD *)v59 = 0;
        *(_WORD *)&v59[4] = 1024;
        *(_DWORD *)&v59[6] = 1;
        LOWORD(v60) = 1024;
        *(_DWORD *)((char *)&v60 + 2) = 1;
        v15 = "%s Web clip does not meet initial criteria: isSingleStepShortcut: %d, webClipHasShortcutIdentifier: %d, we"
              "bClipOpensShortcutsJr: %d";
        v16 = v14;
        v17 = OS_LOG_TYPE_DEFAULT;
        v18 = 30;
LABEL_11:
        _os_log_impl(&dword_1C15B3000, v16, v17, v15, buf, v18);
        goto LABEL_12;
      }
      goto LABEL_12;
    }
    v55 = 0;
    objc_msgSend(v7, "recordWithDescriptor:error:", v9, &v55);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v55;
    if (!v20)
    {
      getWFHomescreenLogObject();
      v22 = (WFWorkflow *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v22->super, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        v57 = "WFUpdateWebClipForShortcutIfNeeded";
        v58 = 2112;
        *(_QWORD *)v59 = v9;
        *(_WORD *)&v59[8] = 2112;
        v60 = v21;
        _os_log_impl(&dword_1C15B3000, &v22->super, OS_LOG_TYPE_ERROR, "%s Error updating web clip for shortcut -- couldn't load record from reference %@: %@", buf, 0x20u);
      }
      v19 = 0;
      v14 = v21;
      goto LABEL_65;
    }
    v54 = v21;
    v22 = -[WFWorkflow initWithRecord:reference:storageProvider:error:]([WFWorkflow alloc], "initWithRecord:reference:storageProvider:error:", v20, v9, 0, &v54);
    v14 = v54;

    if (!v22)
    {
      getWFHomescreenLogObject();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        v57 = "WFUpdateWebClipForShortcutIfNeeded";
        v58 = 2112;
        *(_QWORD *)v59 = v6;
        *(_WORD *)&v59[8] = 2112;
        v60 = v14;
        _os_log_impl(&dword_1C15B3000, v26, OS_LOG_TYPE_ERROR, "%s Error updating web clip for shortcut -- error fetching shortcut with identifier %@: %@", buf, 0x20u);
      }
      v19 = 0;
      goto LABEL_64;
    }
    WFFastPathBundleIdentifierIfApplicable(v22);
    v23 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "shortcutIdentifier");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pageURL");
    v25 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "applicationBundleIdentifier");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v49 = v22;
    if (v23)
    {
      v53 = 0;
    }
    else
    {
      objc_msgSend(v9, "externalURLForRunningWithSource:", *MEMORY[0x1E0DC8468]);
      v53 = objc_claimAutoreleasedReturnValue();
    }
    v27 = (void *)*MEMORY[0x1E0DC7FA0];
    v48 = v23;
    if (v23)
      v27 = (void *)v23;
    v28 = v27;
    getWFHomescreenLogObject();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136316674;
      v57 = "WFUpdateWebClipForShortcutIfNeeded";
      v58 = 2112;
      *(_QWORD *)v59 = v6;
      *(_WORD *)&v59[8] = 2112;
      v60 = v53;
      v61 = 2112;
      v62 = v28;
      v63 = 2112;
      v64 = v24;
      v65 = 2112;
      v66 = v25;
      v67 = 2112;
      v68 = v51;
      _os_log_impl(&dword_1C15B3000, v29, OS_LOG_TYPE_DEFAULT, "%s Considering web clip -- intended shortcutIdentifier: %@, pageURL: %@, applicationBundleID: %@ — actual shortcutIdentifier: %@, pageURL: %@, applicationBundleID: %@", buf, 0x48u);
    }

    v30 = v24;
    v31 = v6;
    v32 = v31;
    v50 = v20;
    v46 = (void *)v25;
    v47 = v30;
    if (v30 == v31)
    {

    }
    else
    {
      if (!v31 || !v30)
      {

LABEL_36:
        objc_msgSend(v5, "setShortcutIdentifier:", v32);
        v34 = 1;
LABEL_37:
        v35 = v51;
        v36 = v28;
        v37 = v36;
        if (v35 == v36)
        {

          goto LABEL_45;
        }
        if (v35 && v36)
        {
          v38 = objc_msgSend(v35, "isEqualToString:", v36);

          if ((v38 & 1) != 0)
          {
LABEL_45:
            v39 = v46;
            v40 = v53;
            v41 = v40;
            v52 = v37;
            if (v39 == v40)
            {

              goto LABEL_53;
            }
            if (v39 && v40)
            {
              v42 = -[NSObject isEqual:](v39, "isEqual:", v40);

              if ((v42 & 1) != 0)
              {
LABEL_53:
                getWFHomescreenLogObject();
                v43 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 136315394;
                  v57 = "WFUpdateWebClipForShortcutIfNeeded";
                  v58 = 1024;
                  *(_DWORD *)v59 = v34;
                  _os_log_impl(&dword_1C15B3000, v43, OS_LOG_TYPE_DEFAULT, "%s Considering web clip -- did modify web clip: %d", buf, 0x12u);
                }

                if (v34)
                {
                  if ((objc_msgSend(v5, "updateOnDisk") & 1) == 0)
                  {
                    getWFHomescreenLogObject();
                    v44 = objc_claimAutoreleasedReturnValue();
                    v26 = v48;
                    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)buf = 136315138;
                      v57 = "WFUpdateWebClipForShortcutIfNeeded";
                      _os_log_impl(&dword_1C15B3000, v44, OS_LOG_TYPE_ERROR, "%s Error updating web clip for shortcut -- can't save updated web clip", buf, 0xCu);
                    }

                    v19 = 0;
                    goto LABEL_63;
                  }
                  v19 = 1;
                }
                else
                {
                  v19 = 0;
                }
                v26 = v48;
LABEL_63:

                v22 = v49;
                v20 = v50;
LABEL_64:

LABEL_65:
                goto LABEL_66;
              }
            }
            else
            {

            }
            objc_msgSend(v5, "setPageURL:", v41);
            v34 = 1;
            goto LABEL_53;
          }
        }
        else
        {

        }
        objc_msgSend(v5, "setApplicationBundleIdentifier:", v37);
        v34 = 1;
        goto LABEL_45;
      }
      v33 = objc_msgSend(v30, "isEqualToString:", v31);

      if ((v33 & 1) == 0)
        goto LABEL_36;
    }
    v34 = 0;
    goto LABEL_37;
  }
  getWFHomescreenLogObject();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    v57 = "WFUpdateWebClipForShortcutIfNeeded";
    v58 = 2112;
    *(_QWORD *)v59 = v6;
    v15 = "%s Error updating web clip for shortcut -- couldn't find shortcut with identifier %@";
    v16 = v14;
    v17 = OS_LOG_TYPE_ERROR;
    v18 = 22;
    goto LABEL_11;
  }
LABEL_12:
  v19 = 0;
LABEL_66:

  return v19;
}

id SBSWebClipServiceFunction()
{
  return (id)classSBSWebClipService;
}

Class initSBSWebClipService()
{
  Class result;

  if (SpringBoardServicesLibrary_sOnce != -1)
    dispatch_once(&SpringBoardServicesLibrary_sOnce, &__block_literal_global_221);
  result = objc_getClass("SBSWebClipService");
  classSBSWebClipService = (uint64_t)result;
  getSBSWebClipServiceClass = (uint64_t (*)())SBSWebClipServiceFunction;
  return result;
}

NSObject *WFFastPathBundleIdentifierIfApplicable(void *a1)
{
  NSObject *v1;
  NSObject *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  __CFString *v7;
  __CFString *v8;
  char v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  char v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  int v29;
  const char *v30;
  __int16 v31;
  NSObject *v32;
  __int16 v33;
  const __CFString *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  getWFHomescreenLogObject();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v29 = 136315394;
    v30 = "WFFastPathBundleIdentifierIfApplicable";
    v31 = 2112;
    v32 = v1;
    _os_log_impl(&dword_1C15B3000, v2, OS_LOG_TYPE_DEFAULT, "%s Getting fast path bundle identifier for workflow: %@", (uint8_t *)&v29, 0x16u);
  }

  -[NSObject actions](v1, "actions");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  if (v4 == 1)
  {
    -[NSObject actions](v1, "actions");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "firstObject");
    v6 = objc_claimAutoreleasedReturnValue();

    -[NSObject identifier](v6, "identifier");
    v7 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
    if (v7 != CFSTR("is.workflow.actions.openapp"))
    {
      v8 = v7;
      if (!v7
        || (v9 = -[__CFString isEqualToString:](v7, "isEqualToString:", CFSTR("is.workflow.actions.openapp")),
            v8,
            v8,
            (v9 & 1) == 0))
      {
        getWFHomescreenLogObject();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          -[NSObject identifier](v6, "identifier");
          v22 = objc_claimAutoreleasedReturnValue();
          v29 = 136315650;
          v30 = "WFFastPathBundleIdentifierIfApplicable";
          v31 = 2114;
          v32 = v22;
          v33 = 2114;
          v34 = CFSTR("is.workflow.actions.openapp");
          _os_log_impl(&dword_1C15B3000, v10, OS_LOG_TYPE_DEFAULT, "%s Single action identifier (%{public}@) does not match Open App action identifier (%{public}@)", (uint8_t *)&v29, 0x20u);

        }
        v21 = 0;
        goto LABEL_33;
      }
    }
    -[NSObject parameterStateForKey:](v6, "parameterStateForKey:", CFSTR("WFSelectedApp"));
    v10 = objc_claimAutoreleasedReturnValue();
    -[NSObject value](v10, "value");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "bundleIdentifier");
    v12 = objc_claimAutoreleasedReturnValue();

    getWFHomescreenLogObject();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (!v12)
    {
      if (v14)
      {
        v29 = 136315394;
        v30 = "WFFastPathBundleIdentifierIfApplicable";
        v31 = 2112;
        v32 = v10;
        _os_log_impl(&dword_1C15B3000, v13, OS_LOG_TYPE_DEFAULT, "%s Action state does not have serialized identifier: state == %@", (uint8_t *)&v29, 0x16u);
      }
      v21 = 0;
      goto LABEL_32;
    }
    if (v14)
    {
      v29 = 136315394;
      v30 = "WFFastPathBundleIdentifierIfApplicable";
      v31 = 2114;
      v32 = v12;
      _os_log_impl(&dword_1C15B3000, v13, OS_LOG_TYPE_DEFAULT, "%s Found serialized application bundle identifier: %{public}@", (uint8_t *)&v29, 0x16u);
    }

    +[ICAppRegistry bundleIdentifierForLegacyAppIdentifier:](ICAppRegistry, "bundleIdentifierForLegacyAppIdentifier:", v12);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = v12;
    v17 = v15;
    v13 = v17;
    if (v16 == v17)
    {

    }
    else
    {
      if (v17)
      {
        v18 = -[NSObject isEqualToString:](v16, "isEqualToString:", v17);

        if ((v18 & 1) != 0)
          goto LABEL_29;
      }
      else
      {

      }
      getWFHomescreenLogObject();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        v29 = 136315650;
        v30 = "WFFastPathBundleIdentifierIfApplicable";
        v31 = 2114;
        v32 = v16;
        v33 = 2114;
        v34 = (const __CFString *)v13;
        _os_log_impl(&dword_1C15B3000, v23, OS_LOG_TYPE_DEFAULT, "%s Application bundle identifier was mapped from %{public}@ to %{public}@ by the legacy app identifier mapping in ICAppRegistry", (uint8_t *)&v29, 0x20u);
      }
      v16 = v23;
    }

LABEL_29:
    v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBD728]), "initWithBundleIdentifier:", v13);
    objc_msgSend(MEMORY[0x1E0CBD758], "sharedResolver");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "resolvedAppMatchingDescriptor:", v24);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v26, "bundleIdentifier");
    v21 = objc_claimAutoreleasedReturnValue();
    getWFHomescreenLogObject();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      v29 = 136315394;
      v30 = "WFFastPathBundleIdentifierIfApplicable";
      v31 = 2114;
      v32 = v21;
      _os_log_impl(&dword_1C15B3000, v27, OS_LOG_TYPE_DEFAULT, "%s Returning fast path bundle identifier: %{public}@", (uint8_t *)&v29, 0x16u);
    }

LABEL_32:
LABEL_33:

    goto LABEL_34;
  }
  getWFHomescreenLogObject();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    -[NSObject actions](v1, "actions");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "count");
    v29 = 136315650;
    v30 = "WFFastPathBundleIdentifierIfApplicable";
    v31 = 2112;
    v32 = v1;
    v33 = 2048;
    v34 = (const __CFString *)v20;
    _os_log_impl(&dword_1C15B3000, v6, OS_LOG_TYPE_DEFAULT, "%s Workflow (%@) contains > 1 action (it has %lu actions), skipping", (uint8_t *)&v29, 0x20u);

  }
  v21 = 0;
LABEL_34:

  return v21;
}

uint64_t (*initSBAddWebClipToHomeScreen(uint64_t a1, uint64_t a2))()
{
  uint64_t (*result)();

  if (SpringBoardServicesLibrary_sOnce != -1)
    dispatch_once(&SpringBoardServicesLibrary_sOnce, &__block_literal_global_221);
  result = (uint64_t (*)())dlsym((void *)SpringBoardServicesLibrary_sLib, "SBAddWebClipToHomeScreen");
  softLinkSBAddWebClipToHomeScreen = result;
  if (result)
    return (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t))result)(a1, a2);
  return result;
}

uint64_t (*initSBSSpringBoardServerPort())()
{
  uint64_t (*result)();

  if (SpringBoardServicesLibrary_sOnce != -1)
    dispatch_once(&SpringBoardServicesLibrary_sOnce, &__block_literal_global_221);
  result = (uint64_t (*)())dlsym((void *)SpringBoardServicesLibrary_sLib, "SBSSpringBoardServerPort");
  softLinkSBSSpringBoardServerPort = result;
  if (result)
    return (uint64_t (*)())result();
  return result;
}

id ISImageDescriptorFunction()
{
  return (id)classISImageDescriptor;
}

Class initISImageDescriptor()
{
  Class result;

  if (IconServicesLibrary_sOnce != -1)
    dispatch_once(&IconServicesLibrary_sOnce, &__block_literal_global_226_50932);
  result = objc_getClass("ISImageDescriptor");
  classISImageDescriptor = (uint64_t)result;
  getISImageDescriptorClass = (uint64_t (*)())ISImageDescriptorFunction;
  return result;
}

id initkISImageDescriptorHomeScreen()
{
  id *v0;

  if (IconServicesLibrary_sOnce != -1)
    dispatch_once(&IconServicesLibrary_sOnce, &__block_literal_global_226_50932);
  v0 = (id *)dlsym((void *)IconServicesLibrary_sLib, "kISImageDescriptorHomeScreen");
  if (!v0)
    __assert_rtn("initkISImageDescriptorHomeScreen", "WFHomeScreenController.m", 51, "constant");
  objc_storeStrong((id *)&constantkISImageDescriptorHomeScreen, *v0);
  getkISImageDescriptorHomeScreen = (uint64_t (*)())kISImageDescriptorHomeScreenFunction;
  return (id)constantkISImageDescriptorHomeScreen;
}

id kISImageDescriptorHomeScreenFunction()
{
  return (id)constantkISImageDescriptorHomeScreen;
}

void getkCLErrorDomain()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getkCLErrorDomainSymbolLoc_ptr;
  v8 = getkCLErrorDomainSymbolLoc_ptr;
  if (!getkCLErrorDomainSymbolLoc_ptr)
  {
    v1 = CoreLocationLibrary();
    v0 = (id *)dlsym(v1, "kCLErrorDomain");
    v6[3] = (uint64_t)v0;
    getkCLErrorDomainSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getkCLErrorDomain(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLocator.m"), 23, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C1A8E06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWFWFLocatorLogObject()
{
  if (getWFWFLocatorLogObject_onceToken != -1)
    dispatch_once(&getWFWFLocatorLogObject_onceToken, &__block_literal_global_51097);
  return (id)getWFWFLocatorLogObject_log;
}

void __getWFWFLocatorLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "WFLocator");
  v1 = (void *)getWFWFLocatorLogObject_log;
  getWFWFLocatorLogObject_log = (uint64_t)v0;

}

void *CoreLocationLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreLocationLibraryCore_frameworkLibrary_51105)
    CoreLocationLibraryCore_frameworkLibrary_51105 = _sl_dlopen();
  v0 = (void *)CoreLocationLibraryCore_frameworkLibrary_51105;
  if (!CoreLocationLibraryCore_frameworkLibrary_51105)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFLocator.m"), 21, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_1C1A8E3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__51146(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51147(uint64_t a1)
{

}

void getkCLLocationAccuracyNearestTenMeters()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (void *)getkCLLocationAccuracyNearestTenMetersSymbolLoc_ptr;
  v7 = getkCLLocationAccuracyNearestTenMetersSymbolLoc_ptr;
  if (!getkCLLocationAccuracyNearestTenMetersSymbolLoc_ptr)
  {
    v1 = CoreLocationLibrary();
    v0 = dlsym(v1, "kCLLocationAccuracyNearestTenMeters");
    v5[3] = (uint64_t)v0;
    getkCLLocationAccuracyNearestTenMetersSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyNearestTenMeters(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFLocator.m"), 26, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C1A8E53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFCLLocationAccuracyFromWFLocationAccuracy(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = a1;
  if (!objc_msgSend(v1, "isEqualToString:", CFSTR("BestForNavigation")))
  {
    if (objc_msgSend(v1, "isEqualToString:", CFSTR("Best")))
    {
      v12 = 0;
      v13 = &v12;
      v14 = 0x2020000000;
      v6 = (void *)getkCLLocationAccuracyBestSymbolLoc_ptr;
      v15 = getkCLLocationAccuracyBestSymbolLoc_ptr;
      if (!getkCLLocationAccuracyBestSymbolLoc_ptr)
      {
        v7 = CoreLocationLibrary();
        v6 = dlsym(v7, "kCLLocationAccuracyBest");
        v13[3] = (uint64_t)v6;
        getkCLLocationAccuracyBestSymbolLoc_ptr = (uint64_t)v6;
      }
      _Block_object_dispose(&v12, 8);
      if (!v6)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyBest(void)");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLocator.m"), 25, CFSTR("%s"), dlerror());
        goto LABEL_26;
      }
      goto LABEL_10;
    }
    if (objc_msgSend(v1, "isEqualToString:", CFSTR("NearestTenMeters")))
    {
LABEL_12:
      getkCLLocationAccuracyNearestTenMeters();
      goto LABEL_10;
    }
    if (objc_msgSend(v1, "isEqualToString:", CFSTR("HundredMeters")))
    {
      v12 = 0;
      v13 = &v12;
      v14 = 0x2020000000;
      v8 = (void *)getkCLLocationAccuracyHundredMetersSymbolLoc_ptr;
      v15 = getkCLLocationAccuracyHundredMetersSymbolLoc_ptr;
      if (!getkCLLocationAccuracyHundredMetersSymbolLoc_ptr)
      {
        v9 = CoreLocationLibrary();
        v8 = dlsym(v9, "kCLLocationAccuracyHundredMeters");
        v13[3] = (uint64_t)v8;
        getkCLLocationAccuracyHundredMetersSymbolLoc_ptr = (uint64_t)v8;
      }
      _Block_object_dispose(&v12, 8);
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyHundredMeters(void)");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLocator.m"), 27, CFSTR("%s"), dlerror());
        goto LABEL_26;
      }
    }
    else
    {
      if (!objc_msgSend(v1, "isEqualToString:", CFSTR("Kilometer")))
      {
        if (objc_msgSend(v1, "isEqualToString:", CFSTR("ThreeKilometers")))
        {
          getkCLLocationAccuracyThreeKilometers();
          goto LABEL_10;
        }
        goto LABEL_12;
      }
      v12 = 0;
      v13 = &v12;
      v14 = 0x2020000000;
      v10 = (void *)getkCLLocationAccuracyKilometerSymbolLoc_ptr;
      v15 = getkCLLocationAccuracyKilometerSymbolLoc_ptr;
      if (!getkCLLocationAccuracyKilometerSymbolLoc_ptr)
      {
        v11 = CoreLocationLibrary();
        v10 = dlsym(v11, "kCLLocationAccuracyKilometer");
        v13[3] = (uint64_t)v10;
        getkCLLocationAccuracyKilometerSymbolLoc_ptr = (uint64_t)v10;
      }
      _Block_object_dispose(&v12, 8);
      if (!v10)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyKilometer(void)");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLocator.m"), 28, CFSTR("%s"), dlerror());
        goto LABEL_26;
      }
    }
LABEL_10:

    return;
  }
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v2 = (void *)getkCLLocationAccuracyBestForNavigationSymbolLoc_ptr;
  v15 = getkCLLocationAccuracyBestForNavigationSymbolLoc_ptr;
  if (!getkCLLocationAccuracyBestForNavigationSymbolLoc_ptr)
  {
    v3 = CoreLocationLibrary();
    v2 = dlsym(v3, "kCLLocationAccuracyBestForNavigation");
    v13[3] = (uint64_t)v2;
    getkCLLocationAccuracyBestForNavigationSymbolLoc_ptr = (uint64_t)v2;
  }
  _Block_object_dispose(&v12, 8);
  if (v2)
    goto LABEL_10;
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyBestForNavigation(void)");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLocator.m"), 24, CFSTR("%s"), dlerror());
LABEL_26:

  __break(1u);
}

void sub_1C1A8E8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getkCLLocationAccuracyThreeKilometers()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (void *)getkCLLocationAccuracyThreeKilometersSymbolLoc_ptr;
  v7 = getkCLLocationAccuracyThreeKilometersSymbolLoc_ptr;
  if (!getkCLLocationAccuracyThreeKilometersSymbolLoc_ptr)
  {
    v1 = CoreLocationLibrary();
    v0 = dlsym(v1, "kCLLocationAccuracyThreeKilometers");
    v5[3] = (uint64_t)v0;
    getkCLLocationAccuracyThreeKilometersSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CLLocationAccuracy getkCLLocationAccuracyThreeKilometers(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFLocator.m"), 29, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1C1A8E9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFGetAzulBuiltInCollectionIdentifiers(int a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0C99E20], "setWithObjects:", CFSTR("ShareSheet"), CFSTR("Watch"), CFSTR("Sleep"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1)
    objc_msgSend(v2, "addObject:", CFSTR("Root"));
  return v3;
}

void sub_1C1A8F570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1A8F9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 192), 8);
  _Block_object_dispose((const void *)(v28 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__51624(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51625(uint64_t a1)
{

}

id getCLPlacemarkClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCLPlacemarkClass_softClass_51714;
  v7 = getCLPlacemarkClass_softClass_51714;
  if (!getCLPlacemarkClass_softClass_51714)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCLPlacemarkClass_block_invoke_51715;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getCLPlacemarkClass_block_invoke_51715((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C1A909E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLPlacemarkClass_block_invoke_51715(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_51716)
    CoreLocationLibraryCore_frameworkLibrary_51716 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_51716)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("INCodablePlacemarkAttributeMetadata+Workflow.m"), 15, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLPlacemark");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLPlacemarkClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("INCodablePlacemarkAttributeMetadata+Workflow.m"), 16, CFSTR("Unable to find class %s"), "CLPlacemark");

LABEL_8:
    __break(1u);
  }
  getCLPlacemarkClass_softClass_51714 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1A91774(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A94398(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A946F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A94808(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1A95D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1A98258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WFLinkActionParameterStateNeedingDisplayRepresentation(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    v2 = objc_msgSend(v1, "valueNeedsDisplayRepresentation");
  else
    v2 = 0;

  return v2;
}

id WFLinkActionInvalidMetadataError()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0CB35C8];
  v1 = *MEMORY[0x1E0CB2FE0];
  v7[0] = *MEMORY[0x1E0CB2D68];
  WFLocalizedString(CFSTR("Invalid action metadata"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v2;
  v7[1] = *MEMORY[0x1E0CB2D50];
  WFLocalizedString(CFSTR("Unfortunately, there is nothing Shortcuts can do about this; it is due to a bug in the host app. We’d recommend contacting the maker of that app and letting them know of this problem."));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "errorWithDomain:code:userInfo:", v1, 22, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t WFREPBRunRequestStopReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFREPBKeyValuePairReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1A9CBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__52572(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__52573(uint64_t a1)
{

}

id UIPasteboardFunction_52971()
{
  return (id)classUIPasteboard_52978;
}

Class initUIPasteboard_52972()
{
  Class result;

  if (UIKitLibrary_sOnce_52975 != -1)
    dispatch_once(&UIKitLibrary_sOnce_52975, &__block_literal_global_52976);
  result = objc_getClass("UIPasteboard");
  classUIPasteboard_52978 = (uint64_t)result;
  getUIPasteboardClass_52970 = (uint64_t (*)())UIPasteboardFunction_52971;
  return result;
}

void sub_1C1AA0A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__53121(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__53122(uint64_t a1)
{

}

void sub_1C1AA2BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void *__getCNInstantMessageServiceSkypeSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!ContactsLibraryCore_frameworkLibrary_53208)
    ContactsLibraryCore_frameworkLibrary_53208 = _sl_dlopen();
  v2 = (void *)ContactsLibraryCore_frameworkLibrary_53208;
  if (!ContactsLibraryCore_frameworkLibrary_53208)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("ICSkypeCallContentMapping.m"), 13, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "CNInstantMessageServiceSkype");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getCNInstantMessageServiceSkypeSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

uint64_t WFHomeKitLocationBundle()
{
  return objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithPath:", CFSTR("/System/Library/PrivateFrameworks/HomeKitDaemon.framework"));
}

uint64_t WFSiriLocationBundle()
{
  return objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithPath:", CFSTR("/System/Library/PrivateFrameworks/AssistantServices.framework"));
}

id WFExtractDonatedIntentFromSerializedParameters(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  NSObject *v4;
  id v6;
  uint8_t buf[4];
  const char *v8;
  __int16 v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "objectForKey:", CFSTR("IntentData"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "length"))
  {
    v6 = 0;
    objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClass:fromData:error:", objc_opt_class(), v1, &v6);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v6;
    if (v2)
      goto LABEL_8;
  }
  else
  {
    v3 = 0;
  }
  getWFGeneralLogObject();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    v8 = "WFExtractDonatedIntentFromSerializedParameters";
    v9 = 2114;
    v10 = v3;
    _os_log_impl(&dword_1C15B3000, v4, OS_LOG_TYPE_ERROR, "%s Error unarchiving intent from data: %{public}@", buf, 0x16u);
  }

  v2 = 0;
LABEL_8:

  return v2;
}

void sub_1C1AA50A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1AA5694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__53537(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__53538(uint64_t a1)
{

}

Class __getCLPlacemarkClass_block_invoke_53540(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_53541)
    CoreLocationLibraryCore_frameworkLibrary_53541 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_53541)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("INIntentSlotDescription+Workflow.m"), 21, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLPlacemark");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLPlacemarkClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("INIntentSlotDescription+Workflow.m"), 22, CFSTR("Unable to find class %s"), "CLPlacemark");

LABEL_8:
    __break(1u);
  }
  getCLPlacemarkClass_softClass_53539 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1AA6F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C1AA72A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL WFREPBVariableReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  WFREPBContentItem *v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (WFREPBContentItem *)a1[2];
        a1[2] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(WFREPBContentItem);
    objc_msgSend(a1, "addItems:", v18);
    if (!PBReaderPlaceMark() || (WFREPBContentItemReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBDailyStatusEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  void *v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  char v153;
  unsigned int v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  char v163;
  unsigned int v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  BOOL v173;
  uint64_t v174;
  uint64_t v175;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_191;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_DWORD *)(a1 + 124) |= 0x2000000u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_230;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_230:
          v173 = v22 != 0;
          v174 = 118;
          goto LABEL_327;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_DWORD *)(a1 + 124) |= 0x8000000u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_234;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_234:
          v173 = v28 != 0;
          v174 = 120;
          goto LABEL_327;
        case 4u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_DWORD *)(a1 + 124) |= 0x4000000u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  v34 = 0;
                  goto LABEL_238;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
LABEL_238:
          v173 = v34 != 0;
          v174 = 119;
          goto LABEL_327;
        case 5u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          *(_DWORD *)(a1 + 124) |= 0x1000000u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  v40 = 0;
                  goto LABEL_242;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v40 = 0;
LABEL_242:
          v173 = v40 != 0;
          v174 = 117;
          goto LABEL_327;
        case 6u:
          v44 = 0;
          v45 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x20000u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v46 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_246;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_246:
          v175 = 92;
          goto LABEL_344;
        case 7u:
          v50 = 0;
          v51 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 1u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v46 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_250;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_250:
          v175 = 8;
          goto LABEL_344;
        case 8u:
          v55 = 0;
          v56 = 0;
          v57 = 0;
          *(_DWORD *)(a1 + 124) |= 0x10000000u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v57 |= (unint64_t)(v60 & 0x7F) << v55;
              if (v60 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  v57 = 0;
                  goto LABEL_254;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v57 = 0;
LABEL_254:
          v173 = v57 != 0;
          v174 = 121;
          goto LABEL_327;
        case 9u:
          v61 = 0;
          v62 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x80000u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v46 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_258;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_258:
          v175 = 100;
          goto LABEL_344;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 8u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v46 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_262;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_262:
          v175 = 28;
          goto LABEL_344;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 4u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v46 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v14 = v72++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_266;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_266:
          v175 = 24;
          goto LABEL_344;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x200000u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v46 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_270;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_270:
          v175 = 108;
          goto LABEL_344;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x40000u;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
              *(_QWORD *)(a2 + v83) = v84 + 1;
              v46 |= (unint64_t)(v85 & 0x7F) << v81;
              if (v85 < 0)
              {
                v81 += 7;
                v14 = v82++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_274;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_274:
          v175 = 96;
          goto LABEL_344;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 2u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
              *(_QWORD *)(a2 + v88) = v89 + 1;
              v46 |= (unint64_t)(v90 & 0x7F) << v86;
              if (v90 < 0)
              {
                v86 += 7;
                v14 = v87++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_278;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_278:
          v175 = 12;
          goto LABEL_344;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x400000u;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
              *(_QWORD *)(a2 + v93) = v94 + 1;
              v46 |= (unint64_t)(v95 & 0x7F) << v91;
              if (v95 < 0)
              {
                v91 += 7;
                v14 = v92++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_282;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_282:
          v175 = 112;
          goto LABEL_344;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x100000u;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
              *(_QWORD *)(a2 + v98) = v99 + 1;
              v46 |= (unint64_t)(v100 & 0x7F) << v96;
              if (v100 < 0)
              {
                v96 += 7;
                v14 = v97++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_286;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_286:
          v175 = 104;
          goto LABEL_344;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x1000u;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
              *(_QWORD *)(a2 + v103) = v104 + 1;
              v46 |= (unint64_t)(v105 & 0x7F) << v101;
              if (v105 < 0)
              {
                v101 += 7;
                v14 = v102++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_290;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_290:
          v175 = 72;
          goto LABEL_344;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x80u;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
              *(_QWORD *)(a2 + v108) = v109 + 1;
              v46 |= (unint64_t)(v110 & 0x7F) << v106;
              if (v110 < 0)
              {
                v106 += 7;
                v14 = v107++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_294;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_294:
          v175 = 52;
          goto LABEL_344;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x20u;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v114 + 1;
              v46 |= (unint64_t)(v115 & 0x7F) << v111;
              if (v115 < 0)
              {
                v111 += 7;
                v14 = v112++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_298;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_298:
          v175 = 44;
          goto LABEL_344;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x8000u;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v119 + 1;
              v46 |= (unint64_t)(v120 & 0x7F) << v116;
              if (v120 < 0)
              {
                v116 += 7;
                v14 = v117++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_302;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_302:
          v175 = 84;
          goto LABEL_344;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x10000u;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
              *(_QWORD *)(a2 + v123) = v124 + 1;
              v46 |= (unint64_t)(v125 & 0x7F) << v121;
              if (v125 < 0)
              {
                v121 += 7;
                v14 = v122++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_306;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_306:
          v175 = 88;
          goto LABEL_344;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x100u;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
              *(_QWORD *)(a2 + v128) = v129 + 1;
              v46 |= (unint64_t)(v130 & 0x7F) << v126;
              if (v130 < 0)
              {
                v126 += 7;
                v14 = v127++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_310;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_310:
          v175 = 56;
          goto LABEL_344;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x200u;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
              *(_QWORD *)(a2 + v133) = v134 + 1;
              v46 |= (unint64_t)(v135 & 0x7F) << v131;
              if (v135 < 0)
              {
                v131 += 7;
                v14 = v132++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_314;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_314:
          v175 = 60;
          goto LABEL_344;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x2000u;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
              *(_QWORD *)(a2 + v138) = v139 + 1;
              v46 |= (unint64_t)(v140 & 0x7F) << v136;
              if (v140 < 0)
              {
                v136 += 7;
                v14 = v137++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_318;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_318:
          v175 = 76;
          goto LABEL_344;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x4000u;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
              *(_QWORD *)(a2 + v143) = v144 + 1;
              v46 |= (unint64_t)(v145 & 0x7F) << v141;
              if (v145 < 0)
              {
                v141 += 7;
                v14 = v142++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_322;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_322:
          v175 = 80;
          goto LABEL_344;
        case 0x1Au:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_191:
          v146 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 0x1Bu:
          v147 = 0;
          v148 = 0;
          v149 = 0;
          *(_DWORD *)(a1 + 124) |= 0x800000u;
          while (2)
          {
            v150 = *v3;
            v151 = *(_QWORD *)(a2 + v150);
            if (v151 == -1 || v151 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v152 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
              *(_QWORD *)(a2 + v150) = v151 + 1;
              v149 |= (unint64_t)(v152 & 0x7F) << v147;
              if (v152 < 0)
              {
                v147 += 7;
                v14 = v148++ >= 9;
                if (v14)
                {
                  v149 = 0;
                  goto LABEL_326;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v149 = 0;
LABEL_326:
          v173 = v149 != 0;
          v174 = 116;
LABEL_327:
          *(_BYTE *)(a1 + v174) = v173;
          continue;
        case 0x1Cu:
          v153 = 0;
          v154 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x400u;
          while (2)
          {
            v155 = *v3;
            v156 = *(_QWORD *)(a2 + v155);
            if (v156 == -1 || v156 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v156);
              *(_QWORD *)(a2 + v155) = v156 + 1;
              v46 |= (unint64_t)(v157 & 0x7F) << v153;
              if (v157 < 0)
              {
                v153 += 7;
                v14 = v154++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_331;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_331:
          v175 = 64;
          goto LABEL_344;
        case 0x1Du:
          v158 = 0;
          v159 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x40u;
          while (2)
          {
            v160 = *v3;
            v161 = *(_QWORD *)(a2 + v160);
            if (v161 == -1 || v161 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v162 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v161);
              *(_QWORD *)(a2 + v160) = v161 + 1;
              v46 |= (unint64_t)(v162 & 0x7F) << v158;
              if (v162 < 0)
              {
                v158 += 7;
                v14 = v159++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_335;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_335:
          v175 = 48;
          goto LABEL_344;
        case 0x1Eu:
          v163 = 0;
          v164 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x10u;
          while (2)
          {
            v165 = *v3;
            v166 = *(_QWORD *)(a2 + v165);
            if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
              *(_QWORD *)(a2 + v165) = v166 + 1;
              v46 |= (unint64_t)(v167 & 0x7F) << v163;
              if (v167 < 0)
              {
                v163 += 7;
                v14 = v164++ >= 9;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_339;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v46) = 0;
LABEL_339:
          v175 = 40;
          goto LABEL_344;
        case 0x1Fu:
          v168 = 0;
          v169 = 0;
          v46 = 0;
          *(_DWORD *)(a1 + 124) |= 0x800u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v170 = *v3;
        v171 = *(_QWORD *)(a2 + v170);
        if (v171 == -1 || v171 >= *(_QWORD *)(a2 + *v4))
          break;
        v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v171);
        *(_QWORD *)(a2 + v170) = v171 + 1;
        v46 |= (unint64_t)(v172 & 0x7F) << v168;
        if ((v172 & 0x80) == 0)
          goto LABEL_341;
        v168 += 7;
        v14 = v169++ >= 9;
        if (v14)
        {
          LODWORD(v46) = 0;
          goto LABEL_343;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_341:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v46) = 0;
LABEL_343:
      v175 = 68;
LABEL_344:
      *(_DWORD *)(a1 + v175) = v46;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFCLInUseAssertionWithOptions(uint64_t a1, void *a2)
{
  id v3;
  id CLInUseAssertionClass;
  void *v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD *v10;

  v3 = a2;
  if (a1 == 3)
  {
    CLInUseAssertionClass = getCLInUseAssertionClass();
    v5 = (void *)MEMORY[0x1E0CB34D0];
    v6 = CFSTR("/System/Library/PrivateFrameworks/AssistantServices.framework");
    goto LABEL_6;
  }
  if (a1 == 2)
  {
    v9 = getCLInUseAssertionClass();
    v10 = (_QWORD *)MEMORY[0x1E0DC7EC8];
LABEL_9:
    v8 = (void *)objc_msgSend(v9, "newAssertionForBundleIdentifier:withReason:level:", *v10, v3, 1);
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    v9 = getCLInUseAssertionClass();
    v10 = (_QWORD *)MEMORY[0x1E0DC7FD8];
    goto LABEL_9;
  }
  CLInUseAssertionClass = getCLInUseAssertionClass();
  v5 = (void *)MEMORY[0x1E0CB34D0];
  v6 = CFSTR("/System/Library/PrivateFrameworks/HomeKitDaemon.framework");
LABEL_6:
  objc_msgSend(v5, "bundleWithPath:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(CLInUseAssertionClass, "newAssertionForBundle:withReason:level:", v7, v3, 1);

LABEL_10:
  return v8;
}

id getCLInUseAssertionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCLInUseAssertionClass_softClass;
  v7 = getCLInUseAssertionClass_softClass;
  if (!getCLInUseAssertionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCLInUseAssertionClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getCLInUseAssertionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C1AB2AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLInUseAssertionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_55084)
    CoreLocationLibraryCore_frameworkLibrary_55084 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_55084)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("CLInUseAssertion+Workflow.m"), 15, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLInUseAssertion");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLInUseAssertionClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("CLInUseAssertion+Workflow.m"), 16, CFSTR("Unable to find class %s"), "CLInUseAssertion");

LABEL_8:
    __break(1u);
  }
  getCLInUseAssertionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void WFMigratePropertyListObject(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v17 = a1;
  v7 = a2;
  v8 = a3;
  objc_msgSend(v17, "valueForKey:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v12 = v11;
    else
      v12 = 0;
    v13 = v12;
    v14 = v13;
    if (v13)
    {
      objc_msgSend(v13, "array");
      v15 = objc_claimAutoreleasedReturnValue();

      v11 = (id)v15;
    }
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v11, 200, 0, a4);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v17, "setValue:forKey:", v16, v8);
    objc_msgSend(v17, "setValue:forKey:", 0, v7);

  }
  else
  {
    objc_msgSend(v17, "setValue:forKey:", 0, v8);
  }

}

void sub_1C1AB4B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__55398(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__55399(uint64_t a1)
{

}

id UIPasteboardFunction_55634()
{
  return (id)classUIPasteboard_55640;
}

Class initUIPasteboard_55635()
{
  Class result;

  if (UIKitLibrary_sOnce_55637 != -1)
    dispatch_once(&UIKitLibrary_sOnce_55637, &__block_literal_global_55638);
  result = objc_getClass("UIPasteboard");
  classUIPasteboard_55640 = (uint64_t)result;
  getUIPasteboardClass_55633 = (uint64_t (*)())UIPasteboardFunction_55634;
  return result;
}

BOOL WFREPBAlertRequestResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WFREPBError *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
LABEL_26:
        v20 = *(WFREPBError **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_29:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v20 = objc_alloc_init(WFREPBError);
    objc_storeStrong((id *)(a1 + 8), v20);
    if (!PBReaderPlaceMark() || (WFREPBErrorReadFrom((uint64_t)v20, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_27;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1AB8F14(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__55907(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__55908(uint64_t a1)
{

}

void sub_1C1AB9EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1ABA0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__56131(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__56132(uint64_t a1)
{

}

void sub_1C1ABC318(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id WFActionSkipList()
{
  if (WFActionSkipList_onceToken != -1)
    dispatch_once(&WFActionSkipList_onceToken, &__block_literal_global_56414);
  return (id)WFActionSkipList_skipList;
}

uint64_t WFPBShareShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_40;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_44;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_44:
          v32 = 56;
          goto LABEL_49;
        case 3u:
          v26 = 0;
          v27 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_40;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_40;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_40;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
LABEL_40:
          v31 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v28 = *v3;
        v29 = *(_QWORD *)(a2 + v28);
        if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          break;
        v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
        *(_QWORD *)(a2 + v28) = v29 + 1;
        v22 |= (unint64_t)(v30 & 0x7F) << v26;
        if ((v30 & 0x80) == 0)
          goto LABEL_46;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_48;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_48:
      v32 = 8;
LABEL_49:
      *(_DWORD *)(a1 + v32) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

WFVariableString *WFTitleForParameterValue(void *a1)
{
  void *v1;
  WFVariableString *v2;
  WFVariableString *v3;
  void *v4;

  objc_msgSend(a1, "state");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v1, "variableString");
    v2 = (WFVariableString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = [WFVariableString alloc];
    WFLocalizedString(CFSTR("Unknown"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = -[WFVariableString initWithString:](v3, "initWithString:", v4);

  }
  return v2;
}

id getCLPlacemarkClass_56931()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCLPlacemarkClass_softClass_56974;
  v7 = getCLPlacemarkClass_softClass_56974;
  if (!getCLPlacemarkClass_softClass_56974)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCLPlacemarkClass_block_invoke_56975;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getCLPlacemarkClass_block_invoke_56975((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C1ABFA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFNSDateComponentsSerialization(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  if (objc_msgSend(v1, "year") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("year"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "year"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v3, CFSTR("year"));

  }
  if (objc_msgSend(v1, "month") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("month"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "month"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v4, CFSTR("month"));

  }
  if (objc_msgSend(v1, "day") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("day"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "day"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v5, CFSTR("day"));

  }
  if (objc_msgSend(v1, "weekday") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("weekday"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "weekday"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v6, CFSTR("weekday"));

  }
  if (objc_msgSend(v1, "hour") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("hour"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "hour"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v7, CFSTR("hour"));

  }
  if (objc_msgSend(v1, "minute") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("minute"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "minute"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v8, CFSTR("minute"));

  }
  if (objc_msgSend(v1, "second") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("second"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "second"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v9, CFSTR("second"));

  }
  if (objc_msgSend(v1, "nanosecond") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("nanosecond"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "nanosecond"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v10, CFSTR("nanosecond"));

  }
  if (objc_msgSend(v1, "weekday") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("weekday"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "weekday"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v11, CFSTR("weekday"));

  }
  if (objc_msgSend(v1, "weekdayOrdinal") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("weekdayOrdinal"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "weekdayOrdinal"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v12, CFSTR("weekdayOrdinal"));

  }
  if (objc_msgSend(v1, "quarter") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("quarter"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "quarter"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v13, CFSTR("quarter"));

  }
  if (objc_msgSend(v1, "weekOfMonth") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("weekOfMonth"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "weekOfMonth"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v14, CFSTR("weekOfMonth"));

  }
  if (objc_msgSend(v1, "weekOfYear") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("weekOfYear"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "weekOfYear"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v15, CFSTR("weekOfYear"));

  }
  if (objc_msgSend(v1, "yearForWeekOfYear") == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", 0, CFSTR("yearForWeekOfYear"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "yearForWeekOfYear"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v16, CFSTR("yearForWeekOfYear"));

  }
  objc_msgSend(v1, "calendar");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "calendarIdentifier");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v18, CFSTR("calendar"));

  objc_msgSend(v1, "timeZone");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "name");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "if_setObjectIfNonNil:forKey:", v20, CFSTR("timeZone"));

  v21 = (void *)objc_msgSend(v2, "copy");
  return v21;
}

id WFINFileSerialization(void *a1)
{
  id v1;
  void *v2;
  WFFileValue *v3;
  void *v4;
  void *v5;
  void *v6;
  WFFileValue *v7;
  void *v8;
  WFFileValue *v9;
  void *v10;

  v1 = a1;
  objc_msgSend(v1, "_bookmarkData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = [WFFileValue alloc];
    objc_msgSend(v1, "_bookmarkData");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "filename");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "filename");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[WFFileValue initWithBookmarkData:filename:displayName:](v3, "initWithBookmarkData:filename:displayName:", v4, v5, v6);

  }
  else
  {
    objc_msgSend(v1, "fileURL");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      v7 = 0;
      goto LABEL_6;
    }
    v9 = [WFFileValue alloc];
    objc_msgSend(v1, "fileURL");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[WFFileValue initWithURL:](v9, "initWithURL:", v4);
  }

LABEL_6:
  -[WFFileValue serializedRepresentation](v7, "serializedRepresentation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id WFINPersonSerialization(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0D13E68], "cnContactWithINPerson:", a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D13E78]), "initWithContact:", v1);
  objc_msgSend(v2, "serializedRepresentation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFINCurrencyAmountSerialization(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[2];
  _QWORD v7[3];

  v7[2] = *MEMORY[0x1E0C80C00];
  v6[0] = CFSTR("amount");
  v1 = a1;
  objc_msgSend(v1, "amount");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[1] = CFSTR("currencyCode");
  v7[0] = v2;
  objc_msgSend(v1, "currencyCode");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v7[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, v6, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id WFINPaymentMethodSerialization(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0C99E08];
  v2 = a1;
  objc_msgSend(v1, "dictionaryWithCapacity:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v2, "type"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "if_setObjectIfNonNil:forKey:", v4, CFSTR("type"));

  objc_msgSend(v2, "name");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "if_setObjectIfNonNil:forKey:", v5, CFSTR("name"));

  objc_msgSend(v2, "identificationHint");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "if_setObjectIfNonNil:forKey:", v6, CFSTR("identificationHint"));
  return v3;
}

id WFLNStringSearchCriteriaSerialization(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x1E0C99E08];
  v2 = a1;
  objc_msgSend(v1, "dictionaryWithCapacity:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "term");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "if_setObjectIfNonNil:forKey:", v4, CFSTR("term"));
  return v3;
}

Class __getCLPlacemarkClass_block_invoke_56975(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_56976)
    CoreLocationLibraryCore_frameworkLibrary_56976 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_56976)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("LNValue+Serialization.m"), 28, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLPlacemark");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLPlacemarkClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("LNValue+Serialization.m"), 29, CFSTR("Unable to find class %s"), "CLPlacemark");

LABEL_8:
    __break(1u);
  }
  getCLPlacemarkClass_softClass_56974 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFCLPlacemarkFromSerializedIntentPlacemark(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  id CLPlacemarkClass_56931;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    WFCLPlacemarkFromSerializedPlacemark();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (v2)
    {
      objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("postalAddress"));
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("name"));
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        if (v4)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v5 = v4;
          else
            v5 = 0;
        }
        else
        {
          v5 = 0;
        }
        v7 = v5;

        v8 = &stru_1E7AFA810;
        if (v7)
          v8 = v7;
        v9 = v8;

        CLPlacemarkClass_56931 = getCLPlacemarkClass_56931();
        objc_msgSend(v2, "location");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 0;
        v18 = &v17;
        v19 = 0x2050000000;
        v12 = (void *)getCNPostalAddressClass_softClass;
        v20 = getCNPostalAddressClass_softClass;
        if (!getCNPostalAddressClass_softClass)
        {
          v16[0] = MEMORY[0x1E0C809B0];
          v16[1] = 3221225472;
          v16[2] = __getCNPostalAddressClass_block_invoke;
          v16[3] = &unk_1E7AF9520;
          v16[4] = &v17;
          __getCNPostalAddressClass_block_invoke((uint64_t)v16);
          v12 = (void *)v18[3];
        }
        v13 = objc_retainAutorelease(v12);
        _Block_object_dispose(&v17, 8);
        objc_msgSend(v13, "postalAddressWithDictionaryRepresentation:", v3);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(CLPlacemarkClass_56931, "placemarkWithLocation:name:postalAddress:", v11, v9, v14);
        v6 = (id)objc_claimAutoreleasedReturnValue();

      }
      else
      {

        v6 = v2;
      }
    }
    else
    {
      v6 = 0;
    }

  }
  else
  {

    v6 = 0;
  }

  return v6;
}

void sub_1C1AC1F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFINCurrencyAmountFromSerialization(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  _BYTE v21[20];
  _QWORD v22[2];
  int v23;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v5;
  if (v8 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("amount"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      v10 = (void *)MEMORY[0x1E0CB3598];
      objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("amount"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (v11)
      {
        objc_msgSend(v11, "decimalValue");
      }
      else
      {
        v22[0] = 0;
        v22[1] = 0;
        v23 = 0;
      }
      objc_msgSend(v10, "decimalNumberWithDecimal:", v22);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("currencyCode"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (v14)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v15 = v14;
      else
        v15 = 0;
    }
    else
    {
      v15 = 0;
    }
    v16 = v15;

    v13 = 0;
    if (v9 && v16)
    {
      v17 = objc_alloc(MEMORY[0x1E0CBD848]);
      v18 = (void *)MEMORY[0x1E0CB3598];
      objc_msgSend(v9, "decimalValue");
      objc_msgSend(v18, "decimalNumberWithDecimal:", v21);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(v17, "initWithAmount:currencyCode:", v19, v16);

    }
  }
  else
  {

    v13 = 0;
  }

  return v13;
}

id WFLNStringSearchCriteriaFromSerialization(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v5;
  if (v8 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("term"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v10 = v9;
      else
        v10 = 0;
    }
    else
    {
      v10 = 0;
    }
    v12 = v10;

    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D43E00]), "initWithTerm:", v12);
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

Class __getCNPostalAddressClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!ContactsLibraryCore_frameworkLibrary_57006)
    ContactsLibraryCore_frameworkLibrary_57006 = _sl_dlopen();
  if (!ContactsLibraryCore_frameworkLibrary_57006)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("LNValue+Serialization.m"), 31, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CNPostalAddress");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNPostalAddressClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("LNValue+Serialization.m"), 32, CFSTR("Unable to find class %s"), "CNPostalAddress");

LABEL_8:
    __break(1u);
  }
  getCNPostalAddressClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1AC3414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C1AC3B90(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1C1AC3D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__57098(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__57099(uint64_t a1)
{

}

void sub_1C1AC4BC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1C1AC4F28(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id WFUnitTypeFromAttributeName(void *a1)
{
  id v1;
  id *v2;
  id v3;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Length")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8230];
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Temperature")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8258];
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Mass")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8238];
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Volume")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8260];
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Speed")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8250];
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Energy")) & 1) != 0)
  {
    v2 = (id *)MEMORY[0x1E0DC8208];
  }
  else
  {
    if (!objc_msgSend(v1, "isEqualToString:", CFSTR("Duration")))
    {
      v3 = 0;
      goto LABEL_16;
    }
    v2 = (id *)MEMORY[0x1E0DC81E0];
  }
  v3 = *v2;
LABEL_16:

  return v3;
}

id WFINItemProviderRequestMetadataWithFileRepresentation(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id v11;
  uint8_t buf[4];
  const char *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0CB36F8];
  objc_msgSend(v1, "metadata");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0;
  objc_msgSend(v2, "archivedDataWithRootObject:requiringSecureCoding:error:", v3, 1, &v11);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v11;

  if (v4)
  {
    v6 = objc_alloc(MEMORY[0x1E0CBD9B0]);
    objc_msgSend(v1, "metadata");
    v7 = objc_claimAutoreleasedReturnValue();
    -[NSObject registeredTypeIdentifiers](v7, "registeredTypeIdentifiers");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v6, "initWithMetadata:supportedContentTypes:", v4, v8);

  }
  else
  {
    getWFGeneralLogObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v13 = "WFINItemProviderRequestMetadataWithFileRepresentation";
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_1C15B3000, v7, OS_LOG_TYPE_ERROR, "%s Could not get archive metadata with error: %@", buf, 0x16u);
    }
    v9 = 0;
  }

  return v9;
}

void sub_1C1ACAB18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C1ACAED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCNContactStoreClass_block_invoke_58006(uint64_t a1)
{
  void *v2;
  void *v3;

  ContactsLibrary_58008();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNContactStore");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNContactStoreClass_softClass_58005 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNContactStoreClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("INCodablePersonAttributeMetadata+Workflow.m"), 21, CFSTR("Unable to find class %s"), "CNContactStore");

    __break(1u);
  }
}

void sub_1C1ACB438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCNPhoneNumberClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContactsLibrary_58008();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNPhoneNumber");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNPhoneNumberClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNPhoneNumberClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("INCodablePersonAttributeMetadata+Workflow.m"), 22, CFSTR("Unable to find class %s"), "CNPhoneNumber");

    __break(1u);
  }
}

void ContactsLibrary_58008()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContactsLibraryCore_frameworkLibrary_58014)
    ContactsLibraryCore_frameworkLibrary_58014 = _sl_dlopen();
  if (!ContactsLibraryCore_frameworkLibrary_58014)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("INCodablePersonAttributeMetadata+Workflow.m"), 20, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

id WFContentItemSortRandom()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Random"));
}

id WFContentItemSortStringDescending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Z to A"));
}

id WFContentItemSortNumberDescending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Biggest First"));
}

id WFContentItemSortDateDescending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Latest First"));
}

id WFContentItemSortDurationDescending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Longest First"));
}

id WFContentItemSortDescending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Descending"));
}

id WFContentItemSortAscending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Ascending"));
}

id WFContentItemSortStringAscending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("A to Z"));
}

id WFContentItemSortNumberAscending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Smallest First"));
}

id WFContentItemSortDateAscending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Oldest First"));
}

id WFContentItemSortDurationAscending()
{
  return WFLocalizedContentPropertyPossibleValueMarker(CFSTR("Shortest First"));
}

void sub_1C1AD29C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__58944(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__58945(uint64_t a1)
{

}

void sub_1C1AD5E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFLocalizedStringWithKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  WFCurrentBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", v4, v3, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id WFLocalizedPluralString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("\n"), CFSTR(" "));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("%@ (Pluralization)"), v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    WFCurrentBundle();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "localizedStringForKey:value:table:", v4, v1, 0);
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = v1;
  }

  return v6;
}

id WFDeferrableLocalizedStringWithKey(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = (objc_class *)MEMORY[0x1E0DC7AC0];
  v4 = a2;
  v5 = a1;
  v6 = (void *)objc_msgSend([v3 alloc], "initWithString:", v4);
  WFCurrentBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", v5, v4, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setLocalizedValue:", v8);
  return v6;
}

id WFLocalizedContentPropertyNameMarker(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = a1;
  objc_msgSend(v1, "stringWithFormat:", CFSTR("%@ (Content Property Name)"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  WFDeferrableLocalizedStringWithKey(v3, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id WFLocalizedContentPropertyPossibleValueMarker(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = a1;
  objc_msgSend(v1, "stringWithFormat:", CFSTR("%@ (Content Property Possible Value)"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  WFDeferrableLocalizedStringWithKey(v3, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id WFLocalizedContentPropertyPossibleValue(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v1, "localizedValue");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ (Content Property Possible Value)"), v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    WFLocalizedStringWithKey(v3, v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

id WFLocalizedStringResourceWithKey(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = (objc_class *)MEMORY[0x1E0CB3B78];
  v4 = a2;
  v5 = a1;
  v6 = [v3 alloc];
  objc_msgSend(MEMORY[0x1E0C99DC8], "autoupdatingCurrentLocale");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  WFCurrentBundle();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "bundleURL");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v6, "initWithKey:defaultValue:table:locale:bundleURL:", v5, v4, 0, v7, v9);

  return v10;
}

void ICDyldBulkImageLoadCallback()
{
  do
    __ldaxr(ICShouldRediscoverAppDefinitions);
  while (__stlxr(1u, ICShouldRediscoverAppDefinitions));
}

uint64_t WFResourceClassIsInArray(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v4 = a2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v10 != v6)
          objc_enumerationMutation(v4);
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v5 = 1;
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_11:

  return v5;
}

uint64_t WFPBAutomatorWorkflowMigrationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 28) |= 2u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_39;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            v22 = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_41:
        *(_BYTE *)(a1 + 24) = v22 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            break;
          v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0)
            goto LABEL_43;
          v26 += 7;
          v14 = v27++ >= 9;
          if (v14)
          {
            LODWORD(v28) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_45:
        *(_DWORD *)(a1 + 8) = v28;
      }
      else if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v18;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

WFINObjectSubstitutableState *WFAllShortcutsParameterState()
{
  id v0;
  void *v1;
  void *v2;
  WFINObjectSubstitutableState *v3;

  v0 = objc_alloc(MEMORY[0x1E0CBDA08]);
  WFLocalizedAllShortcutsString();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v0, "initWithIdentifier:displayString:", CFSTR("AllShortcuts"), v1);

  v3 = -[WFVariableSubstitutableParameterState initWithValue:]([WFINObjectSubstitutableState alloc], "initWithValue:", v2);
  return v3;
}

id getFCActivityManagerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getFCActivityManagerClass_softClass;
  v7 = getFCActivityManagerClass_softClass;
  if (!getFCActivityManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getFCActivityManagerClass_block_invoke;
    v3[3] = &unk_1E7AF9520;
    v3[4] = &v4;
    __getFCActivityManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C1ADF9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFCActivityManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!FocusLibraryCore_frameworkLibrary)
    FocusLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!FocusLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FocusLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFFocusModesManager.m"), 15, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("FCActivityManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFCActivityManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFFocusModesManager.m"), 16, CFSTR("Unable to find class %s"), "FCActivityManager");

LABEL_8:
    __break(1u);
  }
  getFCActivityManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFACEClassFromString(void *a1)
{
  uint64_t v1;
  NSString *v2;
  void *v3;

  v1 = SAObjectsLibrary_sOnce;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&SAObjectsLibrary_sOnce, &__block_literal_global_60644);
  NSClassFromString(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void WFPerformACECommand(void *a1, int a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  _QWORD v14[6];
  char v15;
  _QWORD v16[5];
  id v17;
  _QWORD v18[5];
  id v19;

  v5 = a1;
  v6 = a3;
  getAFClientLiteClass();
  v7 = (void *)objc_opt_new();
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x3032000000;
  v18[3] = __Block_byref_object_copy__60646;
  v18[4] = __Block_byref_object_dispose__60647;
  v19 = 0;
  v16[0] = 0;
  v16[1] = v16;
  v16[2] = 0x3032000000;
  v16[3] = __Block_byref_object_copy__60646;
  v16[4] = __Block_byref_object_dispose__60647;
  v17 = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __WFPerformACECommand_block_invoke;
  v14[3] = &unk_1E7AF87E8;
  v15 = a2;
  v14[4] = v16;
  v14[5] = v18;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __WFPerformACECommand_block_invoke_2;
  v9[3] = &unk_1E7AF8810;
  v13 = a2;
  v8 = v6;
  v10 = v8;
  v11 = v18;
  v12 = v16;
  objc_msgSend(v7, "handleCommand:commandHandler:completion:", v5, v14, v9);
  if (a2)
    (*((void (**)(id, _QWORD, uint64_t, _QWORD))v8 + 2))(v8, 0, 1, 0);

  _Block_object_dispose(v16, 8);
  _Block_object_dispose(v18, 8);

}

void sub_1C1AE0660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

id AFClientLiteFunction()
{
  return (id)classAFClientLite;
}

Class initAFClientLite()
{
  Class result;

  if (AssistantServicesLibrary_sOnce != -1)
    dispatch_once(&AssistantServicesLibrary_sOnce, &__block_literal_global_13);
  result = objc_getClass("AFClientLite");
  classAFClientLite = (uint64_t)result;
  getAFClientLiteClass = (uint64_t (*)())AFClientLiteFunction;
  return result;
}

uint64_t __Block_byref_object_copy__60646(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__60647(uint64_t a1)
{

}

id initkAFAssistantErrorDomain()
{
  id *v0;

  if (AssistantServicesLibrary_sOnce != -1)
    dispatch_once(&AssistantServicesLibrary_sOnce, &__block_literal_global_13);
  v0 = (id *)dlsym((void *)AssistantServicesLibrary_sLib, "kAFAssistantErrorDomain");
  if (!v0)
    __assert_rtn("initkAFAssistantErrorDomain", "WFACEUtilities.m", 22, "constant");
  objc_storeStrong((id *)&constantkAFAssistantErrorDomain, *v0);
  getkAFAssistantErrorDomain = (uint64_t (*)())kAFAssistantErrorDomainFunction;
  return (id)constantkAFAssistantErrorDomain;
}

id kAFAssistantErrorDomainFunction()
{
  return (id)constantkAFAssistantErrorDomain;
}

id SAGenericCommandFunction()
{
  return (id)classSAGenericCommand;
}

Class initSAGenericCommand()
{
  Class result;

  if (SAObjectsLibrary_sOnce != -1)
    dispatch_once(&SAObjectsLibrary_sOnce, &__block_literal_global_60644);
  result = objc_getClass("SAGenericCommand");
  classSAGenericCommand = (uint64_t)result;
  getSAGenericCommandClass = (uint64_t (*)())SAGenericCommandFunction;
  return result;
}

id AceObjectFunction()
{
  return (id)classAceObject;
}

Class initAceObject()
{
  Class result;

  if (SAObjectsLibrary_sOnce != -1)
    dispatch_once(&SAObjectsLibrary_sOnce, &__block_literal_global_60644);
  result = objc_getClass("AceObject");
  classAceObject = (uint64_t)result;
  getAceObjectClass = (uint64_t (*)())AceObjectFunction;
  return result;
}

id SABaseCommandFunction()
{
  return (id)classSABaseCommand;
}

Class initSABaseCommand()
{
  Class result;

  if (SAObjectsLibrary_sOnce != -1)
    dispatch_once(&SAObjectsLibrary_sOnce, &__block_literal_global_60644);
  result = objc_getClass("SABaseCommand");
  classSABaseCommand = (uint64_t)result;
  getSABaseCommandClass = (uint64_t (*)())SABaseCommandFunction;
  return result;
}

id SACommandFailedFunction()
{
  return (id)classSACommandFailed;
}

Class initSACommandFailed()
{
  Class result;

  if (SAObjectsLibrary_sOnce != -1)
    dispatch_once(&SAObjectsLibrary_sOnce, &__block_literal_global_60644);
  result = objc_getClass("SACommandFailed");
  classSACommandFailed = (uint64_t)result;
  getSACommandFailedClass = (uint64_t (*)())SACommandFailedFunction;
  return result;
}

uint64_t WFKernelBootTime(_QWORD *a1)
{
  uint64_t result;
  id v3;
  id v4;
  size_t v5;
  _QWORD v6[2];
  int v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v6[1] = 0;
  *(_QWORD *)v7 = 0x1500000001;
  v5 = 16;
  v6[0] = 0;
  if ((sysctl(v7, 2u, v6, &v5, 0, 0) & 0x80000000) == 0)
    return v6[0];
  if (!a1)
    return 0;
  v3 = objc_alloc(MEMORY[0x1E0CB35C8]);
  v4 = (id)objc_msgSend(v3, "initWithDomain:code:userInfo:", *MEMORY[0x1E0CB2FE0], *__error(), 0);
  result = 0;
  *a1 = v4;
  return result;
}

id WFKernalBootDate()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  v3 = 0;
  v0 = WFKernelBootTime(&v3);
  v1 = 0;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)v0);
    v1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

uint64_t initSAAlarmDayOfWeekForString(void *a1)
{
  id v1;
  uint64_t (*v2)();
  uint64_t v3;

  v1 = a1;
  if (SAObjectsLibrary_sOnce_60891 != -1)
    dispatch_once(&SAObjectsLibrary_sOnce_60891, &__block_literal_global_60892);
  v2 = (uint64_t (*)())dlsym((void *)SAObjectsLibrary_sLib_60893, "SAAlarmDayOfWeekForString");
  softLinkSAAlarmDayOfWeekForString = v2;
  if (v2)
    v3 = ((uint64_t (*)(id))v2)(v1);
  else
    v3 = 0;

  return v3;
}

BOOL WFImageRenderingModeFromINImageRenderingMode(_BOOL8 result)
{
  if (result != 2)
    return result == 1;
  return result;
}

uint64_t WFSupportedSystemIntentClasses()
{
  return objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", CFSTR("INAddTasksIntent"), CFSTR("INCreateNoteIntent"), CFSTR("INSetTaskAttributeIntent"), CFSTR("INStartCallIntent"), CFSTR("INStartAudioCallIntent"), CFSTR("INStartVideoCallIntent"), CFSTR("INPlayMediaIntent"), CFSTR("INSearchForMediaIntent"), CFSTR("INAddMediaIntent"), CFSTR("INUpdateMediaAffinityIntent"), CFSTR("INStartWorkoutIntent"), CFSTR("INEndWorkoutIntent"), CFSTR("INPauseWorkoutIntent"), CFSTR("INResumeWorkoutIntent"), CFSTR("INCancelWorkoutIntent"), CFSTR("INSetCarLockStatusIntent"), CFSTR("INGetCarLockStatusIntent"),
           CFSTR("INGetCarPowerLevelStatusIntent"),
           CFSTR("INActivateCarSignalIntent"),
           CFSTR("INGetReservationDetailsIntent"),
           CFSTR("INGetVisualCodeIntent"),
           CFSTR("INTransferMoneyIntent"),
           CFSTR("INPayBillIntent"),
           CFSTR("INSendPaymentIntent"),
           CFSTR("INRequestPaymentIntent"),
           CFSTR("INSearchForBillsIntent"),
           CFSTR("INSearchForAccountsIntent"),
           CFSTR("INRequestRideIntent"),
           CFSTR("INSendMessageIntent"),
           CFSTR("INSearchForMessagesIntent"),
           CFSTR("INSetMessageAttributeIntent"),
           CFSTR("INUnsendMessagesIntent"),
           CFSTR("INEditMessageIntent"),
           CFSTR("INShareETAIntent"),
           CFSTR("INControlHomeIntent"),
           CFSTR("INCreateTimerIntent"),
           CFSTR("INListVoiceShortcutsIntent"),
           0);
}

id WFLoadAllSystemIntentActions(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t i;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  void *v15;
  void *v16;
  void *v17;
  uint64_t k;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t m;
  void *v32;
  id obj;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD v51[4];
  id v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[4];
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[128];
  _BYTE v68[128];
  _BYTE v69[128];
  _BYTE v70[128];
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  WFSingletonINExecutionFrameworkMapper();
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  WFInstalledAppsEnumerator();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  WFSupportedSystemIntentClasses();
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v63 = 0u;
  v64 = 0u;
  v65 = 0u;
  v66 = 0u;
  obj = v3;
  v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v70, 16);
  if (v38)
  {
    v37 = *(_QWORD *)v64;
    v42 = *MEMORY[0x1E0CBD3F8];
    do
    {
      for (i = 0; i != v38; ++i)
      {
        if (*(_QWORD *)v64 != v37)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * i);
        objc_msgSend(v5, "in2_supportedIntents");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "bundleIdentifier");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v7, "length");

        if (v8)
        {
          v40 = i;
          v61[0] = MEMORY[0x1E0C809B0];
          v61[1] = 3221225472;
          v61[2] = __WFLoadAllSystemIntentActions_block_invoke;
          v61[3] = &unk_1E7AF8940;
          v44 = v35;
          v62 = v44;
          objc_msgSend(v6, "objectsPassingTest:", v61);
          v9 = (id)objc_claimAutoreleasedReturnValue();

          v59 = 0u;
          v60 = 0u;
          v57 = 0u;
          v58 = 0u;
          v10 = v9;
          v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v57, v69, 16);
          if (v11)
          {
            v12 = v11;
            v13 = *(_QWORD *)v58;
            do
            {
              for (j = 0; j != v12; ++j)
              {
                if (*(_QWORD *)v58 != v13)
                  objc_enumerationMutation(v10);
                _WFCreateSystemIntentActionWithIntentClassName(*(void **)(*((_QWORD *)&v57 + 1) + 8 * j), v5, 0, v1);
                v15 = (void *)objc_claimAutoreleasedReturnValue();
                if (v15)
                  objc_msgSend(v2, "addObject:", v15);

              }
              v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v57, v69, 16);
            }
            while (v12);
          }
          v39 = v10;

          objc_msgSend(v5, "bundleIdentifier");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "performSelector:withObject:", sel_extensionBundleIdentifiersForSystemAppIdentifier_, v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          v55 = 0u;
          v56 = 0u;
          v53 = 0u;
          v54 = 0u;
          v41 = v17;
          v45 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v53, v68, 16);
          if (v45)
          {
            v43 = *(_QWORD *)v54;
            do
            {
              for (k = 0; k != v45; ++k)
              {
                if (*(_QWORD *)v54 != v43)
                  objc_enumerationMutation(v41);
                v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5848]), "initWithBundleIdentifier:error:", *(_QWORD *)(*((_QWORD *)&v53 + 1) + 8 * k), 0);
                objc_msgSend(v19, "if_extensionAttributesDictionary");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                v21 = (void *)MEMORY[0x1E0C99E60];
                objc_msgSend(v20, "objectForKeyedSubscript:", v42);
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                v46 = v20;
                if (v22)
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) != 0)
                    v23 = v22;
                  else
                    v23 = 0;
                }
                else
                {
                  v23 = 0;
                }
                v24 = v23;

                objc_msgSend(v21, "setWithArray:", v24);
                v25 = (void *)objc_claimAutoreleasedReturnValue();

                v51[0] = MEMORY[0x1E0C809B0];
                v51[1] = 3221225472;
                v51[2] = __WFLoadAllSystemIntentActions_block_invoke_2;
                v51[3] = &unk_1E7AF8940;
                v52 = v44;
                objc_msgSend(v25, "objectsPassingTest:", v51);
                v26 = (id)objc_claimAutoreleasedReturnValue();

                v49 = 0u;
                v50 = 0u;
                v47 = 0u;
                v48 = 0u;
                v27 = v26;
                v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v47, v67, 16);
                if (v28)
                {
                  v29 = v28;
                  v30 = *(_QWORD *)v48;
                  do
                  {
                    for (m = 0; m != v29; ++m)
                    {
                      if (*(_QWORD *)v48 != v30)
                        objc_enumerationMutation(v27);
                      _WFCreateSystemIntentActionWithIntentClassName(*(void **)(*((_QWORD *)&v47 + 1) + 8 * m), v19, v5, v1);
                      v32 = (void *)objc_claimAutoreleasedReturnValue();
                      if (v32)
                        objc_msgSend(v2, "addObject:", v32);

                    }
                    v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v47, v67, 16);
                  }
                  while (v29);
                }

              }
              v45 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v53, v68, 16);
            }
            while (v45);
          }

          v6 = v39;
          i = v40;
        }

      }
      v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v70, 16);
    }
    while (v38);
  }

  return v2;
}

id WFSingletonINExecutionFrameworkMapper()
{
  if (WFSingletonINExecutionFrameworkMapper_onceToken != -1)
    dispatch_once(&WFSingletonINExecutionFrameworkMapper_onceToken, &__block_literal_global_61013);
  return (id)WFSingletonINExecutionFrameworkMapper_frameworkMapper;
}

WFHandleSystemIntentAction *_WFCreateSystemIntentActionWithIntentClassName(void *a1, void *a2, void *a3, void *a4)
{
  NSString *v7;
  id v8;
  id v9;
  id v10;
  WFHandleSystemIntentAction *v11;
  Class v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char isKindOfClass;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  objc_class *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  WFHandleSystemIntentAction *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v38;
  void *v39;
  void *v40;
  id v41;
  const __CFString *v42;
  uint64_t v43;
  const __CFString *v44;
  _QWORD v45[2];

  v45[1] = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = 0;
  if (v7 && v8)
  {
    v12 = NSClassFromString(v7);
    v13 = (void *)MEMORY[0x1E0CB3940];
    if (v9)
      v14 = v9;
    else
      v14 = v8;
    objc_msgSend(v14, "bundleIdentifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringWithFormat:", CFSTR("%@.%@"), v15, v7);
    v16 = objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    v18 = objc_alloc(MEMORY[0x1E0CBD980]);
    objc_msgSend(v8, "bundleIdentifier");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = (void *)v16;
    if ((isKindOfClass & 1) != 0)
      v20 = objc_msgSend(v18, "initWithIntentClassName:extensionBundleId:", v7, v19);
    else
      v20 = objc_msgSend(v18, "initWithIntentClassName:launchableAppBundleId:", v7, v19);
    v21 = (void *)v20;

    v39 = v21;
    +[WFIntentDescriptorParameterState serializedRepresentationFromValue:](WFIntentDescriptorParameterState, "serializedRepresentationFromValue:", v21);
    v22 = objc_claimAutoreleasedReturnValue();
    v44 = CFSTR("Discoverable");
    v45[0] = MEMORY[0x1E0C9AAA0];
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v45, &v44, 1);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = v9;
    if (v9)
    {
      v24 = v10;
      v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBD728]), "initWithBundleRecord:", v9);
      v26 = v12;
      v27 = (void *)objc_msgSend(v23, "mutableCopy");
      objc_msgSend(v25, "serializedRepresentation");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "setObject:forKey:", v28, CFSTR("DisplayableAppDefinition"));

      v29 = objc_msgSend(v27, "copy");
      v12 = v26;

      v10 = v24;
      v23 = (void *)v29;
    }
    v41 = v10;
    objc_msgSend(v10, "defaultActionDefinition");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "definitionByAddingEntriesInDictionary:", v23);
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    v32 = [WFHandleSystemIntentAction alloc];
    v42 = CFSTR("IntentAppDefinition");
    v43 = v22;
    v33 = (void *)v22;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v43, &v42, 1);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    -[objc_class intentDescription](v12, "intentDescription");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CBDC38], "localizerForLanguage:", 0);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[WFHandleSystemIntentAction initWithIdentifier:definition:serializedParameters:intentDescription:stringLocalizer:](v32, "initWithIdentifier:definition:serializedParameters:intentDescription:stringLocalizer:", v40, v31, v34, v35, v36);

    v10 = v41;
    v9 = v38;
  }

  return v11;
}

id WFGetSystemIntentActionForBundleIdentifierAndIntentClassName(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id obj;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5870]), "initWithBundleIdentifier:allowPlaceholder:error:", v5, 0, 0);
  if (v8)
  {
    v29 = v7;
    v30 = v6;
    v31 = v5;
    WFSingletonINExecutionFrameworkMapper();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "in2_supportedIntents");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = v8;
    objc_msgSend(v8, "bundleIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v9;
    objc_msgSend(v9, "performSelector:withObject:", sel_extensionBundleIdentifiersForSystemAppIdentifier_, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v35 = 0u;
    v36 = 0u;
    v33 = 0u;
    v34 = 0u;
    obj = v12;
    v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v34;
      v16 = *MEMORY[0x1E0CBD3F8];
      do
      {
        v17 = 0;
        v18 = v10;
        do
        {
          if (*(_QWORD *)v34 != v15)
            objc_enumerationMutation(obj);
          v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5848]), "initWithBundleIdentifier:error:", *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * v17), 0);
          objc_msgSend(v19, "if_extensionAttributesDictionary");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "objectForKeyedSubscript:", v16);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          if (v21)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v22 = v21;
            else
              v22 = 0;
          }
          else
          {
            v22 = 0;
          }
          v23 = v22;

          v24 = (void *)objc_msgSend(v18, "mutableCopy");
          objc_msgSend(v24, "addObjectsFromArray:", v23);

          v10 = (void *)objc_msgSend(v24, "copy");
          ++v17;
          v18 = v10;
        }
        while (v14 != v17);
        v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      }
      while (v14);
    }

    v6 = v30;
    if (objc_msgSend(v10, "containsObject:", v30))
    {
      v8 = v28;
      v7 = v29;
      _WFCreateSystemIntentActionWithIntentClassName(v30, v28, 0, v29);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v31;
    }
    else
    {
      v25 = 0;
      v5 = v31;
      v8 = v28;
      v7 = v29;
    }

  }
  else
  {
    v25 = 0;
  }

  return v25;
}

uint64_t WFREPBErrorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_31;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          break;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_31:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_33;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          v22 = 0;
          goto LABEL_35;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
      if (*(_BYTE *)(a2 + *v5))
        v22 = 0;
LABEL_35:
      *(_QWORD *)(a1 + 8) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1AE4E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__61398(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__61399(uint64_t a1)
{

}

uint64_t WFPBAutomatorWorkflowActionMigrationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_34;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            v22 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_36:
        *(_BYTE *)(a1 + 24) = v22 != 0;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 8;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 16;
        }
        v26 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFPBMoveShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFSerializedVariableObject(void *a1)
{
  id v1;
  objc_class *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[5];
  _QWORD v13[2];
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (objc_class *)objc_opt_class();
  WFSerializationNameMigrations();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __WFSerializedVariableObject_block_invoke;
  v12[3] = &__block_descriptor_40_e25_B32__0__NSString_8_16_B24lu32l8;
  v12[4] = v2;
  objc_msgSend(v3, "keysOfEntriesPassingTest:", v12);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "anyObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
  }
  else
  {
    NSStringFromClass(v2);
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  v8 = v7;

  v13[0] = CFSTR("WFSerializationType");
  v13[1] = CFSTR("Value");
  v14[0] = v8;
  objc_msgSend(v1, "serializedRepresentation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v14[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id WFSerializationNameMigrations()
{
  if (WFSerializationNameMigrations_onceToken != -1)
    dispatch_once(&WFSerializationNameMigrations_onceToken, &__block_literal_global_61710);
  return (id)WFSerializationNameMigrations__serializationNameMigrations;
}

id WFDeserializedVariableObject(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSString *v8;
  void *v9;
  objc_class *v10;
  id v11;
  void *v12;
  void *v13;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "objectForKey:", CFSTR("WFSerializationType"));
  v8 = (NSString *)objc_claimAutoreleasedReturnValue();
  if (!v8)
    goto LABEL_6;
  WFSerializationNameMigrations();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (objc_class *)objc_msgSend(v9, "objectForKey:", v8);
  if (!v10)
    v10 = NSClassFromString(v8);

  if (-[objc_class instancesRespondToSelector:](v10, "instancesRespondToSelector:", sel_initWithSerializedRepresentation_variableProvider_parameter_))
  {
    v11 = [v10 alloc];
    objc_msgSend(v5, "objectForKey:", CFSTR("Value"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v11, "initWithSerializedRepresentation:variableProvider:parameter:", v12, v6, v7);

  }
  else
  {
LABEL_6:
    v13 = 0;
  }

  return v13;
}

void sub_1C1AE6AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1C1AECAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C1AECF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  _Block_object_dispose((const void *)(v35 - 176), 8);
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1C1AED090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__62249(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__62250(uint64_t a1)
{

}

id getWFBiomeReversalArbiterLogObject()
{
  if (getWFBiomeReversalArbiterLogObject_onceToken != -1)
    dispatch_once(&getWFBiomeReversalArbiterLogObject_onceToken, &__block_literal_global_62263);
  return (id)getWFBiomeReversalArbiterLogObject_log;
}

void __getWFBiomeReversalArbiterLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create((const char *)*MEMORY[0x1E0DC81B0], "BiomeReversalArbiter");
  v1 = (void *)getWFBiomeReversalArbiterLogObject_log;
  getWFBiomeReversalArbiterLogObject_log = (uint64_t)v0;

}

BOOL WFREPBDialogRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFPBDeleteShortcutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_32;
        case 3u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_32;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_32;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
LABEL_32:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_34;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_36:
      *(_DWORD *)(a1 + 8) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL WFPBShowDialogEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_24;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_24;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_24;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_24;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_24:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_25:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1AF0300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C1AF0B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__62914(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__62915(uint64_t a1)
{

}

uint64_t WFPBSetupSuggestedAutomationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_23;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_23:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 3u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_41;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_41:
          *(_DWORD *)(a1 + 8) = v23;
          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v30 = *v3;
        v31 = *(_QWORD *)(a2 + v30);
        if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          break;
        v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
        *(_QWORD *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
          goto LABEL_43;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          v29 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v29 = 0;
LABEL_45:
      *(_BYTE *)(a1 + 32) = v29 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

const __CFString *WFReadableTriggerNotificationLevel(int a1)
{
  if ((a1 - 1) > 2)
    return CFSTR("Day");
  else
    return off_1E7AF9330[a1 - 1];
}

uint64_t WFPBActionButtonConfigurationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_25:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 5u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_34;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          v23 = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_36:
      *(_BYTE *)(a1 + 40) = v23 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1C1AFA1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAVSpeechSynthesisVoiceClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!AVFoundationLibraryCore_frameworkLibrary)
    AVFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!AVFoundationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AVFoundationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFSpeakTextLanguagePickerParameterMigration.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("AVSpeechSynthesisVoice");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVSpeechSynthesisVoiceClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFSpeakTextLanguagePickerParameterMigration.m"), 18, CFSTR("Unable to find class %s"), "AVSpeechSynthesisVoice");

LABEL_8:
    __break(1u);
  }
  getAVSpeechSynthesisVoiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1C1AFB2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1C1AFBF14(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(v2 + 16))(v2);
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id WFErrorFromSecurityOSStatus(uint64_t a1)
{
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v2 = (__CFString *)SecCopyErrorMessageString(a1, 0);
  v3 = v2;
  if (v2)
  {
    v4 = v2;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown error %d"), a1);
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  v5 = v4;

  v6 = (void *)MEMORY[0x1E0CB35C8];
  v7 = *MEMORY[0x1E0CB2F90];
  v11 = *MEMORY[0x1E0CB2D50];
  v12[0] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, &v11, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "errorWithDomain:code:userInfo:", v7, (int)a1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id WFShortcutSigningContextSigningCertificateChainFailureError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0C99E08];
  v10 = *MEMORY[0x1E0CB2D50];
  WFLocalizedString(CFSTR("Failed to verify this shortcut"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dictionaryWithDictionary:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v1)
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v1, *MEMORY[0x1E0CB3388]);
  v6 = (void *)MEMORY[0x1E0CB35C8];
  v7 = (void *)objc_msgSend(v5, "copy");
  objc_msgSend(v6, "errorWithDomain:code:userInfo:", CFSTR("WFWorkflowErrorDomain"), 5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id WFCombinedHashStringFromArray(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t i;
  void *v13;
  char __str[2];
  char v16;
  unint64_t v17;

  v1 = a1;
  v2 = objc_msgSend(v1, "count");
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = 0;
    v6 = v2 - 1;
    do
    {
      if (!v4)
        v4 = (void *)objc_opt_new();
      objc_msgSend(v1, "objectAtIndexedSubscript:", v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 0;
      v16 = 0;
      v8 = objc_retainAutorelease(v7);
      v9 = objc_msgSend(v8, "UTF8String");
      v10 = objc_msgSend(v8, "length");
      objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithCapacity:", v10 >> 1);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        for (i = 0; i < v10; i += 2)
        {
          *(_WORD *)__str = *(_WORD *)(v9 + i);
          v17 = strtoul(__str, 0, 16);
          objc_msgSend(v11, "appendBytes:length:", &v17, 1);
        }
      }
      if (v11)
      {
        objc_msgSend(v11, "base64EncodedStringWithOptions:", 0);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v13 = 0;
      }

      if (v13)
        objc_msgSend(v4, "appendString:", v13);
      if (v5 != v6)
        objc_msgSend(v4, "appendString:", CFSTR(","));

      ++v5;
    }
    while (v5 != v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t __Block_byref_object_copy__64390(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__64391(uint64_t a1)
{

}

void sub_1C1AFCDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  (*(void (**)(uint64_t))(v30 + 16))(v30);
  _Unwind_Resume(a1);
}

void sub_1C1AFD058(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void WFAppleIDParseValidationRecordData(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  const void *AppleIDValidationShortcutSigningPolicy;
  int v11;
  int v12;
  NSObject *v13;
  int v14;
  NSObject *v15;
  const char *v16;
  NSObject *v17;
  uint32_t v18;
  _QWORD block[4];
  id v20;
  int v21;
  CFTypeRef cf;
  uint64_t v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  cf = 0;
  v23 = 0;
  if (v6)
  {
    v8 = v6;
  }
  else
  {
    dispatch_get_global_queue(0, 0);
    v8 = objc_claimAutoreleasedReturnValue();
  }
  v9 = v8;
  AppleIDValidationShortcutSigningPolicy = (const void *)SecPolicyCreateAppleIDValidationShortcutSigningPolicy();
  if (AppleIDValidationShortcutSigningPolicy)
  {
    v11 = 201211;
    v12 = SecCMSVerifyCopyDataAndAttributes();
    if (v12)
    {
      v14 = v12;
      getWFSecurityLogObject();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v25 = "WFAppleIDParseValidationRecordData";
        v26 = 1024;
        v27 = v14;
        v16 = "%s Signed Shortcut File Apple ID Parsing Validation Record: SecCMSVerifyCopyDataAndAttributes failed with error %d";
        v17 = v15;
        v18 = 18;
LABEL_19:
        _os_log_impl(&dword_1C15B3000, v17, OS_LOG_TYPE_ERROR, v16, buf, v18);
      }
    }
    else
    {
      getWFSecurityLogObject();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315138;
        v25 = "WFAppleIDParseValidationRecordData";
        v16 = "%s Signed Shortcut File Apple ID Parsing Validation Record: SecCMSVerifyCopyDataAndAttributes returned NUL"
              "L attachedRecordContents";
        v17 = v15;
        v18 = 12;
        goto LABEL_19;
      }
    }

    goto LABEL_7;
  }
  getWFSecurityLogObject();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    v25 = "WFAppleIDParseValidationRecordData";
    _os_log_impl(&dword_1C15B3000, v13, OS_LOG_TYPE_ERROR, "%s Signed Shortcut File Apple ID Parsing Validation Record: SecPolicyCreateAppleIDValidationShortcutSigningPolicy failed", buf, 0xCu);
  }

  v11 = -6762;
LABEL_7:
  if (AppleIDValidationShortcutSigningPolicy)
    CFRelease(AppleIDValidationShortcutSigningPolicy);
  if (v7)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __WFAppleIDParseValidationRecordData_block_invoke_2;
    block[3] = &unk_1E7AF9748;
    v20 = v7;
    v21 = v11;
    dispatch_async(v9, block);

  }
}

uint64_t WFREPBAceCommandRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFREPBContentItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v23;

      }
      else if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t WFProcessIsRunningInUserSetup()
{
  return 0;
}

uint64_t WFLocalizedNumberFormatStyle()
{
  void *v0;
  uint64_t v1;

  WFLocalizedStringWithKey(CFSTR("MONTHLY_REPEAT_NUMBER_FORMAT_STYLE"), CFSTR("ORDINAL"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v0, "isEqualToString:", CFSTR("ORDINAL")))
    v1 = 6;
  else
    v1 = 0;

  return v1;
}

void sub_1C1B033D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL WFPBAutomatorWorkflowMigrationErrorEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 16;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id WFShortcutsActionIdentifierFromLinkIdentifiers(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = a1;
  WFShortcutsActionIdentifierForIdentifierOverrideSearch(v4, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  WFLinkActionIdentifierOverrides();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "stringByAppendingString:", CFSTR("."));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "stringByAppendingString:", v3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
    v10 = v7;
  else
    v10 = v9;
  v11 = v10;
  if (+[WFLinkActionProvider shouldAllowActionWithIdentifier:](WFLinkActionProvider, "shouldAllowActionWithIdentifier:", v11))
  {
    v12 = v11;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

id WFLinkActionBundleIdentifierOverrides(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;

  v1 = WFLinkActionBundleIdentifierOverrides_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&WFLinkActionBundleIdentifierOverrides_onceToken, &__block_literal_global_636);
  objc_msgSend((id)WFLinkActionBundleIdentifierOverrides_linkActionBundleIdentifierOverrides, "objectForKeyedSubscript:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t WFISEligibleForSettingsUpdaterAction(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v21[8];

  v21[7] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "properties");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  objc_msgSend(v4, "systemProtocolMetadata");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0D43A00]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "attributionBundleIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = *MEMORY[0x1E0DC7F30];
  v11 = objc_msgSend(v9, "isEqualToString:", *MEMORY[0x1E0DC7F30]);

  v12 = objc_alloc(MEMORY[0x1E0C99E60]);
  v13 = *MEMORY[0x1E0DC7ED8];
  v21[0] = *MEMORY[0x1E0DC7FB8];
  v21[1] = v13;
  v14 = *MEMORY[0x1E0DC7FB0];
  v21[2] = *MEMORY[0x1E0DC7F10];
  v21[3] = v14;
  v21[4] = *MEMORY[0x1E0DC7FD0];
  v21[5] = v10;
  v21[6] = CFSTR("com.apple.AccessibilityUIServer");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 7);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(v12, "initWithArray:", v15);

  v17 = objc_msgSend(v16, "containsObject:", v3);
  if (v8)
    v18 = v6 == 1;
  else
    v18 = 0;
  if (v18)
    v19 = v11 | v17;
  else
    v19 = 0;

  return v19;
}

id WFUpdatableEntityValueTypeFromEntityUpdaterAction(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = a1;
  objc_msgSend(v1, "systemProtocols");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D43E20], "propertyUpdaterProtocol");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "containsObject:", v3);

  if (v4)
  {
    objc_msgSend(v1, "parameters");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "if_firstObjectPassingTest:", &__block_literal_global_65975);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "valueType");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v8 = v7;
      else
        v8 = 0;
    }
    else
    {
      v8 = 0;
    }
    v9 = v8;

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

id WFResourceDefinitionsForRequiredCapabilities(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  _TtC11WorkflowKit26WFDeviceCapabilityResource *v11;
  void *v12;
  _TtC11WorkflowKit21WFFeatureFlagResource *v13;
  _TtC11WorkflowKit26WFDeviceCapabilityResource *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_opt_new();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v17 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        if (objc_msgSend(v8, "isFeatureFlagCapability", (_QWORD)v16))
        {
          objc_msgSend(v8, "key");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "componentsSeparatedByString:", CFSTR("/"));
          v10 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v10, "firstObject");
          v11 = (_TtC11WorkflowKit26WFDeviceCapabilityResource *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "lastObject");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = -[WFFeatureFlagResource initWithDomain:feature:value:]([_TtC11WorkflowKit21WFFeatureFlagResource alloc], "initWithDomain:feature:value:", v11, v12, objc_msgSend(v8, "value"));
          objc_msgSend(v2, "addObject:", v13);

        }
        else
        {
          if (!objc_msgSend(v8, "isMobileGestaltCapability"))
            continue;
          v14 = [_TtC11WorkflowKit26WFDeviceCapabilityResource alloc];
          objc_msgSend(v8, "key");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = -[WFDeviceCapabilityResource initWithMobileGestaltKey:value:](v14, "initWithMobileGestaltKey:value:", v10, objc_msgSend(v8, "value"));
          objc_msgSend(v2, "addObject:", v11);
        }

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v5);
  }

  return v2;
}

uint64_t WFQueryMetadataIsEligibleForAction(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  uint64_t v10;

  v3 = a1;
  v4 = a2;
  WFForcedLinkEntityFindActionIdentifiers();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "entityType");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  WFShortcutsActionIdentifierFromLinkIdentifiers(v4, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend(v5, "containsObject:", v7);
  objc_msgSend(v3, "parameters");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 1;
  if (!objc_msgSend(v9, "count") && (v8 & 1) == 0)
    v10 = objc_msgSend(v3, "capabilities") & 1;

  return v10;
}

id WFEffectiveActionIdentifiersForActionMetadata(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  _QWORD v21[2];
  void *v22;
  _QWORD v23[3];

  v23[2] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "systemProtocols");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D43E20], "propertyUpdaterProtocol");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v8, "containsObject:", v9);

  if (!v10)
    goto LABEL_7;
  WFUpdatableEntityValueTypeFromEntityUpdaterAction(v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v12, "length"))
  {

LABEL_7:
    objc_msgSend(v5, "identifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v11;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v20, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_8;
  }
  v23[0] = v12;
  v23[1] = CFSTR("UpdatableEntity");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "componentsJoinedByString:", CFSTR("-"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v22 = v14;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v22, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v12);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (WFISEligibleForSettingsUpdaterAction(v16, v7))
  {
    v21[0] = CFSTR("WFAppSettingEntityUpdaterAction");
    v21[1] = CFSTR("WFGetAppSettingAction");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 2);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "arrayByAddingObjectsFromArray:", v17);
    v18 = objc_claimAutoreleasedReturnValue();

    v15 = (void *)v18;
  }

LABEL_8:
  return v15;
}

uint64_t sub_1C1B0D994()
{
  return MEMORY[0x1E0C906A0]();
}

uint64_t sub_1C1B0D9A0()
{
  return MEMORY[0x1E0C906A8]();
}

uint64_t sub_1C1B0D9AC()
{
  return MEMORY[0x1E0C906B0]();
}

uint64_t sub_1C1B0D9B8()
{
  return MEMORY[0x1E0CADD58]();
}

uint64_t sub_1C1B0D9C4()
{
  return MEMORY[0x1E0CADE08]();
}

uint64_t sub_1C1B0D9D0()
{
  return MEMORY[0x1E0CADE28]();
}

uint64_t sub_1C1B0D9DC()
{
  return MEMORY[0x1E0CADE60]();
}

uint64_t sub_1C1B0D9E8()
{
  return MEMORY[0x1E0CADE78]();
}

uint64_t sub_1C1B0D9F4()
{
  return MEMORY[0x1E0CAE208]();
}

uint64_t sub_1C1B0DA00()
{
  return MEMORY[0x1E0CAE238]();
}

uint64_t sub_1C1B0DA0C()
{
  return MEMORY[0x1E0CAE258]();
}

uint64_t sub_1C1B0DA18()
{
  return MEMORY[0x1E0CAE388]();
}

uint64_t sub_1C1B0DA24()
{
  return MEMORY[0x1E0CAE428]();
}

uint64_t sub_1C1B0DA30()
{
  return MEMORY[0x1E0CAE4B0]();
}

uint64_t sub_1C1B0DA3C()
{
  return MEMORY[0x1E0CAE6E8]();
}

uint64_t sub_1C1B0DA48()
{
  return MEMORY[0x1E0CAE9A8]();
}

uint64_t sub_1C1B0DA54()
{
  return MEMORY[0x1E0CAE9C0]();
}

uint64_t sub_1C1B0DA60()
{
  return MEMORY[0x1E0CAE9E8]();
}

uint64_t sub_1C1B0DA6C()
{
  return MEMORY[0x1E0CAEAB8]();
}

uint64_t sub_1C1B0DA78()
{
  return MEMORY[0x1E0CAEB28]();
}

uint64_t sub_1C1B0DA84()
{
  return MEMORY[0x1E0CAEB30]();
}

uint64_t sub_1C1B0DA90()
{
  return MEMORY[0x1E0CAEB48]();
}

uint64_t sub_1C1B0DA9C()
{
  return MEMORY[0x1E0CAEB58]();
}

uint64_t sub_1C1B0DAA8()
{
  return MEMORY[0x1E0CAF038]();
}

uint64_t sub_1C1B0DAB4()
{
  return MEMORY[0x1E0CAF058]();
}

uint64_t sub_1C1B0DAC0()
{
  return MEMORY[0x1E0CAF068]();
}

uint64_t sub_1C1B0DACC()
{
  return MEMORY[0x1E0CAF080]();
}

uint64_t sub_1C1B0DAD8()
{
  return MEMORY[0x1E0CAF248]();
}

uint64_t sub_1C1B0DAE4()
{
  return MEMORY[0x1E0CAF2D0]();
}

uint64_t sub_1C1B0DAF0()
{
  return MEMORY[0x1E0CAF4D8]();
}

uint64_t sub_1C1B0DAFC()
{
  return MEMORY[0x1E0CAF550]();
}

uint64_t sub_1C1B0DB08()
{
  return MEMORY[0x1E0CAF5D0]();
}

uint64_t sub_1C1B0DB14()
{
  return MEMORY[0x1E0CAF600]();
}

uint64_t sub_1C1B0DB20()
{
  return MEMORY[0x1E0CAF610]();
}

uint64_t sub_1C1B0DB2C()
{
  return MEMORY[0x1E0CAF640]();
}

uint64_t sub_1C1B0DB38()
{
  return MEMORY[0x1E0CAF660]();
}

uint64_t sub_1C1B0DB44()
{
  return MEMORY[0x1E0CAF678]();
}

uint64_t sub_1C1B0DB50()
{
  return MEMORY[0x1E0CAF8D0]();
}

uint64_t sub_1C1B0DB5C()
{
  return MEMORY[0x1E0CAF8E0]();
}

uint64_t sub_1C1B0DB68()
{
  return MEMORY[0x1E0CAF8F0]();
}

uint64_t sub_1C1B0DB74()
{
  return MEMORY[0x1E0CAF908]();
}

uint64_t sub_1C1B0DB80()
{
  return MEMORY[0x1E0CAF918]();
}

uint64_t sub_1C1B0DB8C()
{
  return MEMORY[0x1E0CAF938]();
}

uint64_t sub_1C1B0DB98()
{
  return MEMORY[0x1E0CAF948]();
}

uint64_t sub_1C1B0DBA4()
{
  return MEMORY[0x1E0CAF978]();
}

uint64_t sub_1C1B0DBB0()
{
  return MEMORY[0x1E0CAF988]();
}

uint64_t sub_1C1B0DBBC()
{
  return MEMORY[0x1E0CAFB48]();
}

uint64_t sub_1C1B0DBC8()
{
  return MEMORY[0x1E0CAFB60]();
}

uint64_t sub_1C1B0DBD4()
{
  return MEMORY[0x1E0CAFD18]();
}

uint64_t sub_1C1B0DBE0()
{
  return MEMORY[0x1E0CAFDA8]();
}

uint64_t sub_1C1B0DBEC()
{
  return MEMORY[0x1E0CAFE10]();
}

uint64_t sub_1C1B0DBF8()
{
  return MEMORY[0x1E0CAFE40]();
}

uint64_t sub_1C1B0DC04()
{
  return MEMORY[0x1E0CAFEF8]();
}

uint64_t sub_1C1B0DC10()
{
  return MEMORY[0x1E0CAFF38]();
}

uint64_t sub_1C1B0DC1C()
{
  return MEMORY[0x1E0CAFFF0]();
}

uint64_t sub_1C1B0DC28()
{
  return MEMORY[0x1E0CB00E0]();
}

uint64_t sub_1C1B0DC34()
{
  return MEMORY[0x1E0CB0100]();
}

uint64_t sub_1C1B0DC40()
{
  return MEMORY[0x1E0CB01E8]();
}

uint64_t sub_1C1B0DC4C()
{
  return MEMORY[0x1E0CB0230]();
}

uint64_t sub_1C1B0DC58()
{
  return MEMORY[0x1E0CB0278]();
}

uint64_t sub_1C1B0DC64()
{
  return MEMORY[0x1E0CB03B0]();
}

uint64_t sub_1C1B0DC70()
{
  return MEMORY[0x1E0CB05D0]();
}

uint64_t sub_1C1B0DC7C()
{
  return MEMORY[0x1E0CB06C0]();
}

uint64_t sub_1C1B0DC88()
{
  return MEMORY[0x1E0CB07B8]();
}

uint64_t sub_1C1B0DC94()
{
  return MEMORY[0x1E0CB07F0]();
}

uint64_t sub_1C1B0DCA0()
{
  return MEMORY[0x1E0CB0800]();
}

uint64_t sub_1C1B0DCAC()
{
  return MEMORY[0x1E0CB0868]();
}

uint64_t sub_1C1B0DCB8()
{
  return MEMORY[0x1E0CB0878]();
}

uint64_t sub_1C1B0DCC4()
{
  return MEMORY[0x1E0CB0908]();
}

uint64_t sub_1C1B0DCD0()
{
  return MEMORY[0x1E0CB0928]();
}

uint64_t sub_1C1B0DCDC()
{
  return MEMORY[0x1E0CB0940]();
}

uint64_t sub_1C1B0DCE8()
{
  return MEMORY[0x1E0CB0950]();
}

uint64_t sub_1C1B0DCF4()
{
  return MEMORY[0x1E0CB0990]();
}

uint64_t sub_1C1B0DD00()
{
  return MEMORY[0x1E0CB09A0]();
}

uint64_t sub_1C1B0DD0C()
{
  return MEMORY[0x1E0CB0A88]();
}

uint64_t sub_1C1B0DD18()
{
  return MEMORY[0x1E0CB0BE8]();
}

uint64_t sub_1C1B0DD24()
{
  return MEMORY[0x1E0CB0BF0]();
}

uint64_t sub_1C1B0DD30()
{
  return MEMORY[0x1E0CB0C28]();
}

uint64_t sub_1C1B0DD3C()
{
  return MEMORY[0x1E0CB0CD0]();
}

uint64_t sub_1C1B0DD48()
{
  return MEMORY[0x1E0CB0CE0]();
}

uint64_t sub_1C1B0DD54()
{
  return MEMORY[0x1E0CB0CF8]();
}

uint64_t sub_1C1B0DD60()
{
  return MEMORY[0x1E0CB0DE0]();
}

uint64_t sub_1C1B0DD6C()
{
  return MEMORY[0x1E0CB0E30]();
}

uint64_t sub_1C1B0DD78()
{
  return MEMORY[0x1E0CB1020]();
}

uint64_t sub_1C1B0DD84()
{
  return MEMORY[0x1E0CB1078]();
}

uint64_t sub_1C1B0DD90()
{
  return MEMORY[0x1E0CB10C0]();
}

uint64_t sub_1C1B0DD9C()
{
  return MEMORY[0x1E0CB11B0]();
}

uint64_t sub_1C1B0DDA8()
{
  return MEMORY[0x1E0CB11E8]();
}

uint64_t sub_1C1B0DDB4()
{
  return MEMORY[0x1E0DEFDD0]();
}

uint64_t sub_1C1B0DDC0()
{
  return MEMORY[0x1E0DEFDD8]();
}

uint64_t sub_1C1B0DDCC()
{
  return MEMORY[0x1E0DEFE28]();
}

uint64_t sub_1C1B0DDD8()
{
  return MEMORY[0x1E0DEFE40]();
}

uint64_t sub_1C1B0DDE4()
{
  return MEMORY[0x1E0DEFEA8]();
}

uint64_t sub_1C1B0DDF0()
{
  return MEMORY[0x1E0DEFEE0]();
}

uint64_t sub_1C1B0DDFC()
{
  return MEMORY[0x1E0DEFEF0]();
}

uint64_t sub_1C1B0DE08()
{
  return MEMORY[0x1E0DEFF00]();
}

uint64_t sub_1C1B0DE14()
{
  return MEMORY[0x1E0D0F930]();
}

uint64_t sub_1C1B0DE20()
{
  return MEMORY[0x1E0DF1DE0]();
}

uint64_t sub_1C1B0DE2C()
{
  return MEMORY[0x1E0DF1E00]();
}

uint64_t sub_1C1B0DE38()
{
  return MEMORY[0x1E0DF1E10]();
}

uint64_t sub_1C1B0DE44()
{
  return MEMORY[0x1E0DF1E18]();
}

uint64_t sub_1C1B0DE50()
{
  return MEMORY[0x1E0DF1E30]();
}

uint64_t sub_1C1B0DE5C()
{
  return MEMORY[0x1E0DEFF18]();
}

uint64_t sub_1C1B0DE68()
{
  return MEMORY[0x1E0DF1E98]();
}

uint64_t sub_1C1B0DE74()
{
  return MEMORY[0x1E0DF1EA0]();
}

uint64_t sub_1C1B0DE80()
{
  return MEMORY[0x1E0DEFF38]();
}

uint64_t sub_1C1B0DE8C()
{
  return MEMORY[0x1E0DEFF40]();
}

uint64_t sub_1C1B0DE98()
{
  return MEMORY[0x1E0DC7710]();
}

uint64_t sub_1C1B0DEA4()
{
  return MEMORY[0x1E0DC7720]();
}

uint64_t sub_1C1B0DEB0()
{
  return MEMORY[0x1E0DC7740]();
}

uint64_t sub_1C1B0DEBC()
{
  return MEMORY[0x1E0DC7760]();
}

uint64_t sub_1C1B0DEC8()
{
  return MEMORY[0x1E0DC7768]();
}

uint64_t sub_1C1B0DED4()
{
  return MEMORY[0x1E0DC7790]();
}

uint64_t sub_1C1B0DEE0()
{
  return MEMORY[0x1E0DC77A8]();
}

uint64_t sub_1C1B0DEEC()
{
  return MEMORY[0x1E0DC77B0]();
}

uint64_t sub_1C1B0DEF8()
{
  return MEMORY[0x1E0DC77C0]();
}

uint64_t sub_1C1B0DF04()
{
  return MEMORY[0x1E0DC77C8]();
}

uint64_t sub_1C1B0DF10()
{
  return MEMORY[0x1E0DC77D0]();
}

uint64_t sub_1C1B0DF1C()
{
  return MEMORY[0x1E0DC77E0]();
}

uint64_t sub_1C1B0DF28()
{
  return MEMORY[0x1E0DC77E8]();
}

uint64_t sub_1C1B0DF34()
{
  return MEMORY[0x1E0DC77F8]();
}

uint64_t sub_1C1B0DF40()
{
  return MEMORY[0x1E0DC7808]();
}

uint64_t sub_1C1B0DF4C()
{
  return MEMORY[0x1E0DC7810]();
}

uint64_t sub_1C1B0DF58()
{
  return MEMORY[0x1E0DC7818]();
}

uint64_t sub_1C1B0DF64()
{
  return MEMORY[0x1E0DC7820]();
}

uint64_t sub_1C1B0DF70()
{
  return MEMORY[0x1E0DC7828]();
}

uint64_t sub_1C1B0DF7C()
{
  return MEMORY[0x1E0DC7830]();
}

uint64_t sub_1C1B0DF88()
{
  return MEMORY[0x1E0DC7850]();
}

uint64_t sub_1C1B0DF94()
{
  return MEMORY[0x1E0DC78D8]();
}

uint64_t sub_1C1B0DFA0()
{
  return MEMORY[0x1E0DF01F8]();
}

uint64_t sub_1C1B0DFAC()
{
  return MEMORY[0x1E0DF0290]();
}

uint64_t sub_1C1B0DFB8()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1C1B0DFC4()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1C1B0DFD0()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1C1B0DFDC()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1C1B0DFE8()
{
  return MEMORY[0x1E0C95DE0]();
}

uint64_t sub_1C1B0DFF4()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1C1B0E000()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1C1B0E00C()
{
  return MEMORY[0x1E0C95E30]();
}

uint64_t sub_1C1B0E018()
{
  return MEMORY[0x1E0C95ED0]();
}

uint64_t sub_1C1B0E024()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1C1B0E030()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1C1B0E03C()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1C1B0E048()
{
  return MEMORY[0x1E0C95F70]();
}

uint64_t sub_1C1B0E054()
{
  return MEMORY[0x1E0C95F78]();
}

uint64_t sub_1C1B0E060()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1C1B0E06C()
{
  return MEMORY[0x1E0C96018]();
}

uint64_t sub_1C1B0E078()
{
  return MEMORY[0x1E0C96030]();
}

uint64_t sub_1C1B0E084()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1C1B0E090()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1C1B0E09C()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1C1B0E0A8()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1C1B0E0B4()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1C1B0E0C0()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1C1B0E0CC()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1C1B0E0D8()
{
  return MEMORY[0x1E0C96248]();
}

uint64_t sub_1C1B0E0E4()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1C1B0E0F0()
{
  return MEMORY[0x1E0C96388]();
}

uint64_t sub_1C1B0E0FC()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t sub_1C1B0E108()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1C1B0E114()
{
  return MEMORY[0x1E0DBF7A0]();
}

uint64_t sub_1C1B0E120()
{
  return MEMORY[0x1E0DBF820]();
}

uint64_t sub_1C1B0E12C()
{
  return MEMORY[0x1E0DBF830]();
}

uint64_t sub_1C1B0E138()
{
  return MEMORY[0x1E0DBF860]();
}

uint64_t sub_1C1B0E144()
{
  return MEMORY[0x1E0DBF868]();
}

uint64_t sub_1C1B0E150()
{
  return MEMORY[0x1E0DBF870]();
}

uint64_t sub_1C1B0E15C()
{
  return MEMORY[0x1E0DBF880]();
}

uint64_t sub_1C1B0E168()
{
  return MEMORY[0x1E0DBF888]();
}

uint64_t sub_1C1B0E174()
{
  return MEMORY[0x1E0DBF890]();
}

uint64_t sub_1C1B0E180()
{
  return MEMORY[0x1E0DBF898]();
}

uint64_t sub_1C1B0E18C()
{
  return MEMORY[0x1E0DBF8B8]();
}

uint64_t sub_1C1B0E198()
{
  return MEMORY[0x1E0DBF8C8]();
}

uint64_t sub_1C1B0E1A4()
{
  return MEMORY[0x1E0DBF8D0]();
}

uint64_t sub_1C1B0E1B0()
{
  return MEMORY[0x1E0DBF8D8]();
}

uint64_t sub_1C1B0E1BC()
{
  return MEMORY[0x1E0DBF8E0]();
}

uint64_t sub_1C1B0E1C8()
{
  return MEMORY[0x1E0DBF8F0]();
}

uint64_t sub_1C1B0E1D4()
{
  return MEMORY[0x1E0DBF8F8]();
}

uint64_t sub_1C1B0E1E0()
{
  return MEMORY[0x1E0DBF920]();
}

uint64_t sub_1C1B0E1EC()
{
  return MEMORY[0x1E0DBF928]();
}

uint64_t sub_1C1B0E1F8()
{
  return MEMORY[0x1E0DBF930]();
}

uint64_t sub_1C1B0E204()
{
  return MEMORY[0x1E0DBF938]();
}

uint64_t sub_1C1B0E210()
{
  return MEMORY[0x1E0DBF950]();
}

uint64_t sub_1C1B0E21C()
{
  return MEMORY[0x1E0DBF958]();
}

uint64_t sub_1C1B0E228()
{
  return MEMORY[0x1E0DBF960]();
}

uint64_t sub_1C1B0E234()
{
  return MEMORY[0x1E0DBF968]();
}

uint64_t sub_1C1B0E240()
{
  return MEMORY[0x1E0DBF970]();
}

uint64_t sub_1C1B0E24C()
{
  return MEMORY[0x1E0DBF978]();
}

uint64_t sub_1C1B0E258()
{
  return MEMORY[0x1E0DBF998]();
}

uint64_t sub_1C1B0E264()
{
  return MEMORY[0x1E0DBFA00]();
}

uint64_t sub_1C1B0E270()
{
  return MEMORY[0x1E0DBFA08]();
}

uint64_t sub_1C1B0E27C()
{
  return MEMORY[0x1E0DBFA10]();
}

uint64_t sub_1C1B0E288()
{
  return MEMORY[0x1E0DBFA20]();
}

uint64_t sub_1C1B0E294()
{
  return MEMORY[0x1E0DBFA30]();
}

uint64_t sub_1C1B0E2A0()
{
  return MEMORY[0x1E0DBFA38]();
}

uint64_t sub_1C1B0E2AC()
{
  return MEMORY[0x1E0DBFA40]();
}

uint64_t sub_1C1B0E2B8()
{
  return MEMORY[0x1E0DBFA48]();
}

uint64_t sub_1C1B0E2C4()
{
  return MEMORY[0x1E0DBFA50]();
}

uint64_t sub_1C1B0E2D0()
{
  return MEMORY[0x1E0DBFA58]();
}

uint64_t sub_1C1B0E2DC()
{
  return MEMORY[0x1E0DBFA60]();
}

uint64_t sub_1C1B0E2E8()
{
  return MEMORY[0x1E0DBFA68]();
}

uint64_t sub_1C1B0E2F4()
{
  return MEMORY[0x1E0DBFA70]();
}

uint64_t sub_1C1B0E300()
{
  return MEMORY[0x1E0DBFA78]();
}

uint64_t sub_1C1B0E30C()
{
  return MEMORY[0x1E0DBFA80]();
}

uint64_t sub_1C1B0E318()
{
  return MEMORY[0x1E0DBFA88]();
}

uint64_t sub_1C1B0E324()
{
  return MEMORY[0x1E0DBFA90]();
}

uint64_t sub_1C1B0E330()
{
  return MEMORY[0x1E0DBFAC0]();
}

uint64_t sub_1C1B0E33C()
{
  return MEMORY[0x1E0DBFAC8]();
}

uint64_t sub_1C1B0E348()
{
  return MEMORY[0x1E0DBFAE8]();
}

uint64_t sub_1C1B0E354()
{
  return MEMORY[0x1E0DBFB38]();
}

uint64_t sub_1C1B0E360()
{
  return MEMORY[0x1E0DBFB48]();
}

uint64_t sub_1C1B0E36C()
{
  return MEMORY[0x1E0DBFB50]();
}

uint64_t sub_1C1B0E378()
{
  return MEMORY[0x1E0DBFB60]();
}

uint64_t sub_1C1B0E384()
{
  return MEMORY[0x1E0DBFB68]();
}

uint64_t sub_1C1B0E390()
{
  return MEMORY[0x1E0DBFB78]();
}

uint64_t sub_1C1B0E39C()
{
  return MEMORY[0x1E0DBFB80]();
}

uint64_t sub_1C1B0E3A8()
{
  return MEMORY[0x1E0DBFB88]();
}

uint64_t sub_1C1B0E3B4()
{
  return MEMORY[0x1E0DBFBB0]();
}

uint64_t sub_1C1B0E3C0()
{
  return MEMORY[0x1E0DBFBC0]();
}

uint64_t sub_1C1B0E3CC()
{
  return MEMORY[0x1E0DBFBC8]();
}

uint64_t sub_1C1B0E3D8()
{
  return MEMORY[0x1E0DBFBE8]();
}

uint64_t sub_1C1B0E3E4()
{
  return MEMORY[0x1E0DBFC00]();
}

uint64_t sub_1C1B0E3F0()
{
  return MEMORY[0x1E0DBFC10]();
}

uint64_t sub_1C1B0E3FC()
{
  return MEMORY[0x1E0DBFC18]();
}

uint64_t sub_1C1B0E408()
{
  return MEMORY[0x1E0DBFC40]();
}

uint64_t sub_1C1B0E414()
{
  return MEMORY[0x1E0DBFC78]();
}

uint64_t sub_1C1B0E420()
{
  return MEMORY[0x1E0DBFC80]();
}

uint64_t sub_1C1B0E42C()
{
  return MEMORY[0x1E0DBFC88]();
}

uint64_t sub_1C1B0E438()
{
  return MEMORY[0x1E0DBFC90]();
}

uint64_t sub_1C1B0E444()
{
  return MEMORY[0x1E0DBFC98]();
}

uint64_t sub_1C1B0E450()
{
  return MEMORY[0x1E0DBFCC8]();
}

uint64_t sub_1C1B0E45C()
{
  return MEMORY[0x1E0DBFD20]();
}

uint64_t sub_1C1B0E468()
{
  return MEMORY[0x1E0DBFD28]();
}

uint64_t sub_1C1B0E474()
{
  return MEMORY[0x1E0DBFD30]();
}

uint64_t sub_1C1B0E480()
{
  return MEMORY[0x1E0DBFD38]();
}

uint64_t sub_1C1B0E48C()
{
  return MEMORY[0x1E0DBFD40]();
}

uint64_t sub_1C1B0E498()
{
  return MEMORY[0x1E0DBFD48]();
}

uint64_t sub_1C1B0E4A4()
{
  return MEMORY[0x1E0DBFD50]();
}

uint64_t sub_1C1B0E4B0()
{
  return MEMORY[0x1E0DBFD70]();
}

uint64_t sub_1C1B0E4BC()
{
  return MEMORY[0x1E0DBFD78]();
}

uint64_t sub_1C1B0E4C8()
{
  return MEMORY[0x1E0DBFD80]();
}

uint64_t sub_1C1B0E4D4()
{
  return MEMORY[0x1E0DBFD88]();
}

uint64_t sub_1C1B0E4E0()
{
  return MEMORY[0x1E0DBFD90]();
}

uint64_t sub_1C1B0E4EC()
{
  return MEMORY[0x1E0DBFDA0]();
}

uint64_t sub_1C1B0E4F8()
{
  return MEMORY[0x1E0DBFDA8]();
}

uint64_t sub_1C1B0E504()
{
  return MEMORY[0x1E0DBFDB0]();
}

uint64_t sub_1C1B0E510()
{
  return MEMORY[0x1E0DBFDC0]();
}

uint64_t sub_1C1B0E51C()
{
  return MEMORY[0x1E0DBFDC8]();
}

uint64_t sub_1C1B0E528()
{
  return MEMORY[0x1E0DBFDD0]();
}

uint64_t sub_1C1B0E534()
{
  return MEMORY[0x1E0DBFDD8]();
}

uint64_t sub_1C1B0E540()
{
  return MEMORY[0x1E0DBFE28]();
}

uint64_t sub_1C1B0E54C()
{
  return MEMORY[0x1E0DBFE30]();
}

uint64_t sub_1C1B0E558()
{
  return MEMORY[0x1E0DBFE38]();
}

uint64_t sub_1C1B0E564()
{
  return MEMORY[0x1E0DBFE40]();
}

uint64_t sub_1C1B0E570()
{
  return MEMORY[0x1E0DBFE48]();
}

uint64_t sub_1C1B0E57C()
{
  return MEMORY[0x1E0DBFE50]();
}

uint64_t sub_1C1B0E588()
{
  return MEMORY[0x1E0DBFE58]();
}

uint64_t sub_1C1B0E594()
{
  return MEMORY[0x1E0DBFE60]();
}

uint64_t sub_1C1B0E5A0()
{
  return MEMORY[0x1E0DBFE68]();
}

uint64_t sub_1C1B0E5AC()
{
  return MEMORY[0x1E0DBFE70]();
}

uint64_t sub_1C1B0E5B8()
{
  return MEMORY[0x1E0DBFE78]();
}

uint64_t sub_1C1B0E5C4()
{
  return MEMORY[0x1E0DBFE80]();
}

uint64_t sub_1C1B0E5D0()
{
  return MEMORY[0x1E0DBFE88]();
}

uint64_t sub_1C1B0E5DC()
{
  return MEMORY[0x1E0DBFE90]();
}

uint64_t sub_1C1B0E5E8()
{
  return MEMORY[0x1E0DBFE98]();
}

uint64_t sub_1C1B0E5F4()
{
  return MEMORY[0x1E0DBFEA0]();
}

uint64_t sub_1C1B0E600()
{
  return MEMORY[0x1E0DBFEB0]();
}

uint64_t sub_1C1B0E60C()
{
  return MEMORY[0x1E0DBFEB8]();
}

uint64_t sub_1C1B0E618()
{
  return MEMORY[0x1E0DBFEC0]();
}

uint64_t sub_1C1B0E624()
{
  return MEMORY[0x1E0DBFEC8]();
}

uint64_t sub_1C1B0E630()
{
  return MEMORY[0x1E0DBFED0]();
}

uint64_t sub_1C1B0E63C()
{
  return MEMORY[0x1E0DBFF80]();
}

uint64_t sub_1C1B0E648()
{
  return MEMORY[0x1E0DBFFA8]();
}

uint64_t sub_1C1B0E654()
{
  return MEMORY[0x1E0DBFFD8]();
}

uint64_t sub_1C1B0E660()
{
  return MEMORY[0x1E0DBFFE0]();
}

uint64_t sub_1C1B0E66C()
{
  return MEMORY[0x1E0DC0000]();
}

uint64_t sub_1C1B0E678()
{
  return MEMORY[0x1E0DC0028]();
}

uint64_t sub_1C1B0E684()
{
  return MEMORY[0x1E0DC00C0]();
}

uint64_t sub_1C1B0E690()
{
  return MEMORY[0x1E0DC00E0]();
}

uint64_t sub_1C1B0E69C()
{
  return MEMORY[0x1E0DC0108]();
}

uint64_t sub_1C1B0E6A8()
{
  return MEMORY[0x1E0DC0118]();
}

uint64_t sub_1C1B0E6B4()
{
  return MEMORY[0x1E0DC0128]();
}

uint64_t sub_1C1B0E6C0()
{
  return MEMORY[0x1E0DC01A8]();
}

uint64_t sub_1C1B0E6CC()
{
  return MEMORY[0x1E0DC01B0]();
}

uint64_t sub_1C1B0E6D8()
{
  return MEMORY[0x1E0DC01B8]();
}

uint64_t sub_1C1B0E6E4()
{
  return MEMORY[0x1E0DC01D0]();
}

uint64_t sub_1C1B0E6F0()
{
  return MEMORY[0x1E0DC01F0]();
}

uint64_t sub_1C1B0E6FC()
{
  return MEMORY[0x1E0DC01F8]();
}

uint64_t sub_1C1B0E708()
{
  return MEMORY[0x1E0DC0208]();
}

uint64_t sub_1C1B0E714()
{
  return MEMORY[0x1E0DC0210]();
}

uint64_t sub_1C1B0E720()
{
  return MEMORY[0x1E0DC0218]();
}

uint64_t sub_1C1B0E72C()
{
  return MEMORY[0x1E0DC0220]();
}

uint64_t sub_1C1B0E738()
{
  return MEMORY[0x1E0DC0228]();
}

uint64_t sub_1C1B0E744()
{
  return MEMORY[0x1E0DC0230]();
}

uint64_t sub_1C1B0E750()
{
  return MEMORY[0x1E0DC0238]();
}

uint64_t sub_1C1B0E75C()
{
  return MEMORY[0x1E0DC0240]();
}

uint64_t sub_1C1B0E768()
{
  return MEMORY[0x1E0DC0248]();
}

uint64_t sub_1C1B0E774()
{
  return MEMORY[0x1E0DC0258]();
}

uint64_t sub_1C1B0E780()
{
  return MEMORY[0x1E0DC0268]();
}

uint64_t sub_1C1B0E78C()
{
  return MEMORY[0x1E0DC0270]();
}

uint64_t sub_1C1B0E798()
{
  return MEMORY[0x1E0DC0278]();
}

uint64_t sub_1C1B0E7A4()
{
  return MEMORY[0x1E0DC0290]();
}

uint64_t sub_1C1B0E7B0()
{
  return MEMORY[0x1E0DC0298]();
}

uint64_t sub_1C1B0E7BC()
{
  return MEMORY[0x1E0DC02A0]();
}

uint64_t sub_1C1B0E7C8()
{
  return MEMORY[0x1E0DC02C0]();
}

uint64_t sub_1C1B0E7D4()
{
  return MEMORY[0x1E0DC02F0]();
}

uint64_t sub_1C1B0E7E0()
{
  return MEMORY[0x1E0DC02F8]();
}

uint64_t sub_1C1B0E7EC()
{
  return MEMORY[0x1E0DC0300]();
}

uint64_t sub_1C1B0E7F8()
{
  return MEMORY[0x1E0DC0318]();
}

uint64_t sub_1C1B0E804()
{
  return MEMORY[0x1E0DC0330]();
}

uint64_t sub_1C1B0E810()
{
  return MEMORY[0x1E0DC0338]();
}

uint64_t sub_1C1B0E81C()
{
  return MEMORY[0x1E0DC0350]();
}

uint64_t sub_1C1B0E828()
{
  return MEMORY[0x1E0DC0368]();
}

uint64_t sub_1C1B0E834()
{
  return MEMORY[0x1E0DC0388]();
}

uint64_t sub_1C1B0E840()
{
  return MEMORY[0x1E0DC0418]();
}

uint64_t sub_1C1B0E84C()
{
  return MEMORY[0x1E0DC0420]();
}

uint64_t sub_1C1B0E858()
{
  return MEMORY[0x1E0DC0428]();
}

uint64_t sub_1C1B0E864()
{
  return MEMORY[0x1E0DC0430]();
}

uint64_t sub_1C1B0E870()
{
  return MEMORY[0x1E0DC0438]();
}

uint64_t sub_1C1B0E87C()
{
  return MEMORY[0x1E0DC0440]();
}

uint64_t sub_1C1B0E888()
{
  return MEMORY[0x1E0DC0448]();
}

uint64_t sub_1C1B0E894()
{
  return MEMORY[0x1E0DC0468]();
}

uint64_t sub_1C1B0E8A0()
{
  return MEMORY[0x1E0DC0478]();
}

uint64_t sub_1C1B0E8AC()
{
  return MEMORY[0x1E0DC0480]();
}

uint64_t sub_1C1B0E8B8()
{
  return MEMORY[0x1E0DC0488]();
}

uint64_t sub_1C1B0E8C4()
{
  return MEMORY[0x1E0DC0498]();
}

uint64_t sub_1C1B0E8D0()
{
  return MEMORY[0x1E0DC04B8]();
}

uint64_t sub_1C1B0E8DC()
{
  return MEMORY[0x1E0DC04F0]();
}

uint64_t sub_1C1B0E8E8()
{
  return MEMORY[0x1E0DC04F8]();
}

uint64_t sub_1C1B0E8F4()
{
  return MEMORY[0x1E0DC0500]();
}

uint64_t sub_1C1B0E900()
{
  return MEMORY[0x1E0DC0510]();
}

uint64_t sub_1C1B0E90C()
{
  return MEMORY[0x1E0DC0518]();
}

uint64_t sub_1C1B0E918()
{
  return MEMORY[0x1E0DC0538]();
}

uint64_t sub_1C1B0E924()
{
  return MEMORY[0x1E0DC0548]();
}

uint64_t sub_1C1B0E930()
{
  return MEMORY[0x1E0DC0550]();
}

uint64_t sub_1C1B0E93C()
{
  return MEMORY[0x1E0DC0558]();
}

uint64_t sub_1C1B0E948()
{
  return MEMORY[0x1E0DC0560]();
}

uint64_t sub_1C1B0E954()
{
  return MEMORY[0x1E0DC0568]();
}

uint64_t sub_1C1B0E960()
{
  return MEMORY[0x1E0DC0570]();
}

uint64_t sub_1C1B0E96C()
{
  return MEMORY[0x1E0DC0580]();
}

uint64_t sub_1C1B0E978()
{
  return MEMORY[0x1E0DC0588]();
}

uint64_t sub_1C1B0E984()
{
  return MEMORY[0x1E0DC0598]();
}

uint64_t sub_1C1B0E990()
{
  return MEMORY[0x1E0DC05A0]();
}

uint64_t sub_1C1B0E99C()
{
  return MEMORY[0x1E0DC05A8]();
}

uint64_t sub_1C1B0E9A8()
{
  return MEMORY[0x1E0DC05B0]();
}

uint64_t sub_1C1B0E9B4()
{
  return MEMORY[0x1E0DC05B8]();
}

uint64_t sub_1C1B0E9C0()
{
  return MEMORY[0x1E0DC05C8]();
}

uint64_t sub_1C1B0E9CC()
{
  return MEMORY[0x1E0DC05D0]();
}

uint64_t sub_1C1B0E9D8()
{
  return MEMORY[0x1E0DC05D8]();
}

uint64_t sub_1C1B0E9E4()
{
  return MEMORY[0x1E0DC05E0]();
}

uint64_t sub_1C1B0E9F0()
{
  return MEMORY[0x1E0DC05F0]();
}

uint64_t sub_1C1B0E9FC()
{
  return MEMORY[0x1E0DC0608]();
}

uint64_t sub_1C1B0EA08()
{
  return MEMORY[0x1E0DC0630]();
}

uint64_t sub_1C1B0EA14()
{
  return MEMORY[0x1E0DC0638]();
}

uint64_t sub_1C1B0EA20()
{
  return MEMORY[0x1E0DC0640]();
}

uint64_t sub_1C1B0EA2C()
{
  return MEMORY[0x1E0DC0648]();
}

uint64_t sub_1C1B0EA38()
{
  return MEMORY[0x1E0DC0698]();
}

uint64_t sub_1C1B0EA44()
{
  return MEMORY[0x1E0DC06A8]();
}

uint64_t sub_1C1B0EA50()
{
  return MEMORY[0x1E0DC06B0]();
}

uint64_t sub_1C1B0EA5C()
{
  return MEMORY[0x1E0DC06B8]();
}

uint64_t sub_1C1B0EA68()
{
  return MEMORY[0x1E0DC06C8]();
}

uint64_t sub_1C1B0EA74()
{
  return MEMORY[0x1E0DC06D0]();
}

uint64_t sub_1C1B0EA80()
{
  return MEMORY[0x1E0DC06E0]();
}

uint64_t sub_1C1B0EA8C()
{
  return MEMORY[0x1E0DC06F0]();
}

uint64_t sub_1C1B0EA98()
{
  return MEMORY[0x1E0DC0700]();
}

uint64_t sub_1C1B0EAA4()
{
  return MEMORY[0x1E0DC0718]();
}

uint64_t sub_1C1B0EAB0()
{
  return MEMORY[0x1E0DC0728]();
}

uint64_t sub_1C1B0EABC()
{
  return MEMORY[0x1E0DC0748]();
}

uint64_t sub_1C1B0EAC8()
{
  return MEMORY[0x1E0DC0750]();
}

uint64_t sub_1C1B0EAD4()
{
  return MEMORY[0x1E0DC0758]();
}

uint64_t sub_1C1B0EAE0()
{
  return MEMORY[0x1E0DC0768]();
}

uint64_t sub_1C1B0EAEC()
{
  return MEMORY[0x1E0DC07A0]();
}

uint64_t sub_1C1B0EAF8()
{
  return MEMORY[0x1E0DC07A8]();
}

uint64_t sub_1C1B0EB04()
{
  return MEMORY[0x1E0DC07C0]();
}

uint64_t sub_1C1B0EB10()
{
  return MEMORY[0x1E0DC07C8]();
}

uint64_t sub_1C1B0EB1C()
{
  return MEMORY[0x1E0DC07D0]();
}

uint64_t sub_1C1B0EB28()
{
  return MEMORY[0x1E0DC07D8]();
}

uint64_t sub_1C1B0EB34()
{
  return MEMORY[0x1E0DC07E0]();
}

uint64_t sub_1C1B0EB40()
{
  return MEMORY[0x1E0DC07F0]();
}

uint64_t sub_1C1B0EB4C()
{
  return MEMORY[0x1E0DC07F8]();
}

uint64_t sub_1C1B0EB58()
{
  return MEMORY[0x1E0DEF458]();
}

uint64_t sub_1C1B0EB64()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1C1B0EB70()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1C1B0EB7C()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1C1B0EB88()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1C1B0EB94()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1C1B0EBA0()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1C1B0EBAC()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1C1B0EBB8()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1C1B0EBC4()
{
  return MEMORY[0x1E0DEF750]();
}

uint64_t sub_1C1B0EBD0()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1C1B0EBDC()
{
  return MEMORY[0x1E0D11720]();
}

uint64_t sub_1C1B0EBE8()
{
  return MEMORY[0x1E0D11728]();
}

uint64_t sub_1C1B0EBF4()
{
  return MEMORY[0x1E0D11730]();
}

uint64_t sub_1C1B0EC00()
{
  return MEMORY[0x1E0D11738]();
}

uint64_t sub_1C1B0EC0C()
{
  return MEMORY[0x1E0D11748]();
}

uint64_t sub_1C1B0EC18()
{
  return MEMORY[0x1E0D11750]();
}

uint64_t sub_1C1B0EC24()
{
  return MEMORY[0x1E0D11780]();
}

uint64_t sub_1C1B0EC30()
{
  return MEMORY[0x1E0D11790]();
}

uint64_t sub_1C1B0EC3C()
{
  return MEMORY[0x1E0D11818]();
}

uint64_t sub_1C1B0EC48()
{
  return MEMORY[0x1E0D11820]();
}

uint64_t sub_1C1B0EC54()
{
  return MEMORY[0x1E0D11828]();
}

uint64_t sub_1C1B0EC60()
{
  return MEMORY[0x1E0D11830]();
}

uint64_t sub_1C1B0EC6C()
{
  return MEMORY[0x1E0D11838]();
}

uint64_t sub_1C1B0EC78()
{
  return MEMORY[0x1E0D11840]();
}

uint64_t sub_1C1B0EC84()
{
  return MEMORY[0x1E0D11848]();
}

uint64_t sub_1C1B0EC90()
{
  return MEMORY[0x1E0D11850]();
}

uint64_t sub_1C1B0EC9C()
{
  return MEMORY[0x1E0D11858]();
}

uint64_t sub_1C1B0ECA8()
{
  return MEMORY[0x1E0D11860]();
}

uint64_t sub_1C1B0ECB4()
{
  return MEMORY[0x1E0D11868]();
}

uint64_t sub_1C1B0ECC0()
{
  return MEMORY[0x1E0D11870]();
}

uint64_t sub_1C1B0ECCC()
{
  return MEMORY[0x1E0D11878]();
}

uint64_t sub_1C1B0ECD8()
{
  return MEMORY[0x1E0D11880]();
}

uint64_t sub_1C1B0ECE4()
{
  return MEMORY[0x1E0D11888]();
}

uint64_t sub_1C1B0ECF0()
{
  return MEMORY[0x1E0D11890]();
}

uint64_t sub_1C1B0ECFC()
{
  return MEMORY[0x1E0D11898]();
}

uint64_t sub_1C1B0ED08()
{
  return MEMORY[0x1E0D118A0]();
}

uint64_t sub_1C1B0ED14()
{
  return MEMORY[0x1E0D118A8]();
}

uint64_t sub_1C1B0ED20()
{
  return MEMORY[0x1E0D118B0]();
}

uint64_t sub_1C1B0ED2C()
{
  return MEMORY[0x1E0D118B8]();
}

uint64_t sub_1C1B0ED38()
{
  return MEMORY[0x1E0D118C0]();
}

uint64_t sub_1C1B0ED44()
{
  return MEMORY[0x1E0D118C8]();
}

uint64_t sub_1C1B0ED50()
{
  return MEMORY[0x1E0D118D0]();
}

uint64_t sub_1C1B0ED5C()
{
  return MEMORY[0x1E0D118D8]();
}

uint64_t sub_1C1B0ED68()
{
  return MEMORY[0x1E0D118E0]();
}

uint64_t sub_1C1B0ED74()
{
  return MEMORY[0x1E0D118E8]();
}

uint64_t sub_1C1B0ED80()
{
  return MEMORY[0x1E0D118F0]();
}

uint64_t sub_1C1B0ED8C()
{
  return MEMORY[0x1E0D118F8]();
}

uint64_t sub_1C1B0ED98()
{
  return MEMORY[0x1E0D11900]();
}

uint64_t sub_1C1B0EDA4()
{
  return MEMORY[0x1E0D11908]();
}

uint64_t sub_1C1B0EDB0()
{
  return MEMORY[0x1E0D11910]();
}

uint64_t sub_1C1B0EDBC()
{
  return MEMORY[0x1E0D119A0]();
}

uint64_t sub_1C1B0EDC8()
{
  return MEMORY[0x1E0D119A8]();
}

uint64_t sub_1C1B0EDD4()
{
  return MEMORY[0x1E0D119B0]();
}

uint64_t sub_1C1B0EDE0()
{
  return MEMORY[0x1E0D119B8]();
}

uint64_t sub_1C1B0EDEC()
{
  return MEMORY[0x1E0D119C0]();
}

uint64_t sub_1C1B0EDF8()
{
  return MEMORY[0x1E0D119C8]();
}

uint64_t sub_1C1B0EE04()
{
  return MEMORY[0x1E0D119D0]();
}

uint64_t sub_1C1B0EE10()
{
  return MEMORY[0x1E0D119D8]();
}

uint64_t sub_1C1B0EE1C()
{
  return MEMORY[0x1E0D119E0]();
}

uint64_t sub_1C1B0EE28()
{
  return MEMORY[0x1E0D119E8]();
}

uint64_t sub_1C1B0EE34()
{
  return MEMORY[0x1E0D119F0]();
}

uint64_t sub_1C1B0EE40()
{
  return MEMORY[0x1E0D119F8]();
}

uint64_t sub_1C1B0EE4C()
{
  return MEMORY[0x1E0D11A00]();
}

uint64_t sub_1C1B0EE58()
{
  return MEMORY[0x1E0D11A08]();
}

uint64_t sub_1C1B0EE64()
{
  return MEMORY[0x1E0D11A10]();
}

uint64_t sub_1C1B0EE70()
{
  return MEMORY[0x1E0D11A18]();
}

uint64_t sub_1C1B0EE7C()
{
  return MEMORY[0x1E0D11C30]();
}

uint64_t sub_1C1B0EE88()
{
  return MEMORY[0x1E0D11C50]();
}

uint64_t sub_1C1B0EE94()
{
  return MEMORY[0x1E0D11C60]();
}

uint64_t sub_1C1B0EEA0()
{
  return MEMORY[0x1E0D11C68]();
}

uint64_t sub_1C1B0EEAC()
{
  return MEMORY[0x1E0D11C80]();
}

uint64_t sub_1C1B0EEB8()
{
  return MEMORY[0x1E0D11C88]();
}

uint64_t sub_1C1B0EEC4()
{
  return MEMORY[0x1E0D11D08]();
}

uint64_t sub_1C1B0EED0()
{
  return MEMORY[0x1E0D11D10]();
}

uint64_t sub_1C1B0EEDC()
{
  return MEMORY[0x1E0D11D20]();
}

uint64_t sub_1C1B0EEE8()
{
  return MEMORY[0x1E0D11D38]();
}

uint64_t sub_1C1B0EEF4()
{
  return MEMORY[0x1E0D11D40]();
}

uint64_t sub_1C1B0EF00()
{
  return MEMORY[0x1E0D11D90]();
}

uint64_t sub_1C1B0EF0C()
{
  return MEMORY[0x1E0D11D98]();
}

uint64_t sub_1C1B0EF18()
{
  return MEMORY[0x1E0D11F18]();
}

uint64_t sub_1C1B0EF24()
{
  return MEMORY[0x1E0D11F28]();
}

uint64_t sub_1C1B0EF30()
{
  return MEMORY[0x1E0D11F30]();
}

uint64_t sub_1C1B0EF3C()
{
  return MEMORY[0x1E0D11F38]();
}

uint64_t sub_1C1B0EF48()
{
  return MEMORY[0x1E0D11F40]();
}

uint64_t sub_1C1B0EF54()
{
  return MEMORY[0x1E0D11F48]();
}

uint64_t sub_1C1B0EF60()
{
  return MEMORY[0x1E0D11F50]();
}

uint64_t sub_1C1B0EF6C()
{
  return MEMORY[0x1E0D11F88]();
}

uint64_t sub_1C1B0EF78()
{
  return MEMORY[0x1E0D11F98]();
}

uint64_t sub_1C1B0EF84()
{
  return MEMORY[0x1E0D121B8]();
}

uint64_t sub_1C1B0EF90()
{
  return MEMORY[0x1E0D121C0]();
}

uint64_t sub_1C1B0EF9C()
{
  return MEMORY[0x1E0D121C8]();
}

uint64_t sub_1C1B0EFA8()
{
  return MEMORY[0x1E0D121E8]();
}

uint64_t sub_1C1B0EFB4()
{
  return MEMORY[0x1E0D121F0]();
}

uint64_t sub_1C1B0EFC0()
{
  return MEMORY[0x1E0D12380]();
}

uint64_t sub_1C1B0EFCC()
{
  return MEMORY[0x1E0D12800]();
}

uint64_t sub_1C1B0EFD8()
{
  return MEMORY[0x1E0D12808]();
}

uint64_t sub_1C1B0EFE4()
{
  return MEMORY[0x1E0D12838]();
}

uint64_t sub_1C1B0EFF0()
{
  return MEMORY[0x1E0D12850]();
}

uint64_t sub_1C1B0EFFC()
{
  return MEMORY[0x1E0D12858]();
}

uint64_t sub_1C1B0F008()
{
  return MEMORY[0x1E0D12868]();
}

uint64_t sub_1C1B0F014()
{
  return MEMORY[0x1E0D128B0]();
}

uint64_t sub_1C1B0F020()
{
  return MEMORY[0x1E0D128B8]();
}

uint64_t sub_1C1B0F02C()
{
  return MEMORY[0x1E0D128C8]();
}

uint64_t sub_1C1B0F038()
{
  return MEMORY[0x1E0D128D8]();
}

uint64_t sub_1C1B0F044()
{
  return MEMORY[0x1E0D129D0]();
}

uint64_t sub_1C1B0F050()
{
  return MEMORY[0x1E0D12A10]();
}

uint64_t sub_1C1B0F05C()
{
  return MEMORY[0x1E0D12A28]();
}

uint64_t sub_1C1B0F068()
{
  return MEMORY[0x1E0D12A30]();
}

uint64_t sub_1C1B0F074()
{
  return MEMORY[0x1E0D12A40]();
}

uint64_t sub_1C1B0F080()
{
  return MEMORY[0x1E0D12A48]();
}

uint64_t sub_1C1B0F08C()
{
  return MEMORY[0x1E0D12AB8]();
}

uint64_t sub_1C1B0F098()
{
  return MEMORY[0x1E0D12AC0]();
}

uint64_t sub_1C1B0F0A4()
{
  return MEMORY[0x1E0D12AC8]();
}

uint64_t sub_1C1B0F0B0()
{
  return MEMORY[0x1E0D12AD0]();
}

uint64_t sub_1C1B0F0BC()
{
  return MEMORY[0x1E0D12AF8]();
}

uint64_t sub_1C1B0F0C8()
{
  return MEMORY[0x1E0D12B08]();
}

uint64_t sub_1C1B0F0D4()
{
  return MEMORY[0x1E0D12B60]();
}

uint64_t sub_1C1B0F0E0()
{
  return MEMORY[0x1E0D12B90]();
}

uint64_t sub_1C1B0F0EC()
{
  return MEMORY[0x1E0D12B98]();
}

uint64_t sub_1C1B0F0F8()
{
  return MEMORY[0x1E0D12BA0]();
}

uint64_t sub_1C1B0F104()
{
  return MEMORY[0x1E0D12BB0]();
}

uint64_t sub_1C1B0F110()
{
  return MEMORY[0x1E0D12BC0]();
}

uint64_t sub_1C1B0F11C()
{
  return MEMORY[0x1E0D12BE8]();
}

uint64_t sub_1C1B0F128()
{
  return MEMORY[0x1E0D12C38]();
}

uint64_t sub_1C1B0F134()
{
  return MEMORY[0x1E0D12C70]();
}

uint64_t sub_1C1B0F140()
{
  return MEMORY[0x1E0D12CB0]();
}

uint64_t sub_1C1B0F14C()
{
  return MEMORY[0x1E0CB17E0]();
}

uint64_t sub_1C1B0F158()
{
  return MEMORY[0x1E0CB17F0]();
}

uint64_t sub_1C1B0F164()
{
  return MEMORY[0x1E0CB1800]();
}

uint64_t sub_1C1B0F170()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1C1B0F17C()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1C1B0F188()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1C1B0F194()
{
  return MEMORY[0x1E0DEA1C8]();
}

uint64_t sub_1C1B0F1A0()
{
  return MEMORY[0x1E0DF1FA8]();
}

uint64_t sub_1C1B0F1AC()
{
  return MEMORY[0x1E0DEA320]();
}

uint64_t sub_1C1B0F1B8()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1C1B0F1C4()
{
  return MEMORY[0x1E0DEA3E0]();
}

uint64_t sub_1C1B0F1D0()
{
  return MEMORY[0x1E0DEA3E8]();
}

uint64_t sub_1C1B0F1DC()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t sub_1C1B0F1E8()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1C1B0F1F4()
{
  return MEMORY[0x1E0CB1938]();
}

uint64_t sub_1C1B0F200()
{
  return MEMORY[0x1E0CB1948]();
}

uint64_t sub_1C1B0F20C()
{
  return MEMORY[0x1E0CB1958]();
}

uint64_t sub_1C1B0F218()
{
  return MEMORY[0x1E0CB1968]();
}

uint64_t sub_1C1B0F224()
{
  return MEMORY[0x1E0CB1978]();
}

uint64_t sub_1C1B0F230()
{
  return MEMORY[0x1E0CB19B8]();
}

uint64_t sub_1C1B0F23C()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1C1B0F248()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1C1B0F254()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1C1B0F260()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1C1B0F26C()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1C1B0F278()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1C1B0F284()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1C1B0F290()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1C1B0F29C()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_1C1B0F2A8()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1C1B0F2B4()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1C1B0F2C0()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1C1B0F2CC()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1C1B0F2D8()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1C1B0F2E4()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1C1B0F2F0()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1C1B0F2FC()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1C1B0F308()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1C1B0F314()
{
  return MEMORY[0x1E0DEA958]();
}

uint64_t sub_1C1B0F320()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1C1B0F32C()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1C1B0F338()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1C1B0F344()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1C1B0F350()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1C1B0F35C()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_1C1B0F368()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1C1B0F374()
{
  return MEMORY[0x1E0CB1AC8]();
}

uint64_t sub_1C1B0F380()
{
  return MEMORY[0x1E0CB1AF0]();
}

uint64_t sub_1C1B0F38C()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t sub_1C1B0F398()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1C1B0F3A4()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1C1B0F3B0()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1C1B0F3BC()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1C1B0F3C8()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1C1B0F3D4()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1C1B0F3E0()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1C1B0F3EC()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1C1B0F3F8()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1C1B0F404()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1C1B0F410()
{
  return MEMORY[0x1E0DEAEA8]();
}

uint64_t sub_1C1B0F41C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1C1B0F428()
{
  return MEMORY[0x1E0DEAEE0]();
}

uint64_t sub_1C1B0F434()
{
  return MEMORY[0x1E0DEAEE8]();
}

uint64_t sub_1C1B0F440()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1C1B0F44C()
{
  return MEMORY[0x1E0CB1B30]();
}

uint64_t sub_1C1B0F458()
{
  return MEMORY[0x1E0CB1B40]();
}

uint64_t sub_1C1B0F464()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1C1B0F470()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1C1B0F47C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1C1B0F488()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1C1B0F494()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1C1B0F4A0()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1C1B0F4AC()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1C1B0F4B8()
{
  return MEMORY[0x1E0CB1B58]();
}

uint64_t sub_1C1B0F4C4()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1C1B0F4D0()
{
  return MEMORY[0x1E0CB1BA8]();
}

uint64_t sub_1C1B0F4DC()
{
  return MEMORY[0x1E0CB1BD0]();
}

uint64_t sub_1C1B0F4E8()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1C1B0F4F4()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1C1B0F500()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1C1B0F50C()
{
  return MEMORY[0x1E0CB1BF8]();
}

uint64_t sub_1C1B0F518()
{
  return MEMORY[0x1E0CB1C08]();
}

uint64_t sub_1C1B0F524()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1C1B0F530()
{
  return MEMORY[0x1E0DC7900]();
}

uint64_t sub_1C1B0F53C()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1C1B0F548()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1C1B0F554()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1C1B0F560()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1C1B0F56C()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1C1B0F578()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1C1B0F584()
{
  return MEMORY[0x1E0DEB6D8]();
}

uint64_t sub_1C1B0F590()
{
  return MEMORY[0x1E0DEB6F0]();
}

uint64_t sub_1C1B0F59C()
{
  return MEMORY[0x1E0CB1C68]();
}

uint64_t sub_1C1B0F5A8()
{
  return MEMORY[0x1E0DC0800]();
}

uint64_t sub_1C1B0F5B4()
{
  return MEMORY[0x1E0DC0808]();
}

uint64_t sub_1C1B0F5C0()
{
  return MEMORY[0x1E0DEFC40]();
}

uint64_t sub_1C1B0F5CC()
{
  return MEMORY[0x1E0CB1D28]();
}

uint64_t sub_1C1B0F5D8()
{
  return MEMORY[0x1E0CB1DC8]();
}

uint64_t sub_1C1B0F5E4()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1C1B0F5F0()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1C1B0F5FC()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1C1B0F608()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1C1B0F614()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1C1B0F620()
{
  return MEMORY[0x1E0DEF7D8]();
}

uint64_t sub_1C1B0F62C()
{
  return MEMORY[0x1E0DEF7E0]();
}

uint64_t sub_1C1B0F638()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1C1B0F644()
{
  return MEMORY[0x1E0DEF860]();
}

uint64_t sub_1C1B0F650()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1C1B0F65C()
{
  return MEMORY[0x1E0DEF880]();
}

uint64_t sub_1C1B0F668()
{
  return MEMORY[0x1E0DEF8A0]();
}

uint64_t sub_1C1B0F674()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1C1B0F680()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1C1B0F68C()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1C1B0F698()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1C1B0F6A4()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1C1B0F6B0()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1C1B0F6BC()
{
  return MEMORY[0x1E0D13DB0]();
}

uint64_t sub_1C1B0F6C8()
{
  return MEMORY[0x1E0CB1EB0]();
}

uint64_t sub_1C1B0F6D4()
{
  return MEMORY[0x1E0CB1ED0]();
}

uint64_t sub_1C1B0F6E0()
{
  return MEMORY[0x1E0DC0810]();
}

uint64_t sub_1C1B0F6EC()
{
  return MEMORY[0x1E0D13DB8]();
}

uint64_t sub_1C1B0F6F8()
{
  return MEMORY[0x1E0DC0818]();
}

uint64_t sub_1C1B0F704()
{
  return MEMORY[0x1E0D0FE28]();
}

uint64_t sub_1C1B0F710()
{
  return MEMORY[0x1E0D0FE50]();
}

uint64_t sub_1C1B0F71C()
{
  return MEMORY[0x1E0CB1F28]();
}

uint64_t sub_1C1B0F728()
{
  return MEMORY[0x1E0CB1F48]();
}

uint64_t sub_1C1B0F734()
{
  return MEMORY[0x1E0DC0828]();
}

uint64_t sub_1C1B0F740()
{
  return MEMORY[0x1E0D44020]();
}

uint64_t sub_1C1B0F74C()
{
  return MEMORY[0x1E0D0FE88]();
}

uint64_t sub_1C1B0F758()
{
  return MEMORY[0x1E0DC0830]();
}

uint64_t sub_1C1B0F764()
{
  return MEMORY[0x1E0D13DC8]();
}

uint64_t sub_1C1B0F770()
{
  return MEMORY[0x1E0CB1FF8]();
}

uint64_t sub_1C1B0F77C()
{
  return MEMORY[0x1E0CB2018]();
}

uint64_t sub_1C1B0F788()
{
  return MEMORY[0x1E0CB2048]();
}

uint64_t sub_1C1B0F794()
{
  return MEMORY[0x1E0CB20C0]();
}

uint64_t sub_1C1B0F7A0()
{
  return MEMORY[0x1E0CB20D8]();
}

uint64_t sub_1C1B0F7AC()
{
  return MEMORY[0x1E0CB20E8]();
}

uint64_t sub_1C1B0F7B8()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1C1B0F7C4()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1C1B0F7D0()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1C1B0F7DC()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1C1B0F7E8()
{
  return MEMORY[0x1E0CB2138]();
}

uint64_t sub_1C1B0F7F4()
{
  return MEMORY[0x1E0CF9640]();
}

uint64_t sub_1C1B0F800()
{
  return MEMORY[0x1E0CB2210]();
}

uint64_t sub_1C1B0F80C()
{
  return MEMORY[0x1E0CB2228]();
}

uint64_t sub_1C1B0F818()
{
  return MEMORY[0x1E0CB2250]();
}

uint64_t sub_1C1B0F824()
{
  return MEMORY[0x1E0CB2280]();
}

uint64_t sub_1C1B0F830()
{
  return MEMORY[0x1E0DEB938]();
}

uint64_t sub_1C1B0F83C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1C1B0F848()
{
  return MEMORY[0x1E0DEB958]();
}

uint64_t sub_1C1B0F854()
{
  return MEMORY[0x1E0DEBA88]();
}

uint64_t sub_1C1B0F860()
{
  return MEMORY[0x1E0DEBAD8]();
}

uint64_t sub_1C1B0F86C()
{
  return MEMORY[0x1E0DEBB50]();
}

uint64_t sub_1C1B0F878()
{
  return MEMORY[0x1E0DEBB58]();
}

uint64_t sub_1C1B0F884()
{
  return MEMORY[0x1E0DEBB60]();
}

uint64_t sub_1C1B0F890()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1C1B0F89C()
{
  return MEMORY[0x1E0CB23D0]();
}

uint64_t sub_1C1B0F8A8()
{
  return MEMORY[0x1E0CB23D8]();
}

uint64_t sub_1C1B0F8B4()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1C1B0F8C0()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1C1B0F8CC()
{
  return MEMORY[0x1E0CB2408]();
}

uint64_t sub_1C1B0F8D8()
{
  return MEMORY[0x1E0CB2438]();
}

uint64_t sub_1C1B0F8E4()
{
  return MEMORY[0x1E0CB2488]();
}

uint64_t sub_1C1B0F8F0()
{
  return MEMORY[0x1E0CB24A0]();
}

uint64_t sub_1C1B0F8FC()
{
  return MEMORY[0x1E0CB24D0]();
}

uint64_t sub_1C1B0F908()
{
  return MEMORY[0x1E0CB24E0]();
}

uint64_t sub_1C1B0F914()
{
  return MEMORY[0x1E0CB24F8]();
}

uint64_t sub_1C1B0F920()
{
  return MEMORY[0x1E0CB2508]();
}

uint64_t sub_1C1B0F92C()
{
  return MEMORY[0x1E0CB2548]();
}

uint64_t sub_1C1B0F938()
{
  return MEMORY[0x1E0CB2560]();
}

uint64_t sub_1C1B0F944()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1C1B0F950()
{
  return MEMORY[0x1E0DEBFC0]();
}

uint64_t sub_1C1B0F95C()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1C1B0F968()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1C1B0F974()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_1C1B0F980()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1C1B0F98C()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1C1B0F998()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1C1B0F9A4()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1C1B0F9B0()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1C1B0F9BC()
{
  return MEMORY[0x1E0DEC130]();
}

uint64_t sub_1C1B0F9C8()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1C1B0F9D4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1C1B0F9E0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1C1B0F9EC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1C1B0F9F8()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1C1B0FA04()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1C1B0FA10()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1C1B0FA1C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1C1B0FA28()
{
  return MEMORY[0x1E0DEC2C0]();
}

uint64_t sub_1C1B0FA34()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_1C1B0FA40()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1C1B0FA4C()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1C1B0FA58()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1C1B0FA64()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1C1B0FA70()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1C1B0FA7C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1C1B0FA88()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1C1B0FA94()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1C1B0FAA0()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1C1B0FAAC()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1C1B0FAB8()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1C1B0FAC4()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1C1B0FAD0()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1C1B0FADC()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1C1B0FAE8()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1C1B0FAF4()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1C1B0FB00()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_1C1B0FB0C()
{
  return MEMORY[0x1E0DECAF8]();
}

uint64_t sub_1C1B0FB18()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_1C1B0FB24()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1C1B0FB30()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1C1B0FB3C()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1C1B0FB48()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1C1B0FB54()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1C1B0FB60()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1C1B0FB6C()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1C1B0FB78()
{
  return MEMORY[0x1E0DECEF8]();
}

uint64_t sub_1C1B0FB84()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1C1B0FB90()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1C1B0FB9C()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1C1B0FBA8()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1C1B0FBB4()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1C1B0FBC0()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1C1B0FBCC()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1C1B0FBD8()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1C1B0FBE4()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1C1B0FBF0()
{
  return MEMORY[0x1E0DED1B8]();
}

uint64_t sub_1C1B0FBFC()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1C1B0FC08()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1C1B0FC14()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1C1B0FC20()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1C1B0FC2C()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1C1B0FC38()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_1C1B0FC44()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1C1B0FC50()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1C1B0FC5C()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1C1B0FC68()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1C1B0FC74()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1C1B0FC80()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1C1B0FC8C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1C1B0FC98()
{
  return MEMORY[0x1E0CB2618]();
}

uint64_t sub_1C1B0FCA4()
{
  return MEMORY[0x1E0CB2630]();
}

uint64_t sub_1C1B0FCB0()
{
  return MEMORY[0x1E0CB2638]();
}

uint64_t sub_1C1B0FCBC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1C1B0FCC8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1C1B0FCD4()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1C1B0FCE0()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1C1B0FCEC()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1C1B0FCF8()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1C1B0FD04()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1C1B0FD10()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_1C1B0FD1C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1C1B0FD28()
{
  return MEMORY[0x1E0DEDF48]();
}

uint64_t sub_1C1B0FD34()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1C1B0FD40()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1C1B0FD4C()
{
  return MEMORY[0x1E0DEE758]();
}

uint64_t sub_1C1B0FD58()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1C1B0FD64()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1C1B0FD70()
{
  return MEMORY[0x1E0DEE978]();
}

int AAArchiveStreamClose(AAArchiveStream s)
{
  return MEMORY[0x1E0DDE370](s);
}

ssize_t AAArchiveStreamProcess(AAArchiveStream istream, AAArchiveStream ostream, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return MEMORY[0x1E0DDE378](istream, ostream, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

int AAArchiveStreamWritePathList(AAArchiveStream s, AAPathList path_list, AAFieldKeySet key_set, const char *dir, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return MEMORY[0x1E0DDE3A0](s, path_list, key_set, dir, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

int AAByteStreamClose(AAByteStream s)
{
  return MEMORY[0x1E0DDE3B0](s);
}

AAArchiveStream AADecodeArchiveInputStreamOpen(AAByteStream stream, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return (AAArchiveStream)MEMORY[0x1E0DDE410](stream, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

AAArchiveStream AAEncodeArchiveOutputStreamOpen(AAByteStream stream, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return (AAArchiveStream)MEMORY[0x1E0DDE420](stream, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

AAArchiveStream AAExtractArchiveOutputStreamOpen(const char *dir, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return (AAArchiveStream)MEMORY[0x1E0DDE428](dir, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

AAFieldKeySet AAFieldKeySetCreateWithString(const char *s)
{
  return (AAFieldKeySet)MEMORY[0x1E0DDE430](s);
}

void AAFieldKeySetDestroy(AAFieldKeySet key_set)
{
  MEMORY[0x1E0DDE438](key_set);
}

AAByteStream AAFileStreamOpenWithPath(const char *path, int open_flags, mode_t open_mode)
{
  return (AAByteStream)MEMORY[0x1E0DDE450](path, *(_QWORD *)&open_flags, open_mode);
}

uint64_t AAMemoryInputStreamOpen()
{
  return MEMORY[0x1E0DDE4A8]();
}

AAPathList AAPathListCreateWithDirectoryContents(const char *dir, const char *path, void *msg_data, AAEntryMessageProc msg_proc, AAFlagSet flags, int n_threads)
{
  return (AAPathList)MEMORY[0x1E0DDE4B0](dir, path, msg_data, msg_proc, flags, *(_QWORD *)&n_threads);
}

void AAPathListDestroy(AAPathList path_list)
{
  MEMORY[0x1E0DDE4B8](path_list);
}

AEAContext AEAContextCreateWithEncryptedStream(AAByteStream encrypted_stream)
{
  return (AEAContext)MEMORY[0x1E0DDE508](encrypted_stream);
}

AEAContext AEAContextCreateWithProfile(AEAProfile profile)
{
  return (AEAContext)MEMORY[0x1E0DDE510](*(_QWORD *)&profile);
}

void AEAContextDestroy(AEAContext context)
{
  MEMORY[0x1E0DDE518](context);
}

int AEAContextGetFieldBlob(AEAContext context, AEAContextField field, AEAContextFieldRepresentation representation, size_t buf_capacity, uint8_t *buf, size_t *buf_size)
{
  return MEMORY[0x1E0DDE520](context, *(_QWORD *)&field, *(_QWORD *)&representation, buf_capacity, buf, buf_size);
}

int AEAContextSetFieldBlob(AEAContext context, AEAContextField field, AEAContextFieldRepresentation representation, const uint8_t *buf, size_t buf_size)
{
  return MEMORY[0x1E0DDE528](context, *(_QWORD *)&field, *(_QWORD *)&representation, buf, buf_size);
}

int AEAContextSetFieldUInt(AEAContext context, AEAContextField field, uint64_t value)
{
  return MEMORY[0x1E0DDE530](context, *(_QWORD *)&field, value);
}

AAByteStream AEADecryptionInputStreamOpen(AAByteStream encrypted_stream, AEAContext context, AAFlagSet flags, int n_threads)
{
  return (AAByteStream)MEMORY[0x1E0DDE538](encrypted_stream, context, flags, *(_QWORD *)&n_threads);
}

AAByteStream AEAEncryptionOutputStreamOpen(AAByteStream encrypted_stream, AEAContext context, AAFlagSet flags, int n_threads)
{
  return (AAByteStream)MEMORY[0x1E0DDE548](encrypted_stream, context, flags, *(_QWORD *)&n_threads);
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

uint64_t BRGetCloudDocsRootURL()
{
  return MEMORY[0x1E0D10C78]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

unsigned __int8 *__cdecl CC_MD5(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80308](data, *(_QWORD *)&len, md);
}

uint64_t CFDictionaryGetInt64()
{
  return MEMORY[0x1E0D1A970]();
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1E0C98660](err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return (CFErrorDomain)MEMORY[0x1E0C98670](err);
}

CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98AB0](allocator, propertyList, mutabilityOption);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
  MEMORY[0x1E0C98C80](rl, mode, block);
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C90](rl, source, mode);
}

void CFRunLoopRun(void)
{
  MEMORY[0x1E0C98CA8]();
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C98CC8](allocator, order, context);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D00](rl);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

Boolean CFURLCanBeDecomposed(CFURLRef anURL)
{
  return MEMORY[0x1E0C992B0](anURL);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1E0C99420](allocator, filePath, pathStyle, isDirectory);
}

CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1E0C99448](allocator, URLString, baseURL);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x1E0CBC618](isrc);
}

CFStringRef CTFontCopyDisplayName(CTFontRef font)
{
  return (CFStringRef)MEMORY[0x1E0CA7988](font);
}

uint64_t FPCreateCrossDeviceItemIDForItemAtURL()
{
  return MEMORY[0x1E0CAA6F8]();
}

uint64_t FPExtendBookmarkForDocumentURL()
{
  return MEMORY[0x1E0CAA948]();
}

uint64_t IDSCopyIDForDevice()
{
  return MEMORY[0x1E0D33DE0]();
}

uint64_t INDisplayableOrLaunchableBundleIdForBundleIdFromUserActivity()
{
  return MEMORY[0x1E0CBD3E8]();
}

uint64_t INExtractAppInfoFromSiriLaunchId()
{
  return MEMORY[0x1E0CBD408]();
}

uint64_t INIntentCreate()
{
  return MEMORY[0x1E0CBD438]();
}

uint64_t INIntentDefinitionNamespacedName()
{
  return MEMORY[0x1E0CBD448]();
}

uint64_t INIntentSchemaGetIntentDescriptionWithFacadeClass()
{
  return MEMORY[0x1E0CBD470]();
}

uint64_t INIntentSchemaGetIntentDescriptionWithType()
{
  return MEMORY[0x1E0CBD478]();
}

uint64_t INIntentWithTypedIntent()
{
  return MEMORY[0x1E0CBD4A0]();
}

uint64_t INObjectWithTypedObject()
{
  return MEMORY[0x1E0CBD540]();
}

uint64_t INSchemaWithTypeName()
{
  return MEMORY[0x1E0CBD628]();
}

uint64_t INSyncedSchemaWithBundleID()
{
  return MEMORY[0x1E0CBD698]();
}

uint64_t INTypedIntentResponseWithIntentResponse()
{
  return MEMORY[0x1E0CBD6C0]();
}

uint64_t INTypedIntentWithIntent()
{
  return MEMORY[0x1E0CBD6C8]();
}

uint64_t INUserActivityDeserializeFromData()
{
  return MEMORY[0x1E0CBD6E0]();
}

uint64_t INUserActivitySerializeToData()
{
  return MEMORY[0x1E0CBD6E8]();
}

uint64_t LNPerformActionErrorCodeAsString()
{
  return MEMORY[0x1E0D440A0]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1E0D4E4D0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSZone *NSDefaultMallocZone(void)
{
  return (NSZone *)MEMORY[0x1E0CB2960]();
}

uint64_t NSErrorToOSStatus()
{
  return MEMORY[0x1E0D1B1F0]();
}

const char *__cdecl NSGetSizeAndAlignment(const char *typePtr, NSUInteger *sizep, NSUInteger *alignp)
{
  return (const char *)MEMORY[0x1E0C99758](typePtr, sizep, alignp);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

NSString *NSUserName(void)
{
  return (NSString *)MEMORY[0x1E0CB3428]();
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x1E0D1B4C0]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x1E0D1B4D0]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C10]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C28]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C58]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x1E0D82CB8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CF0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

uint64_t SecCMSVerifyCopyDataAndAttributes()
{
  return MEMORY[0x1E0CD5F28]();
}

OSStatus SecCertificateCopyCommonName(SecCertificateRef certificate, CFStringRef *commonName)
{
  return MEMORY[0x1E0CD5F48](certificate, commonName);
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x1E0CD5F60](certificate);
}

uint64_t SecCertificateCopyExtensionValue()
{
  return MEMORY[0x1E0CD5F78]();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return (SecKeyRef)MEMORY[0x1E0CD5F98](certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x1E0CD6010](allocator, data);
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return (CFStringRef)MEMORY[0x1E0CD6218](*(_QWORD *)&status, reserved);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD62F8](key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x1E0CD6318](key);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x1E0CD6388](parameters, error);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD6390](key, algorithm, dataToSign, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x1E0CD63A0](keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x1E0CD6418](key, algorithm, signedData, signature, error);
}

uint64_t SecPolicyCreateAppleIDAuthorityPolicy()
{
  return MEMORY[0x1E0CD6480]();
}

uint64_t SecPolicyCreateAppleIDValidationShortcutSigningPolicy()
{
  return MEMORY[0x1E0CD64A0]();
}

SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
{
  return (SecPolicyRef)MEMORY[0x1E0CD6510](revocationFlags);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x1E0CD6698](certificates, policies, trust);
}

OSStatus SecTrustEvaluateAsync(SecTrustRef trust, dispatch_queue_t queue, SecTrustCallback result)
{
  return MEMORY[0x1E0CD66B0](trust, queue, result);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x1E0CD66C8](trust, error);
}

uint64_t VCIsDeviceLocked()
{
  return MEMORY[0x1E0DC7FF8]();
}

uint64_t VCIsInternalBuild()
{
  return MEMORY[0x1E0DC8000]();
}

uint64_t VCIsShortcutsAppBundleIdentifier()
{
  return MEMORY[0x1E0DC8008]();
}

uint64_t WFAbbreviatedNameFromText()
{
  return MEMORY[0x1E0DC8060]();
}

uint64_t WFAllPossibleContentOperators()
{
  return MEMORY[0x1E0D140E8]();
}

uint64_t WFAppTransportSecuredURL()
{
  return MEMORY[0x1E0D140F8]();
}

uint64_t WFAutomationDaemonXPCInterface()
{
  return MEMORY[0x1E0DC8068]();
}

uint64_t WFCLPlacemarkFromSerializedPlacemark()
{
  return MEMORY[0x1E0D14100]();
}

uint64_t WFCNContactIsAuthorizedToAccessContact()
{
  return MEMORY[0x1E0D14108]();
}

uint64_t WFCallRegistrationMethodsIfNeeded()
{
  return MEMORY[0x1E0D14110]();
}

uint64_t WFClearWorkflowEventStore()
{
  return MEMORY[0x1E0D14158]();
}

uint64_t WFContentPropertyGetPossibleValuesSynchronouslyWithSemaphore()
{
  return MEMORY[0x1E0D141C0]();
}

uint64_t WFContextualActionIconDisplayStyleForLNImageDisplayStyle()
{
  return MEMORY[0x1E0DC8078]();
}

uint64_t WFContextualActionSurfaceSupportsOutput()
{
  return MEMORY[0x1E0DC8080]();
}

uint64_t WFDefaultLocalizedLabelForContentOperator()
{
  return MEMORY[0x1E0D141F0]();
}

uint64_t WFDescriptionForDatabaseObjectType()
{
  return MEMORY[0x1E0DC80B0]();
}

uint64_t WFDeserializeNSMeasurement()
{
  return MEMORY[0x1E0D141F8]();
}

uint64_t WFEncodableError()
{
  return MEMORY[0x1E0DC8100]();
}

uint64_t WFExtractArchiveFile()
{
  return MEMORY[0x1E0D14208]();
}

uint64_t WFGetWorkflowEventStore()
{
  return MEMORY[0x1E0D14218]();
}

uint64_t WFHumanReadableNameForWorkflowType()
{
  return MEMORY[0x1E0DC8108]();
}

uint64_t WFImageSizeFromFile()
{
  return MEMORY[0x1E0D14260]();
}

uint64_t WFImageSizeFromImageSource()
{
  return MEMORY[0x1E0D14268]();
}

uint64_t WFInstalledAppsEnumerator()
{
  return MEMORY[0x1E0D14270]();
}

uint64_t WFJavaScriptCoreRepresentationFromPropertyList()
{
  return MEMORY[0x1E0D14288]();
}

uint64_t WFLocalizedAllShortcutsString()
{
  return MEMORY[0x1E0DC8110]();
}

uint64_t WFOutOfProcessWorkflowControllerHostXPCInterface()
{
  return MEMORY[0x1E0DC8278]();
}

uint64_t WFOutOfProcessWorkflowControllerVendorXPCInterface()
{
  return MEMORY[0x1E0DC8280]();
}

uint64_t WFRegisterClassesFromClassVendingMethodsIfNeeded()
{
  return MEMORY[0x1E0D142C0]();
}

uint64_t WFResizedImageFromImageSource()
{
  return MEMORY[0x1E0D142C8]();
}

uint64_t WFRunSourceIsExemptFromOutputApproval()
{
  return MEMORY[0x1E0DC8288]();
}

uint64_t WFRunSourceIsSpotlight()
{
  return MEMORY[0x1E0DC8290]();
}

uint64_t WFSerializeNSMeasurement()
{
  return MEMORY[0x1E0D142D0]();
}

uint64_t WFSerializedPlacemarkFromCLPlacemark()
{
  return MEMORY[0x1E0D142E0]();
}

uint64_t WFStaticContextualActionDefinitionsForSurface()
{
  return MEMORY[0x1E0DC82F0]();
}

uint64_t WFSystemImageNameForOutlineGlyphCharacter()
{
  return MEMORY[0x1E0DC8310]();
}

uint64_t WFTransformedImageFromImage()
{
  return MEMORY[0x1E0D142F8]();
}

uint64_t WFURLIsUniversalLink()
{
  return MEMORY[0x1E0D14300]();
}

uint64_t WFURLIsWebPage()
{
  return MEMORY[0x1E0D14308]();
}

uint64_t WFUUIDv4FromInteger()
{
  return MEMORY[0x1E0DC83D8]();
}

uint64_t WFWorkflowPaletteColorForLNShortcutTileColor()
{
  return MEMORY[0x1E0DC8418]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFBundleCopyBundleURLForExecutableURL()
{
  return MEMORY[0x1E0C99F70]();
}

uint64_t _CFLocaleCopyPreferred()
{
  return MEMORY[0x1E0C9A210]();
}

uint64_t _CFURLAttachSecurityScopeToFileURL()
{
  return MEMORY[0x1E0C9A5B0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1E0DE4388](this);
}

void operator delete(void *__p)
{
  off_1E7AC57C0(__p);
}

uint64_t operator delete()
{
  return off_1E7AC57C8();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1E7AC57D0(__sz);
}

uint64_t operator new()
{
  return off_1E7AC57D8();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1E0DE5068](thrown_size);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x1E0DE50D8](a1, lptinfo, a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

__darwin_ct_rune_t __toupper(__darwin_ct_rune_t a1)
{
  return MEMORY[0x1E0C80C78](*(_QWORD *)&a1);
}

uint64_t _dyld_register_for_bulk_image_loads()
{
  return MEMORY[0x1E0C80F50]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _sqlite3_db_copy_compact()
{
  return MEMORY[0x1E0DE8528]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

BOOL class_addIvar(Class cls, const char *name, size_t size, uint8_t alignment, const char *types)
{
  return MEMORY[0x1E0DE7A48](cls, name, size, alignment, types);
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1E0DE7A50](cls, name, imp, types);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return (Method *)MEMORY[0x1E0DE7A78](cls, outCount);
}

objc_property_t *__cdecl class_copyPropertyList(Class cls, unsigned int *outCount)
{
  return (objc_property_t *)MEMORY[0x1E0DE7A80](cls, outCount);
}

Method class_getClassMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7A98](cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7AA8](cls, name);
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return (Ivar)MEMORY[0x1E0DE7AB8](cls, name);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x1E0DE7AC0](cls, name);
}

objc_property_t class_getProperty(Class cls, const char *name)
{
  return (objc_property_t)MEMORY[0x1E0DE7AD0](cls, name);
}

BOOL class_respondsToSelector(Class cls, SEL sel)
{
  return MEMORY[0x1E0DE7AF8](cls, sel);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

uint64_t container_create_or_lookup_path_for_current_user()
{
  return MEMORY[0x1E0C82818]();
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_apply(size_t iterations, dispatch_queue_t queue, void *block)
{
  MEMORY[0x1E0C82BD8](iterations, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return (dispatch_data_t)MEMORY[0x1E0C82CB0](buffer, size, queue, destructor);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x1E0C82E58](queue);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
  MEMORY[0x1E0C82E80](queue, key, context, destructor);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

int dladdr(const void *a1, Dl_info *a2)
{
  return MEMORY[0x1E0C83028](a1, a2);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

int flock(int a1, int a2)
{
  return MEMORY[0x1E0C83400](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C83478](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

uint64_t getWFActionsLogObject()
{
  return MEMORY[0x1E0DC8520]();
}

uint64_t getWFAppIntentsLogObject()
{
  return MEMORY[0x1E0DC8528]();
}

uint64_t getWFCloudKitSyncLogObject()
{
  return MEMORY[0x1E0DC8530]();
}

uint64_t getWFCoherenceLogObject()
{
  return MEMORY[0x1E0DC8538]();
}

uint64_t getWFContentGraphLogObject()
{
  return MEMORY[0x1E0DC8540]();
}

uint64_t getWFContextualActionsLogObject()
{
  return MEMORY[0x1E0DC8548]();
}

uint64_t getWFDatabaseLogObject()
{
  return MEMORY[0x1E0DC8550]();
}

uint64_t getWFDialogLogObject()
{
  return MEMORY[0x1E0DC8558]();
}

uint64_t getWFEventTrackerLogObject()
{
  return MEMORY[0x1E0DC8560]();
}

uint64_t getWFFilesLogObject()
{
  return MEMORY[0x1E0DC8568]();
}

uint64_t getWFGalleryLogObject()
{
  return MEMORY[0x1E0DC8570]();
}

uint64_t getWFGeneralLogObject()
{
  return MEMORY[0x1E0DC8578]();
}

uint64_t getWFHomeLogObject()
{
  return MEMORY[0x1E0DC8580]();
}

uint64_t getWFHomescreenLogObject()
{
  return MEMORY[0x1E0DC8588]();
}

uint64_t getWFIntentExecutionLogObject()
{
  return MEMORY[0x1E0DC8590]();
}

uint64_t getWFInterchangeLogObject()
{
  return MEMORY[0x1E0DC8598]();
}

uint64_t getWFPeaceMigrationLogObject()
{
  return MEMORY[0x1E0DC85A0]();
}

uint64_t getWFRemoteExecutionLogObject()
{
  return MEMORY[0x1E0DC85A8]();
}

uint64_t getWFRunningLifecycleLogObject()
{
  return MEMORY[0x1E0DC85B0]();
}

uint64_t getWFSecurityLogObject()
{
  return MEMORY[0x1E0DC85B8]();
}

uint64_t getWFSessionKitLogObject()
{
  return MEMORY[0x1E0DC85C0]();
}

uint64_t getWFSpotlightSyncLogObject()
{
  return MEMORY[0x1E0DC85C8]();
}

uint64_t getWFStateMachineLogObject()
{
  return MEMORY[0x1E0DC85D8]();
}

uint64_t getWFTestHarnessLogObject()
{
  return MEMORY[0x1E0DC85E0]();
}

uint64_t getWFTestingLifecycleLogObject()
{
  return MEMORY[0x1E0DC85E8]();
}

uint64_t getWFTipsLogObject()
{
  return MEMORY[0x1E0DC85F0]();
}

uint64_t getWFTriggerNotificationsLogObject()
{
  return MEMORY[0x1E0DC8600]();
}

uint64_t getWFTriggersLogObject()
{
  return MEMORY[0x1E0DC8608]();
}

uint64_t getWFWalrusLogObject()
{
  return MEMORY[0x1E0DC8610]();
}

uint64_t getWFWatchSyncLogObject()
{
  return MEMORY[0x1E0DC8618]();
}

uint64_t getWFWidgetConfigurationLogObject()
{
  return MEMORY[0x1E0DC8620]();
}

uint64_t getWFWorkflowExecutionLogObject()
{
  return MEMORY[0x1E0DC8630]();
}

uint64_t getWFWorkflowMigrationLogObject()
{
  return MEMORY[0x1E0DC8638]();
}

uint64_t getWFXPCRunnerLogObject()
{
  return MEMORY[0x1E0DC8640]();
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1E0DE7B10](block);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BC0](__x);
  return result;
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

IMP method_getImplementation(Method m)
{
  return (IMP)MEMORY[0x1E0DE7B68](m);
}

SEL method_getName(Method m)
{
  return (SEL)MEMORY[0x1E0DE7B70](m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return (const char *)MEMORY[0x1E0DE7B88](m);
}

IMP method_setImplementation(Method m, IMP imp)
{
  return (IMP)MEMORY[0x1E0DE7B98](m, imp);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

nw_advertise_descriptor_t nw_advertise_descriptor_create_application_service(const char *application_service_name)
{
  return (nw_advertise_descriptor_t)MEMORY[0x1E0CCEE70](application_service_name);
}

nw_browse_descriptor_t nw_browse_descriptor_create_application_service(const char *application_service_name)
{
  return (nw_browse_descriptor_t)MEMORY[0x1E0CCEF00](application_service_name);
}

uint64_t nw_browse_descriptor_set_device_types()
{
  return MEMORY[0x1E0CCEF10]();
}

nw_endpoint_t nw_browse_result_copy_endpoint(nw_browse_result_t result)
{
  return (nw_endpoint_t)MEMORY[0x1E0CCEF20](result);
}

void nw_browser_cancel(nw_browser_t browser)
{
  MEMORY[0x1E0CCEF38](browser);
}

nw_browser_t nw_browser_create(nw_browse_descriptor_t descriptor, nw_parameters_t parameters)
{
  return (nw_browser_t)MEMORY[0x1E0CCEF40](descriptor, parameters);
}

void nw_browser_set_browse_results_changed_handler(nw_browser_t browser, nw_browser_browse_results_changed_handler_t handler)
{
  MEMORY[0x1E0CCEF48](browser, handler);
}

void nw_browser_set_queue(nw_browser_t browser, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCEF50](browser, queue);
}

void nw_browser_set_state_changed_handler(nw_browser_t browser, nw_browser_state_changed_handler_t state_changed_handler)
{
  MEMORY[0x1E0CCEF58](browser, state_changed_handler);
}

void nw_browser_start(nw_browser_t browser)
{
  MEMORY[0x1E0CCEF60](browser);
}

void nw_connection_cancel(nw_connection_t connection)
{
  MEMORY[0x1E0CCEFB8](connection);
}

nw_connection_t nw_connection_create(nw_endpoint_t endpoint, nw_parameters_t parameters)
{
  return (nw_connection_t)MEMORY[0x1E0CCF030](endpoint, parameters);
}

void nw_connection_receive_message(nw_connection_t connection, nw_connection_receive_completion_t completion)
{
  MEMORY[0x1E0CCF130](connection, completion);
}

void nw_connection_send(nw_connection_t connection, dispatch_data_t content, nw_content_context_t context, BOOL is_complete, nw_connection_send_completion_t completion)
{
  MEMORY[0x1E0CCF168](connection, content, context, is_complete, completion);
}

void nw_connection_set_queue(nw_connection_t connection, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCF1B0](connection, queue);
}

void nw_connection_set_state_changed_handler(nw_connection_t connection, nw_connection_state_changed_handler_t handler)
{
  MEMORY[0x1E0CCF1C0](connection, handler);
}

void nw_connection_start(nw_connection_t connection)
{
  MEMORY[0x1E0CCF1D8](connection);
}

uint64_t nw_connection_state_to_string()
{
  return MEMORY[0x1E0CCF1E8]();
}

nw_content_context_t nw_content_context_create(const char *context_identifier)
{
  return (nw_content_context_t)MEMORY[0x1E0CCF220](context_identifier);
}

void nw_content_context_set_metadata_for_protocol(nw_content_context_t context, nw_protocol_metadata_t protocol_metadata)
{
  MEMORY[0x1E0CCF258](context, protocol_metadata);
}

uint64_t nw_endpoint_get_device_id()
{
  return MEMORY[0x1E0CCF408]();
}

nw_protocol_definition_t nw_framer_create_definition(const char *identifier, uint32_t flags, nw_framer_start_handler_t start_handler)
{
  return (nw_protocol_definition_t)MEMORY[0x1E0CCF5E8](identifier, *(_QWORD *)&flags, start_handler);
}

nw_protocol_options_t nw_framer_create_options(nw_protocol_definition_t framer_definition)
{
  return (nw_protocol_options_t)MEMORY[0x1E0CCF5F0](framer_definition);
}

BOOL nw_framer_deliver_input_no_copy(nw_framer_t framer, size_t input_length, nw_framer_message_t message, BOOL is_complete)
{
  return MEMORY[0x1E0CCF5F8](framer, input_length, message, is_complete);
}

nw_framer_message_t nw_framer_message_create(nw_framer_t framer)
{
  return (nw_framer_message_t)MEMORY[0x1E0CCF618](framer);
}

BOOL nw_framer_parse_input(nw_framer_t framer, size_t minimum_incomplete_length, size_t maximum_length, uint8_t *temp_buffer, nw_framer_parse_completion_t parse)
{
  return MEMORY[0x1E0CCF628](framer, minimum_incomplete_length, maximum_length, temp_buffer, parse);
}

nw_framer_message_t nw_framer_protocol_create_message(nw_protocol_definition_t definition)
{
  return (nw_framer_message_t)MEMORY[0x1E0CCF640](definition);
}

void nw_framer_set_input_handler(nw_framer_t framer, nw_framer_input_handler_t input_handler)
{
  MEMORY[0x1E0CCF650](framer, input_handler);
}

void nw_framer_set_output_handler(nw_framer_t framer, nw_framer_output_handler_t output_handler)
{
  MEMORY[0x1E0CCF658](framer, output_handler);
}

void nw_framer_write_output(nw_framer_t framer, const uint8_t *output_buffer, size_t output_length)
{
  MEMORY[0x1E0CCF670](framer, output_buffer, output_length);
}

BOOL nw_framer_write_output_no_copy(nw_framer_t framer, size_t output_length)
{
  return MEMORY[0x1E0CCF678](framer, output_length);
}

void nw_listener_cancel(nw_listener_t listener)
{
  MEMORY[0x1E0CCF7C8](listener);
}

nw_listener_t nw_listener_create(nw_parameters_t parameters)
{
  return (nw_listener_t)MEMORY[0x1E0CCF7D8](parameters);
}

void nw_listener_set_advertise_descriptor(nw_listener_t listener, nw_advertise_descriptor_t advertise_descriptor)
{
  MEMORY[0x1E0CCF7F8](listener, advertise_descriptor);
}

uint64_t nw_listener_set_event_handler()
{
  return MEMORY[0x1E0CCF800]();
}

void nw_listener_set_new_connection_handler(nw_listener_t listener, nw_listener_new_connection_handler_t handler)
{
  MEMORY[0x1E0CCF810](listener, handler);
}

void nw_listener_set_queue(nw_listener_t listener, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCF820](listener, queue);
}

void nw_listener_start(nw_listener_t listener)
{
  MEMORY[0x1E0CCF830](listener);
}

nw_protocol_stack_t nw_parameters_copy_default_protocol_stack(nw_parameters_t parameters)
{
  return (nw_protocol_stack_t)MEMORY[0x1E0CCF8C8](parameters);
}

nw_parameters_t nw_parameters_create_application_service(void)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF940]();
}

uint64_t nw_parameters_set_required_netagent_classes()
{
  return MEMORY[0x1E0CCFC00]();
}

void nw_protocol_stack_prepend_application_protocol(nw_protocol_stack_t stack, nw_protocol_options_t protocol)
{
  MEMORY[0x1E0CCFFF8](stack, protocol);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return (Class)MEMORY[0x1E0DE7BC0](superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_registerClassPair(Class cls)
{
  MEMORY[0x1E0DE7D68](cls);
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1E0DE7FF8](a1);
}

id object_getIvar(id a1, Ivar a2)
{
  return (id)MEMORY[0x1E0DE8018](a1, a2);
}

BOOL object_isClass(id obj)
{
  return MEMORY[0x1E0DE8028](obj);
}

void object_setIvar(id obj, Ivar ivar, id value)
{
  MEMORY[0x1E0DE8048](obj, ivar, value);
}

void object_setIvarWithStrongDefault(id obj, Ivar ivar, id value)
{
  MEMORY[0x1E0DE8050](obj, ivar, value);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

uint64_t os_transaction_needs_more_time()
{
  return MEMORY[0x1E0C84980]();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

objc_property_attribute_t *__cdecl property_copyAttributeList(objc_property_t property, unsigned int *outCount)
{
  return (objc_property_attribute_t *)MEMORY[0x1E0DE8058](property, outCount);
}

const char *__cdecl property_getAttributes(objc_property_t property)
{
  return (const char *)MEMORY[0x1E0DE8068](property);
}

const char *__cdecl property_getName(objc_property_t property)
{
  return (const char *)MEMORY[0x1E0DE8070](property);
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

SEL sel_registerName(const char *str)
{
  return (SEL)MEMORY[0x1E0DE80E8](str);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x1E0DE8598](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1E0DE85A0](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85D8](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8658](a1);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x1E0DE8688](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8690](a1, *(_QWORD *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1E0DE86B8](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x1E0DE8790](*(_QWORD *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x1E0DE8798](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

void sqlite3_free(void *a1)
{
  MEMORY[0x1E0DE87D0](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1E0DE8870](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE88B0](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

int sqlite3_wal_checkpoint_v2(sqlite3 *db, const char *zDb, int eMode, int *pnLog, int *pnCkpt)
{
  return MEMORY[0x1E0DE8A98](db, zDb, *(_QWORD *)&eMode, pnLog, pnCkpt);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1E0C85518](__s, *(_QWORD *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1E0C855A8](__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1E0C855B0](__dst, __src, __n);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85698](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x1E0DEEB48]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1E0DEEB90]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastMetatypeUnconditional()
{
  return MEMORY[0x1E0DEEBA0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_dynamicCastTypeToObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBC8]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1E0DEEBD0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x1E0DEECD0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x1E0C85798](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

uint64_t voucher_adopt()
{
  return MEMORY[0x1E0C85B10]();
}

uint64_t voucher_copy()
{
  return MEMORY[0x1E0C85B18]();
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
  MEMORY[0x1E0C85ED0](xarray, index, string);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return MEMORY[0x1E0C862F8]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x1E0C866E8](stream, targetq, handler);
}

