id getMediaServiceConfigurationClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ED379E90;
  v7 = qword_1ED379E90;
  if (!qword_1ED379E90)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMediaServiceConfigurationClass_block_invoke;
    v3[3] = &unk_1EA738A48;
    v3[4] = &v4;
    __getMediaServiceConfigurationClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1DD352054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1DD352084()
{
  return HMCharacteristic.hasReadError.getter();
}

uint64_t HMCharacteristic.hasReadError.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  id v13;
  id v14;
  id v15;

  if (!objc_msgSend((id)objc_opt_self(), sel_synchronizesHomeDataModel))
    return 2;
  v1 = objc_msgSend(v0, sel_service);
  if (!v1)
    return 2;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_accessory);

  if (!v3)
    return 2;
  v4 = objc_msgSend(v3, sel_home);

  if (!v4)
    return 2;
  v5 = objc_msgSend(v4, sel_hf_characteristicValueManagerIfCreated);

  if (!v5)
    return 2;
  if (objc_msgSend(v5, sel_cachedReadErrorForCharacteristic_, v0))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
    sub_1DD352AB0(0, &qword_1F03E4E68);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = objc_msgSend(v15, sel_domain);
      v7 = sub_1DD63E14C();
      v9 = v8;

      if (v7 == sub_1DD63E14C() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_14;
      }
      v12 = sub_1DD63E860();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_14:
        v13 = objc_msgSend(v15, sel_code);

        if (v13 == (id)103)
        {

          return 0;
        }
        goto LABEL_17;
      }

    }
  }
LABEL_17:
  v14 = objc_msgSend(v5, sel_cachedReadErrorForCharacteristic_, v0);

  if (v14)
  return v14 != 0;
}

uint64_t sub_1DD352364()
{
  return HMCharacteristic.hasWriteInProgress.getter();
}

uint64_t sub_1DD352384()
{
  return HMCharacteristic.hasValidRead.getter();
}

uint64_t sub_1DD3523C8()
{
  return HMCharacteristic.hasReadInProgress.getter();
}

uint64_t HMCharacteristic.hasValidRead.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  char v8;

  if (!objc_msgSend((id)objc_opt_self(), sel_synchronizesHomeDataModel))
    return 2;
  v1 = objc_msgSend(v0, sel_service);
  if (!v1)
    return 2;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_accessory);

  if (!v3)
    return 2;
  v4 = objc_msgSend(v3, sel_home);

  if (!v4)
    return 2;
  v5 = objc_msgSend(v4, sel_hf_characteristicValueManagerIfCreated);

  if (!v5)
    return 2;
  v6 = objc_msgSend(v5, sel_allReadCharacteristics);
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  v7 = sub_1DD63E398();

  v8 = sub_1DD352AE8(v0, v7, (unint64_t *)&qword_1ED378380);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t HMCharacteristic.hasWriteInProgress.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;

  v1 = v0;
  if (!objc_msgSend((id)objc_opt_self(), sel_synchronizesHomeDataModel))
    return 2;
  v2 = objc_msgSend(v0, sel_service);
  if (!v2)
    return 2;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_accessory);

  if (!v4)
    return 2;
  v5 = objc_msgSend(v4, sel_home);

  if (!v5)
    return 2;
  v6 = objc_msgSend(v5, sel_hf_characteristicValueManagerIfCreated);

  if (!v6)
    return 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
  *(_QWORD *)(inited + 32) = v1;
  v16 = inited;
  sub_1DD63E20C();
  if (v16 >> 62)
  {
    v11 = v1;
    swift_bridgeObjectRetain();
    v12 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v12)
      goto LABEL_12;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v1;
  if (v8)
LABEL_8:
    sub_1DD3EBDA4(v16);
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  v13 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE6A0(MEMORY[0x1E0DEE9D8]);
  }
  sub_1DD352AB0(0, &qword_1ED378570);
  sub_1DD352A70(&qword_1ED378578, &qword_1ED378570);
  v14 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v6, sel_cachedLoadingStateForCharacteristics_actionSets_, v13, v14);

  return v15 == (id)2;
}

uint64_t HMCharacteristic.hasReadInProgress.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;

  v1 = v0;
  if (!objc_msgSend((id)objc_opt_self(), sel_synchronizesHomeDataModel))
    return 2;
  v2 = objc_msgSend(v0, sel_service);
  if (!v2)
    return 2;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_accessory);

  if (!v4)
    return 2;
  v5 = objc_msgSend(v4, sel_home);

  if (!v5)
    return 2;
  v6 = objc_msgSend(v5, sel_hf_characteristicValueManagerIfCreated);

  if (!v6)
    return 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
  *(_QWORD *)(inited + 32) = v1;
  v16 = inited;
  sub_1DD63E20C();
  if (v16 >> 62)
  {
    v11 = v1;
    swift_bridgeObjectRetain();
    v12 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v12)
      goto LABEL_12;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v1;
  if (v8)
LABEL_8:
    sub_1DD3EBDA4(v16);
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  v13 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE6A0(MEMORY[0x1E0DEE9D8]);
  }
  sub_1DD352AB0(0, &qword_1ED378570);
  sub_1DD352A70(&qword_1ED378578, &qword_1ED378570);
  v14 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v6, sel_cachedLoadingStateForCharacteristics_actionSets_, v13, v14);

  return v15 == (id)1;
}

uint64_t sub_1DD352A70(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1DD352AB0(255, a2);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DD352AB0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DD352AE8(void *a1, uint64_t a2, unint64_t *a3)
{
  id v4;
  char v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  id v17;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = a1;
    v5 = sub_1DD63E620();

    return v5 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v8 = sub_1DD63E4DC(),
        v9 = -1 << *(_BYTE *)(a2 + 32),
        v10 = v8 & ~v9,
        v11 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    v14 = 0;
    return v14 & 1;
  }
  sub_1DD352AB0(0, a3);
  v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v10);
  v13 = sub_1DD63E4E8();

  if ((v13 & 1) == 0)
  {
    v15 = ~v9;
    v16 = (v10 + 1) & v15;
    if (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      do
      {
        v17 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v16);
        v14 = sub_1DD63E4E8();

        if ((v14 & 1) != 0)
          break;
        v16 = (v16 + 1) & v15;
      }
      while (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  v14 = 1;
  return v14 & 1;
}

unint64_t sub_1DD352C44()
{
  unint64_t result;

  result = qword_1ED378380;
  if (!qword_1ED378380)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED378380);
  }
  return result;
}

uint64_t sub_1DD352C80(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  void *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;

  v2 = sub_1DD63DBA0();
  v72 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v71 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v74 = (char *)&v69 - v5;
  v6 = sub_1DD63D90C();
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5650);
  MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5658);
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DD63DBDC();
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5660);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DD63DA80();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x1E0C80A78](v17);
  v82 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DD63D7C8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v85 = (char *)&v69 - v27;
  v28 = *a1;
  v29 = objc_msgSend(v28, sel_service);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    goto LABEL_6;
  }
  v30 = v29;
  v70 = v2;
  v31 = objc_msgSend(v29, sel_uniqueIdentifier);

  sub_1DD63D7A4();
  v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v32(v21, v26, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_6:
    v38 = (uint64_t *)&unk_1F03E47E0;
LABEL_7:
    sub_1DD3540B8((uint64_t)v21, v38);
    v37 = 0;
    return v37 & 1;
  }
  v33 = (uint64_t)v85;
  v32(v85, v21, v22);
  v34 = objc_msgSend(v28, sel_characteristicType);
  sub_1DD63E14C();

  sub_1DD63DA74();
  v35 = v83;
  v36 = v84;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v16, 1, v84) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v82, v16, v36);
    sub_1DD63D8E8();
    v40 = (void *)sub_1DD63D8D0();
    v41 = v75;
    sub_1DD63D8A0();

    v42 = sub_1DD63D8F4();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v41, v77);
    if (*(_QWORD *)(v42 + 16) && (v43 = sub_1DD35333C((uint64_t)v85), (v44 & 1) != 0))
    {
      v45 = v43;
      v46 = *(_QWORD *)(v42 + 56);
      v47 = sub_1DD63D924();
      v48 = *(_QWORD *)(v47 - 8);
      v49 = v46 + *(_QWORD *)(v48 + 72) * v45;
      v50 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v78, v49, v47);
      v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56);
      v52 = (uint64_t)v50;
      v36 = v84;
      v51(v50, 0, 1, v47);
    }
    else
    {
      v47 = sub_1DD63D924();
      v52 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v78, 1, 1, v47);
    }
    swift_bridgeObjectRelease();
    sub_1DD63D924();
    v53 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v52, 1, v47) == 1)
    {
      sub_1DD3540B8(v52, &qword_1F03E5650);
      v21 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v79, 1, 1, v81);
      v54 = v82;
      v55 = (uint64_t)v85;
    }
    else
    {
      v56 = v79;
      v57 = v82;
      sub_1DD63D918();
      v58 = v47;
      v21 = v56;
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v58);
      v60 = v80;
      v59 = v81;
      v61 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v56, 1, v81) == 1;
      v54 = v57;
      v36 = v84;
      v55 = (uint64_t)v85;
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v73, v21, v59);
        sub_1DD63DBAC();
        v62 = *MEMORY[0x1E0D32878];
        v63 = sub_1DD63DB94();
        v64 = v71;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v71, v62, v63);
        v65 = v72;
        v66 = v70;
        (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v64, *MEMORY[0x1E0D32868], v70);
        v67 = v74;
        v37 = MEMORY[0x1DF0D975C](v74, v64);
        v68 = *(void (**)(char *, uint64_t))(v65 + 8);
        v68(v64, v66);
        v68(v67, v66);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v73, v81);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v55, v22);
        return v37 & 1;
      }
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v54, v36);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v55, v22);
    v38 = &qword_1F03E5658;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v33, v22);
  sub_1DD3540B8((uint64_t)v16, &qword_1F03E5660);
  v37 = 0;
  return v37 & 1;
}

unint64_t sub_1DD35333C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DD63D7C8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1DD63E0EC();
  return sub_1DD3533D4(a1, v3, v2, (unint64_t *)&qword_1F03E4128, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1DD3533D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1DD353504(v21, v20, v22);
      v17 = sub_1DD63E110();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1DD353504(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1DF0DB2A4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HFCharacteristicValueManager.staticHomeDataModelCachedValue(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  id v36;
  void *v37;
  id v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t result;
  _OWORD *v47;
  __int128 v48;
  char *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  __int128 *v68;
  char *v69;
  char v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  char v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _OWORD *v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;

  v117 = (_OWORD *)a2;
  v3 = sub_1DD63DBA0();
  v107 = *(_QWORD *)(v3 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v106 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v105 = (char *)&v96 - v6;
  v112 = sub_1DD63D90C();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5650);
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5658);
  MEMORY[0x1E0C80A78](v11);
  v109 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1DD63DBDC();
  v113 = *(_QWORD *)(v110 - 8);
  v13 = MEMORY[0x1E0C80A78](v110);
  v100 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v101 = (char *)&v96 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v102 = (char *)&v96 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v103 = (char *)&v96 - v20;
  MEMORY[0x1E0C80A78](v19);
  v104 = (char *)&v96 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5660);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1DD63DA80();
  v116 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v114 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DD63D7C8();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v96 - v34;
  v36 = objc_msgSend(a1, sel_service);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_6;
  }
  v37 = v36;
  v99 = v3;
  v38 = objc_msgSend(v36, sel_uniqueIdentifier);

  sub_1DD63D7A4();
  v39 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v39(v28, v33, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
LABEL_6:
    v44 = (uint64_t *)&unk_1F03E47E0;
    v45 = (uint64_t)v28;
    goto LABEL_7;
  }
  v98 = v30;
  v40 = (uint64_t)v35;
  v39(v35, v28, v29);
  v41 = objc_msgSend(a1, sel_characteristicType);
  sub_1DD63E14C();

  sub_1DD63DA74();
  v42 = v116;
  v43 = v115;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v24, 1, v115) == 1)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v35, v29);
    v44 = &qword_1F03E5660;
    v45 = (uint64_t)v24;
LABEL_7:
    result = sub_1DD3540B8(v45, v44);
    v47 = v117;
    v48 = 0uLL;
LABEL_8:
    *v47 = v48;
    v47[1] = v48;
    return result;
  }
  v97 = v29;
  v49 = v114;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v114, v24, v43);
  sub_1DD63D8E8();
  v50 = (void *)sub_1DD63D8D0();
  sub_1DD63D8A0();

  v51 = sub_1DD63D8F4();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v8, v112);
  if (*(_QWORD *)(v51 + 16))
  {
    v52 = sub_1DD35333C(v40);
    v53 = v110;
    if ((v54 & 1) != 0)
    {
      v55 = v52;
      v56 = *(_QWORD *)(v51 + 56);
      v57 = sub_1DD63D924();
      v58 = *(_QWORD *)(v57 - 8);
      v59 = v56 + *(_QWORD *)(v58 + 72) * v55;
      v60 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v108, v59, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v60, 0, 1, v57);
    }
    else
    {
      v57 = sub_1DD63D924();
      v60 = v108;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v108, 1, 1, v57);
    }
  }
  else
  {
    v57 = sub_1DD63D924();
    v60 = v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v108, 1, 1, v57);
    v53 = v110;
  }
  v61 = (__int128 *)v109;
  swift_bridgeObjectRelease();
  sub_1DD63D924();
  v62 = *(_QWORD *)(v57 - 8);
  v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v57);
  v64 = (uint64_t)v60;
  v65 = v98;
  if (v63 == 1)
  {
    sub_1DD3540B8(v64, &qword_1F03E5650);
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v61, 1, 1, v53);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v43);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v40, v97);
    v67 = &qword_1F03E5658;
    v68 = v61;
LABEL_18:
    result = sub_1DD3540B8((uint64_t)v68, v67);
    v48 = 0uLL;
    v47 = v117;
    goto LABEL_8;
  }
  sub_1DD63D918();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v64, v57);
  v66 = v113;
  if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v113 + 48))(v61, 1, v53) == 1)
    goto LABEL_17;
  v69 = v104;
  (*(void (**)(char *, __int128 *, uint64_t))(v66 + 32))(v104, v61, v53);
  v70 = sub_1DD63DBC4();
  if (v70 == 2)
  {
    v126 = 0u;
    v127 = 0u;
  }
  else
  {
    *((_QWORD *)&v127 + 1) = MEMORY[0x1E0DEAFA0];
    LOBYTE(v126) = v70 & 1;
  }
  v71 = v103;
  v72 = v66;
  v73 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v73(v103, v69, v53);
  if (*((_QWORD *)&v127 + 1))
  {
    v74 = *(void (**)(char *, uint64_t))(v72 + 8);
    v74(v71, v53);
    sub_1DD357884(&v126, &v128);
  }
  else
  {
    v75 = sub_1DD63DBB8();
    if ((v76 & 1) != 0)
    {
      v75 = 0;
      *((_QWORD *)&v123 + 1) = 0;
      v124 = 0;
      v125 = 0;
    }
    else
    {
      v125 = MEMORY[0x1E0DEB418];
    }
    v77 = v102;
    *(_QWORD *)&v123 = v75;
    v73(v102, v71, v53);
    if (v125)
    {
      v74 = *(void (**)(char *, uint64_t))(v113 + 8);
      v74(v77, v53);
      v74(v71, v53);
      sub_1DD357884(&v123, &v128);
    }
    else
    {
      v78 = sub_1DD63DB70();
      if ((v79 & 1) != 0)
      {
        v78 = 0;
        *((_QWORD *)&v120 + 1) = 0;
        v121 = 0;
        v122 = 0;
      }
      else
      {
        v122 = MEMORY[0x1E0DEB070];
      }
      v80 = v101;
      *(_QWORD *)&v120 = v78;
      v81 = v102;
      v73(v101, v102, v53);
      if (v122)
      {
        v74 = *(void (**)(char *, uint64_t))(v113 + 8);
        v74(v80, v53);
        v74(v81, v53);
        v74(v71, v53);
        sub_1DD357884(&v120, &v128);
      }
      else
      {
        v82 = sub_1DD63DB7C();
        if (v83)
        {
          *((_QWORD *)&v119 + 1) = MEMORY[0x1E0DEA968];
          *(_QWORD *)&v118 = v82;
          *((_QWORD *)&v118 + 1) = v83;
        }
        else
        {
          v118 = 0u;
          v119 = 0u;
        }
        v84 = v100;
        v85 = v101;
        v73(v100, v101, v53);
        v86 = v102;
        if (*((_QWORD *)&v119 + 1))
        {
          v74 = *(void (**)(char *, uint64_t))(v113 + 8);
          v74(v84, v53);
          v74(v85, v53);
          v74(v86, v53);
          v74(v71, v53);
          sub_1DD357884(&v118, &v128);
        }
        else
        {
          v87 = sub_1DD63DBD0();
          if (v88 >> 60 == 15)
          {
            v74 = *(void (**)(char *, uint64_t))(v113 + 8);
            v74(v84, v53);
            v74(v101, v53);
            v74(v102, v53);
            v74(v71, v53);
            v128 = 0u;
            v129 = 0u;
          }
          else
          {
            *((_QWORD *)&v129 + 1) = MEMORY[0x1E0CB0338];
            *(_QWORD *)&v128 = v87;
            *((_QWORD *)&v128 + 1) = v88;
            v74 = *(void (**)(char *, uint64_t))(v113 + 8);
            v74(v84, v53);
            v74(v101, v53);
            v74(v102, v53);
            v74(v71, v53);
          }
          sub_1DD3540B8((uint64_t)&v118, (uint64_t *)&unk_1ED3785F0);
        }
        sub_1DD3540B8((uint64_t)&v120, (uint64_t *)&unk_1ED3785F0);
      }
      sub_1DD3540B8((uint64_t)&v123, (uint64_t *)&unk_1ED3785F0);
    }
    sub_1DD3540B8((uint64_t)&v126, (uint64_t *)&unk_1ED3785F0);
  }
  v89 = v105;
  sub_1DD63DBAC();
  v90 = *MEMORY[0x1E0D32878];
  v91 = sub_1DD63DB94();
  v92 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v106, v90, v91);
  v93 = v107;
  v94 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v92, *MEMORY[0x1E0D32868], v99);
  LOBYTE(v90) = MEMORY[0x1DF0D975C](v89, v92);
  v95 = *(void (**)(char *, uint64_t))(v93 + 8);
  v95(v92, v94);
  v95(v89, v94);
  v74(v69, v53);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v114, v43);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v40, v97);
  if ((v90 & 1) == 0)
  {
    v67 = (uint64_t *)&unk_1ED3785F0;
    v68 = &v128;
    goto LABEL_18;
  }
  return sub_1DD41C468((uint64_t)&v128, (uint64_t)v117);
}

uint64_t sub_1DD3540B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DD3540F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED3785F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DD355A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD355B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t HFComputeHashFromContents(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v2 = objc_msgSend(v1, "computeHashFromContents");
  }
  else
  {
    objc_opt_class();
    v3 = v1;
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;

    v2 = objc_msgSend(v5, "hash");
  }

  return v2;
}

void sub_1DD356A94(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1DD357174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD3572BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_OWORD *sub_1DD357884(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1DD357F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0DB298](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DD358094(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  sub_1DD352AB0(0, a2);
  sub_1DD352A70(a4, a2);
  result = sub_1DD63E3C8();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E7B8();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1DF0DA2C0](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD358210(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      result = 0;
      *a1 = v26;
      return result;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E67B8(v7, result + 1, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1DD3F52C0();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1DD3F617C(v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EA86C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t dispatch thunk of ReorderableItemList.sortedItems(item1:item2:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1DD358620()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1DD358648 + 4 * byte_1DD66805A[*v0]))("home2023", 8);
}

const char *sub_1DD358648()
{
  return "home2023QE";
}

const char *sub_1DD35865C()
{
  return "thirdrail";
}

const char *sub_1DD358670()
{
  return "utility2024";
}

const char *sub_1DD3586B8()
{
  return "HomeEnergy";
}

BOOL sub_1DD358730(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

id HFTileResizable.tileSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_tileSize);
}

uint64_t _s4Home0A22KitObjectSettingsStoreC8tileSize3forSo015HFTileResizableG0aSgSo06HFHomebC0_p_tFZ_0()
{
  int v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (qword_1F03E3868 != -1)
    swift_once();
  if (qword_1F03ED480)
  {
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v0 = qword_1F03ED488;
    v1 = swift_dynamicCastObjCProtocolConditional();
    if (!v1)
      return 0;
    v2 = (void *)v1;
    swift_unknownObjectRetain();
    sub_1DD358A14(0, v0, v2);
    v4 = v3;
    swift_unknownObjectRelease();
    if (!v4)
      return 0;
    v5 = sub_1DD63E11C();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1DD358A14(uint64_t a1, int a2, id a3)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  if (a1)
  {
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v3 = objc_msgSend(a3, sel_applicationData);
    v4 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    v5 = (void *)sub_1DD63E11C();
    v6 = objc_msgSend(v4, sel_initWithString_, v5);

    objc_msgSend(v3, sel_objectForKey_, v6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5AD0);
    if (swift_dynamicCast())
      return v8;
    else
      return 0;
  }
  return result;
}

void sub_1DD35D824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

ValueMetadata *type metadata accessor for AccessoryElementCapabilities()
{
  return &type metadata for AccessoryElementCapabilities;
}

uint64_t dispatch thunk of AccessoryElementCapabilitiesProviding.capabilities.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DD35E9F8()
{
  return sub_1DD63E578();
}

void sub_1DD35EA10(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1DD35EA18()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1DD35EA28@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

void static AccessoryElementCapabilities.stateful.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static AccessoryElementCapabilities.configuration.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static AccessoryElementCapabilities.interactive.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void sub_1DD35F514(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DD3604EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1DD36151C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

id HFLogForCategory(unint64_t a1)
{
  if (a1 >= 0x48)
    NSLog(CFSTR("Unknown logging category: %d"), a1);
  if (qword_1ED3795D8 != -1)
    dispatch_once(&qword_1ED3795D8, &__block_literal_global_32_6);
  return (id)_MergedGlobals_282[a1 + 7];
}

unint64_t sub_1DD361D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED378390;
  if (!qword_1ED378390)
  {
    v1 = sub_1DD352AB0(255, (unint64_t *)&qword_1ED378380);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED378390);
  }
  return result;
}

void sub_1DD363364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose((const void *)(v44 - 216), 8);
  _Block_object_dispose((const void *)(v44 - 168), 8);
  _Block_object_dispose((const void *)(v44 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1DD364D9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1DD365DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD366384(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD366480(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD366B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3674D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3676D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _HFThermostatIconSet()
{
  void *v0;
  void *v1;
  void *v2;
  HFTemperatureIconDescriptor *v3;
  void *v4;

  +[HFFormatterManager sharedInstance](HFFormatterManager, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "temperatureFormatter");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "setInputIsCelsius:", 0);
  objc_msgSend(v1, "stringForObjectValue:", &unk_1EA7CB8D8);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = -[HFTemperatureIconDescriptor initWithFormattedTemperature:heatingCoolingMode:targetHeatingCoolingMode:]([HFTemperatureIconDescriptor alloc], "initWithFormattedTemperature:heatingCoolingMode:targetHeatingCoolingMode:", v2, 2, 2);
  +[HFServiceIconSet setWithDefaultIcon:](HFServiceIconSet, "setWithDefaultIcon:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1DD3688E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;

  if (v35)
    (*(void (**)(uint64_t))(v35 + 16))(v35);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v36 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1DD36D2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD36D558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t HFForceNotAdministrator()
{
  void *v0;
  uint64_t v1;

  __HFForceNotAdministrator_block_invoke();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLValue");

  return v1;
}

id HFCAPackageIconIdentifierStatesWithContinuousAnimation()
{
  if (qword_1ED379050 != -1)
    dispatch_once(&qword_1ED379050, &__block_literal_global_84);
  return (id)_MergedGlobals_248;
}

uint64_t HFPrimaryStateFromBOOL(int a1)
{
  if (a1)
    return 2;
  else
    return 1;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

void __Block_byref_object_dispose__15(uint64_t a1)
{

}

void __Block_byref_object_dispose__16(uint64_t a1)
{

}

void __Block_byref_object_dispose__17(uint64_t a1)
{

}

void __Block_byref_object_dispose__18(uint64_t a1)
{

}

void __Block_byref_object_dispose__19(uint64_t a1)
{

}

void __Block_byref_object_dispose__20(uint64_t a1)
{

}

void __Block_byref_object_dispose__21(uint64_t a1)
{

}

void __Block_byref_object_dispose__22(uint64_t a1)
{

}

void __Block_byref_object_dispose__23(uint64_t a1)
{

}

void __Block_byref_object_dispose__24(uint64_t a1)
{

}

void __Block_byref_object_dispose__25(uint64_t a1)
{

}

void __Block_byref_object_dispose__26(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void __Block_byref_object_dispose__27(uint64_t a1)
{

}

void sub_1DD370A98(unint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
  {
    _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v8 = sub_1DD63E7B8();
    if (v8)
      goto LABEL_3;
LABEL_10:
    v12 = MEMORY[0x1E0DEE9E0];
    goto LABEL_11;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_10;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    _Block_release(aBlock);
    __break(1u);
    return;
  }
  v9 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x1DF0DA2C0](v9, a1);
    else
      v10 = *(id *)(a1 + 8 * v9 + 32);
    v11 = v10;
    ++v9;
    v21 = v10;
    sub_1DD370D90(&v22, &v21, (uint64_t)a3, &v20);
    swift_bridgeObjectRelease();

    v12 = v20;
    v22 = v20;
  }
  while (v8 != v9);
LABEL_11:
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a2, sel_hf_orderedRooms);
  sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783E0);
  v14 = sub_1DD63E1F4();

  v22 = MEMORY[0x1E0DEE9D8];
  if (v14 >> 62)
    goto LABEL_21;
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(aBlock);
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v15; v15 = sub_1DD63E7B8())
  {
    v16 = 4;
    while (1)
    {
      v17 = (v14 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1DF0DA2C0](v16 - 4, v14)
          : *(id *)(v14 + 8 * v16);
      v18 = v17;
      v19 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
        break;
      v21 = v17;
      _Block_copy(aBlock);
      sub_1DD3714C4(&v22, &v21, v12, (uint64_t)aBlock);
      _Block_release(aBlock);

      ++v16;
      if (v19 == v15)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
}

uint64_t sub_1DD370D90@<X0>(uint64_t *a1@<X0>, id *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  os_log_type_t v30;
  NSObject *v31;
  os_log_type_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t result;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v50 = a3;
  v51 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - v15;
  v52 = *a1;
  v17 = *a2;
  v18 = objc_msgSend(*a2, sel_latestResults);
  if (!v18)
  {
    v53 = 0u;
    v54 = 0u;
    goto LABEL_11;
  }
  v19 = v18;
  v20 = sub_1DD63E098();

  v21 = sub_1DD63E14C();
  if (!*(_QWORD *)(v20 + 16) || (v23 = sub_1DD3714A8(v21, v22), (v24 & 1) == 0))
  {
    v53 = 0u;
    v54 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1DD3714B4(*(_QWORD *)(v20 + 56) + 32 * v23, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v54 + 1))
  {
LABEL_11:
    sub_1DD3540B8((uint64_t)&v53, (uint64_t *)&unk_1ED3785F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_12;
  }
  v25 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v25 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    v26 = v52;
    v27 = *(_QWORD *)(v52 + 16);
    swift_bridgeObjectRetain();
    if (v27 && (v28 = sub_1DD35333C((uint64_t)v16), (v29 & 1) != 0))
    {
      *(_QWORD *)&v53 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
    }
    v41 = v17;
    MEMORY[0x1DF0D9DA4]();
    if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DD63E224();
    sub_1DD63E254();
    sub_1DD63E20C();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v43 = v52;
    v42 = v53;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55 = v43;
    sub_1DD3714B8(v42, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
    v45 = v55;
    swift_bridgeObjectRelease();
    v46 = *(void (**)(char *, uint64_t))(v11 + 8);
    v46(v14, v10);
    result = ((uint64_t (*)(char *, uint64_t))v46)(v16, v10);
    *v51 = v45;
    return result;
  }
LABEL_12:
  sub_1DD3540B8((uint64_t)v9, (uint64_t *)&unk_1F03E47E0);
  v30 = sub_1DD63E47C();
  if (qword_1ED3785B8 != -1)
    swift_once();
  v31 = qword_1ED379F48;
  v32 = v30;
  if (os_log_type_enabled((os_log_t)qword_1ED379F48, v30))
  {
    v33 = v17;
    v34 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    *(_QWORD *)&v53 = v48;
    *(_DWORD *)v34 = 136315906;
    v49 = v4;
    v55 = sub_1DD3C3160(0xD000000000000061, 0x80000001DD66EE40, (uint64_t *)&v53);
    sub_1DD63E53C();
    *(_WORD *)(v34 + 12) = 2048;
    v55 = 188;
    sub_1DD63E53C();
    *(_WORD *)(v34 + 22) = 2080;
    v36 = sub_1DD63E95C();
    v55 = sub_1DD3C3160(v36, v37, (uint64_t *)&v53);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 32) = 2112;
    v55 = (uint64_t)v33;
    v38 = v33;
    sub_1DD63E53C();
    *v35 = v33;

    _os_log_impl(&dword_1DD34E000, v31, v32, "(%s:%ld) %s encountered item with no room identifier: %@", (uint8_t *)v34, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v35, -1, -1);
    v39 = v48;
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v39, -1, -1);
    MEMORY[0x1DF0DB358](v34, -1, -1);
  }
  *v51 = v52;
  return swift_bridgeObjectRetain();
}

double _sSo6HFItemC4HomeEyypSgSo0A9ResultKeyacig_0@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double result;

  v3 = objc_msgSend(v1, sel_latestResults);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1DD63E098();

    v6 = sub_1DD63E14C();
    if (*(_QWORD *)(v5 + 16)
      && (v8 = sub_1DD3DE420(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8), (v9 & 1) != 0))
    {
      sub_1DD3DE740(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

unint64_t sub_1DD3713C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DD63E860() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DD63E860() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1DD3714A8(uint64_t a1, uint64_t a2)
{
  return sub_1DD3DE420(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
}

uint64_t sub_1DD3714B8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1DD3DC120(a1, a2, a3, &qword_1F03E4178);
}

void sub_1DD3714C4(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = v4;
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a2;
  v15 = (id)(*(uint64_t (**)(uint64_t, void *))(a4 + 16))(a4, v14);
  if (v15)
  {
    v16 = v15;
    v34 = a1;
    sub_1DD63E14C();

    v17 = objc_allocWithZone((Class)HFMutableItemSection);
    v18 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_initWithIdentifier_, v18);

    v20 = objc_msgSend(v14, sel_hf_reorderableServicesList);
    v21 = objc_msgSend(v20, sel_sortedHomeKitItemComparator);

    _Block_copy(v21);
    v22 = objc_msgSend(v14, sel_uniqueIdentifier);
    sub_1DD63D7A4();

    if (*(_QWORD *)(a3 + 16) && (v23 = sub_1DD35333C((uint64_t)v13), (v24 & 1) != 0))
    {
      v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v23);
      v26 = *(void (**)(char *, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *(void (**)(char *, uint64_t))(v11 + 8);
      v25 = MEMORY[0x1E0DEE9D8];
    }
    v26(v13, v10);
    if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
    {
      v32 = swift_bridgeObjectRetain();
      v27 = (uint64_t)sub_1DD40DB04(v32);
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v35 = v27;
    _Block_copy(v21);
    sub_1DD371800(&v35, v21);
    if (v5)
    {
      _Block_release(v21);
      _Block_release(v21);
      _Block_release(v21);
      swift_release();
      __break(1u);
    }
    else
    {
      _Block_release(v21);
      swift_bridgeObjectRelease();
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      v28 = (void *)sub_1DD63E1DC();
      swift_release();
      objc_msgSend(v19, sel_setItems_, v28);

      v29 = objc_msgSend(v14, sel_name);
      if (!v29)
      {
        sub_1DD63E14C();
        v29 = (id)sub_1DD63E11C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v19, sel_setHeaderTitle_, v29);

      v30 = v19;
      v31 = v34;
      MEMORY[0x1DF0D9DA4]();
      if (*(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD63E224();
      sub_1DD63E254();
      sub_1DD63E20C();
      _Block_release(v21);
      _Block_release(v21);

    }
  }
}

void sub_1DD371800(uint64_t *a1, void *aBlock)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7[2];

  v4 = *a1;
  _Block_copy(aBlock);
  _Block_copy(aBlock);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1DD3718B0();
  v6 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v6;
  _Block_copy(aBlock);
  sub_1DD3718C4(v7, aBlock);
  _Block_release(aBlock);
  sub_1DD63E71C();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1DD3718B0()
{
  JUMPOUT(0x1DF0DA3E0);
}

void sub_1DD3718C4(uint64_t *a1, void *aBlock)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *__dst;
  void *aBlocka;
  uint64_t v101;
  int v102[2];
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;

  v3 = aBlock;
  _Block_copy(aBlock);
  _Block_copy(v3);
  v5 = a1[1];
  _Block_copy(v3);
  _Block_copy(v3);
  _Block_copy(v3);
  _Block_copy(v3);
  v6 = sub_1DD63E818();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_136;
    v10 = v3;
    if (v5)
    {
      _Block_copy(v3);
      sub_1DD3722E0(0, v5, 1, a1, (uint64_t (**)(_QWORD, _QWORD, _QWORD))v3);
      _Block_release(v3);
LABEL_112:
      v10 = v3;
    }
    _Block_release(v10);
    _Block_release(v3);
    _Block_release(v3);
    _Block_release(v3);
    _Block_release(v3);
    goto LABEL_114;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_144;
  v96 = v6;
  aBlocka = v3;
  v105 = v2;
  v93 = a1;
  if (v5 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v106 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 == 1)
      goto LABEL_12;
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
    v104 = v11;
    if (v14 >= 2)
    {
      v83 = *v93;
      *(_QWORD *)v102 = *v93;
      do
      {
        v84 = v14 - 2;
        if (v14 < 2)
          goto LABEL_131;
        if (!v83)
          goto LABEL_143;
        v85 = *(_QWORD *)&v104[16 * v84 + 32];
        v86 = *(_QWORD *)&v104[16 * v14 + 24];
        v87 = (char *)(v83 + 8 * v85);
        v88 = (char *)(v83 + 8 * *(_QWORD *)&v104[16 * v14 + 16]);
        v89 = v83 + 8 * v86;
        _Block_copy(aBlocka);
        v90 = v89;
        v3 = aBlocka;
        sub_1DD4011D8(v87, v88, v90, __dst, (uint64_t (**)(_QWORD, _QWORD, _QWORD))aBlocka);
        if (v105)
          goto LABEL_111;
        _Block_release(aBlocka);
        if (v86 < v85)
          goto LABEL_132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v104 = sub_1DD40119C((uint64_t)v104);
        if (v84 >= *((_QWORD *)v104 + 2))
          goto LABEL_133;
        v91 = &v104[16 * v84 + 32];
        *(_QWORD *)v91 = v85;
        *((_QWORD *)v91 + 1) = v86;
        v92 = *((_QWORD *)v104 + 2);
        if (v14 > v92)
          goto LABEL_134;
        memmove(&v104[16 * v14 + 16], &v104[16 * v14 + 32], 16 * (v92 - v14));
        *((_QWORD *)v104 + 2) = v92 - 1;
        v14 = v92 - 1;
        v83 = *(_QWORD *)v102;
      }
      while (v92 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1DD63E20C();
    swift_bridgeObjectRelease();
    _Block_release(v3);
    _Block_release(v3);
    _Block_release(v3);
    _Block_release(v3);
    _Block_release(v3);
LABEL_114:
    _Block_release(v3);
    return;
  }
  v8 = v7 >> 1;
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
  v9 = sub_1DD63E23C();
  *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
  __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
  v106 = v9;
LABEL_12:
  v12 = 0;
  v101 = *a1;
  v94 = *a1 - 8;
  v95 = *a1 + 16;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v5;
  v97 = v5;
  while (1)
  {
    v15 = v12++;
    if (v12 >= v13)
    {
      v18 = v101;
    }
    else
    {
      v16 = (*((uint64_t (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, *(_QWORD *)(v101 + 8 * v12), *(_QWORD *)(v101 + 8 * v15));
      v12 = v15 + 2;
      if (v15 + 2 < v13)
      {
        v17 = (_QWORD *)(v95 + 8 * v15);
        while ((v16 != 1) != ((*((uint64_t (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, *v17, *(v17 - 1)) == 1))
        {
          ++v12;
          ++v17;
          if (v97 == v12)
          {
            v12 = v97;
            break;
          }
        }
      }
      if (v16 == 1)
      {
        v13 = v97;
        v18 = v101;
        if (v12 >= v97)
          goto LABEL_50;
        goto LABEL_33;
      }
      v13 = v97;
      v18 = v101;
      if (v12 < v15)
        goto LABEL_137;
      if (v15 < v12)
      {
        v19 = (uint64_t *)(v94 + 8 * v12);
        v20 = v12;
        v21 = v15;
        v22 = (uint64_t *)(v101 + 8 * v15);
        do
        {
          if (v21 != --v20)
          {
            if (!v101)
              goto LABEL_142;
            v23 = *v22;
            *v22 = *v19;
            *v19 = v23;
          }
          ++v21;
          --v19;
          ++v22;
        }
        while (v21 < v20);
      }
    }
    if (v12 >= v13)
      goto LABEL_50;
LABEL_33:
    if (__OFSUB__(v12, v15))
      goto LABEL_135;
    if (v12 - v15 >= v96)
      goto LABEL_50;
    if (__OFADD__(v15, v96))
      goto LABEL_138;
    v24 = v11;
    v25 = v15 + v96 >= v13 ? v13 : v15 + v96;
    if (v25 < v15)
      break;
    if (v12 != v25)
    {
      v26 = (_QWORD *)(v94 + 8 * v12);
      do
      {
        v27 = *(_QWORD *)(v18 + 8 * v12);
        v28 = v15;
        v29 = v26;
        do
        {
          if ((*((uint64_t (**)(void *, uint64_t, _QWORD))v3 + 2))(v3, v27, *v29) == 1)
            break;
          if (!v18)
            goto LABEL_140;
          v30 = *v29;
          v27 = v29[1];
          *v29 = v27;
          v29[1] = v30;
          --v29;
          ++v28;
        }
        while (v12 != v28);
        ++v12;
        ++v26;
      }
      while (v12 != v25);
      v12 = v25;
    }
    v11 = v24;
LABEL_50:
    if (v12 < v15)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1DD400EEC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v32 = *((_QWORD *)v11 + 2);
    v31 = *((_QWORD *)v11 + 3);
    v14 = v32 + 1;
    if (v32 >= v31 >> 1)
      v11 = sub_1DD400EEC((char *)(v31 > 1), v32 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v14;
    v33 = v11 + 32;
    v34 = &v11[16 * v32 + 32];
    *(_QWORD *)v34 = v15;
    *((_QWORD *)v34 + 1) = v12;
    if (v32)
    {
      v98 = v12;
      while (1)
      {
        v35 = v14 - 1;
        if (v14 >= 4)
        {
          v40 = &v33[16 * v14];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_119;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_120;
          v47 = v14 - 2;
          v48 = &v33[16 * v14 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_122;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_125;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_129;
            v63 = v38 < v73;
            goto LABEL_88;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v64 = *((_QWORD *)v11 + 4);
            v65 = *((_QWORD *)v11 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_82;
          }
          v37 = *((_QWORD *)v11 + 4);
          v36 = *((_QWORD *)v11 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_121;
        v47 = v14 - 2;
        v53 = &v33[16 * v14 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_124;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_127;
        if (__OFADD__(v57, v62))
          goto LABEL_128;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_88:
          if (v63)
            v35 = v47;
          goto LABEL_90;
        }
LABEL_82:
        if ((v58 & 1) != 0)
          goto LABEL_123;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_126;
        if (v69 < v57)
          goto LABEL_14;
LABEL_90:
        v74 = v35 - 1;
        if (v35 - 1 >= v14)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v101)
          goto LABEL_141;
        v75 = &v33[16 * v74];
        v76 = v33;
        v77 = *(_QWORD *)v75;
        v78 = v35;
        v79 = &v76[16 * v35];
        v80 = *((_QWORD *)v79 + 1);
        v81 = (char *)(v101 + 8 * *(_QWORD *)v75);
        v103 = (char *)(v101 + 8 * *(_QWORD *)v79);
        v3 = aBlocka;
        _Block_copy(aBlocka);
        sub_1DD4011D8(v81, v103, v101 + 8 * v80, __dst, (uint64_t (**)(_QWORD, _QWORD, _QWORD))aBlocka);
        if (v105)
        {
LABEL_111:
          _Block_release(v3);
          swift_bridgeObjectRelease();
          *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_1DD63E20C();
          swift_bridgeObjectRelease();
          goto LABEL_112;
        }
        _Block_release(aBlocka);
        if (v80 < v77)
          goto LABEL_116;
        if (v78 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v75 = v77;
        v33 = v11 + 32;
        *(_QWORD *)&v11[16 * v74 + 40] = v80;
        v82 = *((_QWORD *)v11 + 2);
        if (v78 >= v82)
          goto LABEL_118;
        v105 = 0;
        v14 = v82 - 1;
        memmove(v79, v79 + 16, 16 * (v82 - 1 - v78));
        *((_QWORD *)v11 + 2) = v82 - 1;
        v12 = v98;
        if (v82 <= 2)
          goto LABEL_14;
      }
    }
    v14 = 1;
LABEL_14:
    v13 = v97;
    if (v12 >= v97)
      goto LABEL_99;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  __break(1u);
LABEL_141:
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  __break(1u);
LABEL_142:
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  __break(1u);
LABEL_143:
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  _Block_release(aBlocka);
  __break(1u);
LABEL_144:
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  _Block_release(v3);
  sub_1DD63E794();
  __break(1u);
}

void sub_1DD3722BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3722E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  if (a3 != a2)
  {
    v6 = a3;
    v9 = *a4;
    v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    v11 = *(_QWORD *)(v9 + 8 * v6);
    v12 = a1;
    v13 = (_QWORD *)v10;
    while (1)
    {
      if (a5[2](a5, v11, *v13) == 1)
      {
LABEL_4:
        ++v6;
        v10 += 8;
        if (v6 == a2)
          return;
        goto LABEL_5;
      }
      if (!v9)
        break;
      v14 = *v13;
      v11 = v13[1];
      *v13 = v11;
      v13[1] = v14;
      --v13;
      if (v6 == ++v12)
        goto LABEL_4;
    }
    _Block_release(a5);
    __break(1u);
  }
}

__CFString *HFItemOptionalLocalizedString(void *a1, void *a2)
{
  id v3;
  void *v4;
  char v5;
  __CFString *v6;

  v3 = a1;
  objc_msgSend(a2, "objectForKeyedSubscript:", HFItemUpdateOptionDisableOptionalData);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "BOOLValue");

  if ((v5 & 1) != 0)
  {
    v6 = &stru_1EA741FF8;
  }
  else
  {
    _HFLocalizedStringWithDefaultValue(v3, v3, 1);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }

  return v6;
}

id HFLocalizedStringWithFormat(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v17[2];

  v10 = a2;
  _HFLocalizedStringWithDefaultValue(a1, 0, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v17[1] = &a9;
    v12 = objc_alloc(MEMORY[0x1E0CB3940]);
    objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17[0] = 0;
    v14 = (void *)objc_msgSend(v12, "initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:", v11, v10, v13, &a9, v17);
    v15 = v17[0];

    if (!v14)
      NSLog(CFSTR("Couldn't localize format string \"%@\". Most likely, the format specifiers don't match. %@"), v11, v15);

  }
  else
  {
    v14 = 0;
  }

  return v14;
}

id _HFLocalizedStringWithDefaultValue(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __CFString *v21;
  int v22;
  BOOL v23;
  void *v24;
  id v26;
  int v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  HFHomeBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", v5, CFSTR("_"), CFSTR("HFLocalizable"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v8))
  {
    HFHomeBundle();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "localizedStringForKey:value:table:", v5, CFSTR("_"), CFSTR("HFUserFriendlyNameLocalizable"));
    v10 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v10;
  }
  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v8))
  {
    HFHomeBundle();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedStringForKey:value:table:", v5, CFSTR("_"), CFSTR("HFUserFriendlyNameDerivedLocalizable"));
    v12 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v12;
  }
  if (objc_msgSend(CFSTR("_"), "isEqualToString:", v8))
  {
    v13 = v5;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    if (qword_1ED3795E0 != -1)
      dispatch_once(&qword_1ED3795E0, &__block_literal_global_118);
    v14 = (id)qword_1ED3795E8;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    if (v15)
    {
      v16 = v15;
      v28 = a3;
      v29 = v6;
      v17 = *(_QWORD *)v31;
LABEL_10:
      v18 = 0;
      while (1)
      {
        if (*(_QWORD *)v31 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * v18);
        HFHomeBundle();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "localizedStringForKey:value:table:", v13, &stru_1EA741FF8, v19);
        v21 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (!-[__CFString isEqualToString:](v21, "isEqualToString:", v13))
          break;

        if (v16 == ++v18)
        {
          v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
          if (v16)
            goto LABEL_10;
          v21 = CFSTR("_");
          break;
        }
      }
      v6 = v29;
      a3 = v28;
    }
    else
    {
      v21 = CFSTR("_");
    }

    v8 = v21;
  }
  v22 = objc_msgSend(CFSTR("_"), "isEqualToString:", v8);
  v23 = v22 == 0;
  if (v22)
    v24 = v6;
  else
    v24 = v8;
  if (!v23 && a3 != 0)
  {
    NSLog(CFSTR("Missing localized string key %@ in table %@"), v5, CFSTR("HFLocalizable"));
    v24 = v6;
  }
  v26 = v24;

  return v26;
}

id HFHomeBundle()
{
  if (qword_1ED3795C0 != -1)
    dispatch_once(&qword_1ED3795C0, &__block_literal_global_146);
  return (id)_MergedGlobals_282[0];
}

id HFDateAddedForApplicationDataContainer(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v8;
  uint8_t buf[4];
  id v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "applicationData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("HFApplicationDataDateAddedData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = 0;
    objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClass:fromData:error:", objc_opt_class(), v3, &v8);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v8;
    if (!v4)
    {
      HFLogForCategory(0);
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v10 = v1;
        v11 = 2112;
        v12 = v5;
        _os_log_error_impl(&dword_1DD34E000, v6, OS_LOG_TYPE_ERROR, "Error decoding date added for container %@; error: %@",
          buf,
          0x16u);
      }

    }
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__26(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

id HFAccessoryRepresentable.accessoryType.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_accessoryType);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0DB28C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

id HFAccessoryRepresentable.itemClass.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_hf_itemClass);
  if (result)
  {
    swift_getObjCClassMetadata();
    return (id)swift_dynamicCastTypeToObjCProtocolConditional();
  }
  return result;
}

void sub_1DD380544(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1DD3807F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;
  id *v33;

  objc_destroyWeak(v33);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD38096C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

unint64_t sub_1DD380EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3783C0;
  if (!qword_1ED3783C0)
  {
    v1 = sub_1DD352AB0(255, &qword_1ED3783B8);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3783C0);
  }
  return result;
}

void sub_1DD381354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD381528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD381930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD383638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id location;
  id *v71;

  objc_destroyWeak(v71);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD383770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD383CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 176));
  _Unwind_Resume(a1);
}

void sub_1DD384518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  id *v11;
  id *v12;
  id *v13;
  uint64_t v14;

  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 176));
  _Unwind_Resume(a1);
}

void sub_1DD384B64(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_1DD385374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD385AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id location;

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3873BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3880A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location)
{
  uint64_t v12;

  objc_destroyWeak((id *)(v12 - 168));
  _Unwind_Resume(a1);
}

void sub_1DD388978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 168), 8);
  _Unwind_Resume(a1);
}

void sub_1DD388EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HFCAPackageAlternateStateForHFCAPackageState(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;

  v1 = a1;
  v2 = v1;
  if (HFCAPackageStateOn == v1)
  {
    v1 = (__CFString *)HFCAPackageStateOnAlternate;
  }
  else if (HFCAPackageStateOff == v1)
  {
    v1 = (__CFString *)HFCAPackageStateOffAlternate;
  }
  else if (HFCAPackageStateActivated == v1)
  {
    v1 = HFCAPackageStateActivatedAlternate;
  }
  v3 = v1;

  return v3;
}

void sub_1DD38B1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  id *v9;

  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_1DD38BF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD38CD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD38D504(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HFLocalizedString(void *a1)
{
  return _HFLocalizedStringWithDefaultValue(a1, a1, 1);
}

id _HFFaucetIconSet()
{
  HFCAPackageIconDescriptor *v0;
  void *v1;

  v0 = -[HFCAPackageIconDescriptor initWithPackageIdentifier:]([HFCAPackageIconDescriptor alloc], "initWithPackageIdentifier:", CFSTR("HFCAPackageIconIdentifierFaucet"));
  +[HFServiceIconSet setWithDefaultIcon:](HFServiceIconSet, "setWithDefaultIcon:", v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id _HFSprinklerIconSet()
{
  void *v0;
  HFCAPackageIconDescriptor *v1;
  void *v2;
  void *v3;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v5[0] = CFSTR("HFCAPackageIconIdentifierIrrigationController");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v5, 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = -[HFCAPackageIconDescriptor initWithPackageIdentifier:]([HFCAPackageIconDescriptor alloc], "initWithPackageIdentifier:", CFSTR("HFCAPackageIconIdentifierSprinkler"));
  objc_msgSend(v0, "na_map:", &__block_literal_global_148);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[HFServiceIconSet setWithDefaultIcon:alternateIcons:](HFServiceIconSet, "setWithDefaultIcon:alternateIcons:", v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _HFProgrammableSwitchIconSet()
{
  HFCAPackageIconDescriptor *v0;
  void *v1;

  v0 = -[HFCAPackageIconDescriptor initWithPackageIdentifier:]([HFCAPackageIconDescriptor alloc], "initWithPackageIdentifier:", CFSTR("HFCAPackageIconIdentifierProgrammableSwitch"));
  +[HFServiceIconSet setWithDefaultIcon:](HFServiceIconSet, "setWithDefaultIcon:", v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id _HFNetworkRouterIconSet()
{
  HFCAPackageIconDescriptor *v0;
  void *v1;

  v0 = -[HFCAPackageIconDescriptor initWithPackageIdentifier:]([HFCAPackageIconDescriptor alloc], "initWithPackageIdentifier:", CFSTR("HFCAPackageIconIdentifierWiFiRouter"));
  +[HFServiceIconSet setWithDefaultIcon:](HFServiceIconSet, "setWithDefaultIcon:", v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id _HFFanServiceIconSet()
{
  void *v0;
  HFCAPackageIconDescriptor *v1;
  void *v2;
  void *v3;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x1E0C80C00];
  v5[0] = CFSTR("HFCAPackageIconIdentifierFloorFan");
  v5[1] = CFSTR("HFCAPackageIconIdentifierCeilingFan");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v5, 2);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = -[HFCAPackageIconDescriptor initWithPackageIdentifier:]([HFCAPackageIconDescriptor alloc], "initWithPackageIdentifier:", CFSTR("HFCAPackageIconIdentifierDeskFan"));
  objc_msgSend(v0, "na_map:", &__block_literal_global_148);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[HFServiceIconSet setWithDefaultIcon:alternateIcons:](HFServiceIconSet, "setWithDefaultIcon:alternateIcons:", v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1DD394A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1DD3956B4(uint64_t result)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;

  v4 = v2;
  v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    result = sub_1DD63E5E4();
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1DD63E7B8();
    result = swift_bridgeObjectRelease();
    v8 = v20 + v6;
    if (!__OFADD__(v20, v6))
      goto LABEL_6;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v6;
  if (__OFADD__(v7, v6))
    goto LABEL_24;
LABEL_6:
  v9 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v9;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8)
    v13 = v8;
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x1DF0DA2CC](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *v4 = v14;
  v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (*(_QWORD *)(v12 + 24) >> 1) - v15;
  result = (uint64_t)sub_1DD40EE10(&v44, (_QWORD *)(v12 + 8 * v15 + 32), v16, v5);
  if (result < v6)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= 1)
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = __OFADD__(v17, result);
    v19 = v17 + result;
    if (v18)
    {
      __break(1u);
LABEL_33:
      if (!sub_1DD63E614())
        goto LABEL_21;
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v24 = v43;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v24)
          goto LABEL_21;
        while (1)
        {
          v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(_QWORD *)(v26 + 0x18) >> 1)
          {
            sub_1DD63E224();
            v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          v27 = *(_QWORD *)(v26 + 24) >> 1;
          if (v3 < v27)
            break;
LABEL_37:
          *(_QWORD *)(v26 + 16) = v3;
        }
        v28 = v26 + 32;
        while (1)
        {
          *(_QWORD *)(v28 + 8 * v3++) = v24;
          v29 = v47;
          if (v44 < 0)
          {
            if (!sub_1DD63E614())
              goto LABEL_74;
            sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v24 = v43;
            swift_unknownObjectRelease();
            goto LABEL_49;
          }
          if (!v48)
            break;
          v30 = (v48 - 1) & v48;
          v31 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_45:
          v24 = *(void **)(*(_QWORD *)(v44 + 48) + 8 * v31);
          v32 = v24;
LABEL_46:
          v47 = v29;
          v48 = v30;
LABEL_49:
          if (!v24)
          {
LABEL_74:
            *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_21;
          }
          if (v3 >= v27)
          {
            v26 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_37;
          }
        }
        v33 = v47 + 1;
        if (__OFADD__(v47, 1))
        {
          __break(1u);
LABEL_98:
          v24 = 0;
          v22 = 0;
          v21 = v1;
LABEL_30:
          v47 = v21;
          v48 = v22;
          continue;
        }
        break;
      }
      v34 = (unint64_t)(v46 + 64) >> 6;
      if (v33 >= v34)
      {
        v24 = 0;
        v30 = 0;
        goto LABEL_46;
      }
      v35 = *(_QWORD *)(v45 + 8 * v33);
      if (!v35)
      {
        v36 = v47 + 2;
        if (v47 + 2 >= v34)
          goto LABEL_71;
        v35 = *(_QWORD *)(v45 + 8 * v36);
        if (!v35)
        {
          v1 = v47 + 3;
          if (v47 + 3 >= v34)
            goto LABEL_72;
          v35 = *(_QWORD *)(v45 + 8 * v1);
          if (v35)
          {
            v33 = v47 + 3;
            goto LABEL_55;
          }
          v36 = v47 + 4;
          if (v47 + 4 >= v34)
          {
            v24 = 0;
            v30 = 0;
            v29 = v47 + 3;
            goto LABEL_46;
          }
          v35 = *(_QWORD *)(v45 + 8 * v36);
          if (!v35)
          {
            v33 = v47 + 5;
            if (v47 + 5 >= v34)
            {
LABEL_72:
              v24 = 0;
              v30 = 0;
              v29 = v36;
              goto LABEL_46;
            }
            v35 = *(_QWORD *)(v45 + 8 * v33);
            if (!v35)
            {
              v33 = v34 - 1;
              v37 = v47 + 6;
              while (v34 != v37)
              {
                v35 = *(_QWORD *)(v45 + 8 * v37++);
                if (v35)
                {
                  v33 = v37 - 1;
                  goto LABEL_55;
                }
              }
LABEL_71:
              v24 = 0;
              v30 = 0;
              v29 = v33;
              goto LABEL_46;
            }
            goto LABEL_55;
          }
        }
        v33 = v36;
      }
LABEL_55:
      v30 = (v35 - 1) & v35;
      v31 = __clz(__rbit64(v35)) + (v33 << 6);
      v29 = v33;
      goto LABEL_45;
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  if (result != v16)
  {
LABEL_21:
    sub_1DD3DEBAC();
    return sub_1DD63E20C();
  }
LABEL_26:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v47;
  if (v44 < 0)
    goto LABEL_33;
  if (v48)
  {
    v22 = (v48 - 1) & v48;
    v23 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_29:
    v24 = *(void **)(*(_QWORD *)(v44 + 48) + 8 * v23);
    v25 = v24;
    goto LABEL_30;
  }
  v38 = v47 + 1;
  if (!__OFADD__(v47, 1))
  {
    v39 = (unint64_t)(v46 + 64) >> 6;
    if (v38 >= v39)
    {
      v24 = 0;
      v22 = 0;
      goto LABEL_30;
    }
    v40 = *(_QWORD *)(v45 + 8 * v38);
    if (v40)
      goto LABEL_79;
    v41 = v47 + 2;
    if (v47 + 2 >= v39)
    {
LABEL_95:
      v24 = 0;
      v22 = 0;
      v21 = v38;
      goto LABEL_30;
    }
    v40 = *(_QWORD *)(v45 + 8 * v41);
    if (v40)
      goto LABEL_83;
    v1 = v47 + 3;
    if (v47 + 3 < v39)
    {
      v40 = *(_QWORD *)(v45 + 8 * v1);
      if (v40)
      {
        v38 = v47 + 3;
        goto LABEL_79;
      }
      v41 = v47 + 4;
      if (v47 + 4 >= v39)
        goto LABEL_98;
      v40 = *(_QWORD *)(v45 + 8 * v41);
      if (v40)
      {
LABEL_83:
        v38 = v41;
LABEL_79:
        v22 = (v40 - 1) & v40;
        v23 = __clz(__rbit64(v40)) + (v38 << 6);
        v21 = v38;
        goto LABEL_29;
      }
      v38 = v47 + 5;
      if (v47 + 5 < v39)
      {
        v40 = *(_QWORD *)(v45 + 8 * v38);
        if (!v40)
        {
          v38 = v39 - 1;
          v42 = v47 + 6;
          do
          {
            if (v39 == v42)
              goto LABEL_95;
            v40 = *(_QWORD *)(v45 + 8 * v42++);
          }
          while (!v40);
          v38 = v42 - 1;
        }
        goto LABEL_79;
      }
    }
    v24 = 0;
    v22 = 0;
    v21 = v41;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD395CB0@<X0>(uint64_t *a1@<X8>)
{
  return HFAccessoryLikeObject.capabilities.getter(a1);
}

uint64_t HFAccessoryLikeObject.capabilities.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v3 = HFAccessoryLikeObject.elements.getter();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v7 + 8) + 8))(&v19, ObjectType);
      v5 |= v19;
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = 0;
  }
  v9 = HFAccessoryLikeObject.components.getter();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v9 + 40);
    do
    {
      v12 = *v11;
      v13 = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v12 + 8) + 8))(&v19, v13);
      v5 |= v19;
      v11 += 2;
      --v10;
    }
    while (v10);
  }
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v1, sel_accessories);
  sub_1DD352AB0(0, &qword_1F03E46E0);
  sub_1DD352A70((unint64_t *)&unk_1F03E55B0, &qword_1F03E46E0);
  v15 = sub_1DD63E398();

  sub_1DD41F4B0(v15);
  LOBYTE(v14) = v16;
  result = swift_bridgeObjectRelease();
  if ((v14 & ((v5 & 4) == 0)) != 0)
    v18 = v5 | 4;
  else
    v18 = v5;
  *a1 = v18;
  return result;
}

void sub_1DD395EF0(uint64_t *a1@<X8>)
{
  HMService.capabilities.getter(a1);
}

void HMService.capabilities.getter(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  SEL *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  BOOL v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  SEL *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  uint64_t v40;
  BOOL v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  NSObject *v46;
  os_log_type_t v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  unsigned int v61;
  unint64_t v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  id v68;
  SEL *v69;
  uint64_t v70;

  v2 = (uint64_t)v1;
  v4 = (SEL *)&selRef_hf_fakeNetworkStrengthError;
  if (objc_msgSend(v1, sel_hf_isVisible))
  {
    v5 = objc_msgSend(v1, sel_characteristics);
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    v6 = sub_1DD63E1F4();

    if (v6 >> 62)
      goto LABEL_77;
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_4:
    v67 = a1;
    v68 = (id)v2;
    if (v7)
    {
      v8 = (void *)objc_opt_self();
      a1 = 0;
      v63 = v8;
      v65 = v7;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1DF0DA2C0](a1, v6);
        else
          v9 = *(id *)(v6 + 32 + 8 * (_QWORD)a1);
        v10 = v9;
        v11 = __OFADD__(a1, 1);
        a1 = (uint64_t *)((char *)a1 + 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_74;
        }
        v12 = objc_msgSend(v8, sel_hf_sensingCharacteristicTypes);
        v13 = sub_1DD63E398();

        v14 = objc_msgSend(v10, sel_characteristicType);
        v4 = (SEL *)sub_1DD63E14C();
        v16 = v15;

        LOBYTE(v14) = sub_1DD3968A8((uint64_t)v4, v16, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
        {
          v17 = objc_msgSend(v10, sel_properties);
          v18 = (_QWORD *)sub_1DD63E1F4();

          v19 = sub_1DD63DF90();
          v21 = v20;
          v22 = v18[2];
          if (v22)
          {
            v4 = (SEL *)v19;
            if (v18[4] == v19 && v18[5] == v20 || (sub_1DD63E860() & 1) != 0)
            {
LABEL_34:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v26 = 2;
              swift_bridgeObjectRelease_n();

              a1 = v67;
              v2 = (uint64_t)v68;
LABEL_37:
              v4 = (SEL *)&selRef_hf_fakeNetworkStrengthError;
              goto LABEL_38;
            }
            if (v22 != 1)
            {
              if ((SEL *)v18[6] == v4 && v18[7] == v21 || (sub_1DD63E860() & 1) != 0)
                goto LABEL_34;
              if (v22 != 2)
              {
                v23 = v18 + 9;
                v2 = 2;
                while (1)
                {
                  v24 = v2 + 1;
                  if (__OFADD__(v2, 1))
                    break;
                  v25 = (SEL *)*(v23 - 1) == v4 && *v23 == v21;
                  if (v25 || (sub_1DD63E860() & 1) != 0)
                    goto LABEL_34;
                  v23 += 2;
                  ++v2;
                  if (v24 == v22)
                    goto LABEL_6;
                }
LABEL_74:
                __break(1u);
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                swift_bridgeObjectRetain();
                v7 = sub_1DD63E7B8();
                goto LABEL_4;
              }
            }
LABEL_6:
            swift_bridgeObjectRelease();
            v2 = (uint64_t)v68;
            v8 = v63;
            v7 = v65;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }

        if (a1 == (uint64_t *)v7)
        {
          swift_bridgeObjectRelease_n();
          v26 = 0;
          a1 = v67;
          goto LABEL_37;
        }
      }
    }
    swift_bridgeObjectRelease_n();
    v26 = 0;
LABEL_38:
    if ((objc_msgSend((id)v2, v4[155], v62) & 1) == 0)
    {
      v66 = v26;
      v27 = objc_msgSend((id)v2, sel_characteristics);
      v6 = sub_1DD63E1F4();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        v28 = sub_1DD63E7B8();
        if (v28)
        {
LABEL_41:
          v2 = 0;
          v29 = v6 & 0xC000000000000001;
          v62 = v6 + 32;
          v64 = v6;
          while (1)
          {
            v30 = v29 ? (SEL *)MEMORY[0x1DF0DA2C0](v2, v6) : (SEL *)*(id *)(v62 + 8 * v2);
            v4 = v30;
            v11 = __OFADD__(v2++, 1);
            if (v11)
              goto LABEL_76;
            v31 = -[SEL properties](v30, sel_properties);
            v32 = (_QWORD *)sub_1DD63E1F4();

            v33 = sub_1DD63E14C();
            v35 = v34;
            v36 = v32[2];
            if (v36)
            {
              v37 = v33;
              v69 = v4;
              v38 = v32[4] == v33 && v32[5] == v34;
              if (v38 || (v4 = (SEL *)v28, (sub_1DD63E860() & 1) != 0))
              {
LABEL_71:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();

                a1 = v67;
                v66 |= 0x21uLL;
                v2 = (uint64_t)v68;
                v4 = (SEL *)&selRef_hf_fakeNetworkStrengthError;
                goto LABEL_80;
              }
              if (v36 != 1)
              {
                v39 = v32[6] == v37 && v32[7] == v35;
                if (v39 || (sub_1DD63E860() & 1) != 0)
                  goto LABEL_71;
                if (v36 != 2)
                {
                  a1 = v32 + 9;
                  v40 = 2;
                  do
                  {
                    v6 = v40 + 1;
                    if (__OFADD__(v40, 1))
                      goto LABEL_75;
                    v41 = *(a1 - 1) == v37 && *a1 == v35;
                    if (v41 || (sub_1DD63E860() & 1) != 0)
                      goto LABEL_71;
                    a1 += 2;
                    ++v40;
                  }
                  while (v6 != v36);
                }
              }
              swift_bridgeObjectRelease();
              a1 = v67;
              v6 = v64;
              v28 = (uint64_t)v4;
              v4 = v69;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();

            v4 = (SEL *)&selRef_hf_fakeNetworkStrengthError;
            if (v2 == v28)
            {
              swift_bridgeObjectRelease_n();
              v2 = (uint64_t)v68;
              goto LABEL_80;
            }
          }
        }
      }
      else
      {
        v28 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v28)
          goto LABEL_41;
      }
      swift_bridgeObjectRelease_n();
LABEL_80:
      v42 = objc_msgSend((id)v2, sel_characteristics, v62);
      v43 = sub_1DD63E1F4();

      if (v43 >> 62)
      {
        swift_bridgeObjectRetain();
        v44 = sub_1DD63E7B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v26 = v66;
      if (!(v44 | v66))
      {
        v45 = sub_1DD63E47C();
        if (qword_1ED3785B8 != -1)
          swift_once();
        v46 = qword_1ED379F48;
        v47 = v45;
        if (os_log_type_enabled((os_log_t)qword_1ED379F48, v45))
        {
          v48 = (id)v2;
          v49 = swift_slowAlloc();
          v50 = (_QWORD *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          v70 = v51;
          *(_DWORD *)v49 = 136315394;
          sub_1DD3C3160(0x696C696261706163, 0xEC00000073656974, &v70);
          sub_1DD63E53C();
          *(_WORD *)(v49 + 12) = 2112;
          v52 = v48;
          sub_1DD63E53C();
          *v50 = v48;
          a1 = v67;

          v4 = (SEL *)&selRef_hf_fakeNetworkStrengthError;
          _os_log_impl(&dword_1DD34E000, v46, v47, "%s: No characteristics found for service %@", (uint8_t *)v49, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
          swift_arrayDestroy();
          v53 = v50;
          v2 = (uint64_t)v68;
          MEMORY[0x1DF0DB358](v53, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1DF0DB358](v51, -1, -1);
          MEMORY[0x1DF0DB358](v49, -1, -1);
        }
        v26 = 4;
      }
    }
  }
  else
  {
    v26 = 0;
  }
  v54 = objc_msgSend((id)v2, sel_hf_isNetworkRouter);
  v55 = v26 | 0xC;
  if ((v26 & 0x20) != 0)
    v55 = v26 & 0x13 | 0xC;
  if (v54)
    v26 = v55;
  v56 = objc_msgSend((id)v2, sel_hf_isProgrammableSwitch);
  v57 = v26 | 4;
  if ((v26 & 0x20) != 0)
    v57 = v26 & 0x1B | 4;
  if (v56)
    v58 = v57;
  else
    v58 = v26;
  if ((objc_msgSend((id)v2, v4[155]) & 1) != 0
    || (v59 = objc_msgSend((id)objc_opt_self(), sel_hiddenFromScenesAndAutomationsAccessoryTypeGroup),
        v60 = objc_msgSend((id)v2, sel_hf_accessoryType),
        v61 = objc_msgSend(v59, sel_containsType_, v60),
        v59,
        v60,
        v61))
  {
    if ((v58 & 0x20) != 0)
      v58 &= 0x1Fu;
  }
  *a1 = v58;
}

uint64_t sub_1DD3968A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1DD63E908();
    sub_1DD63E17C();
    v6 = sub_1DD63E938();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DD63E860() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DD63E860() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t HFAccessoryLikeObject.elements.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  if (objc_msgSend(v0, sel_homeKitObject))
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      swift_unknownObjectRetain();
      v2 = HMMediaProfile.elements.getter();
LABEL_4:
      v3 = v2;
      swift_unknownObjectRelease_n();
      return v3;
    }
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      swift_unknownObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      swift_unknownObjectRetain();
      v2 = HMMediaSystem.leafElements.getter();
      goto LABEL_4;
    }
    swift_unknownObjectRelease();
  }
  v13 = MEMORY[0x1E0DEE9D8];
  v5 = objc_msgSend(v0, sel_services);
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  sub_1DD352A70((unint64_t *)&qword_1F03E4AF0, (unint64_t *)&qword_1F03E41C0);
  v6 = sub_1DD63E398();

  v7 = sub_1DD40DACC(v6);
  swift_bridgeObjectRelease();
  v8 = sub_1DD396E4C(v7, (uint64_t)&protocol witness table for HMService);
  swift_release();
  sub_1DD396FC8(v8);
  v9 = objc_msgSend(v1, sel_profiles);
  sub_1DD352AB0(0, &qword_1F03E46F0);
  sub_1DD352A70(&qword_1F03E48D8, &qword_1F03E46F0);
  v10 = sub_1DD63E398();

  v11 = sub_1DD40DAE8(v10);
  swift_bridgeObjectRelease();
  v12 = sub_1DD396E4C(v11, (uint64_t)&protocol witness table for HMAccessoryProfile);
  swift_release();
  sub_1DD396FC8(v12);
  return v13;
}

uint64_t sub_1DD396E4C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1DD3C7F2C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v7 = 0;
      do
      {
        v8 = MEMORY[0x1DF0DA2C0](v7, a1);
        v10 = *(_QWORD *)(v17 + 16);
        v9 = *(_QWORD *)(v17 + 24);
        if (v10 >= v9 >> 1)
          sub_1DD3C7F2C(v9 > 1, v10 + 1, 1);
        ++v7;
        *(_QWORD *)(v17 + 16) = v10 + 1;
        v11 = v17 + 16 * v10;
        *(_QWORD *)(v11 + 32) = v8;
        *(_QWORD *)(v11 + 40) = a2;
      }
      while (v4 != v7);
    }
    else
    {
      v12 = (id *)(a1 + 32);
      do
      {
        v13 = *(_QWORD *)(v17 + 16);
        v14 = *(_QWORD *)(v17 + 24);
        v15 = *v12;
        if (v13 >= v14 >> 1)
          sub_1DD3C7F2C(v14 > 1, v13 + 1, 1);
        *(_QWORD *)(v17 + 16) = v13 + 1;
        v16 = v17 + 16 * v13;
        *(_QWORD *)(v16 + 32) = v15;
        *(_QWORD *)(v16 + 40) = a2;
        ++v12;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD396FC8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1DD3E4DE8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t HFAccessoryLikeObject.components.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _UNKNOWN **v4;
  uint64_t v5;

  if (objc_msgSend(v0, sel_homeKitObject))
  {
    objc_opt_self();
    v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      v2 = v1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
      result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1DD667A30;
      v4 = &protocol witness table for HMServiceGroup;
LABEL_6:
      *(_QWORD *)(result + 32) = v2;
      *(_QWORD *)(result + 40) = v4;
      return result;
    }
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      v2 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
      result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1DD667A30;
      v4 = &protocol witness table for HMMediaSystem;
      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1DD397224(uint64_t *a1@<X8>)
{
  HMAccessoryProfile.capabilities.getter(a1);
}

void HMAccessoryProfile.capabilities.getter(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v3 = 45;
    v4 = v1;
    v5 = HMMediaProfile.elements.getter();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = v5 + 40;
      do
      {
        if (*(id *)(v7 - 8) != v4)
        {
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)v7 + 8) + 8))(&v9, ObjectType);
          v3 |= v9;
        }
        v7 += 16;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    v3 = 0;
  }
  *a1 = v3;
}

uint64_t _sSo24HFAccessoryListUtilitiesC4HomeE25sortedAccessoryTypeGroupsSaySo0aG5GroupCGvgZ_0()
{
  uint64_t v0;
  void *v1;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD668030;
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = objc_msgSend(v1, sel_climateAccessoryTypeGroup);
  *(_QWORD *)(v0 + 40) = objc_msgSend(v1, sel_lightAccessoryTypeGroup);
  *(_QWORD *)(v0 + 48) = objc_msgSend(v1, sel_securityAccessoryTypeGroup);
  *(_QWORD *)(v0 + 56) = objc_msgSend(v1, sel_mediaAccessoryTypeGroup);
  *(_QWORD *)(v0 + 64) = objc_msgSend(v1, sel_waterAccessoryTypeGroup);
  sub_1DD63E20C();
  v2 = objc_msgSend(v1, sel_otherAccessoryTypeGroup);
  MEMORY[0x1DF0D9DA4]();
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DD63E224();
  sub_1DD63E254();
  sub_1DD63E20C();
  return v0;
}

void sub_1DD39E778(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DD39E964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t type metadata accessor for AccessoryCategoryReorderableItemList()
{
  return objc_opt_self();
}

char *sub_1DD39F784(uint64_t a1)
{
  void *v1;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;

  v3 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for HomeDashboardReorderableItemList();
  v4 = (char *)objc_msgSendSuper2(&v14, sel_initWithApplicationDataContainer_category_, a1, v3);

  v5 = OBJC_IVAR___HFReorderableItemList_sortedIdentifiers;
  if (!*(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR___HFReorderableItemList_sortedIdentifiers] + 16))
  {
    objc_opt_self();
    v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v4;
      swift_unknownObjectRetain();
      v9 = objc_msgSend(v7, sel_hf_reorderableRoomsList);
      v10 = objc_msgSend(v9, sel_sortedHomeKitObjectIdentifiers);

      sub_1DD63D7C8();
      v11 = sub_1DD63E1F4();

      v12 = sub_1DD404040(v11);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v4[v5] = v12;

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

id ReorderableItemList.init(applicationDataContainer:category:)(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;
  objc_super v13;
  unint64_t v14;
  unint64_t v15;

  v14 = 0xD000000000000019;
  v15 = 0x80000001DD66F1E0;
  sub_1DD63E188();
  v3 = &v1[OBJC_IVAR___HFReorderableItemList_applicationDataKey];
  *(_QWORD *)v3 = 0xD000000000000019;
  *((_QWORD *)v3 + 1) = 0x80000001DD66F1E0;
  v4 = v1;
  v5 = objc_msgSend(a1, sel_applicationData);
  v6 = (void *)sub_1DD63E11C();
  v7 = objc_msgSend(v5, sel_objectForKeyedSubscript_, v6);

  if (v7
    && (v14 = (unint64_t)v7,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5AE0),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E53B0),
        swift_dynamicCast()))
  {
    v8 = v12;
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v4[OBJC_IVAR___HFReorderableItemList_sortedIdentifiers] = v8;

  v9 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for ReorderableItemList();
  v10 = objc_msgSendSuper2(&v13, sel_initWithApplicationDataContainer_category_, a1, v9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t type metadata accessor for ReorderableItemList()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DashboardReorderableItemList()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HomeDashboardReorderableItemList()
{
  return objc_opt_self();
}

BOOL sub_1DD39FCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DD39FEDC();
  v1 = sub_1DD63E554();
  v3 = v2;
  v4 = sub_1DD63E554();
  v6 = v5;
  v7 = *(_QWORD **)(v0 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  v8 = sub_1DD3A1C84(v1, v3, v7);
  v10 = v9;
  v11 = sub_1DD3A1C84(v4, v6, v7);
  if (((v10 | v12) & 1) != 0)
  {
    v15 = sub_1DD39FF20(v1, v3, v4, v6);
    if (v15 == 2)
    {
      v15 = sub_1DD3A0234(v1, v3, v4, v6);
      if (v15 == 2)
        v15 = sub_1DD3A0584();
    }
    v14 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8 < v13;
  }
  return v14;
}

unint64_t sub_1DD39FEDC()
{
  unint64_t result;

  result = qword_1F03E3FF0;
  if (!qword_1F03E3FF0)
  {
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F03E3FF0);
  }
  return result;
}

uint64_t sub_1DD39FF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned int v17;

  v9 = *(_QWORD **)(v4 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  sub_1DD3A1C84(a1, a2, v9);
  v11 = v10;
  sub_1DD3A1C84(a3, a4, v9);
  v13 = v12;
  if (a1 == 0x655373656E656373 && a2 == 0xED00006E6F697463 || (sub_1DD63E860() & 1) != 0)
  {
    v14 = 1;
  }
  else if (a1 == 0x53736172656D6163 && a2 == 0xEE006E6F69746365)
  {
    v14 = 0;
  }
  else
  {
    v14 = 0;
    if ((sub_1DD63E860() & 1) == 0)
    {
      v14 = 2;
      if (a1 != 0xD000000000000010 || a2 != 0x80000001DD66EC10)
      {
        if ((sub_1DD63E860() & 1) != 0)
          v14 = 2;
        else
          v14 = 3;
      }
    }
  }
  if (a3 == 0x655373656E656373 && a4 == 0xED00006E6F697463 || (sub_1DD63E860() & 1) != 0)
  {
    v15 = 1;
  }
  else if (a3 == 0x53736172656D6163 && a4 == 0xEE006E6F69746365)
  {
    v15 = 0;
  }
  else
  {
    v15 = 0;
    if ((sub_1DD63E860() & 1) == 0)
    {
      v15 = 2;
      if (a3 != 0xD000000000000010 || a4 != 0x80000001DD66EC10)
      {
        if ((sub_1DD63E860() & 1) != 0)
          v15 = 2;
        else
          v15 = 3;
      }
    }
  }
  if ((v11 & 1) != 0)
  {
    if ((v13 & 1) != 0)
    {
      if (v15 == 3)
        v17 = 2;
      else
        v17 = v14 < v15;
      if (v14 == 3)
        return 2;
      else
        return v17;
    }
    else
    {
      return v14 != 3;
    }
  }
  else if ((v13 & 1) != 0)
  {
    return v15 == 3;
  }
  else
  {
    return 2;
  }
}

uint64_t sub_1DD3A0234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v8;
  unsigned __int8 v9;
  int v10;
  unsigned int v11;

  if (a1 == 0x655373656E656373 && a2 == 0xED00006E6F697463 || (sub_1DD63E860() & 1) != 0)
  {
    v8 = 1;
  }
  else if (a1 == 0x53736172656D6163 && a2 == 0xEE006E6F69746365)
  {
    v8 = 0;
  }
  else
  {
    v8 = 0;
    if ((sub_1DD63E860() & 1) == 0)
    {
      v8 = 2;
      if (a1 != 0xD000000000000010 || a2 != 0x80000001DD66EC10)
      {
        if ((sub_1DD63E860() & 1) != 0)
          v8 = 2;
        else
          v8 = 3;
      }
    }
  }
  if (a3 == 0x655373656E656373 && a4 == 0xED00006E6F697463 || (sub_1DD63E860() & 1) != 0)
  {
    v9 = 1;
  }
  else if (a3 == 0x53736172656D6163 && a4 == 0xEE006E6F69746365)
  {
    v9 = 0;
  }
  else
  {
    v9 = 0;
    if ((sub_1DD63E860() & 1) == 0)
    {
      v9 = 2;
      if (a3 != 0xD000000000000010 || a4 != 0x80000001DD66EC10)
      {
        if ((sub_1DD63E860() & 1) != 0)
          v9 = 2;
        else
          v9 = 3;
      }
    }
  }
  if (v8 == v9)
    v10 = 2;
  else
    v10 = v8 < v9;
  if (v9 == 3)
    v11 = 1;
  else
    v11 = v10;
  if (v8 == 3)
    return 2 * (v9 == 3);
  else
    return v11;
}

uint64_t sub_1DD3A0584()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t result;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v35 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v35 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v35 - v12;
  if (!objc_msgSend(v1, sel_applicationDataContainer))
    return 2;
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    return 2;
  }
  v15 = (void *)v14;
  sub_1DD63D774();
  sub_1DD63D774();
  v16 = sub_1DD63D7C8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v13, 1, v16);
  v36 = 0;
  v20 = 0;
  if (v19 != 1)
  {
    sub_1DD3A08FC((uint64_t)v13, (uint64_t)v8);
    result = v18(v8, 1, v16);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_15;
    }
    v22 = (void *)sub_1DD63D78C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
    v23 = objc_msgSend(v15, sel_hf_roomWithIdentifier_, v22);

    v24 = v17;
    v25 = objc_msgSend(v23, sel_hf_displayName);

    v36 = sub_1DD63E14C();
    v27 = v26;

    v17 = v24;
    v20 = v27;
  }
  if (v18(v11, 1, v16) == 1)
  {
    v28 = 0;
    v29 = 0;
LABEL_12:
    v30 = sub_1DD3A0944(v36, v20, v28, v29);
    swift_unknownObjectRelease();
    sub_1DD3A08BC((uint64_t)v11);
    sub_1DD3A08BC((uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30;
  }
  sub_1DD3A08FC((uint64_t)v11, (uint64_t)v5);
  result = v18(v5, 1, v16);
  if ((_DWORD)result != 1)
  {
    v31 = (void *)sub_1DD63D78C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    v32 = objc_msgSend(v15, sel_hf_roomWithIdentifier_, v31);

    v33 = objc_msgSend(v32, sel_hf_displayName);
    v28 = sub_1DD63E14C();
    v29 = v34;

    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DD3A08BC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD3A08FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD3A0944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
    return 2 * (a4 == 0);
  if (!a4)
    return 1;
  if (a1 == a3 && a2 == a4 || (sub_1DD63E860() & 1) != 0)
    return 2;
  return sub_1DD63E860() & 1;
}

uint64_t sub_1DD3A1564(void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378370);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (objc_msgSend(a1, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    objc_opt_self();
    v6 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_sourceItem);
  }
  else
  {
    v6 = a1;
  }
  v7 = v6;
  v8 = swift_dynamicCastObjCProtocolConditional();
  if (!v8)
  {
    v11 = v7;
LABEL_17:

    MEMORY[0x1E0C80A78](v25);
    debug_assert(_:_:file:line:)(sub_1DD409FF0, 0, sub_1DD41B480);
    v23 = 1;
    return v23 & 1;
  }
  v9 = (void *)v8;
  if (objc_msgSend(a2, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    objc_opt_self();
    v10 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_sourceItem);
  }
  else
  {
    v10 = a2;
  }
  v11 = v10;
  v12 = swift_dynamicCastObjCProtocolConditional();
  if (!v12)
  {

    goto LABEL_17;
  }
  v13 = (void *)v12;
  v14 = (*(uint64_t (**)(void *, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA0))(v9, v12);
  if (v14 == 2 && (v14 = sub_1DD41C1D4(v9, v13), v14 == 2))
  {
    v15 = objc_msgSend(v9, sel_uuidString, &unk_1F03F2320, &unk_1F03F2320);
    v16 = sub_1DD63E14C();
    v18 = v17;

    v19 = objc_msgSend(v13, sel_uuidString);
    v20 = sub_1DD63E14C();
    v22 = v21;

    if (v16 == v20 && v18 == v22)
      v23 = 0;
    else
      v23 = sub_1DD63E860();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    v24 = v14;

    v23 = v24 & 1;
  }
  return v23 & 1;
}

uint64_t sub_1DD3A181C(void *a1, void *a2)
{
  uint64_t result;

  result = sub_1DD3A186C(a1, a2);
  if (result == 2)
    return sub_1DD3A19B8();
  return result;
}

uint64_t sub_1DD3A186C(void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = OBJC_IVAR___HFReorderableItemList_sortedIdentifiers;
  v6 = *(_QWORD **)((char *)v2 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(a1, sel_uuidString);
  v8 = sub_1DD63E14C();
  v10 = v9;

  v11 = sub_1DD3A1C84(v8, v10, v6);
  LOBYTE(v8) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD **)((char *)v2 + v5);
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(a2, sel_uuidString);
  v15 = sub_1DD63E14C();
  v17 = v16;

  v18 = sub_1DD3A1C84(v15, v17, v13);
  LOBYTE(v8) = v8 | v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return (*(uint64_t (**)(void *, void *))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xB8))(a1, a2);
  else
    return v11 < v18;
}

uint64_t sub_1DD3A19B8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  uint64_t ObjCClassFromObject;
  _BOOL4 v5;
  uint64_t result;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v0 = objc_msgSend((id)objc_opt_self(), sel_categorySortOrder);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378438);
  v1 = sub_1DD63E1F4();

  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  ObjCClassFromObject = swift_getObjCClassFromObject();
  if (ObjCClassFromMetadata == ObjCClassFromObject)
  {
    v7 = 0;
    v8 = 0;
  }
  else
  {
    if (v2 == 1)
    {
      v5 = ObjCClassFromMetadata != swift_getObjCClassFromObject();
      swift_bridgeObjectRelease();
      return (2 * v5);
    }
    v9 = ObjCClassFromObject;
    v10 = 5;
    while (1)
    {
      v7 = v10 - 4;
      result = swift_getObjCClassFromMetadata();
      v8 = result != v9;
      if (result == v9)
        break;
      v11 = v10 - 3;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      ++v10;
      if (v11 == v2)
      {
        v7 = 0;
        break;
      }
    }
  }
  v12 = swift_getObjCClassFromObject();
  if (ObjCClassFromMetadata == v12)
  {
    swift_bridgeObjectRelease();
    if (v8)
      return 0;
    v15 = 0;
  }
  else
  {
    if (v2 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      if (v8)
        return 2;
      else
        return 1;
    }
    v13 = v12;
    v14 = 5;
    while (1)
    {
      v15 = v14 - 4;
      result = swift_getObjCClassFromMetadata();
      if (result == v13)
        break;
      v16 = v14 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_29;
      ++v14;
      if (v16 == v2)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    if (v8)
      return 0;
  }
  if (v7 == v15)
    return 2;
  else
    return v7 < v15;
}

uint64_t sub_1DD3A1B78(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned int v20;

  v5 = OBJC_IVAR___HFReorderableItemList_sortedIdentifiers;
  v6 = *(_QWORD **)(v2 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(a1, sel_uuidString);
  v8 = sub_1DD63E14C();
  v10 = v9;

  sub_1DD3A1C84(v8, v10, v6);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD **)(v2 + v5);
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(a2, sel_uuidString);
  v15 = sub_1DD63E14C();
  v17 = v16;

  sub_1DD3A1C84(v15, v17, v13);
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    v20 = 1;
  else
    v20 = 2;
  if ((v12 & 1) != 0)
    return 2 * (v19 & 1u);
  else
    return v20;
}

uint64_t sub_1DD3A1C84(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1DD63E860() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_1DD63E860();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

void sub_1DD3A1E8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1DD3A1FFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1DD3A3458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD3A36B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromHFWallpaperVariant(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("original");
  else
    return off_1EA73B558[a1 - 1];
}

uint64_t HFForceMacLikeBehavior()
{
  void *v0;
  uint64_t v1;

  __HFForceMacLikeBehavior_block_invoke();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLValue");

  return v1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

BOOL HFLocationServicesAvailableForAuthorizationStatus(int a1)
{
  return (a1 - 3) < 2;
}

BOOL HFCheckAndClearResetHomeTheaterPreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetHomeTheaterOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetHomeTheaterOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetNaturalLightingPreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetNaturalLightingOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetNaturalLightingOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetIdentifyVoicePreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetIdentifyVoiceOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetIdentifyVoiceOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetWalletKeyExpressModePreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetWalletKeyExpressModeOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetWalletKeyExpressModeOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetAccessoryFirmwareUpdatePreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetAccessoryFirmwareUpdateOnboarding"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetAccessoryFirmwareUpdateOnboarding"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetCameraRecordingPreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetCameraRecordingOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetCameraRecordingOnboardingKey"));
  return v0 == 2;
}

BOOL HFForceTipsOnboarding()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceTipsOnboardingKey")) == 2;
}

BOOL HFForceStoreToUseStagingURL()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceStoreUseStagingURLKey")) == 2;
}

BOOL HFCheckAndClearResetTVViewingProfilesPreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetTVViewingProfilesOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetTVViewingProfilesOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetAnnouncePreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetAnnounceOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetAnnounceOnboardingKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetRedesignMigrationPreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("resetRedesignMigrationKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("resetRedesignMigrationKey"));
  return v0 == 2;
}

BOOL HFCheckAndClearResetAccessCodePreference()
{
  uint64_t v0;

  v0 = HFPreferencesBooleanValueForKey(CFSTR("HFResetAccessCodeOnboardingKey"));
  if (v0 == 2)
    HFPreferencesRemoveValueForKey(CFSTR("HFResetAccessCodeOnboardingKey"));
  return v0 == 2;
}

BOOL HFForceNewFeaturesOnboarding()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceNewFeaturesOnboardingKey")) == 2;
}

BOOL HFForceFirstTimeOnboarding()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceFirstTimeOnboardingKey")) == 2;
}

void sub_1DD3A8E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL HFForceSafetyAndSecurityOnboarding()
{
  return HFPreferencesBooleanValueForKey(CFSTR("forceSafetyAndSecurityOnboardingKey")) == 2;
}

BOOL HFForceAllowAutomationCreation()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceAllowAutomationCreation")) == 2;
}

BOOL HFForceNaturalLightingOnboarding()
{
  return HFPreferencesBooleanValueForKey(CFSTR("forceNaturalLightingOnboardingKey")) == 2;
}

BOOL HKFakeFeatureOnboardingSettings()
{
  return HFPreferencesBooleanValueForKey(CFSTR("fakeFeatureOnboardingSettings")) == 2;
}

uint64_t HFPreferencesBooleanValueForKey(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = _InstallHomePreferencesObserverIfNecessary_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&_InstallHomePreferencesObserverIfNecessary_onceToken, &__block_literal_global_225);
  v3 = HFPreferencesBooleanValueForKeyWithinDomain(v2, CFSTR("com.apple.Home"));

  return v3;
}

uint64_t HFPreferencesBooleanValueForKeyWithinDomain(void *a1, void *a2)
{
  uint64_t v3;
  __CFString *v4;
  __CFString *v5;
  int AppBooleanValue;
  uint64_t v7;
  Boolean keyExistsAndHasValidFormat;

  v3 = _InstallHomePreferencesObserverIfNecessary_onceToken;
  v4 = a2;
  v5 = a1;
  if (v3 != -1)
    dispatch_once(&_InstallHomePreferencesObserverIfNecessary_onceToken, &__block_literal_global_225);
  keyExistsAndHasValidFormat = 0;
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v5, v4, &keyExistsAndHasValidFormat);

  v7 = 1;
  if (AppBooleanValue)
    v7 = 2;
  if (keyExistsAndHasValidFormat)
    return v7;
  else
    return 0;
}

void sub_1DD3A9B9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t HFForceRemoteAccessStateAvailable()
{
  void *v0;
  uint64_t v1;

  __HFForceRemoteAccessStateAvailable_block_invoke();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLValue");

  return v1;
}

id HFValueSetStringProviderWithMap(const char *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD aBlock[4];
  id v11;

  v3 = a2;
  if (qword_1ED379E08 != -1)
    dispatch_once(&qword_1ED379E08, &__block_literal_global_284);
  v4 = (id)qword_1ED379E10;
  NSStringFromSelector(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "na_objectForKey:withDefaultValue:", v5, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __HFValueSetStringProviderWithMap_block_invoke_3;
  aBlock[3] = &unk_1EA73F758;
  v11 = v6;
  v7 = v6;
  v8 = _Block_copy(aBlock);

  return v8;
}

void sub_1DD3ABEB0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1DD3ADC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD3AE6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3AF128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a14, 8);
  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_1DD3B3F24()
{
  unint64_t result;

  result = qword_1ED3782F0;
  if (!qword_1ED3782F0)
  {
    result = MEMORY[0x1DF0DB2A4](&unk_1DD6680EC, &type metadata for HomeEnergyFeatures);
    atomic_store(result, (unint64_t *)&qword_1ED3782F0);
  }
  return result;
}

void sub_1DD3B4840(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1DD3B5888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    (*(void (**)(void))(a9 + 16))();
  _Unwind_Resume(exception_object);
}

void sub_1DD3B58C8(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x1DD3B58A4);
}

void sub_1DD3B5E54(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1DD3B60CC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1DD3B61B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3B6298(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD3B789C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3B7A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *_HFStandardIndexPathDescription(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  __CFString *v8;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB3940];
    v2 = (void *)MEMORY[0x1E0CB37E8];
    v3 = a1;
    objc_msgSend(v2, "numberWithInteger:", objc_msgSend(v3, "section"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)MEMORY[0x1E0CB37E8];
    v6 = objc_msgSend(v3, "row");

    objc_msgSend(v5, "numberWithInteger:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringWithFormat:", CFSTR("{%@,%@}"), v4, v7);
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = CFSTR("(null)");
  }
  return v8;
}

void HFConvertHSBToRGB(double *a1, double *a2, double *a3, long double a4, double a5, double a6)
{
  long double v11;
  int v12;
  long double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v11 = fmod(a4, 1.0) * 6.0;
  v12 = (int)v11;
  v13 = v11 - (double)(int)v11;
  v14 = (1.0 - a5) * a6;
  v15 = (1.0 - a5 * v13) * a6;
  v16 = (1.0 - a5 * (1.0 - v13)) * a6;
  v17 = a6;
  v18 = v16;
  switch(v12)
  {
    case 0:
      goto LABEL_8;
    case 1:
      v17 = v15;
      v18 = a6;
      goto LABEL_8;
    case 2:
      v17 = (1.0 - a5) * a6;
      v18 = a6;
      v14 = v16;
      goto LABEL_8;
    case 3:
      v17 = (1.0 - a5) * a6;
      v18 = v15;
      goto LABEL_6;
    case 4:
      v17 = v16;
      v18 = (1.0 - a5) * a6;
LABEL_6:
      v14 = a6;
      goto LABEL_8;
    case 5:
      v17 = a6;
      v18 = (1.0 - a5) * a6;
      v14 = v15;
LABEL_8:
      *a1 = v17;
      *a2 = v18;
      *a3 = v14;
      break;
    default:
      return;
  }
}

void sub_1DD3BD934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3BDC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3BFC38(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1DD3C0108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C0580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C16CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C18A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C1ADC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1DD3C1D40(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;
  id *v7;

  v7 = v3;
  objc_destroyWeak(v7);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 104));
  _Unwind_Resume(a1);
}

void sub_1DD3C1FA0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  uint64_t v5;

  objc_destroyWeak(v2);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_1DD3C218C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;
  id *v5;

  v5 = v2;
  objc_destroyWeak(v5);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1DD3C24C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD3C2744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C305C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1DD3C3160(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1DD3C3230(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1DD3714B4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1DD3714B4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1DD3C3230(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DD63E548();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1DD3C7CC0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1DD63E704();
  if (!v8)
  {
    sub_1DD63E794();
    __break(1u);
LABEL_17:
    result = sub_1DD63E7F4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_1DD3C3B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C4008(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1DD3C4A70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD3C50D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD3C729C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1DD3C740C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  unint64_t v49;
  id v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t ObjectType;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;

  switch(a1)
  {
    case 1:
      if (!a3)
        goto LABEL_4;
      v4 = swift_bridgeObjectRetain();
      v5 = sub_1DD3C82FC(v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v6 = sub_1DD402B24(v5, a3);
      swift_release();
      swift_bridgeObjectRelease();
      v7 = sub_1DD402838(v6);
      swift_bridgeObjectRelease();
      return v7;
    case 2:
      v11 = swift_bridgeObjectRetain();
      v12 = sub_1DD3C82FC(v11);
      swift_bridgeObjectRelease();
      v86 = MEMORY[0x1E0DEE9D8];
      if ((v12 & 0x8000000000000000) == 0 && (v12 & 0x4000000000000000) == 0)
      {
        v13 = *(_QWORD *)(v12 + 16);
        swift_retain();
        if (!v13)
          goto LABEL_94;
        goto LABEL_10;
      }
      swift_retain();
      v13 = sub_1DD63E7B8();
      if (v13)
      {
LABEL_10:
        if (v13 < 1)
        {
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          result = sub_1DD63E7F4();
          __break(1u);
          return result;
        }
        v14 = 0;
        while (1)
        {
          if ((v12 & 0xC000000000000001) != 0)
            v19 = (id)MEMORY[0x1DF0DA2C0](v14, v12);
          else
            v19 = *(id *)(v12 + 8 * v14 + 32);
          v20 = v19;
          if (objc_msgSend(v19, sel_homeKitObject))
          {
            objc_opt_self();
            v21 = swift_dynamicCastObjCClass();
            if (v21)
            {
              v22 = v21;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
              v23 = swift_allocObject();
              v15 = v23;
              *(_OWORD *)(v23 + 16) = xmmword_1DD667A30;
              *(_QWORD *)(v23 + 32) = v22;
              v24 = &protocol witness table for HMServiceGroup;
LABEL_23:
              *(_QWORD *)(v23 + 40) = v24;
              goto LABEL_14;
            }
            objc_opt_self();
            v25 = swift_dynamicCastObjCClass();
            if (v25)
            {
              v26 = v25;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
              v23 = swift_allocObject();
              v15 = v23;
              *(_OWORD *)(v23 + 16) = xmmword_1DD667A30;
              *(_QWORD *)(v23 + 32) = v26;
              v24 = &protocol witness table for HMMediaSystem;
              goto LABEL_23;
            }
            swift_unknownObjectRelease();
          }
          v15 = MEMORY[0x1E0DEE9D8];
LABEL_14:
          ++v14;
          v16 = sub_1DD41F7D4(v15);
          swift_bridgeObjectRelease();
          v83 = v16;
          v17 = HFAccessoryLikeObject.elements.getter();
          v18 = sub_1DD41F7E0(v17);
          swift_bridgeObjectRelease();
          sub_1DD41FC8C(v18);

          sub_1DD41FC8C(v83);
          if (v13 == v14)
            goto LABEL_82;
        }
      }
      goto LABEL_94;
    case 3:
      v27 = swift_bridgeObjectRetain();
      v28 = sub_1DD3C82FC(v27);
      swift_bridgeObjectRelease();
      v86 = MEMORY[0x1E0DEE9D8];
      if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
      {
        swift_retain();
        v29 = sub_1DD63E7B8();
        if (!v29)
        {
LABEL_94:
          swift_release_n();
          v76 = MEMORY[0x1E0DEE9D8];
LABEL_95:
          v77 = sub_1DD402838(v76);
          swift_bridgeObjectRelease();
          return v77;
        }
      }
      else
      {
        v29 = *(_QWORD *)(v28 + 16);
        swift_retain();
        if (!v29)
          goto LABEL_94;
      }
      if (v29 < 1)
        goto LABEL_98;
      v30 = 0;
      while (1)
      {
        if ((v28 & 0xC000000000000001) != 0)
          v35 = (id)MEMORY[0x1DF0DA2C0](v30, v28);
        else
          v35 = *(id *)(v28 + 8 * v30 + 32);
        v36 = v35;
        if (objc_msgSend(v35, sel_homeKitObject))
        {
          objc_opt_self();
          v37 = swift_dynamicCastObjCClass();
          if (v37)
          {
            v38 = v37;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
            v39 = swift_allocObject();
            v31 = v39;
            *(_OWORD *)(v39 + 16) = xmmword_1DD667A30;
            *(_QWORD *)(v39 + 32) = v38;
            v40 = &protocol witness table for HMServiceGroup;
LABEL_40:
            *(_QWORD *)(v39 + 40) = v40;
            goto LABEL_31;
          }
          objc_opt_self();
          v41 = swift_dynamicCastObjCClass();
          if (v41)
          {
            v42 = v41;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
            v39 = swift_allocObject();
            v31 = v39;
            *(_OWORD *)(v39 + 16) = xmmword_1DD667A30;
            *(_QWORD *)(v39 + 32) = v42;
            v40 = &protocol witness table for HMMediaSystem;
            goto LABEL_40;
          }
          swift_unknownObjectRelease();
        }
        v31 = MEMORY[0x1E0DEE9D8];
LABEL_31:
        ++v30;
        v32 = sub_1DD41F7D4(v31);
        swift_bridgeObjectRelease();
        v84 = v32;
        v33 = HFAccessoryLikeObject.elements.getter();
        v34 = sub_1DD41F7E0(v33);
        swift_bridgeObjectRelease();
        sub_1DD41FC8C(v34);

        sub_1DD41FC8C(v84);
        if (v29 == v30)
          goto LABEL_82;
      }
    case 4:
      v43 = swift_bridgeObjectRetain();
      v44 = sub_1DD3C82FC(v43);
      swift_bridgeObjectRelease();
      v86 = MEMORY[0x1E0DEE9D8];
      if (v44 < 0 || (v44 & 0x4000000000000000) != 0)
      {
        swift_retain();
        v45 = sub_1DD63E7B8();
        if (!v45)
          goto LABEL_94;
      }
      else
      {
        v45 = *(_QWORD *)(v44 + 16);
        swift_retain();
        if (!v45)
          goto LABEL_94;
      }
      v46 = 0;
      v81 = v44 & 0xC000000000000001;
      v78 = v44 + 32;
      v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v79 = v45;
      v80 = v44;
      while (2)
      {
        if (v81)
          v50 = (id)MEMORY[0x1DF0DA2C0](v46, v44);
        else
          v50 = *(id *)(v78 + 8 * v46);
        v48 = v50;
        v51 = __OFADD__(v46++, 1);
        if (v51)
          goto LABEL_87;
        v85 = HFAccessoryLikeObject.elements.getter();
        if (!objc_msgSend(v48, sel_homeKitObject))
          goto LABEL_80;
        objc_opt_self();
        v52 = swift_dynamicCastObjCClass();
        if (v52)
        {
          v53 = v52;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
          v54 = swift_allocObject();
          v55 = v54;
          *(_OWORD *)(v54 + 16) = xmmword_1DD667A30;
          *(_QWORD *)(v54 + 32) = v53;
          v56 = &protocol witness table for HMServiceGroup;
        }
        else
        {
          objc_opt_self();
          v57 = swift_dynamicCastObjCClass();
          if (!v57)
          {
            swift_unknownObjectRelease();
LABEL_80:
            v55 = (uint64_t)v47;
            v59 = v47[2];
            if (v59)
              goto LABEL_58;
LABEL_81:
            v61 = v47;
LABEL_47:
            swift_bridgeObjectRelease();
            sub_1DD396FC8((uint64_t)v61);
            v49 = sub_1DD41F7E0(v85);

            swift_bridgeObjectRelease();
            sub_1DD41FC8C(v49);
            if (v46 == v45)
            {
LABEL_82:
              swift_release_n();
              v76 = v86;
              goto LABEL_95;
            }
            continue;
          }
          v58 = v57;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DF0);
          v54 = swift_allocObject();
          v55 = v54;
          *(_OWORD *)(v54 + 16) = xmmword_1DD667A30;
          *(_QWORD *)(v54 + 32) = v58;
          v56 = &protocol witness table for HMMediaSystem;
        }
        break;
      }
      *(_QWORD *)(v54 + 40) = v56;
      v59 = *(_QWORD *)(v55 + 16);
      if (!v59)
        goto LABEL_81;
LABEL_58:
      v82 = v48;
      swift_bridgeObjectRetain();
      v60 = (uint64_t *)(v55 + 40);
      v61 = v47;
      while (1)
      {
        v62 = *v60;
        ObjectType = swift_getObjectType();
        v64 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 24);
        swift_unknownObjectRetain();
        v65 = v64(ObjectType, v62);
        swift_unknownObjectRelease();
        v66 = *(_QWORD *)(v65 + 16);
        v67 = v61[2];
        v68 = v67 + v66;
        if (__OFADD__(v67, v66))
          break;
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if ((_DWORD)isUniquelyReferenced_nonNull_native && v68 <= v61[3] >> 1)
        {
          if (*(_QWORD *)(v65 + 16))
            goto LABEL_70;
        }
        else
        {
          if (v67 <= v68)
            v70 = v67 + v66;
          else
            v70 = v67;
          v61 = sub_1DD3E4DE8(isUniquelyReferenced_nonNull_native, v70, 1, v61);
          if (*(_QWORD *)(v65 + 16))
          {
LABEL_70:
            v71 = v61[2];
            if ((v61[3] >> 1) - v71 < v66)
              goto LABEL_85;
            v72 = (unint64_t)&v61[2 * v71 + 4];
            if (v65 + 32 < v72 + 16 * v66 && v72 < v65 + 32 + 16 * v66)
              goto LABEL_99;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
            swift_arrayInitWithCopy();
            if (v66)
            {
              v74 = v61[2];
              v51 = __OFADD__(v74, v66);
              v75 = v74 + v66;
              if (v51)
                goto LABEL_86;
              v61[2] = v75;
            }
            goto LABEL_60;
          }
        }
        if (v66)
          goto LABEL_84;
LABEL_60:
        swift_bridgeObjectRelease();
        v60 += 2;
        if (!--v59)
        {
          swift_bridgeObjectRelease();
          v45 = v79;
          v44 = v80;
          v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v48 = v82;
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3783C8);
      v77 = sub_1DD63E7AC();
      swift_release_n();
      return v77;
    default:
LABEL_4:
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1DD3C82FC(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if (v10 < 0 || (v10 & 0x4000000000000000) != 0)
        goto LABEL_88;
      sub_1DD63E878();
      swift_release();
      return v10;
  }
}

uint64_t sub_1DD3C7CC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1DD3C7D54(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DD3E50FC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1DD3E50FC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DD3C7D54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1DD3C7EC8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1DD63E6C8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1DD63E794();
      __break(1u);
LABEL_10:
      v2 = sub_1DD63E194();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1DD63E7F4();
    __break(1u);
LABEL_14:
    result = sub_1DD63E794();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1DD3C7EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378420);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DD3C7F2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DD3C7F48(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DD3C7F48(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5590);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3C80D0(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = sub_1DD63E5E4();
    if (v8)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
    v9 = (_QWORD *)swift_allocObject();
    v10 = _swift_stdlib_malloc_size(v9);
    v11 = v10 - 32;
    if (v10 < 32)
      v11 = v10 - 25;
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1DD40F424(&v14, v9 + 4, v8, a1, a2, a3, a4);
  result = sub_1DD3DEBAC();
  if (v12 == (_QWORD *)v8)
    return (uint64_t)v9;
  __break(1u);
  return result;
}

uint64_t sub_1DD3C81F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3C82FC(uint64_t a1)
{
  return sub_1DD3C80D0(a1, &qword_1ED3783B8, (uint64_t)off_1EA721780, (unint64_t *)&qword_1ED3783C0);
}

const __CFString *HFHomeAppBundleID()
{
  return CFSTR("com.apple.Home");
}

const __CFString *HFPlatformSpecificHomeAppBundleID()
{
  return CFSTR("com.apple.Home");
}

void sub_1DD3C920C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C933C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C94D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3C9AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3CA134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t HFForceNonInternalInstallBehavior()
{
  void *v0;
  uint64_t v1;

  __HFForceNonInternalInstallBehavior_block_invoke();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLValue");

  return v1;
}

void sub_1DD3CAEFC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DD3CB620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD3CC4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL HFPreferencesInternalDebuggingEnabled()
{
  _BOOL8 result;

  result = +[HFUtilities isInternalInstall](HFUtilities, "isInternalInstall");
  if (result)
    return HFPreferencesBooleanValueForKey(CFSTR("InternalDebuggingEnabled")) == 2;
  return result;
}

BOOL HFForceAccessoryNamingMigration()
{
  return HFPreferencesBooleanValueForKey(CFSTR("HFForceAccessoryNamingMigrationKey")) == 2;
}

void sub_1DD3CE7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromHMHomeManagerDataSyncState(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 7)
    return off_1EA72B6D8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMHomeManagerDataSyncState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DD63DB34();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], *(_QWORD *)(v0 + 16));
  sub_1DD63E428();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  v1 = sub_1DD63E2B4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

const __CFString *HFNanoHomeAppBundleID()
{
  return CFSTR("com.apple.NanoHome");
}

const __CFString *HFHomeUIServiceBundleID()
{
  return CFSTR("com.apple.Home.HomeUIService");
}

const __CFString *HFHomeControlServiceBundleID()
{
  return CFSTR("com.apple.Home.HomeControlService");
}

uint64_t sub_1DD3D3868(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1DD63E5E4();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1DD40F424(&v8, v3 + 4, v2, a1, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (unint64_t *)&qword_1ED378390);
  result = sub_1DD3DEBAC();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_1DD3D3978(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DD3DC9D8(a1, a2, a3, a4, &qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (uint64_t (*)(uint64_t, uint64_t))sub_1DD357884);
}

unint64_t sub_1DD3D3994()
{
  unint64_t result;

  result = qword_1ED3783F0;
  if (!qword_1ED3783F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3783F0);
  }
  return result;
}

uint64_t sub_1DD3D39D0()
{
  uint64_t result;

  sub_1DD3D3994();
  result = sub_1DD63E50C();
  qword_1ED379F38 = result;
  return result;
}

uint64_t sub_1DD3D3B04(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1DD3D3B4C(unint64_t a1)
{
  return sub_1DD358094(a1, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (unint64_t *)&qword_1ED378390, (void (*)(id *, uint64_t))sub_1DD358210);
}

unint64_t sub_1DD3D3B70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED378348;
  if (!qword_1ED378348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED378340);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED378348);
  }
  return result;
}

uint64_t sub_1DD3D3BBC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

unint64_t sub_1DD3D3BE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED378328;
  if (!qword_1ED378328)
  {
    v1 = sub_1DD63DF9C();
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED378328);
  }
  return result;
}

uint64_t sub_1DD3D3C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1DD3D3C7C()
{
  unint64_t result;

  result = qword_1F03E55D8;
  if (!qword_1F03E55D8)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for AccessoryElementCapabilities, &type metadata for AccessoryElementCapabilities);
    atomic_store(result, (unint64_t *)&qword_1F03E55D8);
  }
  return result;
}

unint64_t sub_1DD3D3CC0()
{
  unint64_t result;

  result = qword_1F03E55D0;
  if (!qword_1F03E55D0)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for AccessoryElementCapabilities, &type metadata for AccessoryElementCapabilities);
    atomic_store(result, (unint64_t *)&qword_1F03E55D0);
  }
  return result;
}

uint64_t sub_1DD3D3D04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD63D768();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ActivityEventStatusItem()
{
  uint64_t result;

  result = qword_1ED378318;
  if (!qword_1ED378318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD3D3DBC()
{
  return type metadata accessor for ActivityEventStatusItem();
}

void sub_1DD3D3DC4()
{
  qword_1F03ED480 = 0;
  qword_1F03ED488 = MEMORY[0x1E0DEA968];
}

void sub_1DD3D3DDC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  v4 = sub_1DD63E398();
  if ((v4 & 0xC000000000000001) == 0)
  {
    v7 = *(_QWORD *)(v4 + 16);
    v8 = a3;
    v9 = a1;
    if (v7 < 1)
      goto LABEL_4;
    goto LABEL_3;
  }
  v5 = a3;
  v6 = a1;
  if (sub_1DD63E5E4() >= 1)
LABEL_3:
    sub_1DD63D8DC();
LABEL_4:

  swift_bridgeObjectRelease();
}

uint64_t sub_1DD3D3ECC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  v5 = sub_1DD63E398();
  v6 = sub_1DD63E398();
  v7 = a3;
  v8 = a1;
  sub_1DD3D3FA0(v5, v6);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD3D3FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_1DD3D3868(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DD3956B4(a2);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v6 < 1)
      return swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_1DD3D3B4C(v4);
    swift_bridgeObjectRelease();
    sub_1DD63D8DC();
  }
  return swift_bridgeObjectRelease();
}

void sub_1DD3D42A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1DD3D45DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _sSo25HFCAPackageIconIdentifiera4HomeE8allCasesSayABGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t sub_1DD3D4600(uint64_t a1, uint64_t a2)
{
  return sub_1DD3D4A94(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1DD3D4618(uint64_t a1, uint64_t a2)
{
  return sub_1DD3D4A94(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1DD3D4630(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1DD63E134();
  *a2 = 0;
  return result;
}

uint64_t sub_1DD3D46A4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1DD63E140();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DD3D4720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DD63E14C();
  v2 = sub_1DD63E11C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1DD3D4760(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1DD3D476C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1DD3D4780@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1DD3D4794()
{
  sub_1DD353504(&qword_1F03E3B20, (uint64_t (*)(uint64_t))type metadata accessor for HFCAPackageIconIdentifier, (uint64_t)&unk_1DD667720);
  sub_1DD353504(&qword_1F03E3B28, (uint64_t (*)(uint64_t))type metadata accessor for HFCAPackageIconIdentifier, (uint64_t)&unk_1DD6676C0);
  return sub_1DD63E800();
}

uint64_t sub_1DD3D4818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DD63E14C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DD3D4840()
{
  sub_1DD353504((unint64_t *)&qword_1F03E3B50, (uint64_t (*)(uint64_t))type metadata accessor for HFItemResultKey, (uint64_t)&unk_1DD667324);
  sub_1DD353504(&qword_1F03E3B58, (uint64_t (*)(uint64_t))type metadata accessor for HFItemResultKey, (uint64_t)&unk_1DD6672C4);
  return sub_1DD63E800();
}

uint64_t sub_1DD3D48C4()
{
  sub_1DD353504(&qword_1F03E3B40, (uint64_t (*)(uint64_t))type metadata accessor for TileResizableSize, (uint64_t)&unk_1DD66747C);
  sub_1DD353504(&qword_1F03E3B48, (uint64_t (*)(uint64_t))type metadata accessor for TileResizableSize, (uint64_t)&unk_1DD66741C);
  return sub_1DD63E800();
}

uint64_t sub_1DD3D4948()
{
  sub_1DD353504((unint64_t *)&qword_1F03E3B30, (uint64_t (*)(uint64_t))type metadata accessor for HFItemUpdateOption, (uint64_t)&unk_1DD667908);
  sub_1DD353504(&qword_1F03E3B38, (uint64_t (*)(uint64_t))type metadata accessor for HFItemUpdateOption, (uint64_t)&unk_1DD667574);
  return sub_1DD63E800();
}

uint64_t sub_1DD3D49CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DD63E11C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DD3D4A10()
{
  sub_1DD353504(&qword_1F03E3B10, (uint64_t (*)(uint64_t))type metadata accessor for HFImageIconIdentifier, (uint64_t)&unk_1DD667878);
  sub_1DD353504(&qword_1F03E3B18, (uint64_t (*)(uint64_t))type metadata accessor for HFImageIconIdentifier, (uint64_t)&unk_1DD667818);
  return sub_1DD63E800();
}

uint64_t sub_1DD3D4A94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DD63E14C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DD3D4AD0()
{
  sub_1DD63E14C();
  sub_1DD63E17C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD3D4B10()
{
  uint64_t v0;

  sub_1DD63E14C();
  sub_1DD63E908();
  sub_1DD63E17C();
  v0 = sub_1DD63E938();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DD3D4B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1DD63E14C();
  v2 = v1;
  if (v0 == sub_1DD63E14C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1DD63E860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _sSo25HFCAPackageIconIdentifiera4HomeE8allCasesSayABGvgZ_0()
{
  uint64_t v0;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  __CFString *v14;
  __CFString *v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  __CFString *v19;
  __CFString *v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  __CFString *v29;
  __CFString *v30;
  __CFString *v31;
  __CFString *v32;
  __CFString *v33;
  __CFString *v34;
  __CFString *v35;
  __CFString *v36;
  __CFString *v37;
  __CFString *v38;
  __CFString *v39;
  __CFString *v40;
  __CFString *v41;
  __CFString *v42;
  __CFString *v43;
  __CFString *v44;
  __CFString *v45;
  __CFString *v46;
  __CFString *v47;
  __CFString *v48;
  __CFString *v49;
  __CFString *v50;
  __CFString *v51;
  __CFString *v52;
  __CFString *v53;
  __CFString *v54;
  __CFString *v55;
  __CFString *v56;
  __CFString *v57;
  __CFString *v58;
  __CFString *v59;
  __CFString *v60;
  __CFString *v61;
  __CFString *v62;
  __CFString *v63;
  __CFString *v64;
  __CFString *v65;
  __CFString *v66;
  __CFString *v67;
  __CFString *v68;
  __CFString *v69;
  __CFString *v70;
  __CFString *v71;
  __CFString *v72;
  __CFString *v73;
  __CFString *v74;
  __CFString *v75;
  __CFString *v76;
  __CFString *v77;
  __CFString *v78;
  __CFString *v79;
  __CFString *v80;
  __CFString *v81;
  __CFString *v82;
  __CFString *v83;
  __CFString *v84;
  __CFString *v85;
  __CFString *v86;
  __CFString *v87;
  __CFString *v88;
  __CFString *v89;
  __CFString *v90;
  __CFString *v91;
  __CFString *v92;
  __CFString *v93;
  __CFString *v94;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E3C20);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD667130;
  *(_QWORD *)(v0 + 32) = CFSTR("HFCAPackageIconIdentifierAirPurifier");
  *(_QWORD *)(v0 + 40) = CFSTR("HFCAPackageIconIdentifierHumidifier");
  *(_QWORD *)(v0 + 48) = CFSTR("HFCAPackageIconIdentifierDehumidifier");
  *(_QWORD *)(v0 + 56) = CFSTR("HFCAPackageIconIdentifierSpaceHeater");
  *(_QWORD *)(v0 + 64) = CFSTR("HFCAPackageIconIdentifierAirCooler");
  *(_QWORD *)(v0 + 72) = CFSTR("HFCAPackageIconIdentifierWindowCooler");
  *(_QWORD *)(v0 + 80) = CFSTR("HFCAPackageIconIdentifierSwitch");
  *(_QWORD *)(v0 + 88) = CFSTR("HFCAPackageIconIdentifierSwitch2");
  *(_QWORD *)(v0 + 96) = CFSTR("HFCAPackageIconIdentifierProgrammableSwitch");
  *(_QWORD *)(v0 + 104) = CFSTR("HFCAPackageIconIdentifierGarageDoor");
  *(_QWORD *)(v0 + 112) = CFSTR("HFCAPackageIconIdentifierGarageDoorDoubleBay");
  *(_QWORD *)(v0 + 120) = CFSTR("HFCAPackageIconIdentifierDoor");
  *(_QWORD *)(v0 + 128) = CFSTR("HFCAPackageIconIdentifierDoorLeftHand");
  *(_QWORD *)(v0 + 136) = CFSTR("HFCAPackageIconIdentifierSlidingDoor");
  *(_QWORD *)(v0 + 144) = CFSTR("HFCAPackageIconIdentifierSlidingDoorRightHand");
  *(_QWORD *)(v0 + 152) = CFSTR("HFCAPackageIconIdentifierGate");
  *(_QWORD *)(v0 + 160) = CFSTR("HFCAPackageIconIdentifierFrenchDoor");
  *(_QWORD *)(v0 + 168) = CFSTR("HFCAPackageIconIdentifierDeskFan");
  *(_QWORD *)(v0 + 176) = CFSTR("HFCAPackageIconIdentifierCeilingFan");
  *(_QWORD *)(v0 + 184) = CFSTR("HFCAPackageIconIdentifierCeilingFanWithLight");
  *(_QWORD *)(v0 + 192) = CFSTR("HFCAPackageIconIdentifierFloorFan");
  *(_QWORD *)(v0 + 200) = CFSTR("HFCAPackageIconIdentifierLightbulb");
  *(_QWORD *)(v0 + 208) = CFSTR("HFCAPackageIconIdentifierLightBulb2");
  *(_QWORD *)(v0 + 216) = CFSTR("HFCAPackageIconIdentifierLightbulbLED");
  *(_QWORD *)(v0 + 224) = CFSTR("HFCAPackageIconIdentifierLightbulbLEDWide");
  *(_QWORD *)(v0 + 232) = CFSTR("HFCAPackageIconIdentifierRecessedLight3");
  *(_QWORD *)(v0 + 240) = CFSTR("HFCAPackageIconIdentifierLightRibbon");
  *(_QWORD *)(v0 + 248) = CFSTR("HFCAPackageIconIdentifierDeskLamp");
  *(_QWORD *)(v0 + 256) = CFSTR("HFCAPackageIconIdentifierFloorLamp");
  *(_QWORD *)(v0 + 264) = CFSTR("HFCAPackageIconIdentifierCeilingLight");
  *(_QWORD *)(v0 + 272) = CFSTR("HFCAPackageIconIdentifierTableLight");
  *(_QWORD *)(v0 + 280) = CFSTR("HFCAPackageIconIdentifierRecessedLight");
  *(_QWORD *)(v0 + 288) = CFSTR("HFCAPackageIconIdentifierLightPanel");
  *(_QWORD *)(v0 + 296) = CFSTR("HFCAPackageIconIdentifierCylindricalLight");
  *(_QWORD *)(v0 + 304) = CFSTR("HFCAPackageIconIdentifierLightStrip");
  *(_QWORD *)(v0 + 312) = CFSTR("HFCAPackageIconIdentifierChandelier");
  *(_QWORD *)(v0 + 320) = CFSTR("HFCAPackageIconIdentifierTelevision");
  *(_QWORD *)(v0 + 328) = CFSTR("HFCAPackageIconIdentifierTelevisionSetTopBox");
  *(_QWORD *)(v0 + 336) = CFSTR("HFCAPackageIconIdentifierTelevisionStreamingStick");
  *(_QWORD *)(v0 + 344) = CFSTR("HFCAPackageIconIdentifierRemoteControl");
  *(_QWORD *)(v0 + 352) = CFSTR("HFCAPackageIconIdentifierReceiver");
  *(_QWORD *)(v0 + 360) = CFSTR("HFCAPackageIconIdentifierAirport");
  *(_QWORD *)(v0 + 368) = CFSTR("HFCAPackageIconIdentifierWiFiRouter");
  *(_QWORD *)(v0 + 376) = CFSTR("HFCAPackageIconIdentifierPowerStrip");
  *(_QWORD *)(v0 + 384) = CFSTR("HFCAPackageIconIdentifierOutletTypeA");
  *(_QWORD *)(v0 + 392) = CFSTR("HFCAPackageIconIdentifierOutletTypeB");
  *(_QWORD *)(v0 + 400) = CFSTR("HFCAPackageIconIdentifierOutletTypeC");
  *(_QWORD *)(v0 + 408) = CFSTR("HFCAPackageIconIdentifierOutletTypeG");
  *(_QWORD *)(v0 + 416) = CFSTR("HFCAPackageIconIdentifierOutletTypeI");
  *(_QWORD *)(v0 + 424) = CFSTR("HFCAPackageIconIdentifierOutletTypeK");
  *(_QWORD *)(v0 + 432) = CFSTR("HFCAPackageIconIdentifierOutletTypeN");
  *(_QWORD *)(v0 + 440) = CFSTR("HFCAPackageIconIdentifierIPCamera");
  *(_QWORD *)(v0 + 448) = CFSTR("HFCAPackageIconIdentifierDoorLock");
  *(_QWORD *)(v0 + 456) = CFSTR("HFCAPackageIconIdentifierPINEntryDoorLock");
  *(_QWORD *)(v0 + 464) = CFSTR("HFCAPackageIconIdentifierSecuritySystem");
  *(_QWORD *)(v0 + 472) = CFSTR("HFCAPackageIconIdentifierVideoDoorbell");
  *(_QWORD *)(v0 + 480) = CFSTR("HFCAPackageIconIdentifierContactSensor");
  *(_QWORD *)(v0 + 488) = CFSTR("HFCAPackageIconIdentifierTemperatureSensor");
  *(_QWORD *)(v0 + 496) = CFSTR("HFCAPackageIconIdentifierAirQualitySensor");
  *(_QWORD *)(v0 + 504) = CFSTR("HFCAPackageIconIdentifierHumiditySensor");
  *(_QWORD *)(v0 + 512) = CFSTR("HFCAPackageIconIdentifierCarbonMonoxideSensor");
  *(_QWORD *)(v0 + 520) = CFSTR("HFCAPackageIconIdentifierCarbonDioxideSensor");
  *(_QWORD *)(v0 + 528) = CFSTR("HFCAPackageIconIdentifierMotionSensor");
  *(_QWORD *)(v0 + 536) = CFSTR("HFCAPackageIconIdentifierLeakSensor");
  *(_QWORD *)(v0 + 544) = CFSTR("HFCAPackageIconIdentifierSmokeSensor");
  *(_QWORD *)(v0 + 552) = CFSTR("HFCAPackageIconIdentifierLightSensor");
  *(_QWORD *)(v0 + 560) = CFSTR("HFCAPackageIconIdentifierOccupancySensor");
  *(_QWORD *)(v0 + 568) = CFSTR("HFCAPackageIconIdentifierGenericSensor");
  *(_QWORD *)(v0 + 576) = CFSTR("HFCAPackageIconIdentifierSprinkler");
  *(_QWORD *)(v0 + 584) = CFSTR("HFCAPackageIconIdentifierFaucet");
  *(_QWORD *)(v0 + 592) = CFSTR("HFCAPackageIconIdentifierIrrigationController");
  *(_QWORD *)(v0 + 600) = CFSTR("HFCAPackageIconIdentifierValveCeilingJet");
  *(_QWORD *)(v0 + 608) = CFSTR("HFCAPackageIconIdentifierValveSideJets");
  *(_QWORD *)(v0 + 616) = CFSTR("HFCAPackageIconIdentifierValveShowerHead");
  *(_QWORD *)(v0 + 624) = CFSTR("HFCAPackageIconIdentifierValveHandheldShowerHead");
  *(_QWORD *)(v0 + 632) = CFSTR("HFCAPackageIconIdentifierWindowVertical");
  *(_QWORD *)(v0 + 640) = CFSTR("HFCAPackageIconIdentifierWindowHorizontal");
  *(_QWORD *)(v0 + 648) = CFSTR("HFCAPackageIconIdentifierWindowCeiling");
  *(_QWORD *)(v0 + 656) = CFSTR("HFCAPackageIconIdentifierWindowCasement");
  *(_QWORD *)(v0 + 664) = CFSTR("HFCAPackageIconIdentifierWindowAwning");
  *(_QWORD *)(v0 + 672) = CFSTR("HFCAPackageIconIdentifierWindowCoveringGenericShade");
  *(_QWORD *)(v0 + 680) = CFSTR("HFCAPackageIconIdentifierWindowCoveringBlindsVertical");
  *(_QWORD *)(v0 + 688) = CFSTR("HFCAPackageIconIdentifierWindowCoveringBlindsHorizontal");
  *(_QWORD *)(v0 + 696) = CFSTR("HFCAPackageIconIdentifierWindowCoveringRollerShade");
  *(_QWORD *)(v0 + 704) = CFSTR("HFCAPackageIconIdentifierWindowCoveringRomanShade");
  *(_QWORD *)(v0 + 712) = CFSTR("HFCAPackageIconIdentifierWindowCoveringCurtains");
  *(_QWORD *)(v0 + 720) = CFSTR("HFCAPackageIconIdentifierWindowCoveringAwning");
  *(_QWORD *)(v0 + 728) = CFSTR("HFCAPackageIconIdentifierLockKeyholeLightModeMatteBlack");
  *(_QWORD *)(v0 + 736) = CFSTR("HFCAPackageIconIdentifierLockKeyholeDarkModeMatteBlack");
  *(_QWORD *)(v0 + 744) = CFSTR("HFCAPackageIconIdentifierLockKeypadLightModeMatteBlack");
  *(_QWORD *)(v0 + 752) = CFSTR("HFCAPackageIconIdentifierLockKeypadDarkModeMatteBlack");
  *(_QWORD *)(v0 + 760) = CFSTR("HFCAPackageIconIdentifierCameraMicrophoneVoiceWave");
  *(_QWORD *)(v0 + 768) = CFSTR("HFCAPackageIconIdentifierTileToggleLight");
  *(_QWORD *)(v0 + 776) = CFSTR("HFCAPackageIconIdentifierTileToggleDark");
  v1 = CFSTR("HFCAPackageIconIdentifierAirPurifier");
  v2 = CFSTR("HFCAPackageIconIdentifierHumidifier");
  v3 = CFSTR("HFCAPackageIconIdentifierDehumidifier");
  v4 = CFSTR("HFCAPackageIconIdentifierSpaceHeater");
  v5 = CFSTR("HFCAPackageIconIdentifierAirCooler");
  v6 = CFSTR("HFCAPackageIconIdentifierWindowCooler");
  v7 = CFSTR("HFCAPackageIconIdentifierSwitch");
  v8 = CFSTR("HFCAPackageIconIdentifierSwitch2");
  v9 = CFSTR("HFCAPackageIconIdentifierProgrammableSwitch");
  v10 = CFSTR("HFCAPackageIconIdentifierGarageDoor");
  v11 = CFSTR("HFCAPackageIconIdentifierGarageDoorDoubleBay");
  v12 = CFSTR("HFCAPackageIconIdentifierDoor");
  v13 = CFSTR("HFCAPackageIconIdentifierDoorLeftHand");
  v14 = CFSTR("HFCAPackageIconIdentifierSlidingDoor");
  v15 = CFSTR("HFCAPackageIconIdentifierSlidingDoorRightHand");
  v16 = CFSTR("HFCAPackageIconIdentifierGate");
  v17 = CFSTR("HFCAPackageIconIdentifierFrenchDoor");
  v18 = CFSTR("HFCAPackageIconIdentifierDeskFan");
  v19 = CFSTR("HFCAPackageIconIdentifierCeilingFan");
  v20 = CFSTR("HFCAPackageIconIdentifierCeilingFanWithLight");
  v21 = CFSTR("HFCAPackageIconIdentifierFloorFan");
  v22 = CFSTR("HFCAPackageIconIdentifierLightbulb");
  v23 = CFSTR("HFCAPackageIconIdentifierLightBulb2");
  v24 = CFSTR("HFCAPackageIconIdentifierLightbulbLED");
  v25 = CFSTR("HFCAPackageIconIdentifierLightbulbLEDWide");
  v26 = CFSTR("HFCAPackageIconIdentifierRecessedLight3");
  v27 = CFSTR("HFCAPackageIconIdentifierLightRibbon");
  v28 = CFSTR("HFCAPackageIconIdentifierDeskLamp");
  v29 = CFSTR("HFCAPackageIconIdentifierFloorLamp");
  v30 = CFSTR("HFCAPackageIconIdentifierCeilingLight");
  v31 = CFSTR("HFCAPackageIconIdentifierTableLight");
  v32 = CFSTR("HFCAPackageIconIdentifierRecessedLight");
  v33 = CFSTR("HFCAPackageIconIdentifierLightPanel");
  v34 = CFSTR("HFCAPackageIconIdentifierCylindricalLight");
  v35 = CFSTR("HFCAPackageIconIdentifierLightStrip");
  v36 = CFSTR("HFCAPackageIconIdentifierChandelier");
  v37 = CFSTR("HFCAPackageIconIdentifierTelevision");
  v38 = CFSTR("HFCAPackageIconIdentifierTelevisionSetTopBox");
  v39 = CFSTR("HFCAPackageIconIdentifierTelevisionStreamingStick");
  v40 = CFSTR("HFCAPackageIconIdentifierRemoteControl");
  v41 = CFSTR("HFCAPackageIconIdentifierReceiver");
  v42 = CFSTR("HFCAPackageIconIdentifierAirport");
  v43 = CFSTR("HFCAPackageIconIdentifierWiFiRouter");
  v44 = CFSTR("HFCAPackageIconIdentifierPowerStrip");
  v45 = CFSTR("HFCAPackageIconIdentifierOutletTypeA");
  v46 = CFSTR("HFCAPackageIconIdentifierOutletTypeB");
  v47 = CFSTR("HFCAPackageIconIdentifierOutletTypeC");
  v48 = CFSTR("HFCAPackageIconIdentifierOutletTypeG");
  v49 = CFSTR("HFCAPackageIconIdentifierOutletTypeI");
  v50 = CFSTR("HFCAPackageIconIdentifierOutletTypeK");
  v51 = CFSTR("HFCAPackageIconIdentifierOutletTypeN");
  v52 = CFSTR("HFCAPackageIconIdentifierIPCamera");
  v53 = CFSTR("HFCAPackageIconIdentifierDoorLock");
  v54 = CFSTR("HFCAPackageIconIdentifierPINEntryDoorLock");
  v55 = CFSTR("HFCAPackageIconIdentifierSecuritySystem");
  v56 = CFSTR("HFCAPackageIconIdentifierVideoDoorbell");
  v57 = CFSTR("HFCAPackageIconIdentifierContactSensor");
  v58 = CFSTR("HFCAPackageIconIdentifierTemperatureSensor");
  v59 = CFSTR("HFCAPackageIconIdentifierAirQualitySensor");
  v60 = CFSTR("HFCAPackageIconIdentifierHumiditySensor");
  v61 = CFSTR("HFCAPackageIconIdentifierCarbonMonoxideSensor");
  v62 = CFSTR("HFCAPackageIconIdentifierCarbonDioxideSensor");
  v63 = CFSTR("HFCAPackageIconIdentifierMotionSensor");
  v64 = CFSTR("HFCAPackageIconIdentifierLeakSensor");
  v65 = CFSTR("HFCAPackageIconIdentifierSmokeSensor");
  v66 = CFSTR("HFCAPackageIconIdentifierLightSensor");
  v67 = CFSTR("HFCAPackageIconIdentifierOccupancySensor");
  v68 = CFSTR("HFCAPackageIconIdentifierGenericSensor");
  v69 = CFSTR("HFCAPackageIconIdentifierSprinkler");
  v70 = CFSTR("HFCAPackageIconIdentifierFaucet");
  v71 = CFSTR("HFCAPackageIconIdentifierIrrigationController");
  v72 = CFSTR("HFCAPackageIconIdentifierValveCeilingJet");
  v73 = CFSTR("HFCAPackageIconIdentifierValveSideJets");
  v74 = CFSTR("HFCAPackageIconIdentifierValveShowerHead");
  v75 = CFSTR("HFCAPackageIconIdentifierValveHandheldShowerHead");
  v76 = CFSTR("HFCAPackageIconIdentifierWindowVertical");
  v77 = CFSTR("HFCAPackageIconIdentifierWindowHorizontal");
  v78 = CFSTR("HFCAPackageIconIdentifierWindowCeiling");
  v79 = CFSTR("HFCAPackageIconIdentifierWindowCasement");
  v80 = CFSTR("HFCAPackageIconIdentifierWindowAwning");
  v81 = CFSTR("HFCAPackageIconIdentifierWindowCoveringGenericShade");
  v82 = CFSTR("HFCAPackageIconIdentifierWindowCoveringBlindsVertical");
  v83 = CFSTR("HFCAPackageIconIdentifierWindowCoveringBlindsHorizontal");
  v84 = CFSTR("HFCAPackageIconIdentifierWindowCoveringRollerShade");
  v85 = CFSTR("HFCAPackageIconIdentifierWindowCoveringRomanShade");
  v86 = CFSTR("HFCAPackageIconIdentifierWindowCoveringCurtains");
  v87 = CFSTR("HFCAPackageIconIdentifierWindowCoveringAwning");
  v88 = CFSTR("HFCAPackageIconIdentifierLockKeyholeLightModeMatteBlack");
  v89 = CFSTR("HFCAPackageIconIdentifierLockKeyholeDarkModeMatteBlack");
  v90 = CFSTR("HFCAPackageIconIdentifierLockKeypadLightModeMatteBlack");
  v91 = CFSTR("HFCAPackageIconIdentifierLockKeypadDarkModeMatteBlack");
  v92 = CFSTR("HFCAPackageIconIdentifierCameraMicrophoneVoiceWave");
  v93 = CFSTR("HFCAPackageIconIdentifierTileToggleLight");
  v94 = CFSTR("HFCAPackageIconIdentifierTileToggleDark");
  return v0;
}

unint64_t sub_1DD3D55F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E3990;
  if (!qword_1F03E3990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03E3998);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E3990);
  }
  return result;
}

void type metadata accessor for HFImageIconIdentifier(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A60);
}

void type metadata accessor for HFCAPackageIconIdentifier(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A68);
}

void type metadata accessor for HMHomeLocation(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A70);
}

void type metadata accessor for HFItemUpdateOption(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A78);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A80);
}

void type metadata accessor for TileResizableSize(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A88);
}

void type metadata accessor for HFItemResultKey(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3A90);
}

uint64_t sub_1DD3D56D0()
{
  return sub_1DD353504(&qword_1F03E3A98, (uint64_t (*)(uint64_t))type metadata accessor for HFItemResultKey, (uint64_t)&unk_1DD667288);
}

uint64_t sub_1DD3D56FC()
{
  return sub_1DD353504(&qword_1F03E3AA0, (uint64_t (*)(uint64_t))type metadata accessor for HFItemResultKey, (uint64_t)&unk_1DD66725C);
}

uint64_t sub_1DD3D5728()
{
  return sub_1DD353504(&qword_1F03E3AA8, (uint64_t (*)(uint64_t))type metadata accessor for HFItemResultKey, (uint64_t)&unk_1DD6672F8);
}

uint64_t sub_1DD3D5754()
{
  return sub_1DD353504(&qword_1F03E3AB0, (uint64_t (*)(uint64_t))type metadata accessor for TileResizableSize, (uint64_t)&unk_1DD6673E0);
}

uint64_t sub_1DD3D5780()
{
  return sub_1DD353504(&qword_1F03E3AB8, (uint64_t (*)(uint64_t))type metadata accessor for TileResizableSize, (uint64_t)&unk_1DD6673B4);
}

uint64_t sub_1DD3D57AC()
{
  return sub_1DD353504(&qword_1F03E3AC0, (uint64_t (*)(uint64_t))type metadata accessor for TileResizableSize, (uint64_t)&unk_1DD667450);
}

uint64_t sub_1DD3D57D8()
{
  return sub_1DD353504(&qword_1F03E3AC8, (uint64_t (*)(uint64_t))type metadata accessor for HFItemUpdateOption, (uint64_t)&unk_1DD667538);
}

uint64_t sub_1DD3D5804()
{
  return sub_1DD353504(&qword_1F03E3AD0, (uint64_t (*)(uint64_t))type metadata accessor for HFItemUpdateOption, (uint64_t)&unk_1DD66750C);
}

uint64_t sub_1DD3D5830()
{
  return sub_1DD353504(&qword_1F03E3AD8, (uint64_t (*)(uint64_t))type metadata accessor for HFCAPackageIconIdentifier, (uint64_t)&unk_1DD667684);
}

uint64_t sub_1DD3D585C()
{
  return sub_1DD353504(&qword_1F03E3AE0, (uint64_t (*)(uint64_t))type metadata accessor for HFCAPackageIconIdentifier, (uint64_t)&unk_1DD667658);
}

uint64_t sub_1DD3D5888()
{
  return sub_1DD353504(&qword_1F03E3AE8, (uint64_t (*)(uint64_t))type metadata accessor for HFCAPackageIconIdentifier, (uint64_t)&unk_1DD6676F4);
}

uint64_t sub_1DD3D58B4()
{
  return sub_1DD353504(&qword_1F03E3AF0, (uint64_t (*)(uint64_t))type metadata accessor for HFImageIconIdentifier, (uint64_t)&unk_1DD6677DC);
}

uint64_t sub_1DD3D58E0()
{
  return sub_1DD353504(&qword_1F03E3AF8, (uint64_t (*)(uint64_t))type metadata accessor for HFImageIconIdentifier, (uint64_t)&unk_1DD6677B0);
}

uint64_t sub_1DD3D590C()
{
  return sub_1DD353504(&qword_1F03E3B00, (uint64_t (*)(uint64_t))type metadata accessor for HFImageIconIdentifier, (uint64_t)&unk_1DD66784C);
}

uint64_t sub_1DD3D5938()
{
  return sub_1DD353504(&qword_1F03E3B08, (uint64_t (*)(uint64_t))type metadata accessor for HFItemUpdateOption, (uint64_t)&unk_1DD6675A8);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_1DD3D5978(a1, &qword_1F03E3C28);
}

void sub_1DD3D5978(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

BOOL sub_1DD3D59D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DD39FEDC();
  v1 = sub_1DD63E554();
  v3 = v2;
  v4 = sub_1DD63E554();
  v6 = v5;
  v7 = *(_QWORD **)(v0 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  v8 = sub_1DD3A1C84(v1, v3, v7);
  v10 = v9;
  v11 = sub_1DD3A1C84(v4, v6, v7);
  if (((v10 | v12) & 1) != 0)
  {
    v15 = sub_1DD39FF20(v1, v3, v4, v6);
    if (v15 == 2)
    {
      v15 = sub_1DD3A0234(v1, v3, v4, v6);
      if (v15 == 2)
        v15 = sub_1DD3D5D68();
    }
    v14 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8 < v13;
  }
  return v14;
}

id RoomDashboardReorderableItemList.__allocating_init(applicationDataContainer:category:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithApplicationDataContainer_category_, a1, v4);

  swift_unknownObjectRelease();
  return v5;
}

id RoomDashboardReorderableItemList.init(applicationDataContainer:category:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  objc_super v6;

  v3 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for RoomDashboardReorderableItemList();
  v4 = objc_msgSendSuper2(&v6, sel_initWithApplicationDataContainer_category_, a1, v3);

  swift_unknownObjectRelease();
  return v4;
}

id RoomDashboardReorderableItemList.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoomDashboardReorderableItemList();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD3D5D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  uint64_t result;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v27 - v5;
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v27 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  sub_1DD63D774();
  sub_1DD63D774();
  v12 = sub_1DD63D7C8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = 0;
  v16 = 0;
  if (v14(v11, 1, v12) != 1)
  {
    sub_1DD3A08FC((uint64_t)v11, (uint64_t)v6);
    result = v14(v6, 1, v12);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_17;
    }
    v18 = (void *)sub_1DD63D78C();
    v16 = objc_msgSend((id)objc_opt_self(), sel_accessoryTypeGroupWithIdentifier_, v18);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    if (v16)
    {
      v19 = objc_msgSend(v16, sel_name);

      if (v19)
      {
        v15 = sub_1DD63E14C();
        v16 = v20;

      }
      else
      {
        v15 = 0;
        v16 = 0;
      }
    }
    else
    {
      v15 = 0;
    }
  }
  if (v14(v9, 1, v12) == 1)
    goto LABEL_9;
  sub_1DD3A08FC((uint64_t)v9, (uint64_t)v3);
  result = v14(v3, 1, v12);
  if ((_DWORD)result != 1)
  {
    v23 = (void *)sub_1DD63D78C();
    v22 = objc_msgSend((id)objc_opt_self(), sel_accessoryTypeGroupWithIdentifier_, v23);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
    if (!v22)
    {
      v21 = 0;
      goto LABEL_15;
    }
    v24 = objc_msgSend(v22, sel_name);

    if (v24)
    {
      v21 = sub_1DD63E14C();
      v22 = v25;

      goto LABEL_15;
    }
LABEL_9:
    v21 = 0;
    v22 = 0;
LABEL_15:
    v26 = sub_1DD3A0944(v15, (uint64_t)v16, v21, (uint64_t)v22);
    sub_1DD3A08BC((uint64_t)v9);
    sub_1DD3A08BC((uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v26;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RoomDashboardReorderableItemList()
{
  return objc_opt_self();
}

uint64_t method lookup function for RoomDashboardReorderableItemList()
{
  return swift_lookUpClassMethod();
}

uint64_t HFItem.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  __int128 v14;
  __int128 v15;

  v5 = objc_msgSend(v2, sel_latestResults);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1DD63E098();

    v8 = sub_1DD63E14C();
    if (*(_QWORD *)(v7 + 16)
      && (v10 = sub_1DD3DE420(v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8), (v11 & 1) != 0))
    {
      sub_1DD3DE740(*(_QWORD *)(v7 + 56) + 32 * v10, (uint64_t)&v14);
    }
    else
    {
      v14 = 0u;
      v15 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED3785F0);
  v12 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v12 ^ 1u, 1, a1);
}

uint64_t sub_1DD3D61B4()
{
  uint64_t v0;
  id v1;

  v0 = sub_1DD63DF18();
  __swift_allocate_value_buffer(v0, qword_1F03E4020);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F03E4020);
  if (qword_1F03E3828 != -1)
    swift_once();
  v1 = (id)qword_1F03ED470;
  return sub_1DD63DF24();
}

unint64_t sub_1DD3D6234(uint64_t a1)
{
  return sub_1DD3D69C4(a1, &qword_1ED378400, &qword_1ED378338, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
}

unint64_t sub_1DD3D6250(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5D10);
  v2 = sub_1DD63E7E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DD3DEBB4(v6, (uint64_t)&v13, &qword_1F03E5F70);
    v7 = v13;
    result = sub_1DD3D94F4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1DD357884(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD3D637C(uint64_t a1)
{
  return sub_1DD3D63A4(a1, (uint64_t *)&unk_1F03E41F0, (uint64_t (*)(id))sub_1DD3D9574);
}

unint64_t sub_1DD3D6390(uint64_t a1)
{
  return sub_1DD3D63A4(a1, &qword_1F03E41C8, (uint64_t (*)(id))sub_1DD3D95C0);
}

unint64_t sub_1DD3D63A4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_1DD63E7E8();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *v7;
    v9 = (id)*(v7 - 1);
    swift_bridgeObjectRetain();
    result = a3(v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v5[6] + v12) = v9;
    *(_QWORD *)(v5[7] + v12) = v8;
    v13 = v5[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v5[2] = v15;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD3D64B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E41E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E41D0);
  v6 = sub_1DD63E7E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DD3DEBB4(v12, (uint64_t)v5, (uint64_t *)&unk_1F03E41E0);
    result = sub_1DD35333C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DD63D7C8();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1DD63D768();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD3D666C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40F0);
  v6 = sub_1DD63E7E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DD3DEBB4(v12, (uint64_t)v5, &qword_1F03E40F8);
    result = sub_1DD3D96F0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DD63D984();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD3D6800(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40E0);
  v6 = sub_1DD63E7E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DD3DEBB4(v12, (uint64_t)v5, &qword_1F03E40E8);
    result = sub_1DD3D96F0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DD63D984();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(_QWORD *)(v19 + 72) * v16;
    v21 = v17 + v20;
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
    v22(v21, v5, v18);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v7[7] + v20, v9, v18);
    v23 = v7[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v7[2] = v25;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD3D69A8(uint64_t a1)
{
  return sub_1DD3D69C4(a1, &qword_1F03E40A0, &qword_1F03E40A8, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
}

unint64_t sub_1DD3D69C4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1DD63E7E8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DD3DEBB4(v11, (uint64_t)&v20, a3);
    v12 = v20;
    v13 = v21;
    result = sub_1DD3DE420(v20, v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v8[6] + 16 * result);
    *v16 = v12;
    v16[1] = v13;
    result = a4(&v22, v8[7] + 32 * result);
    v17 = v8[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1DD3D6B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  v8 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  v11 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v11, sel_init);
  objc_msgSend(v12, sel_setDescriptor_, 0);
  sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v5, &qword_1ED378350);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = &unk_1F03E4040;
  v13[5] = v10;
  v13[6] = v12;
  swift_retain();
  v14 = v12;
  sub_1DD3D8A0C((uint64_t)v5, (uint64_t)&unk_1F03E4050, (uint64_t)v13);
  swift_release();
  swift_release();
  sub_1DD3540B8((uint64_t)v7, &qword_1ED378350);
  return v14;
}

uint64_t sub_1DD3D6CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 704) = a2;
  *(_QWORD *)(v2 + 696) = a1;
  return swift_task_switch();
}

_QWORD *sub_1DD3D6CEC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t inited;
  __CFString *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t i;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  _QWORD *v48;
  unint64_t v49;
  int64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t (*v58)(uint64_t);
  int64_t v59;

  v1 = v0[87] + 16;
  swift_beginAccess();
  result = (_QWORD *)MEMORY[0x1DF0DB400](v1);
  v0[89] = result;
  if (result)
  {
    v3 = v0[88];
    if (!v3)
      goto LABEL_45;
    v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *result) + 0x50);
    v58 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    v0[90] = v5;
    *v5 = v0;
    v5[1] = sub_1DD3D728C;
    return (_QWORD *)v58(v3);
  }
  v6 = (uint64_t)(v0 + 21);
  v56 = v0 + 26;
  v54 = v0 + 16;
  v55 = v0 + 31;
  v7 = v0 + 79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4620);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667A30;
  *(_QWORD *)(inited + 32) = CFSTR("hidden");
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 1;
  v9 = CFSTR("hidden");
  v10 = sub_1DD3D6250(inited);
  v11 = (_QWORD *)sub_1DD3D69C4(MEMORY[0x1E0DEE9D8], &qword_1ED378400, &qword_1ED378338, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
  v48 = v0;
  v49 = v10 + 64;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v10 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v10 + 64);
  v15 = (uint64_t)(v0 + 27);
  v52 = (uint64_t)(v0 + 22);
  v53 = (uint64_t)(v0 + 17);
  v50 = (unint64_t)(63 - v13) >> 6;
  v51 = v0 + 32;
  v57 = v10;
  result = (_QWORD *)swift_bridgeObjectRetain();
  for (i = 0; ; i = v59)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v59 = i;
      v19 = v18 | (i << 6);
    }
    else
    {
      v20 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_43;
      if (v20 >= v50)
      {
LABEL_38:
        swift_release();
        swift_bridgeObjectRelease();
        v45 = objc_allocWithZone((Class)HFItemUpdateOutcome);
        sub_1DD3D8478((uint64_t)v11);
        swift_bridgeObjectRelease();
        v46 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v47 = objc_msgSend(v45, sel_initWithResults_, v46);

        return (_QWORD *)((uint64_t (*)(id))v48[1])(v47);
      }
      v21 = *(_QWORD *)(v49 + 8 * v20);
      v22 = i + 1;
      if (!v21)
      {
        v22 = i + 2;
        if (i + 2 >= v50)
          goto LABEL_38;
        v21 = *(_QWORD *)(v49 + 8 * v22);
        if (!v21)
        {
          v22 = i + 3;
          if (i + 3 >= v50)
            goto LABEL_38;
          v21 = *(_QWORD *)(v49 + 8 * v22);
          if (!v21)
          {
            v22 = i + 4;
            if (i + 4 >= v50)
              goto LABEL_38;
            v21 = *(_QWORD *)(v49 + 8 * v22);
            if (!v21)
            {
              v23 = i + 5;
              if (i + 5 >= v50)
                goto LABEL_38;
              v21 = *(_QWORD *)(v49 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  v22 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_44;
                  if (v22 >= v50)
                    goto LABEL_38;
                  v21 = *(_QWORD *)(v49 + 8 * v22);
                  ++v23;
                  if (v21)
                    goto LABEL_26;
                }
              }
              v22 = i + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v21 - 1) & v21;
      v59 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = *(void **)(*(_QWORD *)(v57 + 48) + 8 * v19);
    sub_1DD3DE740(*(_QWORD *)(v57 + 56) + 32 * v19, v53);
    *v54 = v24;
    v25 = *((_OWORD *)v54 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v54;
    *(_OWORD *)(v6 + 16) = v25;
    *(_QWORD *)(v6 + 32) = v54[4];
    v26 = *(_QWORD *)v6;
    *v56 = *(_QWORD *)v6;
    v27 = v15;
    sub_1DD3DE740(v52, v15);
    v28 = sub_1DD63E14C();
    v30 = v29;
    *v55 = v26;
    sub_1DD3DE740(v52, (uint64_t)v51);
    v31 = v7;
    sub_1DD357884(v51, v7);
    v32 = v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = sub_1DD3DE420(v28, v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    v36 = v11[2];
    v37 = (v34 & 1) == 0;
    result = (_QWORD *)(v36 + v37);
    if (__OFADD__(v36, v37))
      break;
    v38 = v34;
    if (v11[3] >= (uint64_t)result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v34 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DE230(&qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (void (*)(_BYTE *, uint64_t))sub_1DD357884);
        if ((v38 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DBCA8((uint64_t)result, isUniquelyReferenced_nonNull_native, &qword_1ED378400, (void (*)(uint64_t, _BYTE *))sub_1DD357884, (void (*)(uint64_t, _BYTE *))sub_1DD3714B4);
      v39 = sub_1DD3DE420(v28, v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
      if ((v38 & 1) != (v40 & 1))
        return (_QWORD *)sub_1DD63E8A8();
      v35 = v39;
      if ((v38 & 1) != 0)
      {
LABEL_7:
        v17 = (_OWORD *)(v11[7] + 32 * v35);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        v7 = v31;
        sub_1DD357884(v31, v17);
        goto LABEL_8;
      }
    }
    v11[(v35 >> 6) + 8] |= 1 << v35;
    v41 = (uint64_t *)(v11[6] + 16 * v35);
    *v41 = v28;
    v41[1] = v30;
    v7 = v31;
    result = sub_1DD357884(v31, (_OWORD *)(v11[7] + 32 * v35));
    v42 = v11[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_42;
    v11[2] = v44;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v27;
    __swift_destroy_boxed_opaque_existential_0(v27);
    result = (_QWORD *)sub_1DD3540B8(v6, &qword_1F03E6000);
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1DD3D728C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 728) = a1;
  *(_QWORD *)(v3 + 736) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3D72FC()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t i;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  int64_t v53;

  v51 = (_QWORD *)(v0 + 408);
  v52 = (_QWORD *)(v0 + 288);
  v1 = v0 + 488;
  v48 = v0 + 528;
  v2 = (_OWORD *)(v0 + 568);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = (_QWORD *)sub_1DD3D69C4(MEMORY[0x1E0DEE9D8], &qword_1ED378400, &qword_1ED378338, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
  v43 = v0;
  v44 = v3 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(v3 + 64);
  v49 = v0 + 536;
  v50 = v3;
  v8 = v0 + 416;
  v47 = v0 + 496;
  v45 = (unint64_t)(63 - v6) >> 6;
  v46 = (_OWORD *)(v0 + 296);
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v53)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v53 = i;
      v13 = v12 | (i << 6);
    }
    else
    {
      v14 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_39;
      if (v14 >= v45)
      {
LABEL_35:
        v39 = *(void **)(v43 + 712);
        swift_release();
        swift_bridgeObjectRelease();
        v40 = objc_allocWithZone((Class)HFItemUpdateOutcome);
        sub_1DD3D8478((uint64_t)v4);
        swift_bridgeObjectRelease();
        v41 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v40, sel_initWithResults_, v41);

        return (*(uint64_t (**)(id))(v43 + 8))(v42);
      }
      v15 = *(_QWORD *)(v44 + 8 * v14);
      v16 = i + 1;
      if (!v15)
      {
        v16 = i + 2;
        if (i + 2 >= v45)
          goto LABEL_35;
        v15 = *(_QWORD *)(v44 + 8 * v16);
        if (!v15)
        {
          v16 = i + 3;
          if (i + 3 >= v45)
            goto LABEL_35;
          v15 = *(_QWORD *)(v44 + 8 * v16);
          if (!v15)
          {
            v16 = i + 4;
            if (i + 4 >= v45)
              goto LABEL_35;
            v15 = *(_QWORD *)(v44 + 8 * v16);
            if (!v15)
            {
              v17 = i + 5;
              if (i + 5 >= v45)
                goto LABEL_35;
              v15 = *(_QWORD *)(v44 + 8 * v17);
              if (!v15)
              {
                while (1)
                {
                  v16 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_40;
                  if (v16 >= v45)
                    goto LABEL_35;
                  v15 = *(_QWORD *)(v44 + 8 * v16);
                  ++v17;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v16 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v7 = (v15 - 1) & v15;
      v53 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(void **)(*(_QWORD *)(v50 + 48) + 8 * v13);
    sub_1DD3DE740(*(_QWORD *)(v50 + 56) + 32 * v13, v49);
    *(_QWORD *)v48 = v18;
    v19 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v1 = *(_OWORD *)v48;
    *(_OWORD *)(v1 + 16) = v19;
    *(_QWORD *)(v1 + 32) = *(_QWORD *)(v48 + 32);
    v20 = *(_QWORD *)v1;
    *v51 = *(_QWORD *)v1;
    v21 = v8;
    sub_1DD3DE740(v47, v8);
    v22 = sub_1DD63E14C();
    v24 = v23;
    *v52 = v20;
    sub_1DD3DE740(v47, (uint64_t)v46);
    v25 = v2;
    sub_1DD357884(v46, v2);
    v26 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = sub_1DD3DE420(v22, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    v30 = v4[2];
    v31 = (v28 & 1) == 0;
    result = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v32 = v28;
    if (v4[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1DD3DE230(&qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (void (*)(_BYTE *, uint64_t))sub_1DD357884);
        if ((v32 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1DD3DBCA8(result, isUniquelyReferenced_nonNull_native, &qword_1ED378400, (void (*)(uint64_t, _BYTE *))sub_1DD357884, (void (*)(uint64_t, _BYTE *))sub_1DD3714B4);
      v33 = sub_1DD3DE420(v22, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
      if ((v32 & 1) != (v34 & 1))
        return sub_1DD63E8A8();
      v29 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_4:
        v11 = (_OWORD *)(v4[7] + 32 * v29);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        v2 = v25;
        sub_1DD357884(v25, v11);
        goto LABEL_5;
      }
    }
    v4[(v29 >> 6) + 8] |= 1 << v29;
    v35 = (uint64_t *)(v4[6] + 16 * v29);
    *v35 = v22;
    v35[1] = v24;
    v2 = v25;
    result = (uint64_t)sub_1DD357884(v25, (_OWORD *)(v4[7] + 32 * v29));
    v36 = v4[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_38;
    v4[2] = v38;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v21;
    __swift_destroy_boxed_opaque_existential_0(v21);
    result = sub_1DD3540B8(v1, &qword_1F03E6000);
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DD3D77BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t i;
  _OWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;

  if (qword_1F03E37A0 != -1)
LABEL_44:
    swift_once();
  v64 = (_OWORD *)(v0 + 600);
  v1 = *(void **)(v0 + 736);
  v2 = sub_1DD63DF18();
  __swift_project_value_buffer(v2, (uint64_t)qword_1F03E4020);
  v3 = v1;
  v4 = v1;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E47C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 736);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 688) = v12;
    sub_1DD63E53C();
    *v10 = v12;

    _os_log_impl(&dword_1DD34E000, v5, v6, "Swift subclassUpdate threw error %@. Hiding item", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v10, -1, -1);
    MEMORY[0x1DF0DB358](v9, -1, -1);

  }
  else
  {

  }
  v13 = v0 + 328;
  v14 = v0 + 368;
  v60 = (_QWORD *)(v0 + 448);
  v61 = (_QWORD *)(v0 + 88);
  v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 712)) + 0x58))();
  v16 = (_QWORD *)sub_1DD3D69C4(MEMORY[0x1E0DEE9D8], &qword_1ED378400, &qword_1ED378338, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
  v54 = v0;
  v55 = v15 + 64;
  v17 = -1;
  v18 = -1 << *(_BYTE *)(v15 + 32);
  if (-v18 < 64)
    v17 = ~(-1 << -(char)v18);
  v19 = v17 & *(_QWORD *)(v15 + 64);
  v20 = v0 + 96;
  v58 = v0 + 376;
  v59 = v0 + 336;
  v56 = (unint64_t)(63 - v18) >> 6;
  v57 = (_OWORD *)(v0 + 456);
  v62 = v15;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v63)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v63 = i;
      v25 = v24 | (i << 6);
      goto LABEL_28;
    }
    v26 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_43;
    if (v26 >= v56)
    {
LABEL_39:
      v50 = *(void **)(v54 + 712);
      swift_release();
      swift_bridgeObjectRelease();
      v51 = objc_allocWithZone((Class)HFItemUpdateOutcome);
      sub_1DD3D8478((uint64_t)v16);
      swift_bridgeObjectRelease();
      v52 = (void *)sub_1DD63E08C();
      swift_bridgeObjectRelease();
      v53 = objc_msgSend(v51, sel_initWithResults_, v52);

      return (*(uint64_t (**)(id))(v54 + 8))(v53);
    }
    v27 = *(_QWORD *)(v55 + 8 * v26);
    v28 = i + 1;
    if (!v27)
    {
      v28 = i + 2;
      if (i + 2 >= v56)
        goto LABEL_39;
      v27 = *(_QWORD *)(v55 + 8 * v28);
      if (!v27)
      {
        v28 = i + 3;
        if (i + 3 >= v56)
          goto LABEL_39;
        v27 = *(_QWORD *)(v55 + 8 * v28);
        if (!v27)
        {
          v28 = i + 4;
          if (i + 4 >= v56)
            goto LABEL_39;
          v27 = *(_QWORD *)(v55 + 8 * v28);
          if (!v27)
            break;
        }
      }
    }
LABEL_27:
    v19 = (v27 - 1) & v27;
    v63 = v28;
    v25 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_28:
    v30 = *(void **)(*(_QWORD *)(v62 + 48) + 8 * v25);
    sub_1DD3DE740(*(_QWORD *)(v62 + 56) + 32 * v25, v59);
    *(_QWORD *)v13 = v30;
    v31 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v13;
    *(_OWORD *)(v14 + 16) = v31;
    *(_QWORD *)(v14 + 32) = *(_QWORD *)(v13 + 32);
    v32 = *(_QWORD *)v14;
    *v61 = *(_QWORD *)v14;
    v33 = v20;
    sub_1DD3DE740(v58, v20);
    v34 = sub_1DD63E14C();
    v0 = v35;
    *v60 = v32;
    sub_1DD3DE740(v58, (uint64_t)v57);
    sub_1DD357884(v57, v64);
    v36 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39 = sub_1DD3DE420(v34, v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    v40 = v16[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v43 = v38;
    if (v16[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v38 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_1DD3DE230(&qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (void (*)(_BYTE *, uint64_t))sub_1DD357884);
        if ((v43 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_1DD3DBCA8(v42, isUniquelyReferenced_nonNull_native, &qword_1ED378400, (void (*)(uint64_t, _BYTE *))sub_1DD357884, (void (*)(uint64_t, _BYTE *))sub_1DD3714B4);
      v44 = sub_1DD3DE420(v34, v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
      if ((v43 & 1) != (v45 & 1))
        return sub_1DD63E8A8();
      v39 = v44;
      if ((v43 & 1) != 0)
      {
LABEL_8:
        v23 = (_OWORD *)(v16[7] + 32 * v39);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
        sub_1DD357884(v64, v23);
        goto LABEL_9;
      }
    }
    v16[(v39 >> 6) + 8] |= 1 << v39;
    v46 = (uint64_t *)(v16[6] + 16 * v39);
    *v46 = v34;
    v46[1] = v0;
    sub_1DD357884(v64, (_OWORD *)(v16[7] + 32 * v39));
    v47 = v16[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_42;
    v16[2] = v49;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v33;
    __swift_destroy_boxed_opaque_existential_0(v33);
    result = sub_1DD3540B8(v14, &qword_1F03E6000);
  }
  v29 = i + 5;
  if (i + 5 >= v56)
    goto LABEL_39;
  v27 = *(_QWORD *)(v55 + 8 * v29);
  if (v27)
  {
    v28 = i + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v56)
      goto LABEL_39;
    v27 = *(_QWORD *)(v55 + 8 * v28);
    ++v29;
    if (v27)
      goto LABEL_27;
  }
  __break(1u);
  return result;
}

HFItemUpdateOutcome __swiftcall HFItemUpdateOutcome.init(results:)(Swift::OpaquePointer results)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  int64_t v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  void *v34;
  objc_class *v35;
  NSDictionary *v36;
  unint64_t v37;
  objc_class *v38;
  char *v39;
  int64_t v40;
  _QWORD *rawValue;
  _OWORD v42[2];
  void *v43;
  _OWORD v44[2];
  void *v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  HFItemUpdateOutcome result;

  v2 = (_QWORD *)sub_1DD3D69C4(MEMORY[0x1E0DEE9D8], &qword_1ED378400, &qword_1ED378338, (uint64_t (*)(uint64_t *, unint64_t))sub_1DD357884);
  v39 = (char *)results._rawValue + 64;
  v3 = 1 << *((_BYTE *)results._rawValue + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *((_QWORD *)results._rawValue + 8);
  rawValue = results._rawValue;
  v6 = &v46;
  v40 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
    }
    else
    {
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_38;
      if (v11 >= v40)
      {
LABEL_35:
        swift_release();
        swift_bridgeObjectRelease();
        v33 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        sub_1DD3D8478((uint64_t)v2);
        swift_bridgeObjectRelease();
        v34 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v35 = (objc_class *)objc_msgSend(v33, sel_initWithResults_, v34);

        v38 = v35;
        goto LABEL_41;
      }
      v12 = *(_QWORD *)&v39[8 * v11];
      ++v7;
      if (!v12)
      {
        v7 = v11 + 1;
        if (v11 + 1 >= v40)
          goto LABEL_35;
        v12 = *(_QWORD *)&v39[8 * v7];
        if (!v12)
        {
          v7 = v11 + 2;
          if (v11 + 2 >= v40)
            goto LABEL_35;
          v12 = *(_QWORD *)&v39[8 * v7];
          if (!v12)
          {
            v7 = v11 + 3;
            if (v11 + 3 >= v40)
              goto LABEL_35;
            v12 = *(_QWORD *)&v39[8 * v7];
            if (!v12)
            {
              v13 = v11 + 4;
              if (v13 >= v40)
                goto LABEL_35;
              v12 = *(_QWORD *)&v39[8 * v13];
              if (!v12)
              {
                while (1)
                {
                  v7 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_39;
                  if (v7 >= v40)
                    goto LABEL_35;
                  v12 = *(_QWORD *)&v39[8 * v7];
                  ++v13;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v7 = v13;
            }
          }
        }
      }
LABEL_23:
      v5 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v7 << 6);
    }
    v14 = *(void **)(rawValue[6] + 8 * v10);
    sub_1DD3DE740(rawValue[7] + 32 * v10, (uint64_t)v49 + 8);
    *(_QWORD *)&v49[0] = v14;
    v47[0] = v49[0];
    v47[1] = v49[1];
    v48 = v50;
    v45 = v14;
    v15 = (uint64_t)v6;
    sub_1DD3DE740((uint64_t)v47 + 8, (uint64_t)v6);
    v16 = sub_1DD63E14C();
    v18 = v17;
    v43 = v14;
    sub_1DD3DE740((uint64_t)v47 + 8, (uint64_t)v44);
    sub_1DD357884(v44, v42);
    v19 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_1DD3DE420(v16, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    v23 = v2[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (v2[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v21 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1DD3DE230(&qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (void (*)(_BYTE *, uint64_t))sub_1DD357884);
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1DD3DBCA8(v25, isUniquelyReferenced_nonNull_native, &qword_1ED378400, (void (*)(uint64_t, _BYTE *))sub_1DD357884, (void (*)(uint64_t, _BYTE *))sub_1DD3714B4);
      v27 = sub_1DD3DE420(v16, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_40;
      v22 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        v8 = (_OWORD *)(v2[7] + 32 * v22);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
        sub_1DD357884(v42, v8);
        goto LABEL_5;
      }
    }
    v2[(v22 >> 6) + 8] |= 1 << v22;
    v29 = (uint64_t *)(v2[6] + 16 * v22);
    *v29 = v16;
    v29[1] = v18;
    sub_1DD357884(v42, (_OWORD *)(v2[7] + 32 * v22));
    v30 = v2[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_37;
    v2[2] = v32;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (uint64_t *)v15;
    __swift_destroy_boxed_opaque_existential_0(v15);
    sub_1DD3540B8((uint64_t)v47, &qword_1F03E6000);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  v38 = (objc_class *)sub_1DD63E8A8();
  __break(1u);
LABEL_41:
  result._outcomeType = v37;
  result._results = v36;
  result.super.isa = v38;
  return result;
}

uint64_t sub_1DD3D82FC()
{
  return swift_task_switch();
}

uint64_t sub_1DD3D8310()
{
  uint64_t v0;
  unint64_t v1;

  v1 = sub_1DD3D6250(MEMORY[0x1E0DEE9D8]);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

unint64_t sub_1DD3D8348()
{
  uint64_t inited;
  __CFString *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4620);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667A30;
  *(_QWORD *)(inited + 32) = CFSTR("hidden");
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 1;
  v1 = CFSTR("hidden");
  return sub_1DD3D6250(inited);
}

id SwiftItem.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SwiftItem.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftItem();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SwiftItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD3D8478(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E40C0);
    v2 = sub_1DD63E7E8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1DD3DE740(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1DD357884(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1DD357884(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1DD357884(v36, v37);
    sub_1DD357884(v37, &v33);
    result = sub_1DD63E650();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1DD357884(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1DD3DEBAC();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DD3D883C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3D8A0C(a1, a2, a3);
}

uint64_t sub_1DD3D885C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3D8894(a1, a2, a3, (uint64_t)&unk_1EA723FD8, &qword_1F03E41B0);
}

uint64_t sub_1DD3D8878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3D8894(a1, a2, a3, (uint64_t)&unk_1EA723FB0, &qword_1F03E4150);
}

uint64_t sub_1DD3D8894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = sub_1DD63E2FC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_1DD63E2F0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DD3540B8(a1, &qword_1ED378350);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD63E284();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_1DD3D89F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3D8A0C(a1, a2, a3);
}

uint64_t sub_1DD3D8A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DD63E2FC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DD63E2F0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DD3540B8(a1, &qword_1ED378350);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD63E284();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DD3D8B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1DD3D8B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1DD3D8C30;
  return sub_1DD63E86C();
}

uint64_t sub_1DD3D8C30()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DD3D8C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1DD3D8CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1DD3DED90;
  return sub_1DD63E86C();
}

uint64_t sub_1DD3D8D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1DD3D8D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1DD3DED90;
  return sub_1DD63E86C();
}

uint64_t sub_1DD3D8E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = sub_1DD63E2C0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3D8E98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_1DD63E368();
  v3 = (uint64_t (*)(void))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3D9008;
  return v3();
}

uint64_t sub_1DD3D9008(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3D9074()
{
  uint64_t v0;
  unsigned __int8 v1;
  void *v2;
  void (**v3)(id, void *, _QWORD);

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_isCancelled);
  v2 = *(void **)(v0 + 80);
  if ((v1 & 1) == 0)
  {
    v3 = (void (**)(id, void *, _QWORD))objc_msgSend(*(id *)(v0 + 40), sel_completionHandlerAdapter);
    v3[2](v3, v2, 0);
    _Block_release(v3);
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3D90F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void (**v8)(id, _QWORD, void *);
  id v9;
  void *v10;

  v1 = *(void **)(v0 + 88);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = *(void **)(v0 + 16);
  }
  else
  {
    v7 = *(void **)(v0 + 40);

    if ((objc_msgSend(v7, sel_isCancelled) & 1) == 0)
    {
      v8 = (void (**)(id, _QWORD, void *))objc_msgSend(*(id *)(v0 + 40), sel_completionHandlerAdapter);
      v9 = v1;
      v10 = (void *)sub_1DD63D69C();
      v8[2](v8, 0, v10);

      _Block_release(v8);
    }
    v6 = v1;
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3D9220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = sub_1DD63E2C0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3D9284()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_1DD63E368();
  v3 = (uint64_t (*)(void))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3D93F4;
  return v3();
}

uint64_t sub_1DD3D93F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

unint64_t sub_1DD3D9460(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD63E650();
  return sub_1DD3D9788(a1, v2);
}

unint64_t sub_1DD3D9490(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1DF0DA4C4](*(_QWORD *)(v1 + 40), a1, 2);
  return sub_1DD3D984C(a1, v3);
}

unint64_t sub_1DD3D94C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD63E8FC();
  return sub_1DD3D98EC(a1, v2);
}

unint64_t sub_1DD3D94F4(uint64_t a1)
{
  uint64_t v2;

  sub_1DD63E14C();
  sub_1DD63E908();
  sub_1DD63E17C();
  v2 = sub_1DD63E938();
  swift_bridgeObjectRelease();
  return sub_1DD3D9988(a1, v2);
}

unint64_t sub_1DD3D9574(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD63E4DC();
  return sub_1DD3D9AFC(a1, v2, &qword_1F03E4720);
}

unint64_t sub_1DD3D95C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD63E4DC();
  return sub_1DD3D9AFC(a1, v2, (unint64_t *)&qword_1F03E41C0);
}

unint64_t sub_1DD3D960C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD63E4DC();
  return sub_1DD3D9AFC(a1, v2, (unint64_t *)&unk_1ED3783A8);
}

unint64_t sub_1DD3D9658(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DD63D768();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1DD353504(&qword_1F03E4130, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v3 = sub_1DD63E0EC();
  return sub_1DD3533D4(a1, v3, v2, &qword_1F03E4138, MEMORY[0x1E0CB08B8]);
}

unint64_t sub_1DD3D96F0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DD63D984();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378];
  sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
  v3 = sub_1DD63E0EC();
  return sub_1DD3533D4(a1, v3, v2, &qword_1F03E40D8, MEMORY[0x1E0D32390]);
}

unint64_t sub_1DD3D9788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1DD3DE980(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1DF0DA230](v9, a1);
      sub_1DD3DE9BC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DD3D984C(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DD3D98EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DD3D9988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1DD63E14C();
    v8 = v7;
    if (v6 == sub_1DD63E14C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1DD63E860();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1DD63E14C();
          v15 = v14;
          if (v13 == sub_1DD63E14C() && v15 == v16)
            break;
          v18 = sub_1DD63E860();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DD3D9AFC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1DD352AB0(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1DD63E4E8();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1DD63E4E8();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1DD3D9C0C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DD3DED7C;
  return v6(a1);
}

uint64_t sub_1DD3D9C70(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DD3D9CD4;
  return v6(a1);
}

uint64_t sub_1DD3D9CD4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DD3D9D20(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5D10);
  v35 = a2;
  v6 = sub_1DD63E7DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1DD357884(v22, v36);
    }
    else
    {
      sub_1DD3DE740((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1DD63E14C();
    sub_1DD63E908();
    sub_1DD63E17C();
    v24 = sub_1DD63E938();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1DD357884(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DD3DA058(uint64_t a1, char a2)
{
  return sub_1DD3DBCA8(a1, a2, &qword_1ED378400, (void (*)(uint64_t, _BYTE *))sub_1DD357884, (void (*)(uint64_t, _BYTE *))sub_1DD3714B4);
}

uint64_t sub_1DD3DA074(uint64_t a1, char a2)
{
  return sub_1DD3DAB98(a1, a2, (uint64_t *)&unk_1F03E41F0);
}

uint64_t sub_1DD3DA080(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1DD63D768();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DD63D7C8();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E41D0);
  v11 = sub_1DD63E7DC();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1DD63E0EC();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1DD3DA478(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1DD63D7C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4180);
  v42 = a2;
  v10 = sub_1DD63E7DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_unknownObjectRetain();
    }
    sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1DD63E0EC();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1DD3DA80C(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;
  int v49;

  v47 = a5;
  v48 = a6;
  v8 = v6;
  v46 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v42 - v12;
  v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_1DD63E7DC();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v44 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v42 = v6;
  v43 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v43)
      break;
    v28 = v44;
    v29 = v44[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v43)
        goto LABEL_34;
      v29 = v44[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v43)
        {
LABEL_34:
          swift_release();
          v8 = v42;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v44[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v43)
              goto LABEL_34;
            v29 = v44[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
    }
    sub_1DD353504(v47, v46, v48);
    result = sub_1DD63E0EC();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v42;
  v28 = v44;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v14 + 32);
  if (v41 >= 64)
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v41;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_1DD3DAB98(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1DD63E7DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1DD63E4DC();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1DD3DAE68(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1DD63D7C8();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4160);
  v8 = sub_1DD63E7DC();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1DD63E0EC();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DD3DB204(uint64_t a1, int a2)
{
  return sub_1DD3DA80C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], &qword_1F03E4158, &qword_1F03E4130, MEMORY[0x1E0CB08A8]);
}

uint64_t sub_1DD3DB228(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  unint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_1DD63D984();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v47[-v9];
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40E0);
  v12 = sub_1DD63E7DC();
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v49 = v2;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11;
  v18 = v12 + 64;
  v54 = v17;
  result = swift_retain();
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v53 = v8;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_24;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v50)
      break;
    v29 = v51;
    v30 = v51[v28];
    ++v20;
    if (!v30)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v50)
        goto LABEL_34;
      v30 = v51[v20];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v50)
        {
LABEL_34:
          v45 = v54;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v51[v31];
        if (!v30)
        {
          while (1)
          {
            v20 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v20 >= v50)
              goto LABEL_34;
            v30 = v51[v20];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v20 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v20 << 6);
LABEL_24:
    v32 = v54;
    v33 = *(_QWORD *)(v55 + 72);
    v34 = v33 * v27;
    v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v55 + v52);
    v35(v10, *(_QWORD *)(v54 + 48) + v33 * v27, v5);
    v36 = *(_QWORD *)(v32 + 56) + v34;
    v37 = v53;
    v35(v53, v36, v5);
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    result = sub_1DD63E0EC();
    v38 = -1 << *(_BYTE *)(v12 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v18 + 8 * v40);
      }
      while (v44 == -1);
      v22 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v33 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v33 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32);
    v25(v24, v10, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v37, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v45 = v54;
  swift_release();
  v3 = v49;
  v29 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v29, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1DD3DB600(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1DD63D984();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40F0);
  v42 = a2;
  v10 = sub_1DD63E7DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    result = sub_1DD63E0EC();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1DD3DB994(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E40C0);
  v6 = sub_1DD63E7DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1DD357884((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1DD3DE980(v25, (uint64_t)&v38);
      sub_1DD3DE740(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1DD63E650();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1DD357884(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DD3DBCA8(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *), void (*a5)(uint64_t, _BYTE *))
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v42;
  _BYTE v43[32];

  v7 = v5;
  v9 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v42 = a2;
  v10 = sub_1DD63E7DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v40 = v9 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *(_QWORD *)(v9 + 64);
  v38 = v5;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v15 = v10 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = (_QWORD *)(v9 + 64);
    v24 = *(_QWORD *)(v40 + 8 * v22);
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = *(_QWORD *)(v40 + 8 * v17);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v7 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v39)
              goto LABEL_34;
            v24 = *(_QWORD *)(v40 + 8 * v17);
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v9 + 56) + 32 * v21;
    if ((v42 & 1) != 0)
    {
      a4(v29, v43);
    }
    else
    {
      a5(v29, v43);
      swift_bridgeObjectRetain();
    }
    sub_1DD63E908();
    sub_1DD63E17C();
    result = sub_1DD63E938();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v43, *(_QWORD *)(v11 + 56) + 32 * v18);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v7 = v38;
  v23 = (_QWORD *)(v9 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v11;
  return result;
}

_OWORD *sub_1DD3DBFD0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1DD3D94F4((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
        return sub_1DD357884(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DD3DCEC4();
      goto LABEL_7;
    }
    sub_1DD3D9D20(v12, a3 & 1);
    v18 = sub_1DD3D94F4((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DD3DCB5C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for HFItemResultKey(0);
  result = (_OWORD *)sub_1DD63E8A8();
  __break(1u);
  return result;
}

id sub_1DD3DC0F0(uint64_t a1, void *a2, char a3)
{
  return sub_1DD3DC2D4(a1, a2, a3, (uint64_t (*)(void *))sub_1DD3D95C0, &qword_1F03E41C8, (unint64_t *)&qword_1F03E41C0);
}

uint64_t sub_1DD3DC114(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1DD3DC120(a1, a2, a3, &qword_1F03E41D8);
}

uint64_t sub_1DD3DC120(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD **v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (_QWORD **)v4;
  v27 = a1;
  v9 = sub_1DD63D7C8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1DD35333C(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v6;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v15) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1DD3DD998((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a4);
    goto LABEL_7;
  }
  sub_1DD3DA80C(v18, a3 & 1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], a4, &qword_1F03E4120, MEMORY[0x1E0CB09C8]);
  v24 = sub_1DD35333C(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1DD63E8A8();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v6;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_1DD3DCC08(v15, (uint64_t)v12, v27, v21);
}

id sub_1DD3DC2B0(uint64_t a1, void *a2, char a3)
{
  return sub_1DD3DC2D4(a1, a2, a3, (uint64_t (*)(void *))sub_1DD3D960C, &qword_1F03E4170, (unint64_t *)&unk_1ED3783A8);
}

id sub_1DD3DC2D4(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), uint64_t *a5, unint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v10;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id result;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v10 = v6;
  v13 = *v6;
  v15 = a4(a2);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v14;
  v20 = *(_QWORD *)(v13 + 24);
  if (v20 >= v18 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1DD3DD5C0(a5);
LABEL_7:
    v21 = (_QWORD *)*v10;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v15) = a1;
      return result;
    }
LABEL_11:
    v21[(v15 >> 6) + 8] |= 1 << v15;
    v26 = 8 * v15;
    *(_QWORD *)(v21[6] + v26) = a2;
    *(_QWORD *)(v21[7] + v26) = a1;
    v27 = v21[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v21[2] = v29;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1DD3DAB98(v18, a3 & 1, a5);
  v24 = a4(a2);
  if ((v19 & 1) == (v25 & 1))
  {
    v15 = v24;
    v21 = (_QWORD *)*v10;
    if ((v19 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DD352AB0(0, a6);
  result = (id)sub_1DD63E8A8();
  __break(1u);
  return result;
}

uint64_t sub_1DD3DC45C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1DD63D7C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DD35333C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1DD3DD760();
    goto LABEL_7;
  }
  sub_1DD3DAE68(result, a3 & 1);
  result = sub_1DD35333C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1DD63E8A8();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DD3DCC08(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DD3DC5AC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1DD63D984();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DD3D96F0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DD3DDBC8();
      goto LABEL_7;
    }
    sub_1DD3DB228(v17, a3 & 1);
    v22 = sub_1DD3D96F0(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DD3DCCA0(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1DD63E8A8();
  __break(1u);
  return result;
}

void sub_1DD3DC728(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1DD63D984();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DD3D96F0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DD3DDE24();
    goto LABEL_7;
  }
  sub_1DD3DB600(v17, a3 & 1);
  v22 = sub_1DD3D96F0(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1DD63E8A8();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1DD3DCD4C(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1DD3DC884(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1DD3D9460(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_1DD357884(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1DD3DE04C();
      goto LABEL_7;
    }
    sub_1DD3DB994(v13, a3 & 1);
    v19 = sub_1DD3D9460(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DD3DE980(a2, (uint64_t)v21);
      return sub_1DD3DCDE4(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1DD63E8A8();
  __break(1u);
  return result;
}

uint64_t sub_1DD3DC9BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DD3DC9D8(a1, a2, a3, a4, &qword_1F03E40A0, (void (*)(unint64_t, _BYTE *))sub_1DD3DE740, (uint64_t (*)(uint64_t, uint64_t))sub_1DD357884);
}

uint64_t sub_1DD3DC9D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(unint64_t, _BYTE *), uint64_t (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD **v10;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;

  v10 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_1DD3DE420(a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7] + 32 * v17;
        __swift_destroy_boxed_opaque_existential_0(v24);
        return a7(a1, v24);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1DD3DE230(a5, a6, (void (*)(_BYTE *, uint64_t))a7);
      goto LABEL_7;
    }
    sub_1DD3DBCA8(v20, a4 & 1, a5, (void (*)(uint64_t, _BYTE *))a7, (void (*)(uint64_t, _BYTE *))a6);
    v26 = sub_1DD3DE420(a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DD3713C8);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DD3DCE5C(v17, a2, a3, a1, v23, a7);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1DD63E8A8();
  __break(1u);
  return result;
}

_OWORD *sub_1DD3DCB5C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1DD357884(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1DD3DCBC0(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1DD3DCC08(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DD63D7C8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1DD3DCCA0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DD63D984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72) * a1;
  v12 = v8 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v12, a2, v9);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a4[7] + v11, a3, v9);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_1DD3DCD4C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DD63D984();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1DD3DCDE4(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1DD357884(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1DD3DCE5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a5[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = a6(a4, a5[7] + 32 * a1);
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

id sub_1DD3DCEC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5D10);
  v2 = *v0;
  v3 = sub_1DD63E7D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1DD3DE740(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1DD357884(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DD088()
{
  return sub_1DD3DE230(&qword_1ED378400, (void (*)(unint64_t, _BYTE *))sub_1DD3714B4, (void (*)(_BYTE *, uint64_t))sub_1DD357884);
}

void *sub_1DD3DD0A4()
{
  return sub_1DD3DD5C0((uint64_t *)&unk_1F03E41F0);
}

char *sub_1DD3DD0B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1DD63D768();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1DD63D7C8();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E41D0);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1DD63E7D0();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DD3DD390()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DD63D7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4180);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DD63E7D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DD5C0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1DD63E7D0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DD760()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DD63D7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4160);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DD63E7D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DD984()
{
  return sub_1DD3DD998((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1F03E4158);
}

void *sub_1DD3DD998(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_1DD63E7D0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DDBC8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_1DD63D984();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40E0);
  v26 = v0;
  v8 = *v0;
  v9 = sub_1DD63E7D0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1DD3DDE24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DD63D984();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E40F0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DD63E7D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DE04C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E40C0);
  v2 = *v0;
  v3 = sub_1DD63E7D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1DD3DE980(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1DD3DE740(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1DD357884(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD3DE230(uint64_t *a1, void (*a2)(unint64_t, _BYTE *), void (*a3)(_BYTE *, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _BYTE v31[32];

  v5 = v3;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v6 = *v3;
  v7 = sub_1DD63E7D0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v8;
    return result;
  }
  v28 = v5;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = 32 * v18;
    a2(*(_QWORD *)(v6 + 56) + 32 * v18, v31);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v21;
    v24[1] = v22;
    a3(v31, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DD3DE420(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1DD63E908();
  sub_1DD63E17C();
  v5 = sub_1DD63E938();
  return a3(a1, a2, v5);
}

uint64_t sub_1DD3DE48C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD3DE4B0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD3DE4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED94;
  v4[88] = v3;
  v4[87] = v2;
  return swift_task_switch();
}

uint64_t sub_1DD3DE540()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD3DE574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1DD3DE5EC;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1DD3DE5EC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for SwiftItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for SwiftItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SwiftItem.subclassUpdate(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DE6D4;
  return v7(a1);
}

uint64_t sub_1DD3DE6D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of SwiftItem.failureResults.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t sub_1DD3DE740(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DD3DE77C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1DD3DE7E4;
  return v5(v2 + 32);
}

uint64_t sub_1DD3DE7E4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DD3DE834(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_1DD3DE89C;
  return v5(v2 + 16);
}

uint64_t sub_1DD3DE89C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DD3DE8EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD3DE910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F03E40B0 + dword_1F03E40B0))(a1, v4);
}

uint64_t sub_1DD3DE980(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DD3DE9BC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1DD3DE9F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return sub_1DD3D9220(a1, v4, v5, v6);
}

uint64_t sub_1DD3DEA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F03E4140 + dword_1F03E4140))(a1, v4);
}

uint64_t sub_1DD3DEAD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return sub_1DD3D9220(a1, v4, v5, v6);
}

uint64_t sub_1DD3DEB3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F03E41A0 + dword_1F03E41A0))(a1, v4);
}

uint64_t sub_1DD3DEBAC()
{
  return swift_release();
}

uint64_t sub_1DD3DEBB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DD3DEBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F03E41B8 + dword_1F03E41B8))(a1, v4);
}

uint64_t sub_1DD3DEC68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DE5EC;
  return sub_1DD3D8E34(a1, v4, v5, v6);
}

id sub_1DD3DECD4()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + 16);
  result = objc_msgSend(v1, sel_isCancelled);
  if ((result & 1) == 0)
    return objc_msgSend(v1, sel_cancel);
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1DD3DED98()
{
  uint64_t result;

  type metadata accessor for CharacteristicNotificationManager(0);
  swift_allocObject();
  result = sub_1DD3DF0DC();
  qword_1F03E4220 = result;
  return result;
}

uint64_t static CharacteristicNotificationManager.shared.getter()
{
  return sub_1DD3E4488(&qword_1F03E37A8);
}

uint64_t CharacteristicNotificationManager.disableReasons.getter()
{
  return sub_1DD3E2D44();
}

uint64_t CharacteristicNotificationManager.disableReasons.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_disableReasons;
  swift_beginAccess();
  *(_QWORD *)v10 = a1;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_isDisabled) = *(_QWORD *)(*(_QWORD *)v10 + 16) != 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  sub_1DD63E314();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*CharacteristicNotificationManager.disableReasons.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  v3[4] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[6] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v8 = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_disableReasons;
  v3[7] = v7;
  v3[8] = v8;
  swift_beginAccess();
  return sub_1DD3DEFF8;
}

void sub_1DD3DEFF8(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  swift_endAccess();
  v4 = (void *)v3[7];
  if ((a2 & 1) != 0)
  {
    v5 = (void *)v3[4];
  }
  else
  {
    v6 = v3[5];
    v7 = v3[6];
    v5 = (void *)v3[4];
    *(_BYTE *)(v3[3] + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_isDisabled) = *(_QWORD *)(*(_QWORD *)(v3[3] + v3[8]) + 16) != 0;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
    sub_1DD63E314();
    (*(void (**)(void *, uint64_t))(v7 + 8))(v4, v6);
  }
  free(v4);
  free(v5);
  free(v3);
}

uint64_t sub_1DD3DF0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4728);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4730);
  v7 = MEMORY[0x1E0C80A78](v38);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v35 - v10;
  sub_1DD63D7C8();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  type metadata accessor for CharacteristicNotificationManager.RegistrationRequest(0);
  sub_1DD3EBAA8(&qword_1F03E4120, 255, v12, MEMORY[0x1E0CB09C8]);
  sub_1DD63DA14();
  v13 = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics;
  v14 = sub_1DD3D637C(MEMORY[0x1E0DEE9D8]);
  v36 = v0;
  *(_QWORD *)(v0 + v13) = v14;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_previousNotificationState) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_disableReasons) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_isDisabled) = 0;
  v15 = (uint64_t)v38;
  v16 = &v11[*((int *)v38 + 12)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v35 = v16;
  sub_1DD63E308();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17 = &v9[*(int *)(v15 + 48)];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E42D8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v20(v9, v11, v18);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v23(v17, v16, v21);
  v24 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v36 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionStream, v9, v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v21);
  v25 = &v9[*((int *)v38 + 12)];
  v38 = v11;
  v20(v9, v11, v18);
  v23(v25, v35, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionContinuation, v25, v21);
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v27 = (uint64_t)v37;
  v26(v9, v18);
  v28 = sub_1DD63E2FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = qword_1F03E37B0;
  swift_retain();
  if (v29 != -1)
    swift_once();
  v31 = qword_1F03E4228;
  v32 = sub_1DD3EBAA8(&qword_1F03E4300, v30, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicNotificationActor, (uint64_t)&protocol conformance descriptor for CharacteristicNotificationActor);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v31;
  v33[3] = v32;
  v33[4] = v24;
  swift_retain();
  sub_1DD3D883C(v27, (uint64_t)&unk_1F03E4740, (uint64_t)v33);
  swift_release();
  sub_1DD3540B8((uint64_t)v38, &qword_1F03E4730);
  return v24;
}

uint64_t CharacteristicNotificationManager.endAllSubscriptions()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  if (qword_1F03E37B0 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_1DD3DF514()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  sub_1DD63D9FC();
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_1DD3DF588()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DF608;
  return sub_1DD63E830();
}

uint64_t sub_1DD3DF608()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3DF65C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CharacteristicNotificationManager.add(registrationRequest:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_1DD63D7C8();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  if (qword_1F03E37B0 != -1)
    swift_once();
  v2[11] = qword_1F03E4228;
  return swift_task_switch();
}

uint64_t sub_1DD3DF6F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedDispatcher);
  v3 = objc_msgSend(v2, sel_homeManager);

  if (v3)
  {
    *(_QWORD *)(v0 + 96) = objc_msgSend(v1, sel_sharedDispatcher);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_1DD3DF7CC;
    return HFHomeKitDispatcher.allHomes.getter();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD3DF7CC(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_1DD3DF860()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 112);

  v3 = *(id *)(v1 + 16);
  v4 = sub_1DD3DFC20((uint64_t)v3, v2);

  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    if (qword_1F03E37C8 != -1)
      swift_once();
    v5 = sub_1DD63DF18();
    __swift_project_value_buffer(v5, (uint64_t)qword_1F03E4230);
    swift_retain_n();
    v6 = sub_1DD63DF00();
    v7 = sub_1DD63E488();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v14 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_retain();
      v10 = CharacteristicNotificationManager.RegistrationRequest.description.getter();
      v12 = v11;
      swift_release();
      *(_QWORD *)(v0 + 40) = sub_1DD3C3160(v10, v12, &v14);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1DD34E000, v6, v7, "Adding registration request: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v9, -1, -1);
      MEMORY[0x1DF0DB358](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 16))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_identifier, *(_QWORD *)(v0 + 64));
    swift_beginAccess();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
    sub_1DD63DA2C();
    swift_endAccess();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD3DFB1C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DFB9C;
  return sub_1DD63E830();
}

uint64_t sub_1DD3DFB9C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3DFBF0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3DFC20(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1DD63E7B8())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1DF0DA2C0](0, a2);
LABEL_5:
      v6 = v5;
      sub_1DD352AB0(0, &qword_1F03E4720);
      v7 = sub_1DD63E4E8();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1DD63E4E8();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1DF0DA2C0](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1DD63E4E8();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t CharacteristicNotificationManager.remove(registrationRequest:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  if (qword_1F03E37B0 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_1DD3DFE08()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_1F03E37C8 != -1)
    swift_once();
  v1 = sub_1DD63DF18();
  __swift_project_value_buffer(v1, (uint64_t)qword_1F03E4230);
  swift_retain_n();
  v2 = sub_1DD63DF00();
  v3 = sub_1DD63E488();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    v6 = CharacteristicNotificationManager.RegistrationRequest.description.getter();
    v8 = v7;
    swift_release();
    *(_QWORD *)(v0 + 40) = sub_1DD3C3160(v6, v8, &v10);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1DD34E000, v2, v3, "Removing registration request: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v5, -1, -1);
    MEMORY[0x1DF0DB358](v4, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  sub_1DD63D9F0();
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_1DD3E0040()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3E00C0;
  return sub_1DD63E830();
}

uint64_t sub_1DD3E00C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3E0114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v4, a1, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  sub_1DD63E314();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DD3E023C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4748);
  v4[7] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4750);
  v4[8] = v6;
  v4[9] = *(_QWORD *)(v6 - 8);
  v4[10] = swift_task_alloc();
  if (qword_1F03E37B0 != -1)
    swift_once();
  v4[11] = qword_1F03E4228;
  return swift_task_switch();
}

uint64_t sub_1DD3E0330()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E42D8);
  sub_1DD63E320();
  sub_1DD3EBAA8(&qword_1F03E4300, v1, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicNotificationActor, (uint64_t)&protocol conformance descriptor for CharacteristicNotificationActor);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_1DD3E03E4;
  return sub_1DD63E32C();
}

uint64_t sub_1DD3E03E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3E0438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 48))(v1, 1, *(_QWORD *)(v0 + 24)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_1DD3EEB88(v1, *(_QWORD *)(v0 + 48));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = sub_1DD3E0504;
    return sub_1DD3E067C();
  }
}

uint64_t sub_1DD3E0504()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3E055C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[5];
  sub_1DD3DEBB4(v0[6], v1, &qword_1F03E4248);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = v0[5];
  v6 = v0[6];
  if (v4 == 1)
  {
    sub_1DD3540B8(v0[6], &qword_1F03E4248);
    sub_1DD3540B8(v5, &qword_1F03E4248);
  }
  else
  {
    sub_1DD63E2A8();
    sub_1DD3540B8(v6, &qword_1F03E4248);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1DD3EBAA8(&qword_1F03E4300, v7, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicNotificationActor, (uint64_t)&protocol conformance descriptor for CharacteristicNotificationActor);
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_1DD3E03E4;
  return sub_1DD63E32C();
}

uint64_t sub_1DD3E067C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  if (qword_1F03E37B0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 96) = qword_1F03E4228;
  return swift_task_switch();
}

uint64_t sub_1DD3E06E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  objc_class *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = (uint64_t *)(v0 + 88);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  v2 = sub_1DD63D9E4();
  swift_endAccess();
  v3 = (unint64_t)sub_1DD40D72C(v2);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    swift_release();
  }
  else
  {
    v4 = *(_QWORD *)(v3 + 16);
  }
  v5 = *v1;
  if (v4 <= 0
    && !*(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics)
                  + 16))
  {
    swift_release();
    if (qword_1F03E37C8 != -1)
      swift_once();
    v40 = sub_1DD63DF18();
    __swift_project_value_buffer(v40, (uint64_t)qword_1F03E4230);
    v41 = sub_1DD63DF00();
    v42 = sub_1DD63E488();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1DD34E000, v41, v42, "No registrations to enable or disable", v43, 2u);
      MEMORY[0x1DF0DB358](v43, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v4 && (*(_BYTE *)(v5 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_isDisabled) & 1) != 0)
  {
    swift_release();
    v6 = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics;
    *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics;
    v7 = *(_QWORD *)(v5 + v6);
    *(_QWORD *)(v0 + 152) = v7;
    v8 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v0 + 193) = v8;
    v9 = -1;
    v10 = -1 << v8;
    if (-(-1 << v8) < 64)
      v9 = ~(-1 << -(char)v10);
    v11 = v9 & *(_QWORD *)(v7 + 64);
    v12 = (_QWORD *)swift_bridgeObjectRetain();
    if (v11)
    {
      v13 = 0;
      v14 = __clz(__rbit64(v11));
      v15 = (v11 - 1) & v11;
LABEL_12:
      *(_QWORD *)(v0 + 160) = v15;
      *(_QWORD *)(v0 + 168) = v13;
      v16 = *(void **)(v12[6] + 8 * v14);
      *(_QWORD *)(v0 + 176) = v16;
      v17 = v16;
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v18;
      *v18 = v0;
      v18[1] = sub_1DD3E10B4;
      return sub_1DD3EC764((uint64_t)v17);
    }
    v38 = 63 - v10;
    if ((unint64_t)(63 - v10) > 0x7F)
    {
      v39 = v12[9];
      if (v39)
      {
        v13 = 1;
LABEL_24:
        v15 = (v39 - 1) & v39;
        v14 = __clz(__rbit64(v39)) + (v13 << 6);
        goto LABEL_12;
      }
      if (v38 >= 0xC0)
      {
        v39 = v12[10];
        if (v39)
        {
          v13 = 2;
          goto LABEL_24;
        }
        if (v38 >= 0x100)
        {
          v39 = v12[11];
          if (v39)
          {
            v13 = 3;
            goto LABEL_24;
          }
          if (v38 >= 0x140)
          {
            v39 = v12[12];
            if (v39)
            {
              v13 = 4;
              goto LABEL_24;
            }
            if (v38 >= 0x180)
            {
              v39 = v12[13];
              if (v39)
              {
                v13 = 5;
                goto LABEL_24;
              }
              if (v38 >= 0x1C0)
              {
                v39 = v12[14];
                if (v39)
                {
                  v13 = 6;
                  goto LABEL_24;
                }
                v44 = 0;
                v45 = v38 >> 6;
                if (v38 >> 6 <= 7)
                  v45 = 7;
                v46 = v45 - 7;
                while (v46 != v44)
                {
                  v39 = v12[v44++ + 15];
                  if (v39)
                  {
                    v13 = v44 + 6;
                    goto LABEL_24;
                  }
                }
              }
            }
          }
        }
      }
    }
    v47 = *v1;
    swift_release();
    *(_QWORD *)(v47 + v6) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_1F03E37C8 != -1)
    swift_once();
  v20 = sub_1DD63DF18();
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v20, (uint64_t)qword_1F03E4230);
  swift_retain();
  v21 = sub_1DD63DF00();
  v22 = sub_1DD63E488();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 134217984;
    *(_QWORD *)(v0 + 80) = v4;
    sub_1DD63E53C();
    swift_release();
    _os_log_impl(&dword_1DD34E000, v21, v22, "Updating subscriptions for registrations (c:%ld)", v23, 0xCu);
    MEMORY[0x1DF0DB358](v23, -1, -1);
  }
  else
  {
    swift_release();
  }

  v24 = sub_1DD3EC294(v3);
  *(_QWORD *)(v0 + 112) = v24;
  swift_release();
  v25 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v26 = objc_msgSend(v25, sel_homeManager);

  if (v26)
  {
    v27 = *(_QWORD *)(v0 + 88);
    swift_retain();
    sub_1DD3EBBD0(MEMORY[0x1E0DEE9E0], v24, v27);
    v29 = v28;
    swift_release();
    v30 = (_QWORD *)(v27 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_previousNotificationState);
    swift_beginAccess();
    *v30 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = (objc_class *)type metadata accessor for CharacteristicNotificationManager.StateContainer();
    v32 = (char *)objc_allocWithZone(v31);
    *(_QWORD *)&v32[OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager14StateContainer_characteristicsEnabled] = v29;
    *(_QWORD *)(v0 + 64) = v32;
    *(_QWORD *)(v0 + 72) = v31;
    v33 = objc_msgSendSuper2((objc_super *)(v0 + 64), sel_init);
    objc_msgSend((id)objc_opt_self(), sel_setOverrideNotificationsStateContainer_, v33);

  }
  v34 = *(_QWORD *)(v0 + 88);
  v35 = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscribedCharacteristics;
  v36 = *(_QWORD *)(v34 + v35);
  *(_QWORD *)(v0 + 128) = v36;
  swift_bridgeObjectRetain();
  v37 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v37;
  *v37 = v0;
  v37[1] = sub_1DD3E0CDC;
  return sub_1DD3ED1D0(v24, v36);
}

uint64_t sub_1DD3E0CDC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 192) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_1DD3E0D44()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(unsigned __int8 *)(v0 + 192);
  *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 120)) = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  if ((sub_1DD63DEF4() & 1) == 0 || !v1)
    goto LABEL_27;
  v2 = *(_QWORD *)(*(_QWORD *)(v32 + 88) + *(_QWORD *)(v32 + 120));
  v29 = v2 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v2 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v28 = v2;
  if (v5)
    goto LABEL_8;
LABEL_9:
  v9 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v9 < v30)
    {
      v10 = *(_QWORD *)(v29 + 8 * v9);
      ++v6;
      if (v10)
        goto LABEL_22;
      v6 = v9 + 1;
      if (v9 + 1 < v30)
      {
        v10 = *(_QWORD *)(v29 + 8 * v6);
        if (v10)
          goto LABEL_22;
        v6 = v9 + 2;
        if (v9 + 2 < v30)
        {
          v10 = *(_QWORD *)(v29 + 8 * v6);
          if (!v10)
          {
            v11 = v9 + 3;
            if (v11 < v30)
            {
              v10 = *(_QWORD *)(v29 + 8 * v11);
              if (v10)
              {
                v6 = v11;
                goto LABEL_22;
              }
              while (1)
              {
                v6 = v11 + 1;
                if (__OFADD__(v11, 1))
                  goto LABEL_29;
                if (v6 >= v30)
                  goto LABEL_26;
                v10 = *(_QWORD *)(v29 + 8 * v6);
                ++v11;
                if (v10)
                  goto LABEL_22;
              }
            }
            goto LABEL_26;
          }
LABEL_22:
          v5 = (v10 - 1) & v10;
          for (i = __clz(__rbit64(v10)) + (v6 << 6); ; i = v7 | (v6 << 6))
          {
            v12 = 8 * i;
            v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v12);
            v14 = *(id *)(*(_QWORD *)(v2 + 48) + v12);
            swift_bridgeObjectRetain_n();
            v15 = v14;
            v16 = sub_1DD63DF00();
            v17 = sub_1DD63E488();
            if (os_log_type_enabled(v16, v17))
            {
              v18 = swift_slowAlloc();
              v31 = v5;
              v19 = swift_slowAlloc();
              v33 = v19;
              *(_DWORD *)v18 = 136315394;
              v20 = v6;
              v21 = objc_msgSend(v15, sel_name);
              v22 = sub_1DD63E14C();
              v24 = v23;

              v6 = v20;
              *(_QWORD *)(v18 + 4) = sub_1DD3C3160(v22, v24, &v33);
              swift_bridgeObjectRelease();

              *(_WORD *)(v18 + 12) = 2080;
              v25 = Set<>.groupedDescription.getter(v13);
              *(_QWORD *)(v18 + 14) = sub_1DD3C3160(v25, v26, &v33);
              v2 = v28;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1DD34E000, v16, v17, "%s: currently subscribed to %s", (uint8_t *)v18, 0x16u);
              swift_arrayDestroy();
              v27 = v19;
              v5 = v31;
              MEMORY[0x1DF0DB358](v27, -1, -1);
              MEMORY[0x1DF0DB358](v18, -1, -1);

              if (!v31)
                goto LABEL_9;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              if (!v5)
                goto LABEL_9;
            }
LABEL_8:
            v7 = __clz(__rbit64(v5));
            v5 &= v5 - 1;
          }
        }
      }
    }
LABEL_26:
    swift_release();
LABEL_27:
    (*(void (**)(void))(v32 + 8))();
    return;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1DD3E10B4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1DD3E110C()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    v6 = *(_QWORD *)(v0 + 152);
LABEL_3:
    *(_QWORD *)(v0 + 160) = v4;
    *(_QWORD *)(v0 + 168) = v1;
    v7 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v5);
    *(_QWORD *)(v0 + 176) = v7;
    v8 = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v9;
    *v9 = v0;
    v9[1] = sub_1DD3E10B4;
    sub_1DD3EC764((uint64_t)v8);
    return;
  }
  v10 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = (unint64_t)((1 << *(_BYTE *)(v0 + 193)) + 63) >> 6;
    v6 = *(_QWORD *)(v0 + 152);
    if (v10 >= v11)
      goto LABEL_22;
    v12 = v6 + 64;
    v13 = *(_QWORD *)(v6 + 64 + 8 * v10);
    ++v1;
    if (v13)
    {
LABEL_7:
      v4 = (v13 - 1) & v13;
      v5 = __clz(__rbit64(v13)) + (v1 << 6);
      goto LABEL_3;
    }
    v1 = v10 + 1;
    if (v10 + 1 >= v11)
      goto LABEL_22;
    v13 = *(_QWORD *)(v12 + 8 * v1);
    if (v13)
      goto LABEL_7;
    v1 = v10 + 2;
    if (v10 + 2 >= v11)
      goto LABEL_22;
    v13 = *(_QWORD *)(v12 + 8 * v1);
    if (v13)
      goto LABEL_7;
    v1 = v10 + 3;
    if (v10 + 3 >= v11)
      goto LABEL_22;
    v13 = *(_QWORD *)(v12 + 8 * v1);
    if (v13)
      goto LABEL_7;
    v1 = v10 + 4;
    if (v10 + 4 >= v11)
      goto LABEL_22;
    v13 = *(_QWORD *)(v12 + 8 * v1);
    if (v13)
      goto LABEL_7;
    v14 = v10 + 5;
    if (v14 >= v11)
    {
LABEL_22:
      v15 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 88);
      swift_release();
      *(_QWORD *)(v16 + v15) = MEMORY[0x1E0DEE9E0];
      swift_bridgeObjectRelease();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v13 = *(_QWORD *)(v12 + 8 * v14);
    if (v13)
    {
      v1 = v14;
      goto LABEL_7;
    }
    while (1)
    {
      v1 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (v1 >= v11)
        goto LABEL_22;
      v13 = *(_QWORD *)(v12 + 8 * v1);
      ++v14;
      if (v13)
        goto LABEL_7;
    }
  }
  __break(1u);
}

uint64_t Set<>.groupedDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  id v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, int64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t result;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t i;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  int64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;

  v3 = sub_1DD63D7C8();
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  MEMORY[0x1E0C80A78](v3);
  v91 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DD63DA80();
  v102 = *(_QWORD *)(v5 - 8);
  v103 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v99 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v101 = (char *)&v86 - v9;
  MEMORY[0x1E0C80A78](v8);
  v100 = (uint64_t)&v86 - v10;
  v11 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (!sub_1DD63E5E4())
      goto LABEL_8;
  }
  else if (!*(_QWORD *)(a1 + 16))
  {
LABEL_8:
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD361D24();
    return sub_1DD63E3A4();
  }
  if ((sub_1DD63DEF4() & 1) == 0)
    goto LABEL_8;
  v12 = sub_1DD3D6390(MEMORY[0x1E0DEE9D8]);
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD361D24();
    sub_1DD63E3F8();
    a1 = v107;
    v13 = v108;
    v14 = v109;
    v11 = v110;
    v15 = v111;
  }
  else
  {
    v17 = -1 << *(_BYTE *)(a1 + 32);
    v13 = a1 + 56;
    v14 = ~v17;
    v18 = -v17;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
  }
  v95 = (id)v14;
  v97 = (_QWORD *)(a1 & 0x7FFFFFFFFFFFFFFFLL);
  v98 = (unint64_t)(v14 + 64) >> 6;
  v96 = MEMORY[0x1E0DEE9B0] + 8;
LABEL_14:
  v20 = v11;
  v21 = v15;
  for (i = v12; a1 < 0; v21 = v15)
  {
    v23 = sub_1DD63E614();
    if (!v23)
      goto LABEL_44;
    v104 = v23;
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v1 = v105;
    swift_unknownObjectRelease();
    v11 = v20;
    v15 = v21;
    if (!v1)
      goto LABEL_44;
LABEL_35:
    v27 = objc_msgSend((id)v1, sel_service);
    if (v27)
    {
      v28 = v27;
      v29 = v13;
      if (*(_QWORD *)(v12 + 16))
      {
        v30 = v27;
        v31 = sub_1DD3D95C0((uint64_t)v30);
        v32 = MEMORY[0x1E0DEE9E8];
        if ((v33 & 1) != 0)
        {
          v32 = *(_QWORD *)(*(_QWORD *)(i + 56) + 8 * v31);
          swift_bridgeObjectRetain();
        }

      }
      else
      {
        v32 = MEMORY[0x1E0DEE9E8];
      }
      v105 = v32;
      v34 = v101;
      sub_1DD63E494();
      v35 = v100;
      sub_1DD3E9288(v100, v34);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v35, v103);
      v36 = v105;
      v37 = v28;
      v38 = i;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v104 = v38;
      sub_1DD3DC0F0(v36, v37, isUniquelyReferenced_nonNull_native);
      v12 = v104;

      swift_bridgeObjectRelease();
      v13 = v29;
      goto LABEL_14;
    }

    v20 = v11;
  }
  if (v21)
  {
    v15 = (v21 - 1) & v21;
    v22 = __clz(__rbit64(v21)) | (v20 << 6);
    v11 = v20;
    goto LABEL_34;
  }
  v24 = v20 + 1;
  if (__OFADD__(v20, 1))
    goto LABEL_84;
  if (v24 < v98)
  {
    v25 = *(_QWORD *)(v13 + 8 * v24);
    v11 = v20 + 1;
    if (v25)
      goto LABEL_33;
    v11 = v20 + 2;
    if ((uint64_t)(v20 + 2) >= v98)
      goto LABEL_44;
    v25 = *(_QWORD *)(v13 + 8 * v11);
    if (v25)
      goto LABEL_33;
    v11 = v20 + 3;
    if ((uint64_t)(v20 + 3) >= v98)
      goto LABEL_44;
    v25 = *(_QWORD *)(v13 + 8 * v11);
    if (v25)
    {
LABEL_33:
      v15 = (v25 - 1) & v25;
      v22 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_34:
      v1 = (uint64_t)*(id *)(*(_QWORD *)(a1 + 48) + 8 * v22);
      if (v1)
        goto LABEL_35;
      goto LABEL_44;
    }
    v11 = v20 + 4;
    if ((uint64_t)(v20 + 4) < v98)
    {
      v25 = *(_QWORD *)(v13 + 8 * v11);
      if (!v25)
      {
        v26 = v20 + 5;
        while (v98 != v26)
        {
          v25 = *(_QWORD *)(v13 + 8 * v26++);
          if (v25)
          {
            v11 = v26 - 1;
            goto LABEL_33;
          }
        }
        goto LABEL_44;
      }
      goto LABEL_33;
    }
  }
LABEL_44:
  sub_1DD3DEBAC();
  swift_bridgeObjectRetain_n();
  v40 = sub_1DD40D9BC(v12);
  swift_bridgeObjectRelease();
  v105 = (uint64_t)v40;
  sub_1DD3E5430(&v105);
  swift_bridgeObjectRelease();
  v1 = v105;
  if (v105 < 0 || (v105 & 0x4000000000000000) != 0)
    goto LABEL_85;
  v41 = *(_QWORD *)(v105 + 16);
  while (1)
  {
    v42 = MEMORY[0x1E0DEE9D8];
    if (!v41)
      break;
    v43 = 0;
    v44 = v1 & 0xC000000000000001;
    v94 = v1 + 32;
    v97 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v88 = v1;
    v87 = v41;
    v86 = v1 & 0xC000000000000001;
    while (1)
    {
      if (v44)
      {
        v45 = (id)MEMORY[0x1DF0DA2C0](v43, v1);
      }
      else
      {
        if (v43 >= *(_QWORD *)(v1 + 16))
          goto LABEL_83;
        v45 = *(id *)(v94 + 8 * v43);
      }
      v46 = v45;
      if (__OFADD__(v43++, 1))
        break;
      if (*(_QWORD *)(v12 + 16))
      {
        v48 = v45;
        v49 = sub_1DD3D95C0((uint64_t)v48);
        if ((v50 & 1) != 0)
        {
          v96 = (uint64_t)v46;
          v51 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v49);
          swift_bridgeObjectRetain();
          v95 = v48;

          v52 = *(_QWORD *)(v51 + 16);
          if (v52)
          {
            v90 = v43;
            v105 = v42;
            sub_1DD3E86C4(0, v52, 0);
            v53 = sub_1DD3EB674(v51);
            v1 = v54;
            v56 = v55 & 1;
            v98 = v51 + 56;
            do
            {
              if ((v56 & 1) != 0)
              {
                __break(1u);
                result = swift_release();
                __break(1u);
                return result;
              }
              if (v53 < 0 || v53 >= 1 << *(_BYTE *)(v51 + 32))
              {
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
                goto LABEL_82;
              }
              if (((*(_QWORD *)(v98 + (((unint64_t)v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
                goto LABEL_80;
              if (*(_DWORD *)(v51 + 36) != (_DWORD)v1)
                goto LABEL_81;
              v58 = v102;
              v57 = v103;
              v59 = *(void (**)(char *, int64_t, uint64_t))(v102 + 16);
              v60 = v99;
              v59(v99, *(_QWORD *)(v51 + 48) + *(_QWORD *)(v102 + 72) * v53, v103);
              v61 = v100;
              (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v100, v60, v57);
              v59(v101, v61, v57);
              v62 = sub_1DD63E164();
              v64 = v63;
              (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v61, v57);
              v65 = v105;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1DD3E86C4(0, *(_QWORD *)(v65 + 16) + 1, 1);
                v65 = v105;
              }
              v12 = *(_QWORD *)(v65 + 16);
              v66 = *(_QWORD *)(v65 + 24);
              if (v12 >= v66 >> 1)
              {
                sub_1DD3E86C4(v66 > 1, v12 + 1, 1);
                v65 = v105;
              }
              *(_QWORD *)(v65 + 16) = v12 + 1;
              v67 = v65 + 16 * v12;
              *(_QWORD *)(v67 + 32) = v62;
              *(_QWORD *)(v67 + 40) = v64;
              v68 = sub_1DD3EB714(v53, v1, 0, v51);
              v53 = v68;
              v1 = v69;
              v56 = v70 & 1;
              --v52;
            }
            while (v52);
            sub_1DD3EBA9C(v68, v69, v56);
            swift_bridgeObjectRelease();
            v105 = v65;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E53B0);
            sub_1DD3EBA50();
            sub_1DD63E0F8();
            swift_release();
            v71 = v95;
            v72 = objc_msgSend(v95, sel_name);
            v73 = sub_1DD63E14C();
            v75 = v74;

            v105 = v73;
            v106 = v75;
            sub_1DD63E188();
            v76 = objc_msgSend(v71, sel_uniqueIdentifier);
            v77 = v91;
            sub_1DD63D7A4();

            sub_1DD3EBAA8(&qword_1F03E42B8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
            v78 = v93;
            sub_1DD63E824();
            sub_1DD63E188();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v78);
            sub_1DD63E188();
            sub_1DD63E188();
            swift_bridgeObjectRelease();
            sub_1DD63E188();
            v79 = v105;
            v80 = v106;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v97 = sub_1DD3E4CDC(0, v97[2] + 1, 1, v97);
            v1 = v88;
            v41 = v87;
            v42 = MEMORY[0x1E0DEE9D8];
            v43 = v90;
            v44 = v86;
            v82 = v97[2];
            v81 = v97[3];
            v12 = i;
            if (v82 >= v81 >> 1)
              v97 = sub_1DD3E4CDC((_QWORD *)(v81 > 1), v82 + 1, 1, v97);
            v83 = v97;
            v97[2] = v82 + 1;
            v84 = &v83[2 * v82];
            v84[4] = v79;
            v84[5] = v80;
            v46 = (void *)v96;
          }
          else
          {
            swift_bridgeObjectRelease();
            v46 = (void *)v96;
          }
        }
        else
        {

        }
      }

      if (v43 == v41)
        goto LABEL_77;
    }
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
    v41 = sub_1DD63E7B8();
    swift_release();
  }
  v97 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_77:
  swift_release();
  v105 = (uint64_t)v97;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E53B0);
  sub_1DD3EBA50();
  sub_1DD63E0F8();
  swift_bridgeObjectRelease();
  v105 = 592475;
  v106 = 0xE300000000000000;
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  v16 = v105;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1DD3E1CF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(unint64_t, uint64_t);
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  unint64_t v84;
  int v85;
  char v86;
  unint64_t v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  unint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t *v102;
  char isUniquelyReferenced_nonNull_native;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  char *v106;
  id v107;
  uint64_t v108;
  unint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t i;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;

  v109 = a1;
  v128 = sub_1DD63D768();
  v117 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v120 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v8 = MEMORY[0x1E0C80A78](v7);
  v115 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v122 = (uint64_t)&v105 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v121 = (char *)&v105 - v13;
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)&v105 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DD63D7C8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v129 = (uint64_t)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v114 = (char *)&v105 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v105 - v25;
  MEMORY[0x1E0C80A78](v24);
  v116 = (char *)&v105 - v27;
  v28 = *(void **)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v30 = v28;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32 = objc_msgSend(v30, sel_hf_safeUniqueIdentifier);
  if (!v32)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_6;
  }
  v33 = v32;
  v119 = a3;
  sub_1DD63D7A4();

  v34 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v34(v17, v26, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();

    return sub_1DD3540B8((uint64_t)v17, (uint64_t *)&unk_1F03E47E0);
  }
  v106 = v26;
  v107 = v30;
  v124 = v19;
  v108 = v3;
  v34(v116, v17, v18);
  v125 = sub_1DD3D64B4(MEMORY[0x1E0DEE9D8]);
  if ((v31 & 0xC000000000000001) != 0)
  {
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD361D24();
    sub_1DD63E3F8();
    v31 = v131;
    v113 = v132;
    v35 = v133;
    v36 = v134;
    v37 = v135;
  }
  else
  {
    v36 = 0;
    v39 = -1 << *(_BYTE *)(v31 + 32);
    v40 = *(_QWORD *)(v31 + 56);
    v113 = v31 + 56;
    v41 = ~v39;
    v42 = -v39;
    if (v42 < 64)
      v43 = ~(-1 << v42);
    else
      v43 = -1;
    v37 = v43 & v40;
    v35 = v41;
  }
  v44 = v119;
  v45 = v117;
  v46 = (uint64_t)v123;
  v111 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  v105 = v35;
  v112 = (unint64_t)(v35 + 64) >> 6;
  v110 = MEMORY[0x1E0DEE9B0] + 8;
  for (i = v31; ; v31 = i)
  {
    if (v31 < 0)
    {
      v51 = sub_1DD63E614();
      if (!v51)
        goto LABEL_64;
      v136 = v51;
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v52 = (id)v130;
      swift_unknownObjectRelease();
      v50 = v36;
      v127 = v37;
      if (!v52)
        goto LABEL_64;
    }
    else
    {
      if (v37)
      {
        v127 = (v37 - 1) & v37;
        v49 = __clz(__rbit64(v37)) | (v36 << 6);
        v50 = v36;
      }
      else
      {
        v53 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_67;
        if (v53 >= v112)
          goto LABEL_64;
        v54 = *(_QWORD *)(v113 + 8 * v53);
        v50 = v36 + 1;
        if (!v54)
        {
          v50 = v36 + 2;
          if (v36 + 2 >= v112)
            goto LABEL_64;
          v54 = *(_QWORD *)(v113 + 8 * v50);
          if (!v54)
          {
            v50 = v36 + 3;
            if (v36 + 3 >= v112)
              goto LABEL_64;
            v54 = *(_QWORD *)(v113 + 8 * v50);
            if (!v54)
            {
              v50 = v36 + 4;
              if (v36 + 4 >= v112)
                goto LABEL_64;
              v54 = *(_QWORD *)(v113 + 8 * v50);
              if (!v54)
              {
                v55 = v36 + 5;
                while (v112 != v55)
                {
                  v54 = *(_QWORD *)(v113 + 8 * v55++);
                  if (v54)
                  {
                    v50 = v55 - 1;
                    v31 = i;
                    goto LABEL_34;
                  }
                }
LABEL_64:
                sub_1DD3DEBAC();
                v99 = v124;
                v100 = (uint64_t)v106;
                v101 = (uint64_t)v116;
                (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v106, v116, v18);
                v102 = v109;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v130 = *v102;
                *v102 = 0x8000000000000000;
                sub_1DD3DC114(v125, v100, isUniquelyReferenced_nonNull_native);
                *v102 = v130;
                swift_bridgeObjectRelease();
                v104 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
                v104(v100, v18);

                return ((uint64_t (*)(uint64_t, uint64_t))v104)(v101, v18);
              }
            }
          }
        }
LABEL_34:
        v127 = (v54 - 1) & v54;
        v49 = __clz(__rbit64(v54)) + (v50 << 6);
      }
      v52 = *(id *)(*(_QWORD *)(v31 + 48) + 8 * v49);
      if (!v52)
        goto LABEL_64;
    }
    v126 = v50;
    v56 = (uint64_t *)(v44 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_previousNotificationState);
    swift_beginAccess();
    v57 = *v56;
    if (v57 && *(_QWORD *)(v57 + 16) && (v58 = sub_1DD35333C((uint64_t)v116), (v59 & 1) != 0))
    {
      v60 = *(_QWORD *)(*(_QWORD *)(v57 + 56) + 8 * v58);
      swift_bridgeObjectRetain();
      v61 = objc_msgSend(v52, sel_uniqueIdentifier, v105);
      v62 = (uint64_t)v114;
      sub_1DD63D7A4();
      if (*(_QWORD *)(v60 + 16) && (v63 = sub_1DD35333C(v62), (v64 & 1) != 0))
      {
        v65 = v128;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16))(v46, *(_QWORD *)(v60 + 56) + *(_QWORD *)(v45 + 72) * v63, v128);
        v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
        v66(v46, 0, 1, v65);
      }
      else
      {
        v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
        v66(v46, 1, 1, v128);
      }
      swift_bridgeObjectRelease();
      swift_endAccess();

      v67 = v18;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v114, v18);
      v68 = v128;
    }
    else
    {
      v67 = v18;
      swift_endAccess();
      v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
      v68 = v128;
      v66(v46, 1, 1, v128);
    }
    v69 = objc_msgSend(v52, sel_uniqueIdentifier, v105);
    sub_1DD63D7A4();

    v70 = v46;
    v71 = v122;
    sub_1DD3DEBB4(v70, v122, (uint64_t *)&unk_1F03E4600);
    v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    v73 = v72(v71, 1, v68);
    v74 = (uint64_t)v121;
    if (v73 == 1)
    {
      sub_1DD63D750();
      sub_1DD3540B8(v71, (uint64_t *)&unk_1F03E4600);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v121, v71, v68);
    }
    v66(v74, 0, 1, v68);
    v18 = v67;
    if (v72(v74, 1, v68) == 1)
    {
      sub_1DD3540B8(v74, (uint64_t *)&unk_1F03E4600);
      v75 = v125;
      swift_bridgeObjectRetain();
      v76 = sub_1DD35333C(v129);
      v78 = v77;
      swift_bridgeObjectRelease();
      if ((v78 & 1) != 0)
      {
        v79 = swift_isUniquelyReferenced_nonNull_native();
        v130 = v75;
        if ((v79 & 1) == 0)
        {
          sub_1DD3DD0B0();
          v75 = v130;
        }
        v48 = *(void (**)(unint64_t, uint64_t))(v124 + 8);
        v48(*(_QWORD *)(v75 + 48) + *(_QWORD *)(v124 + 72) * v76, v67);
        v80 = v130;
        v47 = (uint64_t)v115;
        v81 = v128;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v115, *(_QWORD *)(v130 + 56) + *(_QWORD *)(v45 + 72) * v76, v128);
        v125 = v80;
        v82 = v80;
        v18 = v67;
        sub_1DD3F9954(v76, v82);
        swift_bridgeObjectRelease();
        v66(v47, 0, 1, v81);
      }
      else
      {
        v47 = (uint64_t)v115;
        v66((uint64_t)v115, 1, 1, v128);
        v48 = *(void (**)(unint64_t, uint64_t))(v124 + 8);
      }
      v44 = v119;
      v48(v129, v18);
      sub_1DD3540B8(v47, (uint64_t *)&unk_1F03E4600);
      v46 = (uint64_t)v123;
      goto LABEL_14;
    }
    v83 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
    v83(v120, v74, v68);
    v84 = v125;
    v85 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v84;
    v87 = sub_1DD35333C(v129);
    v88 = *(_QWORD *)(v84 + 16);
    v89 = (v86 & 1) == 0;
    v90 = v88 + v89;
    if (__OFADD__(v88, v89))
      break;
    v91 = v86;
    if (*(_QWORD *)(v84 + 24) >= v90)
    {
      if ((v85 & 1) == 0)
        sub_1DD3DD0B0();
    }
    else
    {
      sub_1DD3DA080(v90, v85);
      v92 = sub_1DD35333C(v129);
      if ((v91 & 1) != (v93 & 1))
        goto LABEL_68;
      v87 = v92;
    }
    v18 = v67;
    v94 = (_QWORD *)v130;
    v44 = v119;
    v46 = (uint64_t)v123;
    if ((v91 & 1) != 0)
    {
      v45 = v117;
      (*(void (**)(unint64_t, char *, uint64_t))(v117 + 40))(*(_QWORD *)(v130 + 56) + *(_QWORD *)(v117 + 72) * v87, v120, v128);
      v95 = v124;
    }
    else
    {
      *(_QWORD *)(v130 + 8 * (v87 >> 6) + 64) |= 1 << v87;
      v95 = v124;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v124 + 16))(v94[6] + *(_QWORD *)(v124 + 72) * v87, v129, v18);
      v83((char *)(v94[7] + *(_QWORD *)(v117 + 72) * v87), (uint64_t)v120, v128);
      v96 = v94[2];
      v97 = __OFADD__(v96, 1);
      v98 = v96 + 1;
      if (v97)
        goto LABEL_66;
      v94[2] = v98;
      v45 = v117;
    }
    v125 = v130;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v129, v18);
LABEL_14:

    sub_1DD3540B8(v46, (uint64_t *)&unk_1F03E4600);
    v36 = v126;
    v37 = v127;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  result = sub_1DD63E8A8();
  __break(1u);
  return result;
}

uint64_t CharacteristicNotificationManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_registrationRequests;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionStream;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E42D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionContinuation;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t CharacteristicNotificationManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_registrationRequests;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionStream;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E42D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_subscriptionContinuation;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_1DD3E29C4(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1DD3E2A38(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

void sub_1DD3E2A68(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD361D24();
    sub_1DD63E3F8();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1DD3DEBAC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_1DD358210(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1DD63E614())
      {
        sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

id CharacteristicNotificationManager.RegistrationRequest.home.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.reason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.subscribedCharacteristics.getter()
{
  return sub_1DD3E2D44();
}

uint64_t sub_1DD3E2D44()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

_QWORD *CharacteristicNotificationManager.RegistrationRequest.__allocating_init(home:characteristics:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = (_QWORD *)swift_allocObject();
  sub_1DD63D7BC();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1DD63E7B8())
    sub_1DD3EE1D0(MEMORY[0x1E0DEE9D8], &qword_1ED378560, (unint64_t *)&qword_1ED378380);
  else
    v9 = MEMORY[0x1E0DEE9E8];
  v10 = (_QWORD *)((char *)v8
                 + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics);
  *(_QWORD *)((char *)v8
            + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics) = v9;
  v8[2] = a1;
  v8[3] = a3;
  v8[4] = a4;
  swift_beginAccess();
  *v10 = a2;
  swift_bridgeObjectRelease();
  return v8;
}

_QWORD *CharacteristicNotificationManager.RegistrationRequest.init(home:characteristics:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  _QWORD *v10;

  sub_1DD63D7BC();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1DD63E7B8())
    sub_1DD3EE1D0(MEMORY[0x1E0DEE9D8], &qword_1ED378560, (unint64_t *)&qword_1ED378380);
  else
    v9 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)((char *)v4
            + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics) = v9;
  v4[2] = a1;
  v4[3] = a3;
  v4[4] = a4;
  v10 = (_QWORD *)((char *)v4
                 + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics);
  swift_beginAccess();
  *v10 = a2;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_1DD3E32BC((uint64_t)v3, (uint64_t)&unk_1F03E42F0, v5);
  swift_release();
  sub_1DD3540B8((uint64_t)v3, &qword_1ED378350);

  swift_bridgeObjectRelease();
  v6 = v0 + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_identifier;
  v7 = sub_1DD63D7C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DD3E3064()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  v0[2] = swift_task_alloc();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v0[3] = v1;
  v0[4] = *(_QWORD *)(v1 - 8);
  v0[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3E30E8()
{
  if (qword_1F03E37B0 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_1DD3E3148()
{
  if (qword_1F03E37A8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_1DD3E31A4()
{
  return swift_task_switch();
}

uint64_t sub_1DD3E31BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = qword_1F03E4220;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1DD3E3200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
  sub_1DD63E314();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3E32BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3DEBB4(a1, (uint64_t)v8, &qword_1ED378350);
  v9 = sub_1DD63E2FC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DD3540B8((uint64_t)v8, &qword_1ED378350);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1DD63E284();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DD63E2F0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_1DD3E32BC((uint64_t)v3, (uint64_t)&unk_1F03E42F8, v5);
  swift_release();
  sub_1DD3540B8((uint64_t)v3, &qword_1ED378350);

  swift_bridgeObjectRelease();
  v6 = v0 + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_identifier;
  v7 = sub_1DD63D7C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.add(characteristics:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = swift_bridgeObjectRetain();
  sub_1DD3E2A68(v7);
  swift_endAccess();
  if (qword_1F03E37A8 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  v8 = sub_1DD63DA20();
  swift_endAccess();
  swift_release();
  if (v8)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
    sub_1DD63E314();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return swift_release();
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.remove(characteristics:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1DD3E6304(a1);
  swift_endAccess();
  if (qword_1F03E37A8 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  v9 = sub_1DD63DA20();
  swift_endAccess();
  swift_release();
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
    sub_1DD63E314();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return swift_release();
}

uint64_t CharacteristicNotificationManager.RegistrationRequest.replaceCharacteristics(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4250);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics);
  swift_beginAccess();
  *v8 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_1DD3E2A68(v9);
  swift_endAccess();
  if (qword_1F03E37A8 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4288);
  v10 = sub_1DD63DA20();
  swift_endAccess();
  swift_release();
  if (v10)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4268);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4270);
    sub_1DD63E314();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return swift_release();
}

unint64_t CharacteristicNotificationManager.RegistrationRequest.description.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v3;

  if (*(_QWORD *)(v0 + 32))
  {
    sub_1DD63E6BC();
    swift_bridgeObjectRelease();
    v3 = 0xD000000000000011;
    sub_1DD63E188();
  }
  else
  {
    sub_1DD63E6BC();
    swift_bridgeObjectRelease();
    v3 = 0xD000000000000010;
    sub_1DD63D7C8();
    sub_1DD3EBAA8(&qword_1F03E42B8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    sub_1DD63E824();
    sub_1DD63E188();
    swift_bridgeObjectRelease();
  }
  sub_1DD63E188();
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  sub_1DD63E14C();

  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  return v3;
}

unint64_t sub_1DD3E3D0C()
{
  return CharacteristicNotificationManager.RegistrationRequest.description.getter();
}

uint64_t sub_1DD3E3D2C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v38 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - v18;
  v20 = objc_msgSend(a2, sel_hf_safeUniqueIdentifier);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_9;
  }
  v21 = v20;
  sub_1DD63D7A4();

  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v9, v17, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_9:
    sub_1DD3540B8((uint64_t)v9, (uint64_t *)&unk_1F03E47E0);
LABEL_11:
    v34 = sub_1DD63D768();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 1, 1, v34);
  }
  v22(v19, v9, v10);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager14StateContainer_characteristicsEnabled);
  if (!*(_QWORD *)(v23 + 16) || (v24 = sub_1DD35333C((uint64_t)v19), (v25 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    goto LABEL_11;
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  swift_bridgeObjectRetain();
  v27 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  if (*(_QWORD *)(v26 + 16) && (v28 = sub_1DD35333C((uint64_t)v14), (v29 & 1) != 0))
  {
    v30 = v28;
    v31 = *(_QWORD *)(v26 + 56);
    v32 = sub_1DD63D768();
    v33 = *(_QWORD *)(v32 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 16))(a3, v31 + *(_QWORD *)(v33 + 72) * v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a3, 0, 1, v32);
  }
  else
  {
    v36 = sub_1DD63D768();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a3, 1, 1, v36);
  }
  swift_bridgeObjectRelease();
  v37 = *(void (**)(char *, uint64_t))(v11 + 8);
  v37(v14, v10);
  return ((uint64_t (*)(char *, uint64_t))v37)(v19, v10);
}

BOOL sub_1DD3E41D4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v15;
  double v16;
  double v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63D768();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - v12;
  sub_1DD3E3D2C(a1, a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DD3540B8((uint64_t)v6, (uint64_t *)&unk_1F03E4600);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    v15 = objc_msgSend(a1, sel_valueUpdatedTime);
    sub_1DD63D744();

    sub_1DD63D6C0();
    v17 = v16;
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v11, v7);
    v18(v13, v7);
    return v17 > -1.0;
  }
}

id sub_1DD3E43E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD3E442C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CharacteristicNotificationActor();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_1F03E4228 = v0;
  return result;
}

uint64_t sub_1DD3E4464(uint64_t a1)
{
  return sub_1DD3E0114(a1);
}

uint64_t static CharacteristicNotificationActor.shared.getter()
{
  return sub_1DD3E4488(&qword_1F03E37B0);
}

uint64_t sub_1DD3E4488(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t CharacteristicNotificationActor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t CharacteristicNotificationActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CharacteristicNotificationActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DD3E4504()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DD3E4510()
{
  if (qword_1F03E37B0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1DD3E4550()
{
  return sub_1DD63E674();
}

uint64_t sub_1DD3E4558(uint64_t a1)
{
  return sub_1DD3E45A0(a1, qword_1F03ED3A0);
}

uint64_t sub_1DD3E457C(uint64_t a1)
{
  return sub_1DD3E45A0(a1, qword_1F03ED3B8);
}

uint64_t sub_1DD3E45A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1DD63DF18();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1DD63DF0C();
}

uint64_t sub_1DD3E4614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1DD63DF18();
  __swift_allocate_value_buffer(v0, qword_1F03E4230);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F03E4230);
  if (qword_1F03E37C0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1F03ED3B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1DD3E46A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1DD63E608();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1DD3E49B8(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_1DD63E4DC();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_1DD63E4E8();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_1DD63E4E8();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

void sub_1DD3E49B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1DD63E5E4())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1DD63E620();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1DD3E4B08(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            return 1;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    v14 = 8 * v10;
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v14);
    v16 = *(id *)(*(_QWORD *)(v2 + 48) + v14);
    swift_bridgeObjectRetain();
    sub_1DD3D9574((uint64_t)v16);
    v18 = v17;

    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v19 = swift_bridgeObjectRetain();
    sub_1DD3E46A4(v19, v15);
    v21 = v20;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1DD3E4CDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD3ECC2C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD3E4DE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5590);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD3C81F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3E4EF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4688);
  v10 = *(_QWORD *)(type metadata accessor for HFEvent() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1DD63E794();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for HFEvent() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DD3EE588(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1DD3E50FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378420);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E5248(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_1DD352AB0(0, &qword_1F03E4720);
  if (a2 >> 62)
  {
    v4 = sub_1DD63E7C4();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_1DD63E6BC();
  sub_1DD63E188();
  sub_1DD63E95C();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1DD63E95C();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  result = sub_1DD63E7A0();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E5430(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1DD4034AC();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DD3E54A8(v6);
  return sub_1DD63E71C();
}

uint64_t sub_1DD3E54A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a1[1];
  result = sub_1DD63E818();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_1DD3E5D70(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8];
    v128 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        v111 = *v117;
        do
        {
          v112 = v11 - 2;
          if (v11 < 2)
            goto LABEL_145;
          if (!v111)
            goto LABEL_157;
          v113 = *(_QWORD *)&v8[16 * v112 + 32];
          v114 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1DD3E5EF0((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1DD40119C((uint64_t)v8);
          if (v112 >= *((_QWORD *)v8 + 2))
            goto LABEL_147;
          v115 = &v8[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_148;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DD63E20C();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    v7 = sub_1DD63E23C();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v118 = *a1 + 16;
  v119 = *a1 - 8;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v3;
  v129 = *a1;
  while (2)
  {
    v12 = v9 + 1;
    v124 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_45;
    v121 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v14 = *(id *)(v10 + 8 * v12);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_name);
    v17 = sub_1DD63E14C();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_name);
    v21 = sub_1DD63E14C();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
      v126 = 0;
    else
      v126 = sub_1DD63E860();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v12 = v9 + 2;
    v3 = v125;
    if (v9 + 2 >= v125)
      goto LABEL_36;
    v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      v130 = v12;
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v27;
      v30 = objc_msgSend(v28, sel_name);
      v31 = sub_1DD63E14C();
      v33 = v32;

      v34 = objc_msgSend(v29, sel_name);
      v35 = sub_1DD63E14C();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if ((v126 & 1) != 0)
        {
          v8 = v121;
          v9 = v124;
          v3 = v125;
          v10 = v129;
          v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v26 = sub_1DD63E860();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v126 ^ v26) & 1) != 0)
        break;
LABEL_25:
      v12 = v130 + 1;
      ++v25;
      v3 = v125;
      if (v125 == v130 + 1)
      {
        v12 = v125;
        goto LABEL_35;
      }
    }
    v3 = v125;
    v12 = v130;
LABEL_35:
    v9 = v124;
LABEL_36:
    v8 = v121;
    v10 = v129;
    if ((v126 & 1) != 0)
    {
LABEL_37:
      if (v12 < v9)
        goto LABEL_151;
      if (v9 < v12)
      {
        v39 = (uint64_t *)(v119 + 8 * v12);
        v40 = v12;
        v41 = v9;
        v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10)
              goto LABEL_156;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v12, v9))
      goto LABEL_149;
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DD400EEC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v63 = *((_QWORD *)v8 + 2);
      v62 = *((_QWORD *)v8 + 3);
      v11 = v63 + 1;
      if (v63 >= v62 >> 1)
        v8 = sub_1DD400EEC((char *)(v62 > 1), v63 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v64 = v8 + 32;
      v65 = &v8[16 * v63 + 32];
      *(_QWORD *)v65 = v9;
      *((_QWORD *)v65 + 1) = v12;
      v132 = v12;
      if (!v63)
      {
        v11 = 1;
LABEL_14:
        v3 = v125;
        v9 = v132;
        if (v132 >= v125)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v66 = v11 - 1;
        if (v11 >= 4)
        {
          v71 = &v64[16 * v11];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_133;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_134;
          v78 = v11 - 2;
          v79 = &v64[16 * v11 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_136;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_139;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_143;
            v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v95 = *((_QWORD *)v8 + 4);
            v96 = *((_QWORD *)v8 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_99;
          }
          v68 = *((_QWORD *)v8 + 4);
          v67 = *((_QWORD *)v8 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_135;
        v78 = v11 - 2;
        v84 = &v64[16 * v11 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_138;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_141;
        if (__OFADD__(v88, v93))
          goto LABEL_142;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_105:
          if (v94)
            v66 = v78;
          goto LABEL_107;
        }
LABEL_99:
        if ((v89 & 1) != 0)
          goto LABEL_137;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_140;
        if (v100 < v88)
          goto LABEL_14;
LABEL_107:
        v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_155;
        v106 = &v64[16 * v105];
        v107 = *(_QWORD *)v106;
        v108 = &v64[16 * v66];
        v109 = *((_QWORD *)v108 + 1);
        sub_1DD3E5EF0((void **)(v10 + 8 * *(_QWORD *)v106), (id *)(v10 + 8 * *(_QWORD *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1)
          goto LABEL_127;
        if (v109 < v107)
          goto LABEL_130;
        if (v66 > *((_QWORD *)v8 + 2))
          goto LABEL_131;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v64[16 * v105 + 8] = v109;
        v110 = *((_QWORD *)v8 + 2);
        if (v66 >= v110)
          goto LABEL_132;
        v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((_QWORD *)v8 + 2) = v110 - 1;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v9, v120))
    goto LABEL_152;
  if (v9 + v120 >= v3)
    v44 = v3;
  else
    v44 = v9 + v120;
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      v123 = v44;
      v45 = v119 + 8 * v12;
      do
      {
        v47 = *(void **)(v10 + 8 * v12);
        v127 = v45;
        v131 = v12;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_name);
          v52 = sub_1DD63E14C();
          v54 = v53;

          v55 = objc_msgSend(v50, sel_name);
          v56 = sub_1DD63E14C();
          v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            v10 = v129;
            v46 = v131;
            goto LABEL_56;
          }
          v60 = sub_1DD63E860();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v129;
          if ((v60 & 1) == 0)
            break;
          if (!v129)
            goto LABEL_154;
          v61 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          v46 = v131;
          if (v131 == v9)
            goto LABEL_56;
        }
        v46 = v131;
LABEL_56:
        v12 = v46 + 1;
        v45 = v127 + 8;
        v9 = v124;
      }
      while (v12 != v123);
      v12 = v123;
      v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_1DD63E794();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E5D70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_name);
      v12 = sub_1DD63E14C();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_name);
      v16 = sub_1DD63E14C();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = sub_1DD63E860();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD3E5EF0(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_1DD400FE4(&v61, &v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, sel_name);
      v39 = sub_1DD63E14C();
      v41 = v40;

      v42 = objc_msgSend(v37, sel_name);
      v43 = sub_1DD63E14C();
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = sub_1DD63E860();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_name);
        v19 = sub_1DD63E14C();
        v21 = v20;

        v22 = objc_msgSend(v17, sel_name);
        v23 = sub_1DD63E14C();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = sub_1DD63E860();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

void sub_1DD3E6304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1DD63E5E4())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1DD63E5B4();
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
      sub_1DD361D24();
      sub_1DD63E3F8();
      a1 = v20;
      v18 = v21;
      v3 = v22;
      v4 = v23;
      v5 = v24;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v5)
      {
        v10 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v4 << 6);
        v12 = v4;
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9)
          goto LABEL_36;
        v15 = *(_QWORD *)(v18 + 8 * v14);
        v12 = v4 + 1;
        if (!v15)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v9)
            goto LABEL_36;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v9)
              goto LABEL_36;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v9)
                goto LABEL_36;
              v15 = *(_QWORD *)(v18 + 8 * v12);
              if (!v15)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v9)
                  goto LABEL_36;
                v15 = *(_QWORD *)(v18 + 8 * v12);
                if (!v15)
                {
                  v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    v15 = *(_QWORD *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1DD3DEBAC();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_36;
      while (1)
      {
        v17 = (void *)sub_1DD3E6B98(v13);

        v4 = v12;
        v5 = v10;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_1DD63E614())
        {
          sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v13 = v19;
          swift_unknownObjectRelease();
          v12 = v4;
          v10 = v5;
          if (v19)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
}

uint64_t sub_1DD3E65E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E46C8);
    v2 = sub_1DD63E698();
    v15 = v2;
    sub_1DD63E5B4();
    for (; sub_1DD63E614(); ++*(_QWORD *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
      swift_dynamicCast();
      v9 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v9)
      {
        sub_1DD3F556C(v9 + 1);
        v2 = v15;
      }
      result = sub_1DD63E4DC();
      v4 = v2 + 56;
      v5 = -1 << *(_BYTE *)(v2 + 32);
      v6 = result & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v10 = 0;
        v11 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v11 && (v10 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v12 = v7 == v11;
          if (v7 == v11)
            v7 = 0;
          v10 |= v12;
          v13 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v13 == -1);
        v8 = __clz(__rbit64(~v13)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1DD3E67B8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_1DD63E698();
    v21 = v8;
    sub_1DD63E5B4();
    if (sub_1DD63E614())
    {
      sub_1DD352AB0(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_1DD63E4DC();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1DD63E614());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

uint64_t sub_1DD3E69B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4628);
    v2 = sub_1DD63E698();
    v15 = v2;
    sub_1DD63E5B4();
    if (sub_1DD63E614())
    {
      type metadata accessor for MatterAccessoryLikeItem();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1DD3F586C(v9 + 1);
          v2 = v15;
        }
        result = sub_1DD63E4DC();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1DD63E614());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1DD3E6B98(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1DD63E620();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1DD3E6D6C();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1DD63E4DC();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1DD63E4E8();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1DD63E4E8();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DD3E6F24();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1DD3E8524(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DD3E6D6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1DD63E5E4();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1DD3E67B8(v3, v2, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
  v15 = v4;
  swift_retain();
  v5 = sub_1DD63E4DC();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1DD63E4E8();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1DD3E8524(v7);
      if ((sub_1DD63E4E8() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1DD63E4E8();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

id sub_1DD3E6F24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378560);
  v2 = *v0;
  v3 = sub_1DD63E680();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DD3E70B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4990);
  v2 = *v0;
  v3 = sub_1DD63E680();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DD3E7260(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1DD63E680();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1DD3E7484(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1DD63E680();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DD3E7624()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E0);
  v2 = *v0;
  v3 = sub_1DD63E680();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DD3E77D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378560);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain_n();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v27;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v12 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1DD63E4DC();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1DD3E7A38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4990);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v28 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1DD63E908();
    sub_1DD63E920();
    if (v19)
    {
      v20 = v19;
      sub_1DD63E4F4();

    }
    result = sub_1DD63E938();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v28;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DD3E7CE4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1DD63E68C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1DD3EBAA8(v40, 255, v39, v41);
    result = sub_1DD63E0EC();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8004(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1DD63E68C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1DD63E4DC();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E0);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1DD63E908();
    swift_bridgeObjectRetain();
    sub_1DD63E17C();
    result = sub_1DD63E938();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1DD3E8524(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1DD63E590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1DD63E4DC();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1DD3E86C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DD3E8750(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DD3E86E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DD3E8C30(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DD3E86FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DD3E8D9C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DD3E8718(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DD3E8F44(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DD3E8734(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DD3E90E8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DD3E8750(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E88B8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = (2 * (v12 >> 3)) | 1;
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1DD352AB0(0, &qword_1F03E4720);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8A50(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4680);
  v10 = *(_QWORD *)(sub_1DD63D768() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_1DD63D768() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8C30(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4678);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8D9C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4610);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8)
      memmove(v10 + 4, a4 + 4, 72 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5600);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E8F44(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378410);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378338);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E90E8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4620);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5F70);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3E9288(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1DD63DA80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1DD3EBAA8((unint64_t *)&unk_1F03E4700, 255, v11, MEMORY[0x1E0D326E8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1DD63E0EC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1DD3EBAA8((unint64_t *)&unk_1F03E4950, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326F0]);
      v21 = sub_1DD63E110();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DD3EA9F0((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1DD3E94EC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E65E0(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1DD3F556C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1DD3F617C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EAC2C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DD3E976C(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  _QWORD *v21;
  uint64_t v22;

  v3 = v2;
  v6 = *v2;
  sub_1DD63E908();
  sub_1DD63E920();
  swift_bridgeObjectRetain();
  if (a2)
  {
    v7 = a2;
    sub_1DD63E4F4();

  }
  v8 = sub_1DD63E938();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  v21 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v21;
    *v21 = 0x8000000000000000;
    v20 = a2;
    sub_1DD3EADBC(a2, v10, isUniquelyReferenced_nonNull_native);
    *v21 = v22;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v10);
    if (v12)
      break;
    if (!a2)
      goto LABEL_11;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_12;
  }
  if (!a2)
    goto LABEL_6;
  sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
  v13 = a2;
  v14 = v12;
  v15 = sub_1DD63E4E8();

  if ((v15 & 1) == 0)
    goto LABEL_6;

LABEL_11:
  swift_bridgeObjectRelease();
  v16 = *(void **)(*(_QWORD *)(*v21 + 48) + 8 * v10);
  *a1 = v16;
  v17 = v16;
  return 0;
}

uint64_t sub_1DD3E994C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E67B8(v7, result + 1, &qword_1F03E4670, (unint64_t *)&qword_1ED3783D0, (uint64_t)off_1EA722088, (void (*)(unint64_t))sub_1DD3F5854);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1DD3F5854(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1DD3F617C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EAF84((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1DD3F5854, (unint64_t *)&qword_1ED3783D0, (uint64_t)off_1EA722088, &qword_1F03E4670);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DD3E9C28(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783E0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E67B8(v7, result + 1, (uint64_t *)&unk_1F03E4660, (unint64_t *)&unk_1ED3783E0, 0x1E0CBA7D8, (void (*)(unint64_t))sub_1DD3F5860);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1DD3F5860(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1DD3F617C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783E0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EAF84((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1DD3F5860, (unint64_t *)&unk_1ED3783E0, 0x1E0CBA7D8, (uint64_t *)&unk_1F03E4660);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DD3E9F04(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for MatterAccessoryLikeItem();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E69B4(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1DD3F586C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1DD3F617C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for MatterAccessoryLikeItem();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EB110((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DD3EA180(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1DD63D984();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1DD3EBAA8(&qword_1F03E40D0, 255, v11, MEMORY[0x1E0D32388]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1DD63E0EC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1DD3EBAA8(&qword_1F03E40D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32390]);
      v21 = sub_1DD63E110();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DD3EB29C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1DD3EA3E4(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1DD63E5F0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1DD352AB0(0, (unint64_t *)&unk_1F03E4B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DD63E5E4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1DD3E67B8(v7, result + 1, (uint64_t *)&unk_1F03E4640, (unint64_t *)&unk_1F03E4B00, (uint64_t)off_1EA7222B8, (void (*)(unint64_t))sub_1DD3F5BFC);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1DD3F5BFC(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1DD3F617C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E4DC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1DD352AB0(0, (unint64_t *)&unk_1F03E4B00);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1DD63E4E8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1DD3EAF84((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1DD3F5BFC, (unint64_t *)&unk_1F03E4B00, (uint64_t)off_1EA7222B8, (uint64_t *)&unk_1F03E4640);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DD3EA6C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1DD63E908();
  swift_bridgeObjectRetain();
  sub_1DD63E17C();
  v8 = sub_1DD63E938();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DD63E860() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DD63E860() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DD3EB4D8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_1DD3EA86C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F52C0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1DD3E6F24();
      goto LABEL_14;
    }
    sub_1DD3E77D4();
  }
  v8 = *v3;
  v9 = sub_1DD63E4DC();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1DD63E4E8();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1DD63E89C();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1DD63E4E8();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1DD3EA9F0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1DD63DA80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F5548(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1DD3E7260((uint64_t (*)(_QWORD))MEMORY[0x1E0D326D0], (uint64_t *)&unk_1F03E4710);
      goto LABEL_12;
    }
    sub_1DD3E7CE4(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], (uint64_t *)&unk_1F03E4710, (unint64_t *)&unk_1F03E4700, MEMORY[0x1E0D326E8]);
  }
  v13 = *v3;
  sub_1DD3EBAA8((unint64_t *)&unk_1F03E4700, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326E8]);
  v14 = sub_1DD63E0EC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1DD3EBAA8((unint64_t *)&unk_1F03E4950, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326F0]);
      v19 = sub_1DD63E110();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1DD63E89C();
  __break(1u);
  return result;
}

void sub_1DD3EAC2C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F556C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1DD3E7484((uint64_t *)&unk_1F03E46C8);
      goto LABEL_14;
    }
    sub_1DD3E8004(v8, (uint64_t *)&unk_1F03E46C8);
  }
  v9 = *v3;
  v10 = sub_1DD63E4DC();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1DD63E4E8();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1DD63E89C();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1DD63E4E8();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1DD3EADBC(void *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F5578();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1DD3E70B8();
      goto LABEL_18;
    }
    sub_1DD3E7A38();
  }
  v9 = *v3;
  sub_1DD63E908();
  sub_1DD63E920();
  if (a1)
  {
    v10 = a1;
    sub_1DD63E4F4();

  }
  v11 = sub_1DD63E938();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * a2);
      if (v14)
      {
        if (a1)
        {
          sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
          v15 = a1;
          v16 = v14;
          v17 = sub_1DD63E4E8();

          if ((v17 & 1) != 0)
          {
LABEL_17:
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E46B0);
            sub_1DD63E89C();
            __break(1u);
            break;
          }
        }
      }
      else if (!a1)
      {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void sub_1DD3EAF84(uint64_t a1, unint64_t a2, char a3, void (*a4)(uint64_t), unint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    a4(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1DD3E7484(a7);
      goto LABEL_14;
    }
    sub_1DD3E8004(v13, a7);
  }
  v14 = *v7;
  v15 = sub_1DD63E4DC();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1DD352AB0(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_1DD63E4E8();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_1DD63E89C();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_1DD63E4E8();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

void sub_1DD3EB110(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F586C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1DD3E7484(&qword_1F03E4628);
      goto LABEL_14;
    }
    sub_1DD3E8004(v8, &qword_1F03E4628);
  }
  v9 = *v3;
  v10 = sub_1DD63E4DC();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for MatterAccessoryLikeItem();
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1DD63E4E8();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1DD63E89C();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1DD63E4E8();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1DD3EB29C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1DD63D984();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1DD3F5878(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1DD3E7260((uint64_t (*)(_QWORD))MEMORY[0x1E0D32378], (uint64_t *)&unk_1F03E4630);
      goto LABEL_12;
    }
    sub_1DD3E7CE4(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], (uint64_t *)&unk_1F03E4630, &qword_1F03E40D0, MEMORY[0x1E0D32388]);
  }
  v13 = *v3;
  sub_1DD3EBAA8(&qword_1F03E40D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
  v14 = sub_1DD63E0EC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1DD3EBAA8(&qword_1F03E40D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32390]);
      v19 = sub_1DD63E110();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1DD63E89C();
  __break(1u);
  return result;
}

uint64_t sub_1DD3EB4D8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1DD3F5EA0();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1DD3E7624();
      goto LABEL_22;
    }
    sub_1DD3E8278();
  }
  v11 = *v4;
  sub_1DD63E908();
  sub_1DD63E17C();
  result = sub_1DD63E938();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1DD63E860(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1DD63E89C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1DD63E860();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1DD3EB674(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1DD3EB714(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t (*sub_1DD3EB7F8(void (**a1)(id *), unint64_t a2, unint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DD3EB978(v6, a2, a3);
  return sub_1DD3EB84C;
}

uint64_t (*sub_1DD3EB850(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DD3EB9E4(v6, a2, a3);
  return sub_1DD3EB84C;
}

uint64_t (*sub_1DD3EB8A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DD3EBAE8(v6, a2, a3);
  return sub_1DD3EB84C;
}

uint64_t (*sub_1DD3EB8F8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DD3EBB5C(v6, a2, a3);
  return sub_1DD3EB84C;
}

void sub_1DD3EB94C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1DD3EB978(void (*result)(id *), unint64_t a2, unint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)sub_1DD3E5248(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1DD3EEBD4;
  }
  __break(1u);
  return result;
}

void (*sub_1DD3EB9E4(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF0DA2C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1DD3EEBD4;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DD3EBA50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E42B0;
  if (!qword_1F03E42B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1F03E53B0);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E42B0);
  }
  return result;
}

uint64_t sub_1DD3EBA9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1DD3EBAA8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1DF0DB2A4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t (*sub_1DD3EBAE8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1DF0DA2C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_1DD3EBB54;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3EBB54()
{
  return swift_unknownObjectRelease();
}

void (*sub_1DD3EBB5C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF0DA2C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1DD3EBBC8;
  }
  __break(1u);
  return result;
}

void sub_1DD3EBBC8(id *a1)
{

}

void sub_1DD3EBBD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20[2];
  unint64_t v21;

  v21 = a1;
  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = 8 * i;
    v18 = *(void **)(*(_QWORD *)(a2 + 56) + v17);
    v20[0] = *(id *)(*(_QWORD *)(a2 + 48) + v17);
    v20[1] = v18;
    v19 = v20[0];
    swift_bridgeObjectRetain();
    sub_1DD3E1CF8(&v21, (uint64_t)v20, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();

    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v10)
      goto LABEL_26;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
      break;
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 4;
  if (v11 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      goto LABEL_26;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
}

void sub_1DD3EBDA4(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1ED378560, (unint64_t *)&qword_1ED378380);
}

uint64_t sub_1DD3EBDC0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD3EBDE4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED78;
  return sub_1DD3E3064();
}

uint64_t sub_1DD3EBE48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DE5EC;
  return sub_1DD3E3064();
}

uint64_t sub_1DD3EBEAC(uint64_t a1, uint64_t a2)
{
  return sub_1DD3EBAA8(&qword_1F03E4300, a2, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicNotificationActor, (uint64_t)&protocol conformance descriptor for CharacteristicNotificationActor);
}

uint64_t type metadata accessor for CharacteristicNotificationActor()
{
  return objc_opt_self();
}

uint64_t sub_1DD3EBEF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC4Home33CharacteristicNotificationManager_disableReasons);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD3EBF4C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return CharacteristicNotificationManager.disableReasons.setter(v0);
}

uint64_t sub_1DD3EBF74()
{
  return type metadata accessor for CharacteristicNotificationManager(0);
}

uint64_t type metadata accessor for CharacteristicNotificationManager(uint64_t a1)
{
  return sub_1DD3EC12C(a1, (uint64_t *)&unk_1F03E4330);
}

void sub_1DD3EBF90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DD3EC080();
  if (v0 <= 0x3F)
  {
    sub_1DD3EC160(319, &qword_1F03E4350, MEMORY[0x1E0DF0838]);
    if (v1 <= 0x3F)
    {
      sub_1DD3EC160(319, qword_1F03E4358, MEMORY[0x1E0DF07E8]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for CharacteristicNotificationManager()
{
  return swift_lookUpClassMethod();
}

void sub_1DD3EC080()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F03E4340)
  {
    sub_1DD63D7C8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    type metadata accessor for CharacteristicNotificationManager.RegistrationRequest(255);
    sub_1DD3EBAA8(&qword_1F03E4120, 255, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1DD63DA08();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F03E4340);
  }
}

uint64_t type metadata accessor for CharacteristicNotificationManager.RegistrationRequest(uint64_t a1)
{
  return sub_1DD3EC12C(a1, qword_1F03E4430);
}

uint64_t sub_1DD3EC12C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DD3EC160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03E4248);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DD3EC1BC()
{
  return type metadata accessor for CharacteristicNotificationManager.RegistrationRequest(0);
}

uint64_t sub_1DD3EC1C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD63D7C8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CharacteristicNotificationManager.RegistrationRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CharacteristicNotificationManager.RegistrationRequest.__allocating_init(home:characteristics:reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for CharacteristicNotificationManager.StateContainer()
{
  return objc_opt_self();
}

uint64_t method lookup function for CharacteristicNotificationActor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DD3EC294(unint64_t isUniquelyReferenced_nonNull_native)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  id v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v2 = (_QWORD *)sub_1DD3D637C(MEMORY[0x1E0DEE9D8]);
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v3 = sub_1DD63E7B8();
    if (v3)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v3 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_25;
LABEL_3:
  v26 = v3;
  v27 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v4 = 4;
  while (1)
  {
    v8 = v4 - 4;
    if (v27)
    {
      v9 = MEMORY[0x1DF0DA2C0](v4 - 4, isUniquelyReferenced_nonNull_native);
      v10 = v4 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_22;
    }
    else
    {
      v9 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v4);
      swift_retain();
      v10 = v4 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    v28 = v10;
    v11 = isUniquelyReferenced_nonNull_native;
    v12 = *(void **)(v9 + 16);
    v13 = (unint64_t *)(v9
                             + OBJC_IVAR____TtCC4Home33CharacteristicNotificationManager19RegistrationRequest_subscribedCharacteristics);
    swift_beginAccess();
    v14 = *v13;
    v15 = v12;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = sub_1DD3D9574((uint64_t)v15);
    v18 = v2[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      goto LABEL_23;
    v21 = v16;
    if (v2[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1DD3DD0A4();
      goto LABEL_18;
    }
    sub_1DD3DA074(v20, isUniquelyReferenced_nonNull_native);
    v22 = sub_1DD3D9574((uint64_t)v15);
    if ((v21 & 1) != (v23 & 1))
      break;
    v17 = v22;
LABEL_18:
    isUniquelyReferenced_nonNull_native = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v21 & 1) == 0)
    {
      v6 = MEMORY[0x1E0DEE9E8];
      v24 = MEMORY[0x1E0DEE9D8];
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
      {
        if (sub_1DD63E7B8())
        {
          sub_1DD3EE1D0(v24, &qword_1ED378560, (unint64_t *)&qword_1ED378380);
          v6 = v5;
        }
        else
        {
          v6 = MEMORY[0x1E0DEE9E8];
        }
      }
      sub_1DD3DCBC0(v17, (uint64_t)v15, v6, v2);
      v7 = v15;
    }
    swift_bridgeObjectRelease();
    sub_1DD3E2A68(v14);
    swift_release();

    ++v4;
    if (v28 == v26)
      goto LABEL_25;
  }
  sub_1DD352AB0(0, &qword_1F03E4720);
  result = sub_1DD63E8A8();
  __break(1u);
  return result;
}

void sub_1DD3EC52C(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v21 = (unint64_t)(v6 + 63) >> 6;
  if (v8)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v11 = v4 + 1;
    if (!__OFADD__(v4, 1))
    {
      if (v11 < v21)
      {
        v12 = *(_QWORD *)(v5 + 8 * v11);
        ++v4;
        if (v12)
          goto LABEL_23;
        v4 = v11 + 1;
        if (v11 + 1 >= v21)
          goto LABEL_32;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (v12)
          goto LABEL_23;
        v4 = v11 + 2;
        if (v11 + 2 >= v21)
          goto LABEL_32;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (v12)
          goto LABEL_23;
        v4 = v11 + 3;
        if (v11 + 3 >= v21)
          goto LABEL_32;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (v12)
        {
LABEL_23:
          v8 = (v12 - 1) & v12;
          for (i = __clz(__rbit64(v12)) + (v4 << 6); ; i = v9 | (v4 << 6))
          {
            v14 = *(_QWORD *)(a2 + 16);
            v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * i);
            if (!v14)
              goto LABEL_6;
            v16 = v15;
            v17 = sub_1DD3D9574((uint64_t)v16);
            if ((v18 & 1) == 0)
              break;
            v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v17);
            swift_bridgeObjectRetain();

            if ((v19 & 0xC000000000000001) != 0)
              v20 = sub_1DD63E5E4();
            else
              v20 = *(_QWORD *)(v19 + 16);
            swift_bridgeObjectRelease();
            if (!v20)
              goto LABEL_6;

            if (!v8)
              goto LABEL_8;
LABEL_7:
            v9 = __clz(__rbit64(v8));
            v8 &= v8 - 1;
          }

LABEL_6:
          sub_1DD63E710();
          sub_1DD63E734();
          sub_1DD63E740();
          sub_1DD63E71C();
          if (!v8)
            continue;
          goto LABEL_7;
        }
        v13 = v11 + 4;
        if (v13 < v21)
        {
          v12 = *(_QWORD *)(v5 + 8 * v13);
          if (v12)
          {
            v4 = v13;
            goto LABEL_23;
          }
          while (1)
          {
            v4 = v13 + 1;
            if (__OFADD__(v13, 1))
              goto LABEL_34;
            if (v4 >= v21)
              break;
            v12 = *(_QWORD *)(v5 + 8 * v4);
            ++v13;
            if (v12)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release();
      return;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_1DD3EC764(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  if (qword_1F03E37B0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 128) = qword_1F03E4228;
  return swift_task_switch();
}

uint64_t sub_1DD3EC7CC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  _QWORD *v12;
  void *v13;

  v1 = v0 + 10;
  if (qword_1F03E37C8 != -1)
    swift_once();
  v2 = (void *)v0[15];
  v3 = sub_1DD63DF18();
  v0[17] = __swift_project_value_buffer(v3, (uint64_t)qword_1F03E4230);
  v4 = v2;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E488();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[15];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v0[10] = v8;
    v11 = v8;
    sub_1DD63E53C();
    *v10 = v8;

    _os_log_impl(&dword_1DD34E000, v5, v6, "Asking HomeKit to disable notifications for home %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    v12 = v10;
    v1 = v0 + 10;
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v9, -1, -1);
  }
  else
  {

  }
  v13 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1DD3EC9D4;
  v0[14] = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1DD3E29C4;
  v0[13] = &block_descriptor;
  objc_msgSend(v13, sel_enableNotifications_completionHandler_, 0, v1);
  return swift_continuation_await();
}

uint64_t sub_1DD3EC9D4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1DD3ECA34()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v19;
  NSObject *log;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 120);
  swift_willThrow();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_1DD63DF00();
  v8 = sub_1DD63E488();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 144);
    v19 = v9;
    v10 = *(void **)(v0 + 120);
    log = v7;
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412546;
    v13 = v9;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v14;
    sub_1DD63E53C();
    *v12 = v14;

    *(_WORD *)(v11 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v10;
    v15 = v10;
    sub_1DD63E53C();
    v12[1] = v10;

    _os_log_impl(&dword_1DD34E000, log, v8, "Failed to disable notifications with error %@ for home %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);

  }
  else
  {
    v16 = *(void **)(v0 + 144);
    v17 = *(void **)(v0 + 120);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3ECC2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD3ECD1C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 128) = a2;
  *(_QWORD *)(v3 + 136) = a3;
  *(_BYTE *)(v3 + 160) = a1;
  if (qword_1F03E37B0 != -1)
    swift_once();
  *(_QWORD *)(v3 + 144) = qword_1F03E4228;
  return swift_task_switch();
}

uint64_t sub_1DD3ECD88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 136);
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (*(uint64_t *)(v1 + 16) >= 1)
      goto LABEL_3;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (sub_1DD63E5E4() < 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
LABEL_3:
  if (qword_1F03E37C8 != -1)
    swift_once();
  v2 = *(void **)(v0 + 128);
  v3 = sub_1DD63DF18();
  __swift_project_value_buffer(v3, (uint64_t)qword_1F03E4230);
  v4 = v2;
  swift_bridgeObjectRetain_n();
  v5 = v4;
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E488();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(void **)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 136);
  if (v8)
  {
    v25 = *(unsigned __int8 *)(v0 + 160);
    v11 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v11 = 136315650;
    v12 = objc_msgSend(v10, sel_name);
    type = v7;
    v13 = sub_1DD63E14C();
    v15 = v14;

    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v13, v15, &v28);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    if (v25)
      v16 = 0x676E696C62616E45;
    else
      v16 = 0x6E696C6261736944;
    if (v25)
      v17 = 0xE800000000000000;
    else
      v17 = 0xE900000000000067;
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v16, v17, &v28);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    v18 = Set<>.groupedDescription.getter(v9);
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v18, v19, &v28);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DD34E000, v6, type, "%s: %s notifications for %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v27, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  v21 = *(void **)(v0 + 128);
  v22 = *(unsigned __int8 *)(v0 + 160);
  v23 = swift_bridgeObjectRetain();
  sub_1DD3D3868(v23);
  swift_bridgeObjectRelease();
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  v24 = sub_1DD63E1DC();
  *(_QWORD *)(v0 + 152) = v24;
  swift_release();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1DD3ED14C;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1DD3E2A38;
  *(_QWORD *)(v0 + 104) = &block_descriptor_29;
  objc_msgSend(v21, sel_enableNotification_forCharacteristics_completionHandler_, v22, v24, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_1DD3ED14C()
{
  return swift_task_switch();
}

uint64_t sub_1DD3ED198()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD3ED1D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  if (qword_1F03E37B0 != -1)
    swift_once();
  v2[4] = qword_1F03E4228;
  return swift_task_switch();
}

void sub_1DD3ED238()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v1 = sub_1DD3E4B08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  *(_BYTE *)(v0 + 152) = v1 & 1;
  if ((v1 & 1) != 0)
  {
    if (qword_1F03E37C8 != -1)
      swift_once();
    v2 = sub_1DD63DF18();
    __swift_project_value_buffer(v2, (uint64_t)qword_1F03E4230);
    v3 = sub_1DD63DF00();
    v4 = sub_1DD63E488();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1DD34E000, v3, v4, "Nothing changed", v5, 2u);
      MEMORY[0x1DF0DB358](v5, -1, -1);
    }

LABEL_7:
    (*(void (**)(BOOL))(v0 + 8))((*(_BYTE *)(v0 + 152) & 1) == 0);
    return;
  }
  v6 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  sub_1DD3EC52C(v7, v6);
  v9 = v8;
  *(_QWORD *)(v0 + 40) = v8;
  swift_bridgeObjectRelease();
  if (v9 >> 62)
  {
    v10 = sub_1DD63E7B8();
    *(_QWORD *)(v0 + 48) = v10;
    if (v10)
      goto LABEL_10;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 48) = v10;
    if (v10)
    {
LABEL_10:
      if (v10 < 1)
        goto LABEL_62;
      *(_QWORD *)(v0 + 56) = 0;
      v11 = *(_QWORD *)(v0 + 40);
      if ((v11 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1DF0DA2C0](0);
      else
        v12 = *(id *)(v11 + 32);
      v13 = (uint64_t)v12;
      *(_QWORD *)(v0 + 64) = v12;
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v14;
      *v14 = v0;
      v14[1] = sub_1DD3ED788;
      sub_1DD3EC764(v13);
      return;
    }
  }
  v15 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  v16 = *(_BYTE *)(v15 + 32);
  *(_BYTE *)(v0 + 153) = v16;
  v17 = 1 << v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & *(_QWORD *)(v15 + 64);
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = MEMORY[0x1E0DEE9E8];
  v22 = MEMORY[0x1E0DEE9D8];
  if (!v19)
    goto LABEL_21;
LABEL_20:
  v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v24 = v23 | (v20 << 6);
  v25 = *(_QWORD *)(v0 + 16);
  while (1)
  {
    *(_QWORD *)(v0 + 80) = v20;
    *(_QWORD *)(v0 + 88) = v19;
    v31 = *(_QWORD *)(v0 + 24);
    v32 = 8 * v24;
    v33 = *(void **)(*(_QWORD *)(v25 + 48) + v32);
    *(_QWORD *)(v0 + 96) = v33;
    v34 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + v32);
    *(_QWORD *)(v0 + 104) = v34;
    v35 = *(_QWORD *)(v31 + 16);
    v36 = v33;
    v37 = v36;
    if (v35)
    {
      v38 = v36;
      swift_bridgeObjectRetain();
      v39 = sub_1DD3D9574((uint64_t)v38);
      if ((v40 & 1) != 0)
      {
        v41 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 56) + 8 * v39);
        swift_bridgeObjectRetain();

        goto LABEL_41;
      }

    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v41 = v21;
    if ((v22 & 0xC000000000000000) != 0)
    {
      if (sub_1DD63E7B8())
      {
        sub_1DD3EE1D0(v22, &qword_1ED378560, (unint64_t *)&qword_1ED378380);
        v41 = v43;
      }
      else
      {
        v41 = v21;
      }
    }
LABEL_41:
    *(_QWORD *)(v0 + 112) = v41;
    sub_1DD3E46A4(v34, v41);
    if ((v42 & 1) == 0)
    {
      if ((v41 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v44 = sub_1DD63E5E4();
        if ((v34 & 0xC000000000000001) != 0)
          goto LABEL_49;
      }
      else
      {
        v44 = *(_QWORD *)(v41 + 16);
        swift_bridgeObjectRetain();
        if ((v34 & 0xC000000000000001) != 0)
        {
LABEL_49:
          if (v34 < 0)
            v45 = v34;
          else
            v45 = v34 & 0xFFFFFFFFFFFFFF8;
          if (v44 > sub_1DD63E5E4() / 8)
          {
            swift_bridgeObjectRetain();
            v46 = sub_1DD63E5E4();
            v47 = sub_1DD3E67B8(v45, v46, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
            swift_bridgeObjectRelease();
            v34 = v47;
LABEL_57:
            v48 = sub_1DD42CCBC(v41, v34);
LABEL_59:
            *(_QWORD *)(v0 + 120) = v48;
            v49 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 128) = v49;
            *v49 = v0;
            v49[1] = sub_1DD3EDC20;
            sub_1DD3ECD1C(1, (uint64_t)v37, v48);
            return;
          }
LABEL_58:
          sub_1DD3E6304(v41);
          v48 = v34;
          goto LABEL_59;
        }
      }
      if (v44 > *(_QWORD *)(v34 + 16) >> 3)
        goto LABEL_57;
      goto LABEL_58;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v19)
      goto LABEL_20;
LABEL_21:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    v27 = (unint64_t)((1 << *(_BYTE *)(v0 + 153)) + 63) >> 6;
    v25 = *(_QWORD *)(v0 + 16);
    if (v26 >= v27)
      goto LABEL_54;
    v28 = v25 + 64;
    v29 = *(_QWORD *)(v25 + 64 + 8 * v26);
    ++v20;
    if (!v29)
    {
      v20 = v26 + 1;
      if (v26 + 1 >= v27)
        goto LABEL_54;
      v29 = *(_QWORD *)(v28 + 8 * v20);
      if (!v29)
      {
        v20 = v26 + 2;
        if (v26 + 2 >= v27)
          goto LABEL_54;
        v29 = *(_QWORD *)(v28 + 8 * v20);
        if (!v29)
          break;
      }
    }
LABEL_34:
    v19 = (v29 - 1) & v29;
    v24 = __clz(__rbit64(v29)) + (v20 << 6);
  }
  v30 = v26 + 3;
  if (v30 >= v27)
  {
LABEL_54:
    swift_release();
    goto LABEL_7;
  }
  v29 = *(_QWORD *)(v28 + 8 * v30);
  if (v29)
  {
    v20 = v30;
    goto LABEL_34;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v27)
      goto LABEL_54;
    v29 = *(_QWORD *)(v28 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_34;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_1DD3ED788()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1DD3ED7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 48);

  if (v1 + 1 != v2)
  {
    v32 = *(_QWORD *)(v0 + 56) + 1;
    *(_QWORD *)(v0 + 56) = v32;
    v33 = *(_QWORD *)(v0 + 40);
    if ((v33 & 0xC000000000000001) != 0)
      v34 = (id)MEMORY[0x1DF0DA2C0]();
    else
      v34 = *(id *)(v33 + 8 * v32 + 32);
    v39 = (uint64_t)v34;
    *(_QWORD *)(v0 + 64) = v34;
    v40 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v40;
    *v40 = v0;
    v40[1] = sub_1DD3ED788;
    sub_1DD3EC764(v39);
    return;
  }
  v3 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(v0 + 153) = v4;
  v5 = 1 << v4;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v3 + 64);
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = MEMORY[0x1E0DEE9E8];
  v10 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v12 = v11 | (v8 << 6);
  v13 = *(_QWORD *)(v0 + 16);
  while (1)
  {
    *(_QWORD *)(v0 + 80) = v8;
    *(_QWORD *)(v0 + 88) = v7;
    v19 = *(_QWORD *)(v0 + 24);
    v20 = 8 * v12;
    v21 = *(void **)(*(_QWORD *)(v13 + 48) + v20);
    *(_QWORD *)(v0 + 96) = v21;
    v22 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + v20);
    *(_QWORD *)(v0 + 104) = v22;
    v23 = *(_QWORD *)(v19 + 16);
    v24 = v21;
    v25 = v24;
    if (v23)
    {
      v26 = v24;
      swift_bridgeObjectRetain();
      v27 = sub_1DD3D9574((uint64_t)v26);
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 56) + 8 * v27);
        swift_bridgeObjectRetain();

        goto LABEL_27;
      }

    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v29 = v9;
    if ((v10 & 0xC000000000000000) != 0)
    {
      if (sub_1DD63E7B8())
      {
        sub_1DD3EE1D0(v10, &qword_1ED378560, (unint64_t *)&qword_1ED378380);
        v29 = v31;
      }
      else
      {
        v29 = v9;
      }
    }
LABEL_27:
    *(_QWORD *)(v0 + 112) = v29;
    sub_1DD3E46A4(v22, v29);
    if ((v30 & 1) == 0)
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v35 = sub_1DD63E5E4();
        if ((v22 & 0xC000000000000001) != 0)
          goto LABEL_37;
      }
      else
      {
        v35 = *(_QWORD *)(v29 + 16);
        swift_bridgeObjectRetain();
        if ((v22 & 0xC000000000000001) != 0)
        {
LABEL_37:
          if (v22 < 0)
            v36 = v22;
          else
            v36 = v22 & 0xFFFFFFFFFFFFFF8;
          if (v35 > sub_1DD63E5E4() / 8)
          {
            swift_bridgeObjectRetain();
            v37 = sub_1DD63E5E4();
            v38 = sub_1DD3E67B8(v36, v37, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
            swift_bridgeObjectRelease();
            v22 = v38;
LABEL_47:
            v41 = sub_1DD42CCBC(v29, v22);
LABEL_49:
            *(_QWORD *)(v0 + 120) = v41;
            v42 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 128) = v42;
            *v42 = v0;
            v42[1] = sub_1DD3EDC20;
            sub_1DD3ECD1C(1, (uint64_t)v25, v41);
            return;
          }
LABEL_48:
          sub_1DD3E6304(v29);
          v41 = v22;
          goto LABEL_49;
        }
      }
      if (v35 > *(_QWORD *)(v22 + 16) >> 3)
        goto LABEL_47;
      goto LABEL_48;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v7)
      goto LABEL_6;
LABEL_7:
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    v15 = (unint64_t)((1 << *(_BYTE *)(v0 + 153)) + 63) >> 6;
    v13 = *(_QWORD *)(v0 + 16);
    if (v14 >= v15)
      goto LABEL_42;
    v16 = v13 + 64;
    v17 = *(_QWORD *)(v13 + 64 + 8 * v14);
    ++v8;
    if (!v17)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v15)
        goto LABEL_42;
      v17 = *(_QWORD *)(v16 + 8 * v8);
      if (!v17)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v15)
          goto LABEL_42;
        v17 = *(_QWORD *)(v16 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v7 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v8 << 6);
  }
  v18 = v14 + 3;
  if (v18 >= v15)
  {
LABEL_42:
    swift_release();
    (*(void (**)(BOOL))(v0 + 8))((*(_BYTE *)(v0 + 152) & 1) == 0);
    return;
  }
  v17 = *(_QWORD *)(v16 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v15)
      goto LABEL_42;
    v17 = *(_QWORD *)(v16 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_1DD3EDC20()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DD3EDC80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[13];
  if ((v1 & 0xC000000000000001) != 0)
    v2 = sub_1DD63E5E4();
  else
    v2 = *(_QWORD *)(v1 + 16);
  v3 = v0[14];
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (v2 > *(_QWORD *)(v3 + 16) >> 3)
      goto LABEL_11;
LABEL_12:
    sub_1DD3E6304(v0[13]);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v3 < 0)
    v4 = v0[14];
  else
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
  v5 = sub_1DD63E5E4();
  v3 = v0[14];
  if (v2 <= v5 / 8)
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v6 = sub_1DD63E5E4();
  v7 = sub_1DD3E67B8(v4, v6, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
  swift_bridgeObjectRelease();
  v3 = v7;
LABEL_11:
  v3 = sub_1DD42CCBC(v0[13], v3);
  swift_bridgeObjectRelease();
LABEL_13:
  v0[17] = v3;
  v8 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_1DD3EDDD8;
  return sub_1DD3ECD1C(0, v0[12], v3);
}

uint64_t sub_1DD3EDDD8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_1DD3EDE38()
{
  uint64_t v0;
  unint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = MEMORY[0x1E0DEE9E8];
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    goto LABEL_3;
LABEL_2:
  v5 = __clz(__rbit64(v1));
  v1 &= v1 - 1;
  v6 = v5 | (v2 << 6);
  v7 = *(_QWORD *)(v0 + 16);
  while (1)
  {
    *(_QWORD *)(v0 + 80) = v2;
    *(_QWORD *)(v0 + 88) = v1;
    v13 = *(_QWORD *)(v0 + 24);
    v14 = 8 * v6;
    v15 = *(void **)(*(_QWORD *)(v7 + 48) + v14);
    *(_QWORD *)(v0 + 96) = v15;
    v16 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + v14);
    *(_QWORD *)(v0 + 104) = v16;
    v17 = *(_QWORD *)(v13 + 16);
    v18 = v15;
    v19 = v18;
    if (v17)
    {
      v20 = v18;
      swift_bridgeObjectRetain();
      v21 = sub_1DD3D9574((uint64_t)v20);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 56) + 8 * v21);
        swift_bridgeObjectRetain();

        goto LABEL_23;
      }

    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v23 = v3;
    if ((v4 & 0xC000000000000000) != 0)
    {
      if (sub_1DD63E7B8())
      {
        sub_1DD3EE1D0(v4, &qword_1ED378560, (unint64_t *)&qword_1ED378380);
        v23 = v25;
      }
      else
      {
        v23 = v3;
      }
    }
LABEL_23:
    *(_QWORD *)(v0 + 112) = v23;
    sub_1DD3E46A4(v16, v23);
    if ((v24 & 1) == 0)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v26 = sub_1DD63E5E4();
        if ((v16 & 0xC000000000000001) != 0)
          goto LABEL_31;
      }
      else
      {
        v26 = *(_QWORD *)(v23 + 16);
        swift_bridgeObjectRetain();
        if ((v16 & 0xC000000000000001) != 0)
        {
LABEL_31:
          if (v16 < 0)
            v27 = v16;
          else
            v27 = v16 & 0xFFFFFFFFFFFFFF8;
          if (v26 > sub_1DD63E5E4() / 8)
          {
            swift_bridgeObjectRetain();
            v28 = sub_1DD63E5E4();
            v29 = sub_1DD3E67B8(v27, v28, &qword_1ED378560, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (void (*)(unint64_t))sub_1DD3F52C0);
            swift_bridgeObjectRelease();
            v16 = v29;
LABEL_39:
            v30 = sub_1DD42CCBC(v23, v16);
LABEL_41:
            *(_QWORD *)(v0 + 120) = v30;
            v31 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 128) = v31;
            *v31 = v0;
            v31[1] = sub_1DD3EDC20;
            sub_1DD3ECD1C(1, (uint64_t)v19, v30);
            return;
          }
LABEL_40:
          sub_1DD3E6304(v23);
          v30 = v16;
          goto LABEL_41;
        }
      }
      if (v26 > *(_QWORD *)(v16 + 16) >> 3)
        goto LABEL_39;
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v1)
      goto LABEL_2;
LABEL_3:
    v8 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    v9 = (unint64_t)((1 << *(_BYTE *)(v0 + 153)) + 63) >> 6;
    v7 = *(_QWORD *)(v0 + 16);
    if (v8 >= v9)
      goto LABEL_36;
    v10 = v7 + 64;
    v11 = *(_QWORD *)(v7 + 64 + 8 * v8);
    ++v2;
    if (!v11)
    {
      v2 = v8 + 1;
      if (v8 + 1 >= v9)
        goto LABEL_36;
      v11 = *(_QWORD *)(v10 + 8 * v2);
      if (!v11)
      {
        v2 = v8 + 2;
        if (v8 + 2 >= v9)
          goto LABEL_36;
        v11 = *(_QWORD *)(v10 + 8 * v2);
        if (!v11)
        {
          v12 = v8 + 3;
          if (v12 >= v9)
          {
LABEL_36:
            swift_release();
            (*(void (**)(BOOL))(v0 + 8))((*(_BYTE *)(v0 + 152) & 1) == 0);
            return;
          }
          v11 = *(_QWORD *)(v10 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              v2 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_43;
              if (v2 >= v9)
                goto LABEL_36;
              v11 = *(_QWORD *)(v10 + 8 * v2);
              ++v12;
              if (v11)
                goto LABEL_16;
            }
          }
          v2 = v12;
        }
      }
    }
LABEL_16:
    v1 = (v11 - 1) & v11;
    v6 = __clz(__rbit64(v11)) + (v2 << 6);
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

void sub_1DD3EE1B4(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1F03E46F8, (unint64_t *)&qword_1F03E41C0);
}

void sub_1DD3EE1D0(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_1DD63E6A4();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_1DD63E7B8();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x1E0DEE9E8];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x1DF0DA2C0](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_1DD63E4DC();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        sub_1DD352AB0(0, a3);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_1DD63E4E8();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_1DD63E4E8();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_1DD63E4DC();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_1DD352AB0(0, a3);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_1DD63E4E8();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_1DD63E4E8();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1DD3EE534(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1F03E46E8, &qword_1F03E46F0);
}

void sub_1DD3EE550(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1F03E46D8, &qword_1F03E46E0);
}

void sub_1DD3EE56C(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1F03E4670, (unint64_t *)&qword_1ED3783D0);
}

uint64_t sub_1DD3EE588(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for HFEvent() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

void sub_1DD3EE6A0(unint64_t a1)
{
  sub_1DD3EE1D0(a1, &qword_1F03E46A8, &qword_1ED378570);
}

uint64_t sub_1DD3EE6BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1DD63DC9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4690);
    v10 = sub_1DD63E6A4();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1DD3EBAA8(&qword_1F03E4698, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32E20], MEMORY[0x1E0D32E30]);
      v14 = sub_1DD63E0EC();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1DD3EBAA8(&qword_1F03E46A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32E20], MEMORY[0x1E0D32E38]);
          v20 = sub_1DD63E110();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1DD3EE92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E0);
    v3 = sub_1DD63E6A4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1DD63E908();
      swift_bridgeObjectRetain();
      sub_1DD63E17C();
      result = sub_1DD63E938();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1DD63E860(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1DD63E860();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1DD3EEACC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD3EEAF0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD3EEB1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return sub_1DD3E023C(a1, v4, v5, v6);
}

uint64_t sub_1DD3EEB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t HFItemManager.reloadAndUpdateAllItems(sender:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = sub_1DD63E2E4();
  v2[6] = sub_1DD63E2D8();
  v2[7] = sub_1DD63E284();
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_1DD3EEC48()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_reloadAndUpdateAllItemsFromSenderSelector_, *(_QWORD *)(v0 + 24));
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = sub_1DD63E2D8();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  sub_1DD3EEF84();
  *v3 = v0;
  v3[1] = sub_1DD3EED24;
  return sub_1DD63E884();
}

uint64_t sub_1DD3EED24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1DD3EED98()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(~(*(_QWORD *)(v0 + 16) >> 1) & 0x4000000000000000 | *(_QWORD *)(v0 + 16));
}

uint64_t sub_1DD3EEDE4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release();

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DD3EEE3C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1DD3EF0C8;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD4034B0;
  aBlock[3] = &block_descriptor_0;
  v9 = _Block_copy(aBlock);
  swift_release();
  v10 = objc_msgSend(a2, sel_addCompletionBlock_, v9);
  _Block_release(v9);

}

void sub_1DD3EEF7C(uint64_t a1)
{
  uint64_t v1;

  sub_1DD3EEE3C(a1, *(void **)(v1 + 16));
}

unint64_t sub_1DD3EEF84()
{
  unint64_t result;

  result = qword_1F03E4798;
  if (!qword_1F03E4798)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03E4798);
  }
  return result;
}

id sub_1DD3EEFC0(void *a1, id a2)
{
  id v2;
  id result;
  id v4;

  if (a2)
  {
    v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47A0);
    return (id)sub_1DD63E29C();
  }
  if (a1)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47A0);
    return (id)sub_1DD63E2A8();
  }
  else
  {
    result = objc_msgSend((id)objc_opt_self(), sel_na_genericError);
    if (result)
      goto LABEL_3;
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD3EF064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_1DD3EF0C8(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47A0);
  return sub_1DD3EEFC0(a1, a2);
}

id sub_1DD3EF118(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D519C0]), sel_init);
  if (a3)
    a3 = (void *)sub_1DD63E11C();
  objc_msgSend(v12, sel_setDescriptor_, a3);

  sub_1DD3DEBB4(a1, (uint64_t)v11, &qword_1ED378350);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = v12;
  swift_retain();
  v14 = v12;
  sub_1DD3D883C((uint64_t)v11, (uint64_t)&unk_1F03E48E0, (uint64_t)v13);
  swift_release();
  return v14;
}

uint64_t MatterAccessoryRepresentable.tilePath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath;
  v4 = sub_1DD63D984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DD3EF288(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3DEBB4(a1, (uint64_t)v4, &qword_1F03E47B8);
  return sub_1DD3EF8B0((uint64_t)v4);
}

uint64_t sub_1DD3EF30C@<X0>(char *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  NSObject *v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  NSObject *v32;
  os_log_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  NSObject *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  _BYTE *v51;
  os_log_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  _BYTE v59[24];

  v2 = v1;
  v4 = sub_1DD63DF18();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v54 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v50 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - v12;
  v14 = sub_1DD63DB34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v50 - v19;
  v21 = (uint64_t)&v2[OBJC_IVAR___HFMatterAccessoryRepresentable__staticMatterDevice];
  swift_beginAccess();
  sub_1DD3DEBB4(v21, (uint64_t)v13, &qword_1F03E47B8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v13, 1, v14) != 1)
  {
    v34 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v34(v20, v13, v14);
    v35 = a1;
    v36 = v20;
    goto LABEL_10;
  }
  v53 = a1;
  sub_1DD3540B8((uint64_t)v13, &qword_1F03E47B8);
  v23 = *(NSObject **)&v2[OBJC_IVAR___HFMatterAccessoryRepresentable_accessory];
  if (sub_1DD63E44C())
  {
    swift_unknownObjectRetain();
    v24 = v23;
    sub_1DD63DB04();
    if (v22(v11, 1, v14) == 1)
    {
      sub_1DD3540B8((uint64_t)v11, &qword_1F03E47B8);
      sub_1DD63DEE8();
      v25 = v2;
      v26 = sub_1DD63DF00();
      v27 = sub_1DD63E47C();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v29 = swift_slowAlloc();
        v30 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v29 = 138412546;
        v52 = v26;
        LODWORD(v54) = v28;
        v58 = v25;
        v50 = v29 + 4;
        v51 = v59;
        v31 = v25;
        sub_1DD63E53C();
        *v30 = v25;

        *(_WORD *)(v29 + 12) = 2112;
        v58 = v24;
        v32 = v24;
        sub_1DD63E53C();
        v30[1] = v24;

        v33 = v52;
        _os_log_impl(&dword_1DD34E000, v52, (os_log_type_t)v54, "%@: StaticMatterDevice returned nil from initializer with %@", (uint8_t *)v29, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
        swift_arrayDestroy();
        MEMORY[0x1DF0DB358](v30, -1, -1);
        MEMORY[0x1DF0DB358](v29, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
      v46 = 1;
      a1 = v53;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(a1, v46, 1, v14);
    }
    swift_unknownObjectRelease();
    v34 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v34(v18, v11, v14);
    a1 = v53;
    v35 = v53;
    v36 = v18;
LABEL_10:
    v34(v35, v36, v14);
    v46 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(a1, v46, 1, v14);
  }
  v37 = v54;
  sub_1DD63DEE8();
  v38 = v2;
  v39 = sub_1DD63DF00();
  v40 = sub_1DD63E47C();
  v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    v42 = swift_slowAlloc();
    v43 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v42 = 138412546;
    LODWORD(v55) = v41;
    v58 = v38;
    v51 = (_BYTE *)(v42 + 4);
    v52 = (os_log_t)v59;
    v44 = v38;
    sub_1DD63E53C();
    *v43 = v38;

    *(_WORD *)(v42 + 12) = 2112;
    v58 = v23;
    v45 = v23;
    sub_1DD63E53C();
    v43[1] = v23;

    v37 = v54;
    _os_log_impl(&dword_1DD34E000, v39, (os_log_type_t)v55, "%@: Failed to get matter device on accessory %@", (uint8_t *)v42, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v43, -1, -1);
    MEMORY[0x1DF0DB358](v42, -1, -1);
  }
  else
  {

    v39 = v38;
  }
  a1 = v53;
  v48 = v56;
  v47 = v57;

  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v47);
  v46 = 1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(a1, v46, 1, v14);
}

uint64_t sub_1DD3EF8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _OWORD v18[2];
  uint64_t v19;

  swift_getObjectType();
  v3 = sub_1DD63DB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - v11 + 16;
  sub_1DD3DEBB4(a1, (uint64_t)v18 - v11 + 16, &qword_1F03E47B8);
  v13 = v1 + OBJC_IVAR___HFMatterAccessoryRepresentable__staticMatterDevice;
  swift_beginAccess();
  sub_1DD3F3474((uint64_t)v12, v13, &qword_1F03E47B8);
  swift_endAccess();
  sub_1DD3DEBB4(a1, (uint64_t)v10, &qword_1F03E47B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    sub_1DD3540B8((uint64_t)v10, &qword_1F03E47B8);
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v14 = v1 + OBJC_IVAR___HFMatterAccessoryRepresentable__tileInfo;
    swift_beginAccess();
    sub_1DD3F3474((uint64_t)v18, v14, &qword_1F03E49E0);
    swift_endAccess();
    return sub_1DD3540B8(a1, &qword_1F03E47B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
    sub_1DD3EFAFC((uint64_t)v6, (uint64_t *)v18);
    v16 = v1 + OBJC_IVAR___HFMatterAccessoryRepresentable__tileInfo;
    swift_beginAccess();
    sub_1DD3F3474((uint64_t)v18, v16, &qword_1F03E49E0);
    swift_endAccess();
    sub_1DD3540B8(a1, &qword_1F03E47B8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1DD3EFAFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t *v34;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  uint64_t v45;

  v45 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E49B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63D99C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4900);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DD63D930();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DD63D948();
  if ((v17 & 0x10000) != 0)
    goto LABEL_17;
  v44 = v17;
  v40 = v16;
  v41 = v7;
  v42 = v5;
  v43 = v9;
  v18 = sub_1DD63DAB0();
  if (v18)
  {
    v19 = v18;
    if (*(_QWORD *)(v18 + 16))
    {
      v20 = sub_1DD3D9490(v44);
      v21 = v40;
      if ((v22 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v12, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v14 + 72) * v20, v13);
        v23 = 0;
      }
      else
      {
        v23 = 1;
      }
      v24 = a2;
    }
    else
    {
      v23 = 1;
      v24 = a2;
      v21 = v40;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v23, 1, v13);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v38(v21, v12, v13);
      v24[3] = v13;
      v24[4] = sub_1DD353504(&qword_1F03E4918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D322E8], MEMORY[0x1E0D322E0]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
      return ((uint64_t (*)(uint64_t *, char *, uint64_t))v38)(boxed_opaque_existential_1, v21, v13);
    }
    sub_1DD3540B8((uint64_t)v12, &qword_1F03E4900);
  }
  v25 = sub_1DD63DB28();
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1DD3D9490(v44), (v27 & 1) != 0))
  {
    v29 = v41;
    v28 = (uint64_t)v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v42, *(_QWORD *)(v25 + 56) + *(_QWORD *)(v41 + 72) * v26, v6);
    v30 = 0;
    v31 = v43;
  }
  else
  {
    v30 = 1;
    v28 = (uint64_t)v42;
    v31 = v43;
    v29 = v41;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v28, v30, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v6) == 1)
  {
    sub_1DD3540B8(v28, (uint64_t *)&unk_1F03E49B0);
LABEL_17:
    v32 = sub_1DD63DB34();
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D327D0];
    a2[3] = v32;
    a2[4] = sub_1DD353504(&qword_1F03E4908, v33, MEMORY[0x1E0D327C8]);
    v34 = __swift_allocate_boxed_opaque_existential_1(a2);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v45, v32);
  }
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
  v36(v31, v28, v6);
  a2[3] = v6;
  a2[4] = sub_1DD353504(&qword_1F03E4910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D323C0], MEMORY[0x1E0D323B8]);
  v37 = __swift_allocate_boxed_opaque_existential_1(a2);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v36)(v37, v31, v6);
}

void (*sub_1DD3EFE70(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  char *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = (char *)malloc(v3);
  a1[2] = v4;
  sub_1DD3EF30C(v4);
  return sub_1DD3EFEDC;
}

void sub_1DD3EFEDC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1DD3DEBB4(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_1F03E47B8);
    sub_1DD3EF8B0((uint64_t)v2);
    sub_1DD3540B8((uint64_t)v3, &qword_1F03E47B8);
  }
  else
  {
    sub_1DD3EF8B0(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t sub_1DD3EFF4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[24];
  __int128 v13;
  uint64_t v14;

  swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DD63DB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v1 + OBJC_IVAR___HFMatterAccessoryRepresentable__tileInfo;
  swift_beginAccess();
  sub_1DD3DEBB4(v10, (uint64_t)&v13, &qword_1F03E49E0);
  if (v14)
    return sub_1DD3F34B8(&v13, a1);
  sub_1DD3540B8((uint64_t)&v13, &qword_1F03E49E0);
  sub_1DD3EF30C(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = sub_1DD3540B8((uint64_t)v5, &qword_1F03E47B8);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
  }
  else
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_1DD3EFAFC((uint64_t)v9, (uint64_t *)a1);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

id MatterAccessoryRepresentable.__allocating_init(accessory:tilePath:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1DD3F34D0(a1, a2);

  return v6;
}

id MatterAccessoryRepresentable.init(accessory:tilePath:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1DD3F34D0(a1, a2);

  return v3;
}

uint64_t sub_1DD3F015C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  v5[11] = swift_task_alloc();
  v6 = sub_1DD63DB64();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  sub_1DD63E2E4();
  v5[15] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD3F0218()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0DB400](v1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 96);
    sub_1DD63D8E8();
    v6 = (void *)sub_1DD63D8D0();
    sub_1DD63D8AC();

    v7 = sub_1DD63DB40();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v8 = sub_1DD63D978();
    if (*(_QWORD *)(v7 + 16) && (v9 = sub_1DD3D94C4(v8), (v10 & 1) != 0))
    {
      v11 = v9;
      v12 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v7 + 56);
      v14 = sub_1DD63DB34();
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v12, v13 + *(_QWORD *)(v15 + 72) * v11, v14);
      v16 = 0;
    }
    else
    {
      v14 = sub_1DD63DB34();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = 1;
    }
    v17 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v16, 1, v14);
    swift_bridgeObjectRelease();
    v18 = (uint64_t)v2 + OBJC_IVAR___HFMatterAccessoryRepresentable__staticMatterDevice;
    swift_beginAccess();
    sub_1DD3F3474(v17, v18, &qword_1F03E47B8);
    swift_endAccess();

  }
  **(_BYTE **)(v0 + 64) = v2 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id MatterAccessoryRepresentable.__allocating_init(accessory:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MatterAccessoryRepresentable.init(accessory:)(a1);
}

id MatterAccessoryRepresentable.init(accessory:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DD63DB64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1DD63D984();
  MEMORY[0x1E0C80A78](v10);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1;
  v14 = sub_1DD63E458();
  v16 = v15;

  if ((v16 & 1) != 0)
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    v17 = a1;
    sub_1DD63D96C();
    v18 = objc_allocWithZone((Class)type metadata accessor for MatterAccessoryRepresentable());
    v19 = sub_1DD3F34D0(v17, (uint64_t)v12);

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    sub_1DD63D8E8();
    v20 = v19;
    v21 = (void *)sub_1DD63D8D0();
    sub_1DD63D8AC();

    v22 = sub_1DD63DB40();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    if (*(_QWORD *)(v22 + 16) && (v23 = sub_1DD3D94C4(v14), (v24 & 1) != 0))
    {
      v25 = v23;
      v26 = *(_QWORD *)(v22 + 56);
      v27 = sub_1DD63DB34();
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v28 + 16))(v5, v26 + *(_QWORD *)(v28 + 72) * v25, v27);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v5, 0, 1, v27);
    }
    else
    {
      v29 = sub_1DD63DB34();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
    }

    swift_bridgeObjectRelease();
    v30 = (uint64_t)v20 + OBJC_IVAR___HFMatterAccessoryRepresentable__staticMatterDevice;
    swift_beginAccess();
    sub_1DD3F3474((uint64_t)v5, v30, &qword_1F03E47B8);
    swift_endAccess();
  }
  return v20;
}

id MatterAccessoryRepresentable.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MatterAccessoryRepresentable.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MatterAccessoryRepresentable.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatterAccessoryRepresentable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id MatterAccessoryRepresentable.__hf_homeKitObject.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory);
}

uint64_t MatterAccessoryRepresentable.__hf_itemClass.getter()
{
  return type metadata accessor for MatterAccessoryLikeItem();
}

uint64_t MatterAccessoryRepresentable.__hf_canShowInControlCenter.getter()
{
  return 0;
}

id MatterAccessoryRepresentable.__hf_safeRoom.getter()
{
  uint64_t v0;

  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_room));
}

uint64_t MatterAccessoryRepresentable.__hf_canSpanMultipleRooms.getter()
{
  return 0;
}

id MatterAccessoryRepresentable.__hf_isIdentifiable.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_hf_isIdentifiable);
}

id MatterAccessoryRepresentable.__hf_isMatterOnlyAccessory.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_hf_isMatterOnlyAccessory);
}

uint64_t MatterAccessoryRepresentable.__hf_containedCharacteristics.getter()
{
  return sub_1DD3F0AA8((uint64_t (*)(_QWORD))sub_1DD3EBDA4);
}

uint64_t MatterAccessoryRepresentable.__hf_containedServices.getter()
{
  return sub_1DD3F0AA8((uint64_t (*)(_QWORD))sub_1DD3EE1B4);
}

id sub_1DD3F09D8(void *a1, uint64_t a2, void (*a3)(_QWORD), unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  id v9;
  void *v10;

  v9 = a1;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1DD63E7B8())
    a3(MEMORY[0x1E0DEE9D8]);

  sub_1DD352AB0(0, a4);
  sub_1DD352A70(a6, a4);
  v10 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MatterAccessoryRepresentable.__hf_containedProfiles.getter()
{
  return sub_1DD3F0AA8((uint64_t (*)(_QWORD))sub_1DD3EE534);
}

uint64_t sub_1DD3F0AA8(uint64_t (*a1)(_QWORD))
{
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1DD63E7B8())
    return a1(MEMORY[0x1E0DEE9D8]);
  else
    return MEMORY[0x1E0DEE9E8];
}

uint64_t MatterAccessoryRepresentable.__hf_associatedAccessories.getter()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
  v2 = *(void **)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory);
  *(_QWORD *)(inited + 32) = v2;
  v10 = inited;
  sub_1DD63E20C();
  if (v10 >> 62)
  {
    v7 = v2;
    swift_bridgeObjectRetain();
    v8 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
LABEL_5:
    v6 = MEMORY[0x1E0DEE9E8];
    goto LABEL_6;
  }
  v3 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = v2;
  if (!v3)
    goto LABEL_5;
LABEL_3:
  sub_1DD3EE550(v10);
  v6 = v5;
LABEL_6:
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Bool __swiftcall MatterAccessoryRepresentable.__hf_is(in:)(HMRoom in)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v30;
  Class isa;

  isa = in.super.isa;
  v2 = sub_1DD63D7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v17 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_room);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_uniqueIdentifier);

    sub_1DD63D7A4();
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v16, 0, 1, v2);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v16, 1, 1, v2);
  }
  v21 = -[objc_class uniqueIdentifier](isa, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v20(v14, 0, 1, v2);
  v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1DD3DEBB4((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_1F03E47E0);
  sub_1DD3DEBB4((uint64_t)v14, v22, (uint64_t *)&unk_1F03E47E0);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v23((uint64_t)v7, 1, v2) == 1)
  {
    sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
    sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
    v24 = v23(v22, 1, v2);
    if (v24 == 1)
      v25 = (uint64_t *)&unk_1F03E47E0;
    else
      v25 = &qword_1F03E47D8;
    if (v24 == 1)
      v26 = -1;
    else
      v26 = 0;
  }
  else
  {
    sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_1F03E47E0);
    if (v23(v22, 1, v2) == 1)
    {
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      v26 = 0;
      v25 = &qword_1F03E47D8;
    }
    else
    {
      v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v30, v22, v2);
      sub_1DD353504((unint64_t *)&qword_1F03E4128, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v26 = sub_1DD63E110();
      v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v28(v27, v2);
      v25 = (uint64_t *)&unk_1F03E47E0;
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      v28(v11, v2);
    }
  }
  sub_1DD3540B8((uint64_t)v7, v25);
  return v26 & 1;
}

id MatterAccessoryRepresentable.__hf_move(to:)(uint64_t a1)
{
  uint64_t v1;

  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_hf_moveToRoom_, a1));
}

id MatterAccessoryRepresentable.__hf_accessoryType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DD63DA68();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63DB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v15 = &qword_1F03E47B8;
    v16 = (uint64_t)v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1DD63DA98();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v21 = (void *)objc_opt_self();
      sub_1DD63DA5C();
      v22 = (void *)sub_1DD63E950();
      v23 = objc_msgSend(v21, sel_matterDeviceType_, v22);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v15 = (uint64_t *)&unk_1F03E47F0;
    v16 = (uint64_t)v3;
  }
  sub_1DD3540B8(v16, v15);
  v17 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_category);
  v18 = objc_msgSend(v17, sel_categoryType);

  if (!v18)
  {
    sub_1DD63E14C();
    v18 = (id)sub_1DD63E11C();
    swift_bridgeObjectRelease();
  }
  v19 = objc_msgSend((id)objc_opt_self(), sel_categoryType_, v18);

  return v19;
}

id MatterAccessoryRepresentable.hf_serviceNameComponents.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_hf_serviceNameComponents);
}

uint64_t MatterAccessoryRepresentable.isFavorite.getter()
{
  return sub_1DD3F1A40(MEMORY[0x1E0D32738]);
}

BOOL MatterAccessoryRepresentable.hasSetFavorite.getter()
{
  return sub_1DD3F1B98(MEMORY[0x1E0D32720]);
}

id MatterAccessoryRepresentable.hf_shouldShowInFavorites.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_effectiveIsFavorite);
}

id MatterAccessoryRepresentable.effectiveIsFavorite.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_isFavorite);
}

id MatterAccessoryRepresentable.updateIsFavorite(_:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v19)(_BYTE *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  _BYTE v28[12];
  int v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v28[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DD63DB34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v17 = &v28[-v16];
  sub_1DD3EF30C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DD3540B8((uint64_t)v10, &qword_1F03E47B8);
    return objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  }
  else
  {
    v29 = a1;
    v19 = *(void (**)(_BYTE *, char *, uint64_t))(v12 + 32);
    v19(v17, v10, v11);
    v20 = sub_1DD63E2FC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))(v15, v17, v11);
    v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v22 = swift_allocObject();
    v19((_BYTE *)(v22 + v21), v15, v11);
    *(_BYTE *)(v22 + v21 + v13) = v29 & 1;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = &unk_1F03E4808;
    *(_QWORD *)(v23 + 24) = v22;
    v24 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
    swift_retain();
    v25 = objc_msgSend(v24, sel_init);
    objc_msgSend(v25, sel_setDescriptor_, 0);
    sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v5, &qword_1ED378350);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = &unk_1F03E4810;
    v26[5] = v23;
    v26[6] = v25;
    swift_retain();
    v27 = v25;
    sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4818, (uint64_t)v26);
    swift_release();
    swift_release();
    swift_release();
    sub_1DD3540B8((uint64_t)v7, &qword_1ED378350);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
    return v27;
  }
}

uint64_t sub_1DD3F1850()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED7C;
  return sub_1DD63DAEC();
}

uint64_t MatterAccessoryRepresentable.supportsHomeStatus.getter()
{
  return 1;
}

uint64_t sub_1DD3F18FC(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  v5 = sub_1DD63DB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  sub_1DD3EF30C(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_1DD3540B8((uint64_t)v11, &qword_1F03E47B8);
    v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    v14 = sub_1DD3540B8((uint64_t)v11, &qword_1F03E47B8);
    v13 = a3(v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  return v13 & 1;
}

uint64_t MatterAccessoryRepresentable.isVisibleInHomeStatus.getter()
{
  return sub_1DD3F1A40(MEMORY[0x1E0D32750]);
}

uint64_t sub_1DD3F1A40(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1DD63DB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_1DD3540B8((uint64_t)v8, &qword_1F03E47B8);
    v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    v10 = sub_1DD3540B8((uint64_t)v8, &qword_1F03E47B8);
    v9 = a1(v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9 & 1;
}

BOOL MatterAccessoryRepresentable.hasSetVisibleInHomeStatus.getter()
{
  return sub_1DD3F1B98(MEMORY[0x1E0D32710]);
}

BOOL sub_1DD3F1B98(unsigned __int8 (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v2 = sub_1DD63DA8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63DB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_1DD3540B8((uint64_t)v12, &qword_1F03E47B8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_1DD3540B8((uint64_t)v12, &qword_1F03E47B8);
    sub_1DD63DB10();
    v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v15 = a1(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v15 != 2;
  }
}

uint64_t MatterAccessoryRepresentable.isForcedVisibleInHomeStatus.getter()
{
  return 0;
}

id MatterAccessoryRepresentable.updateIsVisibleInHomeStatus(_:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v19)(_BYTE *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  _BYTE v28[12];
  int v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v28[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DD63DB34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v17 = &v28[-v16];
  sub_1DD3EF30C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DD3540B8((uint64_t)v10, &qword_1F03E47B8);
    return objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  }
  else
  {
    v29 = a1;
    v19 = *(void (**)(_BYTE *, char *, uint64_t))(v12 + 32);
    v19(v17, v10, v11);
    v20 = sub_1DD63E2FC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))(v15, v17, v11);
    v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v22 = swift_allocObject();
    v19((_BYTE *)(v22 + v21), v15, v11);
    *(_BYTE *)(v22 + v21 + v13) = v29 & 1;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = &unk_1F03E4828;
    *(_QWORD *)(v23 + 24) = v22;
    v24 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
    swift_retain();
    v25 = objc_msgSend(v24, sel_init);
    objc_msgSend(v25, sel_setDescriptor_, 0);
    sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v5, &qword_1ED378350);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = &unk_1F03E4830;
    v26[5] = v23;
    v26[6] = v25;
    swift_retain();
    v27 = v25;
    sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4838, (uint64_t)v26);
    swift_release();
    swift_release();
    swift_release();
    sub_1DD3540B8((uint64_t)v7, &qword_1ED378350);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
    return v27;
  }
}

uint64_t sub_1DD3F2058()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED7C;
  return sub_1DD63DAE0();
}

uint64_t MatterAccessoryRepresentable.showInHomeDashboard.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v0 = sub_1DD63DB34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_1DD3540B8((uint64_t)v6, &qword_1F03E47B8);
    v7 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
    sub_1DD3540B8((uint64_t)v6, &qword_1F03E47B8);
    v7 = sub_1DD63DAC8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v7 & 1;
}

BOOL MatterAccessoryRepresentable.hasSetShowInHomeDashboard.getter()
{
  return sub_1DD3F1B98(MEMORY[0x1E0D32718]);
}

id MatterAccessoryRepresentable.effectiveShowInHomeDashboard.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_showInHomeDashboard);
}

id MatterAccessoryRepresentable.updateShowInHomeDashboard(_:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v19)(_BYTE *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  _BYTE v28[12];
  int v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v28[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DD63DB34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v17 = &v28[-v16];
  sub_1DD3EF30C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DD3540B8((uint64_t)v10, &qword_1F03E47B8);
    return objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  }
  else
  {
    v29 = a1;
    v19 = *(void (**)(_BYTE *, char *, uint64_t))(v12 + 32);
    v19(v17, v10, v11);
    v20 = sub_1DD63E2FC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))(v15, v17, v11);
    v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v22 = swift_allocObject();
    v19((_BYTE *)(v22 + v21), v15, v11);
    *(_BYTE *)(v22 + v21 + v13) = v29 & 1;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = &unk_1F03E4848;
    *(_QWORD *)(v23 + 24) = v22;
    v24 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
    swift_retain();
    v25 = objc_msgSend(v24, sel_init);
    objc_msgSend(v25, sel_setDescriptor_, 0);
    sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v5, &qword_1ED378350);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = &unk_1F03E4850;
    v26[5] = v23;
    v26[6] = v25;
    swift_retain();
    v27 = v25;
    sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4858, (uint64_t)v26);
    swift_release();
    swift_release();
    swift_release();
    sub_1DD3540B8((uint64_t)v7, &qword_1ED378350);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
    return v27;
  }
}

uint64_t sub_1DD3F26C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3D9CD4;
  return sub_1DD63DAD4();
}

uint64_t MatterAccessoryRepresentable.__hf_tileSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __CFString **v15;
  __CFString *v16;
  uint64_t result;
  uint64_t v18;

  v0 = sub_1DD63DB34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4860);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_1DD3540B8((uint64_t)v6, &qword_1F03E47B8);
    v10 = sub_1DD63DC48();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_1DD3540B8((uint64_t)v6, &qword_1F03E47B8);
  sub_1DD63DB1C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v12 = sub_1DD63DC48();
  v13 = *(_QWORD *)(v12 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
    return (uint64_t)v11;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v9, v12);
  if (v14 == *MEMORY[0x1E0D329D0])
  {
    v15 = HFTileResizableSizeSmall;
LABEL_8:
    v11 = *v15;
    v16 = *v15;
    return (uint64_t)v11;
  }
  if (v14 == *MEMORY[0x1E0D329C8])
  {
    v15 = HFTileResizableSizeMedium;
    goto LABEL_8;
  }
  result = sub_1DD63E854();
  __break(1u);
  return result;
}

id MatterAccessoryRepresentable.__hf_setTileSize(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  char *v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63DB34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - v16;
  sub_1DD3EF30C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DD3540B8((uint64_t)v10, &qword_1F03E47B8);
    return objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  }
  else
  {
    v32 = v5;
    v19 = a1;
    v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v17, v10, v11);
    v21 = sub_1DD63E2FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    v22 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = swift_allocObject();
    v20((char *)(v23 + v22), v15, v11);
    *(_QWORD *)(v23 + ((v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = &unk_1F03E4870;
    *(_QWORD *)(v24 + 24) = v23;
    v25 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
    v26 = v19;
    swift_retain();
    v27 = objc_msgSend(v25, sel_init);
    objc_msgSend(v27, sel_setDescriptor_, 0);
    v28 = (uint64_t)v32;
    sub_1DD3DEBB4((uint64_t)v7, (uint64_t)v32, &qword_1ED378350);
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = &unk_1F03E4878;
    v29[5] = v24;
    v29[6] = v27;
    swift_retain();
    v30 = v27;
    sub_1DD3D883C(v28, (uint64_t)&unk_1F03E4880, (uint64_t)v29);
    swift_release();
    swift_release();
    swift_release();
    sub_1DD3540B8((uint64_t)v7, &qword_1ED378350);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return v30;
  }
}

uint64_t sub_1DD3F2CCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4860);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3F2D28()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DD3F2DE8(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3F2D84;
  return sub_1DD63DAF8();
}

uint64_t sub_1DD3F2D84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 32);
  v3 = *v0;
  swift_task_dealloc();
  sub_1DD3540B8(v1, &qword_1F03E4860);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1DD3F2DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  __CFString *v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __CFString *v27;
  id v28;

  if (!a1)
    goto LABEL_12;
  v4 = sub_1DD63E14C();
  v6 = v5;
  if (v4 == sub_1DD63E14C() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v9 = sub_1DD63E860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_14:
    v22 = (unsigned int *)MEMORY[0x1E0D329C8];
LABEL_15:
    v23 = *v22;
    v24 = sub_1DD63DC48();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(a2, v23, v24);
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v20 = a2;
    v21 = 0;
    v18 = v24;
    return v19(v20, v21, 1, v18);
  }
  v10 = sub_1DD63E14C();
  v12 = v11;
  if (v10 == sub_1DD63E14C() && v12 == v13)
  {
    v27 = CFSTR("HFTileResizableSizeSmall");
    v28 = a1;

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v15 = sub_1DD63E860();
  v16 = CFSTR("HFTileResizableSizeSmall");
  v17 = a1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_18:
    v22 = (unsigned int *)MEMORY[0x1E0D329D0];
    goto LABEL_15;
  }
LABEL_12:
  v18 = sub_1DD63DC48();
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20 = a2;
  v21 = 1;
  return v19(v20, v21, 1, v18);
}

uint64_t MatterAccessoryRepresentable.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  void (*v13)(char *, uint64_t);
  char v14;
  uint64_t v16;
  char *v17;
  _BYTE v18[24];
  uint64_t v19;

  swift_getObjectType();
  v3 = sub_1DD63D7C8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  sub_1DD3DEBB4(a1, (uint64_t)v18, (uint64_t *)&unk_1ED3785F0);
  if (!v19)
  {
    sub_1DD3540B8((uint64_t)v18, (uint64_t *)&unk_1ED3785F0);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v14 = 0;
    return v14 & 1;
  }
  v10 = v17;
  v11 = objc_msgSend(*(id *)&v17[OBJC_IVAR___HFMatterAccessoryRepresentable_accessory], sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v12 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_uniqueIdentifier);
  sub_1DD63D7A4();

  LOBYTE(v12) = sub_1DD63D798();
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v7, v3);
  v13(v9, v3);
  if ((v12 & 1) == 0)
  {

    goto LABEL_7;
  }
  v14 = sub_1DD63D954();

  return v14 & 1;
}

uint64_t MatterAccessoryRepresentable.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  _BYTE v7[24];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = sub_1DD63D7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DD63E944();
  sub_1DD63D960();
  v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___HFMatterAccessoryRepresentable_accessory), sel_uniqueIdentifier);
  sub_1DD63D7A4();

  sub_1DD63D7B0();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  v14 = v9;
  v15 = v10;
  v16 = v11;
  v12 = *(_OWORD *)&v7[8];
  v13 = v8;
  return sub_1DD63E92C();
}

void MatterAccessoryRepresentable.capabilities.getter(_QWORD *a1@<X8>)
{
  *a1 = 45;
}

void sub_1DD3F3460(_QWORD *a1@<X8>)
{
  MatterAccessoryRepresentable.capabilities.getter(a1);
}

uint64_t sub_1DD3F3474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DD3F34B8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_1DD3F34D0(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  objc_class *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  objc_super v27;

  v5 = sub_1DD63D984();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v2[OBJC_IVAR___HFMatterAccessoryRepresentable__staticMatterDevice];
  v13 = sub_1DD63DB34();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v2[OBJC_IVAR___HFMatterAccessoryRepresentable__tileInfo];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HFMatterAccessoryRepresentable_accessory] = a1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(&v2[OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath], a2, v5);
  v16 = (objc_class *)type metadata accessor for MatterAccessoryRepresentable();
  v27.receiver = v2;
  v27.super_class = v16;
  v17 = a1;
  v18 = objc_msgSendSuper2(&v27, sel_init);
  v19 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15(v8, a2, v5);
  sub_1DD63E2E4();
  v21 = v18;
  swift_retain();
  v22 = sub_1DD63E2D8();
  v23 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v24 + 2) = v22;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v24[v23], v8, v5);
  swift_release();
  sub_1DD3D885C((uint64_t)v11, (uint64_t)&unk_1F03E48F0, (uint64_t)v24);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v21;
}

uint64_t type metadata accessor for MatterAccessoryRepresentable()
{
  uint64_t result;

  result = qword_1F03E48B8;
  if (!qword_1F03E48B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD3F3760()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_1DD63DB34();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED78;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1DD3DED7C;
  return sub_1DD63DAEC();
}

uint64_t sub_1DD3F3800()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DED94;
  return sub_1DD436B9C(v2);
}

uint64_t sub_1DD3F3854(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DD3DED78;
  return sub_1DD3D8C8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DD3F38D8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_1DD63DB34();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED78;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1DD3DED7C;
  return sub_1DD63DAE0();
}

uint64_t sub_1DD3F3978()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD3F399C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DE6D4;
  return sub_1DD436B9C(v2);
}

uint64_t sub_1DD3F39F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DD3DE5EC;
  return sub_1DD3D8C8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DD3F3A74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_1DD63DB34();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DE5EC;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1DD3D9CD4;
  return sub_1DD63DAD4();
}

uint64_t sub_1DD3F3B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1DD63DB34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DD3F3B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_1DD63DB34() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1DD3DED78;
  return sub_1DD3F2CCC(v4, v5);
}

uint64_t sub_1DD3F3C0C@<X0>(char *a1@<X8>)
{
  return sub_1DD3EF30C(a1);
}

uint64_t sub_1DD3F3C30()
{
  return type metadata accessor for MatterAccessoryRepresentable();
}

void sub_1DD3F3C38()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DD63D984();
  if (v0 <= 0x3F)
  {
    sub_1DD3F3D5C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MatterAccessoryRepresentable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MatterAccessoryRepresentable.staticMatterDevice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MatterAccessoryRepresentable.staticMatterDevice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MatterAccessoryRepresentable.staticMatterDevice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MatterAccessoryRepresentable.tileInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MatterAccessoryRepresentable.__allocating_init(accessory:tilePath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1DD3F3D5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03E48C8)
  {
    sub_1DD63DB34();
    v0 = sub_1DD63E524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03E48C8);
  }
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD3F3DE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD3F3E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DD63D984();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DD3F3E88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DD63D984() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DD3DED78;
  return sub_1DD3F015C(a1, v5, v6, v7, v8);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static CharacteristicNotificationManager.characteristicsToEnableNotifications(for:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;
  void *v9;
  uint64_t v10[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  v1 = MEMORY[0x1E0DEE9E8];
  v13 = MEMORY[0x1E0DEE9E8];
  v2 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *))(v4 + 16))((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1DD63E1A0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, AssociatedTypeWitness);
  sub_1DD63E530();
  v5 = v9;
  if (v9)
  {
    do
    {
      v6 = static CharacteristicNotificationManager.characteristicsToEnableNotifications(for:)(v5);
      sub_1DD3E2A68(v6);

      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, AssociatedTypeWitness);
      sub_1DD63E530();
      v5 = v9;
    }
    while (v9);
    v1 = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t static CharacteristicNotificationManager.characteristicsToEnableNotifications(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, unint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  char v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  unint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;

  v2 = sub_1DD63DA80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v102 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v102 - v10;
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = a1;
    v15 = objc_msgSend(v13, sel_actionSet);
    v16 = objc_msgSend(v15, sel_hf_affectedCharacteristics);

    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
    v17 = sub_1DD63E398();

    return v17;
  }
  v116 = &unk_1F03F0F70;
  v19 = swift_dynamicCastObjCProtocolConditional();
  v107 = v3;
  v110 = v9;
  v111 = v2;
  if (!v19)
  {
    HFItem.subscript.getter(&v117);
    if (v119)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4930);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v51 = sub_1DD3F4E30(v115);
        v102 = 0;
        swift_bridgeObjectRelease();
        v52 = sub_1DD358094(v51, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (unint64_t *)&qword_1ED378390, (void (*)(id *, uint64_t))sub_1DD358210);
        swift_bridgeObjectRelease();
        v115 = v52;
        HFItem.subscript.getter(&v117);
        if (v119)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4960);
          if (swift_dynamicCast())
          {
            v53 = v114;
            if ((v114 & 0xC000000000000001) == 0)
            {
LABEL_35:
              v54 = 0;
              v55 = -1 << *(_BYTE *)(v53 + 32);
              v56 = *(_QWORD *)(v53 + 56);
              v109 = v53 + 56;
              v57 = ~v55;
              v58 = -v55;
              if (v58 < 64)
                v59 = ~(-1 << v58);
              else
                v59 = -1;
              v60 = v59 & v56;
              v61 = v57;
              goto LABEL_49;
            }
LABEL_48:
            sub_1DD63E5B4();
            sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
            sub_1DD352A70((unint64_t *)&qword_1F03E4940, (unint64_t *)&qword_1ED3783D0);
            sub_1DD63E3F8();
            v109 = *((_QWORD *)&v117 + 1);
            v53 = v117;
            v61 = v118;
            v54 = v119;
            v60 = v120;
LABEL_49:
            v103 = v61;
            v105 = v53 & 0x7FFFFFFFFFFFFFFFLL;
            v106 = (unint64_t)(v61 + 64) >> 6;
            v104 = MEMORY[0x1E0DEE9B0] + 8;
            if ((v53 & 0x8000000000000000) == 0)
              goto LABEL_54;
LABEL_52:
            v63 = (void *)sub_1DD63E614();
            if (v63)
            {
              v113 = v63;
              sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v64 = (id)v114;
              swift_unknownObjectRelease();
              v65 = v54;
              v66 = v60;
              while (v64)
              {
                v62 = static CharacteristicNotificationManager.characteristicsToEnableNotifications(for:)(v64);
                sub_1DD3E2A68(v62);

                v54 = v65;
                v60 = v66;
                if (v53 < 0)
                  goto LABEL_52;
LABEL_54:
                if (v60)
                {
                  v66 = (v60 - 1) & v60;
                  v67 = __clz(__rbit64(v60)) | (v54 << 6);
                  v65 = v54;
                }
                else
                {
                  v68 = v54 + 1;
                  if (__OFADD__(v54, 1))
                    goto LABEL_104;
                  if (v68 >= v106)
                    break;
                  v69 = *(_QWORD *)(v109 + 8 * v68);
                  v65 = v54 + 1;
                  if (!v69)
                  {
                    v65 = v54 + 2;
                    if (v54 + 2 >= v106)
                      break;
                    v69 = *(_QWORD *)(v109 + 8 * v65);
                    if (!v69)
                    {
                      v65 = v54 + 3;
                      if (v54 + 3 >= v106)
                        break;
                      v69 = *(_QWORD *)(v109 + 8 * v65);
                      if (!v69)
                      {
                        v65 = v54 + 4;
                        if (v54 + 4 >= v106)
                          break;
                        v69 = *(_QWORD *)(v109 + 8 * v65);
                        if (!v69)
                        {
                          v70 = v54 + 5;
                          do
                          {
                            if (v106 == v70)
                              goto LABEL_72;
                            v69 = *(_QWORD *)(v109 + 8 * v70++);
                          }
                          while (!v69);
                          v65 = v70 - 1;
                        }
                      }
                    }
                  }
                  v66 = (v69 - 1) & v69;
                  v67 = __clz(__rbit64(v69)) + (v65 << 6);
                }
                v64 = *(id *)(*(_QWORD *)(v53 + 48) + 8 * v67);
              }
            }
LABEL_72:
            sub_1DD3DEBAC();
            if ((v115 & 0xC000000000000001) == 0)
            {
              v99 = swift_bridgeObjectRetain();
              v24 = sub_1DD3F6240(v99);
              goto LABEL_101;
            }
            v24 = MEMORY[0x1E0DEE9E8];
            v114 = MEMORY[0x1E0DEE9E8];
            swift_bridgeObjectRetain();
            v106 = sub_1DD63E5B4();
            v71 = sub_1DD63E614();
            if (!v71)
              goto LABEL_99;
            v72 = v71;
            v105 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
            LODWORD(v104) = *MEMORY[0x1E0D326B8];
            v103 = MEMORY[0x1E0DEE9B0] + 8;
            v73 = v107;
            v74 = v111;
            v108 = (uint64_t)v6;
LABEL_77:
            v112 = v72;
            swift_dynamicCast();
            sub_1DD63E494();
            (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v9, v104, v74);
            v109 = sub_1DD353504((unint64_t *)&unk_1F03E4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326F0]);
            v75 = sub_1DD63E110();
            v76 = *(void (**)(char *, uint64_t))(v73 + 8);
            v76(v9, v74);
            if ((v75 & 1) != 0)
              goto LABEL_75;
            if (qword_1F03E37D0 != -1)
              swift_once();
            v77 = off_1F03E4920;
            if (*((_QWORD *)off_1F03E4920 + 2))
            {
              sub_1DD353504((unint64_t *)&unk_1F03E4700, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326E8]);
              v78 = sub_1DD63E0EC();
              v79 = -1 << v77[32];
              v80 = v78 & ~v79;
              if (((*(_QWORD *)&v77[((v80 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v80) & 1) != 0)
              {
                v81 = ~v79;
                v82 = *(_QWORD *)(v107 + 72);
                v83 = *(void (**)(char *, unint64_t, uint64_t))(v107 + 16);
                while (1)
                {
                  v84 = v110;
                  v85 = v111;
                  v83(v110, *((_QWORD *)v77 + 6) + v82 * v80, v111);
                  v86 = sub_1DD63E110();
                  v76(v84, v85);
                  if ((v86 & 1) != 0)
                    break;
                  v80 = (v80 + 1) & v81;
                  if (((*(_QWORD *)&v77[((v80 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v80) & 1) == 0)
                    goto LABEL_85;
                }
LABEL_75:
                v74 = v111;
                v76((char *)v108, v111);

                v9 = v110;
                goto LABEL_76;
              }
            }
LABEL_85:
            v74 = v111;
            v76((char *)v108, v111);
            v87 = v113;
            v88 = v114;
            if (*(_QWORD *)(v114 + 24) <= *(_QWORD *)(v114 + 16))
            {
              sub_1DD3F52C0();
              v88 = v114;
            }
            v89 = sub_1DD63E4DC();
            v90 = v88 + 56;
            v91 = -1 << *(_BYTE *)(v88 + 32);
            v92 = v89 & ~v91;
            v93 = v92 >> 6;
            v9 = v110;
            if (((-1 << v92) & ~*(_QWORD *)(v88 + 56 + 8 * (v92 >> 6))) != 0)
            {
              v94 = __clz(__rbit64((-1 << v92) & ~*(_QWORD *)(v88 + 56 + 8 * (v92 >> 6)))) | v92 & 0x7FFFFFFFFFFFFFC0;
              goto LABEL_97;
            }
            v95 = 0;
            v96 = (unint64_t)(63 - v91) >> 6;
            while (++v93 != v96 || (v95 & 1) == 0)
            {
              v97 = v93 == v96;
              if (v93 == v96)
                v93 = 0;
              v95 |= v97;
              v98 = *(_QWORD *)(v90 + 8 * v93);
              if (v98 != -1)
              {
                v94 = __clz(__rbit64(~v98)) + (v93 << 6);
LABEL_97:
                *(_QWORD *)(v90 + ((v94 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v94;
                *(_QWORD *)(*(_QWORD *)(v88 + 48) + 8 * v94) = v87;
                ++*(_QWORD *)(v88 + 16);
LABEL_76:
                v72 = sub_1DD63E614();
                v73 = v107;
                if (v72)
                  goto LABEL_77;
                v24 = v114;
LABEL_99:
                swift_release();
LABEL_101:
                swift_bridgeObjectRelease();
                return v24;
              }
            }
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            if (sub_1DD63E7B8())
            {
              sub_1DD3EBDA4(MEMORY[0x1E0DEE9D8]);
              return v100;
            }
            return MEMORY[0x1E0DEE9E8];
          }
        }
        else
        {
          sub_1DD3F6180((uint64_t)&v117);
        }
        if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
        {
          if (sub_1DD63E7B8())
          {
            sub_1DD3EE56C(MEMORY[0x1E0DEE9D8]);
            v53 = v101;
          }
          else
          {
            v53 = MEMORY[0x1E0DEE9E8];
          }
          v9 = v110;
          if ((v53 & 0xC000000000000001) == 0)
            goto LABEL_35;
        }
        else
        {
          v53 = MEMORY[0x1E0DEE9E8];
          if ((MEMORY[0x1E0DEE9E8] & 0xC000000000000001) == 0)
            goto LABEL_35;
        }
        goto LABEL_48;
      }
    }
    else
    {
      sub_1DD3F6180((uint64_t)&v117);
    }
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0)
      return MEMORY[0x1E0DEE9E8];
    goto LABEL_105;
  }
  v20 = (void *)v19;
  v21 = a1;
  objc_msgSend(v20, sel_accessoryRepresentableObject);
  ObjectType = swift_getObjectType();
  v23 = HFAccessoryRepresentable.containedCharacteristics.getter(ObjectType);
  swift_unknownObjectRelease();
  if ((v23 & 0xC000000000000001) == 0)
  {
    v24 = sub_1DD3F6240(v23);

    return v24;
  }
  v24 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v117 = MEMORY[0x1E0DEE9E8];
  v106 = sub_1DD63E5B4();
  v25 = sub_1DD63E614();
  if (!v25)
    goto LABEL_40;
  v26 = v25;
  v102 = v21;
  v105 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  LODWORD(v104) = *MEMORY[0x1E0D326B8];
  v103 = MEMORY[0x1E0DEE9B0] + 8;
  v109 = (uint64_t)v11;
  do
  {
    v114 = v26;
    swift_dynamicCast();
    sub_1DD63E494();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v9, v104, v2);
    v108 = sub_1DD353504((unint64_t *)&unk_1F03E4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326F0]);
    v27 = sub_1DD63E110();
    v28 = *(void (**)(char *, uint64_t))(v3 + 8);
    v28(v9, v2);
    if ((v27 & 1) != 0)
      goto LABEL_7;
    if (qword_1F03E37D0 != -1)
      swift_once();
    v29 = off_1F03E4920;
    if (*((_QWORD *)off_1F03E4920 + 2))
    {
      sub_1DD353504((unint64_t *)&unk_1F03E4700, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326E8]);
      v30 = sub_1DD63E0EC();
      v31 = -1 << v29[32];
      v32 = v30 & ~v31;
      if (((*(_QWORD *)&v29[((v32 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v32) & 1) != 0)
      {
        v33 = ~v31;
        v34 = *(_QWORD *)(v107 + 72);
        v35 = *(void (**)(char *, unint64_t, uint64_t))(v107 + 16);
        while (1)
        {
          v36 = v110;
          v37 = v111;
          v35(v110, *((_QWORD *)v29 + 6) + v34 * v32, v111);
          v38 = sub_1DD63E110();
          v28(v36, v37);
          if ((v38 & 1) != 0)
            break;
          v32 = (v32 + 1) & v33;
          if (((*(_QWORD *)&v29[((v32 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v32) & 1) == 0)
            goto LABEL_17;
        }
LABEL_7:
        v2 = v111;
        v28((char *)v109, v111);

        v3 = v107;
        v9 = v110;
        goto LABEL_8;
      }
    }
LABEL_17:
    v2 = v111;
    v28((char *)v109, v111);
    v39 = v115;
    v40 = v117;
    if (*(_QWORD *)(v117 + 24) <= *(_QWORD *)(v117 + 16))
    {
      sub_1DD3F52C0();
      v40 = v117;
    }
    v41 = sub_1DD63E4DC();
    v42 = v40 + 56;
    v43 = -1 << *(_BYTE *)(v40 + 32);
    v44 = v41 & ~v43;
    v45 = v44 >> 6;
    v3 = v107;
    v9 = v110;
    if (((-1 << v44) & ~*(_QWORD *)(v40 + 56 + 8 * (v44 >> 6))) != 0)
    {
      v46 = __clz(__rbit64((-1 << v44) & ~*(_QWORD *)(v40 + 56 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v47 = 0;
      v48 = (unint64_t)(63 - v43) >> 6;
      do
      {
        if (++v45 == v48 && (v47 & 1) != 0)
        {
          __break(1u);
          goto LABEL_103;
        }
        v49 = v45 == v48;
        if (v45 == v48)
          v45 = 0;
        v47 |= v49;
        v50 = *(_QWORD *)(v42 + 8 * v45);
      }
      while (v50 == -1);
      v46 = __clz(__rbit64(~v50)) + (v45 << 6);
    }
    *(_QWORD *)(v42 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
    *(_QWORD *)(*(_QWORD *)(v40 + 48) + 8 * v46) = v39;
    ++*(_QWORD *)(v40 + 16);
LABEL_8:
    v26 = sub_1DD63E614();
  }
  while (v26);
  v24 = v117;
  v21 = v102;
LABEL_40:

  swift_release();
  return v24;
}

uint64_t sub_1DD3F4E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t i;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (v5)
    goto LABEL_26;
LABEL_6:
  v9 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v9 < v6)
    {
      v10 = *(_QWORD *)(v2 + 8 * v9);
      ++v8;
      if (v10)
        goto LABEL_21;
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_27;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (v10)
        goto LABEL_21;
      v8 = v9 + 2;
      if (v9 + 2 >= v6)
        goto LABEL_27;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (v10)
        goto LABEL_21;
      v8 = v9 + 3;
      if (v9 + 3 >= v6)
        goto LABEL_27;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (v10)
      {
LABEL_21:
        v5 = (v10 - 1) & v10;
        for (i = __clz(__rbit64(v10)) + (v8 << 6); ; i = v15 | (v8 << 6))
        {
          sub_1DD3DE980(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v18);
          v16[0] = v18[0];
          v16[1] = v18[1];
          v17 = v19;
          v13 = (void *)sub_1DD63E644();
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
          {
            v14 = sub_1DD3DE9BC((uint64_t)v16);
            MEMORY[0x1DF0D9DA4](v14);
            if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1DD63E224();
            sub_1DD63E254();
            result = sub_1DD63E20C();
            if (!v5)
              goto LABEL_6;
          }
          else
          {

            result = sub_1DD3DE9BC((uint64_t)v16);
            if (!v5)
              goto LABEL_6;
          }
LABEL_26:
          v15 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v11 = v9 + 4;
      if (v11 < v6)
      {
        v10 = *(_QWORD *)(v2 + 8 * v11);
        if (v10)
        {
          v8 = v11;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_29;
          if (v8 >= v6)
            break;
          v10 = *(_QWORD *)(v2 + 8 * v8);
          ++v11;
          if (v10)
            goto LABEL_21;
        }
      }
    }
LABEL_27:
    swift_release();
    return v20;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DD3F5050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1DD63D984();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v25 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  sub_1DD353504(&qword_1F03E40D0, v12, MEMORY[0x1E0D32388]);
  result = sub_1DD63E3C8();
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v26 = result;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_5;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_23;
      v23 = *(_QWORD *)(v25 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_23;
        v23 = *(_QWORD *)(v25 + 8 * v14);
        if (!v23)
        {
          v14 = v22 + 3;
          if (v22 + 3 >= v19)
            goto LABEL_23;
          v23 = *(_QWORD *)(v25 + 8 * v14);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_1DD3EA180((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_23:
    swift_release();
    return v26;
  }
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1DD3F52AC()
{
  off_1F03E4920 = (_UNKNOWN *)MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1DD3F52C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378560);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_31;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_31;
          v17 = v6[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_37;
                if (v12 >= v9)
                  goto LABEL_31;
                v17 = v6[v12];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v12 = v18;
          }
        }
LABEL_21:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_1DD63E4DC();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD3F5548(uint64_t a1)
{
  return sub_1DD3F589C(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], (uint64_t *)&unk_1F03E4710, (unint64_t *)&unk_1F03E4700, MEMORY[0x1E0D326E8]);
}

uint64_t sub_1DD3F556C(uint64_t a1)
{
  return sub_1DD3F5C08(a1, (uint64_t *)&unk_1F03E46C8);
}

uint64_t sub_1DD3F5578()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4990);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_35;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_35;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_35;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_35:
                swift_release();
                v1 = v29;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v12 >= v9)
                    goto LABEL_35;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1DD63E908();
      sub_1DD63E920();
      if (v19)
      {
        v20 = v19;
        sub_1DD63E4F4();

      }
      result = sub_1DD63E938();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD3F5854(uint64_t a1)
{
  return sub_1DD3F5C08(a1, &qword_1F03E4670);
}

uint64_t sub_1DD3F5860(uint64_t a1)
{
  return sub_1DD3F5C08(a1, (uint64_t *)&unk_1F03E4660);
}

uint64_t sub_1DD3F586C(uint64_t a1)
{
  return sub_1DD3F5C08(a1, &qword_1F03E4628);
}

uint64_t sub_1DD3F5878(uint64_t a1)
{
  return sub_1DD3F589C(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], (uint64_t *)&unk_1F03E4630, &qword_1F03E40D0, MEMORY[0x1E0D32388]);
}

uint64_t sub_1DD3F589C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1DD63E68C();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1DD353504(v45, v44, v46);
      result = sub_1DD63E0EC();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_1DD3F5BFC(uint64_t a1)
{
  return sub_1DD3F5C08(a1, (uint64_t *)&unk_1F03E4640);
}

uint64_t sub_1DD3F5C08(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1DD63E68C();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1DD63E4DC();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1DD3F5EA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E0);
  v3 = sub_1DD63E68C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1DD63E908();
      sub_1DD63E17C();
      result = sub_1DD63E938();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD3F6180(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED3785F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DD3F61C0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1DD63E4DC();
  result = sub_1DD63E59C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1DD3F6240(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1DD3F639C((_QWORD *)((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1DD3F639C((unint64_t *)v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1DF0DB358](v8, -1, -1);
  }
  return v7;
}

void sub_1DD3F639C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  char v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;

  v33 = a2;
  v34 = a1;
  v4 = sub_1DD63DA80();
  v41 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v33 - v7;
  v8 = 0;
  v39 = a3;
  v9 = *(_QWORD *)(a3 + 56);
  v35 = 0;
  v36 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & v9;
  v37 = (unint64_t)(v10 + 63) >> 6;
  v38 = *MEMORY[0x1E0D326B8];
  while (1)
  {
    if (v12)
    {
      v43 = (v12 - 1) & v12;
      v44 = v8;
      v13 = __clz(__rbit64(v12)) | (v8 << 6);
      goto LABEL_22;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v14 >= v37)
      goto LABEL_33;
    v15 = *(_QWORD *)(v36 + 8 * v14);
    v16 = v8 + 1;
    if (!v15)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v37)
        goto LABEL_33;
      v15 = *(_QWORD *)(v36 + 8 * v16);
      if (!v15)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v37)
          goto LABEL_33;
        v15 = *(_QWORD *)(v36 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v43 = (v15 - 1) & v15;
    v44 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_22:
    v18 = *(_QWORD *)(v39 + 48);
    v40 = v13;
    v42 = *(id *)(v18 + 8 * v13);
    sub_1DD63E494();
    v19 = v41;
    v20 = v46;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v46, v38, v4);
    v45 = sub_1DD353504((unint64_t *)&unk_1F03E4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326F0]);
    v21 = sub_1DD63E110();
    v47 = *(void (**)(char *, uint64_t))(v19 + 8);
    v47(v20, v4);
    if ((v21 & 1) != 0)
      goto LABEL_5;
    if (qword_1F03E37D0 != -1)
      swift_once();
    v22 = off_1F03E4920;
    if (*((_QWORD *)off_1F03E4920 + 2)
      && (sub_1DD353504((unint64_t *)&unk_1F03E4700, (uint64_t (*)(uint64_t))MEMORY[0x1E0D326D0], MEMORY[0x1E0D326E8]), v23 = sub_1DD63E0EC(), v24 = -1 << *((_BYTE *)v22 + 32), v25 = v23 & ~v24, ((*(_QWORD *)((char *)v22 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v25) & 1) != 0))
    {
      v26 = ~v24;
      v27 = *(_QWORD *)(v41 + 72);
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
      while (1)
      {
        v29 = v46;
        v28(v46, v22[6] + v27 * v25, v4);
        v30 = sub_1DD63E110();
        v47(v29, v4);
        if ((v30 & 1) != 0)
          break;
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)((char *)v22 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v25) & 1) == 0)
          goto LABEL_30;
      }
LABEL_5:
      v47(v48, v4);

      v12 = v43;
      v8 = v44;
    }
    else
    {
LABEL_30:
      v47(v48, v4);

      *(unint64_t *)((char *)v34 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v31 = __OFADD__(v35++, 1);
      v12 = v43;
      v8 = v44;
      if (v31)
        goto LABEL_35;
    }
  }
  v17 = v8 + 4;
  if (v8 + 4 >= v37)
  {
LABEL_33:
    v32 = v39;
    swift_retain();
    sub_1DD42DF9C(v34, v33, v35, v32);
    return;
  }
  v15 = *(_QWORD *)(v36 + 8 * v17);
  if (v15)
  {
    v16 = v8 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v37)
      goto LABEL_33;
    v15 = *(_QWORD *)(v36 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1DD3F67B0(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
  sub_1DD3F6AA4();
  result = sub_1DD63E3C8();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1DF0DA2C0](i, a1);
        sub_1DD3E94EC(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1DD3E94EC(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3F68FC(unint64_t a1)
{
  return sub_1DD358094(a1, (unint64_t *)&unk_1ED3783E0, 0x1E0CBA7D8, &qword_1F03E4988, (void (*)(id *, uint64_t))sub_1DD3E9C28);
}

uint64_t sub_1DD3F6920(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for MatterAccessoryLikeItem();
  sub_1DD353504((unint64_t *)&unk_1F03E4970, (uint64_t (*)(uint64_t))type metadata accessor for MatterAccessoryLikeItem, MEMORY[0x1E0DEFCF8]);
  result = sub_1DD63E3C8();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1DF0DA2C0](i, a1);
        sub_1DD3E9F04(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1DD3E9F04(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3F6A80(unint64_t a1)
{
  return sub_1DD358094(a1, (unint64_t *)&unk_1F03E4B00, (uint64_t)off_1EA7222B8, &qword_1F03E4980, (void (*)(id *, uint64_t))sub_1DD3EA3E4);
}

unint64_t sub_1DD3F6AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E49A0;
  if (!qword_1F03E49A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03E46C0);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E49A0);
  }
  return result;
}

uint64_t MatterAccessoryLikeItem.tilePath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath;
  v4 = sub_1DD63D984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id MatterAccessoryLikeItem.matterAccessoryRepresentable.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable);
}

void *MatterAccessoryLikeItem.actionSetBuilder.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder);
  v2 = v1;
  return v1;
}

uint64_t sub_1DD3F6B70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E49B0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DD63D99C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DD63DB34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD3EF30C(v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v17 = sub_1DD63D948();
    if ((v17 & 0x10000) != 0)
    {
      v16 = sub_1DD63DAA4();
    }
    else
    {
      v18 = v17;
      v19 = sub_1DD63DB28();
      if (*(_QWORD *)(v19 + 16) && (v20 = sub_1DD3D9490(v18), (v21 & 1) != 0))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v2, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v4 + 72) * v20, v3);
        v22 = 0;
      }
      else
      {
        v22 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, v22, 1, v3);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        v14 = (uint64_t *)&unk_1F03E49B0;
        v15 = (uint64_t)v2;
        goto LABEL_3;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
      v16 = sub_1DD63D990();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v16;
  }
  v14 = &qword_1F03E47B8;
  v15 = (uint64_t)v9;
LABEL_3:
  sub_1DD3540B8(v15, v14);
  return 0;
}

id MatterAccessoryLikeItem.__allocating_init(tilePath:currentMatterSnapshot:accessory:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = sub_1DD3FA6D0(a1, a2, a3, a4);

  return v5;
}

id MatterAccessoryLikeItem.__allocating_init(matterAccessoryRepresentable:actionSetBuilder:currentMatterSnapshot:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = a1 + OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath;
  v11 = &v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath];
  v12 = sub_1DD63D984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  v13 = &v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
  *(_QWORD *)v13 = a3;
  *((_QWORD *)v13 + 1) = a4;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = a2;
  v15.receiver = v9;
  v15.super_class = v4;
  return objc_msgSendSuper2(&v15, sel_init);
}

id MatterAccessoryLikeItem.init(matterAccessoryRepresentable:actionSetBuilder:currentMatterSnapshot:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_super v14;

  v9 = a1 + OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath;
  v10 = &v4[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath];
  v11 = sub_1DD63D984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  v12 = &v4[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = a2;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for MatterAccessoryLikeItem();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t sub_1DD3F6FB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[90] = v1;
  v2[89] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v2[91] = swift_task_alloc();
  v3 = sub_1DD63D7C8();
  v2[92] = v3;
  v2[93] = *(_QWORD *)(v3 - 8);
  v2[94] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  v4 = sub_1DD63DC30();
  v2[97] = v4;
  v2[98] = *(_QWORD *)(v4 - 8);
  v2[99] = swift_task_alloc();
  v5 = sub_1DD63DC3C();
  v2[100] = v5;
  v2[101] = *(_QWORD *)(v5 - 8);
  v2[102] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3F70C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __CFString *v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v5;

  v1 = sub_1DD3D6250(MEMORY[0x1E0DEE9D8]);
  v2 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v0 + 824) = CFSTR("dependentOnMatterSnapshot");
  *(_QWORD *)(v0 + 152) = v2;
  *(_BYTE *)(v0 + 128) = 1;
  sub_1DD357884((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 96));
  v3 = CFSTR("dependentOnMatterSnapshot");
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0((_OWORD *)(v0 + 96), v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 832) = v1;
  *(_QWORD *)(v0 + 704) = v1;
  swift_bridgeObjectRelease();

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 840) = v5;
  *v5 = v0;
  v5[1] = sub_1DD3F71B0;
  return sub_1DD3F7BB8(v0 + 16, *(_QWORD *)(v0 + 712));
}

uint64_t sub_1DD3F71B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3F7204()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __CFString *v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  __CFString *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  char v13;
  __CFString *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __CFString *v21;
  char v22;
  __CFString *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *boxed_opaque_existential_1;
  __CFString *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __CFString *v47;
  uint64_t v48;
  char v49;
  void *v50;
  id v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __CFString *v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __CFString *v65;
  _OWORD *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;

  v1 = (__int128 *)(v0 + 16);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = *(_QWORD *)(v0 + 832);
    v3 = *(_QWORD *)(v0 + 816);
    v61 = *(_QWORD *)(v0 + 808);
    v62 = *(_QWORD *)(v0 + 800);
    v60 = *(_QWORD *)(v0 + 792);
    v63 = *(_QWORD *)(v0 + 784);
    v64 = *(_QWORD *)(v0 + 776);
    v67 = *(char **)(v0 + 768);
    v68 = *(_QWORD *)(v0 + 760);
    sub_1DD3F34B8(v1, v0 + 56);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    v4 = CFSTR("title");
    v5 = sub_1DD63D9C0();
    *(_QWORD *)(v0 + 280) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 256) = v5;
    *(_QWORD *)(v0 + 264) = v6;
    sub_1DD357884((_OWORD *)(v0 + 256), (_OWORD *)(v0 + 288));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DBFD0((_OWORD *)(v0 + 288), v4, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v0 + 704) = v2;
    swift_bridgeObjectRelease();

    v69 = (_QWORD *)(v0 + 56);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    v8 = CFSTR("icon");
    sub_1DD63D9D8();
    sub_1DD63DC18();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v3, v62);
    sub_1DD63DC24();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v60, v64);
    v9 = objc_allocWithZone((Class)HFImageIconDescriptor);
    v10 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_initWithSystemImageNamed_, v10);

    *(_QWORD *)(v0 + 344) = sub_1DD352AB0(0, (unint64_t *)&unk_1F03E6090);
    *(_QWORD *)(v0 + 320) = v11;
    sub_1DD357884((_OWORD *)(v0 + 320), (_OWORD *)(v0 + 352));
    v12 = *(_QWORD *)(v0 + 704);
    v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DBFD0((_OWORD *)(v0 + 352), v8, v13);
    *(_QWORD *)(v0 + 704) = v12;
    swift_bridgeObjectRelease();

    v14 = CFSTR("description");
    sub_1DD3EF30C(v67);
    sub_1DD3FA858((uint64_t)v67, v68);
    v15 = sub_1DD63DB34();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v68, 1, v15);
    v18 = *(_QWORD *)(v0 + 768);
    v19 = *(_QWORD *)(v0 + 760);
    if (v17 == 1)
    {
      sub_1DD3540B8(*(_QWORD *)(v0 + 768), &qword_1F03E47B8);
      sub_1DD3540B8(v19, &qword_1F03E47B8);
      sub_1DD3F91A4((uint64_t)v14, (_OWORD *)(v0 + 416));

      sub_1DD3540B8(v0 + 416, (uint64_t *)&unk_1ED3785F0);
    }
    else
    {
      v23 = v14;
      v24 = MEMORY[0x1DF0D9690]();
      v26 = v25;
      sub_1DD3540B8(v18, &qword_1F03E47B8);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
      *(_QWORD *)(v0 + 184) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 160) = v24;
      *(_QWORD *)(v0 + 168) = v26;
      v14 = v23;
      sub_1DD357884((_OWORD *)(v0 + 160), (_OWORD *)(v0 + 384));
      v27 = *(_QWORD *)(v0 + 704);
      v28 = swift_isUniquelyReferenced_nonNull_native();
      sub_1DD3DBFD0((_OWORD *)(v0 + 384), v14, v28);
      *(_QWORD *)(v0 + 704) = v27;
      swift_bridgeObjectRelease();

    }
    v66 = (_OWORD *)(v0 + 480);
    v29 = *(_QWORD *)(v0 + 744);
    v30 = *(_QWORD *)(v0 + 736);
    v31 = *(_QWORD *)(v0 + 728);
    __swift_project_boxed_opaque_existential_1(v69, *(_QWORD *)(v0 + 80));
    v32 = sub_1DD63D9CC();
    sub_1DD3F79CC(v32, v31);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v30) == 1)
    {
      sub_1DD3540B8(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1F03E47E0);
      v33 = (_QWORD *)(v0 + 56);
      v34 = MEMORY[0x1E0DEA968];
      v35 = (_OWORD *)(v0 + 544);
    }
    else
    {
      v65 = v14;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 744) + 32))(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));
      __swift_project_boxed_opaque_existential_1(v69, *(_QWORD *)(v0 + 80));
      v36 = *(_QWORD *)(sub_1DD63D9CC() + 16);
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(v0 + 752);
      v38 = *(_QWORD *)(v0 + 744);
      v39 = *(_QWORD *)(v0 + 736);
      if (v36 == 1)
      {
        *(_QWORD *)(v0 + 664) = v39;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 640));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v38 + 16))(boxed_opaque_existential_1, v37, v39);
        sub_1DD357884((_OWORD *)(v0 + 640), (_OWORD *)(v0 + 672));
        v41 = CFSTR("roomIdentifier");
        v42 = *(_QWORD *)(v0 + 704);
        v43 = swift_isUniquelyReferenced_nonNull_native();
        sub_1DD3DBFD0((_OWORD *)(v0 + 672), v41, v43);
        *(_QWORD *)(v0 + 704) = v42;
        swift_bridgeObjectRelease();

      }
      v33 = (_QWORD *)(v0 + 56);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      v34 = MEMORY[0x1E0DEA968];
      v35 = (_OWORD *)(v0 + 544);
      v14 = v65;
    }
    __swift_project_boxed_opaque_existential_1(v33, *(_QWORD *)(v0 + 80));
    v44 = sub_1DD63D9B4();
    if (v45)
    {
      v46 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v46 = v44 & 0xFFFFFFFFFFFFLL;
      if (v46)
      {
        *(_QWORD *)(v0 + 600) = v34;
        *(_QWORD *)(v0 + 576) = v44;
        *(_QWORD *)(v0 + 584) = v45;
        sub_1DD357884((_OWORD *)(v0 + 576), (_OWORD *)(v0 + 608));
        v47 = v14;
        v48 = *(_QWORD *)(v0 + 704);
        v49 = swift_isUniquelyReferenced_nonNull_native();
        sub_1DD3DBFD0((_OWORD *)(v0 + 608), v47, v49);
        *(_QWORD *)(v0 + 704) = v48;
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v50 = *(void **)(v0 + 824);
    *(_QWORD *)(v0 + 472) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v0 + 448) = 1;
    sub_1DD357884((_OWORD *)(v0 + 448), v66);
    v51 = v50;
    v52 = *(_QWORD *)(v0 + 704);
    v53 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DBFD0(v66, v51, v53);
    v54 = v52;
    swift_bridgeObjectRelease();

    __swift_project_boxed_opaque_existential_1(v33, *(_QWORD *)(v0 + 80));
    v55 = CFSTR("state");
    v56 = sub_1DD63D9A8();
    HFPrimaryStateFromBOOL(v56 & 1);
    v57 = sub_1DD63E440();
    *(_QWORD *)(v0 + 536) = sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
    *(_QWORD *)(v0 + 512) = v57;
    sub_1DD357884((_OWORD *)(v0 + 512), v35);
    v58 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 704) = 0x8000000000000000;
    sub_1DD3DBFD0(v35, v55, v58);
    v20 = v54;
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 832);
    sub_1DD3540B8((uint64_t)v1, &qword_1F03E49E0);
    *(_BYTE *)(v0 + 192) = 1;
    *(_QWORD *)(v0 + 216) = MEMORY[0x1E0DEAFA0];
    sub_1DD357884((_OWORD *)(v0 + 192), (_OWORD *)(v0 + 224));
    v21 = CFSTR("hidden");
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DBFD0((_OWORD *)(v0 + 224), v21, v22);
    swift_bridgeObjectRelease();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

uint64_t sub_1DD3F79CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = sub_1DD3EB670();
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = sub_1DD63D7C8();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  else
  {
    sub_1DD3FA34C(result, v5, 0, a1, a2);
    v7 = sub_1DD63D7C8();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_1DD3F7A6C(uint64_t a1)
{
  return sub_1DD3F7A94(a1, (unint64_t *)&unk_1ED3783E0);
}

uint64_t sub_1DD3F7A80(uint64_t a1)
{
  return sub_1DD3F7A94(a1, (unint64_t *)&unk_1F03E4B00);
}

uint64_t sub_1DD3F7A94(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = sub_1DD63E5A8();
    v7 = v6;
    v8 = sub_1DD63E62C();
    v10 = MEMORY[0x1DF0DA194](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_3:
      sub_1DD3EBA9C(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_1DD3FA3E8(v5, v7, v4 != 0, a1, a2);
    v11 = v15;
    sub_1DD3EBA9C(v5, v7, v4 != 0);
    return v11;
  }
  result = sub_1DD3FA648(a1);
  if ((v14 & 1) == 0)
  {
    v7 = v13;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v13)
    {
      v5 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3F7BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  v3[21] = swift_task_alloc();
  v4 = sub_1DD63DB64();
  v3[22] = v4;
  v3[23] = *(_QWORD *)(v4 - 8);
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD3F7C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD);

  v1 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 128) = sub_1DD63E14C();
  *(_QWORD *)(v0 + 136) = v2;
  sub_1DD63E668();
  if (*(_QWORD *)(v1 + 16) && (v3 = sub_1DD3D9460(v0 + 16), (v4 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(*(_QWORD *)(v0 + 152) + 56) + 32 * v3, v0 + 96);
  }
  else
  {
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  sub_1DD3DE9BC(v0 + 16);
  if (*(_QWORD *)(v0 + 120))
  {
    if ((swift_dynamicCast() & 1) == 0 || *(_BYTE *)(v0 + 208) != 1)
      goto LABEL_12;
    sub_1DD3F7F8C((uint64_t *)(v0 + 56));
    if (*(_QWORD *)(v0 + 80))
    {
      sub_1DD3F34B8((__int128 *)(v0 + 56), *(_QWORD *)(v0 + 144));
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v6 = &qword_1F03E49E0;
    v7 = v0 + 56;
  }
  else
  {
    v6 = (uint64_t *)&unk_1ED3785F0;
    v7 = v0 + 96;
  }
  sub_1DD3540B8(v7, v6);
LABEL_12:
  v9 = (uint64_t (*)(_QWORD))(**(int **)(*(_QWORD *)(v0 + 160)
                                                 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot)
                                      + *(_QWORD *)(*(_QWORD *)(v0 + 160)
                                                  + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v8;
  *v8 = v0;
  v8[1] = sub_1DD3F7DF0;
  return v9(*(_QWORD *)(v0 + 192));
}

uint64_t sub_1DD3F7DF0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD3F7E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_1DD63DB40();
  v2 = sub_1DD63D978();
  if (*(_QWORD *)(v1 + 16) && (v3 = sub_1DD3D94C4(v2), (v4 & 1) != 0))
  {
    v5 = v3;
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v1 + 56);
    v8 = sub_1DD63DB34();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v6, v7 + *(_QWORD *)(v9 + 72) * v5, v8);
    v10 = 0;
  }
  else
  {
    v8 = sub_1DD63DB34();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = 1;
  }
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, v10, 1, v8);
  swift_bridgeObjectRelease();
  sub_1DD3EF8B0(v14);
  sub_1DD63DB4C();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1DD3F7F8C@<D0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(void);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  double result;
  uint64_t *v19;
  uint64_t *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  unsigned __int16 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  void (**v33)(void);
  char *v34;
  void (**v35)(void);
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  char *v43;
  uint64_t *v44;
  _QWORD v45[2];
  uint64_t v46;
  char *v47;
  char *v48;
  void (**v49)(void);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a1;
  v52 = sub_1DD63DF18();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E49B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63D99C();
  v7 = *(void (***)(void))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DD63DB34();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1;
  sub_1DD3EF30C(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DD3540B8((uint64_t)v12, &qword_1F03E47B8);
    result = 0.0;
    v19 = v53;
    *(_OWORD *)v53 = 0u;
    *((_OWORD *)v19 + 1) = 0u;
    v19[4] = 0;
  }
  else
  {
    v48 = v5;
    v49 = v7;
    v47 = v9;
    v20 = v53;
    v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v21(v16, v12, v13);
    v22 = &v1[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath];
    v23 = sub_1DD63D948();
    if ((v23 & 0x10000) != 0)
    {
      v20[3] = v13;
      v20[4] = sub_1DD353504(&qword_1F03E4908, (uint64_t (*)(uint64_t))MEMORY[0x1E0D327D0], MEMORY[0x1E0D327C8]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
      v21((char *)boxed_opaque_existential_1, v16, v13);
    }
    else
    {
      v24 = v23;
      v25 = *(_QWORD *)(sub_1DD63DB28() + 16);
      v45[1] = v22;
      v46 = v14;
      if (v25 && (sub_1DD3D9490(v24), (v26 & 1) != 0))
      {
        v27 = v6;
        v28 = (uint64_t)v48;
        v49[2]();
        v29 = 0;
        v30 = v20;
        v31 = v52;
      }
      else
      {
        v29 = 1;
        v30 = v20;
        v31 = v52;
        v27 = v6;
        v28 = (uint64_t)v48;
      }
      v33 = v49;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v49[7])(v28, v29, 1, v27);
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v33[6])(v28, 1, v27) == 1)
      {
        v53 = (uint64_t *)v16;
        sub_1DD3540B8(v28, (uint64_t *)&unk_1F03E49B0);
        v34 = v51;
        sub_1DD63DEE8();
        v35 = v17;
        v36 = sub_1DD63DF00();
        v37 = sub_1DD63E47C();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v49 = v35;
          v39 = v38;
          v40 = swift_slowAlloc();
          v55 = v40;
          *(_DWORD *)v39 = 136315650;
          v54 = sub_1DD3C3160(0xD000000000000019, 0x80000001DD66EBD0, &v55);
          sub_1DD63E53C();
          *(_WORD *)(v39 + 12) = 512;
          LOWORD(v54) = v24;
          sub_1DD63E53C();
          *(_WORD *)(v39 + 16) = 2048;
          v54 = sub_1DD63D978();
          sub_1DD63E53C();

          _os_log_impl(&dword_1DD34E000, v36, v37, "%s Failed to get static endpoint for endpoint %hu in device with id %llu", (uint8_t *)v39, 0x1Au);
          swift_arrayDestroy();
          MEMORY[0x1DF0DB358](v40, -1, -1);
          MEMORY[0x1DF0DB358](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v31);
        }
        (*(void (**)(uint64_t *, uint64_t))(v46 + 8))(v53, v13);
        v30[4] = 0;
        result = 0.0;
        *(_OWORD *)v30 = 0u;
        *((_OWORD *)v30 + 1) = 0u;
      }
      else
      {
        v41 = v28;
        v42 = v33[4];
        v43 = v47;
        ((void (*)(char *, uint64_t, uint64_t))v42)(v47, v41, v27);
        v30[3] = v27;
        v30[4] = sub_1DD353504(&qword_1F03E4910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D323C0], MEMORY[0x1E0D323B8]);
        v44 = __swift_allocate_boxed_opaque_existential_1(v30);
        ((void (*)(uint64_t *, char *, uint64_t))v42)(v44, v43, v27);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v13);
      }
    }
  }
  return result;
}

id sub_1DD3F84EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_homeKitObject);
}

uint64_t sub_1DD3F852C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1DD3F8544()
{
  _QWORD *v0;

  v0[3] = sub_1DD63D8E8();
  v0[4] = sub_1DD63E2E4();
  v0[5] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD3F85BC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = sub_1DD63D8D0();
  return swift_task_switch();
}

uint64_t sub_1DD3F8604()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD3F8664()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();
  sub_1DD63D8AC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1DD3F8704@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id result;
  objc_super v14;

  v3 = *(char **)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot + 8);
  v6 = (objc_class *)type metadata accessor for MatterAccessoryLikeItem();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v3[OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath];
  v9 = &v7[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath];
  v10 = sub_1DD63D984();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = &v7[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
  *(_QWORD *)v11 = v5;
  *((_QWORD *)v11 + 1) = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = v3;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = 0;
  v14.receiver = v7;
  v14.super_class = v6;
  v12 = v3;
  swift_retain();
  result = objc_msgSendSuper2(&v14, sel_init);
  a1[3] = v6;
  *a1 = result;
  return result;
}

id MatterAccessoryLikeItem.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MatterAccessoryLikeItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1DD3F88D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath;
  v2 = sub_1DD63D984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
}

id MatterAccessoryLikeItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatterAccessoryLikeItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id MatterAccessoryLikeItem.showInHomeDashboard.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_showInHomeDashboard);
}

id MatterAccessoryLikeItem.hasSetShowInHomeDashboard.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_hasSetShowInHomeDashboard);
}

id MatterAccessoryLikeItem.effectiveShowInHomeDashboard.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_effectiveShowInHomeDashboard);
}

id MatterAccessoryLikeItem.updateShowInHomeDashboard(_:)(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_updateShowInHomeDashboard_, a1 & 1);
}

id MatterAccessoryLikeItem.isFavorite.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_isFavorite);
}

id MatterAccessoryLikeItem.hasSetFavorite.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_hasSetFavorite);
}

id MatterAccessoryLikeItem.hf_shouldShowInFavorites.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_shouldShowInFavorites);
}

id MatterAccessoryLikeItem.effectiveIsFavorite.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_effectiveIsFavorite);
}

id MatterAccessoryLikeItem.updateIsFavorite(_:)(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_updateIsFavorite_, a1 & 1);
}

id MatterAccessoryLikeItem.supportsHomeStatus.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_supportsHomeStatus);
}

id MatterAccessoryLikeItem.isVisibleInHomeStatus.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_isVisibleInHomeStatus);
}

id MatterAccessoryLikeItem.hasSetVisibleInHomeStatus.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_hasSetVisibleInHomeStatus);
}

id MatterAccessoryLikeItem.isForcedVisibleInHomeStatus.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_isForcedVisibleInHomeStatus);
}

id MatterAccessoryLikeItem.updateIsVisibleInHomeStatus(_:)(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), sel_hf_updateIsVisibleInHomeStatus_, a1 & 1);
}

id sub_1DD3F8D6C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable), *a4);
}

uint64_t MatterAccessoryLikeItem.valueSource.getter()
{
  return 0;
}

uint64_t MatterAccessoryLikeItem.copy(with:)()
{
  void *v0;
  uint64_t v2;

  swift_getObjectType();
  objc_msgSend(v0, sel_copy);
  sub_1DD63E56C();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  return v2;
}

uint64_t MatterAccessoryLikeItem.home.getter()
{
  return 0;
}

void MatterAccessoryLikeItem.services.getter()
{
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE1B4(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t MatterAccessoryLikeItem.accessories()()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable);
  v2 = objc_msgSend(v1, sel_hf_associatedAccessories);
  sub_1DD352AB0(0, &qword_1F03E46E0);
  sub_1DD352A70((unint64_t *)&unk_1F03E55B0, &qword_1F03E46E0);
  v3 = sub_1DD63E398();

  return v3;
}

id MatterAccessoryLikeItem.namingComponentForHomeKitObject()()
{
  return objc_msgSend(objc_allocWithZone((Class)HFNamingComponents), sel_initWithHomeKitObject_, 0);
}

double sub_1DD3F91A4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DD3D94F4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DD3DCEC4();
      v9 = v11;
    }

    sub_1DD357884((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1DD3F9590(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1DD3F9288@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1DD3714A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DD3DD088();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1DD357884((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1DD3F9780(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1DD3F9378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DD3D96F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DD3DDBC8();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1DD63D984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(_QWORD *)(v12 + 72) * v6;
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10 + v13, v11);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, *(_QWORD *)(v9 + 56) + v13, v11);
    sub_1DD3F9EC8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v15 = sub_1DD63D984();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

double sub_1DD3F94A8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DD3D9460(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DD3DE04C();
      v9 = v11;
    }
    sub_1DD3DE9BC(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1DD357884((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1DD3FA184(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_1DD3F9590(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_1DD63E14C();
        sub_1DD63E908();
        v11 = v10;
        sub_1DD63E17C();
        v12 = sub_1DD63E938();

        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 32 * v3);
          v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 2))
          {
            v9 = v19[1];
            *v18 = *v19;
            v18[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DD3F9780(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DD63E908();
        swift_bridgeObjectRetain();
        sub_1DD63E17C();
        v10 = sub_1DD63E938();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DD3F9954(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_1DD63D7C8();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1DD63E0EC();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(sub_1DD63D768() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DD3F9C28(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1DD63D7C8();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1DD353504(&qword_1F03E4120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1DD63E0EC();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DD3F9EC8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v4 = sub_1DD63D984();
  v33 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v32 = (result + 1) & v11;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12 * v10;
        v16 = v13;
        v31(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
        v17 = sub_1DD63E0EC();
        result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            v21 = v12 * a1;
            if (v12 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v21 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = v22 + v21;
            if (v21 < v15 || result >= v22 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v8 = v14;
              v13 = v16;
            }
            else
            {
              a1 = v10;
              v23 = v21 == v15;
              v8 = v14;
              v13 = v16;
              if (!v23)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v16;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DD3FA184(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DD63E590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DD3DE980(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1DD63E650();
        result = sub_1DD3DE9BC((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DD3FA34C@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if ((a3 & 1) != 0)
    goto LABEL_10;
  v5 = result;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      v7 = *(_QWORD *)(a4 + 48);
      v8 = sub_1DD63D7C8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v5, v8);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_1DD3FA3E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1DD63E5CC() == *(_DWORD *)(a4 + 36))
      {
        sub_1DD63E5D8();
        sub_1DD352AB0(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1DD63E4DC();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1DD63E4E8();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1DD63E4E8();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1DF0DA1D0](a1, a2, v8);
  sub_1DD352AB0(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1DD3FA648(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

id sub_1DD3FA6D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  char *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v20;

  v8 = sub_1DD63D984();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v12(v11, a1, v8);
  v13 = objc_allocWithZone((Class)type metadata accessor for MatterAccessoryRepresentable());
  v14 = (char *)sub_1DD3F34D0(a4, (uint64_t)v11);
  v15 = (objc_class *)type metadata accessor for MatterAccessoryLikeItem();
  v16 = (char *)objc_allocWithZone(v15);
  v12(&v16[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath], (uint64_t)&v14[OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath], v8);
  v17 = &v16[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  *(_QWORD *)&v16[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = v14;
  *(_QWORD *)&v16[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = 0;
  v20.receiver = v16;
  v20.super_class = v15;
  v18 = objc_msgSendSuper2(&v20, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v18;
}

uint64_t type metadata accessor for MatterAccessoryLikeItem()
{
  uint64_t result;

  result = qword_1F03E4A78;
  if (!qword_1F03E4A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD3FA858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s4Home23MatterAccessoryLikeItemC04withC19RepresentableObject_11valueSourceACXDSgSo011HFAccessoryG0_p_So021HFCharacteristicValueJ0_ptFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  objc_super v22;
  uint64_t v23;
  id v24;

  v2 = sub_1DD63DF18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MatterAccessoryRepresentable();
  v6 = swift_dynamicCastClass();
  if (v6)
  {
    v7 = v6;
    v8 = (objc_class *)type metadata accessor for MatterAccessoryLikeItem();
    v9 = (char *)objc_allocWithZone(v8);
    v10 = v7 + OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath;
    v11 = &v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath];
    v12 = sub_1DD63D984();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
    v13 = &v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
    *(_QWORD *)v13 = &unk_1F03E4B10;
    *((_QWORD *)v13 + 1) = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = v7;
    *(_QWORD *)&v9[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = 0;
    v22.receiver = v9;
    v22.super_class = v8;
    swift_unknownObjectRetain();
    v24 = objc_msgSendSuper2(&v22, sel_init);
    sub_1DD63E524();
    swift_dynamicCast();
    return v23;
  }
  else
  {
    sub_1DD63DEE8();
    swift_unknownObjectRetain_n();
    v15 = sub_1DD63DF00();
    v16 = sub_1DD63E47C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (id)swift_slowAlloc();
      v23 = a1;
      v24 = v18;
      *(_DWORD *)v17 = 136315138;
      v21[1] = v17 + 4;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3783C8);
      v19 = sub_1DD63E170();
      v23 = sub_1DD3C3160(v19, v20, (uint64_t *)&v24);
      sub_1DD63E53C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v15, v16, "Attempted to create MatterAccessoryLikeItem with an object that is not a MatterAccessoryRepresentable! %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v18, -1, -1);
      MEMORY[0x1DF0DB358](v17, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
}

uint64_t sub_1DD3FAB64()
{
  return type metadata accessor for MatterAccessoryLikeItem();
}

uint64_t sub_1DD3FAB6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD63D984();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MatterAccessoryLikeItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MatterAccessoryLikeItem.deviceTypes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MatterAccessoryLikeItem.__allocating_init(matterAccessoryRepresentable:actionSetBuilder:currentMatterSnapshot:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MatterAccessoryLikeItem.homeKitObject.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MatterAccessoryLikeItem.accessoryRepresentableObject.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MatterAccessoryLikeItem.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1DD3FAC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t result;

  v9 = *(_QWORD **)(v4 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  v10 = sub_1DD3A1C84(a1, a2, v9);
  v12 = v11;
  v13 = sub_1DD3A1C84(a3, a4, v9);
  if (((v12 | v14) & 1) == 0)
    return v10 < v13;
  result = sub_1DD39FF20(a1, a2, a3, a4);
  if (result == 2)
    return sub_1DD3A0234(a1, a2, a3, a4);
  return result;
}

uint64_t sub_1DD3FAD50(void *a1, void *a2)
{
  uint64_t result;

  result = sub_1DD3A186C(a1, a2);
  if (result == 2)
    return sub_1DD3FB080();
  return result;
}

uint64_t sub_1DD3FADA0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t result;

  v5 = OBJC_IVAR___HFReorderableItemList_sortedIdentifiers;
  v6 = *(_QWORD **)(v2 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(a1, sel_uuidString);
  v8 = sub_1DD63E14C();
  v10 = v9;

  sub_1DD3A1C84(v8, v10, v6);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD **)(v2 + v5);
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(a2, sel_uuidString);
  v15 = sub_1DD63E14C();
  v17 = v16;

  sub_1DD3A1C84(v15, v17, v13);
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DashboardStaticSectionListItem();
  v20 = swift_dynamicCastClass();
  if (v20)
    v21 = *(unsigned __int8 *)(v20 + OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType);
  else
    v21 = 3;
  v22 = swift_dynamicCastClass();
  if (v22)
  {
    v23 = *(unsigned __int8 *)(v22 + OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType);
    if ((v12 & 1) == 0)
      goto LABEL_6;
  }
  else
  {
    v23 = 3;
    if ((v12 & 1) == 0)
    {
LABEL_6:
      if ((v19 & 1) != 0)
        return v23 == 3;
      else
        return 2;
    }
  }
  if ((v19 & 1) == 0)
    return v21 != 3;
  result = 2;
  if (v21 != 3 && v23 != 3)
    return v21 < v23;
  return result;
}

id DashboardReorderableItemList.__allocating_init(applicationDataContainer:category:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithApplicationDataContainer_category_, a1, v4);

  swift_unknownObjectRelease();
  return v5;
}

id DashboardReorderableItemList.init(applicationDataContainer:category:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  objc_super v6;

  v3 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DashboardReorderableItemList();
  v4 = objc_msgSendSuper2(&v6, sel_initWithApplicationDataContainer_category_, a1, v3);

  swift_unknownObjectRelease();
  return v4;
}

id DashboardReorderableItemList.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DashboardReorderableItemList();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD3FB064()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t sub_1DD3FB080()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v6;

  type metadata accessor for DashboardStaticSectionListItem();
  v0 = swift_dynamicCastClass();
  if (!v0)
  {
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v4 = *(unsigned __int8 *)(v6 + OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType);
LABEL_9:
      if (v4 != 3)
        return 0;
    }
    return 2;
  }
  v1 = OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType);
  v3 = swift_dynamicCastClass();
  if (!v3)
  {
    if (v2 != 3)
      return 1;
    return 2;
  }
  v4 = *(unsigned __int8 *)(v3 + v1);
  if (v2 == 3)
    goto LABEL_9;
  if (v4 != 3)
  {
    if (v2 != v4)
      return v2 < v4;
    return 2;
  }
  return 1;
}

uint64_t method lookup function for DashboardReorderableItemList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DashboardReorderableItemList.sortedItemsWithCustomOrder(item1:item2:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of DashboardReorderableItemList.sortedIdentifiersWithCustomOrder(identifier1:identifier2:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t ActionBuilderContainer.mediaActionBuilder.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t result;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  v3 = v2;
  if (v2 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        v6 = v5 - 4;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v7 = (id)MEMORY[0x1DF0DA2C0](v5 - 4, v3);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_16;
        }
        else
        {
          v7 = *(id *)(v3 + 8 * v5);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v9 = v7;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          swift_bridgeObjectRelease_n();

          goto LABEL_13;
        }

        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease_n();
  v9 = 0;
LABEL_13:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4CA0);
  sub_1DD63E518();

  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

uint64_t ActionBuilderContainer.actionBuilder(actingOn:)(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  id v5;
  id v6;
  uint64_t result;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v5 = a1;
  v6 = sub_1DD3FBC38(v4, v5);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4CA0);
  sub_1DD63E518();

  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

uint64_t ActionBuilderContainer.actionBuilders(actingOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  swift_unknownObjectRetain();
  v7 = sub_1DD3FBE80(v6, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v8 = sub_1DD3F67B0(v7);
  swift_bridgeObjectRelease();
  return v8;
}

Swift::Void __swiftcall ActionSetBuilderContainer.set(included:actionSet:)(Swift::Bool included, HMActionSet actionSet)
{
  uint64_t v2;
  uint64_t v3;

  v3 = 16;
  if (included)
    v3 = 8;
  (*(void (**)(Class))(v2 + v3))(actionSet.super.isa);
}

uint64_t HFTriggerActionSetsBuilder.allActionBuilders.getter()
{
  return sub_1DD3FB900((SEL *)&selRef_anonymousActionBuilder);
}

id HFTriggerActionSetsBuilder.mediaActionBuilder.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_anonymousActionSetBuilder);
  v2 = objc_msgSend(v1, sel_mediaAction);

  return v2;
}

uint64_t HFTriggerActionSetsBuilder.naturalLightActionBuilders.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_anonymousActionSetBuilder);
  v2 = objc_msgSend(v1, sel_naturalLightingActions);

  sub_1DD352AB0(0, &qword_1F03E4CB0);
  v3 = sub_1DD63E1F4();

  return v3;
}

uint64_t HFTriggerActionSetsBuilder.anonymousActionSetReference.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_anonymousActionSetBuilder);
  v2 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CB8);
  result = swift_dynamicCastMetatype();
  if (result)
    return v2;
  __break(1u);
  return result;
}

id HFTriggerActionSetsBuilder.add(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_addAnonymousActionBuilder_, a1);
}

id HFTriggerActionSetsBuilder.update(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_updateAnonymousActionBuilder_, a1);
}

id HFTriggerActionSetsBuilder.remove(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_removeAnonymousActionBuilder_, a1);
}

uint64_t sub_1DD3FB608(uint64_t a1, uint64_t a2)
{
  return sub_1DD3FBAA0(a1, a2, (SEL *)&selRef_anonymousActionBuilder);
}

uint64_t sub_1DD3FB614()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_anonymousActionSetBuilder);
  v2 = objc_msgSend(v1, sel_naturalLightingActions);

  sub_1DD352AB0(0, &qword_1F03E4CB0);
  v3 = sub_1DD63E1F4();

  return v3;
}

id sub_1DD3FB694(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_addAnonymousActionBuilder_, a1);
}

id sub_1DD3FB6A8(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_updateAnonymousActionBuilder_, a1);
}

id sub_1DD3FB6BC(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeAnonymousActionBuilder_, a1);
}

uint64_t sub_1DD3FB6D0()
{
  id *v0;
  id v1;
  uint64_t v2;
  uint64_t result;

  v1 = objc_msgSend(*v0, sel_anonymousActionSetBuilder);
  v2 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CB8);
  result = swift_dynamicCastMetatype();
  if (result)
    return v2;
  __break(1u);
  return result;
}

Swift::Void __swiftcall HFTriggerActionSetsBuilder.add(actionSet:)(HMActionSet actionSet)
{
  void *v1;

  objc_msgSend(v1, sel_addActionSetIfNotPresent_, actionSet.super.isa);
}

Swift::Void __swiftcall HFTriggerActionSetsBuilder.remove(actionSet:)(HMActionSet actionSet)
{
  void *v1;

  objc_msgSend(v1, sel_removeActionSetIfPresent_, actionSet.super.isa);
}

Swift::Bool __swiftcall HFTriggerActionSetsBuilder.contains(actionSet:)(HMActionSet actionSet)
{
  void *v1;
  id v3;
  unint64_t v4;
  objc_class *v5;

  v3 = objc_msgSend(v1, sel_namedActionSets);
  sub_1DD352AB0(0, (unint64_t *)&unk_1F03E4CC0);
  v4 = sub_1DD63E1F4();

  v5 = actionSet.super.isa;
  LOBYTE(v3) = sub_1DD3FC4A4(v4, v5);
  swift_bridgeObjectRelease();

  return v3 & 1;
}

id sub_1DD3FB82C(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_addActionSetIfNotPresent_, a1);
}

id sub_1DD3FB840(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeActionSetIfPresent_, a1);
}

uint64_t sub_1DD3FB854(void *a1)
{
  id *v1;
  id v3;
  unint64_t v4;
  id v5;

  v3 = objc_msgSend(*v1, sel_namedActionSets);
  sub_1DD352AB0(0, (unint64_t *)&unk_1F03E4CC0);
  v4 = sub_1DD63E1F4();

  v5 = a1;
  LOBYTE(v3) = sub_1DD3FC4A4(v4, v5);
  swift_bridgeObjectRelease();

  return v3 & 1;
}

uint64_t HFActionSetBuilder.allActionBuilders.getter()
{
  return sub_1DD3FB900((SEL *)&selRef_actions);
}

uint64_t sub_1DD3FB900(SEL *a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(v1, *a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
  v3 = sub_1DD63E1F4();

  return v3;
}

id HFActionSetBuilder.mediaActionBuilder.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_mediaAction);
}

uint64_t HFActionSetBuilder.naturalLightActionBuilders.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_naturalLightingActions);
  sub_1DD352AB0(0, &qword_1F03E4CB0);
  v2 = sub_1DD63E1F4();

  return v2;
}

id HFActionSetBuilder.anonymousActionSetReference.getter()
{
  id result;
  id v1;

  v1 = (id)swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CB8);
  result = (id)swift_dynamicCastMetatype();
  if (result)
    return v1;
  __break(1u);
  return result;
}

id HFActionSetBuilder.add(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_addAction_, a1);
}

id HFActionSetBuilder.update(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_updateAction_, a1);
}

id HFActionSetBuilder.remove(actionBuilder:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_removeAction_, a1);
}

uint64_t sub_1DD3FBA94(uint64_t a1, uint64_t a2)
{
  return sub_1DD3FBAA0(a1, a2, (SEL *)&selRef_actions);
}

uint64_t sub_1DD3FBAA0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*v3, *a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E46C0);
  v5 = sub_1DD63E1F4();

  return v5;
}

uint64_t sub_1DD3FBAF4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_naturalLightingActions);
  sub_1DD352AB0(0, &qword_1F03E4CB0);
  v2 = sub_1DD63E1F4();

  return v2;
}

id sub_1DD3FBB58()
{
  id *v0;

  return objc_msgSend(*v0, sel_home);
}

id sub_1DD3FBB7C(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_addAction_, a1);
}

id sub_1DD3FBB90(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_updateAction_, a1);
}

id sub_1DD3FBBA4(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeAction_, a1);
}

id sub_1DD3FBBB8()
{
  id result;
  id v1;

  v1 = (id)swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CB8);
  result = (id)swift_dynamicCastMetatype();
  if (result)
    return v1;
  __break(1u);
  return result;
}

id sub_1DD3FBC38(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  _QWORD v26[2];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;

  v3 = v2;
  v30 = a2;
  v5 = sub_1DD63D7C8();
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v27 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - v9;
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v11 = sub_1DD63E7B8();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v26[1] = v3;
      v31 = a1 & 0xC000000000000001;
      v12 = 4;
      do
      {
        v13 = v12 - 4;
        if (v31)
        {
          v14 = (id)MEMORY[0x1DF0DA2C0](v12 - 4, a1);
          v15 = v12 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_15;
        }
        else
        {
          v14 = *(id *)(a1 + 8 * v12);
          v15 = v12 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        v16 = v14;
        objc_opt_self();
        v17 = (void *)swift_dynamicCastObjCClass();
        if (v17)
        {
          v18 = objc_msgSend(v17, sel_characteristic);
          v19 = objc_msgSend(v18, sel_uniqueIdentifier);

          sub_1DD63D7A4();
          v20 = objc_msgSend(v30, sel_uniqueIdentifier);
          v21 = v27;
          sub_1DD63D7A4();

          v3 = sub_1DD63D798();
          v22 = *(void (**)(char *, uint64_t))(v29 + 8);
          v23 = v21;
          v24 = v28;
          v22(v23, v28);
          v22(v10, v24);
          if ((v3 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return v16;
          }
        }
        else
        {

        }
        ++v12;
      }
      while (v15 != v11);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DD3FBE80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  size_t v25;
  _QWORD *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t ObjectType;
  void *v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  _BYTE *v45;
  char v46;
  void (*v47)(_BYTE *, uint64_t);
  _BYTE *v48;
  uint64_t v49;
  _BYTE v51[16];
  __int128 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v64 = a2;
  v65 = a3;
  v4 = sub_1DD63D7C8();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v61 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-v7];
  v70 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_46;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v11 = 0;
    v56 = a1 & 0xFFFFFFFFFFFFFF8;
    v57 = a1 & 0xC000000000000001;
    v55 = (_QWORD *)(a1 + 32);
    v52 = xmmword_1DD667A30;
    v53 = v9;
    v54 = (_QWORD *)a1;
    while (1)
    {
      if (v57)
      {
        v12 = (id)MEMORY[0x1DF0DA2C0](v11, a1);
      }
      else
      {
        if (v11 >= *(_QWORD *)(v56 + 16))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          v9 = sub_1DD63E7B8();
          goto LABEL_3;
        }
        v12 = (id)v55[v11];
      }
      v13 = v12;
      if (__OFADD__(v11++, 1))
        goto LABEL_44;
      swift_unknownObjectRetain();
      objc_opt_self();
      v15 = (void *)swift_dynamicCastObjCClass();
      if (v15)
      {
        v16 = objc_msgSend(v15, sel_characteristic);
        v17 = objc_msgSend(v16, sel_service);

        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5590);
          v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = v52;
          *(_QWORD *)(v18 + 32) = v17;
          *(_QWORD *)(v18 + 40) = &protocol witness table for HMService;

          v19 = *(_QWORD *)(v18 + 16);
          if (v19)
            goto LABEL_34;
          goto LABEL_5;
        }
LABEL_29:

        v18 = v10;
        v19 = *(_QWORD *)(v10 + 16);
        if (v19)
          goto LABEL_34;
        goto LABEL_5;
      }
      objc_opt_self();
      v20 = (void *)swift_dynamicCastObjCClass();
      if (!v20)
      {
        objc_opt_self();
        v35 = (void *)swift_dynamicCastObjCClass();
        if (v35)
        {
          v36 = objc_msgSend(v35, sel_lightProfile);
          v37 = objc_msgSend(v36, sel_services);

          sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
          v38 = sub_1DD63E1F4();

          v18 = sub_1DD41F7C8(v38);
          swift_bridgeObjectRelease();
          v19 = *(_QWORD *)(v18 + 16);
          if (v19)
            goto LABEL_34;
          goto LABEL_5;
        }
        goto LABEL_29;
      }
      v59 = v13;
      v21 = objc_msgSend(v20, sel_mediaProfiles);
      v22 = sub_1DD63E398();

      v23 = *(_QWORD *)(v22 + 16);
      v60 = v11;
      if (v23)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4CD0);
        v24 = (_QWORD *)swift_allocObject();
        v25 = _swift_stdlib_malloc_size(v24);
        v24[2] = v23;
        v24[3] = 2 * ((uint64_t)(v25 - 32) / 40);
        a1 = (unint64_t)v24;
        v58 = sub_1DD40F024((uint64_t)&v69, (uint64_t)(v24 + 4), v23, v22);
        swift_bridgeObjectRetain();
        sub_1DD3DEBAC();
        if (v58 != v23)
          goto LABEL_45;
        swift_bridgeObjectRelease();
        v26 = v24;
        v27 = v24[2];
        if (!v27)
        {
LABEL_32:
          v13 = v59;

          swift_release();
          v18 = v10;
          goto LABEL_33;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v26 = (_QWORD *)v10;
        v27 = *(_QWORD *)(v10 + 16);
        if (!v27)
          goto LABEL_32;
      }
      v68 = v10;
      sub_1DD3C7F2C(0, v27, 0);
      v58 = (uint64_t)v26;
      v28 = (uint64_t)(v26 + 4);
      do
      {
        sub_1DD3DE980(v28, (uint64_t)&v69);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
        swift_dynamicCast();
        v29 = v66;
        v30 = v67;
        v31 = v68;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DD3C7F2C(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v68;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
          sub_1DD3C7F2C(v32 > 1, v33 + 1, 1);
        ObjectType = swift_getObjectType();
        sub_1DD4219FC(v33, v29, &v68, ObjectType, v30);
        v28 += 40;
        --v27;
      }
      while (v27);
      v18 = v68;
      v13 = v59;

      swift_release();
LABEL_33:
      v9 = v53;
      a1 = (unint64_t)v54;
      v11 = v60;
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
LABEL_34:
        v59 = v13;
        v60 = v11;
        v39 = swift_getObjectType();
        v40 = *(void (**)(uint64_t, uint64_t))(v65 + 16);
        v58 = v18;
        v41 = (uint64_t *)(v18 + 40);
        while (1)
        {
          v42 = *v41;
          v43 = swift_getObjectType();
          v44 = *(void (**)(uint64_t, uint64_t))(v42 + 16);
          swift_unknownObjectRetain();
          v44(v43, v42);
          v45 = v61;
          v40(v39, v65);
          v46 = sub_1DD63D798();
          v47 = *(void (**)(_BYTE *, uint64_t))(v62 + 8);
          v48 = v45;
          v49 = v63;
          v47(v48, v63);
          v47(v8, v49);
          swift_unknownObjectRelease();
          if ((v46 & 1) != 0)
            break;
          v41 += 2;
          if (!--v19)
          {

            swift_bridgeObjectRelease();
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRelease();
        sub_1DD63E710();
        sub_1DD63E734();
        sub_1DD63E740();
        sub_1DD63E71C();
LABEL_39:
        v9 = v53;
        a1 = (unint64_t)v54;
        v10 = MEMORY[0x1E0DEE9D8];
        v11 = v60;
        goto LABEL_6;
      }
LABEL_5:

      swift_bridgeObjectRelease();
LABEL_6:
      if (v11 == v9)
        return v70;
    }
  }
  return v10;
}

uint64_t sub_1DD3FC4A4(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  id v55;

  v3 = v2;
  v51 = a2;
  v5 = sub_1DD63D7C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47D8);
  MEMORY[0x1E0C80A78](v50);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v43 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - v16;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v18 = sub_1DD63E7B8();
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_3:
      v45 = v13;
      v43 = v3;
      v48 = a1;
      v49 = a1 & 0xC000000000000001;
      v19 = 4;
      v13 = v46;
      v47 = v18;
      v53 = v17;
      v54 = v5;
      v52 = v9;
      while (1)
      {
        v3 = v19 - 4;
        if (v49)
          v21 = (id)MEMORY[0x1DF0DA2C0](v19 - 4, a1);
        else
          v21 = *(id *)(a1 + 8 * v19);
        v55 = v21;
        v22 = v19 - 3;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        v23 = objc_msgSend(v51, sel_uniqueIdentifier);
        sub_1DD63D7A4();

        v24 = v6;
        v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v26 = 1;
        v25(v17, 0, 1, v5);
        v27 = objc_msgSend(v55, sel_actionSet);
        if (v27)
        {
          v28 = v27;
          v29 = objc_msgSend(v27, sel_uniqueIdentifier);

          sub_1DD63D7A4();
          v26 = 0;
        }
        v25(v13, v26, 1, v5);
        v30 = (uint64_t)v52;
        v17 = v53;
        v31 = (uint64_t)&v52[*(int *)(v50 + 48)];
        sub_1DD3A08FC((uint64_t)v53, (uint64_t)v52);
        sub_1DD3A08FC((uint64_t)v13, v31);
        v6 = v24;
        v9 = (char *)v30;
        v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
        if (v32(v9, 1, v5) == 1)
          break;
        v33 = (uint64_t)v45;
        sub_1DD3A08FC((uint64_t)v9, (uint64_t)v45);
        if (v32((char *)v31, 1, v5) == 1)
        {
          v34 = (uint64_t)v46;
          sub_1DD3540B8((uint64_t)v46, (uint64_t *)&unk_1F03E47E0);
          v17 = v53;
          v5 = v54;
          sub_1DD3540B8((uint64_t)v53, (uint64_t *)&unk_1F03E47E0);
          v35 = v33;
          v13 = (char *)v34;
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v35, v5);
          a1 = v48;
LABEL_5:
          sub_1DD3540B8((uint64_t)v9, &qword_1F03E47D8);

          goto LABEL_6;
        }
        v36 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v44, v31, v5);
        sub_1DD3FC994();
        v37 = sub_1DD63E110();
        v38 = *(void (**)(char *, uint64_t))(v6 + 8);
        v38(v36, v54);
        v39 = (uint64_t)v46;
        sub_1DD3540B8((uint64_t)v46, (uint64_t *)&unk_1F03E47E0);
        v40 = (uint64_t)v53;
        sub_1DD3540B8((uint64_t)v53, (uint64_t *)&unk_1F03E47E0);
        v41 = v33;
        v13 = (char *)v39;
        v17 = (char *)v40;
        v9 = v52;
        v38((char *)v41, v54);
        v5 = v54;
        sub_1DD3540B8((uint64_t)v9, (uint64_t *)&unk_1F03E47E0);

        a1 = v48;
        if ((v37 & 1) != 0)
          goto LABEL_20;
LABEL_6:
        ++v19;
        if (v22 == v47)
          goto LABEL_23;
      }
      sub_1DD3540B8((uint64_t)v13, (uint64_t *)&unk_1F03E47E0);
      v5 = v54;
      sub_1DD3540B8((uint64_t)v17, (uint64_t *)&unk_1F03E47E0);
      v20 = v32((char *)v31, 1, v5);
      a1 = v48;
      if (v20 == 1)
      {
        sub_1DD3540B8((uint64_t)v9, (uint64_t *)&unk_1F03E47E0);

LABEL_20:
        swift_bridgeObjectRelease();
        return 1;
      }
      goto LABEL_5;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t dispatch thunk of ActionBuilderContainer.allActionBuilders.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActionBuilderContainer.naturalLightActionBuilders.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActionBuilderContainer.home.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActionBuilderContainer.add(actionBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ActionBuilderContainer.update(actionBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ActionBuilderContainer.remove(actionBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ActionBuilderContainer.anonymousActionSetReference.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ActionSetBuilderContainer.add(actionSet:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ActionSetBuilderContainer.remove(actionSet:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActionSetBuilderContainer.contains(actionSet:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_1DD3FC994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E4128;
  if (!qword_1F03E4128)
  {
    v1 = sub_1DD63D7C8();
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0CB09D0], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E4128);
  }
  return result;
}

uint64_t sub_1DD3FCA74()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD3FCB64()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1DD63DF78();
}

uint64_t sub_1DD3FCBD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DD3FCC58(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_1DD63DF78();
}

uint64_t (*sub_1DD3FCCD8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DD63DF60();
  return sub_1DD3FCD50;
}

uint64_t sub_1DD3FCD54()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFStatusItemUpdate__title, &qword_1F03E4CE8);
}

uint64_t sub_1DD3FCD68(uint64_t a1)
{
  return sub_1DD3FE040(a1, &qword_1F03E4CF0, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__title, &qword_1F03E4CE8);
}

uint64_t (*sub_1DD3FCD84(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CF0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___HFStatusItemUpdate__title;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4CE8);
  sub_1DD63DF48();
  swift_endAccess();
  return sub_1DD3FCE4C;
}

uint64_t sub_1DD3FCEF4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD3FCFF4()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1DD63DF78();
}

double sub_1DD3FD068@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1DD3FD0E8(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_1DD63DF78();
}

uint64_t (*sub_1DD3FD168(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DD63DF60();
  return sub_1DD3FCD50;
}

uint64_t sub_1DD3FD1E0()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFStatusItemUpdate__secondaryText, &qword_1F03E4D00);
}

uint64_t sub_1DD3FD1F4(uint64_t a1)
{
  return sub_1DD3FE040(a1, &qword_1F03E4D08, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__secondaryText, &qword_1F03E4D00);
}

uint64_t (*sub_1DD3FD210(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D08);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___HFStatusItemUpdate__secondaryText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D00);
  sub_1DD63DF48();
  swift_endAccess();
  return sub_1DD3FCE4C;
}

uint64_t sub_1DD3FD2EC()
{
  return sub_1DD3FDAF0();
}

uint64_t sub_1DD3FD390()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  v1 = v0;
  sub_1DD63DF78();
  sub_1DD3FD4AC();
  return swift_unknownObjectRelease();
}

uint64_t sub_1DD3FD410@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DD3FDC64(a1);
}

uint64_t sub_1DD3FD428(uint64_t a1, void **a2)
{
  void *v2;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  v2;
  sub_1DD63DF78();
  return sub_1DD3FD4AC();
}

uint64_t sub_1DD3FD4AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;
  uint64_t v5;
  uint64_t v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  sub_1DD3FEC8C(v6);
  v2 = v1;
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  if (v2)
  {
    swift_unknownObjectRelease();
    if (v6)
    {
      swift_unknownObjectRelease();
      if (v2 == v6)
        return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (!v6)
      return result;
    swift_unknownObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  v4 = v0;
  v5 = sub_1DD63DF78();
  sub_1DD3FD4AC(v5);
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1DD3FD60C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[2] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  *a1 = a1[1];
  return sub_1DD3FD698;
}

uint64_t sub_1DD3FD698(uint64_t *a1, char a2)
{
  uint64_t v4;
  void *v5;

  v4 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  a1[1] = v4;
  v5 = (void *)a1[2];
  swift_unknownObjectRetain();
  v5;
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    sub_1DD63DF78();
    sub_1DD3FD4AC();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1DD63DF78();
    sub_1DD3FD4AC();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1DD3FD768()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFStatusItemUpdate__iconDescriptor, &qword_1F03E4D18);
}

uint64_t sub_1DD3FD77C(uint64_t a1)
{
  return sub_1DD3FE040(a1, &qword_1F03E4D20, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__iconDescriptor, &qword_1F03E4D18);
}

uint64_t (*sub_1DD3FD798(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___HFStatusItemUpdate__iconDescriptor;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D18);
  sub_1DD63DF48();
  swift_endAccess();
  return sub_1DD3FCE4C;
}

uint64_t sub_1DD3FD874()
{
  return sub_1DD3FDAF0();
}

uint64_t sub_1DD3FD89C()
{
  return sub_1DD3FDBEC();
}

uint64_t sub_1DD3FD8B0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DD3FDC64(a1);
}

uint64_t sub_1DD3FD8C8(void **a1, void **a2)
{
  return sub_1DD3FDCF4(a1, a2);
}

uint64_t (*sub_1DD3FD8E0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DD63DF60();
  return sub_1DD3FCD50;
}

uint64_t sub_1DD3FD958()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFStatusItemUpdate__currentValue, &qword_1F03E4D30);
}

uint64_t sub_1DD3FD96C(uint64_t a1)
{
  return sub_1DD3FE040(a1, &qword_1F03E4D38, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__currentValue, &qword_1F03E4D30);
}

uint64_t (*sub_1DD3FD988(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D38);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___HFStatusItemUpdate__currentValue;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D30);
  sub_1DD63DF48();
  swift_endAccess();
  return sub_1DD3FCE4C;
}

id sub_1DD3FDA64(void *a1)
{
  id v2;
  id v4;

  swift_getKeyPath();
  swift_getKeyPath();
  v2 = a1;
  sub_1DD63DF6C();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1DD3FDADC()
{
  return sub_1DD3FDAF0();
}

uint64_t sub_1DD3FDAF0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD3FDB6C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  swift_getKeyPath();
  swift_getKeyPath();
  v5 = a3;
  v6 = a1;
  return sub_1DD63DF78();
}

uint64_t sub_1DD3FDBD8()
{
  return sub_1DD3FDBEC();
}

uint64_t sub_1DD3FDBEC()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1DD63DF78();
}

uint64_t sub_1DD3FDC50@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DD3FDC64(a1);
}

uint64_t sub_1DD3FDC64@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DD3FDCE0(void **a1, void **a2)
{
  return sub_1DD3FDCF4(a1, a2);
}

uint64_t sub_1DD3FDCF4(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v4 = v2;
  v5 = v3;
  return sub_1DD63DF78();
}

uint64_t (*sub_1DD3FDD64(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DD63DF60();
  return sub_1DD3FCD50;
}

void sub_1DD3FDDDC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1DD3FDE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_1DD63DF48();
  return swift_endAccess();
}

uint64_t sub_1DD3FDE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1DD63DF54();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1DD3FDFAC()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFStatusItemUpdate__possibleValues, &qword_1F03E4D30);
}

uint64_t sub_1DD3FDFC0(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1DD63DF48();
  return swift_endAccess();
}

uint64_t sub_1DD3FE024(uint64_t a1)
{
  return sub_1DD3FE040(a1, &qword_1F03E4D38, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__possibleValues, &qword_1F03E4D30);
}

uint64_t sub_1DD3FE040(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1DD63DF54();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_1DD3FE118(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D38);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___HFStatusItemUpdate__possibleValues;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D30);
  sub_1DD63DF48();
  swift_endAccess();
  return sub_1DD3FCE4C;
}

void sub_1DD3FE1E0(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1DD63DF54();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1DD63DF54();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

id StatusItemUpdate.__allocating_init(title:secondaryText:iconDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_1DD3FEE34(a1, a2, a3, a4, a5);
  swift_unknownObjectRelease();
  return v12;
}

id StatusItemUpdate.init(title:secondaryText:iconDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5;

  v5 = sub_1DD3FEE34(a1, a2, a3, a4, a5);
  swift_unknownObjectRelease();
  return v5;
}

id StatusItemUpdate.__allocating_init(title:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return StatusItemUpdate.init(title:)(a1, a2);
}

id StatusItemUpdate.init(title:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  objc_class *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a1;
  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D30);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D18);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v2[OBJC_IVAR___HFStatusItemUpdate__secondaryText];
  v31 = 0;
  v32 = 0;
  v15 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782F8);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  v16 = &v15[OBJC_IVAR___HFStatusItemUpdate__iconDescriptor];
  v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D50);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v9, v6);
  v17 = &v15[OBJC_IVAR___HFStatusItemUpdate__currentValue];
  v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D58);
  sub_1DD63DF3C();
  v18 = v25;
  v19 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v19(v17, v5, v25);
  v20 = &v15[OBJC_IVAR___HFStatusItemUpdate__possibleValues];
  v31 = 0;
  sub_1DD63DF3C();
  v19(v20, v5, v18);
  swift_beginAccess();
  v29 = v26;
  v30 = v27;
  sub_1DD63DF3C();
  swift_endAccess();

  v21 = (objc_class *)type metadata accessor for StatusItemUpdate();
  v28.receiver = v15;
  v28.super_class = v21;
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t sub_1DD3FE744()
{
  void *v0;
  id v1;
  objc_super v3;
  uint64_t v4;
  unint64_t v5;

  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1DD63E6BC();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for StatusItemUpdate();
  v1 = objc_msgSendSuper2(&v3, sel_description);
  sub_1DD63E14C();

  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782F8);
  sub_1DD63E164();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D50);
  sub_1DD63E164();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D58);
  sub_1DD63E164();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  sub_1DD63E164();
  sub_1DD63E188();
  swift_bridgeObjectRelease();
  return v4;
}

id StatusItemUpdate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StatusItemUpdate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StatusItemUpdate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StatusItemUpdate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD3FEC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for StatusItemUpdate();
  result = sub_1DD63DF30();
  *a1 = result;
  return result;
}

void sub_1DD3FEC8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  id v12;
  __CFString *v13;

  if (!a1)
    goto LABEL_11;
  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (!v1)
    goto LABEL_11;
  v2 = (void *)v1;
  swift_unknownObjectRetain();
  v3 = objc_msgSend(v2, sel_packageIdentifier);
  if (!v3)
  {
    sub_1DD63E14C();
    v3 = (id)sub_1DD63E11C();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_state);
  v5 = sub_1DD63E14C();
  v7 = v6;
  if (v5 == sub_1DD63E14C() && v7 == v8)
  {
    v12 = v4;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1DD63E860();
    v11 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_unknownObjectRelease();

LABEL_11:
      swift_unknownObjectRetain();
      return;
    }
  }
  v13 = HFCAPackageAlternateStateForHFCAPackageState(v4);

  if (v13)
  {

    objc_msgSend(objc_allocWithZone((Class)HFCAPackageIconDescriptor), sel_initWithPackageIdentifier_state_, v3, v13);
    swift_unknownObjectRelease();

  }
  else
  {
    __break(1u);
  }
}

id sub_1DD3FEE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v37 = a4;
  v38 = a5;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D30);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D00);
  v14 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  v29 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v5[OBJC_IVAR___HFStatusItemUpdate__secondaryText];
  v42 = 0;
  v43 = 0;
  v18 = v5;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782F8);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v19 = &v18[OBJC_IVAR___HFStatusItemUpdate__iconDescriptor];
  v42 = 0;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D50);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v12, v9);
  v20 = &v18[OBJC_IVAR___HFStatusItemUpdate__currentValue];
  v42 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4D58);
  sub_1DD63DF3C();
  v21 = v31;
  v22 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v22(v20, v8, v31);
  v23 = &v18[OBJC_IVAR___HFStatusItemUpdate__possibleValues];
  v42 = 0;
  sub_1DD63DF3C();
  v22(v23, v8, v21);
  swift_beginAccess();
  v40 = v34;
  v41 = v35;
  sub_1DD63DF3C();
  swift_endAccess();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
  v40 = v36;
  v41 = v37;
  sub_1DD63DF3C();
  swift_endAccess();
  sub_1DD3FEC8C(v38);
  v25 = v24;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  v40 = v25;
  sub_1DD63DF3C();
  swift_endAccess();

  v26 = (objc_class *)type metadata accessor for StatusItemUpdate();
  v39.receiver = v18;
  v39.super_class = v26;
  return objc_msgSendSuper2(&v39, sel_init);
}

uint64_t type metadata accessor for StatusItemUpdate()
{
  uint64_t result;

  result = qword_1F03E4D88;
  if (!qword_1F03E4D88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD3FF178()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1DD3FF184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__title, &qword_1F03E4CE8);
}

uint64_t sub_1DD3FF1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E4CF0, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__title, &qword_1F03E4CE8);
}

uint64_t sub_1DD3FF1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__secondaryText, &qword_1F03E4D00);
}

uint64_t sub_1DD3FF1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E4D08, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__secondaryText, &qword_1F03E4D00);
}

uint64_t sub_1DD3FF224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__iconDescriptor, &qword_1F03E4D18);
}

uint64_t sub_1DD3FF248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E4D20, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__iconDescriptor, &qword_1F03E4D18);
}

uint64_t sub_1DD3FF274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__currentValue, &qword_1F03E4D30);
}

uint64_t sub_1DD3FF298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E4D38, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__currentValue, &qword_1F03E4D30);
}

uint64_t sub_1DD3FF2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__possibleValues, &qword_1F03E4D30);
}

uint64_t sub_1DD3FF2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E4D38, (uint64_t)&OBJC_IVAR___HFStatusItemUpdate__possibleValues, &qword_1F03E4D30);
}

uint64_t sub_1DD3FF314()
{
  return type metadata accessor for StatusItemUpdate();
}

void sub_1DD3FF31C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DD3FF76C();
  if (v0 <= 0x3F)
  {
    sub_1DD3FF7C0(319, &qword_1F03E4DA0, &qword_1ED3782F8);
    if (v1 <= 0x3F)
    {
      sub_1DD3FF7C0(319, &qword_1F03E4DA8, &qword_1F03E4D50);
      if (v2 <= 0x3F)
      {
        sub_1DD3FF7C0(319, (unint64_t *)&unk_1F03E4DB0, &qword_1F03E4D58);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for StatusItemUpdate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatusItemUpdate.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of StatusItemUpdate.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StatusItemUpdate.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of StatusItemUpdate.$title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of StatusItemUpdate.$title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of StatusItemUpdate.$title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of StatusItemUpdate.secondaryText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of StatusItemUpdate.secondaryText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of StatusItemUpdate.secondaryText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of StatusItemUpdate.$secondaryText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of StatusItemUpdate.$secondaryText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of StatusItemUpdate.$secondaryText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of StatusItemUpdate.iconDescriptor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of StatusItemUpdate.iconDescriptor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of StatusItemUpdate.iconDescriptor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of StatusItemUpdate.$iconDescriptor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of StatusItemUpdate.$iconDescriptor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of StatusItemUpdate.$iconDescriptor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of StatusItemUpdate.currentValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of StatusItemUpdate.currentValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of StatusItemUpdate.currentValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of StatusItemUpdate.$currentValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of StatusItemUpdate.$currentValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of StatusItemUpdate.$currentValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of StatusItemUpdate.possibleValues.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of StatusItemUpdate.possibleValues.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of StatusItemUpdate.possibleValues.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of StatusItemUpdate.$possibleValues.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of StatusItemUpdate.$possibleValues.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of StatusItemUpdate.$possibleValues.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of StatusItemUpdate.__allocating_init(title:secondaryText:iconDescriptor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of StatusItemUpdate.__allocating_init(title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

void sub_1DD3FF76C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03E4D98)
  {
    v0 = sub_1DD63DF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03E4D98);
  }
}

void sub_1DD3FF7C0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1DD63DF84();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t static HFAccessoryListUtilities.accessoryRepresentableObjects(from:objectLevel:accessoryTypeGroups:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1DD3C740C(a2, a1, a3);
}

id sub_1DD3FF850@<X0>(void **a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id result;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v29;
  uint64_t v30;
  unint64_t v31;

  v3 = *a1;
  v4 = HFAccessoryLikeObject.components.getter();
  v5 = sub_1DD41F7D4(v4);
  swift_bridgeObjectRelease();
  v31 = v5;
  v22 = v3;
  v6 = HFAccessoryLikeObject.elements.getter();
  v7 = sub_1DD41F7E0(v6);
  swift_bridgeObjectRelease();
  sub_1DD41FC8C(v7);
  v30 = MEMORY[0x1E0DEE9E8];
  v8 = v31;
  if (v31 >> 62)
    goto LABEL_32;
  v9 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v9)
  {
    v10 = 0;
    v24 = v8 & 0xFFFFFFFFFFFFFF8;
    v27 = v8 & 0xC000000000000001;
    v11 = MEMORY[0x1E0DEE9E8];
    v25 = v9;
    v26 = v8;
    while (1)
    {
      if (v27)
      {
        MEMORY[0x1DF0DA2C0](v10, v8);
        v12 = __OFADD__(v10++, 1);
        if (v12)
          goto LABEL_30;
      }
      else
      {
        if (v10 >= *(_QWORD *)(v24 + 16))
          goto LABEL_31;
        swift_unknownObjectRetain();
        v12 = __OFADD__(v10++, 1);
        if (v12)
          goto LABEL_30;
      }
      swift_getObjectType();
      if (!HFAccessoryRepresentable.itemClass.getter())
      {
        swift_unknownObjectRelease();
        goto LABEL_5;
      }
      if (!(a2 >> 62))
      {
        v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v13)
          break;
        goto LABEL_26;
      }
      swift_bridgeObjectRetain();
      v13 = sub_1DD63E7B8();
      if (v13)
        break;
LABEL_26:
      swift_bridgeObjectRelease();
      v16 = 0;
LABEL_27:
      sub_1DD3E976C(&v29, v16);
      swift_unknownObjectRelease();

      v11 = v30;
      if (*(_QWORD *)(v30 + 16) > 1uLL)
      {
        swift_bridgeObjectRelease();
        result = (id)swift_bridgeObjectRelease();
        goto LABEL_36;
      }
LABEL_5:
      if (v10 == v9)
        goto LABEL_34;
    }
    v14 = 4;
    while (1)
    {
      v15 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](v14 - 4, a2) : *(id *)(a2 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v18 = HFAccessoryRepresentable.accessoryType.getter();
      v8 = (unint64_t)objc_msgSend(v16, sel_containsType_, v18);

      if ((_DWORD)v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }

      ++v14;
      if (v17 == v13)
      {
        swift_bridgeObjectRelease();
        v16 = 0;
LABEL_24:
        v9 = v25;
        v8 = v26;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    v9 = sub_1DD63E7B8();
  }
  v11 = MEMORY[0x1E0DEE9E8];
LABEL_34:
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v11 + 16);
  result = (id)swift_bridgeObjectRelease();
  if (v20 <= 1)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DD667C50;
    *(_QWORD *)(v21 + 32) = v22;
    v29 = (id)v21;
    sub_1DD63E20C();
    v8 = (unint64_t)v29;
    result = v22;
  }
LABEL_36:
  *a3 = v8;
  return result;
}

id static HFAccessoryListUtilities.accessoryRepresentableItem(for:valueSource:)(uint64_t a1, uint64_t a2)
{
  id result;

  swift_getObjectType();
  result = HFAccessoryRepresentable.itemClass.getter();
  if (result)
  {
    result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_itemWithAccessoryRepresentableObject_valueSource_, a1, a2);
    if (result)
    {
      objc_opt_self();
      result = (id)swift_dynamicCastObjCClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        return 0;
      }
    }
  }
  return result;
}

uint64_t static HFAccessoryListUtilities.createRoomSections(with:in:sectionIdentifierBlock:)(unint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  void *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  id v21;
  uint64_t v22;

  v5 = v4;
  v22 = MEMORY[0x1E0DEE9E0];
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v19 = a3;
    if (v10)
      goto LABEL_3;
LABEL_10:
    v15 = MEMORY[0x1E0DEE9E0];
LABEL_11:
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(a2, sel_hf_orderedRooms);
    sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783E0);
    v17 = sub_1DD63E1F4();

    swift_bridgeObjectRetain();
    v18 = sub_1DD402370(MEMORY[0x1E0DEE9D8], v17, v19, a4, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v18;
  }
  swift_bridgeObjectRetain();
  result = sub_1DD63E7B8();
  v10 = result;
  v19 = a3;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1DF0DA2C0](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      ++v12;
      v21 = v13;
      sub_1DD370D90(&v22, &v21, v5, &v20);
      swift_bridgeObjectRelease();

      v15 = v20;
      v22 = v20;
    }
    while (v10 != v12);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD3FFDCC(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  _QWORD *v31;
  id v32;
  unint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;

  v6 = v5;
  v35 = a1;
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)*a2;
  result = a3(*a2);
  if (v16)
  {
    v17 = objc_allocWithZone((Class)HFMutableItemSection);
    v18 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v17, sel_initWithIdentifier_, v18);

    v19 = objc_msgSend(v14, sel_hf_reorderableServicesList);
    v20 = objc_msgSend(v19, sel_sortedHomeKitItemComparator);

    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    v22 = objc_msgSend(v14, sel_uniqueIdentifier);
    sub_1DD63D7A4();

    if (*(_QWORD *)(a5 + 16) && (v23 = sub_1DD35333C((uint64_t)v13), (v24 & 1) != 0))
    {
      v25 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v23);
      v26 = *(void (**)(char *, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *(void (**)(char *, uint64_t))(v11 + 8);
      v25 = MEMORY[0x1E0DEE9D8];
    }
    v26(v13, v10);
    if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
    {
      swift_retain();
      v33 = swift_bridgeObjectRetain();
      v27 = (uint64_t)sub_1DD40DB04(v33);
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    v36 = v27;
    swift_retain();
    sub_1DD4022B8(&v36, sub_1DD4034A4, v21);
    if (v6)
    {
      swift_release_n();
      result = swift_release();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      v28 = (void *)sub_1DD63E1DC();
      swift_release();
      v29 = v34;
      objc_msgSend(v34, sel_setItems_, v28);

      v30 = objc_msgSend(v14, sel_name);
      v31 = v35;
      if (!v30)
      {
        sub_1DD63E14C();
        v30 = (id)sub_1DD63E11C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v29, sel_setHeaderTitle_, v30);

      v32 = v29;
      MEMORY[0x1DF0D9DA4]();
      if (*(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD63E224();
      sub_1DD63E254();
      sub_1DD63E20C();

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DD400110(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1DD63E848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v6 = sub_1DD63E848();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t static HFAccessoryListUtilities.createAccessoryCategorySections(with:in:sectionIdentifierBlock:)(unint64_t a1, uint64_t a2, id a3, id a4)
{
  uint64_t v6;
  uint64_t v7;
  void *ObjCClassFromMetadata;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  unsigned __int8 v22;
  id v23;
  id v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  unint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56[4];
  void *v57;
  unint64_t v58;
  uint64_t v59;

  v6 = a1;
  v59 = MEMORY[0x1E0DEE9E0];
  v58 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_36;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_1DD63E7B8())
  {
    v47 = a3;
    v48 = a4;
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v9 = 0;
    v55 = v6 & 0xC000000000000001;
    v50 = v6 & 0xFFFFFFFFFFFFFF8;
    v51 = v6;
    v49 = v6 + 32;
    v52 = MEMORY[0x1E0DEE9E0];
    v53 = ObjCClassFromMetadata;
    v54 = v7;
    while (1)
    {
      if (v55)
      {
        v13 = (id)MEMORY[0x1DF0DA2C0](v9, v51);
      }
      else
      {
        if (v9 >= *(_QWORD *)(v50 + 16))
          goto LABEL_35;
        v13 = *(id *)(v49 + 8 * v9);
      }
      a4 = v13;
      if (__OFADD__(v9++, 1))
        break;
      v15 = objc_msgSend(ObjCClassFromMetadata, sel_sortedAccessoryTypeGroups);
      sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
      v16 = sub_1DD63E1F4();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_1DD63E7B8();
        if (v17)
        {
LABEL_15:
          v6 = 4;
          while (1)
          {
            v18 = (v16 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1DF0DA2C0](v6 - 4, v16)
                : *(id *)(v16 + 8 * v6);
            v19 = v18;
            v20 = v6 - 3;
            if (__OFADD__(v6 - 4, 1))
              break;
            v21 = objc_msgSend(a4, sel_accessoryRepresentableObject);
            swift_getObjectType();
            a3 = HFAccessoryRepresentable.accessoryType.getter();
            swift_unknownObjectRelease();
            v22 = objc_msgSend(v19, sel_containsType_, a3);

            if ((v22 & 1) != 0)
            {
              swift_bridgeObjectRelease_n();
              v6 = v52;
              if (*(_QWORD *)(v52 + 16))
              {
                v24 = v19;
                v25 = sub_1DD3D960C((uint64_t)v24);
                if ((v26 & 1) != 0)
                {
                  v27 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v25);
                  swift_bridgeObjectRetain();

                  v56[0] = v27;
                  a4 = a4;
                  MEMORY[0x1DF0D9DA4]();
                  if (*(_QWORD *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56[0] & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                    sub_1DD63E224();
                  sub_1DD63E254();
                  sub_1DD63E20C();
                  a3 = (id)v56[0];
                  v28 = v24;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  sub_1DD3DC2B0(v56[0], v28, isUniquelyReferenced_nonNull_native);

                  goto LABEL_6;
                }

              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
              v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_1DD667C50;
              *(_QWORD *)(v10 + 32) = a4;
              v56[0] = v10;
              sub_1DD63E20C();
              v11 = v56[0];
              a3 = v19;
              a4 = a4;
              v12 = swift_isUniquelyReferenced_nonNull_native();
              v56[0] = v52;
              sub_1DD3DC2B0(v11, a3, v12);

LABEL_6:
              swift_bridgeObjectRelease();
              goto LABEL_7;
            }

            ++v6;
            if (v20 == v17)
              goto LABEL_22;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v17)
          goto LABEL_15;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      v23 = a4;
      MEMORY[0x1DF0D9DA4]();
      a4 = *(id *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((unint64_t)a4 >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD63E224();
      sub_1DD63E254();
      sub_1DD63E20C();

LABEL_7:
      ObjCClassFromMetadata = v53;
      if (v9 == v54)
      {
        v59 = v52;
        swift_bridgeObjectRelease();
        a3 = v47;
        a4 = v48;
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
LABEL_38:
  v57 = 0;
  v30 = objc_msgSend(ObjCClassFromMetadata, sel_sortedAccessoryTypeGroups, v47, v48);
  sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
  v31 = sub_1DD63E1F4();

  v32 = sub_1DD402690(v31, (void (*)(_QWORD))a3, (uint64_t)a4, &v59, (uint64_t)&v58, &v57);
  swift_bridgeObjectRelease();
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v46 < 1)
      goto LABEL_46;
  }
  else if (*(uint64_t *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_46;
  }
  v33 = sub_1DD63E488();
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783F0);
  v34 = sub_1DD63E500();
  if (os_log_type_enabled(v34, v33))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v56[0] = v36;
    *(_DWORD *)v35 = 136315650;
    sub_1DD3C3160(0xD000000000000040, 0x80000001DD66ED60, v56);
    sub_1DD63E53C();
    *(_WORD *)(v35 + 12) = 2048;
    swift_beginAccess();
    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1DD63E7B8();
      swift_bridgeObjectRelease();
    }
    sub_1DD63E53C();
    *(_WORD *)(v35 + 22) = 2080;
    v37 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    v38 = swift_bridgeObjectRetain();
    v39 = MEMORY[0x1DF0D9DD4](v38, v37);
    v41 = v40;
    swift_bridgeObjectRelease();
    sub_1DD3C3160(v39, v41, v56);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v34, v33, "%s Found %ld item(s) without an identified category: %s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v36, -1, -1);
    MEMORY[0x1DF0DB358](v35, -1, -1);
  }

  v42 = v57;
  if (v57)
  {
    swift_beginAccess();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    v43 = v42;
    swift_bridgeObjectRetain();
    v44 = (void *)sub_1DD63E1DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v43, sel_setItems_, v44);

  }
LABEL_46:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

void sub_1DD40094C(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void **a3@<X3>, uint64_t (**a4)(_QWORD, _QWORD)@<X4>, _QWORD *a5@<X8>)
{
  void *v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  void **v28;

  v9 = (void *)*a1;
  v10 = (id)a4[2](a4, *a1);
  if (v10)
  {
    v11 = v10;
    v28 = a3;
    sub_1DD63E14C();

    if (*(_QWORD *)(*a2 + 16))
    {
      v12 = v9;
      sub_1DD3D960C((uint64_t)v12);
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRetain();

        v14 = objc_allocWithZone((Class)HFMutableItemSection);
        v15 = (void *)sub_1DD63E11C();
        swift_bridgeObjectRelease();
        v16 = objc_msgSend(v14, sel_initWithIdentifier_, v15);

        v17 = objc_msgSend(v12, sel_name);
        objc_msgSend(v16, sel_setHeaderTitle_, v17);

        sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
        v18 = (void *)sub_1DD63E1DC();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setItems_, v18);

        sub_1DD352AB0(0, &qword_1F03E4DD8);
        v19 = objc_msgSend((id)objc_opt_self(), sel_otherAccessoryTypeGroup);
        v20 = sub_1DD63E4E8();

        if ((v20 & 1) != 0)
        {
          v21 = *v28;
          *v28 = v16;
          v22 = v16;

        }
        _Block_release(a4);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v23 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    v24 = v9;
    v25 = sub_1DD3D960C((uint64_t)v24);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
    }

  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  sub_1DD41FE44(v27);
  _Block_release(a4);
  v16 = 0;
LABEL_16:
  *a5 = v16;
}

void sub_1DD400BD0(_QWORD *a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t *a3@<X3>, void **a4@<X5>, _QWORD *a5@<X8>)
{
  void *v8;
  uint64_t v9;
  id v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  void **v26;

  v8 = (void *)*a1;
  a2(*a1);
  if (v9)
  {
    if (*(_QWORD *)(*a3 + 16))
    {
      v26 = a4;
      v10 = v8;
      sub_1DD3D960C((uint64_t)v10);
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRetain();

        v12 = objc_allocWithZone((Class)HFMutableItemSection);
        v13 = (void *)sub_1DD63E11C();
        swift_bridgeObjectRelease();
        v14 = objc_msgSend(v12, sel_initWithIdentifier_, v13);

        v15 = objc_msgSend(v10, sel_name);
        objc_msgSend(v14, sel_setHeaderTitle_, v15);

        sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
        v16 = (void *)sub_1DD63E1DC();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setItems_, v16);

        sub_1DD352AB0(0, &qword_1F03E4DD8);
        v17 = objc_msgSend((id)objc_opt_self(), sel_otherAccessoryTypeGroup);
        v18 = sub_1DD63E4E8();

        if ((v18 & 1) != 0)
        {
          v19 = *v26;
          *v26 = v14;
          v20 = v14;

        }
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v21 = *a3;
  if (*(_QWORD *)(*a3 + 16))
  {
    v22 = v8;
    v23 = sub_1DD3D960C((uint64_t)v22);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = MEMORY[0x1E0DEE9D8];
    }

  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
  }
  sub_1DD41FE44(v25);
  v14 = 0;
LABEL_15:
  *a5 = v14;
}

char *sub_1DD400EEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4DE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DD400FE8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1DD63E7F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_1DD401090(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_1DD63D768();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1DD63E7F4();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1DD40119C(uint64_t a1)
{
  return sub_1DD400EEC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DD4011B0(_QWORD *a1)
{
  return sub_1DD3E88B8(0, a1[2], 0, a1);
}

uint64_t sub_1DD4011C4(_QWORD *a1)
{
  return sub_1DD3E8A50(0, a1[2], 0, a1);
}

uint64_t sub_1DD4011D8(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (**aBlock)(_QWORD, _QWORD, _QWORD))
{
  char *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  char *v25;
  char *v26;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v26 = __src;
  v25 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v18 = &v6[8 * v15];
      v24 = v18;
      v26 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v19 = (char *)(a3 - 8);
        v20 = v8;
        while (1)
        {
          v21 = v19 + 8;
          v22 = *((_QWORD *)v20 - 1);
          v20 -= 8;
          if (aBlock[2](aBlock, *((_QWORD *)v18 - 1), v22) == 1)
          {
            v24 = v18 - 8;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
              *(_QWORD *)v19 = *((_QWORD *)v18 - 1);
            v20 = v8;
            v18 -= 8;
            if (v8 <= v9)
              goto LABEL_42;
          }
          else
          {
            if (v21 != v8 || v19 >= v8)
              *(_QWORD *)v19 = *(_QWORD *)v20;
            v26 = v20;
            if (v20 <= v9)
              goto LABEL_42;
          }
          v19 -= 8;
          v8 = v20;
          if (v18 <= v6)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v24 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        if (aBlock[2](aBlock, *(_QWORD *)v8, *(_QWORD *)v6) == 1)
        {
          if (v9 != v6)
            *(_QWORD *)v9 = *(_QWORD *)v6;
          v6 += 8;
          v25 = v6;
          v17 = v8;
        }
        else
        {
          v17 = v8 + 8;
          if (v9 < v8 || v9 >= v17 || v9 != v8)
            *(_QWORD *)v9 = *(_QWORD *)v8;
        }
        v9 += 8;
        if (v6 >= v16)
          break;
        v8 = v17;
      }
      while ((unint64_t)v17 < a3);
      v26 = v9;
    }
LABEL_42:
    sub_1DD400FE8((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  _Block_release(aBlock);
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD401474(void **__src, void **a2, unint64_t a3, void **__dst, uint64_t (*a5)(_QWORD *, _QWORD *))
{
  void **v5;
  void **v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void **v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void **v24;
  void **v25;
  void **v26;
  void **v27;
  void *v28;
  void **v29;
  void *v30;
  unint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void **v37;
  uint64_t result;
  uint64_t v39;
  void **v40;
  void **v41;
  void **v43;
  _QWORD v45[3];
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  void **v49;
  void **v50;
  void **v51;

  v5 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v51 = __src;
  v50 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v25 = &v5[v13];
      v49 = v25;
      v51 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v39 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
        v40 = v7;
        v26 = (void **)(a3 - 8);
        v27 = v6;
        v41 = v5;
        do
        {
          v29 = v25 - 1;
          v28 = *(v25 - 1);
          v30 = *--v27;
          v43 = v26 + 1;
          v48 = v39;
          v46 = v39;
          v47[0] = v28;
          v45[0] = v30;
          v31 = (unint64_t)v25;
          v32 = v28;
          v33 = v30;
          v34 = v32;
          v35 = v33;
          v36 = a5(v47, v45);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);

          if (v36 == 1)
          {
            v49 = v29;
            if ((unint64_t)v43 < v31 || (unint64_t)v26 >= v31)
            {
              *v26 = *v29;
              v27 = v6;
              v25 = v29;
              v37 = v41;
            }
            else
            {
              v37 = v41;
              if (v43 != (void **)v31)
                *v26 = *v29;
              v27 = v6;
              v25 = v29;
            }
          }
          else
          {
            if (v43 != v6 || v26 >= v6)
              *v26 = *v27;
            v51 = v27;
            v37 = v41;
            v25 = (void **)v31;
          }
          if (v27 <= v40)
            break;
          --v26;
          v6 = v27;
        }
        while (v25 > v37);
      }
      goto LABEL_44;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v5[v10];
    v49 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      v15 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      do
      {
        v16 = *v6;
        v17 = *v5;
        v48 = v15;
        v46 = v15;
        v47[0] = v16;
        v45[0] = v17;
        v18 = v5;
        v19 = v16;
        v20 = v17;
        v21 = v19;
        v22 = v20;
        v23 = a5(v47, v45);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);

        if (v23 == 1)
        {
          if (v7 != v18)
            *v7 = *v18;
          v5 = v18 + 1;
          v50 = v18 + 1;
          v24 = v6;
        }
        else
        {
          v24 = v6 + 1;
          v5 = v18;
          if (v7 < v6 || v7 >= v24 || v7 != v6)
            *v7 = *v6;
        }
        v51 = ++v7;
        if (v5 >= v14)
          break;
        v6 = v24;
      }
      while ((unint64_t)v24 < a3);
    }
LABEL_44:
    sub_1DD400FE8((void **)&v51, (const void **)&v50, &v49);
    return 1;
  }
  swift_release();
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

void sub_1DD401830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD *, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v20;
  _QWORD v21[4];
  _QWORD v22[4];
  uint64_t (*v23)(_QWORD *, _QWORD *);

  v23 = a5;
  if (a3 != a2)
  {
    v5 = a3;
    v6 = *a4;
    v7 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    v8 = v6 + 8 * v5 - 8;
LABEL_5:
    v9 = *(void **)(v6 + 8 * v5);
    v10 = a1;
    v20 = v8;
    while (1)
    {
      v11 = *(void **)v8;
      v22[3] = v7;
      v21[3] = v7;
      v22[0] = v9;
      v21[0] = v11;
      v12 = v9;
      v13 = v11;
      v14 = v12;
      v15 = v13;
      v16 = v23(v22, v21);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);

      if (v16 == 1)
      {
LABEL_4:
        ++v5;
        v8 = v20 + 8;
        if (v5 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v17 = *(void **)v8;
      v9 = *(void **)(v8 + 8);
      *(_QWORD *)v8 = v9;
      *(_QWORD *)(v8 + 8) = v17;
      v8 -= 8;
      if (v5 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1DD401964(uint64_t *a1, uint64_t (*a2)(_QWORD *, _QWORD *), uint64_t a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  void **v108;
  void **v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void **v117;
  void **v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void **__dst;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v140[3];
  uint64_t v141;
  _QWORD v142[3];
  uint64_t v143;
  uint64_t v144;

  v5 = a1;
  v6 = a1[1];
  swift_retain_n();
  v7 = sub_1DD63E818();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_135;
    if (v6)
    {
      swift_retain();
      sub_1DD401830(0, v6, 1, v5, a2);
    }
    return swift_release_n();
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_143;
  v125 = v7;
  v129 = v6;
  v136 = v3;
  v122 = v5;
  if (v6 < 2)
  {
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v144 = MEMORY[0x1E0DEE9D8];
    __dst = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_100:
      if (v17 >= 2)
      {
        v112 = *v122;
        v138 = *v122;
        do
        {
          v113 = v17 - 2;
          if (v17 < 2)
            goto LABEL_130;
          if (!v112)
            goto LABEL_142;
          v114 = (uint64_t)v13;
          v115 = *(_QWORD *)&v13[16 * v113 + 32];
          v116 = *(_QWORD *)&v13[16 * v17 + 24];
          v117 = (void **)(v112 + 8 * v115);
          v118 = (void **)(v112 + 8 * *(_QWORD *)&v13[16 * v17 + 16]);
          v119 = v112 + 8 * v116;
          swift_retain();
          sub_1DD401474(v117, v118, v119, __dst, a2);
          if (v136)
            goto LABEL_97;
          swift_release();
          if (v116 < v115)
            goto LABEL_131;
          v13 = (char *)v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_1DD40119C(v114);
          if (v113 >= *((_QWORD *)v13 + 2))
            goto LABEL_132;
          v120 = &v13[16 * v113 + 32];
          *(_QWORD *)v120 = v115;
          *((_QWORD *)v120 + 1) = v116;
          v121 = *((_QWORD *)v13 + 2);
          if (v17 > v121)
            goto LABEL_133;
          memmove(&v13[16 * v17 + 16], &v13[16 * v17 + 32], 16 * (v121 - v17));
          *((_QWORD *)v13 + 2) = v121 - 1;
          v17 = v121 - 1;
          v112 = v138;
        }
        while (v121 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_112:
      *(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DD63E20C();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = v5;
    v10 = v8 >> 1;
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    v11 = sub_1DD63E23C();
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    v5 = v9;
    __dst = (void **)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v144 = v11;
  }
  v14 = 0;
  v15 = *v5;
  v123 = *v5 - 8;
  v124 = *v5 + 16;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v16 = v6;
  v137 = *v5;
  v135 = a3;
  while (1)
  {
    v18 = v14;
    v19 = v14 + 1;
    v133 = v14;
    if (v14 + 1 < v16)
    {
      v126 = v13;
      v20 = *(void **)(v15 + 8 * v19);
      v21 = *(void **)(v15 + 8 * v14);
      v143 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      v142[0] = v20;
      v22 = v143;
      v141 = v143;
      v140[0] = v21;
      v23 = v20;
      v24 = v21;
      v25 = v23;
      v26 = v24;
      v130 = a2(v142, v140);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v142);

      v19 = v18 + 2;
      if (v18 + 2 < v16)
      {
        v27 = (void **)(v124 + 8 * v18);
        v28 = v22;
        while (1)
        {
          v29 = v19;
          v31 = *(v27 - 1);
          v30 = *v27;
          v143 = v28;
          v142[0] = v30;
          v141 = v28;
          v140[0] = v31;
          v32 = v30;
          v33 = v31;
          v34 = v32;
          v35 = v33;
          v36 = a2(v142, v140);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v142);

          if ((v130 != 1) == (v36 == 1))
            break;
          v19 = v29 + 1;
          ++v27;
          if (v129 == v29 + 1)
          {
            v19 = v129;
            goto LABEL_23;
          }
        }
        v19 = v29;
LABEL_23:
        v18 = v133;
      }
      v13 = v126;
      if (v130 != 1)
      {
        if (v19 < v18)
          goto LABEL_136;
        if (v18 < v19)
        {
          v37 = (uint64_t *)(v123 + 8 * v19);
          v38 = v19;
          v39 = v18;
          v40 = (uint64_t *)(v137 + 8 * v18);
          do
          {
            if (v39 != --v38)
            {
              if (!v137)
                goto LABEL_141;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v19 < v129)
    {
      if (__OFSUB__(v19, v18))
        goto LABEL_134;
      if (v19 - v18 < v125)
        break;
    }
LABEL_50:
    if (v19 < v18)
      goto LABEL_129;
    v128 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1DD400EEC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v60 = *((_QWORD *)v13 + 2);
    v59 = *((_QWORD *)v13 + 3);
    v17 = v60 + 1;
    v15 = v137;
    if (v60 >= v59 >> 1)
    {
      v111 = sub_1DD400EEC((char *)(v59 > 1), v60 + 1, 1, v13);
      v15 = v137;
      v13 = v111;
    }
    *((_QWORD *)v13 + 2) = v17;
    v61 = v13 + 32;
    v62 = &v13[16 * v60 + 32];
    *(_QWORD *)v62 = v18;
    *((_QWORD *)v62 + 1) = v128;
    if (v60)
    {
      while (1)
      {
        v63 = v17 - 1;
        if (v17 >= 4)
        {
          v68 = &v61[16 * v17];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_118;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_119;
          v75 = v17 - 2;
          v76 = &v61[16 * v17 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_121;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_124;
          if (v80 >= v71)
          {
            v98 = &v61[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_128;
            v91 = v66 < v101;
            goto LABEL_87;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v92 = *((_QWORD *)v13 + 4);
            v93 = *((_QWORD *)v13 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_81;
          }
          v65 = *((_QWORD *)v13 + 4);
          v64 = *((_QWORD *)v13 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_120;
        v75 = v17 - 2;
        v81 = &v61[16 * v17 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_123;
        v87 = &v61[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_126;
        if (__OFADD__(v85, v90))
          goto LABEL_127;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_87:
          if (v91)
            v63 = v75;
          goto LABEL_89;
        }
LABEL_81:
        if ((v86 & 1) != 0)
          goto LABEL_122;
        v94 = &v61[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_125;
        if (v97 < v85)
          goto LABEL_15;
LABEL_89:
        v102 = v63 - 1;
        if (v63 - 1 >= v17)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v15)
          goto LABEL_140;
        v103 = &v61[16 * v102];
        v104 = *(_QWORD *)v103;
        v105 = v63;
        v106 = &v61[16 * v63];
        v107 = *((_QWORD *)v106 + 1);
        v108 = (void **)(v15 + 8 * *(_QWORD *)v103);
        v109 = (void **)(v15 + 8 * *(_QWORD *)v106);
        v134 = v15 + 8 * v107;
        swift_retain();
        sub_1DD401474(v108, v109, v134, __dst, a2);
        if (v136)
        {
LABEL_97:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_112;
        }
        swift_release();
        if (v107 < v104)
          goto LABEL_115;
        if (v105 > *((_QWORD *)v13 + 2))
          goto LABEL_116;
        *(_QWORD *)v103 = v104;
        v61 = v13 + 32;
        *(_QWORD *)&v13[16 * v102 + 40] = v107;
        v110 = *((_QWORD *)v13 + 2);
        if (v105 >= v110)
          goto LABEL_117;
        v17 = v110 - 1;
        memmove(v106, v106 + 16, 16 * (v110 - 1 - v105));
        *((_QWORD *)v13 + 2) = v110 - 1;
        a3 = v135;
        v15 = v137;
        if (v110 <= 2)
          goto LABEL_15;
      }
    }
    v17 = 1;
LABEL_15:
    v14 = v128;
    v16 = v129;
    if (v128 >= v129)
      goto LABEL_100;
  }
  if (__OFADD__(v18, v125))
    goto LABEL_137;
  if (v18 + v125 >= v129)
    v42 = v129;
  else
    v42 = v18 + v125;
  if (v42 >= v18)
  {
    if (v19 != v42)
    {
      v43 = a3;
      v127 = v13;
      v44 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
      v45 = v137;
      v46 = v44;
      v47 = v123 + 8 * v19;
      v131 = v42;
      do
      {
        v48 = *(void **)(v45 + 8 * v19);
        v49 = v18;
        v50 = v47;
        while (1)
        {
          v51 = v19;
          v52 = *(void **)v50;
          v143 = v46;
          v142[0] = v48;
          v141 = v46;
          v140[0] = v52;
          v53 = v48;
          v54 = v52;
          v55 = v53;
          v56 = v54;
          v57 = a2(v142, v140);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v142);

          if (v57 == 1)
            break;
          v45 = v137;
          if (!v137)
            goto LABEL_139;
          v19 = v51;
          v58 = *(void **)v50;
          v48 = *(void **)(v50 + 8);
          *(_QWORD *)v50 = v48;
          *(_QWORD *)(v50 + 8) = v58;
          v50 -= 8;
          if (v51 == ++v49)
            goto LABEL_43;
        }
        v45 = v137;
        v19 = v51;
LABEL_43:
        ++v19;
        v47 += 8;
        v18 = v133;
      }
      while (v19 != v131);
      v19 = v131;
      v13 = v127;
      a3 = v43;
    }
    goto LABEL_50;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  swift_release_n();
  __break(1u);
LABEL_140:
  swift_release_n();
  __break(1u);
LABEL_141:
  swift_release_n();
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  result = sub_1DD63E794();
  __break(1u);
  return result;
}

uint64_t sub_1DD4022B8(uint64_t *a1, uint64_t (*a2)(_QWORD *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10[2];

  v6 = *a1;
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1DD3718B0();
  v8 = *(_QWORD *)(v6 + 16);
  v10[0] = v6 + 32;
  v10[1] = v8;
  swift_retain();
  sub_1DD401964(v10, a2, a3);
  swift_release();
  sub_1DD63E71C();
  return swift_release_n();
}

void *sub_1DD402370(void *a1, unint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  uint64_t v13;
  id v16;
  void *v17;

  v17 = a1;
  v9 = a1;
  if (a2 >> 62)
    goto LABEL_13;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_1DD63E7B8())
  {
    for (i = 4; ; ++i)
    {
      v12 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](i - 4, a2) : *(id *)(a2 + 8 * i);
      v9 = v12;
      v13 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v16 = v12;
      sub_1DD3FFDCC(&v17, &v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1DD4024B4(unint64_t a1, uint64_t *a2, int a3, void **a4, void *aBlock)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v16;
  id v17;
  unint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_1DD63E7B8())
  {
    v9 = 4;
    while (1)
    {
      v10 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](v9 - 4, a1) : *(id *)(a1 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v17 = v10;
      _Block_copy(aBlock);
      sub_1DD40094C(&v17, a2, a4, (uint64_t (**)(_QWORD, _QWORD))aBlock, &v16);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        _Block_release(aBlock);
        return v11;
      }

      if (v16)
      {
        MEMORY[0x1DF0D9DA4]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD63E224();
        sub_1DD63E254();
        sub_1DD63E20C();
      }
      ++v9;
      if (v12 == v8)
      {
        swift_bridgeObjectRelease();
        v11 = (void *)v18;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    _Block_copy(aBlock);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v11 = (void *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  _Block_release(aBlock);
  return v11;
}

uint64_t sub_1DD402690(unint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t *a4, uint64_t a5, void **a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_1DD63E7B8())
  {
    for (i = 4; ; ++i)
    {
      v10 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v11 = v10;
      v12 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v18 = v10;
      sub_1DD400BD0(&v18, a2, a4, a6, &v17);
      if (v6)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v17)
      {
        MEMORY[0x1DF0D9DA4]();
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD63E224();
        sub_1DD63E254();
        sub_1DD63E20C();
      }
      if (v12 == v8)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DD402838(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int isUniquelyReferenced_nonNull_native;
  char v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v2 = sub_1DD63D7C8();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v5 = sub_1DD63E7B8();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v29 = a1 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v7 = 4;
      v28 = a1;
      while (1)
      {
        v9 = v7 - 4;
        if (v29)
        {
          v10 = MEMORY[0x1DF0DA2C0](v7 - 4, a1);
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_23;
        }
        else
        {
          v10 = *(_QWORD *)(a1 + 8 * v7);
          swift_unknownObjectRetain();
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        swift_getObjectType();
        swift_bridgeObjectRetain();
        v12 = objc_msgSend(HFAccessoryRepresentable.homeKitObject.getter(), sel_uniqueIdentifier);
        swift_unknownObjectRelease();
        sub_1DD63D7A4();

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v32 = v6;
        a1 = sub_1DD35333C((uint64_t)v4);
        v15 = v6[2];
        v16 = (v14 & 1) == 0;
        v17 = v15 + v16;
        if (__OFADD__(v15, v16))
          goto LABEL_24;
        v18 = v14;
        if (v6[3] >= v17)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v21 = v32;
            if ((v14 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1DD3DD390();
            v21 = v32;
            if ((v18 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_1DD3DA478(v17, isUniquelyReferenced_nonNull_native);
          v19 = sub_1DD35333C((uint64_t)v4);
          if ((v18 & 1) != (v20 & 1))
          {
            result = sub_1DD63E8A8();
            __break(1u);
            return result;
          }
          a1 = v19;
          v21 = v32;
          if ((v18 & 1) != 0)
          {
LABEL_4:
            v8 = v21[7];
            swift_unknownObjectRelease();
            *(_QWORD *)(v8 + 8 * a1) = v10;
            goto LABEL_5;
          }
        }
        v21[(a1 >> 6) + 8] |= 1 << a1;
        (*(void (**)(unint64_t, char *, uint64_t))(v30 + 16))(v21[6] + *(_QWORD *)(v30 + 72) * a1, v4, v31);
        *(_QWORD *)(v21[7] + 8 * a1) = v10;
        v22 = v21[2];
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
          goto LABEL_25;
        v21[2] = v24;
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
        swift_bridgeObjectRelease();
        ++v7;
        v6 = v21;
        a1 = v28;
        if (v11 == v5)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_28:
  v25 = sub_1DD40D9C8((uint64_t)v21);
  swift_bridgeObjectRelease();
  return (uint64_t)v25;
}

uint64_t sub_1DD402B24(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v11;
  void *v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1DD63E7B8())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v7;
      sub_1DD3FF850(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_1DD41FC8C(v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void *sub_1DD402C74(unint64_t a1, int a2, void *aBlock)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *ObjCClassFromMetadata;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  id v12;
  void *v13;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unsigned int v22;
  id v23;
  id v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  unint64_t v32;
  void *v33;
  os_log_type_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v47;
  void *i;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56[4];
  void *v57;
  unint64_t v58;
  void *v59;

  v3 = aBlock;
  v4 = a1;
  v59 = (void *)MEMORY[0x1E0DEE9E0];
  v58 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_36;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  for (i = v3; v5; i = v3)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v7 = 0;
    v54 = v4 & 0xC000000000000001;
    v50 = v4 & 0xFFFFFFFFFFFFFF8;
    v51 = v4;
    v49 = v4 + 32;
    v3 = (void *)MEMORY[0x1E0DEE9E0];
    v52 = ObjCClassFromMetadata;
    v53 = v5;
    while (1)
    {
      if (v54)
      {
        v12 = (id)MEMORY[0x1DF0DA2C0](v7, v51);
      }
      else
      {
        if (v7 >= *(_QWORD *)(v50 + 16))
          goto LABEL_35;
        v12 = *(id *)(v49 + 8 * v7);
      }
      v13 = v12;
      if (__OFADD__(v7++, 1))
        break;
      v15 = objc_msgSend(ObjCClassFromMetadata, sel_sortedAccessoryTypeGroups);
      sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
      v16 = sub_1DD63E1F4();

      v55 = (uint64_t)v3;
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_1DD63E7B8();
        if (v17)
          goto LABEL_14;
LABEL_21:
        swift_bridgeObjectRelease_n();
        v23 = v13;
        MEMORY[0x1DF0D9DA4]();
        if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD63E224();
        sub_1DD63E254();
        sub_1DD63E20C();

        ObjCClassFromMetadata = v52;
        v3 = (void *)v55;
        if (v7 == v53)
        {
LABEL_32:
          v59 = v3;
          swift_bridgeObjectRelease();
          v3 = i;
          goto LABEL_38;
        }
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v17)
          goto LABEL_21;
LABEL_14:
        v18 = 4;
        while (1)
        {
          if ((v16 & 0xC000000000000001) != 0)
            v19 = (id)MEMORY[0x1DF0DA2C0](v18 - 4, v16);
          else
            v19 = *(id *)(v16 + 8 * v18);
          v20 = v19;
          v3 = (void *)(v18 - 3);
          if (__OFADD__(v18 - 4, 1))
          {
            __break(1u);
            goto LABEL_34;
          }
          v21 = objc_msgSend(v13, sel_accessoryRepresentableObject);
          swift_getObjectType();
          v4 = (uint64_t)HFAccessoryRepresentable.accessoryType.getter();
          swift_unknownObjectRelease();
          v22 = objc_msgSend(v20, sel_containsType_, v4);

          if (v22)
            break;

          ++v18;
          if (v3 == (void *)v17)
            goto LABEL_21;
        }
        swift_bridgeObjectRelease_n();
        v3 = (void *)v55;
        ObjCClassFromMetadata = v52;
        if (*(_QWORD *)(v55 + 16))
        {
          v24 = v20;
          v25 = sub_1DD3D960C((uint64_t)v24);
          if ((v26 & 1) != 0)
          {
            v27 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v25);
            swift_bridgeObjectRetain();

            v56[0] = v27;
            v28 = v13;
            MEMORY[0x1DF0D9DA4]();
            if (*(_QWORD *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1DD63E224();
            sub_1DD63E254();
            sub_1DD63E20C();
            v4 = v56[0];
            v29 = v24;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_1DD3DC2B0(v56[0], v29, isUniquelyReferenced_nonNull_native);

            goto LABEL_6;
          }

        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
        v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1DD667C50;
        *(_QWORD *)(v8 + 32) = v13;
        v56[0] = v8;
        sub_1DD63E20C();
        v9 = v56[0];
        v4 = v13;
        v10 = v20;
        v11 = swift_isUniquelyReferenced_nonNull_native();
        v56[0] = v55;
        sub_1DD3DC2B0(v9, v10, v11);

LABEL_6:
        swift_bridgeObjectRelease();
        if (v7 == v53)
          goto LABEL_32;
      }
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    _Block_copy(v3);
    swift_bridgeObjectRetain();
    v5 = sub_1DD63E7B8();
  }
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
LABEL_38:
  v57 = 0;
  v31 = objc_msgSend(ObjCClassFromMetadata, sel_sortedAccessoryTypeGroups);
  sub_1DD352AB0(0, (unint64_t *)&unk_1ED3783A8);
  v32 = sub_1DD63E1F4();

  _Block_copy(v3);
  v33 = sub_1DD4024B4(v32, (uint64_t *)&v59, (int)&v58, &v57, v3);
  _Block_release(v3);
  swift_bridgeObjectRelease();
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    v47 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v47 < 1)
      goto LABEL_47;
  }
  else if (*(uint64_t *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_47;
  }
  v34 = sub_1DD63E488();
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783F0);
  v35 = sub_1DD63E500();
  if (!os_log_type_enabled(v35, v34))
  {

    v43 = v57;
    if (!v57)
      goto LABEL_47;
LABEL_46:
    swift_beginAccess();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    v44 = v43;
    swift_bridgeObjectRetain();
    v45 = (void *)sub_1DD63E1DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v44, sel_setItems_, v45);

    goto LABEL_47;
  }
  v36 = swift_slowAlloc();
  v37 = swift_slowAlloc();
  v56[0] = v37;
  *(_DWORD *)v36 = 136315650;
  sub_1DD3C3160(0xD000000000000040, 0x80000001DD66ED60, v56);
  sub_1DD63E53C();
  *(_WORD *)(v36 + 12) = 2048;
  swift_beginAccess();
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  sub_1DD63E53C();
  *(_WORD *)(v36 + 22) = 2080;
  v38 = sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
  v39 = swift_bridgeObjectRetain();
  v40 = MEMORY[0x1DF0D9DD4](v39, v38);
  v42 = v41;
  swift_bridgeObjectRelease();
  sub_1DD3C3160(v40, v42, v56);
  sub_1DD63E53C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DD34E000, v35, v34, "%s Found %ld item(s) without an identified category: %s", (uint8_t *)v36, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1DF0DB358](v37, -1, -1);
  MEMORY[0x1DF0DB358](v36, -1, -1);

  v3 = i;
  v43 = v57;
  if (v57)
    goto LABEL_46;
LABEL_47:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(v3);
  return v33;
}

uint64_t type metadata accessor for HFAccessoryListUtilities(uint64_t a1)
{
  return sub_1DD352AB0(a1, &qword_1F03E4DC0);
}

uint64_t sub_1DD403480()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DD4034A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1DD400110(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1DD4034B0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t HFItemManager.firstFastUpdate<A>()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = sub_1DD63E2E4();
  v2[6] = sub_1DD63E2D8();
  v2[7] = sub_1DD63E284();
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_1DD403594()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = sub_1DD63E2D8();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v4);
  sub_1DD63E428();
  *v2 = v0;
  v2[1] = sub_1DD403684;
  return sub_1DD63E884();
}

uint64_t sub_1DD403684()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1DD4036F8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DD40372C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DD403774(uint64_t a1)
{
  uint64_t v1;

  sub_1DD403980(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 16), (SEL *)&selRef_firstFastUpdateFuture, (uint64_t)&unk_1EA724660, (uint64_t)sub_1DD403CA8, (uint64_t)&block_descriptor_10);
}

uint64_t HFItemManager.firstFullUpdate<A>()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = sub_1DD63E2E4();
  v2[6] = sub_1DD63E2D8();
  v2[7] = sub_1DD63E284();
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_1DD40381C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = sub_1DD63E2D8();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v4);
  sub_1DD63E428();
  *v2 = v0;
  v2[1] = sub_1DD40390C;
  return sub_1DD63E884();
}

uint64_t sub_1DD40390C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

void sub_1DD403980(uint64_t a1, void *a2, uint64_t a3, SEL *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v22 = a7;
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a3);
  sub_1DD63E428();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  v12 = sub_1DD63E2B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - v14;
  v16 = objc_msgSend(a2, *a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, v15, v12);
  aBlock[4] = a6;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD4034B0;
  aBlock[3] = v22;
  v19 = _Block_copy(aBlock);
  swift_release();
  v20 = objc_msgSend(v16, sel_addCompletionBlock_, v19);
  _Block_release(v19);

}

void sub_1DD403B28(uint64_t a1)
{
  uint64_t v1;

  sub_1DD403980(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 16), (SEL *)&selRef_firstFullUpdateFuture, (uint64_t)&unk_1EA724610, (uint64_t)sub_1DD403CA8, (uint64_t)&block_descriptor_1);
}

uint64_t sub_1DD403B60(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v5;
  id v7;

  if (a2)
  {
    v5 = a2;
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
    sub_1DD63E428();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
    sub_1DD63E2B4();
    return sub_1DD63E29C();
  }
  else
  {
    if (a1)
    {
      v7 = a1;
      MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
      sub_1DD63E3D4();
    }
    else
    {
      MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
      sub_1DD63E080();
    }
    sub_1DD63E428();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
    sub_1DD63E2B4();
    return sub_1DD63E2A8();
  }
}

uint64_t sub_1DD403CB0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v5);
  sub_1DD63E428();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DD63E2B4() - 8) + 80);
  return sub_1DD403B60(a1, a2, v2 + ((v6 + 24) & ~v6), v5);
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  return v3 & 1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HomeEnergyFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeEnergyFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DD403EA4 + 4 * byte_1DD668055[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DD403ED8 + 4 * byte_1DD668050[v4]))();
}

uint64_t sub_1DD403ED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD403EE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD403EE8);
  return result;
}

uint64_t sub_1DD403EF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD403EFCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DD403F00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD403F08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD403F14(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1DD403F20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomeEnergyFeatures()
{
  return &type metadata for HomeEnergyFeatures;
}

unint64_t sub_1DD403F3C()
{
  unint64_t result;

  result = qword_1F03E4E10;
  if (!qword_1F03E4E10)
  {
    result = MEMORY[0x1DF0DB2A4](&unk_1DD6680C4, &type metadata for HomeEnergyFeatures);
    atomic_store(result, (unint64_t *)&qword_1F03E4E10);
  }
  return result;
}

BOOL sub_1DD403F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DD403F94()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

uint64_t sub_1DD403FD8()
{
  return sub_1DD63E914();
}

uint64_t sub_1DD404000()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

uint64_t sub_1DD404040(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1DD3E86C4(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_1DD63D7C8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1DD63D780();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1DD3E86C4(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id HomeDashboardReorderableItemList.__allocating_init(applicationDataContainer:category:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithApplicationDataContainer_category_, a1, v4);

  swift_unknownObjectRelease();
  return v5;
}

char *HomeDashboardReorderableItemList.init(applicationDataContainer:category:)(uint64_t a1)
{
  char *v1;

  v1 = sub_1DD39F784(a1);
  swift_unknownObjectRelease();
  return v1;
}

id HomeDashboardReorderableItemList.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeDashboardReorderableItemList();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for HomeDashboardReorderableItemList()
{
  return swift_lookUpClassMethod();
}

Swift::Void __swiftcall HFPredictionsManager.submitPredictionsFetchEvent(duration:numberOfPredictions:)(Swift::Double duration, Swift::UInt numberOfPredictions)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_1DD63DC0C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD63DC00();
  sub_1DD4042CC();
  sub_1DD63D93C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1DD4042CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED378568;
  if (!qword_1ED378568)
  {
    v1 = sub_1DD63DC0C();
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0D32978], v1);
    atomic_store(result, (unint64_t *)&qword_1ED378568);
  }
  return result;
}

id HFAccessoryRepresentable.isIdentifiable.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_isIdentifiable);
}

id HFAccessoryRepresentable.isMatterOnlyAccessory.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_isMatterOnlyAccessory);
}

id HFAccessoryRepresentable.moveToRoom(room:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_hf_moveToRoom_, a1);
}

uint64_t HFAccessoryRepresentable.containedCharacteristics.getter(uint64_t a1)
{
  return sub_1DD404628(a1, (SEL *)&selRef_hf_containedCharacteristics, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (unint64_t *)&qword_1ED378390);
}

id HFAccessoryRepresentable.homeKitObject.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_homeKitObject);
}

uint64_t HFAccessoryRepresentable.associatedAccessories.getter(uint64_t a1)
{
  return sub_1DD404628(a1, (SEL *)&selRef_hf_associatedAccessories, &qword_1F03E46E0, 0x1E0CBA1A8, (unint64_t *)&unk_1F03E55B0);
}

uint64_t sub_1DD4044B0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v15;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1DD63E7B8())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v15 = v7;
      v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      v11 = v10;

      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t HFAccessoryRepresentable.containedServices.getter(uint64_t a1)
{
  return sub_1DD404628(a1, (SEL *)&selRef_hf_containedServices, (unint64_t *)&qword_1F03E41C0, 0x1E0CBA7E0, (unint64_t *)&qword_1F03E4AF0);
}

uint64_t HFAccessoryRepresentable.containedProfiles.getter(uint64_t a1)
{
  return sub_1DD404628(a1, (SEL *)&selRef_hf_containedProfiles, &qword_1F03E46F0, 0x1E0CBA2A0, &qword_1F03E48D8);
}

uint64_t sub_1DD404628(uint64_t a1, SEL *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  void *v5;
  id v8;
  uint64_t v9;

  v8 = objc_msgSend(v5, *a2);
  sub_1DD352AB0(0, a3);
  sub_1DD352A70(a5, a3);
  v9 = sub_1DD63E398();

  return v9;
}

id HFAccessoryRepresentable.room.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_safeRoom);
}

id HFAccessoryRepresentable.canSpanMultipleRooms.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_canSpanMultipleRooms);
}

id HFAccessoryRepresentable.canShowInControlCenter.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hf_canShowInControlCenter);
}

Swift::Bool __swiftcall HFAccessoryRepresentable.isIn(room:)(HMRoom room)
{
  void *v1;

  return objc_msgSend(v1, sel_hf_isInRoom_, room.super.isa);
}

uint64_t Sequence<>.contains(mediaProfiles:)()
{
  return sub_1DD63E1C4() & 1;
}

uint64_t sub_1DD404780(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t result;

  if (a2 >> 62)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1DD63E7B8())
      goto LABEL_3;
LABEL_8:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_8;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = (void *)MEMORY[0x1DF0DA2C0](0, a2);
  }
  else
  {
    v4 = *(void **)(a2 + 32);
    swift_unknownObjectRetain();
  }
  objc_msgSend(v4, sel_mediaProfiles);
  sub_1DD352AB0(0, &qword_1F03E4E20);
  sub_1DD352A70(&qword_1F03E4E28, &qword_1F03E4E20);
  result = sub_1DD63E38C();
  __break(1u);
  return result;
}

uint64_t sub_1DD404960(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD404780(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t Sequence<>.contains(services:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  v4[2] = a2;
  v4[3] = a3;
  return sub_1DD4044B0((uint64_t (*)(id *))sub_1DD4049C4, (uint64_t)v4, a1) & 1;
}

uint64_t sub_1DD4049C4()
{
  return sub_1DD63E1C4() & 1;
}

uint64_t sub_1DD404A08(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = HFAccessoryRepresentable.containedServices.getter(a1);
  LOBYTE(a2) = sub_1DD4054DC(a2, v3);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1DD404A5C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD404A08(a1, *(void **)(v1 + 16)) & 1;
}

void sub_1DD404A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, &qword_1F03E4E20);
    sub_1DD352A70(&qword_1F03E4E28, &qword_1F03E4E20);
    sub_1DD63E3F8();
    v1 = v33;
    v31 = v34;
    v2 = v35;
    v3 = v36;
    v4 = v37;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v6 = ~v5;
    v7 = -v5;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v2 = v6;
    v3 = 0;
  }
  v30 = (unint64_t)(v2 + 64) >> 6;
  v29 = v1;
  while (1)
  {
    v11 = v3;
    if (v1 < 0)
    {
      if (!sub_1DD63E614())
        goto LABEL_42;
      sub_1DD352AB0(0, &qword_1F03E4E20);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v38;
      v15 = (id)swift_unknownObjectRelease();
      if (!v38)
        goto LABEL_42;
      goto LABEL_32;
    }
    if (!v4)
      break;
    v12 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v13 = v12 | (v3 << 6);
LABEL_31:
    v15 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v13);
    v14 = v15;
    if (!v15)
      goto LABEL_42;
LABEL_32:
    v19 = HFAccessoryRepresentable.containedProfiles.getter((uint64_t)v15);
    v20 = v19;
    if ((v19 & 0xC000000000000001) != 0)
    {
      v9 = v14;
      v10 = sub_1DD63E620();
      swift_bridgeObjectRelease();

      if ((v10 & 1) != 0)
        goto LABEL_42;
    }
    else
    {
      v32 = v4;
      if (*(_QWORD *)(v19 + 16))
      {
        v21 = sub_1DD63E4DC();
        v22 = -1 << *(_BYTE *)(v20 + 32);
        v23 = v21 & ~v22;
        if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
        {
          sub_1DD352AB0(0, &qword_1F03E46F0);
          v24 = *(id *)(*(_QWORD *)(v20 + 48) + 8 * v23);
          v25 = sub_1DD63E4E8();

          if ((v25 & 1) != 0)
          {
LABEL_41:

            swift_bridgeObjectRelease();
LABEL_42:
            sub_1DD3DEBAC();
            return;
          }
          v26 = ~v22;
          while (1)
          {
            v23 = (v23 + 1) & v26;
            if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
              break;
            v27 = *(id *)(*(_QWORD *)(v20 + 48) + 8 * v23);
            v28 = sub_1DD63E4E8();

            if ((v28 & 1) != 0)
              goto LABEL_41;
          }
        }
      }

      swift_bridgeObjectRelease();
      v1 = v29;
      v4 = v32;
    }
  }
  v16 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v16 >= v30)
      goto LABEL_42;
    v17 = *(_QWORD *)(v31 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v11 + 2;
      if (v11 + 2 >= v30)
        goto LABEL_42;
      v17 = *(_QWORD *)(v31 + 8 * v3);
      if (!v17)
      {
        v3 = v11 + 3;
        if (v11 + 3 >= v30)
          goto LABEL_42;
        v17 = *(_QWORD *)(v31 + 8 * v3);
        if (!v17)
        {
          v3 = v11 + 4;
          if (v11 + 4 >= v30)
            goto LABEL_42;
          v17 = *(_QWORD *)(v31 + 8 * v3);
          if (!v17)
          {
            v3 = v11 + 5;
            if (v11 + 5 >= v30)
              goto LABEL_42;
            v17 = *(_QWORD *)(v31 + 8 * v3);
            if (!v17)
            {
              v18 = v11 + 6;
              while (v30 != v18)
              {
                v17 = *(_QWORD *)(v31 + 8 * v18++);
                if (v17)
                {
                  v3 = v18 - 1;
                  goto LABEL_30;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
    }
LABEL_30:
    v4 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t debug_assert(_:_:file:line:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = a1();
  if ((v4 & 1) == 0)
  {
    v5 = a3();
    v7 = v6;
    v8 = sub_1DD63E47C();
    sub_1DD3D3994();
    swift_bridgeObjectRetain();
    v9 = sub_1DD63E500();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v11 = 136315650;
      v12 = sub_1DD63E6D4();
      sub_1DD3C3160(v12, v13, &v16);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      sub_1DD63E53C();
      *(_WORD *)(v11 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_1DD3C3160(v5, v7, &v16);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DD34E000, v9, v10, "(%s:%lu) %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v15, -1, -1);
      MEMORY[0x1DF0DB358](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  return v4 & 1;
}

uint64_t sub_1DD4050BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _sSo21HFImageIconIdentifiera4HomeE8allCasesSayABGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t _sSo21HFImageIconIdentifiera4HomeE8allCasesSayABGvgZ_0()
{
  uint64_t v0;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  __CFString *v14;
  __CFString *v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  __CFString *v19;
  __CFString *v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  __CFString *v29;
  __CFString *v30;
  __CFString *v31;
  __CFString *v32;
  __CFString *v33;
  __CFString *v34;
  __CFString *v35;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4E40);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD668160;
  *(_QWORD *)(v0 + 32) = CFSTR("HFImageIconIdentifierServiceSensor");
  *(_QWORD *)(v0 + 40) = CFSTR("HFImageIconIdentifierService2Sensors");
  *(_QWORD *)(v0 + 48) = CFSTR("HFImageIconIdentifierService3Sensors");
  *(_QWORD *)(v0 + 56) = CFSTR("HFImageIconIdentifierService4Sensors");
  *(_QWORD *)(v0 + 64) = CFSTR("HFImageIconIdentifierService5Sensors");
  *(_QWORD *)(v0 + 72) = CFSTR("HFImageIconIdentifierService6Sensors");
  *(_QWORD *)(v0 + 80) = CFSTR("HFImageIconIdentifierWaterDroplet");
  *(_QWORD *)(v0 + 88) = CFSTR("HFImageIconIdentifierSceneArrivingHome");
  *(_QWORD *)(v0 + 96) = CFSTR("HFImageIconIdentifierSceneBreakfast");
  *(_QWORD *)(v0 + 104) = CFSTR("HFImageIconIdentifierSceneChillOut");
  *(_QWORD *)(v0 + 112) = CFSTR("HFImageIconIdentifierSceneCoffee");
  *(_QWORD *)(v0 + 120) = CFSTR("HFImageIconIdentifierSceneDinner");
  *(_QWORD *)(v0 + 128) = CFSTR("HFImageIconIdentifierSceneLeavingHome");
  *(_QWORD *)(v0 + 136) = CFSTR("HFImageIconIdentifierSceneMovie");
  *(_QWORD *)(v0 + 144) = CFSTR("HFImageIconIdentifierSceneParty");
  *(_QWORD *)(v0 + 152) = CFSTR("HFImageIconIdentifierSceneRomance");
  *(_QWORD *)(v0 + 160) = CFSTR("HFImageIconIdentifierSceneSleep");
  *(_QWORD *)(v0 + 168) = CFSTR("HFImageIconIdentifierSceneWakeUp");
  *(_QWORD *)(v0 + 176) = CFSTR("HFImageIconIdentifierTriggerTime");
  *(_QWORD *)(v0 + 184) = CFSTR("HFImageIconIdentifierTriggerLocation");
  *(_QWORD *)(v0 + 192) = CFSTR("HFImageIconIdentifierTriggerCharacteristic");
  *(_QWORD *)(v0 + 200) = CFSTR("HFImageIconIdentifierTriggerSensor");
  *(_QWORD *)(v0 + 208) = CFSTR("HFImageIconIdentifierMapLocationHome");
  *(_QWORD *)(v0 + 216) = CFSTR("HFImageIconIdentifierMapLocationMarker");
  *(_QWORD *)(v0 + 224) = CFSTR("HFImageIconIdentifierGeneric");
  *(_QWORD *)(v0 + 232) = CFSTR("HFImageIconIdentifierPlaceholder");
  *(_QWORD *)(v0 + 240) = CFSTR("HFImageIconIdentifierDecorationSwing");
  *(_QWORD *)(v0 + 248) = CFSTR("HFImageIconIdentifierSiriOrbRegular");
  *(_QWORD *)(v0 + 256) = CFSTR("HFImageIconIdentifierSiriOrbSmall");
  *(_QWORD *)(v0 + 264) = CFSTR("HFImageIconIdentifierHomeRegular");
  *(_QWORD *)(v0 + 272) = CFSTR("HFImageIconIdentifierHomeSmall");
  *(_QWORD *)(v0 + 280) = CFSTR("HFImageIconIdentifierNaturalLightingRegular");
  *(_QWORD *)(v0 + 288) = CFSTR("HFImageIconIdentifierNaturalLightingSmall");
  *(_QWORD *)(v0 + 296) = CFSTR("HFImageIconIdentifierSetupBannerDisclosure");
  *(_QWORD *)(v0 + 304) = CFSTR("HFImageIconIdentifierSeparatorArrow");
  v1 = CFSTR("HFImageIconIdentifierServiceSensor");
  v2 = CFSTR("HFImageIconIdentifierService2Sensors");
  v3 = CFSTR("HFImageIconIdentifierService3Sensors");
  v4 = CFSTR("HFImageIconIdentifierService4Sensors");
  v5 = CFSTR("HFImageIconIdentifierService5Sensors");
  v6 = CFSTR("HFImageIconIdentifierService6Sensors");
  v7 = CFSTR("HFImageIconIdentifierWaterDroplet");
  v8 = CFSTR("HFImageIconIdentifierSceneArrivingHome");
  v9 = CFSTR("HFImageIconIdentifierSceneBreakfast");
  v10 = CFSTR("HFImageIconIdentifierSceneChillOut");
  v11 = CFSTR("HFImageIconIdentifierSceneCoffee");
  v12 = CFSTR("HFImageIconIdentifierSceneDinner");
  v13 = CFSTR("HFImageIconIdentifierSceneLeavingHome");
  v14 = CFSTR("HFImageIconIdentifierSceneMovie");
  v15 = CFSTR("HFImageIconIdentifierSceneParty");
  v16 = CFSTR("HFImageIconIdentifierSceneRomance");
  v17 = CFSTR("HFImageIconIdentifierSceneSleep");
  v18 = CFSTR("HFImageIconIdentifierSceneWakeUp");
  v19 = CFSTR("HFImageIconIdentifierTriggerTime");
  v20 = CFSTR("HFImageIconIdentifierTriggerLocation");
  v21 = CFSTR("HFImageIconIdentifierTriggerCharacteristic");
  v22 = CFSTR("HFImageIconIdentifierTriggerSensor");
  v23 = CFSTR("HFImageIconIdentifierMapLocationHome");
  v24 = CFSTR("HFImageIconIdentifierMapLocationMarker");
  v25 = CFSTR("HFImageIconIdentifierGeneric");
  v26 = CFSTR("HFImageIconIdentifierPlaceholder");
  v27 = CFSTR("HFImageIconIdentifierDecorationSwing");
  v28 = CFSTR("HFImageIconIdentifierSiriOrbRegular");
  v29 = CFSTR("HFImageIconIdentifierSiriOrbSmall");
  v30 = CFSTR("HFImageIconIdentifierHomeRegular");
  v31 = CFSTR("HFImageIconIdentifierHomeSmall");
  v32 = CFSTR("HFImageIconIdentifierNaturalLightingRegular");
  v33 = CFSTR("HFImageIconIdentifierNaturalLightingSmall");
  v34 = CFSTR("HFImageIconIdentifierSetupBannerDisclosure");
  v35 = CFSTR("HFImageIconIdentifierSeparatorArrow");
  return v0;
}

unint64_t sub_1DD405490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E4E30;
  if (!qword_1F03E4E30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03E4E38);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E4E30);
  }
  return result;
}

uint64_t sub_1DD4054DC(void *a1, uint64_t a2)
{
  return sub_1DD352AE8(a1, a2, (unint64_t *)&qword_1F03E41C0);
}

uint64_t DataModel.home(_:didWriteValuesFor:failedCharacteristics:)()
{
  return sub_1DD63D8DC();
}

uint64_t sub_1DD4054F8(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
  sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
  sub_1DD63E398();
  v5 = a3;
  v6 = a1;
  sub_1DD63D8DC();

  return swift_bridgeObjectRelease();
}

uint64_t DataModel.home(_:willReadValuesFor:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((a2 & 0xC000000000000001) != 0)
  {
    result = sub_1DD63E5E4();
    if (result < 1)
      return result;
    return sub_1DD63D8DC();
  }
  result = *(_QWORD *)(a2 + 16);
  if (result >= 1)
    return sub_1DD63D8DC();
  return result;
}

uint64_t DataModel.home(_:didReadValuesFor:failedCharacteristics:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3D3FA0(a2, a3);
}

Swift::Void __swiftcall DataModel.didUpdate(toInstallingState:for:)(Swift::Bool toInstallingState, HMAccessory *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t);
  NSUUID *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_1DD63D7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DD63DBF4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if (-[HMAccessory supportsCHIP](a2, sel_supportsCHIP))
  {
    v15 = (unsigned int *)MEMORY[0x1E0D328E0];
  }
  else
  {
    v16 = *MEMORY[0x1E0D328C0];
    v17 = sub_1DD63DBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
    v15 = (unsigned int *)MEMORY[0x1E0D328D8];
  }
  v18 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v18(v14, *v15, v8);
  v19 = -[HMAccessory uniqueIdentifier](a2, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  if (toInstallingState)
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  else
    v18(v12, *MEMORY[0x1E0D328D0], v8);
  sub_1DD63D8C4();
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20(v14, v8);
}

void sub_1DD4057D8(void *a1, uint64_t a2, Swift::Bool a3, void *a4)
{
  HMAccessory *v6;
  id v7;

  v6 = a4;
  v7 = a1;
  DataModel.didUpdate(toInstallingState:for:)(a3, v6);

}

uint64_t HMHome.notifyHomeObserversOfChanged(for:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1DD63E2E4();
  v7 = v1;
  swift_bridgeObjectRetain();
  v8 = sub_1DD63E2D8();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x1E0DF06E8];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  v9[5] = a1;
  sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4E50, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1DD405924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  sub_1DD63E2E4();
  v5[10] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD405990()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = v0[9];
  v2 = (void *)v0[8];
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v0[6] = sub_1DD40626C;
  v0[7] = v4;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1DD3D3B04;
  v0[5] = &block_descriptor_24;
  v5 = _Block_copy(v0 + 2);
  v6 = v2;
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v3, sel_dispatchHomeObserverMessage_sender_, v5, 0);
  _Block_release(v5);

  return ((uint64_t (*)(void))v0[1])();
}

void sub_1DD405A90(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_home_didWriteValuesForCharacteristics_failedCharacteristics_) & 1) != 0)
  {
    swift_unknownObjectRetain();
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
    {
      if (sub_1DD63E7B8())
        sub_1DD3EBDA4(MEMORY[0x1E0DEE9D8]);
    }
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD352A70((unint64_t *)&qword_1ED378390, (unint64_t *)&qword_1ED378380);
    v4 = (void *)sub_1DD63E380();
    v5 = (id)sub_1DD63E380();
    objc_msgSend(a1, sel_home_didWriteValuesForCharacteristics_failedCharacteristics_, a2, v4, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

  }
}

Swift::Void __swiftcall HMHome.notifyHomeObserversOfNewRoom(_:)(HMRoom a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1DD63E2E4();
  v7 = v1;
  v8 = a1.super.isa;
  v9 = sub_1DD63E2D8();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v7;
  v10[5] = v8;
  sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4E60, (uint64_t)v10);
  swift_release();
}

uint64_t sub_1DD405CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  sub_1DD63E2E4();
  v5[10] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD405D3C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v1 = (void *)v0[9];
  v2 = (void *)v0[8];
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v0[6] = sub_1DD4061E0;
  v0[7] = v4;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1DD3D3B04;
  v0[5] = &block_descriptor_2;
  v5 = _Block_copy(v0 + 2);
  v6 = v2;
  v7 = v1;
  swift_release();
  objc_msgSend(v3, sel_dispatchHomeObserverMessage_sender_, v5, 0);
  _Block_release(v5);

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1DD405E38(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1DD63E2E4();
  v8 = v6;
  swift_bridgeObjectRetain();
  v9 = sub_1DD63E2D8();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v8;
  v10[5] = a1;
  sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4ED8, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1DD405F20(void *a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1DD63E2E4();
  v8 = v6;
  v9 = a1;
  v10 = sub_1DD63E2D8();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v8;
  v11[5] = v9;
  sub_1DD3D883C((uint64_t)v5, (uint64_t)&unk_1F03E4ED0, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1DD40600C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DD3DED78;
  return sub_1DD405924(a1, v4, v5, v7, v6);
}

uint64_t sub_1DD406088(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DD3DED78;
  return sub_1DD405CD0(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DD40613C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DD3DE5EC;
  return sub_1DD405924(a1, v4, v5, v7, v6);
}

uint64_t sub_1DD4061B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DD4061E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  result = objc_msgSend(a1, sel_respondsToSelector_, sel_home_didAddRoom_);
  if ((result & 1) != 0)
    return objc_msgSend(a1, sel_home_didAddRoom_, v3, v4);
  return result;
}

uint64_t sub_1DD406240()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DD40626C(void *a1)
{
  uint64_t v1;

  sub_1DD405A90(a1, *(_QWORD *)(v1 + 16));
}

void *sub_1DD40627C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_1DD406544(a1, a2, a3);
}

uint64_t sub_1DD406290@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;

  v30 = a1;
  v27 = a3;
  v5 = sub_1DD63DA50();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  v12 = *(_QWORD *)(a2 + 56);
  v28 = a2 + 56;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v29 = (unint64_t)(v13 + 63) >> 6;
  v31 = a2;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    v24 = v30(v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v27;
      v23(v27, v9, v5);
      v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
      break;
    if (v17 >= v29)
      goto LABEL_28;
    v21 = *(_QWORD *)(v28 + 8 * v17);
    if (!v21)
    {
      v22 = v17 + 1;
      if (v17 + 1 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 2;
      if (v17 + 2 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 3;
      if (v17 + 3 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
      {
LABEL_16:
        v17 = v22;
        goto LABEL_17;
      }
      v22 = v17 + 4;
      if (v17 + 4 < v29)
      {
        v21 = *(_QWORD *)(v28 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v17 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_31;
            if (v17 >= v29)
              goto LABEL_28;
            v21 = *(_QWORD *)(v28 + 8 * v17);
            ++v22;
            if (v21)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v25 = v27;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1DD406544(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1DD63E7B8())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF0DA2C0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t HFEvent.date.getter()
{
  return sub_1DD406688((void (*)(uint64_t, uint64_t))MEMORY[0x1E0D32E48]);
}

uint64_t HFEvent.homeIdentifier.getter()
{
  return sub_1DD406688((void (*)(uint64_t, uint64_t))MEMORY[0x1E0D32E40]);
}

uint64_t HFEvent.category.getter()
{
  return sub_1DD406688(MEMORY[0x1E0D32E50]);
}

uint64_t sub_1DD406688(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_1DD63DE10();
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  a1(v2, v3);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
}

uint64_t HFEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v16[4];

  v2 = v1;
  v4 = sub_1DD63DE34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DD63DD68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x1E0D33128])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1DD63DD5C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1DD63DDB0();
    v12 = sub_1DD63D7C8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 0, 1, v12);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v14 = sub_1DD63D7C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

uint64_t HFEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v29 = a1;
  v27 = sub_1DD63DD68();
  v2 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DD63DE34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - v13;
  v15 = *(int *)(type metadata accessor for HFEvent() + 20);
  v28 = v1;
  sub_1DD3A08FC(v1 + v15, (uint64_t)v14);
  v16 = sub_1DD63D7C8();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    v26 = v12;
    v18 = v27;
    sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    v20 = v29;
    if (v19 == *MEMORY[0x1E0D33128])
    {
      (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
      v21 = v4;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v18);
      sub_1DD63DD5C();
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      v22 = (uint64_t)v26;
      sub_1DD63DDA4();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    }
    else
    {
      v22 = (uint64_t)v26;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v26, 1, 1, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return sub_1DD406B68(v22, v20);
  }
  else
  {
    v23 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v29, v14, v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
  }
}

uint64_t type metadata accessor for HFEvent()
{
  uint64_t result;

  result = qword_1F03E5028;
  if (!qword_1F03E5028)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD406B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DD406BB0()
{
  qword_1F03ED400 = 0x4072C00000000000;
}

uint64_t sub_1DD406BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t (*v50)(char *, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void);
  char *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t (*v72)(uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  void (*v98)(char *, uint64_t);
  void (*v99)(char *, char *, uint64_t);
  uint64_t *v100;
  void (*v101)(char *, uint64_t);
  void (*v102)(char *, _QWORD);
  char *v103;
  uint64_t *v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  void (*v112)(char *, uint64_t);
  BOOL v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  void (*v127)(char *, uint64_t);
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v2 = v1;
  v161 = a1;
  v134 = sub_1DD63DC84();
  v135 = *(_QWORD *)(v134 - 8);
  v3 = MEMORY[0x1E0C80A78](v134);
  v130 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v129 = (char *)&v123 - v5;
  v136 = sub_1DD63DD8C();
  v140 = *(_QWORD *)(v136 - 8);
  v6 = MEMORY[0x1E0C80A78](v136);
  v133 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v132 = (char *)&v123 - v8;
  v141 = sub_1DD63DE04();
  v144 = *(_QWORD *)(v141 - 8);
  v9 = MEMORY[0x1E0C80A78](v141);
  v139 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v138 = (char *)&v123 - v11;
  v145 = sub_1DD63DCD8();
  v148 = *(_QWORD *)(v145 - 8);
  v12 = MEMORY[0x1E0C80A78](v145);
  v143 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v142 = (char *)&v123 - v14;
  v15 = sub_1DD63DDE0();
  v150 = *(_QWORD *)(v15 - 8);
  v151 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v147 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v146 = (char *)&v123 - v18;
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5068);
  MEMORY[0x1E0C80A78](v152);
  v153 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DD63D7C8();
  v156 = *(_QWORD *)(v20 - 8);
  v157 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v155 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v154 = (char *)&v123 - v23;
  v24 = sub_1DD63DE34();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v160 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v123 - v28;
  v30 = sub_1DD63DD68();
  v31 = *(_QWORD *)(v30 - 8);
  v158 = v30;
  v159 = v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v131 = (char *)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v137 = (char *)&v123 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v123 - v37;
  v39 = MEMORY[0x1E0C80A78](v36);
  v41 = (char *)&v123 - v40;
  v42 = MEMORY[0x1E0C80A78](v39);
  v44 = (char *)&v123 - v43;
  v45 = MEMORY[0x1E0C80A78](v42);
  v47 = (char *)&v123 - v46;
  MEMORY[0x1E0C80A78](v45);
  v162 = (char *)&v123 - v48;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v149 = v2;
  v49(v29, v2, v24);
  v50 = *(uint64_t (**)(char *, uint64_t))(v25 + 88);
  v51 = v50(v29, v24);
  if (v51 == *MEMORY[0x1E0D33128])
  {
    v52 = v51;
    v126 = v44;
    v125 = v41;
    v124 = v38;
    v128 = v47;
    v127 = *(void (**)(char *, uint64_t))(v25 + 96);
    v127(v29, v24);
    v53 = v158;
    v54 = v159;
    v55 = *(void (**)(void))(v159 + 32);
    v56 = v162;
    v55();
    v29 = v160;
    v49(v160, v161, v24);
    if (v50(v29, v24) == v52)
    {
      v57 = (_QWORD *)v54;
      v127(v29, v24);
      v58 = v128;
      ((void (*)(char *, char *, uint64_t))v55)(v128, v29, v53);
      v59 = v58;
      sub_1DD63DD5C();
      v60 = v53;
      __swift_project_boxed_opaque_existential_1(&v163, v164);
      v61 = v154;
      sub_1DD63DDB0();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v163);
      sub_1DD63DD5C();
      __swift_project_boxed_opaque_existential_1(&v163, v164);
      v62 = v155;
      sub_1DD63DDB0();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v163);
      v63 = sub_1DD63D798();
      v64 = *(void (**)(char *, uint64_t))(v156 + 8);
      v65 = v62;
      v66 = v157;
      v64(v65, v157);
      v64(v61, v66);
      v67 = v56;
      if ((v63 & 1) == 0)
      {
        v84 = (void (*)(char *, uint64_t))v57[1];
        v84(v59, v60);
        v87 = (uint64_t)v56;
        v88 = v60;
        return ((uint64_t (*)(uint64_t, uint64_t))v84)(v87, v88);
      }
      v68 = (uint64_t)v153;
      v69 = &v153[*(int *)(v152 + 48)];
      v70 = v57;
      v71 = (void (*)(char *, char *, uint64_t))v57[2];
      v71(v153, v67, v60);
      v71(v69, v59, v60);
      v72 = (uint64_t (*)(uint64_t, uint64_t))v70[11];
      v73 = v72(v68, v60);
      v74 = v73;
      v75 = v60;
      if (v73 == *MEMORY[0x1E0D32F78])
      {
        v76 = v126;
        v71(v126, (char *)v68, v75);
        v77 = (void (*)(char *, uint64_t))v70[12];
        v77(v76, v75);
        if (v72((uint64_t)v69, v75) == v74)
        {
          v77(v69, v75);
          v79 = v150;
          v78 = v151;
          v80 = *(void (**)(char *, char *, uint64_t))(v150 + 32);
          v81 = (uint64_t)v146;
          v80(v146, v76, v151);
          v82 = (uint64_t)v147;
          v80(v147, v69, v78);
          sub_1DD407778(v81, v82);
          v83 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
          v83(v82, v78);
          v83(v81, v78);
          v84 = (void (*)(char *, uint64_t))v70[1];
          v84(v59, v75);
          v85 = v162;
LABEL_25:
          v84(v85, v75);
          v87 = v68;
          v88 = v75;
          return ((uint64_t (*)(uint64_t, uint64_t))v84)(v87, v88);
        }
        v96 = (void (*)(char *, uint64_t))v70[1];
        v96(v59, v75);
        v96(v67, v75);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v151);
        return sub_1DD3540B8(v68, &qword_1F03E5068);
      }
      if (v73 == *MEMORY[0x1E0D32F58])
      {
        v89 = v125;
        v71(v125, (char *)v68, v75);
        v90 = (void (*)(char *, uint64_t))v70[12];
        v90(v89, v75);
        if (v72((uint64_t)v69, v75) == v74)
        {
          v90(v69, v75);
          v91 = *(void (**)(char *, char *, uint64_t))(v148 + 32);
          v92 = (uint64_t)v142;
          v93 = v145;
          v91(v142, v89, v145);
          v94 = (uint64_t)v143;
          v91(v143, v69, v93);
          sub_1DD40793C(v92, v94);
          v95 = v148;
LABEL_23:
          v108 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
          v108(v94, v93);
          v109 = v92;
LABEL_24:
          v108(v109, v93);
          v84 = (void (*)(char *, uint64_t))v70[1];
          v84(v59, v75);
          v85 = v67;
          goto LABEL_25;
        }
        v101 = (void (*)(char *, uint64_t))v70[1];
        v101(v59, v75);
        v101(v67, v75);
        v102 = *(void (**)(char *, _QWORD))(v148 + 8);
        v103 = v89;
        v104 = &v169;
        goto LABEL_33;
      }
      if (v73 == *MEMORY[0x1E0D32F80])
      {
        v97 = v124;
        v71(v124, (char *)v68, v75);
        v98 = (void (*)(char *, uint64_t))v70[12];
        v98(v97, v75);
        if (v72((uint64_t)v69, v75) == v74)
        {
          v98(v69, v75);
          v99 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
          v92 = (uint64_t)v138;
          v93 = v141;
          v99(v138, v97, v141);
          v94 = (uint64_t)v139;
          v99(v139, v69, v93);
          sub_1DD407B3C(v92, v94);
          v100 = &v168;
LABEL_22:
          v95 = *(v100 - 32);
          goto LABEL_23;
        }
        v110 = (void (*)(char *, uint64_t))v70[1];
        v110(v59, v75);
        v110(v67, v75);
        v102 = *(void (**)(char *, _QWORD))(v144 + 8);
        v103 = v97;
        v104 = &v167;
      }
      else
      {
        if (v73 != *MEMORY[0x1E0D32F70])
        {
          if (v73 == *MEMORY[0x1E0D32F88])
          {
            v111 = v131;
            v71(v131, (char *)v68, v75);
            v112 = (void (*)(char *, uint64_t))v70[12];
            v112(v111, v75);
            v113 = v72((uint64_t)v69, v75) == v74;
            v93 = v134;
            v114 = v135;
            if (v113)
            {
              v112(v69, v75);
              v115 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
              v116 = v111;
              v117 = (uint64_t)v129;
              v115(v129, v116, v93);
              v118 = (uint64_t)v130;
              v115(v130, v69, v93);
              sub_1DD407EEC(v117, v118);
              v108 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
              v108(v118, v93);
              v109 = v117;
              goto LABEL_24;
            }
            v121 = v135;
            v122 = (void (*)(char *, uint64_t))v70[1];
            v122(v59, v75);
            v122(v67, v75);
            (*(void (**)(char *, uint64_t))(v121 + 8))(v111, v93);
          }
          else
          {
            v120 = (void (*)(char *, uint64_t))v70[1];
            v120(v59, v60);
            v120(v67, v60);
          }
          return sub_1DD3540B8(v68, &qword_1F03E5068);
        }
        v105 = v137;
        v71(v137, (char *)v68, v75);
        v106 = (void (*)(char *, uint64_t))v70[12];
        v106(v105, v75);
        if (v72((uint64_t)v69, v75) == v74)
        {
          v106(v69, v75);
          v107 = *(void (**)(char *, char *, uint64_t))(v140 + 32);
          v92 = (uint64_t)v132;
          v93 = v136;
          v107(v132, v105, v136);
          v94 = (uint64_t)v133;
          v107(v133, v69, v93);
          sub_1DD407D00(v92, v94);
          v100 = &v166;
          goto LABEL_22;
        }
        v119 = (void (*)(char *, uint64_t))v70[1];
        v119(v59, v75);
        v119(v67, v75);
        v102 = *(void (**)(char *, _QWORD))(v140 + 8);
        v103 = v105;
        v104 = (uint64_t *)&v165;
      }
LABEL_33:
      v102(v103, *(v104 - 32));
      return sub_1DD3540B8(v68, &qword_1F03E5068);
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v24);
}

uint64_t sub_1DD407778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  int v19;
  int v20;
  _DWORD *v21;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5070);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63DDC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  sub_1DD63DDD4();
  sub_1DD63DDD4();
  v16 = &v8[*(int *)(v6 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v8, v15, v9);
  v17(v16, v13, v9);
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v19 = v18(v8, v9);
  if (v19 == *MEMORY[0x1E0D33048])
  {
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D33060];
  }
  else
  {
    if (v19 != *MEMORY[0x1E0D33050])
      return sub_1DD3540B8((uint64_t)v8, &qword_1F03E5070);
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D33058];
  }
  if (v20 == *v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return sub_1DD40A008(a1, a2, v3, 30.0);
  }
  return sub_1DD3540B8((uint64_t)v8, &qword_1F03E5070);
}

uint64_t sub_1DD40793C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  int v19;
  double v20;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5088);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63DCC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  sub_1DD63DCCC();
  sub_1DD63DCCC();
  v16 = &v8[*(int *)(v6 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v8, v15, v9);
  v17(v16, v13, v9);
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v19 = v18(v8, v9);
  if (v19 == *MEMORY[0x1E0D32E60])
  {
    if (v18(v16, v9) == *MEMORY[0x1E0D32E78])
    {
      v20 = 30.0;
LABEL_9:
      sub_1DD40A35C(a1, a2, v3, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else if (v19 == *MEMORY[0x1E0D32E68] && v18(v16, v9) == *MEMORY[0x1E0D32E70])
  {
    if (qword_1F03E37D8 != -1)
      swift_once();
    v20 = *(double *)&qword_1F03ED400;
    goto LABEL_9;
  }
  return sub_1DD3540B8((uint64_t)v8, &qword_1F03E5088);
}

uint64_t sub_1DD407B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  int v19;
  int v20;
  _DWORD *v21;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E50A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63DDEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  sub_1DD63DDF8();
  sub_1DD63DDF8();
  v16 = &v8[*(int *)(v6 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v8, v15, v9);
  v17(v16, v13, v9);
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v19 = v18(v8, v9);
  if (v19 == *MEMORY[0x1E0D330C8])
  {
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D330D0];
  }
  else
  {
    if (v19 != *MEMORY[0x1E0D330B0])
      return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50A0);
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D330B8];
  }
  if (v20 == *v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return sub_1DD40A668(a1, a2, v3, 30.0);
  }
  return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50A0);
}

uint64_t sub_1DD407D00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  int v19;
  int v20;
  _DWORD *v21;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E50B8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63DD74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  sub_1DD63DD80();
  sub_1DD63DD80();
  v16 = &v8[*(int *)(v6 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v8, v15, v9);
  v17(v16, v13, v9);
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v19 = v18(v8, v9);
  if (v19 == *MEMORY[0x1E0D32FC0])
  {
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D32FD0];
  }
  else
  {
    if (v19 != *MEMORY[0x1E0D32FC8] && v19 != *MEMORY[0x1E0D32FA0] && v19 != *MEMORY[0x1E0D32FD8])
      return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50B8);
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D32FA8];
  }
  if (v20 == *v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return sub_1DD40A974(a1, a2, v3, 30.0);
  }
  return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50B8);
}

uint64_t sub_1DD407EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  int v19;
  int v20;
  _DWORD *v21;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E50D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63DC6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  sub_1DD63DC78();
  sub_1DD63DC78();
  v16 = &v8[*(int *)(v6 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v8, v15, v9);
  v17(v16, v13, v9);
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v19 = v18(v8, v9);
  if (v19 == *MEMORY[0x1E0D32DA0])
  {
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D32DB8];
  }
  else
  {
    if (v19 != *MEMORY[0x1E0D32DA8])
      return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50D0);
    v20 = v18(v16, v9);
    v21 = (_DWORD *)MEMORY[0x1E0D32DB0];
  }
  if (v20 == *v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return sub_1DD40AC80(a1, a2, v3, 30.0);
  }
  return sub_1DD3540B8((uint64_t)v8, &qword_1F03E50D0);
}

uint64_t HFEvent.hashValue.getter()
{
  sub_1DD63E908();
  _s4Home7HFEventV4hash4intoys6HasherVz_tF_0();
  return sub_1DD63E938();
}

uint64_t sub_1DD4080F8()
{
  sub_1DD63E908();
  _s4Home7HFEventV4hash4intoys6HasherVz_tF_0();
  return sub_1DD63E938();
}

uint64_t sub_1DD408138()
{
  sub_1DD63E908();
  _s4Home7HFEventV4hash4intoys6HasherVz_tF_0();
  return sub_1DD63E938();
}

id HFEvent.home.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v10[4];

  v0 = sub_1DD63D7C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v5 = objc_msgSend(v4, sel_homeManager);

  if (!v5)
    return 0;
  sub_1DD63DE10();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_1DD63DCA8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  v6 = (void *)sub_1DD63D78C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = objc_msgSend(v5, sel_hf_homeWithIdentifier_, v6);

  return v7;
}

id HFEvent.room.getter()
{
  return sub_1DD4082D0(MEMORY[0x1E0D33020], (SEL *)&selRef_hf_roomWithIdentifier_);
}

id HFEvent.accessory.getter()
{
  return sub_1DD4082D0((void (*)(uint64_t, uint64_t))MEMORY[0x1E0D33030], (SEL *)&selRef_hf_accessoryWithIdentifier_);
}

id sub_1DD4082D0(void (*a1)(uint64_t, uint64_t), SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  SEL *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v23 = a1;
  v24 = a2;
  v3 = sub_1DD63D7C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63DE34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63DD68();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x1E0D33128])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v15 = HFEvent.home.getter();
    if (v15)
    {
      v16 = v15;
      sub_1DD63DD5C();
      v17 = v26;
      v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      v23(v17, v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      v19 = (void *)sub_1DD63D78C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v20 = objc_msgSend(v16, *v24, v19);

    }
    else
    {
      v20 = 0;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  return v20;
}

void *HFEvent.user.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v1 = HFEvent.home.getter();
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_hf_allUsersIncludingCurrentUser);

    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E4FA0);
    v4 = sub_1DD63E1F4();

    MEMORY[0x1E0C80A78](v5);
    v7[2] = v0;
    v2 = sub_1DD406544(sub_1DD4088B0, (uint64_t)v7, v4);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DD4085AC(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t *v21;
  char v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;

  v2 = sub_1DD63D7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v26 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - v15;
  v17 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
  HFEvent.userIdentifier.getter((uint64_t)v14);
  v18 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1DD3A08FC((uint64_t)v16, (uint64_t)v7);
  sub_1DD3A08FC((uint64_t)v14, v18);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v19((uint64_t)v7, 1, v2) == 1)
  {
    sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
    sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
    v20 = v19(v18, 1, v2);
    if (v20 == 1)
      v21 = (uint64_t *)&unk_1F03E47E0;
    else
      v21 = &qword_1F03E47D8;
    if (v20 == 1)
      v22 = -1;
    else
      v22 = 0;
  }
  else
  {
    sub_1DD3A08FC((uint64_t)v7, (uint64_t)v11);
    if (v19(v18, 1, v2) == 1)
    {
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      v22 = 0;
      v21 = &qword_1F03E47D8;
    }
    else
    {
      v23 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v27, v18, v2);
      sub_1DD353504((unint64_t *)&qword_1F03E4128, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v22 = sub_1DD63E110();
      v24 = *(void (**)(char *, uint64_t))(v3 + 8);
      v24(v23, v2);
      v21 = (uint64_t *)&unk_1F03E47E0;
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      v24(v11, v2);
    }
  }
  sub_1DD3540B8((uint64_t)v7, v21);
  return v22 & 1;
}

uint64_t sub_1DD4088B0(id *a1)
{
  return sub_1DD4085AC(a1) & 1;
}

void *HFEvent.guestUser.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[6];

  v1 = HFEvent.home.getter();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v4 = objc_msgSend(v3, sel_pinCodeManagerForHome_, v2);

  v5 = objc_msgSend(v4, sel_guestUserInformation);
  sub_1DD352AB0(0, &qword_1F03E4FA8);
  v6 = sub_1DD63E1F4();

  MEMORY[0x1E0C80A78](v7);
  v10[2] = v0;
  v8 = sub_1DD406544(sub_1DD408D00, (uint64_t)v10, v6);
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1DD4089F0(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t *v23;
  char v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v2 = sub_1DD63D7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E47D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v28 - v15;
  v17 = objc_msgSend(*a1, sel_labelIdentifier);
  if (v17)
  {
    v18 = v17;
    sub_1DD63D7A4();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, v19, 1, v2);
  HFEvent.userIdentifier.getter((uint64_t)v14);
  v20 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1DD3A08FC((uint64_t)v16, (uint64_t)v7);
  sub_1DD3A08FC((uint64_t)v14, v20);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v7, 1, v2) == 1)
  {
    sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
    sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
    v22 = v21(v20, 1, v2);
    if (v22 == 1)
      v23 = (uint64_t *)&unk_1F03E47E0;
    else
      v23 = &qword_1F03E47D8;
    if (v22 == 1)
      v24 = -1;
    else
      v24 = 0;
  }
  else
  {
    sub_1DD3A08FC((uint64_t)v7, (uint64_t)v11);
    if (v21(v20, 1, v2) == 1)
    {
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      v24 = 0;
      v23 = &qword_1F03E47D8;
    }
    else
    {
      v25 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v29, v20, v2);
      sub_1DD353504((unint64_t *)&qword_1F03E4128, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v24 = sub_1DD63E110();
      v26 = *(void (**)(char *, uint64_t))(v3 + 8);
      v26(v25, v2);
      v23 = (uint64_t *)&unk_1F03E47E0;
      sub_1DD3540B8((uint64_t)v14, (uint64_t *)&unk_1F03E47E0);
      sub_1DD3540B8((uint64_t)v16, (uint64_t *)&unk_1F03E47E0);
      v26(v11, v2);
    }
  }
  sub_1DD3540B8((uint64_t)v7, v23);
  return v24 & 1;
}

uint64_t sub_1DD408D00(id *a1)
{
  return sub_1DD4089F0(a1) & 1;
}

uint64_t HFEvent.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v44[2];
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v1 = sub_1DD63D708();
  v52 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v51 = (uint64_t)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DD63D768();
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1DD63D7C8();
  v48 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63DD68();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DD63DE34();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v0, v15);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  v20 = *MEMORY[0x1E0D33128];
  v53 = v1;
  if (v19 == v20)
  {
    v46 = v6;
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v44[0] = v11;
    v21(v14, v18, v11);
    v57 = 0;
    v58 = 0xE000000000000000;
    v44[1] = v0;
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    sub_1DD63DCA8();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v22 = sub_1DD63D780();
    v24 = v23;
    v25 = v48;
    v26 = *(void (**)(char *, uint64_t))(v48 + 8);
    v27 = v54;
    v26(v10, v54);
    swift_bridgeObjectRelease();
    v57 = v22;
    v58 = v24;
    sub_1DD63E188();
    sub_1DD63DD5C();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    sub_1DD63DDB0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    sub_1DD63D780();
    v26(v10, v27);
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    sub_1DD63E188();
    v45 = v14;
    sub_1DD63DD5C();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v28 = (uint64_t)v47;
    sub_1DD63DDA4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v28, 1, v27);
    v30 = v49;
    v31 = v44[0];
    if (v29 == 1)
    {
      sub_1DD3540B8(v28, (uint64_t *)&unk_1F03E47E0);
      v32 = 0;
      v33 = 0;
    }
    else
    {
      v32 = sub_1DD63D780();
      v33 = v39;
      v26((char *)v28, v54);
    }
    v55[0] = v32;
    v55[1] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782F8);
    sub_1DD63E164();
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    sub_1DD63E188();
    v40 = v31;
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v41 = v46;
    sub_1DD63DCB4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v42 = v51;
    sub_1DD40932C(v51);
    sub_1DD63D6B4();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v42, v53);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v30);
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    sub_1DD63E188();
    HFEvent.stateDescription.getter();
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    v38 = v57;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v45, v40);
  }
  else
  {
    v57 = 0;
    v58 = 0xE000000000000000;
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    sub_1DD63DCA8();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v34 = sub_1DD63D780();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v54);
    swift_bridgeObjectRelease();
    v57 = v34;
    v58 = v36;
    sub_1DD63E188();
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v55, v56);
    sub_1DD63DCB4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v37 = v51;
    sub_1DD40932C(v51);
    sub_1DD63D6B4();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v37, v53);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v49);
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    sub_1DD63E188();
    HFEvent.stateDescription.getter();
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    v38 = v57;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v38;
}

uint64_t sub_1DD40932C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378550);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DD63D87C();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DD63D6FC();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DD63D6E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DD63D6CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DD63D6D8();
  MEMORY[0x1E0C80A78](v16);
  (*(void (**)(char *, _QWORD))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0CB05F0]);
  v19 = v12;
  v20 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CB05E0], v19);
  v21 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v22 = v29;
  v21(v11, *MEMORY[0x1E0CB0600], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CB0628], v28);
  sub_1DD63D864();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v3, 1, v22);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v3, v22);
    return sub_1DD63D6F0();
  }
  return result;
}

uint64_t sub_1DD4095A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HFEvent.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t HFEvent.EventType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void *static HFEvent.EventType.allCases.getter()
{
  return &unk_1EA723AF0;
}

uint64_t HFEvent.EventType.rawValue.getter()
{
  return 0;
}

uint64_t sub_1DD4095E8()
{
  return 1;
}

uint64_t sub_1DD4095F0()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

uint64_t sub_1DD409630()
{
  return sub_1DD63E914();
}

uint64_t sub_1DD409654()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

_QWORD *sub_1DD409690@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_1DD4096A4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1EA723B18;
}

uint64_t sub_1DD4096B8()
{
  return sub_1DD353504(&qword_1F03E4FB0, (uint64_t (*)(uint64_t))type metadata accessor for HFEvent, (uint64_t)&protocol conformance descriptor for HFEvent);
}

uint64_t sub_1DD4096E4()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1DD4096F4()
{
  unint64_t result;

  result = qword_1F03E4FB8;
  if (!qword_1F03E4FB8)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HFEvent.EventType, &type metadata for HFEvent.EventType);
    atomic_store(result, (unint64_t *)&qword_1F03E4FB8);
  }
  return result;
}

unint64_t sub_1DD40973C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E4FC0;
  if (!qword_1F03E4FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03E4FC8);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E4FC0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HFEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DD63DE34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DD63D7C8();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for HFEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DD63D7C8();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for HFEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for HFEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for HFEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for HFEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HFEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DD409D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1DD63DE34();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HFEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DD409DB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1DD63DE34();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DD409E38()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DD63DE34();
  if (v0 <= 0x3F)
  {
    sub_1DD409EBC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1DD409EBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03E5038[0])
  {
    sub_1DD63D7C8();
    v0 = sub_1DD63E524();
    if (!v1)
      atomic_store(v0, qword_1F03E5038);
  }
}

uint64_t getEnumTagSinglePayload for HFEvent.EventType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for HFEvent.EventType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DD409FA4 + 4 * byte_1DD66824C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DD409FC4 + 4 * byte_1DD668251[v4]))();
}

_BYTE *sub_1DD409FA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DD409FC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DD409FCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DD409FD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DD409FDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DD409FE4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1DD409FF0()
{
  return 0;
}

ValueMetadata *type metadata accessor for HFEvent.EventType()
{
  return &type metadata for HFEvent.EventType;
}

uint64_t sub_1DD40A008(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[5];

  v36 = a3;
  v37 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - v9;
  v10 = sub_1DD63D768();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_1DD63DDE0();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D330A0];
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v20, a1, v17);
  v40[3] = v17;
  v40[4] = sub_1DD353504(&qword_1F03E5078, v18, MEMORY[0x1E0D33090]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  v22((char *)boxed_opaque_existential_1, v37, v17);
  sub_1DD353504(&qword_1F03E5080, v18, MEMORY[0x1E0D33098]);
  sub_1DD63DCB4();
  sub_1DD63DCB4();
  sub_1DD63D6C0();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v14, v10);
  v26(v16, v10);
  if (fabs(v25) <= a4)
  {
    v27 = (uint64_t)v34;
    sub_1DD63DDA4();
    sub_1DD3D3C30((uint64_t)v40, (uint64_t)v39);
    v28 = sub_1DD63D7C8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v39, v39[3]);
      v30 = (uint64_t)v35;
      sub_1DD63DDA4();
      sub_1DD3540B8(v27, (uint64_t *)&unk_1F03E47E0);
    }
    else
    {
      v30 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v35, v27, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v31 = type metadata accessor for HFEvent();
    sub_1DD40A314(v30, v36 + *(int *)(v31 + 20));
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v17);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1DD40A314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD40A35C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[5];

  v36 = a3;
  v37 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - v9;
  v10 = sub_1DD63D768();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_1DD63DCD8();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D32EC0];
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v20, a1, v17);
  v40[3] = v17;
  v40[4] = sub_1DD353504(&qword_1F03E5090, v18, MEMORY[0x1E0D32EB0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  v22((char *)boxed_opaque_existential_1, v37, v17);
  sub_1DD353504(&qword_1F03E5098, v18, MEMORY[0x1E0D32EB8]);
  sub_1DD63DCB4();
  sub_1DD63DCB4();
  sub_1DD63D6C0();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v14, v10);
  v26(v16, v10);
  if (fabs(v25) <= a4)
  {
    v27 = (uint64_t)v34;
    sub_1DD63DDA4();
    sub_1DD3D3C30((uint64_t)v40, (uint64_t)v39);
    v28 = sub_1DD63D7C8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v39, v39[3]);
      v30 = (uint64_t)v35;
      sub_1DD63DDA4();
      sub_1DD3540B8(v27, (uint64_t *)&unk_1F03E47E0);
    }
    else
    {
      v30 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v35, v27, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v31 = type metadata accessor for HFEvent();
    sub_1DD40A314(v30, v36 + *(int *)(v31 + 20));
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v17);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1DD40A668(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[5];

  v36 = a3;
  v37 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - v9;
  v10 = sub_1DD63D768();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_1DD63DE04();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D33108];
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v20, a1, v17);
  v40[3] = v17;
  v40[4] = sub_1DD353504(&qword_1F03E50A8, v18, MEMORY[0x1E0D330F8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  v22((char *)boxed_opaque_existential_1, v37, v17);
  sub_1DD353504(&qword_1F03E50B0, v18, MEMORY[0x1E0D33100]);
  sub_1DD63DCB4();
  sub_1DD63DCB4();
  sub_1DD63D6C0();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v14, v10);
  v26(v16, v10);
  if (fabs(v25) <= a4)
  {
    v27 = (uint64_t)v34;
    sub_1DD63DDA4();
    sub_1DD3D3C30((uint64_t)v40, (uint64_t)v39);
    v28 = sub_1DD63D7C8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v39, v39[3]);
      v30 = (uint64_t)v35;
      sub_1DD63DDA4();
      sub_1DD3540B8(v27, (uint64_t *)&unk_1F03E47E0);
    }
    else
    {
      v30 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v35, v27, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v31 = type metadata accessor for HFEvent();
    sub_1DD40A314(v30, v36 + *(int *)(v31 + 20));
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v17);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1DD40A974(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[5];

  v36 = a3;
  v37 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - v9;
  v10 = sub_1DD63D768();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_1DD63DD8C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D33010];
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v20, a1, v17);
  v40[3] = v17;
  v40[4] = sub_1DD353504(&qword_1F03E50C0, v18, MEMORY[0x1E0D33000]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  v22((char *)boxed_opaque_existential_1, v37, v17);
  sub_1DD353504(&qword_1F03E50C8, v18, MEMORY[0x1E0D33008]);
  sub_1DD63DCB4();
  sub_1DD63DCB4();
  sub_1DD63D6C0();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v14, v10);
  v26(v16, v10);
  if (fabs(v25) <= a4)
  {
    v27 = (uint64_t)v34;
    sub_1DD63DDA4();
    sub_1DD3D3C30((uint64_t)v40, (uint64_t)v39);
    v28 = sub_1DD63D7C8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v39, v39[3]);
      v30 = (uint64_t)v35;
      sub_1DD63DDA4();
      sub_1DD3540B8(v27, (uint64_t *)&unk_1F03E47E0);
    }
    else
    {
      v30 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v35, v27, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v31 = type metadata accessor for HFEvent();
    sub_1DD40A314(v30, v36 + *(int *)(v31 + 20));
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v17);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1DD40AC80(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[5];

  v36 = a3;
  v37 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - v9;
  v10 = sub_1DD63D768();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_1DD63DC84();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D32DF8];
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v20, a1, v17);
  v40[3] = v17;
  v40[4] = sub_1DD353504(&qword_1F03E50D8, v18, MEMORY[0x1E0D32DE8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  v22((char *)boxed_opaque_existential_1, v37, v17);
  sub_1DD353504(&qword_1F03E50E0, v18, MEMORY[0x1E0D32DF0]);
  sub_1DD63DCB4();
  sub_1DD63DCB4();
  sub_1DD63D6C0();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v14, v10);
  v26(v16, v10);
  if (fabs(v25) <= a4)
  {
    v27 = (uint64_t)v34;
    sub_1DD63DDA4();
    sub_1DD3D3C30((uint64_t)v40, (uint64_t)v39);
    v28 = sub_1DD63D7C8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v39, v39[3]);
      v30 = (uint64_t)v35;
      sub_1DD63DDA4();
      sub_1DD3540B8(v27, (uint64_t *)&unk_1F03E47E0);
    }
    else
    {
      v30 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v35, v27, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v31 = type metadata accessor for HFEvent();
    sub_1DD40A314(v30, v36 + *(int *)(v31 + 20));
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v17);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t sub_1DD40AF8C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, _QWORD, uint64_t);
  unint64_t v43;
  char *v44;
  void (*v45)(char *, unint64_t, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t);
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(unint64_t, _QWORD, uint64_t);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, unint64_t, uint64_t);
  char *v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(unint64_t, _QWORD, uint64_t);
  uint64_t v73;
  unint64_t v74;
  char *v75;
  void (*v76)(char *, unint64_t, uint64_t);
  char *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(unint64_t, _QWORD, uint64_t);
  uint64_t v90;
  unint64_t v91;
  char *v92;
  void (*v93)(char *, unint64_t, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  void (*v104)(unint64_t, _QWORD, uint64_t);
  uint64_t v105;
  unint64_t v106;
  char *v107;
  void (*v108)(char *, unint64_t, uint64_t);
  char *v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;

  v142 = a1;
  v115 = sub_1DD63DC6C();
  v114 = *(_QWORD *)(v115 - 8);
  v1 = MEMORY[0x1E0C80A78](v115);
  v117 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v116 = (char *)&v114 - v3;
  v119 = sub_1DD63DC84();
  v120 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v118 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1DD63DD74();
  v121 = *(_QWORD *)(v122 - 8);
  v5 = MEMORY[0x1E0C80A78](v122);
  v123 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v124 = (char *)&v114 - v7;
  v138 = sub_1DD63DD8C();
  v125 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v137 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1DD63DDEC();
  v126 = *(_QWORD *)(v129 - 8);
  v9 = MEMORY[0x1E0C80A78](v129);
  v127 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v128 = (char *)&v114 - v11;
  v12 = sub_1DD63DE04();
  v13 = *(_QWORD *)(v12 - 8);
  v139 = v12;
  v140 = v13;
  MEMORY[0x1E0C80A78](v12);
  v130 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DD63DCC0();
  v16 = *(_QWORD *)(v15 - 8);
  v132 = v15;
  v133 = v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v131 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v114 - v19;
  v21 = sub_1DD63DCD8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1DD63DDC8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v136 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v135 = (char *)&v114 - v29;
  v141 = sub_1DD63DDE0();
  v30 = *(char **)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v134 = (char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DD63DD68();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v35, v142, v32);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v35, v32);
  if (v36 == *MEMORY[0x1E0D32F78])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    v142 = v30;
    v37 = v134;
    (*((void (**)(char *, char *, uint64_t))v30 + 4))(v134, v35, v141);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5128);
    v38 = *(_QWORD *)(v26 + 72);
    v39 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1DD6683F0;
    v41 = v40 + v39;
    v42 = *(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104);
    v42(v40 + v39, *MEMORY[0x1E0D33060], v25);
    v43 = v41 + v38;
    v42(v41 + v38, *MEMORY[0x1E0D33058], v25);
    v44 = v135;
    sub_1DD63DDD4();
    v45 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
    v46 = v136;
    v45(v136, v41, v25);
    sub_1DD353504(&qword_1F03E5130, (uint64_t (*)(uint64_t))MEMORY[0x1E0D33070], MEMORY[0x1E0D33080]);
    LOBYTE(v38) = sub_1DD63E110();
    v47 = *(void (**)(char *, uint64_t))(v26 + 8);
    swift_bridgeObjectRetain();
    v47(v46, v25);
    if ((v38 & 1) != 0)
    {
      v48 = 1;
    }
    else
    {
      v45(v46, v43, v25);
      v48 = sub_1DD63E110();
      v47(v46, v25);
    }
    v66 = v142;
    swift_bridgeObjectRelease();
    v47(v44, v25);
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v66 + 1))(v37, v141);
    return v48 & 1;
  }
  v49 = v133;
  v141 = (uint64_t)v20;
  v142 = v24;
  v50 = v139;
  v51 = v140;
  v53 = v137;
  v52 = v138;
  if (v36 == *MEMORY[0x1E0D32F58])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    v139 = v21;
    v140 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v142, v35, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5118);
    v54 = (_QWORD *)v49;
    v55 = *(_QWORD *)(v49 + 72);
    v56 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1DD6683F0;
    v58 = v57 + v56;
    v59 = (void (*)(unint64_t, _QWORD, uint64_t))v54[13];
    v60 = v132;
    v59(v57 + v56, *MEMORY[0x1E0D32E78], v132);
    v61 = v58 + v55;
    v59(v58 + v55, *MEMORY[0x1E0D32E70], v60);
    v62 = v141;
    sub_1DD63DCCC();
    v63 = (void (*)(char *, unint64_t, uint64_t))v54[2];
    v64 = v131;
    v63(v131, v58, v60);
    sub_1DD353504(&qword_1F03E5120, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32E90], MEMORY[0x1E0D32EA0]);
    LOBYTE(v55) = sub_1DD63E110();
    v65 = (void (*)(char *, uint64_t))v54[1];
    swift_bridgeObjectRetain();
    v65(v64, v60);
    if ((v55 & 1) != 0)
    {
      v48 = 1;
    }
    else
    {
      v63(v64, v61, v60);
      v48 = sub_1DD63E110();
      v65(v64, v60);
    }
    v79 = v142;
    v81 = v139;
    v80 = v140;
    swift_bridgeObjectRelease();
    v65((char *)v62, v60);
    swift_bridgeObjectRelease();
    v82 = *(void (**)(char *, uint64_t))(v80 + 8);
    v83 = v79;
LABEL_19:
    v82(v83, v81);
    return v48 & 1;
  }
  if (v36 == *MEMORY[0x1E0D32F80])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v130, v35, v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5108);
    v67 = (_QWORD *)v126;
    v68 = *(_QWORD *)(v126 + 72);
    v69 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_1DD6683F0;
    v71 = v70 + v69;
    v72 = (void (*)(unint64_t, _QWORD, uint64_t))v67[13];
    v73 = v129;
    v72(v70 + v69, *MEMORY[0x1E0D330B8], v129);
    v74 = v71 + v68;
    v72(v71 + v68, *MEMORY[0x1E0D330D0], v73);
    v75 = v128;
    sub_1DD63DDF8();
    v76 = (void (*)(char *, unint64_t, uint64_t))v67[2];
    v77 = v127;
    v76(v127, v71, v73);
    sub_1DD353504(&qword_1F03E5110, (uint64_t (*)(uint64_t))MEMORY[0x1E0D330D8], MEMORY[0x1E0D330E8]);
    LOBYTE(v68) = sub_1DD63E110();
    v78 = (void (*)(char *, uint64_t))v67[1];
    swift_bridgeObjectRetain();
    v78(v77, v73);
    if ((v68 & 1) != 0)
    {
      v48 = 1;
    }
    else
    {
      v76(v77, v74, v73);
      v48 = sub_1DD63E110();
      v78(v77, v73);
    }
    v96 = v130;
    v81 = v139;
    v97 = v140;
    swift_bridgeObjectRelease();
    v78(v75, v73);
    swift_bridgeObjectRelease();
    v82 = *(void (**)(char *, uint64_t))(v97 + 8);
    v83 = v96;
    goto LABEL_19;
  }
  if (v36 == *MEMORY[0x1E0D32F70])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v53, v35, v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E50F8);
    v84 = (_QWORD *)v121;
    v85 = *(_QWORD *)(v121 + 72);
    v86 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_1DD6683F0;
    v88 = v87 + v86;
    v89 = (void (*)(unint64_t, _QWORD, uint64_t))v84[13];
    v90 = v122;
    v89(v87 + v86, *MEMORY[0x1E0D32FA8], v122);
    v91 = v88 + v85;
    v89(v88 + v85, *MEMORY[0x1E0D32FD0], v90);
    v92 = v124;
    sub_1DD63DD80();
    v93 = (void (*)(char *, unint64_t, uint64_t))v84[2];
    v94 = v123;
    v93(v123, v88, v90);
    sub_1DD353504(&qword_1F03E5100, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32FE0], MEMORY[0x1E0D32FF0]);
    LOBYTE(v85) = sub_1DD63E110();
    v95 = (void (*)(char *, uint64_t))v84[1];
    swift_bridgeObjectRetain();
    v95(v94, v90);
    if ((v85 & 1) != 0)
    {
      v48 = 1;
    }
    else
    {
      v93(v94, v91, v90);
      v48 = sub_1DD63E110();
      v95(v94, v90);
    }
    v111 = v125;
    v113 = v137;
    v112 = v138;
    swift_bridgeObjectRelease();
    v95(v92, v90);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v113, v112);
  }
  else if (v36 == *MEMORY[0x1E0D32F88])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v118, v35, v119);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E50E8);
    v99 = (_QWORD *)v114;
    v100 = *(_QWORD *)(v114 + 72);
    v101 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v102 = swift_allocObject();
    *(_OWORD *)(v102 + 16) = xmmword_1DD6683F0;
    v103 = v102 + v101;
    v104 = (void (*)(unint64_t, _QWORD, uint64_t))v99[13];
    v105 = v115;
    v104(v102 + v101, *MEMORY[0x1E0D32DB8], v115);
    v106 = v103 + v100;
    v104(v103 + v100, *MEMORY[0x1E0D32DB0], v105);
    v107 = v116;
    sub_1DD63DC78();
    v108 = (void (*)(char *, unint64_t, uint64_t))v99[2];
    v109 = v117;
    v108(v117, v103, v105);
    sub_1DD353504(&qword_1F03E50F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32DC8], MEMORY[0x1E0D32DD8]);
    LOBYTE(v100) = sub_1DD63E110();
    v110 = (void (*)(char *, uint64_t))v99[1];
    swift_bridgeObjectRetain();
    v110(v109, v105);
    if ((v100 & 1) != 0)
    {
      v48 = 1;
    }
    else
    {
      v108(v109, v106, v105);
      v48 = sub_1DD63E110();
      v110(v109, v105);
    }
    swift_bridgeObjectRelease();
    v110(v107, v105);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v119);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    v48 = 0;
  }
  return v48 & 1;
}

uint64_t HFHomeKitDispatcher.allHomes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v1[3] = sub_1DD63E2E4();
  v1[4] = sub_1DD63E2D8();
  v1[5] = sub_1DD63E284();
  v1[6] = v2;
  return swift_task_switch();
}

uint64_t sub_1DD40BC6C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v12;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_homeManager);
  if (!v1)
    goto LABEL_8;
  v2 = v1;
  if (!objc_msgSend(*(id *)(v0 + 16), sel_hasLoadedHomes))
  {

LABEL_8:
    v6 = sub_1DD63E2D8();
    *(_QWORD *)(v0 + 56) = v6;
    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v7;
    swift_unknownObjectWeakInit();
    v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1F03E5148
                                                                                       + dword_1F03E5148);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v8;
    *v8 = v0;
    v8[1] = sub_1DD40BE48;
    return v11(v6, MEMORY[0x1E0DF06E8], 0x73656D6F486C6C61, 0xE800000000000000, (uint64_t)sub_1DD40C2CC, v7);
  }
  swift_release();
  v3 = objc_msgSend(v2, sel_homes);
  sub_1DD352AB0(0, &qword_1F03E4720);
  v4 = sub_1DD63E1F4();

  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v10 = swift_bridgeObjectRetain();
    v5 = sub_1DD40DB10(v10, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1DD4211B8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  v12 = v5;
  sub_1DD40D6C4(&v12);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v12);
}

uint64_t sub_1DD40BE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DD40BECC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1DD40BF04()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD40BF4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD40BF70()
{
  uint64_t v0;
  id v1;

  v0 = sub_1DD63DF18();
  __swift_allocate_value_buffer(v0, qword_1F03ED408);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F03ED408);
  if (qword_1F03E3820 != -1)
    swift_once();
  v1 = (id)qword_1F03ED468;
  return sub_1DD63DF24();
}

double DISPATCHER_SERVICE_REFRESH_TIMEOUT.getter()
{
  return 25.0;
}

void static HFHomeKitDispatcher.Error.failed(with:title:description:)(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X4>, uint64_t a4@<X8>)
{
  void *v4;
  void *v7;
  id v8;

  v4 = a3;
  if (!a2)
  {
    v7 = 0;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = (void *)sub_1DD63E11C();
  if (v4)
LABEL_3:
    v4 = (void *)sub_1DD63E11C();
LABEL_4:
  v8 = objc_msgSend((id)objc_opt_self(), sel_hf_errorWithCode_title_description_, a1, v7, v4);

  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 8) = 1;
}

id sub_1DD40C0B8(uint64_t a1)
{
  return sub_1DD40C0E0(a1, (SEL *)&selRef_isHomeWidgetRelatedProcess, &byte_1F03E5138);
}

id sub_1DD40C0CC(uint64_t a1)
{
  return sub_1DD40C0E0(a1, (SEL *)&selRef_isHomeWidgetIntents, &byte_1F03E5139);
}

id sub_1DD40C0E0(uint64_t a1, SEL *a2, _BYTE *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  *a3 = (_BYTE)result;
  return result;
}

void sub_1DD40C118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  if ((sub_1DD63E35C() & 1) == 0
    && (swift_beginAccess(), (v7 = (void *)MEMORY[0x1DF0DB400](a2 + 16)) != 0)
    && (v8 = v7, v9 = objc_msgSend(v7, sel_allHomesFuture), v8, v9))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1DD40FD04;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DD4034B0;
    aBlock[3] = &block_descriptor_3;
    v12 = _Block_copy(aBlock);
    swift_release();
    v13 = objc_msgSend(v9, sel_addCompletionBlock_, v12);
    _Block_release(v12);

  }
  else
  {
    sub_1DD63E2A8();
  }
}

void sub_1DD40C2CC(uint64_t a1)
{
  uint64_t v1;

  sub_1DD40C118(a1, v1);
}

uint64_t sub_1DD40C2D4(uint64_t a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
    return sub_1DD63E29C();
  }
  else
  {
    if (a1)
    {
      sub_1DD352AB0(0, &qword_1F03E4720);
      sub_1DD63E1E8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
    return sub_1DD63E2A8();
  }
}

uint64_t sub_1DD40C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v8 = (_QWORD *)swift_task_alloc();
    v6[16] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5178);
    *v8 = v6;
    v8[1] = sub_1DD40C4AC;
    return sub_1DD63E884();
  }
  else
  {
    if (a1)
    {
      swift_getObjectType();
      sub_1DD63E284();
    }
    return swift_task_switch();
  }
}

uint64_t sub_1DD40C4AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v2 + 80));
}

uint64_t sub_1DD40C510()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(uint64_t))v0[14];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_1DD40C618;
  swift_continuation_init();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5178);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  sub_1DD63E290();
  v1(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  return swift_continuation_await();
}

uint64_t sub_1DD40C618()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 88));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t HFHomeKitDispatcher.refresh(until:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  v3 = sub_1DD63D768();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  sub_1DD63E2E4();
  *(_QWORD *)(v2 + 64) = sub_1DD63E2D8();
  *(_QWORD *)(v2 + 72) = sub_1DD63E284();
  *(_QWORD *)(v2 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_1DD40C730()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_1F03E37E8 != -1)
    swift_once();
  if ((byte_1F03E5138 & 1) == 0 && qword_1F03E37F0 != -1)
    swift_once();
  sub_1DD63D750();
  sub_1DD63D6A8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_1DD40C824;
  return HFHomeKitDispatcher.refresh(until:)(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1DD40C824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_1DD40C8AC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD40C8F4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HFHomeKitDispatcher.refresh(until:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_1DD63D768();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  sub_1DD63E2E4();
  v2[12] = sub_1DD63E2D8();
  v2[13] = sub_1DD63E284();
  v2[14] = v4;
  return swift_task_switch();
}

uint64_t sub_1DD40C9D0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_homeManager);
  *(_QWORD *)(v0 + 120) = v1;
  if (v1)
  {
    if (qword_1F03E37E0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = sub_1DD63DF18();
    *(_QWORD *)(v0 + 128) = __swift_project_value_buffer(v6, (uint64_t)qword_1F03ED408);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
    v7 = sub_1DD63DF00();
    v8 = sub_1DD63E488();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 72);
    if (v9)
    {
      v24 = *(_QWORD *)(v0 + 80);
      v12 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v26[0] = v25;
      *(_DWORD *)v12 = 136315394;
      *(_QWORD *)(v0 + 40) = sub_1DD3C3160(0x2868736572666572, 0xEF293A6C69746E75, v26);
      sub_1DD63E53C();
      *(_WORD *)(v12 + 12) = 2080;
      sub_1DD40D77C();
      v13 = sub_1DD63E824();
      *(_QWORD *)(v0 + 48) = sub_1DD3C3160(v13, v14, v26);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v11);
      _os_log_impl(&dword_1DD34E000, v7, v8, ">>> %s until:%s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v25, -1, -1);
      MEMORY[0x1DF0DB358](v12, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    }

    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v23;
    *v23 = v0;
    v23[1] = sub_1DD40CE28;
    return HMHomeManager.refresh(before:)(*(_QWORD *)(v0 + 56));
  }
  else
  {
    swift_release();
    if (qword_1F03E37E0 != -1)
      swift_once();
    v15 = sub_1DD63DF18();
    __swift_project_value_buffer(v15, (uint64_t)qword_1F03ED408);
    v16 = sub_1DD63DF00();
    v17 = sub_1DD63E47C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v26[0] = v19;
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_1DD3C3160(0x2868736572666572, 0xEF293A6C69746E75, v26);
      sub_1DD63E53C();
      _os_log_impl(&dword_1DD34E000, v16, v17, "%s HMHomeManager is nil", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v19, -1, -1);
      MEMORY[0x1DF0DB358](v18, -1, -1);
    }

    sub_1DD40D738();
    swift_allocError();
    v21 = v20;
    *v20 = objc_msgSend((id)objc_opt_self(), sel_hf_errorWithCode_title_description_, -1, 0, 0);
    *((_BYTE *)v21 + 8) = 1;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD40CE28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD40CE88()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v7;

  swift_release();
  v1 = sub_1DD63DF00();
  v2 = sub_1DD63E488();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(void **)(v0 + 120);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v7 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 32) = sub_1DD3C3160(0x2868736572666572, 0xEF293A6C69746E75, &v7);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v1, v2, "<<< %s finished synchronization succesfully", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v5, -1, -1);
    MEMORY[0x1DF0DB358](v4, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD40CFF4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  swift_release();
  v1 = sub_1DD63DF00();
  v2 = sub_1DD63E47C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 24) = sub_1DD3C3160(0x2868736572666572, 0xEF293A6C69746E75, &v7);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v1, v2, "<<< %s exceeded timeout and failed", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v4, -1, -1);
    MEMORY[0x1DF0DB358](v3, -1, -1);
  }

  v5 = *(void **)(v0 + 120);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HFHomeKitDispatcher.waitForAllHomes(timeout:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 40) = v1;
  *(double *)(v2 + 32) = a1;
  sub_1DD63E2E4();
  *(_QWORD *)(v2 + 48) = sub_1DD63E2D8();
  *(_QWORD *)(v2 + 56) = sub_1DD63E284();
  *(_QWORD *)(v2 + 64) = v3;
  return swift_task_switch();
}

uint64_t sub_1DD40D1CC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;

  if ((objc_msgSend(*(id *)(v0 + 40), sel_hasLoadedHomes) & 1) != 0)
    goto LABEL_9;
  if (qword_1F03E37E8 != -1)
    swift_once();
  if ((byte_1F03E5138 & 1) != 0)
    goto LABEL_8;
  if (qword_1F03E37F0 != -1)
    swift_once();
  if (byte_1F03E5139 == 1)
  {
LABEL_8:
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v1;
    *v1 = v0;
    v1[1] = sub_1DD40D2CC;
    return HFHomeKitDispatcher.refresh(until:)(*(double *)(v0 + 32));
  }
  else
  {
LABEL_9:
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1DD40D354;
    return HFHomeKitDispatcher.allHomes.getter();
  }
}

uint64_t sub_1DD40D2CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 88) = v4;
  *v4 = v2;
  v4[1] = sub_1DD40D354;
  return HFHomeKitDispatcher.allHomes.getter();
}

uint64_t sub_1DD40D354(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD40D3BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_release();
  if (qword_1F03E37E0 != -1)
    swift_once();
  v1 = sub_1DD63DF18();
  __swift_project_value_buffer(v1, (uint64_t)qword_1F03ED408);
  swift_bridgeObjectRetain_n();
  v2 = sub_1DD63DF00();
  v3 = sub_1DD63E488();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 96);
  if (v4)
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_1DD3C3160(0xD000000000000019, 0x80000001DD66F000, &v10);
    sub_1DD63E53C();
    *(_WORD *)(v6 + 12) = 2048;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1DD63E7B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = v8;
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v2, v3, "%s Finished lazy loading of [HMHome]: count=%ld", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v7, -1, -1);
    MEMORY[0x1DF0DB358](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_1DD40D5E4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD40D618()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = *(void **)(v0 + 104);
  swift_release();
  sub_1DD40D738();
  swift_allocError();
  v3 = v2;
  *v2 = objc_msgSend((id)objc_opt_self(), sel_hf_errorWithCode_title_description_, 59, 0, 0);
  *((_BYTE *)v3 + 8) = 1;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD40D6C4(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1DD4011B0(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1DD40DDEC(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_1DD40D72C(uint64_t a1)
{
  return sub_1DD40D9D4(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1DD40EC18);
}

unint64_t sub_1DD40D738()
{
  unint64_t result;

  result = qword_1F03E5160;
  if (!qword_1F03E5160)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HFHomeKitDispatcher.Error, &type metadata for HFHomeKitDispatcher.Error);
    atomic_store(result, (unint64_t *)&qword_1F03E5160);
  }
  return result;
}

unint64_t sub_1DD40D77C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E5168;
  if (!qword_1F03E5168)
  {
    v1 = sub_1DD63D768();
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E5168);
  }
  return result;
}

uint64_t _s5ErrorOwCP(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DD40D808(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1DD40D808(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void _s5ErrorOwxx(uint64_t a1)
{
  sub_1DD40D834(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1DD40D834(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t _s5ErrorOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DD40D808(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1DD40D834(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1DD40D834(v4, v5);
  return a1;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DD40D97C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DD40D994(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HFHomeKitDispatcher.Error()
{
  return &type metadata for HFHomeKitDispatcher.Error;
}

_QWORD *sub_1DD40D9BC(uint64_t a1)
{
  return sub_1DD40D9D4(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1DD40EE2C);
}

_QWORD *sub_1DD40D9C8(uint64_t a1)
{
  return sub_1DD40D9D4(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1DD40F22C);
}

_QWORD *sub_1DD40D9D4(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1DD3DEBAC();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1DD40DAC0(unint64_t a1)
{
  return sub_1DD40DB10(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1DD4215D4);
}

uint64_t sub_1DD40DACC(uint64_t a1)
{
  return sub_1DD3C80D0(a1, (unint64_t *)&qword_1F03E41C0, 0x1E0CBA7E0, (unint64_t *)&qword_1F03E4AF0);
}

uint64_t sub_1DD40DAE8(uint64_t a1)
{
  return sub_1DD3C80D0(a1, &qword_1F03E46F0, 0x1E0CBA2A0, &qword_1F03E48D8);
}

_QWORD *sub_1DD40DB04(unint64_t a1)
{
  return sub_1DD40DB10(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1DD4217E8);
}

_QWORD *sub_1DD40DB10(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

size_t sub_1DD40DC10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4680);
  v3 = *(_QWORD *)(sub_1DD63D768() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_1DD40F71C(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_1DD3DEBAC();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD40DD08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1DD40FA64((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DD3DEBAC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1DD40DDEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;

  v3 = a1[1];
  result = sub_1DD63E818();
  if (result < v3)
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 >= -1)
    {
      v104 = result;
      v100 = a1;
      if (v3 < 2)
      {
        v8 = MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8;
        v110 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v3 != 1)
        {
          v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          v11 = (char *)MEMORY[0x1E0DEE9D8];
          if (v12 < 2)
            goto LABEL_112;
          goto LABEL_100;
        }
        v103 = MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8;
      }
      else
      {
        v6 = v5 >> 1;
        sub_1DD352AB0(0, &qword_1F03E4720);
        v7 = sub_1DD63E23C();
        *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
        v103 = v7 & 0xFFFFFFFFFFFFFF8;
        v110 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
      }
      v9 = 0;
      v10 = *a1;
      v101 = *a1 - 8;
      v102 = *a1 + 16;
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      v107 = v3;
      v111 = *a1;
      while (1)
      {
        v13 = v9++;
        v106 = v13;
        if (v9 < v3)
        {
          v14 = *(void **)(v10 + 8 * v13);
          v15 = *(id *)(v10 + 8 * v9);
          v16 = v14;
          v17 = objc_msgSend(v15, sel_name);
          sub_1DD63E14C();

          v18 = objc_msgSend(v16, sel_name);
          sub_1DD63E14C();

          sub_1DD39FEDC();
          v108 = sub_1DD63E560();

          v3 = v107;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = v13 + 2;
          if (v13 + 2 < v107)
          {
            v19 = (id *)(v102 + 8 * v13);
            while (1)
            {
              v20 = *(v19 - 1);
              v21 = *v19;
              v22 = v20;
              v23 = objc_msgSend(v21, sel_name);
              sub_1DD63E14C();

              v24 = objc_msgSend(v22, sel_name);
              sub_1DD63E14C();

              v25 = sub_1DD63E560();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v108 == -1) == (v25 != -1))
                break;
              ++v9;
              ++v19;
              v3 = v107;
              if (v107 == v9)
              {
                v9 = v107;
                goto LABEL_23;
              }
            }
            v3 = v107;
LABEL_23:
            v13 = v106;
          }
          v10 = v111;
          if (v108 == -1)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v26 = (uint64_t *)(v101 + 8 * v9);
              v27 = v9;
              v28 = v13;
              v29 = (uint64_t *)(v111 + 8 * v13);
              do
              {
                if (v28 != --v27)
                {
                  if (!v111)
                    goto LABEL_141;
                  v30 = *v29;
                  *v29 = *v26;
                  *v26 = v30;
                }
                ++v28;
                --v26;
                ++v29;
              }
              while (v28 < v27);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_134;
          if (v9 - v13 < v104)
          {
            if (__OFADD__(v13, v104))
              goto LABEL_136;
            if (v13 + v104 >= v3)
              v31 = v3;
            else
              v31 = v13 + v104;
            if (v31 < v13)
            {
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              break;
            }
            if (v9 != v31)
            {
              v32 = v101 + 8 * v9;
              v105 = v31;
              do
              {
                v33 = *(void **)(v10 + 8 * v9);
                v109 = v32;
                while (1)
                {
                  v34 = *(void **)v32;
                  v35 = v33;
                  v36 = v34;
                  v37 = objc_msgSend(v35, sel_name);
                  sub_1DD63E14C();

                  v38 = objc_msgSend(v36, sel_name);
                  sub_1DD63E14C();

                  sub_1DD39FEDC();
                  v39 = sub_1DD63E560();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v39 != -1)
                    break;
                  v10 = v111;
                  if (!v111)
                    goto LABEL_139;
                  v40 = *(void **)v32;
                  v33 = *(void **)(v32 + 8);
                  *(_QWORD *)v32 = v33;
                  *(_QWORD *)(v32 + 8) = v40;
                  v32 -= 8;
                  if (v9 == ++v13)
                    goto LABEL_43;
                }
                v10 = v111;
LABEL_43:
                ++v9;
                v32 = v109 + 8;
                v13 = v106;
              }
              while (v9 != v105);
              v9 = v105;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_1DD400EEC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v42 = *((_QWORD *)v11 + 2);
        v41 = *((_QWORD *)v11 + 3);
        v12 = v42 + 1;
        v10 = v111;
        if (v42 >= v41 >> 1)
        {
          v91 = sub_1DD400EEC((char *)(v41 > 1), v42 + 1, 1, v11);
          v10 = v111;
          v11 = v91;
        }
        *((_QWORD *)v11 + 2) = v12;
        v43 = v11 + 32;
        v44 = &v11[16 * v42 + 32];
        *(_QWORD *)v44 = v13;
        *((_QWORD *)v44 + 1) = v9;
        if (v42)
        {
          while (1)
          {
            v45 = v12 - 1;
            if (v12 >= 4)
            {
              v50 = &v43[16 * v12];
              v51 = *((_QWORD *)v50 - 8);
              v52 = *((_QWORD *)v50 - 7);
              v56 = __OFSUB__(v52, v51);
              v53 = v52 - v51;
              if (v56)
                goto LABEL_118;
              v55 = *((_QWORD *)v50 - 6);
              v54 = *((_QWORD *)v50 - 5);
              v56 = __OFSUB__(v54, v55);
              v48 = v54 - v55;
              v49 = v56;
              if (v56)
                goto LABEL_119;
              v57 = v12 - 2;
              v58 = &v43[16 * v12 - 32];
              v60 = *(_QWORD *)v58;
              v59 = *((_QWORD *)v58 + 1);
              v56 = __OFSUB__(v59, v60);
              v61 = v59 - v60;
              if (v56)
                goto LABEL_121;
              v56 = __OFADD__(v48, v61);
              v62 = v48 + v61;
              if (v56)
                goto LABEL_124;
              if (v62 >= v53)
              {
                v80 = &v43[16 * v45];
                v82 = *(_QWORD *)v80;
                v81 = *((_QWORD *)v80 + 1);
                v56 = __OFSUB__(v81, v82);
                v83 = v81 - v82;
                if (v56)
                  goto LABEL_128;
                v73 = v48 < v83;
                goto LABEL_87;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v74 = *((_QWORD *)v11 + 4);
                v75 = *((_QWORD *)v11 + 5);
                v56 = __OFSUB__(v75, v74);
                v67 = v75 - v74;
                v68 = v56;
                goto LABEL_81;
              }
              v47 = *((_QWORD *)v11 + 4);
              v46 = *((_QWORD *)v11 + 5);
              v56 = __OFSUB__(v46, v47);
              v48 = v46 - v47;
              v49 = v56;
            }
            if ((v49 & 1) != 0)
              goto LABEL_120;
            v57 = v12 - 2;
            v63 = &v43[16 * v12 - 32];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v66 = __OFSUB__(v64, v65);
            v67 = v64 - v65;
            v68 = v66;
            if (v66)
              goto LABEL_123;
            v69 = &v43[16 * v45];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v56 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v56)
              goto LABEL_126;
            if (__OFADD__(v67, v72))
              goto LABEL_127;
            if (v67 + v72 >= v48)
            {
              v73 = v48 < v72;
LABEL_87:
              if (v73)
                v45 = v57;
              goto LABEL_89;
            }
LABEL_81:
            if ((v68 & 1) != 0)
              goto LABEL_122;
            v76 = &v43[16 * v45];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v56 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v56)
              goto LABEL_125;
            if (v79 < v67)
              goto LABEL_15;
LABEL_89:
            v84 = v45 - 1;
            if (v45 - 1 >= v12)
            {
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
              goto LABEL_137;
            }
            if (!v10)
              goto LABEL_140;
            v85 = v11;
            v86 = &v43[16 * v84];
            v87 = *(_QWORD *)v86;
            v88 = &v43[16 * v45];
            v89 = *((_QWORD *)v88 + 1);
            sub_1DD40E814((id *)(v10 + 8 * *(_QWORD *)v86), (id *)(v10 + 8 * *(_QWORD *)v88), v10 + 8 * v89, v110);
            if (v1)
            {
              v8 = v103;
              goto LABEL_112;
            }
            if (v89 < v87)
              goto LABEL_115;
            if (v45 > *((_QWORD *)v85 + 2))
              goto LABEL_116;
            *(_QWORD *)v86 = v87;
            *(_QWORD *)&v43[16 * v84 + 8] = v89;
            v90 = *((_QWORD *)v85 + 2);
            if (v45 >= v90)
              goto LABEL_117;
            v11 = v85;
            v12 = v90 - 1;
            memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
            *((_QWORD *)v85 + 2) = v90 - 1;
            v10 = v111;
            if (v90 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v3 = v107;
        if (v9 >= v107)
        {
          v8 = v103;
          if (v12 < 2)
          {
LABEL_112:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v8 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_100:
          v92 = *v100;
          while (1)
          {
            v93 = v12 - 2;
            if (v12 < 2)
              goto LABEL_130;
            if (!v92)
              goto LABEL_142;
            v94 = v11;
            v95 = v11 + 32;
            v96 = *(_QWORD *)&v11[16 * v93 + 32];
            v97 = *(_QWORD *)&v11[16 * v12 + 24];
            sub_1DD40E814((id *)(v92 + 8 * v96), (id *)(v92 + 8 * *(_QWORD *)&v95[16 * v12 - 16]), v92 + 8 * v97, v110);
            if (v1)
              goto LABEL_112;
            if (v97 < v96)
              goto LABEL_131;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v94 = sub_1DD40119C((uint64_t)v94);
            if (v93 >= *((_QWORD *)v94 + 2))
              goto LABEL_132;
            v98 = &v94[16 * v93 + 32];
            *(_QWORD *)v98 = v96;
            *((_QWORD *)v98 + 1) = v97;
            v99 = *((_QWORD *)v94 + 2);
            if (v12 > v99)
              goto LABEL_133;
            v11 = v94;
            memmove(&v94[16 * v12 + 16], &v94[16 * v12 + 32], 16 * (v99 - v12));
            *((_QWORD *)v94 + 2) = v99 - 1;
            v12 = v99 - 1;
            if (v99 <= 2)
              goto LABEL_112;
          }
        }
      }
    }
    result = sub_1DD63E794();
    __break(1u);
    return result;
  }
  if (v3 < 0)
    goto LABEL_135;
  if (v3)
    return sub_1DD40E6A4(0, v3, 1, a1);
  return result;
}

uint64_t sub_1DD40E6A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v18 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(void **)(v18 + 8 * v4);
    v7 = v16;
    v17 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_name);
      sub_1DD63E14C();

      v12 = objc_msgSend(v10, sel_name);
      sub_1DD63E14C();

      sub_1DD39FEDC();
      v13 = sub_1DD63E560();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v13 != -1)
      {
LABEL_4:
        ++v4;
        v5 = v17 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v18)
        break;
      v14 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v14;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD40E814(id *a1, id *__src, unint64_t a3, char *__dst)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id *v20;
  char *v21;
  id *v22;
  id *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  char *v35;
  void **v36;
  id *v37;
  char *v39;
  void **v40;
  id *v41;

  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v41 = a1;
  v40 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst)
        memmove(__dst, __src, 8 * v11);
      v33 = __dst;
      v21 = &__dst[8 * v11];
      v39 = v21;
      v41 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        do
        {
          v35 = v21;
          v37 = v22 + 1;
          v25 = (void *)*((_QWORD *)v21 - 1);
          v21 -= 8;
          v24 = v25;
          v26 = *--v23;
          v27 = v24;
          v28 = v26;
          v29 = objc_msgSend(v27, sel_name);
          sub_1DD63E14C();

          v30 = objc_msgSend(v28, sel_name);
          sub_1DD63E14C();

          sub_1DD39FEDC();
          v31 = sub_1DD63E560();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31 == -1)
          {
            v21 = v35;
            if (v37 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
          }
          else
          {
            v39 = v21;
            v23 = v5;
            if (v37 < (id *)v35 || v22 >= (id *)v35 || v37 != (id *)v35)
              *v22 = *(id *)v21;
          }
          if (v23 <= a1)
            break;
          --v22;
          v5 = v23;
        }
        while (v21 > v33);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst)
      memmove(__dst, a1, 8 * v8);
    v36 = (void **)&__dst[8 * v8];
    v39 = (char *)v36;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v12 = (void **)__dst;
      v13 = a1;
      do
      {
        v14 = *v12;
        v15 = *v5;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_name);
        sub_1DD63E14C();

        v18 = objc_msgSend(v16, sel_name);
        sub_1DD63E14C();

        sub_1DD39FEDC();
        v19 = sub_1DD63E560();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19 == -1)
        {
          v20 = v5 + 1;
          if (v13 < v5 || v13 >= v20 || v13 != v5)
            *v13 = *v5;
        }
        else
        {
          if (v13 != v12)
            *v13 = *v12;
          v40 = ++v12;
          v20 = v5;
        }
        ++v13;
        if (v12 >= v36)
          break;
        v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      v41 = v13;
    }
LABEL_42:
    sub_1DD400FE4(&v41, &v40, &v39);
    return 1;
  }
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD40EC18(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1DD40EE10(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD40F424(a1, a2, a3, a4, (unint64_t *)&qword_1ED378380, 0x1E0CBA458, (unint64_t *)&qword_1ED378390);
}

_QWORD *sub_1DD40EE2C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DD40F024(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    result = sub_1DD3DE980(*(_QWORD *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    v17 = v24;
    v18 = v23[1];
    *(_OWORD *)v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(_QWORD *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v22;
      goto LABEL_36;
    }
  }
  v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v19);
  if (v20)
    goto LABEL_23;
  v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v12 = v19 + 1;
  if (v19 + 2 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  v12 = v19 + 2;
  if (v19 + 3 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  v21 = v19 + 4;
  v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v19 = v21;
LABEL_23:
    v9 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v19 << 6);
    v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DD40F22C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_unknownObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1DD40F424(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1DD63E5B4();
    sub_1DD352AB0(0, a5);
    sub_1DD352A70(a7, a5);
    result = (_QWORD *)sub_1DD63E3F8();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1DD63E614())
        goto LABEL_40;
      sub_1DD352AB0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1DD40F71C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63D768();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1DD40FC60((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DD40FA64(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DD40FC60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD40FCA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DD40FD04(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5180);
  return sub_1DD40C2D4(a1, a2);
}

id ActivityLogCoordinator.home.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t sub_1DD40FD60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DD40FDDC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1DD63DF78();
}

uint64_t sub_1DD40FE54()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD40FECC()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__eventsByDate, &qword_1F03E5190);
}

uint64_t sub_1DD40FEE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DD40FF5C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1DD63DF78();
}

uint64_t sub_1DD40FFD4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD41004C()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__lastError, &qword_1F03E51A0);
}

uint64_t sub_1DD410060@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DD4100DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1DD63DF78();
}

uint64_t sub_1DD41014C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DD4101C4()
{
  return sub_1DD3FDFC0((uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__activelyFetching, (uint64_t *)&unk_1F03E51B0);
}

id ActivityLogCoordinator.__allocating_init(home:)(void *a1)
{
  id v2;

  swift_allocObject();
  v2 = sub_1DD41918C(a1);

  return v2;
}

id ActivityLogCoordinator.init(home:)(void *a1)
{
  id v2;

  v2 = sub_1DD41918C(a1);

  return v2;
}

uint64_t ActivityLogCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = sub_1DD63DF18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer;
  v7 = *(void **)(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer);
  if (v7)
  {
    v8 = qword_1F03E3810;
    v9 = v7;
    if (v8 != -1)
      swift_once();
    v10 = (id)qword_1F03ED460;
    sub_1DD63DF24();
    v11 = sub_1DD63DF00();
    v12 = sub_1DD63E488();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1DD34E000, v11, v12, "Deinit - Stopping auto-fetch timer", v13, 2u);
      MEMORY[0x1DF0DB358](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_invalidate);

  }
  v14 = v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift__eventsByDate;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift__lastError;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift__activelyFetching;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E51B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  swift_release();
  v20 = v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_oneMonthAgo;
  v21 = sub_1DD63D768();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  sub_1DD3540B8(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate, (uint64_t *)&unk_1F03E4600);
  sub_1DD3540B8(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_newestFetchEndDate, (uint64_t *)&unk_1F03E4600);

  swift_defaultActor_destroy();
  return v1;
}

uint64_t ActivityLogCoordinator.__deallocating_deinit()
{
  ActivityLogCoordinator.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1DD4104F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v8;
  _QWORD *v9;

  v8 = a4 & 1;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1DD410570;
  return sub_1DD4105C4(a1, a2, a3, v8, 0);
}

uint64_t sub_1DD410570(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1DD4105C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 + 417) = a5;
  *(_BYTE *)(v6 + 416) = a4;
  *(_QWORD *)(v6 + 176) = a3;
  *(_QWORD *)(v6 + 184) = v5;
  *(_QWORD *)(v6 + 160) = a1;
  *(_QWORD *)(v6 + 168) = a2;
  *(_QWORD *)(v6 + 192) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
  *(_QWORD *)(v6 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  *(_QWORD *)(v6 + 208) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v6 + 216) = swift_task_alloc();
  *(_QWORD *)(v6 + 224) = swift_task_alloc();
  *(_QWORD *)(v6 + 232) = swift_task_alloc();
  *(_QWORD *)(v6 + 240) = swift_task_alloc();
  *(_QWORD *)(v6 + 248) = swift_task_alloc();
  *(_QWORD *)(v6 + 256) = swift_task_alloc();
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  *(_QWORD *)(v6 + 272) = swift_task_alloc();
  *(_QWORD *)(v6 + 280) = swift_task_alloc();
  v7 = sub_1DD63D768();
  *(_QWORD *)(v6 + 288) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 296) = v8;
  *(_QWORD *)(v6 + 304) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 312) = swift_task_alloc();
  *(_QWORD *)(v6 + 320) = swift_task_alloc();
  *(_QWORD *)(v6 + 328) = swift_task_alloc();
  *(_QWORD *)(v6 + 336) = swift_task_alloc();
  *(_QWORD *)(v6 + 344) = swift_task_alloc();
  *(_QWORD *)(v6 + 352) = swift_task_alloc();
  *(_QWORD *)(v6 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD410754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  sub_1DD41944C(*(_QWORD *)(v0 + 160), v3);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 368) = v4;
  if (v4(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 184) + OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate;
    swift_beginAccess();
    sub_1DD41944C(v7, v6);
    v8 = v4(v6, 1, v5);
    v9 = *(_QWORD *)(v0 + 360);
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 272);
    if (v8 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v0 + 184) + OBJC_IVAR___HFActivityLogCoordinator_Swift_oneMonthAgo, v10);
      sub_1DD3540B8(v12, (uint64_t *)&unk_1F03E4600);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v9, *(_QWORD *)(v0 + 272), v10);
    }
    sub_1DD3540B8(*(_QWORD *)(v0 + 280), (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  }
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 264);
  sub_1DD41944C(*(_QWORD *)(v0 + 168), v14);
  if (v4(v14, 1, v13) == 1)
  {
    v15 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 184) + OBJC_IVAR___HFActivityLogCoordinator_Swift_newestFetchEndDate;
    swift_beginAccess();
    sub_1DD41944C(v17, v16);
    if (v4(v16, 1, v15) == 1)
    {
      v18 = *(_QWORD *)(v0 + 256);
      sub_1DD63D750();
      sub_1DD3540B8(v18, (uint64_t *)&unk_1F03E4600);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 288));
    }
    sub_1DD3540B8(*(_QWORD *)(v0 + 264), (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 288));
  }
  v20 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 360);
  v21 = *(_QWORD *)(v0 + 336);
  v22 = *(_QWORD *)(v0 + 344);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 208);
  v41 = v21;
  v42 = v26;
  v44 = *(_BYTE *)(v0 + 417);
  v27 = *(_QWORD *)(v0 + 184);
  v28 = 200;
  if ((*(_BYTE *)(v0 + 416) & 1) == 0)
    v28 = *(_QWORD *)(v0 + 176);
  v43 = v28;
  v29 = sub_1DD63E2FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v26, 1, 1, v29);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  *(_QWORD *)(v0 + 376) = v30;
  v30(v22, v19, v25);
  v30(v21, v20, v25);
  sub_1DD63E2E4();
  swift_retain();
  v31 = sub_1DD63E2D8();
  v32 = *(unsigned __int8 *)(v23 + 80);
  v33 = (v32 + 40) & ~v32;
  v34 = (v24 + v32 + v33) & ~v32;
  v35 = (char *)swift_allocObject();
  v36 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v35 + 2) = v31;
  *((_QWORD *)v35 + 3) = v36;
  *((_QWORD *)v35 + 4) = v27;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
  *(_QWORD *)(v0 + 384) = v37;
  v37(&v35[v33], v22, v25);
  v37(&v35[v34], v41, v25);
  v38 = &v35[(v24 + v34 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v38 = v43;
  v38[8] = v44;
  *(_QWORD *)(v0 + 392) = sub_1DD415A04(v42, (uint64_t)&unk_1F03E5388, (uint64_t)v35);
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v39;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  *v39 = v0;
  v39[1] = sub_1DD410AF0;
  return sub_1DD63E338();
}

uint64_t sub_1DD410AF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD410B54()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(char **)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v0 + 384))(v3, &v7[*(int *)(*(_QWORD *)(v0 + 192) + 48)], v5);
  v10 = v8 + OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate;
  swift_beginAccess();
  sub_1DD41944C(v10, v6);
  v11 = v2(v6, 1, v5);
  sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
  v1(v4, v3, v5);
  if (v11 == 1)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 296) + 8);
    v12(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 288));
LABEL_5:
    v22 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 296);
    v24 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v24, *(_QWORD *)(v0 + 328), v22);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
    swift_beginAccess();
    sub_1DD4195E0(v24, v10);
    swift_endAccess();
    goto LABEL_6;
  }
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  v14 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 240);
  sub_1DD41944C(v10, v15);
  result = v13(v15, 1, v14);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v17 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = sub_1DD63D72C();
  v12 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v12(v17, v18);
  v12(v20, v18);
  if ((v21 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
  v27 = *(_QWORD *)(v0 + 352);
  v28 = *(_QWORD *)(v0 + 312);
  v29 = *(_QWORD *)(v0 + 288);
  v30 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 184) + OBJC_IVAR___HFActivityLogCoordinator_Swift_newestFetchEndDate;
  swift_beginAccess();
  sub_1DD41944C(v31, v30);
  LODWORD(v25) = v25(v30, 1, v29);
  sub_1DD3540B8(v30, (uint64_t *)&unk_1F03E4600);
  v26(v28, v27, v29);
  v32 = *(_QWORD *)(v0 + 288);
  v46 = v12;
  if ((_DWORD)v25 == 1)
  {
    v12(*(_QWORD *)(v0 + 312), v32);
    goto LABEL_10;
  }
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  v34 = *(_QWORD *)(v0 + 216);
  sub_1DD41944C(v31, v34);
  result = v33(v34, 1, v32);
  if ((_DWORD)result != 1)
  {
    v35 = *(_QWORD *)(v0 + 312);
    v36 = *(_QWORD *)(v0 + 288);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = sub_1DD63D720();
    v12(v35, v36);
    v12(v37, v36);
    if ((v38 & 1) == 0)
    {
LABEL_11:
      v43 = *(_QWORD *)(v0 + 352);
      v42 = *(_QWORD *)(v0 + 360);
      v44 = *(_QWORD *)(v0 + 328);
      v45 = *(_QWORD *)(v0 + 288);
      swift_release();
      v46(v44, v45);
      v46(v43, v45);
      v46(v42, v45);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
    }
LABEL_10:
    v39 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v41, *(_QWORD *)(v0 + 352), v39);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    swift_beginAccess();
    sub_1DD4195E0(v41, v31);
    swift_endAccess();
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DD410FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  v5(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4110F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 352) = a4;
  *(_QWORD *)(v5 + 72) = a3;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D0);
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  v6 = sub_1DD63DE34();
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D8);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  *(_QWORD *)(v5 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51E0);
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  *(_QWORD *)(v5 + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51E8);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51F0);
  *(_QWORD *)(v5 + 160) = v7;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  v8 = sub_1DD63D768();
  *(_QWORD *)(v5 + 208) = v8;
  *(_QWORD *)(v5 + 216) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51F8);
  *(_QWORD *)(v5 + 240) = v9;
  *(_QWORD *)(v5 + 248) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD4112CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  sub_1DD41944C(*(_QWORD *)(v0 + 56), v3);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v5 = v4(v3, 1, v1);
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 200);
  if (v5 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v0 + 80) + OBJC_IVAR___HFActivityLogCoordinator_Swift_oneMonthAgo, v7);
    sub_1DD3540B8(v9, (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v6, *(_QWORD *)(v0 + 200), v7);
  }
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 192);
  sub_1DD41944C(*(_QWORD *)(v0 + 64), v11);
  if (v4(v11, 1, v10) == 1)
  {
    v12 = *(_QWORD *)(v0 + 192);
    sub_1DD63D750();
    sub_1DD3540B8(v12, (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208));
  }
  v13 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 208);
  if ((*(_BYTE *)(v0 + 352) & 1) != 0)
    v17 = 200;
  else
    v17 = *(_QWORD *)(v0 + 72);
  sub_1DD411B78(v13, v15, v17, *(_QWORD *)(v0 + 256));
  v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v18(v15, v16);
  v18(v13, v16);
  sub_1DD63E74C();
  sub_1DD41AA88(&qword_1F03E5200, &qword_1F03E51E0, MEMORY[0x1E0DF0DB8]);
  sub_1DD63E374();
  sub_1DD63E764();
  *(_QWORD *)(v0 + 264) = type metadata accessor for HFEvent();
  sub_1DD63E770();
  *(_QWORD *)(v0 + 272) = sub_1DD353504(&qword_1F03E5208, (uint64_t (*)(uint64_t))type metadata accessor for ActivityLogCoordinator, (uint64_t)&protocol conformance descriptor for ActivityLogCoordinator);
  *(_QWORD *)(v0 + 280) = 0;
  if (*(_QWORD *)(v0 + 80))
  {
    swift_getObjectType();
    v19 = sub_1DD63E284();
    v21 = v20;
  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  *(_QWORD *)(v0 + 288) = v19;
  *(_QWORD *)(v0 + 296) = v21;
  return swift_task_switch();
}

uint64_t sub_1DD411534()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 304) = sub_1DD63E758();
  sub_1DD41AA88((unint64_t *)&unk_1F03E5210, &qword_1F03E51E8, MEMORY[0x1E0DF0DA0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v1;
  *v1 = v0;
  v1[1] = sub_1DD4115EC;
  return sub_1DD63E2CC();
}

uint64_t sub_1DD4115EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 304))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_1DD41165C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = v0[12];
  v2 = v0[13];
  v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DD3540B8(v3, &qword_1F03E51D0);
    v4 = v0[15];
    v5 = *(_QWORD *)(v0[33] - 8);
    v0[43] = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, 1, 1);
    return swift_task_switch();
  }
  else
  {
    v8 = v0[22];
    v7 = v0[23];
    v9 = v0[20];
    v10 = v0[21];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[14], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    v11 = (int *)sub_1DD63E764();
    v0[41] = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc();
    v0[42] = v13;
    *v13 = v0;
    v13[1] = sub_1DD4118FC;
    return ((uint64_t (*)(_QWORD, _QWORD))v14)(v0[15], v0[14]);
  }
}

uint64_t sub_1DD4117AC()
{
  _QWORD *v0;
  void (*v1)(_QWORD *, uint64_t);

  v1 = (void (*)(_QWORD *, uint64_t))v0[38];
  v0[40] = v0[6];
  v1(v0 + 2, 1);
  return swift_task_switch();
}

uint64_t sub_1DD4117FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4118FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1DD411978()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v2 = *(_QWORD *)(v0[33] - 8);
  v0[43] = v2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 56))(v1, 0, 1);
  return swift_task_switch();
}

uint64_t sub_1DD4119D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 120);
  result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 344) + 48))(v1, 1, *(_QWORD *)(v0 + 264));
  if ((_DWORD)result == 1)
  {
    v4 = *(_QWORD *)(v0 + 248);
    v3 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 240);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 280));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 280);
    v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      sub_1DD3540B8(v1, &qword_1F03E51D8);
      *(_QWORD *)(v0 + 280) = v7;
      if (*(_QWORD *)(v0 + 80))
      {
        swift_getObjectType();
        v8 = sub_1DD63E284();
        v10 = v9;
      }
      else
      {
        v8 = 0;
        v10 = 0;
      }
      *(_QWORD *)(v0 + 288) = v8;
      *(_QWORD *)(v0 + 296) = v10;
      return swift_task_switch();
    }
  }
  return result;
}

uint64_t sub_1DD411B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  unsigned int v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(unint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v41 = a3;
  v38 = a1;
  v39 = a2;
  v48 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51E0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - v8;
  v10 = sub_1DD63DC54();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DD63DC60();
  v14 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  v37 = v14;
  v15 = v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DD63D7C8();
  v42 = *(_QWORD *)(v18 - 8);
  v43 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void **)(v4 + 112);
  v22 = objc_msgSend(v21, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v23 = objc_msgSend(v21, sel_hf_currentUserIsOwner);
  v24 = (unsigned int *)MEMORY[0x1E0D32D88];
  if (!v23)
    v24 = (unsigned int *)MEMORY[0x1E0D32D90];
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *v24, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6020);
  v25 = sub_1DD63DC9C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DD668460;
  v30 = v29 + v28;
  v31 = *(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104);
  v31(v30, *MEMORY[0x1E0D32E08], v25);
  v31(v30 + v27, *MEMORY[0x1E0D32E00], v25);
  v31(v30 + 2 * v27, *MEMORY[0x1E0D32E10], v25);
  sub_1DD3EE6BC(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1DD63DD08();
  sub_1DD63DCF0();
  swift_bridgeObjectRelease();
  sub_1DD63DCE4();
  v33 = v44;
  v32 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v9, v45);
  type metadata accessor for HFEvent();
  sub_1DD41AA88(&qword_1F03E5200, &qword_1F03E51E0, MEMORY[0x1E0DF0DB8]);
  sub_1DD63E788();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v20, v43);
}

uint64_t sub_1DD411F0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD411F78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[3];
  v2 = v0[4];
  v3 = sub_1DD63D768();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(v1, 1, 1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1DD412018;
  return sub_1DD4110F8(v0[4], v0[3], 1, 0);
}

uint64_t sub_1DD412018(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 32);
    sub_1DD3540B8(*(_QWORD *)(v4 + 24), (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v5, (uint64_t *)&unk_1F03E4600);
    return swift_task_switch();
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 32);
    sub_1DD3540B8(*(_QWORD *)(v4 + 24), (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v7, (uint64_t *)&unk_1F03E4600);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(BOOL))(v4 + 8))(a1 > 0);
  }
}

uint64_t sub_1DD4120FC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD41225C(const void *a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v2[3] = swift_task_alloc();
  v2[4] = swift_task_alloc();
  v2[5] = _Block_copy(a1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1DD4122EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[3];
  v2 = v0[4];
  v3 = sub_1DD63D768();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(v1, 1, 1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1DD41238C;
  return sub_1DD4110F8(v0[4], v0[3], 1, 0);
}

uint64_t sub_1DD41238C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 32);
    sub_1DD3540B8(*(_QWORD *)(v4 + 24), (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v5, (uint64_t *)&unk_1F03E4600);
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(v4 + 40);
    sub_1DD3540B8(*(_QWORD *)(v4 + 24), (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v8, (uint64_t *)&unk_1F03E4600);
    swift_release();
    (*(void (**)(uint64_t, BOOL, _QWORD))(v7 + 16))(v7, a1 > 0, 0);
    _Block_release(*(const void **)(v4 + 40));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_1DD412498()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release();
  v3 = (void *)sub_1DD63D69C();

  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v3);
  _Block_release(*(const void **)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD412520(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4150);
  v2[11] = swift_task_alloc();
  v2[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5228);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v3 = sub_1DD63D768();
  v2[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 + 64);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD41266C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate;
  v6 = v4 + v5;
  swift_beginAccess();
  sub_1DD41944C(v6, v3);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 216) = v7;
  if (v7(v3, 1, v1) == 1)
  {
    sub_1DD3540B8(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_1F03E4600);
LABEL_4:
    v12 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v18 = sub_1DD63E2FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    *(_QWORD *)(v0 + 224) = v19;
    v19(v12, v16, v14);
    sub_1DD63E2E4();
    swift_retain();
    v20 = sub_1DD63E2D8();
    v21 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v22 = (char *)swift_allocObject();
    v23 = MEMORY[0x1E0DF06E8];
    *((_QWORD *)v22 + 2) = v20;
    *((_QWORD *)v22 + 3) = v23;
    *((_QWORD *)v22 + 4) = v17;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    *(_QWORD *)(v0 + 232) = v24;
    v24(&v22[v21], v12, v14);
    *(_QWORD *)(v0 + 240) = sub_1DD3D8878(v15, (uint64_t)&unk_1F03E5238, (uint64_t)v22);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v25;
    *v25 = v0;
    v25[1] = sub_1DD412930;
    return sub_1DD63E350();
  }
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v0 + 144), v9);
  sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v11 = sub_1DD63E104();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  if ((v11 & 1) != 0)
    goto LABEL_4;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD412930()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD412988()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_1DD3540B8((uint64_t)v1, &qword_1F03E4150);
    swift_release();
    v31 = 0;
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v31);
  }
  v3 = *(void (**)(char *, char *, uint64_t))(v0 + 232);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v4 = *(char **)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 176);
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v0 + 224);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 96);
  v7 = *(char **)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 208);
  v10 = (char *)v1 + *(int *)(v2 + 48);
  v11 = &v7[*(int *)(v8 + 48)];
  *(_QWORD *)v7 = *v1;
  v3(v11, v10, v5);
  v31 = *(_QWORD *)v7;
  v3(v4, &v7[*(int *)(v8 + 48)], v5);
  sub_1DD41944C(v9, v6);
  v12 = v28(v6, 1, v5);
  sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
  v30(v29, v4, v5);
  if (v12 == 1)
  {
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 8);
    v13(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
LABEL_7:
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 120);
    v27 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v26, v23, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
    swift_beginAccess();
    sub_1DD4195E0(v26, v27);
    swift_endAccess();
    swift_release();
    v13(v23, v24);
    goto LABEL_9;
  }
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v15 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 128);
  sub_1DD41944C(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 208), v16);
  result = v14(v16, 1, v15);
  if ((_DWORD)result != 1)
  {
    v18 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 128);
    v22 = sub_1DD63D72C();
    v13 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v13(v18, v20);
    v13(v21, v20);
    if ((v22 & 1) == 0)
    {
      v13(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
      swift_release();
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD412C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v8;

  v5[2] = sub_1DD63E2E4();
  v5[3] = sub_1DD63E2D8();
  v8 = (_QWORD *)swift_task_alloc();
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1DD412CFC;
  return sub_1DD412D9C(a1, a5);
}

uint64_t sub_1DD412CFC()
{
  swift_task_dealloc();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD412D6C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD412D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v4 = sub_1DD63DF18();
  v3[20] = v4;
  v3[21] = *(_QWORD *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = *(_QWORD *)(type metadata accessor for HFEvent() - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v5 = sub_1DD63D81C();
  v3[28] = v5;
  v3[29] = *(_QWORD *)(v5 - 8);
  v3[30] = swift_task_alloc();
  v6 = sub_1DD63D828();
  v3[31] = v6;
  v3[32] = *(_QWORD *)(v6 - 8);
  v3[33] = swift_task_alloc();
  v7 = sub_1DD63D810();
  v3[34] = v7;
  v3[35] = *(_QWORD *)(v7 - 8);
  v3[36] = swift_task_alloc();
  v8 = sub_1DD63D84C();
  v3[37] = v8;
  v3[38] = *(_QWORD *)(v8 - 8);
  v3[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v9 = sub_1DD63D768();
  v3[46] = v9;
  v3[47] = *(_QWORD *)(v9 - 8);
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  sub_1DD63E2E4();
  v3[54] = sub_1DD63E2D8();
  v3[55] = sub_1DD63E284();
  v3[56] = v10;
  return swift_task_switch();
}

uint64_t sub_1DD412FF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void (*v51)(uint64_t, uint64_t);
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  if (*((_BYTE *)v0 + 512) == 1)
  {
    v1 = v0[17];
    swift_release();
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  v113 = v0[47];
  v115 = v0[46];
  v101 = v0[39];
  v103 = v0[45];
  v4 = v0[36];
  v109 = v0[38];
  v111 = v0[37];
  v6 = v0[34];
  v5 = v0[35];
  v105 = v6;
  v7 = v0[32];
  v8 = v0[33];
  v9 = v0;
  v10 = v0[31];
  v11 = v9[29];
  v12 = v9[30];
  v13 = v9[28];
  sub_1DD63D834();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x1E0CB0F90], v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x1E0CB1010], v10);
  v14 = v13;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v12, *MEMORY[0x1E0CB0FD8], v13);
  v15 = v103;
  sub_1DD63D840();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v105);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v101, v111);
  v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48);
  result = v104(v15, 1, v115);
  if ((_DWORD)result == 1)
    goto LABEL_54;
  v16 = v9[46];
  v17 = v9[47];
  v18 = v9[44];
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  v19(v9[53], v9[45], v16);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v20(v18, 1, 1, v16);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  v21 = swift_bridgeObjectRetain();
  v22 = (_QWORD *)sub_1DD40DC10(v21);
  swift_bridgeObjectRelease();
  v118 = v22;
  sub_1DD417AF4(&v118);
  v100 = v19;
  swift_bridgeObjectRelease();
  v23 = v118;
  v114 = v9;
  v98 = v118[2];
  v24 = 0;
  if (v98)
  {
    v25 = 0;
    v106 = v9 + 2;
    v94 = v9 + 7;
    v112 = v9[47];
    v110 = v9[25];
    v99 = (char *)v118 + ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80));
    v96 = v20;
    v97 = v118;
    while (1)
    {
      if (v25 >= v23[2])
        goto LABEL_50;
      v26 = v9[46];
      v27 = v9[43];
      (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v27, &v99[*(_QWORD *)(v112 + 72) * v25], v26);
      v20(v27, 0, 1, v26);
      if (v104(v27, 1, v26) == 1)
        goto LABEL_32;
      v100(v9[52], v9[43], v9[46]);
      if (v24 >= 20)
      {
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v9[52], v9[46]);
        swift_release();
        goto LABEL_35;
      }
      v102 = v25;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1DD63DF6C();
      swift_release();
      swift_release();
      v28 = v9[15];
      if (!*(_QWORD *)(v28 + 16))
        break;
      v29 = sub_1DD3D9658(v9[52]);
      if ((v30 & 1) == 0)
        break;
      v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v116 = v31;
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        v33 = v9[46];
        v34 = v9[44];
        v35 = v9[42];
        sub_1DD419F44(v31+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(_QWORD *)(v110 + 72) * (v32 - 1), v9[27]);
        sub_1DD41944C(v34, v35);
        if (v104(v35, 1, v33) == 1)
        {
          v107 = v9[46];
          v36 = v9[44];
          v37 = v9[42];
          v38 = v114[41];
          v39 = v114[27];
          sub_1DD3540B8(v37, (uint64_t *)&unk_1F03E4600);
          sub_1DD63DE10();
          __swift_project_boxed_opaque_existential_1(v94, v114[10]);
          sub_1DD63DCB4();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v94);
          sub_1DD419F88(v39);
          sub_1DD3540B8(v36, (uint64_t *)&unk_1F03E4600);
          v20(v38, 0, 1, v107);
          v40 = v38;
          v9 = v114;
          sub_1DD41AA44(v40, v36, (uint64_t *)&unk_1F03E4600);
        }
        else
        {
          v41 = v9[42];
          sub_1DD419F88(v9[27]);
          sub_1DD3540B8(v41, (uint64_t *)&unk_1F03E4600);
        }
      }
      if ((sub_1DD63D720() & 1) != 0)
      {
        v65 = v9[52];
        v66 = v9[46];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v65, v66);
        swift_release();
        goto LABEL_40;
      }
      if ((sub_1DD63D72C() & 1) != 0)
      {
        v42 = v9[52];
        v43 = v9[46];
        v44 = *(_QWORD *)(v116 + 16);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v42, v43);
        v45 = __OFADD__(v24, v44);
        v24 += v44;
        if (v45)
          goto LABEL_51;
        v20 = v96;
      }
      else
      {
        if (v32)
        {
          v108 = v116 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
          v95 = v32 + v24;
          while (v32 <= *(_QWORD *)(v116 + 16))
          {
            --v32;
            v46 = v9[51];
            v47 = v9[46];
            v48 = v9[26];
            sub_1DD419F44(v108 + *(_QWORD *)(v110 + 72) * v32, v48);
            sub_1DD63DE10();
            v49 = v9[5];
            v9 = (uint64_t *)v9[6];
            __swift_project_boxed_opaque_existential_1(v106, v49);
            sub_1DD63DCB4();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v106);
            v50 = sub_1DD63D72C();
            v51 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
            v51(v46, v47);
            sub_1DD419F88(v48);
            if ((v50 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v9 = v114;
LABEL_8:
              v20 = v96;
              v51(v9[52], v9[46]);
              goto LABEL_9;
            }
            if (__OFADD__(v24, 1))
              goto LABEL_49;
            ++v24;
            v9 = v114;
            if (!v32)
            {
              swift_bridgeObjectRelease();
              v24 = v95;
              goto LABEL_8;
            }
          }
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v9[52], v9[46]);
      }
LABEL_9:
      v23 = v97;
      v25 = v102 + 1;
      if (v102 + 1 == v98)
        goto LABEL_31;
    }
    result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_54:
    __break(1u);
    return result;
  }
LABEL_31:
  v20(v9[43], 1, 1, v9[46]);
LABEL_32:
  swift_release();
  if (v24 >= 20)
  {
LABEL_35:
    swift_release();
    if (qword_1F03E3810 != -1)
LABEL_52:
      swift_once();
    v52 = (id)qword_1F03ED460;
    sub_1DD63DF24();
    v53 = sub_1DD63DF00();
    v54 = sub_1DD63E470();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v55 = 134217984;
      v9[12] = v24;
      sub_1DD63E53C();
      _os_log_impl(&dword_1DD34E000, v53, v54, "Not prefetching events, at least %ld left in the list", v55, 0xCu);
      MEMORY[0x1DF0DB358](v55, -1, -1);
    }
    v56 = v9[53];
    v57 = v9[46];
    v58 = v9[47];
    v59 = v9[44];
    v60 = v9[24];
    v61 = v114[21];
    v62 = v114[20];
    v63 = v114[17];

    v0 = v114;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    sub_1DD3540B8(v59, (uint64_t *)&unk_1F03E4600);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 1, 1, v64);
    goto LABEL_3;
  }
LABEL_40:
  if (qword_1F03E3810 != -1)
    swift_once();
  v67 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v68 = sub_1DD63DF00();
  v69 = sub_1DD63E488();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v70 = 134217984;
    v9[14] = v24;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v68, v69, "Prefetching more events, only %ld left in the list", v70, 0xCu);
    MEMORY[0x1DF0DB358](v70, -1, -1);
  }
  v71 = v9[50];
  v72 = v9[47];
  v117 = v9[48];
  v73 = v9[46];
  v74 = v9[44];
  v75 = v9[40];
  v76 = v9[23];
  v77 = v9[21];
  v78 = v114[20];
  v79 = v68;
  v80 = v114[19];
  v81 = v114[18];

  v82 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v114[57] = (uint64_t)v82;
  v82(v76, v78);
  v83 = v80 + OBJC_IVAR___HFActivityLogCoordinator_Swift_oneMonthAgo;
  v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
  v84(v71, v83, v73);
  sub_1DD41944C(v74, v75);
  v84(v117, v81, v73);
  v85 = v104(v75, 1, v73);
  v86 = v114[49];
  if (v85 == 1)
  {
    v87 = v114[40];
    v100(v114[49], v114[48], v114[46]);
    sub_1DD3540B8(v87, (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    v88 = v114[46];
    v89 = v114[40];
    (*(void (**)(uint64_t, uint64_t))(v114[47] + 8))(v114[48], v88);
    v100(v86, v89, v88);
  }
  v90 = v114[17];
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
  v114[58] = v91;
  v92 = v90 + *(int *)(v91 + 48);
  v93 = (_QWORD *)swift_task_alloc();
  v114[59] = (uint64_t)v93;
  *v93 = v114;
  v93[1] = sub_1DD413C20;
  return sub_1DD414B74(v92, v114[50], v114[49], 200, 0);
}

uint64_t sub_1DD413C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 376);
  *(_QWORD *)(*(_QWORD *)v2 + 480) = v1;
  swift_task_dealloc();
  v6 = v4[49];
  v7 = v4[50];
  v8 = v4[46];
  if (v1)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v4[63] = v9;
  }
  else
  {
    v4[61] = a1;
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v4[62] = v9;
  }
  v9(v6, v8);
  v9(v7, v8);
  return swift_task_switch();
}

uint64_t sub_1DD413CE0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 488);
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD **)(v0 + 136);
  swift_release();
  sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
  v1(v4, v5);
  *v7 = v2;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v7, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD413E7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 480);
  swift_release();
  v2 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v3 = v1;
  v4 = v1;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E47C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 480);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 104) = v11;
    sub_1DD63E53C();
    *v9 = v11;

    _os_log_impl(&dword_1DD34E000, v5, v6, "Error while prefetching events: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v9, -1, -1);
    MEMORY[0x1DF0DB358](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 480);

  }
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v14 = *(_QWORD *)(v0 + 464);
  v16 = *(_QWORD *)(v0 + 424);
  v17 = *(_QWORD *)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 136);

  v15(v19, v20);
  sub_1DD3540B8(v18, (uint64_t *)&unk_1F03E4600);
  v13(v16, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v21, 1, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD414180(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1DD63E2E4();
  swift_retain();
  v8 = sub_1DD63E2D8();
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  *(_BYTE *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = v2;
  sub_1DD3D883C((uint64_t)v6, (uint64_t)&unk_1F03E5258, v9);
  return swift_release();
}

uint64_t sub_1DD414264(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 16) = a5;
  *(_BYTE *)(v5 + 80) = a4;
  v6 = sub_1DD63DF18();
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  *(_QWORD *)(v5 + 48) = swift_task_alloc();
  sub_1DD63E2E4();
  *(_QWORD *)(v5 + 56) = sub_1DD63E2D8();
  *(_QWORD *)(v5 + 64) = sub_1DD63E284();
  *(_QWORD *)(v5 + 72) = v7;
  return swift_task_switch();
}

uint64_t sub_1DD41430C()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_BYTE *)(v0 + 80) == 1)
  {
    if (qword_1F03E3810 != -1)
      swift_once();
    v1 = (id)qword_1F03ED460;
    sub_1DD63DF24();
    v2 = sub_1DD63DF00();
    v3 = sub_1DD63E488();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1DD34E000, v2, v3, "Beginning auto-fetch timer", v4, 2u);
      MEMORY[0x1DF0DB358](v4, -1, -1);
    }
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    if (qword_1F03E3810 != -1)
      swift_once();
    v8 = (id)qword_1F03ED460;
    sub_1DD63DF24();
    v9 = sub_1DD63DF00();
    v10 = sub_1DD63E488();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1DD34E000, v9, v10, "Stopping auto-fetch timer", v11, 2u);
      MEMORY[0x1DF0DB358](v11, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 40);
    v14 = *(_QWORD *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  return swift_task_switch();
}

uint64_t sub_1DD4144EC()
{
  sub_1DD4145EC(0);
  return swift_task_switch();
}

uint64_t sub_1DD414528()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD41456C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer;
  v3 = *(void **)(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, sel_invalidate);
    v5 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = 0;

  }
  return swift_task_switch();
}

void sub_1DD4145EC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  _QWORD aBlock[6];

  v3 = sub_1DD63DF18();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer;
  v8 = *(void **)(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer);
  if (v8)
  {
    objc_msgSend(v8, sel_invalidate);
  }
  else if ((a1 & 1) != 0)
  {
    return;
  }
  v9 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1DD419EA4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD417AA4;
  aBlock[3] = &block_descriptor_4;
  v10 = _Block_copy(aBlock);
  v11 = (void *)objc_opt_self();
  swift_retain();
  v12 = objc_msgSend(v11, sel_timerWithTimeInterval_repeats_block_, 0, v10, 5.0);
  _Block_release(v10);
  swift_release();
  swift_release();
  v13 = *(void **)(v1 + v7);
  *(_QWORD *)(v1 + v7) = v12;
  v14 = v12;

  if (qword_1F03E3810 != -1)
    swift_once();
  v15 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v16 = sub_1DD63DF00();
  v17 = sub_1DD63E470();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1DD34E000, v16, v17, "Scheduling update timer", v18, 2u);
    MEMORY[0x1DF0DB358](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(v19, sel_addTimer_forMode_, v14, *MEMORY[0x1E0C99748]);

}

void ActivityLogCoordinator.__allocating_init()()
{
  swift_allocObject();
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ActivityLogCoordinator.init()()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ActivityLogCoordinator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DD41490C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ActivityLogCoordinator();
  result = sub_1DD63DF30();
  *a1 = result;
  return result;
}

void sub_1DD414948()
{
  __CFString *v0;
  BOOL v1;

  v0 = CFSTR("activityHistoryDebug");
  v1 = HFPreferencesBoolForKey(v0);

  byte_1F03ED420 = v1;
}

void sub_1DD414988()
{
  qword_1F03ED428 = 0xC143C68000000000;
}

uint64_t sub_1DD41499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _QWORD *v8;
  uint64_t v14;
  _QWORD *v15;

  v8[2] = a1;
  v8[3] = sub_1DD63E2E4();
  v8[4] = sub_1DD63E2D8();
  v14 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240) + 48);
  v15 = (_QWORD *)swift_task_alloc();
  v8[5] = v15;
  *v15 = v8;
  v15[1] = sub_1DD414A5C;
  return sub_1DD414B74(v14, a5, a6, a7, a8);
}

uint64_t sub_1DD414A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD414B00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD414B40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD414B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 208) = a4;
  *(_QWORD *)(v6 + 216) = v5;
  *(_BYTE *)(v6 + 435) = a5;
  *(_QWORD *)(v6 + 192) = a2;
  *(_QWORD *)(v6 + 200) = a3;
  *(_QWORD *)(v6 + 184) = a1;
  v7 = sub_1DD63D7C8();
  *(_QWORD *)(v6 + 224) = v7;
  *(_QWORD *)(v6 + 232) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 240) = swift_task_alloc();
  v8 = sub_1DD63D768();
  *(_QWORD *)(v6 + 248) = v8;
  *(_QWORD *)(v6 + 256) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  v9 = sub_1DD63D84C();
  *(_QWORD *)(v6 + 272) = v9;
  *(_QWORD *)(v6 + 280) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 288) = swift_task_alloc();
  v10 = sub_1DD63DF18();
  *(_QWORD *)(v6 + 296) = v10;
  *(_QWORD *)(v6 + 304) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 312) = swift_task_alloc();
  *(_QWORD *)(v6 + 320) = swift_task_alloc();
  *(_QWORD *)(v6 + 328) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v6 + 336) = swift_task_alloc();
  *(_QWORD *)(v6 + 344) = swift_task_alloc();
  *(_QWORD *)(v6 + 352) = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51F8);
  *(_QWORD *)(v6 + 360) = v11;
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 376) = swift_task_alloc();
  sub_1DD63E2E4();
  *(_QWORD *)(v6 + 384) = sub_1DD63E2D8();
  *(_QWORD *)(v6 + 392) = sub_1DD63E284();
  *(_QWORD *)(v6 + 400) = v12;
  return swift_task_switch();
}

void sub_1DD414D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;

  if ((*(_BYTE *)(v0 + 435) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 216);
    v2 = *(_QWORD *)(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount);
    v3 = __OFADD__(v2, 1);
    v4 = v2 + 1;
    if (v3)
    {
      __break(1u);
      return;
    }
    *(_QWORD *)(v1 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount) = v4;
    if (v4 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 434) = 1;
      swift_retain();
      sub_1DD63DF78();
    }
  }
  v5 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 256);
  sub_1DD411B78(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 376));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  if (qword_1F03E37F8 != -1)
    swift_once();
  v8 = byte_1F03ED420;
  v10 = (char *)&dword_1F03E5340 + dword_1F03E5340;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v9;
  *v9 = v0;
  v9[1] = sub_1DD414E68;
  ((void (*)(_QWORD, _QWORD, uint64_t))v10)(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 376), v8);
}

uint64_t sub_1DD414E68(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 416) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 424) = a1;
  return swift_task_switch();
}

uint64_t sub_1DD414EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD);
  uint64_t *v31;
  uint64_t *v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58[2];

  v1 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  swift_release();
  sub_1DD3540B8(v2, (uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v0 + 144) = v1;
  v4 = (uint64_t *)(v0 + 144);
  sub_1DD41AA44(v3, v2, (uint64_t *)&unk_1F03E4600);
  if (qword_1F03E3810 != -1)
    swift_once();
  v5 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E470();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    swift_beginAccess();
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 16);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v6, v7, "Received %ld events", v8, 0xCu);
    MEMORY[0x1DF0DB358](v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 304);

  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 128) = 0;
  swift_retain();
  sub_1DD63DF78();
  v13 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v14 = sub_1DD63DF00();
  v15 = sub_1DD63E488();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 296);
  if (v16)
  {
    v55 = *(_QWORD *)(v0 + 320);
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v58[0] = v20;
    *(_DWORD *)v19 = 134218242;
    swift_beginAccess();
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 16);
    sub_1DD63E53C();
    *(_WORD *)(v19 + 12) = 2080;
    if (byte_1F03ED420)
      v21 = 0x2947554245442820;
    else
      v21 = 0;
    if (byte_1F03ED420)
      v22 = 0xE900000000000020;
    else
      v22 = 0xE000000000000000;
    *(_QWORD *)(v0 + 176) = sub_1DD3C3160(v21, v22, v58);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v14, v15, "%ld events after processing%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v20, -1, -1);
    MEMORY[0x1DF0DB358](v19, -1, -1);

    v12(v55, v18);
  }
  else
  {

    v12(v17, v18);
  }
  swift_beginAccess();
  v23 = *v4;
  v24 = *(_QWORD *)(*v4 + 16);
  if (v24)
  {
    v25 = *(_QWORD *)(v0 + 416);
    v26 = *(_QWORD *)(v0 + 288);
    sub_1DD63D834();
    v27 = swift_task_alloc();
    *(_QWORD *)(v27 + 16) = v26;
    v28 = swift_bridgeObjectRetain();
    v29 = sub_1DD416CB0(v28, (void (*)(_QWORD))sub_1DD419FC4, v27);
    swift_task_dealloc();
    swift_getKeyPath();
    swift_getKeyPath();
    v30 = (void (*)(uint64_t, _QWORD))sub_1DD63DF60();
    v32 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58[0] = *v32;
    *v32 = 0x8000000000000000;
    sub_1DD41A6B0(v29, (uint64_t)sub_1DD418DB8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v58);
    if (v25)
    {
      *v32 = v58[0];
      return swift_bridgeObjectRelease();
    }
    v36 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 288);
    v37 = *(_QWORD *)(v0 + 272);
    *v32 = v58[0];
    swift_bridgeObjectRelease();
    v30(v0 + 16, 0);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    v23 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v23 + 16);
  }
  if (v24 == *(_QWORD *)(v0 + 208))
  {
    v38 = *(_QWORD *)(v0 + 336);
    v39 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 256);
    sub_1DD41944C(*(_QWORD *)(v0 + 352), v38);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
    if ((_DWORD)result == 1)
      goto LABEL_28;
    v41 = (_QWORD *)(v0 + 336);
    v42 = 4;
  }
  else
  {
    v41 = (_QWORD *)(v0 + 192);
    v42 = 2;
  }
  v44 = *(_QWORD *)(v0 + 368);
  v43 = *(_QWORD *)(v0 + 376);
  v46 = *(_QWORD *)(v0 + 352);
  v45 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 256);
  v48 = *(_QWORD *)(v0 + 264);
  v49 = *(_QWORD *)(v0 + 248);
  v57 = *(_BYTE *)(v0 + 435);
  v50 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 8 * v42))(v48, *v41, v49);
  v56 = *(_QWORD *)(v23 + 16);
  sub_1DD3540B8(v46, (uint64_t *)&unk_1F03E4600);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v50, v48, v49);
  result = swift_bridgeObjectRelease();
  if ((v57 & 1) != 0)
  {
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v56);
  }
  v51 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v51 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount);
  v53 = __OFSUB__(v52, 1);
  v54 = v52 - 1;
  if (!v53)
  {
    *(_QWORD *)(v51 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount) = v54;
    if (!v54)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 433) = 0;
      swift_retain();
      sub_1DD63DF78();
    }
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DD415584()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_release();
  if (qword_1F03E3810 != -1)
    swift_once();
  v1 = *(void **)(v0 + 416);
  v2 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E47C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 416);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 296);
  if (v7)
  {
    v38 = *(_QWORD *)(v0 + 304);
    v39 = *(_QWORD *)(v0 + 312);
    v12 = *(_QWORD *)(v0 + 240);
    v34 = *(_QWORD *)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 224);
    v15 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v40 = v37;
    *(_DWORD *)v15 = 136315394;
    v16 = objc_msgSend(*(id *)(v13 + 112), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    sub_1DD353504(&qword_1F03E42B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1DD63E824();
    v36 = v11;
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v14);
    *(_QWORD *)(v0 + 136) = sub_1DD3C3160(v17, v19, &v40);
    sub_1DD63E53C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2112;
    v20 = v8;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v21;
    sub_1DD63E53C();
    *v35 = v21;

    _os_log_impl(&dword_1DD34E000, v5, v6, "Error with home query for %s %@", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v37, -1, -1);
    MEMORY[0x1DF0DB358](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v36);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v22 = *(void **)(v0 + 416);
  v24 = *(_QWORD *)(v0 + 368);
  v23 = *(_QWORD *)(v0 + 376);
  v26 = *(_QWORD *)(v0 + 352);
  v25 = *(_QWORD *)(v0 + 360);
  v27 = *(_BYTE *)(v0 + 435);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 160) = v22;
  swift_retain();
  v28 = v22;
  sub_1DD63DF78();
  swift_willThrow();
  sub_1DD3540B8(v26, (uint64_t *)&unk_1F03E4600);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  if ((v27 & 1) != 0)
    goto LABEL_10;
  v30 = *(_QWORD *)(v0 + 216);
  v31 = *(_QWORD *)(v30 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (!v32)
  {
    *(_QWORD *)(v30 + OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount) = v33;
    if (!v33)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 432) = 0;
      swift_retain();
      sub_1DD63DF78();
    }
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD415A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1DD63E2FC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DD63E2F0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DD3540B8(a1, &qword_1ED378350);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD63E284();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5240);
  return swift_task_create();
}

uint64_t sub_1DD415B38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v3 + 516) = a3;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = a2;
  v4 = sub_1DD63DE34();
  *(_QWORD *)(v3 + 176) = v4;
  *(_QWORD *)(v3 + 184) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  v5 = sub_1DD63DD68();
  *(_QWORD *)(v3 + 208) = v5;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E47E0);
  *(_QWORD *)(v3 + 240) = swift_task_alloc();
  v6 = sub_1DD63D7C8();
  *(_QWORD *)(v3 + 248) = v6;
  *(_QWORD *)(v3 + 256) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 264) = swift_task_alloc();
  *(_QWORD *)(v3 + 272) = swift_task_alloc();
  v7 = sub_1DD63D768();
  *(_QWORD *)(v3 + 280) = v7;
  *(_QWORD *)(v3 + 288) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 296) = swift_task_alloc();
  v8 = type metadata accessor for HFEvent();
  *(_QWORD *)(v3 + 304) = v8;
  *(_QWORD *)(v3 + 312) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  *(_QWORD *)(v3 + 328) = swift_task_alloc();
  *(_QWORD *)(v3 + 336) = swift_task_alloc();
  *(_QWORD *)(v3 + 344) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D8);
  *(_QWORD *)(v3 + 352) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51F8);
  *(_QWORD *)(v3 + 360) = v9;
  *(_QWORD *)(v3 + 368) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 376) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51F0);
  *(_QWORD *)(v3 + 384) = v10;
  *(_QWORD *)(v3 + 392) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 + 400) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v3 + 408) = swift_task_alloc();
  *(_QWORD *)(v3 + 416) = swift_task_alloc();
  *(_QWORD *)(v3 + 424) = swift_task_alloc();
  *(_QWORD *)(v3 + 432) = swift_task_alloc();
  *(_QWORD *)(v3 + 440) = sub_1DD63E2E4();
  *(_QWORD *)(v3 + 448) = sub_1DD63E2D8();
  *(_QWORD *)(v3 + 456) = sub_1DD63E284();
  *(_QWORD *)(v3 + 464) = v11;
  return swift_task_switch();
}

uint64_t sub_1DD415DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 288) + 56);
  *(_QWORD *)(v0 + 472) = v7;
  v7(v1, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  sub_1DD41AA88(&qword_1F03E5368, &qword_1F03E51F8, MEMORY[0x1E0DF0C70]);
  sub_1DD63E374();
  v8 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v0 + 512) = *MEMORY[0x1E0D33128];
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 480) = v8;
  *(_QWORD *)(v0 + 488) = v9;
  *(_QWORD *)(v0 + 496) = sub_1DD63E2D8();
  sub_1DD41AA88(&qword_1F03E5370, &qword_1F03E51F0, MEMORY[0x1E0DF0C48]);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v10;
  *v10 = v0;
  v10[1] = sub_1DD415EFC;
  return sub_1DD63E2CC();
}

uint64_t sub_1DD415EFC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DD415F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  char v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  char v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  void (*v83)(uint64_t, _QWORD);
  void (*v84)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 352);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 312) + 48))(v1, 1, *(_QWORD *)(v0 + 304)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 432);
    v3 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
    swift_release();
    sub_1DD41AA44(v2, v3, (uint64_t *)&unk_1F03E4600);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 488));
  }
  v6 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 280);
  v10 = *(_QWORD *)(v0 + 288);
  sub_1DD41AA00(v1, v7);
  sub_1DD41944C(v5, v6);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v5) = v11(v6, 1, v9);
  sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
  sub_1DD419F44(v7, v8);
  if ((_DWORD)v5 == 1)
  {
    sub_1DD419F88(*(_QWORD *)(v0 + 336));
LABEL_7:
    v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 472);
    v23 = *(_QWORD *)(v0 + 432);
    v24 = *(_QWORD *)(v0 + 408);
    v25 = *(_QWORD *)(v0 + 280);
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    sub_1DD63DCB4();
    __swift_destroy_boxed_opaque_existential_0(v0 + 96);
    sub_1DD3540B8(v23, (uint64_t *)&unk_1F03E4600);
    v22(v24, 0, 1, v25);
    sub_1DD41AA44(v24, v23, (uint64_t *)&unk_1F03E4600);
LABEL_8:
    if ((*(_BYTE *)(v0 + 516) & 1) == 0)
    {
      v26 = *(_DWORD *)(v0 + 512);
      v27 = *(_QWORD *)(v0 + 200);
      v28 = *(_QWORD *)(v0 + 176);
      v29 = *(_QWORD *)(v0 + 184);
      v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      v30(v27, *(_QWORD *)(v0 + 344), v28);
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 88);
      v32 = v31(v27, v28);
      v33 = *(_QWORD *)(v0 + 248);
      v34 = *(_QWORD *)(v0 + 256);
      v35 = *(_QWORD *)(v0 + 240);
      if (v32 == v26)
      {
        v84 = v30;
        v36 = *(_QWORD *)(v0 + 232);
        v37 = *(_QWORD *)(v0 + 208);
        v38 = *(_QWORD *)(v0 + 216);
        v39 = *(_QWORD *)(v0 + 200);
        v83 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 96);
        v83(v39, *(_QWORD *)(v0 + 176));
        v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
        v82(v36, v39, v37);
        sub_1DD63DD5C();
        v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        v40(v36, v37);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
        sub_1DD63DDB0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v33);
        __swift_destroy_boxed_opaque_existential_0(v0 + 56);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) != 1)
        {
          v41 = *(_DWORD *)(v0 + 512);
          v42 = *(_QWORD *)(v0 + 344);
          v43 = *(_QWORD *)(v0 + 192);
          v44 = *(_QWORD *)(v0 + 176);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
          v84(v43, v42, v44);
          if (v31(v43, v44) == v41)
          {
            v45 = *(char **)(v0 + 224);
            v46 = *(_QWORD *)(v0 + 208);
            v47 = *(_QWORD *)(v0 + 192);
            v83(v47, *(_QWORD *)(v0 + 176));
            v82((uint64_t)v45, v47, v46);
            LOBYTE(v47) = sub_1DD40AF8C(v45);
            v40((uint64_t)v45, v46);
            if ((v47 & 1) != 0)
            {
              v48 = *(_QWORD *)(v0 + 480);
              if (*(_QWORD *)(v48 + 16))
              {
                v49 = sub_1DD35333C(*(_QWORD *)(v0 + 272));
                v48 = *(_QWORD *)(v0 + 480);
                if ((v50 & 1) != 0)
                {
                  v51 = *(_QWORD *)(v0 + 272);
                  v52 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v49);
                  swift_bridgeObjectRetain();
                  v53 = sub_1DD35333C(v51);
                  v55 = v54;
                  swift_bridgeObjectRelease();
                  v48 = *(_QWORD *)(v0 + 480);
                  if ((v55 & 1) == 0)
                    goto LABEL_19;
                  v55 = v0 + 152;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)(v0 + 152) = v48;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    goto LABEL_42;
                  v55 = v0 + 480;
                  while (1)
                  {
                    (*(void (**)(unint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(*(_QWORD *)v55 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 256) + 72) * v53, *(_QWORD *)(v0 + 248));
                    v48 = *(_QWORD *)(v0 + 152);
                    sub_1DD3F9C28(v53, v48);
                    swift_bridgeObjectRelease();
LABEL_19:
                    v57 = swift_isUniquelyReferenced_nonNull_native();
                    v53 = *(_QWORD *)(v0 + 488);
                    if ((v57 & 1) != 0)
                    {
                      if ((v52 & 0x8000000000000000) != 0)
                        goto LABEL_40;
                    }
                    else
                    {
                      v53 = sub_1DD418E2C(*(_QWORD *)(v0 + 488));
                      if ((v52 & 0x8000000000000000) != 0)
                      {
LABEL_40:
                        __break(1u);
                        goto LABEL_41;
                      }
                    }
                    if (v52 < *(_QWORD *)(v53 + 16))
                    {
                      v58 = *(_QWORD *)(v0 + 256);
                      sub_1DD406BC4(*(_QWORD *)(v0 + 344));
                      v59 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
                      goto LABEL_37;
                    }
LABEL_41:
                    __break(1u);
LABEL_42:
                    sub_1DD3DD760();
                  }
                }
              }
              v59 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 256) + 8);
              v53 = *(_QWORD *)(v0 + 488);
              goto LABEL_37;
            }
          }
          else
          {
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
          }
          v67 = *(_QWORD *)(v0 + 480);
          v68 = *(_QWORD *)(v0 + 488);
          v69 = *(_QWORD *)(v0 + 344);
          v70 = *(_QWORD *)(v0 + 320);
          v71 = *(_QWORD *)(v0 + 264);
          v72 = *(_QWORD *)(v0 + 248);
          v73 = *(_QWORD *)(v0 + 256);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 16))(v71, *(_QWORD *)(v0 + 272), v72);
          v74 = *(_QWORD *)(v68 + 16);
          v75 = swift_isUniquelyReferenced_nonNull_native();
          sub_1DD3DC45C(v74, v71, v75);
          v48 = v67;
          swift_bridgeObjectRelease();
          v59 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
          v59(v71, v72);
          sub_1DD419F44(v69, v70);
          v76 = swift_isUniquelyReferenced_nonNull_native();
          v53 = *(_QWORD *)(v0 + 488);
          if ((v76 & 1) == 0)
            v53 = sub_1DD3E4EF4(0, *(_QWORD *)(v68 + 16) + 1, 1, *(_QWORD *)(v0 + 488));
          v78 = *(_QWORD *)(v53 + 16);
          v77 = *(_QWORD *)(v53 + 24);
          if (v78 >= v77 >> 1)
            v53 = sub_1DD3E4EF4(v77 > 1, v78 + 1, 1, v53);
          v80 = *(_QWORD *)(v0 + 312);
          v79 = *(_QWORD *)(v0 + 320);
          *(_QWORD *)(v53 + 16) = v78 + 1;
          sub_1DD41AA00(v79, v53+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v78);
LABEL_37:
          v81 = *(_QWORD *)(v0 + 344);
          v59(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
          sub_1DD419F88(v81);
          *(_QWORD *)(v0 + 480) = v48;
LABEL_30:
          *(_QWORD *)(v0 + 488) = v53;
          *(_QWORD *)(v0 + 496) = sub_1DD63E2D8();
          sub_1DD41AA88(&qword_1F03E5370, &qword_1F03E51F0, MEMORY[0x1E0DF0C48]);
          v66 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 504) = v66;
          *v66 = v0;
          v66[1] = sub_1DD415EFC;
          return sub_1DD63E2CC();
        }
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v35, 1, 1, v33);
      }
      sub_1DD3540B8(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1F03E47E0);
    }
    sub_1DD419F44(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    v60 = swift_isUniquelyReferenced_nonNull_native();
    v53 = *(_QWORD *)(v0 + 488);
    if ((v60 & 1) == 0)
      v53 = sub_1DD3E4EF4(0, *(_QWORD *)(v53 + 16) + 1, 1, *(_QWORD *)(v0 + 488));
    v62 = *(_QWORD *)(v53 + 16);
    v61 = *(_QWORD *)(v53 + 24);
    if (v62 >= v61 >> 1)
      v53 = sub_1DD3E4EF4(v61 > 1, v62 + 1, 1, v53);
    v63 = *(_QWORD *)(v0 + 344);
    v64 = *(_QWORD *)(v0 + 328);
    v65 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v53 + 16) = v62 + 1;
    sub_1DD41AA00(v64, v53+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v62);
    sub_1DD419F88(v63);
    goto LABEL_30;
  }
  v12 = *(_QWORD *)(v0 + 432);
  v13 = *(_QWORD *)(v0 + 416);
  v14 = *(_QWORD *)(v0 + 280);
  sub_1DD63DE10();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DD63DCB4();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1DD41944C(v12, v13);
  result = v11(v13, 1, v14);
  if ((_DWORD)result != 1)
  {
    v15 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 336);
    v18 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 280);
    v20 = sub_1DD63D72C();
    v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v21(v17, v19);
    sub_1DD419F88(v16);
    v21(v15, v19);
    if ((v20 & 1) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD416814()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;

  swift_release();
  v1 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 144) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  if (sub_1DD63E83C())
  {

  }
  else
  {
    swift_allocError();
    *v2 = *(_QWORD *)(v0 + 144);
  }
  v3 = *(_QWORD *)(v0 + 432);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
  sub_1DD3540B8(v3, (uint64_t *)&unk_1F03E4600);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4169F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, _QWORD, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[7];

  v28 = a2;
  v39[6] = a1;
  v2 = sub_1DD63D81C();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DD63D828();
  v29 = *(_QWORD *)(v35 - 8);
  v4 = v29;
  MEMORY[0x1E0C80A78](v35);
  v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63D810();
  v7 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  v31 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DD63D768();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD63DE10();
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  sub_1DD63DCB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CB0F90], v6);
  v16 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v17 = v32;
  v18 = v35;
  v16(v32, *MEMORY[0x1E0CB1010], v35);
  v19 = v36;
  v20 = v37;
  v21 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0CB0FD8], v38);
  v22 = v19;
  sub_1DD63D840();
  v23 = v21;
  v25 = v33;
  v24 = v34;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v18);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v30);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v24);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v28, v15, v24);
  __break(1u);
  return result;
}

uint64_t sub_1DD416CB0(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;

  v4 = v3;
  v8 = sub_1DD63D768();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HFEvent();
  v12 = MEMORY[0x1E0C80A78](v11);
  v50 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)&v42 - v15;
  v55 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v17 = *(unsigned __int8 *)(v14 + 80);
    v18 = (v17 + 32) & ~v17;
    v42 = a1;
    v19 = a1 + v18;
    v20 = *(_QWORD *)(v14 + 72);
    v49 = v18;
    v46 = v20 + v18;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v45 = v17 | 7;
    v44 = xmmword_1DD667A30;
    v47 = a2;
    v48 = a3;
    while (1)
    {
      v22 = v54;
      sub_1DD419F44(v19, v54);
      a2(v22);
      if (v4)
      {
        sub_1DD419F88(v54);
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v21;
      }
      v53 = 0;
      v23 = (uint64_t)v10;
      v25 = sub_1DD3D9658((uint64_t)v10);
      v26 = v21[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v21[3] < v28)
      {
        sub_1DD3DB204(v28, 1);
        v21 = v55;
        v30 = sub_1DD3D9658(v23);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_23;
        v25 = v30;
      }
      if ((v29 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v23, v52);
        v21 = v55;
        v32 = v55[7];
        sub_1DD41AA00(v54, v50);
        v33 = *(_QWORD *)(v32 + 8 * v25);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v32 + 8 * v25) = v33;
        v43 = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v33 = sub_1DD3E4EF4(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
          *(_QWORD *)(v32 + 8 * v25) = v33;
        }
        v36 = *(_QWORD *)(v33 + 16);
        v35 = *(_QWORD *)(v33 + 24);
        if (v36 >= v35 >> 1)
        {
          v33 = sub_1DD3E4EF4(v35 > 1, v36 + 1, 1, v33);
          *(_QWORD *)(v43 + 8 * v25) = v33;
        }
        *(_QWORD *)(v33 + 16) = v36 + 1;
        sub_1DD41AA00(v50, v33 + v49 + v36 * v20);
        a2 = v47;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4688);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v44;
        sub_1DD41AA00(v54, v37 + v49);
        v21[(v25 >> 6) + 8] |= 1 << v25;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v51 + 32))(v21[6] + *(_QWORD *)(v51 + 72) * v25, v23, v52);
        *(_QWORD *)(v21[7] + 8 * v25) = v37;
        v38 = v21[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_22;
        v21[2] = v40;
      }
      v19 += v20;
      --v16;
      v10 = (char *)v23;
      v4 = v53;
      if (!v16)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v21;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1DD63E8A8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1DD417028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1DD417040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_1DD63DE34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  v4 = v1 + *(int *)(type metadata accessor for HFEvent() + 20);
  v5 = sub_1DD63D7C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4170C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DD63DF18();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F03E3810 != -1)
    swift_once();
  v7 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v8 = sub_1DD63DF00();
  v9 = sub_1DD63E470();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1DD34E000, v8, v9, "Timer fired, scheduling task", v10, 2u);
    MEMORY[0x1DF0DB358](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = sub_1DD63E2FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
    v13 = swift_allocObject();
    swift_weakInit();
    sub_1DD63E2E4();
    swift_retain();
    v14 = sub_1DD63E2D8();
    v15 = (_QWORD *)swift_allocObject();
    v16 = MEMORY[0x1E0DF06E8];
    v15[2] = v14;
    v15[3] = v16;
    v15[4] = v13;
    swift_release();
    sub_1DD3D883C((uint64_t)v2, (uint64_t)&unk_1F03E5328, (uint64_t)v15);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DD417308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v5 = sub_1DD63DF18();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  sub_1DD63E2E4();
  v4[11] = sub_1DD63E2D8();
  v4[12] = sub_1DD63E284();
  v4[13] = v6;
  return swift_task_switch();
}

uint64_t sub_1DD4173D0()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  if (qword_1F03E3810 != -1)
    swift_once();
  v1 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v2 = sub_1DD63DF00();
  v3 = sub_1DD63E470();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1DD34E000, v2, v3, "Timer task running", v4, 2u);
    MEMORY[0x1DF0DB358](v4, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v9 = *(_QWORD *)(v0 + 48);
    sub_1DD4176F0(*(_QWORD *)(v0 + 56));
    v10 = sub_1DD63D768();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v11;
    *v11 = v0;
    v11[1] = sub_1DD41759C;
    return sub_1DD4105C4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48), 0, 1, 1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD41759C()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 48);
  if (v0)
  {

    sub_1DD3540B8(v3, (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    sub_1DD3540B8(*(_QWORD *)(v2 + 48), (uint64_t *)&unk_1F03E4600);
  }
  return swift_task_switch();
}

uint64_t sub_1DD417634()
{
  sub_1DD4145EC(1);
  return swift_task_switch();
}

uint64_t sub_1DD417670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_release();
  sub_1DD3540B8(v1, (uint64_t *)&unk_1F03E4600);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4176DC()
{
  return swift_task_switch();
}

uint64_t sub_1DD4176F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DD63D768();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DD63DF6C();
  swift_release();
  swift_release();
  v12 = swift_bridgeObjectRetain();
  v13 = (_QWORD *)sub_1DD40DC10(v12);
  swift_bridgeObjectRelease();
  v28[0] = v13;
  sub_1DD417AF4(v28);
  swift_bridgeObjectRelease();
  v14 = v28[0][2];
  if (v14)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, (char *)v28[0]+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * (v14 - 1), v8);
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v15(v7, 0, 1, v8);
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v15(v7, 1, 1, v8);
  }
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v16 = (uint64_t *)&unk_1F03E4600;
    v17 = (uint64_t)v7;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DD63DF6C();
    swift_release();
    swift_release();
    v18 = v28[0];
    if (!v28[0][2] || (v19 = sub_1DD3D9658((uint64_t)v11), (v20 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_12;
    }
    v21 = *(_QWORD *)(v18[7] + 8 * v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v21 + 16);
    v23 = type metadata accessor for HFEvent();
    v24 = *(_QWORD *)(v23 - 8);
    if (v22)
    {
      sub_1DD419F44(v21 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)), (uint64_t)v4);
      v25 = 0;
    }
    else
    {
      v25 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v4, v25, 1, v23);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23) != 1)
    {
      sub_1DD63DE10();
      __swift_project_boxed_opaque_existential_1(v28, (uint64_t)v28[3]);
      sub_1DD63DCB4();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_1DD419F88((uint64_t)v4);
      v26 = 0;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(a1, v26, 1, v8);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 = &qword_1F03E51D8;
    v17 = (uint64_t)v4;
  }
  sub_1DD3540B8(v17, v16);
LABEL_12:
  v26 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(a1, v26, 1, v8);
}

void sub_1DD417AA4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1DD417AF4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t result;
  char *v6[2];

  v2 = *(_QWORD *)(sub_1DD63D768() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1DD4011C4(v3);
  v4 = (char *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1DD417B74(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1DD417B74(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  uint64_t v140;
  char **v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v3 = sub_1DD63D768();
  v145 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v131 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v142 = (char *)&v127 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v139 = (char *)&v127 - v9;
  MEMORY[0x1E0C80A78](v8);
  v138 = (char *)&v127 - v10;
  v11 = (uint64_t)a1[1];
  result = sub_1DD63E818();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      return sub_1DD4185EC(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v141 = a1;
  v128 = result;
  v134 = v1;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v127 = MEMORY[0x1E0DEE9D8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
      if (v19 >= 2)
      {
        v120 = *v141;
        do
        {
          v121 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v120)
            goto LABEL_148;
          v122 = *(_QWORD *)&v17[16 * v121 + 32];
          v123 = *(_QWORD *)&v17[16 * v19 + 24];
          v124 = v134;
          sub_1DD418864((unint64_t)&v120[*(_QWORD *)(v145 + 72) * v122], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * v123], v133);
          v134 = v124;
          if (v124)
            break;
          if (v123 < v122)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_1DD40119C((uint64_t)v17);
          if (v121 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v125 = &v17[16 * v121 + 32];
          *(_QWORD *)v125 = v122;
          *((_QWORD *)v125 + 1) = v123;
          v126 = *((_QWORD *)v17 + 2);
          if (v19 > v126)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v126 - v19));
          *((_QWORD *)v17 + 2) = v126 - 1;
          v19 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1DD63E23C();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v145 + 80);
    v127 = v15;
    v133 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v132 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v134;
      goto LABEL_58;
    }
    v22 = *v141;
    v143 = v11;
    v23 = v145;
    v24 = *(_QWORD *)(v145 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 16);
    v26 = v138;
    v25(v138, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v139;
    v25(v139, v27, v3);
    v140 = sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    LODWORD(v137) = sub_1DD63E104();
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v132;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v135 = v31;
    v144 = v24;
    if (v20 + 2 >= v143)
    {
      v41 = v134;
      v40 = v143;
      v39 = v24;
      if ((v137 & 1) == 0)
        break;
    }
    else
    {
      v129 = v17;
      v136 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v138;
        v25(v138, &v33[v34], v3);
        v37 = v139;
        v25(v139, &v33[v136], v3);
        v38 = sub_1DD63E104();
        v29(v37, v3);
        v29(v36, v3);
        if (((v137 ^ v38) & 1) != 0)
        {
          v41 = v134;
          v17 = v129;
          v32 = v35;
          v20 = v132;
          v40 = v143;
          v39 = v144;
          if ((v137 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v144;
        v33 += v144;
      }
      while (v143 != v35 + 1);
      v40 = v143;
      v32 = v143;
      v41 = v134;
      v17 = v129;
      v20 = v132;
      if ((v137 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v129 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v141;
    v140 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v135)
          goto LABEL_147;
        v48 = v41;
        v49 = &v135[v46];
        v50 = &v135[v43];
        v137 = *(char **)(v145 + 32);
        ((void (*)(char *, char *, uint64_t))v137)(v131, &v135[v46], v3);
        if (v46 < v43 || v49 >= &v135[v44])
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(char *, char *, uint64_t))v137)(v50, v131, v3);
        v41 = v48;
        v32 = v140;
        v47 = v141;
        v39 = v144;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v129;
    v20 = v132;
    v40 = v143;
    if (v32 < v143)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v134 = v41;
    v140 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_1DD400EEC(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v69 = *((_QWORD *)v17 + 2);
    v68 = *((_QWORD *)v17 + 3);
    v19 = v69 + 1;
    if (v69 >= v68 >> 1)
      v17 = sub_1DD400EEC((char *)(v68 > 1), v69 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v70 = v17 + 32;
    v71 = &v17[16 * v69 + 32];
    v72 = v140;
    *(_QWORD *)v71 = v20;
    *((_QWORD *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        v73 = v19 - 1;
        if (v19 >= 4)
        {
          v78 = &v70[16 * v19];
          v79 = *((_QWORD *)v78 - 8);
          v80 = *((_QWORD *)v78 - 7);
          v84 = __OFSUB__(v80, v79);
          v81 = v80 - v79;
          if (v84)
            goto LABEL_124;
          v83 = *((_QWORD *)v78 - 6);
          v82 = *((_QWORD *)v78 - 5);
          v84 = __OFSUB__(v82, v83);
          v76 = v82 - v83;
          v77 = v84;
          if (v84)
            goto LABEL_125;
          v85 = v19 - 2;
          v86 = &v70[16 * v19 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v84 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v84)
            goto LABEL_127;
          v84 = __OFADD__(v76, v89);
          v90 = v76 + v89;
          if (v84)
            goto LABEL_130;
          if (v90 >= v81)
          {
            v108 = &v70[16 * v73];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            v84 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v84)
              goto LABEL_134;
            v101 = v76 < v111;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v102 = *((_QWORD *)v17 + 4);
            v103 = *((_QWORD *)v17 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
            goto LABEL_89;
          }
          v75 = *((_QWORD *)v17 + 4);
          v74 = *((_QWORD *)v17 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
        }
        if ((v77 & 1) != 0)
          goto LABEL_126;
        v85 = v19 - 2;
        v91 = &v70[16 * v19 - 32];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v94 = __OFSUB__(v92, v93);
        v95 = v92 - v93;
        v96 = v94;
        if (v94)
          goto LABEL_129;
        v97 = &v70[16 * v73];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v84 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v84)
          goto LABEL_132;
        if (__OFADD__(v95, v100))
          goto LABEL_133;
        if (v95 + v100 >= v76)
        {
          v101 = v76 < v100;
LABEL_95:
          if (v101)
            v73 = v85;
          goto LABEL_97;
        }
LABEL_89:
        if ((v96 & 1) != 0)
          goto LABEL_128;
        v104 = &v70[16 * v73];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v84 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v84)
          goto LABEL_131;
        if (v107 < v95)
          goto LABEL_14;
LABEL_97:
        v112 = v73 - 1;
        if (v73 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v141)
          goto LABEL_146;
        v113 = v17;
        v114 = &v70[16 * v112];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v73];
        v117 = *((_QWORD *)v116 + 1);
        v118 = v134;
        sub_1DD418864((unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v114], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v116], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * v117], v133);
        v134 = v118;
        if (v118)
          goto LABEL_118;
        if (v117 < v115)
          goto LABEL_121;
        if (v73 > *((_QWORD *)v113 + 2))
          goto LABEL_122;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v112 + 8] = v117;
        v119 = *((_QWORD *)v113 + 2);
        if (v73 >= v119)
          goto LABEL_123;
        v17 = v113;
        v19 = v119 - 1;
        memmove(&v70[16 * v73], v116 + 16, 16 * (v119 - 1 - v73));
        *((_QWORD *)v113 + 2) = v119 - 1;
        if (v119 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (uint64_t)v141[1];
    v18 = v140;
    if (v140 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v141;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v128)
    goto LABEL_58;
  if (__OFADD__(v20, v128))
    goto LABEL_143;
  if (v20 + v128 >= v40)
    v51 = v40;
  else
    v51 = v20 + v128;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v129 = v17;
      v130 = v51;
      v52 = *(_QWORD *)(v145 + 72);
      v53 = *(char **)(v145 + 16);
      v134 = v41;
      v135 = v53;
      v54 = v52 * (v32 - 1);
      v136 = v52;
      v144 = v32 * v52;
      do
      {
        v56 = 0;
        v140 = v32;
        v137 = (char *)v54;
        while (1)
        {
          v143 = v20;
          v57 = *v47;
          v58 = v138;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v135;
          ((void (*)(char *, char *, uint64_t))v135)(v138, &(*v47)[v144 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v139;
          v60(v139, v61, v3);
          sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          LOBYTE(v57) = sub_1DD63E104();
          v63 = *(void (**)(_QWORD, _QWORD))(v145 + 8);
          v63(v62, v3);
          v63(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v64 = *v59;
          if (!*v59)
            goto LABEL_145;
          v54 = (uint64_t)v137;
          v65 = &v137[(_QWORD)v64 + v56];
          v66 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 32);
          v66(v142, &v64[v144 + v56], v3);
          swift_arrayInitWithTakeFrontToBack();
          v66(v65, v142, v3);
          v56 -= v136;
          v20 = v143 + 1;
          v55 = v140;
          v47 = v141;
          if (v140 == v143 + 1)
            goto LABEL_51;
        }
        v55 = v140;
        v47 = v59;
        v54 = (uint64_t)v137;
LABEL_51:
        v32 = v55 + 1;
        v54 += v136;
        v144 += v136;
        v20 = v132;
      }
      while (v32 != v130);
      v32 = v130;
      v41 = v134;
      v17 = v129;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  result = sub_1DD63E794();
  __break(1u);
  return result;
}

uint64_t sub_1DD4185EC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_1DD63D768();
  v36 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v26 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      v29(v31, v37 + v15 + *a4, v7);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      LOBYTE(v17) = sub_1DD63E104();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v24, v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD418864(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v8 = sub_1DD63D768();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)&v42 - v12;
  v49 = v9[9];
  if (!v49)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v49 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v49 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v49;
  v52 = a1;
  v51 = a4;
  v15 = v13 / v49;
  if (v14 >= v13 / v49)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v49;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v17;
      v50 = a4 + v17;
      v52 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v30 = -v49;
        v43 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v44 = v9;
        v45 = a4;
        v46 = a1;
        do
        {
          v49 = a3 + v30;
          v31 = v47;
          v32 = v43;
          v43(v47, v28 + v30, v8);
          v33 = a2 + v30;
          v34 = v30;
          v35 = v48;
          v32(v48, v33, v8);
          sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          LOBYTE(v32) = sub_1DD63E104();
          v36 = (void (*)(char *, uint64_t))v9[1];
          v36(v35, v8);
          v36(v31, v8);
          if ((v32 & 1) != 0)
          {
            v30 = v34;
            v37 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v52 += v30;
          }
          else
          {
            v40 = v50;
            v50 += v34;
            v30 = v34;
            v37 = v49;
            if (a3 < v40 || v49 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              v33 = a2;
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != v40)
                swift_arrayInitWithTakeBackToFront();
              v33 = a2;
            }
          }
          v28 = v50;
          if (v50 <= v38)
            break;
          a2 = v33;
          a3 = v37;
        }
        while (v33 > v39);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v49;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v46 = a4 + v16;
    v50 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v47;
        v19(v47, a2, v8);
        v22 = v48;
        v19(v48, a4, v8);
        sub_1DD353504(&qword_1F03E5248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
        v23 = sub_1DD63E104();
        v24 = (void (*)(char *, uint64_t))v9[1];
        v24(v22, v8);
        v24(v21, v8);
        v25 = v52;
        if ((v23 & 1) != 0)
        {
          v26 = a2 + v49;
          if (v52 < a2 || v52 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v27 = v51 + v49;
          if (v52 < v51 || v52 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 != v51)
              swift_arrayInitWithTakeBackToFront();
          }
          v51 = v27;
          v26 = a2;
        }
        v52 = v25 + v49;
        a4 = v51;
        if (v51 >= v46)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_60:
    sub_1DD401090(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_64:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD418DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5358) + 48);
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5350) + 48);
  v6 = *(_QWORD *)(a1 + v4);
  v7 = sub_1DD63D768();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  *(_QWORD *)(a2 + v5) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD418E2C(unint64_t a1)
{
  return sub_1DD3E4EF4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DD418E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5358);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5360);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v37 - v11;
  v13 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v37 = v6;
  if (v18)
  {
    v39 = v10;
    v40 = v15;
    v38 = v16;
    v19 = v14;
    v20 = v4;
    v21 = a1;
    v22 = (v18 - 1) & v18;
    v23 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v24 = *(_QWORD *)(v13 + 48);
    v25 = sub_1DD63D768();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v25);
    *(_QWORD *)&v12[*(int *)(v3 + 48)] = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v3);
    v4 = v20;
    swift_bridgeObjectRetain();
    a1 = v21;
    v14 = v19;
    v16 = v38;
    v10 = v39;
    goto LABEL_25;
  }
  v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    v28 = *(_QWORD *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      v38 = v16;
      v39 = v10;
      v19 = v14;
      v20 = v4;
      v21 = a1;
      v22 = (v28 - 1) & v28;
      v23 = __clz(__rbit64(v28)) + (v26 << 6);
      v40 = v26;
      goto LABEL_3;
    }
    v29 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      v28 = *(_QWORD *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        v26 = v29;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        v28 = *(_QWORD *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          v26 = v15 + 3;
          goto LABEL_7;
        }
        v29 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          v28 = *(_QWORD *)(v14 + 8 * v29);
          if (v28)
            goto LABEL_10;
          v26 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            v28 = *(_QWORD *)(v14 + 8 * v26);
            if (v28)
              goto LABEL_7;
            v11 = v27 - 1;
            v30 = v15 + 6;
            while (v27 != v30)
            {
              v28 = *(_QWORD *)(v14 + 8 * v30++);
              if (v28)
              {
                v26 = v30 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v40 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v22 = 0;
LABEL_25:
  *v1 = v13;
  v1[1] = v14;
  v31 = v40;
  v1[2] = v16;
  v1[3] = v31;
  v1[4] = v22;
  v32 = (void (*)(uint64_t))v1[5];
  sub_1DD41AA44((uint64_t)v12, (uint64_t)v10, &qword_1F03E5360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5350);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    v35 = (uint64_t)v37;
    sub_1DD41AA44((uint64_t)v10, (uint64_t)v37, &qword_1F03E5358);
    v32(v35);
    sub_1DD3540B8(v35, &qword_1F03E5358);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5350);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

id sub_1DD41918C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  id v22;
  objc_class *v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  objc_super v28;
  uint64_t v29;

  v2 = v1;
  v27 = a1;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E51B0);
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5190);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v14 = &v2[OBJC_IVAR___HFActivityLogCoordinator_Swift__eventsByDate];
  v29 = MEMORY[0x1E0DEE9E0];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E52C0);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  v15 = &v2[OBJC_IVAR___HFActivityLogCoordinator_Swift__lastError];
  v29 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E52D0);
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
  v16 = &v2[OBJC_IVAR___HFActivityLogCoordinator_Swift__activelyFetching];
  LOBYTE(v29) = 0;
  sub_1DD63DF3C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v16, v5, v26);
  v17 = OBJC_IVAR___HFActivityLogCoordinator_Swift_queryController;
  sub_1DD63DD08();
  *(_QWORD *)&v2[v17] = sub_1DD63DCFC();
  if (qword_1F03E3800 != -1)
    swift_once();
  sub_1DD63D738();
  *(_QWORD *)&v2[OBJC_IVAR___HFActivityLogCoordinator_Swift_fetchCount] = 0;
  v18 = &v2[OBJC_IVAR___HFActivityLogCoordinator_Swift_oldestFetchStartDate];
  v19 = sub_1DD63D768();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(&v2[OBJC_IVAR___HFActivityLogCoordinator_Swift_newestFetchEndDate], 1, 1, v19);
  *(_QWORD *)&v2[OBJC_IVAR___HFActivityLogCoordinator_Swift_updateTimer] = 0;
  v21 = v27;
  *((_QWORD *)v2 + 14) = v27;
  v22 = v21;
  swift_release();
  v23 = (objc_class *)type metadata accessor for ActivityLogCoordinator();
  v28.receiver = v2;
  v28.super_class = v23;
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t sub_1DD41944C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ActivityLogCoordinator()
{
  uint64_t result;

  result = qword_1F03E5288;
  if (!qword_1F03E5288)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD4194D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DD63D768();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DD41954C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DD63D768() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DD3DED78;
  return sub_1DD412C7C(a1, v5, v6, v7, v8);
}

uint64_t sub_1DD4195E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD41962C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DD3DED78;
  return sub_1DD414264(a1, v4, v5, v6, v7);
}

uint64_t sub_1DD4196A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__eventsByDate, &qword_1F03E5190);
}

uint64_t sub_1DD4196CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E5318, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__eventsByDate, &qword_1F03E5190);
}

uint64_t sub_1DD4196F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__lastError, &qword_1F03E51A0);
}

uint64_t sub_1DD41971C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E5310, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__lastError, &qword_1F03E51A0);
}

uint64_t sub_1DD419748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DD3FDE28(a1, a2, a3, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__activelyFetching, (uint64_t *)&unk_1F03E51B0);
}

uint64_t sub_1DD41976C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD3FDE94(a1, a2, a3, a4, &qword_1F03E5308, (uint64_t)&OBJC_IVAR___HFActivityLogCoordinator_Swift__activelyFetching, (uint64_t *)&unk_1F03E51B0);
}

uint64_t sub_1DD419798()
{
  return type metadata accessor for ActivityLogCoordinator();
}

void sub_1DD4197A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DD3FF7C0(319, &qword_1F03E52B8, &qword_1F03E52C0);
  if (v0 <= 0x3F)
  {
    sub_1DD3FF7C0(319, &qword_1F03E52C8, &qword_1F03E52D0);
    if (v1 <= 0x3F)
    {
      sub_1DD419C08();
      if (v2 <= 0x3F)
      {
        sub_1DD63D768();
        if (v3 <= 0x3F)
        {
          sub_1DD419C5C();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for ActivityLogCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityLogCoordinator.eventsByDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.$eventsByDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.lastError.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.$lastError.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.activelyFetching.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.$activelyFetching.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.__allocating_init(home:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t dispatch thunk of ActivityLogCoordinator.fetchEvents(startDate:endDate:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x1A0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = a4 & 1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DD3DE6D4;
  return v13(a1, a2, a3, v10);
}

uint64_t dispatch thunk of ActivityLogCoordinator.fetchEventCount(startDate:endDate:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x1A8);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = a4 & 1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DD3DED94;
  return v13(a1, a2, a3, v10);
}

uint64_t dispatch thunk of ActivityLogCoordinator.eventsExist()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DE6D4;
  return v5();
}

uint64_t dispatch thunk of ActivityLogCoordinator.prefetch(eventsOlderThan:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1B8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD419B9C;
  return v7(a1);
}

uint64_t sub_1DD419B9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ActivityLogCoordinator.pollForUpdates(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

void sub_1DD419C08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03E52D8)
  {
    v0 = sub_1DD63DF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03E52D8);
  }
}

void sub_1DD419C5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03E52E0)
  {
    sub_1DD63D768();
    v0 = sub_1DD63E524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03E52E0);
  }
}

ValueMetadata *type metadata accessor for ActivityLogCoordinator.SendableQueryController()
{
  return &type metadata for ActivityLogCoordinator.SendableQueryController;
}

uint64_t sub_1DD419CC0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD419CEC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DE5EC;
  return ((uint64_t (*)(const void *, uint64_t))((char *)&dword_1F03E52E8 + dword_1F03E52E8))(v2, v3);
}

uint64_t sub_1DD419D54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1F03E61C0 + dword_1F03E61C0))(v2, v3, v4);
}

uint64_t objectdestroy_25Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD419DFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1F03E61C8 + dword_1F03E61C8))(a1, v4, v5, v6);
}

uint64_t sub_1DD419E80()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD419EA4()
{
  return sub_1DD4170C0();
}

uint64_t sub_1DD419EAC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD419ED8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return sub_1DD417308(a1, v4, v5, v6);
}

uint64_t sub_1DD419F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HFEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD419F88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HFEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD419FC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DD4169F4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DD419FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  BOOL v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t result;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  unint64_t v74;

  v4 = sub_1DD63D768();
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v60 - v8;
  v10 = type metadata accessor for HFEvent();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v63 = (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v68 = (uint64_t)v60 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v61 = (uint64_t)v60 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v62 = (uint64_t)v60 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v60 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v60 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)v60 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)v60 - v29;
  v71 = *(_QWORD *)(a1 + 16);
  if (!v71)
  {
    swift_bridgeObjectRetain();
    return a2;
  }
  v31 = *(_QWORD *)(a2 + 16);
  if (!v31
    || (v67 = *(_QWORD *)(a2 + 16), v31 == 1)
    && (v32 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80),
        sub_1DD419F44(a1 + v32, (uint64_t)v60 - v29),
        sub_1DD419F44(a2 + v32, (uint64_t)v28),
        LOBYTE(v32) = _s4Home7HFEventV2eeoiySbAC_ACtFZ_0(),
        sub_1DD419F88((uint64_t)v28),
        sub_1DD419F88((uint64_t)v30),
        (v32 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  v33 = v67;
  if (__OFADD__(v71, v67))
    goto LABEL_54;
  v34 = sub_1DD3E4EF4(0, (v71 + v67) & ~((v71 + v67) >> 63), 0, MEMORY[0x1E0DEE9D8]);
  v35 = a2;
  v36 = 0;
  v37 = 0;
  v74 = v34;
  v38 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v60[1] = a1;
  v65 = a1 + v38;
  v60[0] = v35;
  v66 = v38;
  v64 = v35 + v38;
  v39 = *(_QWORD *)(v11 + 72);
  while ((v37 & 0x8000000000000000) == 0)
  {
    sub_1DD419F44(v65 + v39 * v37, (uint64_t)v25);
    if (v36 >= v33)
      goto LABEL_51;
    sub_1DD419F44(v64 + v39 * v36, (uint64_t)v22);
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v72, v73);
    sub_1DD63DCB4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
    sub_1DD63DE10();
    __swift_project_boxed_opaque_existential_1(v72, v73);
    sub_1DD63DCB4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
    v33 = sub_1DD63D75C();
    v40 = v70;
    v41 = *(void (**)(char *, uint64_t))(v69 + 8);
    v41(v7, v70);
    v41(v9, v40);
    if (v33 == -1)
      goto LABEL_23;
    if (v33 != 1)
    {
      if (v33)
        goto LABEL_56;
      sub_1DD63E908();
      _s4Home7HFEventV4hash4intoys6HasherVz_tF_0();
      v42 = sub_1DD63E938();
      sub_1DD63E908();
      _s4Home7HFEventV4hash4intoys6HasherVz_tF_0();
      v43 = sub_1DD63E938();
      if (v42 >= v43)
      {
        if (v43 >= v42)
        {
          sub_1DD419F44((uint64_t)v25, v62);
          v33 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v33 = sub_1DD3E4EF4(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
          v51 = *(_QWORD *)(v33 + 16);
          v50 = *(_QWORD *)(v33 + 24);
          if (v51 >= v50 >> 1)
            v33 = sub_1DD3E4EF4(v50 > 1, v51 + 1, 1, v33);
          *(_QWORD *)(v33 + 16) = v51 + 1;
          sub_1DD41AA00(v62, v33 + v66 + v51 * v39);
          v74 = v33;
          if ((_s4Home7HFEventV2eeoiySbAC_ACtFZ_0() & 1) == 0)
          {
            sub_1DD419F44((uint64_t)v22, v61);
            v53 = *(_QWORD *)(v33 + 16);
            v52 = *(_QWORD *)(v33 + 24);
            if (v53 >= v52 >> 1)
              v33 = sub_1DD3E4EF4(v52 > 1, v53 + 1, 1, v33);
            *(_QWORD *)(v33 + 16) = v53 + 1;
            sub_1DD41AA00(v61, v33 + v66 + v53 * v39);
            v74 = v33;
          }
          sub_1DD419F88((uint64_t)v22);
          sub_1DD419F88((uint64_t)v25);
          v46 = __OFADD__(v37++, 1);
          if (v46)
            goto LABEL_53;
        }
        else
        {
LABEL_23:
          sub_1DD419F44((uint64_t)v22, v63);
          v47 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v47 = sub_1DD3E4EF4(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
          v49 = *(_QWORD *)(v47 + 16);
          v48 = *(_QWORD *)(v47 + 24);
          if (v49 >= v48 >> 1)
            v47 = sub_1DD3E4EF4(v48 > 1, v49 + 1, 1, v47);
          *(_QWORD *)(v47 + 16) = v49 + 1;
          sub_1DD41AA00(v63, v47 + v66 + v49 * v39);
          v74 = v47;
          sub_1DD419F88((uint64_t)v22);
          sub_1DD419F88((uint64_t)v25);
        }
        ++v36;
        goto LABEL_29;
      }
    }
    sub_1DD419F44((uint64_t)v25, v68);
    v33 = v74;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_1DD3E4EF4(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
    v45 = *(_QWORD *)(v33 + 16);
    v44 = *(_QWORD *)(v33 + 24);
    if (v45 >= v44 >> 1)
      v33 = sub_1DD3E4EF4(v44 > 1, v45 + 1, 1, v33);
    *(_QWORD *)(v33 + 16) = v45 + 1;
    sub_1DD41AA00(v68, v33 + v66 + v45 * v39);
    v74 = v33;
    sub_1DD419F88((uint64_t)v22);
    sub_1DD419F88((uint64_t)v25);
    v46 = __OFADD__(v37++, 1);
    if (v46)
      goto LABEL_52;
LABEL_29:
    v33 = v67;
    if (v37 >= v71)
    {
      if (v36 < v67)
      {
        v54 = swift_bridgeObjectRetain();
        v55 = v64;
        v56 = v36;
        v57 = (2 * v33) | 1;
        goto LABEL_47;
      }
      return v74;
    }
    if (v36 >= v67)
    {
      if (v37 < 0)
        goto LABEL_55;
      v58 = (2 * v71) | 1;
      v54 = swift_bridgeObjectRetain();
      v55 = v65;
      v56 = v37;
      v57 = v58;
LABEL_47:
      sub_1DD41FFFC(v54, v55, v56, v57);
      return v74;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  type metadata accessor for ComparisonResult(0);
  v72[0] = v33;
  result = sub_1DD63E890();
  __break(1u);
  return result;
}

uint64_t sub_1DD41A6B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);

  v10 = sub_1DD63D768();
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5348);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v44 = a1;
  v45 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v46 = v17;
  v47 = 0;
  v48 = v20 & v18;
  v49 = a2;
  v50 = a3;
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1DD418E40((uint64_t)v15);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1DD3DEBAC();
    return swift_release();
  }
  v51 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  while (1)
  {
    v26 = *(int *)(v21 + 48);
    v27 = v10;
    v51(v12, v15, v10);
    v28 = *(_QWORD *)&v15[v26];
    v29 = *(_QWORD **)a5;
    v31 = sub_1DD3D9658((uint64_t)v12);
    v32 = v29[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v29[3] >= v34)
    {
      if ((a4 & 1) != 0)
      {
        v38 = *(_QWORD **)a5;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DD984();
        v38 = *(_QWORD **)a5;
        if ((v35 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DB204(v34, a4 & 1);
      v36 = sub_1DD3D9658((uint64_t)v12);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_22;
      v31 = v36;
      v38 = *(_QWORD **)a5;
      if ((v35 & 1) != 0)
      {
LABEL_7:
        v23 = swift_bridgeObjectRetain();
        v24 = sub_1DD419FDC(v23, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v27;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v27);
        v25 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v25 + 8 * v31) = v24;
        goto LABEL_8;
      }
    }
    v38[(v31 >> 6) + 8] |= 1 << v31;
    v10 = v27;
    v51((char *)(v38[6] + *(_QWORD *)(v43 + 72) * v31), v12, v27);
    *(_QWORD *)(v38[7] + 8 * v31) = v28;
    v39 = v38[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_21;
    v38[2] = v41;
LABEL_8:
    sub_1DD418E40((uint64_t)v15);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5350);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1DD63E8A8();
  __break(1u);
  return result;
}

uint64_t sub_1DD41AA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HFEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD41AA44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DD41AA88(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1DF0DB2A4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DD41AAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1DD63D768();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1DD41AB70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(sub_1DD63D768() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 40) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = (v7 + v5 + v6) & ~v5;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v6;
  v13 = (uint64_t)v1 + v8;
  v14 = (char *)v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1DD3DE5EC;
  return sub_1DD41499C(a1, v9, v10, v11, v12, v13, v15, v16);
}

uint64_t sub_1DD41AC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char v9;

  v9 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xA8))();
  if (v9 != 2)
    return v9 & 1;
  if (a1 == a3 && a2 == a4)
    return 0;
  return sub_1DD63E860();
}

uint64_t sub_1DD41ACEC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers) + 16);
}

uint64_t sub_1DD41AD00(unint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers) = sub_1DD41B05C(a1);
  return swift_bridgeObjectRelease();
}

void sub_1DD41AD44(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  void *v20;
  uint64_t v21;

  if (objc_msgSend(v1, sel_applicationDataContainer))
  {
    objc_opt_self();
    v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v4;
      v20 = sub_1DD41C548;
      v21 = v6;
      aBlock = MEMORY[0x1E0C809B0];
      v17 = 1107296256;
      v18 = sub_1DD3D3B04;
      v19 = &block_descriptor_18;
      v7 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      sub_1DD3540F4(a1, (uint64_t)&aBlock);
      if (v19)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E53C0);
        if (swift_dynamicCast())
          v8 = v15;
        else
          v8 = 0;
      }
      else
      {
        sub_1DD3F6180((uint64_t)&aBlock);
        v8 = 0;
      }
      objc_msgSend(v5, sel_dispatchHomeObserverMessage_sender_, v7, v8);
      swift_unknownObjectRelease();
      _Block_release(v7);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  if (objc_msgSend(v1, sel_applicationDataContainer))
  {
    objc_opt_self();
    v9 = swift_dynamicCastObjCClass();
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v10;
      v20 = sub_1DD41C51C;
      v21 = v12;
      aBlock = MEMORY[0x1E0C809B0];
      v17 = 1107296256;
      v18 = sub_1DD3D3B04;
      v19 = &block_descriptor_12;
      v13 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      sub_1DD3540F4(a1, (uint64_t)&aBlock);
      if (v19)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E53C0);
        if (swift_dynamicCast())
          v14 = v15;
        else
          v14 = 0;
      }
      else
      {
        sub_1DD3F6180((uint64_t)&aBlock);
        v14 = 0;
      }
      objc_msgSend(v11, sel_dispatchHomeObserverMessage_sender_, v13, v14);
      swift_unknownObjectRelease();
      _Block_release(v13);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1DD41B05C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_1DD3E86C4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1DF0DA2C0](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_uuidString);
      v9 = sub_1DD63E14C();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_1DD3E86C4(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD41B1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;

  v9 = *(_QWORD **)((char *)v4 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  v10 = sub_1DD3A1C84(a1, a2, v9);
  v12 = v11;
  v13 = sub_1DD3A1C84(a3, a4, v9);
  if (((v12 | v14) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xB0))(a1, a2, a3, a4);
  else
    return v10 < v13;
}

id ReorderableItemList.__allocating_init(applicationDataContainer:category:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithApplicationDataContainer_category_, a1, v4);

  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1DD41B310(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  id v8;

  sub_1DD63E6BC();
  sub_1DD63E188();
  v6 = objc_msgSend(a1, sel_description);
  sub_1DD63E14C();

  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  v7 = objc_msgSend(a2, sel_description);
  sub_1DD63E14C();

  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  v8 = objc_msgSend(a3, sel_description);
  sub_1DD63E14C();

  sub_1DD63E188();
  swift_bridgeObjectRelease();
  sub_1DD63E188();
  return 0;
}

uint64_t sub_1DD41B480()
{
  void **v0;

  return sub_1DD41B310(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DD41B508(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1DD63E728();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1DD3714B4(i, (uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378548);
    if (!swift_dynamicCast())
      break;
    sub_1DD63E710();
    sub_1DD63E734();
    sub_1DD63E740();
    sub_1DD63E71C();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

id sub_1DD41B6C0(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  void *v46;
  unint64_t v48;
  unint64_t v49;
  _OWORD v50[2];
  __int128 aBlock;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v3 = objc_msgSend(v1, sel_applicationDataContainer);
  if (!v3)
    goto LABEL_5;
  v4 = objc_msgSend(v3, sel_applicationData);
  swift_unknownObjectRelease();
  v5 = (void *)sub_1DD63E11C();
  v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  if (!v6)
    goto LABEL_5;
  *(_QWORD *)&aBlock = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5AE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E53B0);
  if (swift_dynamicCast())
    v7 = *(_QWORD **)&v50[0];
  else
LABEL_5:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378410);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667A30;
  *(_QWORD *)(inited + 32) = sub_1DD63E14C();
  *(_QWORD *)(inited + 40) = v9;
  v10 = OBJC_IVAR___HFReorderableItemList_sortedIdentifiers;
  v11 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR___HFReorderableItemList_sortedIdentifiers] + 16);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 48) = v11;
  v12 = sub_1DD3D6234(inited);
  v13 = sub_1DD41BCC8(v7, *(_QWORD **)&v1[v10]);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)&v1[v10] + 16))
    {
      v14 = sub_1DD63E14C();
      v16 = v15;
      v17 = sub_1DD63E14C();
      v53 = (void *)MEMORY[0x1E0DEA968];
      *(_QWORD *)&aBlock = v17;
      *((_QWORD *)&aBlock + 1) = v18;
      sub_1DD357884(&aBlock, v50);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48 = v12;
      sub_1DD3D3978((uint64_t)v50, v14, v16, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = (void *)objc_opt_self();
      v21 = (void *)sub_1DD63E08C();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_sendEvent_withData_, 39, v21, v48);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  }
  else
  {
    v22 = objc_msgSend(v1, sel_applicationDataContainer);
    if (v22)
    {
      v23 = objc_msgSend(v22, sel_applicationData);
      swift_unknownObjectRelease();
      v24 = swift_bridgeObjectRetain();
      sub_1DD41FA18(v24);
      swift_bridgeObjectRelease();
      v25 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
      v26 = (void *)sub_1DD63E1DC();
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(v25, sel_initWithArray_, v26);

      v28 = (void *)sub_1DD63E11C();
      objc_msgSend(v23, sel_setObject_forKeyedSubscript_, v27, v28);

    }
    v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v54 = sub_1DD41C42C;
    v55 = v29;
    v30 = MEMORY[0x1E0C809B0];
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v52 = sub_1DD41BED4;
    v53 = &block_descriptor_5;
    v31 = _Block_copy(&aBlock);
    v32 = (void *)objc_opt_self();
    swift_retain();
    v33 = objc_msgSend(v32, sel_futureWithErrorOnlyHandlerAdapterBlock_, v31);
    _Block_release(v31);
    swift_release();
    swift_release();
    sub_1DD3540F4(a1, (uint64_t)v50);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v1;
    sub_1DD41C468((uint64_t)v50, v34 + 24);
    v54 = sub_1DD41C4B0;
    v55 = v34;
    *(_QWORD *)&aBlock = v30;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v52 = sub_1DD41BFD8;
    v53 = &block_descriptor_6;
    v35 = _Block_copy(&aBlock);
    v36 = v1;
    swift_release();
    v37 = objc_msgSend(v33, sel_flatMap_, v35);
    _Block_release(v35);

    v38 = sub_1DD63E14C();
    v40 = v39;
    v41 = sub_1DD63E14C();
    v43 = v42;
    v53 = (void *)MEMORY[0x1E0DEA968];
    *(_QWORD *)&aBlock = v38;
    *((_QWORD *)&aBlock + 1) = v40;
    sub_1DD357884(&aBlock, v50);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v49 = v12;
    sub_1DD3D3978((uint64_t)v50, v41, v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = (void *)objc_opt_self();
    v46 = (void *)sub_1DD63E08C();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_sendEvent_withData_, 39, v46, v49);

    return v33;
  }
}

uint64_t sub_1DD41BCC8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1DD63E860(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1DD63E860() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

void sub_1DD41BD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  _QWORD aBlock[6];

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1DF0DB400](v5);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_applicationDataContainer);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v7, sel_applicationDataContainer);
      if (v10)
      {
        v11 = objc_msgSend(v10, sel_applicationData);
        swift_unknownObjectRelease();
      }
      else
      {
        v11 = 0;
      }
      aBlock[4] = a1;
      aBlock[5] = a2;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DD428028;
      aBlock[3] = &block_descriptor_24_0;
      v12 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v9, sel_hf_updateApplicationData_handleError_completionHandler_, v11, 1, v12);
      swift_unknownObjectRelease();

      _Block_release(v12);
      v7 = v11;
    }

  }
}

uint64_t sub_1DD41BED4(uint64_t a1, void *aBlock)
{
  void (*v2)(void (*)(uint64_t), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1DD41C5C8, v4);
  swift_release();
  return swift_release();
}

void sub_1DD41BF44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1DD63D69C();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id sub_1DD41BF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DD41AD44(a3);
  return objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, a1);
}

id sub_1DD41BFD8(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1DD41C09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  char v8;
  char v9;
  char v10;
  unsigned int v11;

  v7 = *(_QWORD **)(v4 + OBJC_IVAR___HFReorderableItemList_sortedIdentifiers);
  sub_1DD3A1C84(a1, a2, v7);
  v9 = v8;
  sub_1DD3A1C84(a3, a4, v7);
  if ((v10 & 1) != 0)
    v11 = 1;
  else
    v11 = 2;
  if ((v9 & 1) != 0)
    return 2 * (v10 & 1u);
  else
    return v11;
}

uint64_t sub_1DD41C104(void *a1, void *a2)
{
  uint64_t result;
  id v5;
  void *v6;

  result = (uint64_t)objc_msgSend(a1, sel_respondsToSelector_, sel_home_didUpdateApplicationDataForRoom_);
  if ((result & 1) != 0)
  {
    swift_unknownObjectRetain();
    v5 = objc_msgSend(a2, sel_home);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(a1, sel_home_didUpdateApplicationDataForRoom_, v5, a2);

      return swift_unknownObjectRelease();
    }
    else
    {
      result = swift_unknownObjectRelease();
      __break(1u);
    }
  }
  return result;
}

id ReorderableItemList.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReorderableItemList();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD41C1D4(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v3 = objc_msgSend(a1, sel_latestResults);
  if (!v3)
  {
    v27 = 0u;
    v28 = 0u;
    goto LABEL_13;
  }
  v4 = v3;
  v5 = sub_1DD63E098();

  v6 = sub_1DD63E14C();
  if (!*(_QWORD *)(v5 + 16) || (v8 = sub_1DD3714A8(v6, v7), (v9 & 1) == 0))
  {
    v27 = 0u;
    v28 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1DD3714B4(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)&v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_13:
    sub_1DD3F6180((uint64_t)&v27);
    v11 = 0;
    v12 = 0;
    goto LABEL_14;
  }
  v10 = swift_dynamicCast();
  if (v10)
    v11 = v25;
  else
    v11 = 0;
  if (v10)
    v12 = v26;
  else
    v12 = 0;
LABEL_14:
  v13 = objc_msgSend(a2, sel_latestResults);
  if (!v13)
  {
    v27 = 0u;
    v28 = 0u;
LABEL_27:
    sub_1DD3F6180((uint64_t)&v27);
    v21 = 0;
    v22 = 0;
    goto LABEL_28;
  }
  v14 = v13;
  v15 = sub_1DD63E098();

  v16 = sub_1DD63E14C();
  if (*(_QWORD *)(v15 + 16) && (v18 = sub_1DD3714A8(v16, v17), (v19 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(v15 + 56) + 32 * v18, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_27;
  v20 = swift_dynamicCast();
  if (v20)
    v21 = v25;
  else
    v21 = 0;
  if (v20)
    v22 = v26;
  else
    v22 = 0;
LABEL_28:
  v23 = sub_1DD3A0944(v11, v12, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1DD41C408()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DD41C42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DD41BD8C(a1, a2, v2);
}

uint64_t sub_1DD41C434()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DD41C468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED3785F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DD41C4B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD41BF90(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t method lookup function for ReorderableItemList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReorderableItemList.sortedIdentifiers(identifier1:identifier2:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ReorderableItemList.sortedIdentifiersCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ReorderableItemList.setSortedItems(sortedItems:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1DD41C51C(void *a1)
{
  uint64_t v1;

  return sub_1DD41C104(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DD41C524()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DD41C548(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id result;

  v3 = *(_QWORD *)(v1 + 16);
  result = objc_msgSend(a1, sel_respondsToSelector_, sel_homeDidUpdateApplicationData_);
  if ((result & 1) != 0)
    return objc_msgSend(a1, sel_homeDidUpdateApplicationData_, v3);
  return result;
}

uint64_t sub_1DD41C5A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DD41C5C8(uint64_t a1)
{
  uint64_t v1;

  sub_1DD41BF44(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DD41C5FC(_QWORD *a1@<X8>)
{
  ItemSelectionController.selectionBehavior(for:)(a1);
}

void ItemSelectionController.selectionBehavior(for:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void ItemSelectionController.itemsToUpdate(with:)()
{
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE56C(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t SingleItemSelectionController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t SingleItemSelectionController.init()()
{
  uint64_t v0;

  swift_unknownObjectWeakInit();
  return v0;
}

unint64_t sub_1DD41C6C4(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  id v12;
  unint64_t v13;

  v3 = (void *)MEMORY[0x1DF0DB400](v1 + 16);
  swift_unknownObjectWeakAssign();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
  *(_QWORD *)(inited + 32) = a1;
  v13 = inited;
  sub_1DD63E20C();
  if (v13 >> 62)
  {
    v9 = a1;
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a1;
    if (v5)
    {
LABEL_3:
      sub_1DD3EE56C(v13);
      v8 = v7;
      goto LABEL_6;
    }
  }
  v8 = MEMORY[0x1E0DEE9E8];
LABEL_6:
  swift_bridgeObjectRelease();
  v13 = v8;
  if (v3)
  {
    sub_1DD3E994C(&v12, v3);

    return v13;
  }
  return v8;
}

void sub_1DD41C7E0(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  unsigned int v5;
  uint64_t inited;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (void *)MEMORY[0x1DF0DB400](v1 + 16);
  if (v3 && (v4 = v3, v5 = objc_msgSend(v3, sel_isEqual_, a1), v4, v5))
  {
    swift_unknownObjectWeakAssign();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
    *(_QWORD *)(inited + 32) = a1;
    v11 = inited;
    sub_1DD63E20C();
    if (v11 >> 62)
    {
      v9 = a1;
      swift_bridgeObjectRetain();
      v10 = sub_1DD63E7B8();
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_5;
    }
    else
    {
      v7 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      v8 = a1;
      if (v7)
      {
LABEL_5:
        sub_1DD3EE56C(v11);
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
  }
  else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE56C(MEMORY[0x1E0DEE9D8]);
  }
}

id sub_1DD41C934(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)MEMORY[0x1DF0DB400](v1 + 16);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_isEqual_, a1);

  return v5;
}

uint64_t SingleItemSelectionController.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t SingleItemSelectionController.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

unint64_t sub_1DD41C9CC(void *a1)
{
  return sub_1DD41C6C4(a1);
}

void sub_1DD41C9E0(void *a1)
{
  sub_1DD41C7E0(a1);
}

uint64_t MultipleItemSelectionController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  return v0;
}

uint64_t MultipleItemSelectionController.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  return v0;
}

uint64_t sub_1DD41CA80(void *a1)
{
  return sub_1DD41CAB8(a1, (SEL *)&selRef_removeObject_);
}

uint64_t sub_1DD41CA9C(void *a1)
{
  return sub_1DD41CAB8(a1, (SEL *)&selRef_addObject_);
}

uint64_t sub_1DD41CAB8(void *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v12;

  objc_msgSend(*(id *)(v2 + 16), *a2, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667C50;
  *(_QWORD *)(inited + 32) = a1;
  v12 = inited;
  sub_1DD63E20C();
  if (v12 >> 62)
  {
    v9 = a1;
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_5:
    v8 = MEMORY[0x1E0DEE9E8];
    goto LABEL_6;
  }
  v5 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a1;
  if (!v5)
    goto LABEL_5;
LABEL_3:
  sub_1DD3EE56C(v12);
  v8 = v7;
LABEL_6:
  swift_bridgeObjectRelease();
  return v8;
}

id sub_1DD41CB9C(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_containsObject_, a1);
}

uint64_t MultipleItemSelectionController.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MultipleItemSelectionController.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1DD41CC00(void *a1)
{
  return sub_1DD41CA80(a1);
}

uint64_t sub_1DD41CC14(void *a1)
{
  return sub_1DD41CA9C(a1);
}

void sub_1DD41CC28()
{
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1DD63E7B8())
      sub_1DD3EE56C(MEMORY[0x1E0DEE9D8]);
  }
}

void sub_1DD41CC6C(_QWORD *a1@<X8>)
{
  AccessoryRepresentableSelectionController.selectionBehavior(for:in:)(a1);
}

void AccessoryRepresentableSelectionController.selectionBehavior(for:in:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t AccessoryRepresentableSelectionController.select(item:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v4 = sub_1DD41CD70(a1, a2, a3);
  v5 = swift_dynamicCastObjCProtocolConditional();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v4;
    v8 = objc_msgSend(v6, sel_accessoryRepresentableObject);
    v9 = (*(uint64_t (**)(void))(a3 + 24))();

    swift_unknownObjectRelease();
  }
  else
  {

    return MEMORY[0x1E0DEE9E8];
  }
  return v9;
}

id sub_1DD41CD70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v11;
  __int128 v12[2];
  uint64_t v13;
  void *v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v14 = a1;
  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
  v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5558);
  if (swift_dynamicCast())
  {
    sub_1DD3F34B8(v12, (uint64_t)v15);
    v6 = v16;
    v7 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v9 = sub_1DD41CD70(v8, a2, a3);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    return (id)v9;
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1DD41D5E0((uint64_t)v12);
    return v11;
  }
}

uint64_t AccessoryRepresentableSelectionController.deselect(item:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v4 = sub_1DD41CD70(a1, a2, a3);
  v5 = swift_dynamicCastObjCProtocolConditional();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v4;
    v8 = objc_msgSend(v6, sel_accessoryRepresentableObject);
    v9 = (*(uint64_t (**)(void))(a3 + 32))();

    swift_unknownObjectRelease();
  }
  else
  {

    return MEMORY[0x1E0DEE9E8];
  }
  return v9;
}

Swift::Bool __swiftcall AccessoryRepresentableSelectionController.isItemSelected(_:)(HFItem *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  v3 = v2;
  v4 = sub_1DD41CD70(a1, v1, v2);
  v5 = swift_dynamicCastObjCProtocolConditional();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v4;
    v8 = objc_msgSend(v6, sel_accessoryRepresentableObject);
    v9 = (*(uint64_t (**)(void))(v3 + 16))();

    swift_unknownObjectRelease();
  }
  else
  {

    v9 = 0;
  }
  return v9 & 1;
}

void AccessoryRepresentableSelectionController.selectionBehavior(for:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  v6 = sub_1DD41CD70(a1, a2, a3);
  v7 = swift_dynamicCastObjCProtocolConditional();
  if (v7)
  {
    v8 = (void *)v7;
    v9 = v6;
    v10 = objc_msgSend(v8, sel_accessoryRepresentableObject);
    (*(void (**)(void))(a3 + 40))();

    swift_unknownObjectRelease();
  }
  else
  {

    *a4 = 1;
  }
}

uint64_t _s4Home21ItemSelectionBehaviorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, id *a2)
{
  uint64_t v2;
  id v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      v2 = 0;
      v4 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if ((unint64_t)v3 >= 2)
    {
      sub_1DD352AB0(0, &qword_1F03E4DD8);
      sub_1DD41D620(v3);
      sub_1DD41D620((id)v2);
      v4 = sub_1DD63E4E8();
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != (id)1)
  {
LABEL_8:
    sub_1DD41D620(*a2);
    sub_1DD41D620((id)v2);
    v4 = 0;
    goto LABEL_10;
  }
  v2 = 1;
  v4 = 1;
LABEL_10:
  sub_1DD41D630((id)v2);
  sub_1DD41D630(v3);
  return v4 & 1;
}

id _s4Home23ItemSelectionControllerPAAE23selectionCompleteFutureSo8NAFutureCyyXlGvg_0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
  v1 = objc_msgSend(v0, sel_asGeneric);

  return v1;
}

uint64_t dispatch thunk of ItemSelectionController.selectionCompleteFuture.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ItemSelectionController.select(item:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ItemSelectionController.deselect(item:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ItemSelectionController.isItemSelected(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ItemSelectionController.selectionBehavior(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ItemSelectionController.itemsToUpdate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ItemSelectionBehavior(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ItemSelectionBehavior(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ItemSelectionBehavior(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ItemSelectionBehavior(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ItemSelectionBehavior(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ItemSelectionBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1DD41D460(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DD41D478(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ItemSelectionBehavior()
{
  return &type metadata for ItemSelectionBehavior;
}

uint64_t dispatch thunk of ItemSelectionControllerContaining.selectionController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for SingleItemSelectionController()
{
  return objc_opt_self();
}

uint64_t method lookup function for SingleItemSelectionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleItemSelectionController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SingleItemSelectionController.select(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SingleItemSelectionController.deselect(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SingleItemSelectionController.isItemSelected(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for MultipleItemSelectionController()
{
  return objc_opt_self();
}

uint64_t method lookup function for MultipleItemSelectionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultipleItemSelectionController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MultipleItemSelectionController.select(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of MultipleItemSelectionController.deselect(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MultipleItemSelectionController.isItemSelected(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectionController.isSelected(accessoryRepresentableObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectionController.select(accessoryRepresentableObject:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectionController.deselect(accessoryRepresentableObject:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectionController.selectionBehavior(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1DD41D5E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5560);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1DD41D620(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1DD41D630(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1DD41D644()
{
  uint64_t result;

  sub_1DD3D3994();
  result = sub_1DD63E50C();
  qword_1ED379F48 = result;
  return result;
}

uint64_t sub_1DD41D6A4()
{
  uint64_t result;

  sub_1DD3D3994();
  result = sub_1DD63E50C();
  qword_1F03ED460 = result;
  return result;
}

uint64_t sub_1DD41D708()
{
  uint64_t result;

  sub_1DD3D3994();
  result = sub_1DD63E50C();
  qword_1F03ED468 = result;
  return result;
}

uint64_t sub_1DD41D76C()
{
  uint64_t result;

  sub_1DD3D3994();
  result = sub_1DD63E50C();
  qword_1F03ED470 = result;
  return result;
}

uint64_t HFEvent.stateDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  BOOL v62;
  int v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  int v70;
  void *v71;
  id v72;
  char *v73;
  int v74;
  const char *v75;
  int v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  void *v93;
  id v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  void *v106;
  id v107;
  uint64_t v108;
  void *v109;
  id v110;
  int v112;
  int v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;

  v0 = type metadata accessor for HFEvent();
  MEMORY[0x1E0C80A78](v0);
  v154 = (char *)&v114 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1DD63DD38();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v125 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1DD63DD50();
  v121 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v126 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1DD63DD74();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v129 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1DD63DD8C();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v132 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_1DD63DDC8();
  v149 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v148 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63DDE0();
  v146 = *(_QWORD *)(v7 - 8);
  v147 = v7;
  MEMORY[0x1E0C80A78](v7);
  v150 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1DD63DC6C();
  v120 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1DD63DC84();
  v116 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v115 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DD63DCC0();
  v142 = *(_QWORD *)(v11 - 8);
  v143 = v11;
  MEMORY[0x1E0C80A78](v11);
  v141 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DD63DCD8();
  v139 = *(_QWORD *)(v13 - 8);
  v140 = v13;
  MEMORY[0x1E0C80A78](v13);
  v144 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DD63DD14();
  v16 = *(_QWORD *)(v15 - 8);
  v152 = v15;
  v153 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1DD63DD2C();
  v19 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_1DD63DDEC();
  v133 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v135 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1DD63DE04();
  v137 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v138 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DD63DD68();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v114 - v29;
  v31 = sub_1DD63DE34();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v155, v31);
  if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v34, v31) == *MEMORY[0x1E0D33128])
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v34, v24);
    v35 = v30;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    v36 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
    v37 = v24;
    v38 = v25;
    if (v36 == *MEMORY[0x1E0D32F60])
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
      v39 = v151;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v28, v151);
      sub_1DD63DD20();
      v40 = v152;
      v41 = (*(uint64_t (**)(char *, uint64_t))(v153 + 88))(v18, v152);
      if (v41 == *MEMORY[0x1E0D32F00])
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
LABEL_27:
        v71 = (void *)sub_1DD63E11C();
        v72 = HFLocalizedString(v71);

        v44 = sub_1DD63E14C();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
        return v44;
      }
      v54 = v41;
      if (v41 == *MEMORY[0x1E0D32EF0])
      {
        v55 = 0xD000000000000011;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
        v56 = 0x80000001DD66F4A0;
        v114 = v35;
        v53 = (uint64_t)v154;
        v52 = v155;
      }
      else
      {
        v63 = *MEMORY[0x1E0D32EF8];
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
        v53 = (uint64_t)v154;
        if (v54 != v63)
        {
          (*(void (**)(char *, uint64_t))(v153 + 8))(v18, v40);
          goto LABEL_27;
        }
        v114 = v35;
        v55 = 0xD000000000000011;
        v56 = 0x80000001DD66F4A0;
        v52 = v155;
      }
LABEL_71:
      v156 = v55;
      v157 = v56;
      sub_1DD63E188();
      swift_bridgeObjectRelease();
      v90 = v156;
      v89 = v157;
      v91 = HFEvent.home.getter();
      v92 = v52;
      if (!v91)
        goto LABEL_75;
      v93 = v91;
      v94 = objc_msgSend(v91, sel_hf_allUsersIncludingCurrentUser);

      sub_1DD41EC98();
      v95 = sub_1DD63E1F4();

      MEMORY[0x1E0C80A78](v96);
      *(&v114 - 2) = (char *)v92;
      v97 = sub_1DD40627C(sub_1DD4088B0, (uint64_t)(&v114 - 4), v95);
      swift_bridgeObjectRelease();
      if (v97)
      {
        v98 = objc_msgSend(v97, sel_name);

        v99 = sub_1DD63E14C();
        v101 = v100;

        sub_1DD419F44(v92, v53);
        if (v101)
          goto LABEL_79;
      }
      else
      {
LABEL_75:
        sub_1DD419F44(v92, v53);
      }
      v102 = HFEvent.guestUser.getter();
      if (!v102
        || (v103 = v102,
            v104 = objc_msgSend(v102, sel_simpleLabel),
            v103,
            !v104))
      {
        sub_1DD419F88(v53);
        v109 = (void *)sub_1DD63E11C();
        swift_bridgeObjectRelease();
        v110 = HFLocalizedString(v109);

        v44 = sub_1DD63E14C();
        goto LABEL_81;
      }
      v99 = sub_1DD63E14C();
      v101 = v105;

LABEL_79:
      sub_1DD419F88(v53);
      v156 = v90;
      v157 = v89;
      sub_1DD63E188();
      v106 = (void *)sub_1DD63E11C();
      swift_bridgeObjectRelease();
      v107 = HFLocalizedString(v106);

      sub_1DD63E14C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5568);
      v108 = swift_allocObject();
      *(_OWORD *)(v108 + 16) = xmmword_1DD667A30;
      *(_QWORD *)(v108 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v108 + 64) = sub_1DD41EC54();
      *(_QWORD *)(v108 + 32) = v99;
      *(_QWORD *)(v108 + 40) = v101;
      v44 = sub_1DD63E128();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_81:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v114, v37);
      return v44;
    }
    if (v36 == *MEMORY[0x1E0D32F78])
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
      v46 = v146;
      v45 = v147;
      v47 = v150;
      (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v150, v28, v147);
      v48 = v148;
      sub_1DD63DDD4();
      v49 = v48;
      v50 = v145;
      v51 = (*(uint64_t (**)(char *, uint64_t))(v149 + 88))(v49, v145);
      v53 = (uint64_t)v154;
      v52 = v155;
      if (v51 != *MEMORY[0x1E0D33068])
      {
        v62 = v51 == *MEMORY[0x1E0D33048];
        v114 = v35;
        if (!v62 && v51 != *MEMORY[0x1E0D33050] && v51 != *MEMORY[0x1E0D33060] && v51 != *MEMORY[0x1E0D33058])
        {
          (*(void (**)(char *, uint64_t))(v46 + 8))(v150, v45);
          (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v50);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v150, v45);
        v56 = 0xEF6574617453726FLL;
        v55 = 0x736E6553726F6F44;
        goto LABEL_71;
      }
LABEL_8:
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
      goto LABEL_27;
    }
    v52 = v155;
    if (v36 == *MEMORY[0x1E0D32F58])
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
      v58 = v139;
      v57 = v140;
      v59 = v144;
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v144, v28, v140);
      v60 = v141;
      sub_1DD63DCCC();
      v61 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v60, v143);
      v53 = (uint64_t)v154;
      if (v61 == *MEMORY[0x1E0D32E88])
        goto LABEL_13;
      v70 = v61;
      v62 = v61 == *MEMORY[0x1E0D32E60];
      v114 = v35;
      if (!v62 && v61 != *MEMORY[0x1E0D32E68] && v61 != *MEMORY[0x1E0D32E78] && v61 != *MEMORY[0x1E0D32E70])
      {
        if (v61 == *MEMORY[0x1E0D32E80])
        {
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
          v55 = 0xD000000000000014;
          v56 = 0x80000001DD66F480;
        }
        else
        {
          v113 = *MEMORY[0x1E0D32E58];
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
          if (v70 != v113)
          {
            (*(void (**)(char *, uint64_t))(v142 + 8))(v141, v143);
            goto LABEL_27;
          }
          v55 = 0xD000000000000014;
          v56 = 0x80000001DD66F480;
        }
        goto LABEL_71;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v144, v57);
      v55 = 0xD000000000000014;
      v75 = "GarageDoorEventState";
    }
    else
    {
      v53 = (uint64_t)v154;
      if (v36 == *MEMORY[0x1E0D32F80])
      {
        (*(void (**)(char *, uint64_t))(v38 + 96))(v28, v24);
        v64 = v137;
        v65 = v138;
        v66 = v134;
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v138, v28, v134);
        v67 = v135;
        sub_1DD63DDF8();
        v68 = v133;
        v69 = (*(uint64_t (**)(char *, uint64_t))(v133 + 88))(v67, v136);
        if (v69 == *MEMORY[0x1E0D330C0])
        {
          (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
          goto LABEL_27;
        }
        v76 = v69;
        v62 = v69 == *MEMORY[0x1E0D330C8];
        v114 = v35;
        if (v62 || v69 == *MEMORY[0x1E0D330B0] || v69 == *MEMORY[0x1E0D330D0] || v69 == *MEMORY[0x1E0D330B8])
        {
          v55 = 0x6E6576456B636F4CLL;
          (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v66);
        }
        else
        {
          v112 = *MEMORY[0x1E0D330A8];
          (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v66);
          if (v76 != v112)
          {
            (*(void (**)(char *, uint64_t))(v68 + 8))(v135, v136);
            goto LABEL_27;
          }
          v55 = 0x6E6576456B636F4CLL;
        }
        v56 = 0xEE00657461745374;
        goto LABEL_71;
      }
      if (v36 == *MEMORY[0x1E0D32F70])
      {
        (*(void (**)(char *, uint64_t))(v38 + 96))(v28, v24);
        v46 = v127;
        v47 = v132;
        v45 = v128;
        (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v132, v28, v128);
        v73 = v129;
        sub_1DD63DD80();
        v74 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v73, v131);
        if (v74 == *MEMORY[0x1E0D32FB0])
          goto LABEL_8;
        if (v74 != *MEMORY[0x1E0D32FC0])
        {
          if (v74 == *MEMORY[0x1E0D32FA8] || v74 == *MEMORY[0x1E0D32FD0])
            goto LABEL_8;
          if (v74 != *MEMORY[0x1E0D32FB8]
            && v74 != *MEMORY[0x1E0D32FC8]
            && v74 != *MEMORY[0x1E0D32FA0]
            && v74 != *MEMORY[0x1E0D32FD8])
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v132, v45);
            (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
            goto LABEL_27;
          }
        }
        v114 = v35;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v132, v45);
        v55 = 0xD000000000000013;
        v75 = "SecuritySystemState";
      }
      else
      {
        if (v36 != *MEMORY[0x1E0D32F68])
        {
          if (v36 != *MEMORY[0x1E0D32F88])
          {
            (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v24);
            goto LABEL_27;
          }
          (*(void (**)(char *, uint64_t))(v38 + 96))(v28, v24);
          v82 = v116;
          v83 = v115;
          v84 = v118;
          (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v28, v118);
          v85 = v117;
          sub_1DD63DC78();
          v86 = v119;
          v87 = (*(uint64_t (**)(char *, uint64_t))(v120 + 88))(v85, v119);
          if (v87 == *MEMORY[0x1E0D32DC0])
          {
            (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
            goto LABEL_27;
          }
          v62 = v87 == *MEMORY[0x1E0D32DA0];
          v114 = v35;
          if (!v62 && v87 != *MEMORY[0x1E0D32DA8] && v87 != *MEMORY[0x1E0D32DB8] && v87 != *MEMORY[0x1E0D32DB0])
          {
            (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
            (*(void (**)(char *, uint64_t))(v120 + 8))(v85, v86);
            goto LABEL_27;
          }
          v88 = v82;
          v55 = 0xD000000000000011;
          (*(void (**)(char *, uint64_t))(v88 + 8))(v83, v84);
          v56 = 0x80000001DD66F460;
          goto LABEL_71;
        }
        (*(void (**)(char *, uint64_t))(v38 + 96))(v28, v24);
        v58 = v121;
        v59 = v126;
        v57 = v124;
        (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v126, v28, v124);
        v77 = v125;
        sub_1DD63DD44();
        v78 = v122;
        v79 = v77;
        v80 = v123;
        v81 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v79, v123);
        if (v81 == *MEMORY[0x1E0D32F28])
        {
LABEL_13:
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
          goto LABEL_27;
        }
        if (v81 == *MEMORY[0x1E0D32F20])
        {
          v114 = v35;
        }
        else
        {
          if (v81 != *MEMORY[0x1E0D32F30])
          {
            (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
            (*(void (**)(char *, uint64_t))(v78 + 8))(v125, v80);
            goto LABEL_27;
          }
          v114 = v35;
        }
        (*(void (**)(char *, uint64_t))(v58 + 8))(v126, v57);
        v55 = 0xD000000000000012;
        v75 = "SmokeDetectorState";
      }
    }
    v56 = (unint64_t)(v75 - 32) | 0x8000000000000000;
    goto LABEL_71;
  }
  v42 = (void *)sub_1DD63E11C();
  v43 = HFLocalizedString(v42);

  v44 = sub_1DD63E14C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  return v44;
}

unint64_t sub_1DD41EC54()
{
  unint64_t result;

  result = qword_1F03E5570;
  if (!qword_1F03E5570)
  {
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F03E5570);
  }
  return result;
}

unint64_t sub_1DD41EC98()
{
  unint64_t result;

  result = qword_1F03E4FA0;
  if (!qword_1F03E4FA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03E4FA0);
  }
  return result;
}

uint64_t HFEvent.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _BYTE v25[40];

  v1 = v0;
  v2 = sub_1DD63DD68();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DD63DE34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v23 = v1;
  v13((char *)&v22 - v11, v1, v6);
  v14 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
  v15 = v14(v12, v6);
  if (v15 != *MEMORY[0x1E0D33128])
  {
    v18 = (void *)sub_1DD63E11C();
    v19 = HFLocalizedString(v18);
LABEL_6:
    v20 = v19;

    v17 = sub_1DD63E14C();
    goto LABEL_7;
  }
  v16 = v15;
  v13(v10, v23, v6);
  if (v14(v10, v6) != v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v18 = (void *)sub_1DD63E11C();
    v19 = HFLocalizedString(v18);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
  sub_1DD63DD5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DD3F34B8(&v24, (uint64_t)v25);
  v17 = sub_1DD41EF0C((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
LABEL_7:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v17;
}

uint64_t sub_1DD41EF0C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v2 = HFEvent.accessory.getter();
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_hf_serviceNameComponents);

    v5 = objc_msgSend(v4, sel_serviceName);
    sub_1DD63E14C();
    v7 = v6;

    sub_1DD3D3C30(a1, (uint64_t)v21);
    if (v7)
      goto LABEL_6;
  }
  else
  {
    sub_1DD3D3C30(a1, (uint64_t)v21);
  }
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1DD63DD98();
LABEL_6:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  v8 = HFEvent.room.getter();
  if (!v8)
  {
    sub_1DD3D3C30(a1, (uint64_t)v20);
LABEL_10:
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    sub_1DD63DDBC();
    goto LABEL_11;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_name);

  sub_1DD63E14C();
  v12 = v11;

  sub_1DD3D3C30(a1, (uint64_t)v20);
  if (!v12)
    goto LABEL_10;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  v13 = objc_allocWithZone((Class)HFServiceNameComponents);
  v14 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, sel_initWithRawServiceName_rawRoomName_, v14, v15);

  v17 = objc_msgSend(v16, sel_composedString);
  v18 = sub_1DD63E14C();

  return v18;
}

uint64_t sub_1DD41F120@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_1DD41F174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, &qword_1F03E46E0);
    sub_1DD352A70((unint64_t *)&unk_1F03E55B0, &qword_1F03E46E0);
    sub_1DD63E3F8();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1DD63E614())
      goto LABEL_36;
    sub_1DD352AB0(0, &qword_1F03E46E0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_36;
LABEL_26:
    v15 = objc_msgSend(v12, sel_room, v17);

    v3 = v11;
    v4 = v9;
    if (v15)
    {
      MEMORY[0x1DF0D9DA4]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD63E224();
      sub_1DD63E254();
      sub_1DD63E20C();
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_25:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    goto LABEL_26;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_36;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_36;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v16 = v3 + 6;
          while (v8 != v16)
          {
            v13 = *(_QWORD *)(v18 + 8 * v16++);
            if (v13)
            {
              v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1DD3DEBAC();
          return;
        }
      }
    }
LABEL_24:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

void sub_1DD41F4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, &qword_1F03E46E0);
    sub_1DD352A70((unint64_t *)&unk_1F03E55B0, &qword_1F03E46E0);
    sub_1DD63E3F8();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1DD63E614())
      goto LABEL_36;
    sub_1DD352AB0(0, &qword_1F03E46E0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_36;
LABEL_31:
    if ((objc_msgSend(v11, sel_hf_isRemoteControl) & 1) != 0)
    {

LABEL_36:
      sub_1DD3DEBAC();
      return;
    }
    v15 = objc_msgSend(v11, sel_hf_isVisibleAsBridge);

    if ((v15 & 1) != 0)
      goto LABEL_36;
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_36;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16)
      goto LABEL_36;
    v13 = *(_QWORD *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v16)
        goto LABEL_36;
      v13 = *(_QWORD *)(v17 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v16)
          goto LABEL_36;
        v13 = *(_QWORD *)(v17 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v16)
            goto LABEL_36;
          v13 = *(_QWORD *)(v17 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v16)
              goto LABEL_36;
            v13 = *(_QWORD *)(v17 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v16 != v14)
              {
                v13 = *(_QWORD *)(v17 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_36;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_1DD41F7C8(unint64_t a1)
{
  return sub_1DD396E4C(a1, (uint64_t)&protocol witness table for HMService);
}

uint64_t sub_1DD41F7D4(uint64_t a1)
{
  return sub_1DD41F7EC(a1, (uint64_t *)&unk_1F03E5620);
}

uint64_t sub_1DD41F7E0(uint64_t a1)
{
  return sub_1DD41F7EC(a1, (uint64_t *)&unk_1F03E4650);
}

uint64_t sub_1DD41F7EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1DD63E728();
    v6 = a1 + 32;
    do
    {
      v6 += 16;
      swift_unknownObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(a2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3783C8);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_1DD63E710();
      sub_1DD63E734();
      sub_1DD63E740();
      sub_1DD63E71C();
      --v3;
    }
    while (v3);
    return v7;
  }
  return result;
}

uint64_t sub_1DD41F8E8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  _BYTE v9[32];
  __int128 v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1DD3C7F2C(0, v1, 0);
    v4 = a1 + 32;
    v2 = v11;
    do
    {
      sub_1DD3714B4(v4, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4650);
      swift_dynamicCast();
      v8 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DD3C7F2C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1DD3C7F2C(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      *(_OWORD *)(v2 + 16 * v6 + 32) = v8;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DD41FA18(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1DD3E86E0(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DD3E86E0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1DD3E86E0(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1DD357884(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DD41FB3C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1DD3E86FC(0, v1, 0);
    v4 = a1 + 32;
    v2 = v14;
    do
    {
      sub_1DD3DEBB4(v4, (uint64_t)v12, &qword_1ED378338);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378338);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5600);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DD3E86FC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v14;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1DD3E86FC(v5 > 1, v6 + 1, 1);
        v2 = v14;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 72 * v6;
      *(_OWORD *)(v7 + 32) = v12[3];
      v8 = v12[4];
      v9 = v12[5];
      v10 = v12[6];
      *(_QWORD *)(v7 + 96) = v13;
      *(_OWORD *)(v7 + 64) = v9;
      *(_OWORD *)(v7 + 80) = v10;
      *(_OWORD *)(v7 + 48) = v8;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DD41FC8C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1DF0DA2CC](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1DD4213CC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1DD63E20C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD41FE44(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1DF0DA2CC](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1DD4217E8(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1DD63E20C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD41FFFC(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  int64_t v35;
  uint64_t v36;
  int i;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v54;
  unint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63[4])(uint64_t *);

  v61 = a2;
  v9 = type metadata accessor for HFEvent();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v57 = (uint64_t)&v51 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v51 - v17;
  v58 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v62 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v60 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(a1 + 24) >> 1, v24 < v5))
  {
    if (v22 <= v5)
      v25 = v22 + v21;
    else
      v25 = v22;
    a1 = sub_1DD3E4EF4(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *v4 = a1;
    v24 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v26 = *(_QWORD *)(a1 + 16);
  v27 = v24 - v26;
  if (v19 != a3)
  {
    if (v27 < v21)
    {
      __break(1u);
    }
    else
    {
      if (v21 < 0
        || ((v28 = *(_QWORD *)(v10 + 72),
             v29 = a1
                 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                 + v28 * v26,
             v30 = v61 + v28 * a3,
             v30 < v29 + v28 * v21)
          ? (v31 = v29 >= v30 + v28 * v21)
          : (v31 = 1),
            !v31))
      {
LABEL_51:
        result = sub_1DD63E7F4();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (!v21)
      {
LABEL_22:
        v5 = v19;
LABEL_23:
        if (v21 != v27)
          return swift_unknownObjectRelease();
        goto LABEL_28;
      }
      v32 = *(_QWORD *)(a1 + 16);
      v20 = __OFADD__(v32, v21);
      v33 = v32 + v21;
      if (!v20)
      {
        *(_QWORD *)(a1 + 16) = v33;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v21 <= 0)
  {
    v21 = 0;
    v5 = a3;
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  v35 = *(_QWORD *)(a1 + 16);
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v53(v18, 1, 1, v9);
  v36 = v57;
  sub_1DD3DEBB4((uint64_t)v18, v57, &qword_1F03E51D8);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  for (i = v56(v36, 1, v9); i != 1; i = v56(v36, 1, v9))
  {
    sub_1DD421B70(v36);
    v39 = *v4;
    v40 = *(_QWORD *)(*v4 + 24);
    if ((uint64_t)(v40 >> 1) < v35 + 1)
    {
      v41 = v5;
      v50 = sub_1DD3E4EF4(v40 > 1, v35 + 1, 1, v39);
      *v4 = v50;
      v55 = v50;
      v52 = *(_QWORD *)(v50 + 24) >> 1;
    }
    else
    {
      v52 = v40 >> 1;
      v55 = v39;
      v41 = v5;
    }
    v42 = *(unsigned __int8 *)(v10 + 80);
    v43 = v60;
    sub_1DD3DEBB4((uint64_t)v18, v60, &qword_1F03E51D8);
    if (v56(v43, 1, v9) == 1)
    {
      v44 = v60;
LABEL_36:
      sub_1DD421B70(v44);
      v38 = v35;
    }
    else
    {
      v54 = v55 + ((v42 + 32) & ~v42);
      v45 = v52;
      if (v35 > v52)
        v45 = v35;
      v55 = v45;
      v46 = (uint64_t)v59;
      v44 = v60;
      while (1)
      {
        sub_1DD41AA00(v44, v46);
        if (v55 == v35)
          break;
        sub_1DD421B70((uint64_t)v18);
        sub_1DD41AA00(v46, v54 + *(_QWORD *)(v10 + 72) * v35);
        if (v41 == v19)
        {
          v47 = 1;
          v41 = v19;
        }
        else
        {
          v48 = sub_1DD421A14(v63, v41, v62, v61, a3, v58);
          sub_1DD419F44(v49, (uint64_t)v18);
          ((void (*)(void (**)(uint64_t *), _QWORD))v48)(v63, 0);
          v20 = __OFADD__(v41++, 1);
          if (v20)
            goto LABEL_50;
          v47 = 0;
          v46 = (uint64_t)v59;
        }
        v53(v18, v47, 1, v9);
        v44 = v60;
        sub_1DD3DEBB4((uint64_t)v18, v60, &qword_1F03E51D8);
        ++v35;
        if (v56(v44, 1, v9) == 1)
          goto LABEL_36;
      }
      sub_1DD419F88(v46);
      v38 = v55;
      v35 = v55;
    }
    v5 = v41;
    *(_QWORD *)(*v4 + 16) = v38;
    v36 = v57;
    sub_1DD3DEBB4((uint64_t)v18, v57, &qword_1F03E51D8);
  }
  sub_1DD421B70((uint64_t)v18);
  swift_unknownObjectRelease();
  return sub_1DD421B70(v36);
}

uint64_t sub_1DD420528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1DD3E4CDC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t AccessoryComponent.capabilities.getter@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v10;

  v3 = (*(uint64_t (**)(void))(a1 + 24))();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v7 + 8) + 8))(&v10, ObjectType);
      v5 |= v10;
      v6 += 2;
      --v4;
    }
    while (v4);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t AccessoryComponent.room.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = HFAccessoryRepresentable.associatedAccessories.getter(a1);
  sub_1DD41F174(v1);
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = sub_1DD3F68FC(v3);
  swift_bridgeObjectRelease();
  if ((v4 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v4 + 16) == 1)
      goto LABEL_3;
LABEL_5:
    v5 = 0;
    goto LABEL_6;
  }
  if (sub_1DD63E5E4() != 1)
    goto LABEL_5;
LABEL_3:
  v5 = sub_1DD3F7A6C(v4);
LABEL_6:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t AccessoryElementCapabilities.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

Home::AccessoryElementCapabilities __swiftcall AccessoryElementCapabilities.init(rawValue:)(Home::AccessoryElementCapabilities rawValue)
{
  Home::AccessoryElementCapabilities *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static AccessoryElementCapabilities.sensing.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static AccessoryElementCapabilities.historical.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static AccessoryElementCapabilities.actionable.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void sub_1DD4207FC()
{
  qword_1F03E5580 = 63;
}

uint64_t static AccessoryElementCapabilities.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1F03E3830 != -1)
    result = swift_once();
  *a1 = qword_1F03E5580;
  return result;
}

void static AccessoryElementCapabilities.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1DD4208B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1DD4208BC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1DD4208D0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1DD4208E4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DD420910@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1DD420934(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1DD420948(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1DD42095C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1DD420970@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DD420984(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DD420998(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1DD4209AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_1DD4209C0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t HMMediaProfile.elements.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5590);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DD667A30;
  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = &protocol witness table for HMAccessoryProfile;
  v9 = v1;
  v2 = objc_msgSend(v0, sel_accessory);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_services);

    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    v5 = sub_1DD63E1F4();

    if ((v5 & 0x8000000000000000) != 0 || (v5 & 0x4000000000000000) != 0)
    {
      v6 = (unint64_t)sub_1DD40DAC0(v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = v5 & 0xFFFFFFFFFFFFFF8;
    }
    v7 = sub_1DD396E4C(v6, (uint64_t)&protocol witness table for HMService);
    swift_release();
    sub_1DD396FC8(v7);
    return v9;
  }
  return v1;
}

uint64_t HMMediaSystem.leafElements.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v15 = MEMORY[0x1E0DEE9D8];
  v2 = objc_msgSend(v0, sel_hf_containedServices);
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  sub_1DD352A70((unint64_t *)&qword_1F03E4AF0, (unint64_t *)&qword_1F03E41C0);
  v3 = sub_1DD63E398();

  v4 = sub_1DD40DACC(v3);
  swift_bridgeObjectRelease();
  v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5598);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E55A0);
  swift_dynamicCast();
  sub_1DD396FC8(v13);
  if (!*(_QWORD *)(v15 + 16))
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783F0);
    v5 = v1;
    v6 = sub_1DD63E500();
    v7 = sub_1DD63E488();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v8 = 136315394;
      sub_1DD3C3160(0x6D656C456661656CLL, 0xEC00000073746E65, &v14);
      sub_1DD63E53C();
      *(_WORD *)(v8 + 12) = 2112;
      v11 = v5;
      sub_1DD63E53C();
      *v9 = v5;

      _os_log_impl(&dword_1DD34E000, v6, v7, "%s: No leaf elements found for media system %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v10, -1, -1);
      MEMORY[0x1DF0DB358](v8, -1, -1);
    }
    else
    {

    }
  }
  return v15;
}

uint64_t HMServiceGroup.elements.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_services);
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  v2 = sub_1DD63E1F4();

  v3 = sub_1DD396E4C(v2, (uint64_t)&protocol witness table for HMService);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DD420E40()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_services);
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  v2 = sub_1DD63E1F4();

  v3 = sub_1DD396E4C(v2, (uint64_t)&protocol witness table for HMService);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DD420EC0@<X0>(_QWORD *a1@<X8>)
{
  return AccessoryComponent.capabilities.getter((uint64_t)&protocol witness table for HMServiceGroup, a1);
}

uint64_t HMMediaSystem.elements.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend(v0, sel_mediaProfiles);
  v2 = objc_msgSend(v1, sel_allObjects);

  v3 = sub_1DD63E1F4();
  v4 = sub_1DD41F8E8(v3);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v4 + 16))
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783F0);
    v5 = v0;
    v6 = sub_1DD63E500();
    v7 = sub_1DD63E488();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v13 = v12;
      *(_DWORD *)v8 = 136315394;
      sub_1DD3C3160(0x73746E656D656C65, 0xE800000000000000, &v13);
      sub_1DD63E53C();
      *(_WORD *)(v8 + 12) = 2112;
      v10 = v5;
      sub_1DD63E53C();
      *v9 = v5;

      _os_log_impl(&dword_1DD34E000, v6, v7, "%s: No elements found for media system %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v12, -1, -1);
      MEMORY[0x1DF0DB358](v8, -1, -1);
    }
    else
    {

    }
  }
  return v4;
}

void sub_1DD421140()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_uniqueIdentifier);
  sub_1DD63D7A4();

}

uint64_t sub_1DD421190@<X0>(_QWORD *a1@<X8>)
{
  return AccessoryComponent.capabilities.getter((uint64_t)&protocol witness table for HMMediaSystem, a1);
}

uint64_t sub_1DD4211B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DD421BB0((unint64_t *)&unk_1F03E5640, &qword_1F03E5178);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5178);
          v12 = sub_1DD3EB7F8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DD352AB0(0, &qword_1F03E4720);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD4213CC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DD421BB0(&qword_1F03E5638, &qword_1F03E5630);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5630);
          v12 = sub_1DD3EB8A4(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3783C8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD4215D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DD421BB0((unint64_t *)&unk_1F03E5610, &qword_1F03E5598);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5598);
          v12 = sub_1DD3EB850(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD4217E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DD421BB0((unint64_t *)&unk_1F03E55F0, &qword_1F03E55E8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E55E8);
          v12 = sub_1DD3EB8F8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DD63E7F4();
  __break(1u);
  return result;
}

uint64_t sub_1DD4219FC(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  *(_QWORD *)(v5 + 16) = result + 1;
  v6 = v5 + 16 * result;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a5;
  return result;
}

void (*sub_1DD421A14(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  uint64_t v11;
  void (*result)(uint64_t *);

  v11 = *(_QWORD *)(type metadata accessor for HFEvent() - 8);
  result = (void (*)(uint64_t *))malloc(*(_QWORD *)(v11 + 64));
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_1DD419F44(a4 + *(_QWORD *)(v11 + 72) * a2, (uint64_t)result);
    return sub_1DD421AA8;
  }
  return result;
}

void sub_1DD421AA8(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1DD419F88(*a1);
  free(v1);
}

unint64_t sub_1DD421AD4()
{
  unint64_t result;

  result = qword_1F03E55C0;
  if (!qword_1F03E55C0)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for AccessoryElementCapabilities, &type metadata for AccessoryElementCapabilities);
    atomic_store(result, (unint64_t *)&qword_1F03E55C0);
  }
  return result;
}

unint64_t sub_1DD421B1C()
{
  unint64_t result;

  result = qword_1F03E55C8;
  if (!qword_1F03E55C8)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for AccessoryElementCapabilities, &type metadata for AccessoryElementCapabilities);
    atomic_store(result, (unint64_t *)&qword_1F03E55C8);
  }
  return result;
}

uint64_t dispatch thunk of AccessoryElement.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AccessoryComponent.elements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1DD421B70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E51D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD421BB0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

id AccessoryCategoryReorderableItemList.__allocating_init(applicationDataContainer:category:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithApplicationDataContainer_category_, a1, v4);

  swift_unknownObjectRelease();
  return v5;
}

id AccessoryCategoryReorderableItemList.init(applicationDataContainer:category:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  objc_super v6;

  v3 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for AccessoryCategoryReorderableItemList();
  v4 = objc_msgSendSuper2(&v6, sel_initWithApplicationDataContainer_category_, a1, v3);

  swift_unknownObjectRelease();
  return v4;
}

id AccessoryCategoryReorderableItemList.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessoryCategoryReorderableItemList();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AccessoryCategoryReorderableItemList()
{
  return swift_lookUpClassMethod();
}

void sub_1DD421D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  void *v26;

  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352C44();
    sub_1DD361D24();
    sub_1DD63E3F8();
    v3 = v21;
    v20 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v20 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v19 = (unint64_t)(v4 + 64) >> 6;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1DD63E614())
  {
    sub_1DD352C44();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v26;
    swift_unknownObjectRelease();
    v12 = v5;
    v13 = v6;
    while (v11)
    {
      v26 = v11;
      v17 = sub_1DD352C80(&v26);

      if (v2 || (v17 & 1) != 0)
        break;
      v5 = v12;
      v6 = v13;
      if (v3 < 0)
        goto LABEL_8;
LABEL_11:
      if (v6)
      {
        v13 = (v6 - 1) & v6;
        v14 = __clz(__rbit64(v6)) | (v5 << 6);
        v12 = v5;
      }
      else
      {
        v12 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return;
        }
        if (v12 >= v19)
          break;
        v15 = *(_QWORD *)(v20 + 8 * v12);
        if (!v15)
        {
          v16 = v5 + 2;
          if (v5 + 2 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
            goto LABEL_22;
          v16 = v5 + 3;
          if (v5 + 3 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
            goto LABEL_22;
          v16 = v5 + 4;
          if (v5 + 4 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
          {
LABEL_22:
            v12 = v16;
          }
          else
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v19)
              break;
            v15 = *(_QWORD *)(v20 + 8 * v12);
            if (!v15)
            {
              v18 = v5 + 6;
              while (v19 != v18)
              {
                v15 = *(_QWORD *)(v20 + 8 * v18++);
                if (v15)
                {
                  v12 = v18 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v13 = (v15 - 1) & v15;
        v14 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    }
  }
  sub_1DD3DEBAC();
}

uint64_t HFCharacteristicValueManager.staticHomeDataModelHasInProgressWrite(for:)(uint64_t a1)
{
  char v1;

  sub_1DD421D2C(a1);
  return v1 & 1;
}

uint64_t sub_1DD422040()
{
  sub_1DD424808();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD422054(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1F03E5668);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DD4220A4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1DD4220EC(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  sub_1DD422148();

  sub_1DD42484C();
  sub_1DD424888();
  v2 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DD422148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  sub_1DD42484C();
  swift_bridgeObjectRetain();
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v2);
  sub_1DD424888();
  v3 = sub_1DD63E638();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1DD422200()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  _QWORD *v16;
  id v17;
  uint64_t v19;

  v1 = v0;
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = (_QWORD *)((char *)v1 + qword_1F03E5668);
  swift_beginAccess();
  v10 = *v9;
  v11 = sub_1DD63E2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = *(_QWORD *)(v2 + 80);
  v13[3] = v12;
  v13[4] = v10;
  v14 = objc_allocWithZone(MEMORY[0x1E0D519C0]);
  swift_bridgeObjectRetain();
  v15 = objc_msgSend(v14, sel_init);
  objc_msgSend(v15, sel_setDescriptor_, 0);
  sub_1DD424988((uint64_t)v8, (uint64_t)v6);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = &unk_1F03E5678;
  v16[5] = v13;
  v16[6] = v15;
  swift_retain();
  v17 = v15;
  sub_1DD3D883C((uint64_t)v6, (uint64_t)&unk_1F03E5680, (uint64_t)v16);
  swift_release();
  swift_release();
  sub_1DD424A84((uint64_t)v8);
  return v17;
}

uint64_t sub_1DD4223E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  return swift_task_switch();
}

uint64_t sub_1DD422400()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = *(_QWORD *)(v0 + 152) + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1DF0DB400](v1);
  *(_QWORD *)(v0 + 176) = v2;
  if (!v2)
    return (*(uint64_t (**)(id))(v0 + 8))(objc_msgSend(objc_allocWithZone((Class)HFItemProviderReloadResults), sel_initWithAddedItems_removedItems_existingItems_, 0, 0, 0));
  v3 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x78);
  v6 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v4;
  *v4 = v0;
  v4[1] = sub_1DD4224CC;
  return v6(*(_QWORD *)(v0 + 160));
}

uint64_t sub_1DD4224CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1DD422540()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v1, sel_addedItems);
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v2);
  v5 = sub_1DD63E398();

  *(_QWORD *)(v0 + 136) = v5;
  v6 = sub_1DD63E428();
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3D0], v6);
  sub_1DD63E41C();
  v7 = objc_msgSend(v1, sel_removedItems);
  sub_1DD63E398();

  sub_1DD63E410();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = MEMORY[0x1DF0DB400](v3 + 16);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (_QWORD *)(v8 + qword_1F03E5668);
    swift_beginAccess();
    *v10 = v13;

  }
  swift_bridgeObjectRelease();
  objc_opt_self();
  v11 = swift_dynamicCastObjCClassUnconditional();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_1DD422704()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  void *v3;
  id v4;
  id v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v1 = sub_1DD63E47C();
  if (qword_1F03E3828 != -1)
    swift_once();
  v2 = qword_1F03ED470;
  if (os_log_type_enabled((os_log_t)qword_1F03ED470, v1))
  {
    v3 = *(void **)(v0 + 200);
    v4 = v3;
    v5 = v3;
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = v3;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v9;
    sub_1DD63E53C();
    *v7 = v9;

    _os_log_impl(&dword_1DD34E000, v2, v1, "SwiftItemProvider threw error %@. Returning unchanged results", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v7, -1, -1);
    MEMORY[0x1DF0DB358](v6, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 152) + 16;
  swift_beginAccess();
  v11 = (void *)MEMORY[0x1DF0DB400](v10);
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 168);
    swift_beginAccess();
    swift_bridgeObjectRetain();

    sub_1DD42484C();
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v12);
    sub_1DD424888();
    sub_1DD63E638();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1DD63E380();
    swift_bridgeObjectRelease();
  }
  v13 = *(void **)(v0 + 200);
  v14 = objc_msgSend(objc_allocWithZone((Class)HFItemProviderReloadResults), sel_initWithAddedItems_removedItems_existingItems_, 0, 0, v11);

  return (*(uint64_t (**)(id))(v0 + 8))(v14);
}

id sub_1DD4229A4(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_1DD422200();

  return v2;
}

uint64_t sub_1DD4229D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0DEEDD8];
  *(_QWORD *)(v1 + 16) = *v0;
  *(_QWORD *)(v1 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_1DD4229FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16) & *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(qword_1F03E5690);
  v2 = *(_QWORD *)(v1 + 80);
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = sub_1DD4246F8(0, 0, 0, v2);
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

id SwiftItemProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SwiftItemProvider.init()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  v2 = v0;
  v3 = sub_1DD63E230();
  if (MEMORY[0x1DF0D9E40](v3, v1))
  {
    v4 = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    v5 = sub_1DD424AC4(v3, v1, v4);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v2 + qword_1F03E5668) = v5;

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for SwiftItemProvider(0, v1, v6, v7);
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1DD422B50()
{
  return SwiftItemProvider.init()();
}

id SwiftItemProvider.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SwiftItemProvider(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1DD422BBC()
{
  return swift_bridgeObjectRelease();
}

id static SwiftItemProvider.diffItems<A, B, C>(with:existingItems:keyProvider:itemProvider:itemKeyProvider:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  _QWORD v100[10];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;

  v114 = a8;
  v109 = a7;
  v108 = a6;
  v107 = a5;
  v117 = a4;
  v115 = a3;
  v14 = a2[3];
  v106 = a2;
  v110 = __swift_project_boxed_opaque_existential_1(a2, v14);
  swift_getTupleTypeMetadata2();
  sub_1DD63E230();
  v133 = v12;
  v134 = sub_1DD63E0B0();
  v126 = *(_QWORD *)(v12 + 80);
  v127 = a9;
  v128 = a10;
  v129 = a11;
  v130 = a12;
  v131 = v109;
  v132 = v114;
  v114 = v12;
  sub_1DD63E0C8();
  sub_1DD63E1B8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getTupleTypeMetadata2();
  sub_1DD63E230();
  v134 = sub_1DD63E0B0();
  v111 = v126;
  v119 = v126;
  v120 = a9;
  v121 = a10;
  v122 = a11;
  v123 = a12;
  v124 = v115;
  v125 = v117;
  sub_1DD63E0C8();
  sub_1DD63E1B8();
  v103 = v113;
  v112 = a9;
  v15 = sub_1DD63E0BC();
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DE9ED0];
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DE9ED0], v15);
  sub_1DD63E434();
  v110 = a11;
  v17 = sub_1DD63E0BC();
  MEMORY[0x1DF0DB2A4](v16, v17);
  v18 = sub_1DD63E3B0();
  swift_bridgeObjectRetain();
  sub_1DD63E434();
  v113 = sub_1DD63E3B0();
  v109 = (uint64_t)v135;
  swift_bridgeObjectRetain();
  sub_1DD63E434();
  v105 = v135;
  v118 = a10;
  v117 = sub_1DD63E3BC();
  if (qword_1F03E37B8 != -1)
    swift_once();
  v19 = sub_1DD63DF18();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1F03ED3A0);
  swift_bridgeObjectRetain_n();
  v21 = sub_1DD63DF00();
  v22 = sub_1DD63E470();
  v115 = v20;
  v116 = a12;
  v104 = v18;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v135 = (_QWORD *)v24;
    *(_DWORD *)v23 = 136315394;
    v25 = sub_1DD63E95C();
    sub_1DD3C3160(v25, v26, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v27 = sub_1DD63E428();
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v27);
    v28 = sub_1DD63E824();
    v134 = sub_1DD3C3160(v28, v29, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v21, v22, "%s-diffItems: newKeys=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v24, -1, -1);
    MEMORY[0x1DF0DB358](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v30 = sub_1DD63DF00();
  v31 = sub_1DD63E470();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v135 = (_QWORD *)v33;
    *(_DWORD *)v32 = 136315394;
    v34 = sub_1DD63E95C();
    sub_1DD3C3160(v34, v35, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    v36 = sub_1DD63E428();
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v36);
    v37 = sub_1DD63E824();
    v134 = sub_1DD3C3160(v37, v38, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v30, v31, "%s-diffItems: removedKeys=%s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v33, -1, -1);
    MEMORY[0x1DF0DB358](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  v39 = sub_1DD63DF00();
  v40 = sub_1DD63E470();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v135 = (_QWORD *)v42;
    *(_DWORD *)v41 = 136315394;
    v43 = sub_1DD63E95C();
    sub_1DD3C3160(v43, v44, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    v45 = sub_1DD63E428();
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v45);
    v46 = sub_1DD63E824();
    v134 = sub_1DD3C3160(v46, v47, (uint64_t *)&v135);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v39, v40, "%s-diffItems: existingKeys=%s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v42, -1, -1);
    MEMORY[0x1DF0DB358](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v48 = v112;
  __swift_project_boxed_opaque_existential_1(v106, v106[3]);
  v49 = v110;
  v50 = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v110);
  v134 = sub_1DD63E080();
  MEMORY[0x1E0C80A78](v134);
  v51 = v118;
  v52 = v116;
  v101 = v50;
  v102 = sub_1DD63E428();
  v53 = v103;
  v54 = sub_1DD63E1B8();
  v106 = &v101;
  v113 = (uint64_t)v135;
  v135 = (_QWORD *)v104;
  MEMORY[0x1E0C80A78](v54);
  v100[2] = v55;
  v100[3] = v48;
  v100[4] = v51;
  v100[5] = v49;
  v100[6] = v52;
  v100[7] = v107;
  v100[8] = v108;
  v100[9] = v105;
  v56 = sub_1DD63E428();
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3D0], v56);
  v57 = sub_1DD63E1AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    v135 = (_QWORD *)v57;
    v59 = sub_1DD63E278();
    v108 = 0;
    v106 = (uint64_t *)MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEAF38], v59);
    v107 = sub_1DD63E434();
    v105 = v100;
    v135 = (_QWORD *)v117;
    MEMORY[0x1E0C80A78](v107);
    v60 = v112;
    v100[-6] = v111;
    v100[-5] = v60;
    v100[-4] = v118;
    v100[-3] = v49;
    v61 = v116;
    v62 = v109;
    v100[-2] = v116;
    v100[-1] = v62;
    v63 = v108;
    v64 = sub_1DD63E1AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v135 = (_QWORD *)v64;
    v65 = sub_1DD63E434();
    v66 = MEMORY[0x1E0C80A78](v65);
    v67 = v112;
    v100[-8] = v111;
    v100[-7] = v67;
    v100[-6] = v118;
    v100[-5] = v49;
    v68 = v107;
    v100[-4] = v61;
    v100[-3] = v68;
    v100[-2] = v66;
    v69 = v68;
    v70 = sub_1DD63E3E0();
    v108 = v63;
    v135 = (_QWORD *)v70;
    v71 = v102;
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3D0], v102);
    v118 = sub_1DD63E434();
    swift_bridgeObjectRetain_n();
    v72 = sub_1DD63DF00();
    v73 = sub_1DD63E470();
    if (os_log_type_enabled(v72, (os_log_type_t)v73))
    {
      v74 = v71;
      v75 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v135 = (_QWORD *)v76;
      *(_DWORD *)v75 = 136315394;
      v77 = sub_1DD63E95C();
      v134 = sub_1DD3C3160(v77, v78, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2080;
      v134 = v69;
      MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v74);
      v79 = sub_1DD63E824();
      v134 = sub_1DD3C3160(v79, v80, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v72, (os_log_type_t)v73, "%s-diffItems: newItems=%s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v76, -1, -1);
      MEMORY[0x1DF0DB358](v75, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    v81 = sub_1DD63DF00();
    v82 = sub_1DD63E470();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc();
      v84 = swift_slowAlloc();
      v135 = (_QWORD *)v84;
      *(_DWORD *)v83 = 136315394;
      v85 = sub_1DD63E95C();
      v134 = sub_1DD3C3160(v85, v86, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 12) = 2080;
      v134 = v65;
      MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v102);
      v87 = sub_1DD63E824();
      v134 = sub_1DD3C3160(v87, v88, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v81, v82, "%s-diffItems: stillExistingItems=%s", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v84, -1, -1);
      MEMORY[0x1DF0DB358](v83, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v89 = v118;
    swift_bridgeObjectRetain_n();
    v90 = sub_1DD63DF00();
    v91 = sub_1DD63E470();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v93 = swift_slowAlloc();
      v135 = (_QWORD *)v93;
      *(_DWORD *)v92 = 136315394;
      v94 = sub_1DD63E95C();
      v134 = sub_1DD3C3160(v94, v95, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2080;
      v134 = v89;
      MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E8], v102);
      v89 = v118;
      v96 = sub_1DD63E824();
      v134 = sub_1DD3C3160(v96, v97, (uint64_t *)&v135);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v90, v91, "%s-diffItems: removedItems=%s", (uint8_t *)v92, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v93, -1, -1);
      MEMORY[0x1DF0DB358](v92, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v98 = v107;
    __swift_instantiateConcreteTypeFromMangledName(qword_1F03E5690);
    v99 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    return sub_1DD4246F8(v98, v89, v65, (uint64_t)v110);
  }
}

uint64_t sub_1DD423DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  void *v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  void (*v25)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  id v42;
  _BYTE v44[4];
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v54;
  uint64_t v55;

  v48 = a5;
  v51 = a10;
  v52 = a1;
  v12 = *(_QWORD *)(a8 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v44[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v44[-v19];
  v22 = (void *)*v21;
  v23(*v21);
  if (qword_1F03E37B8 != -1)
    swift_once();
  v50 = a9;
  v24 = sub_1DD63DF18();
  __swift_project_value_buffer(v24, (uint64_t)qword_1F03ED3A0);
  v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v49 = v20;
  v53 = v25;
  v25(v18, v20, a8);
  v26 = v12;
  v27 = v22;
  v28 = sub_1DD63DF00();
  v29 = sub_1DD63E470();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v47 = v10;
    v32 = v31;
    v46 = swift_slowAlloc();
    v55 = v46;
    *(_DWORD *)v32 = 136315650;
    v45 = v30;
    v33 = sub_1DD63E95C();
    v54 = sub_1DD3C3160(v33, v34, &v55);
    v48 = v26;
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    v53(v15, v18, a8);
    v35 = sub_1DD63E164();
    v54 = sub_1DD3C3160(v35, v36, &v55);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
    v37(v18, a8);
    *(_WORD *)(v32 + 22) = 2080;
    v54 = (uint64_t)v27;
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0CB2120], v50);
    v38 = sub_1DD63E824();
    v54 = sub_1DD3C3160(v38, v39, &v55);
    sub_1DD63E53C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v28, (os_log_type_t)v45, "%s-diffItems: key is %s for %s", (uint8_t *)v32, 0x20u);
    v40 = v46;
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v40, -1, -1);
    MEMORY[0x1DF0DB358](v32, -1, -1);

  }
  else
  {
    v37 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
    v37(v18, a8);

  }
  v41 = v49;
  v53(v15, v49, a8);
  v55 = (uint64_t)v27;
  sub_1DD63E0C8();
  v42 = v27;
  sub_1DD63E0E0();
  return ((uint64_t (*)(_BYTE *, uint64_t))v37)(v41, a8);
}

uint64_t sub_1DD42414C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  v30 = a4;
  v31 = a3;
  v29 = a1;
  v10 = sub_1DD63E524();
  MEMORY[0x1E0C80A78](v10);
  v28 = (char *)&v26 - v11;
  v12 = sub_1DD63E524();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(_QWORD *)(a7 - 8);
  v18 = MEMORY[0x1E0C80A78](v14);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v26 - v21;
  v27 = a2;
  v31(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v16, a7);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, a7);
  v24 = *(_QWORD *)(a6 - 8);
  v25 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v28, v27, a6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, a6);
  sub_1DD63E0C8();
  sub_1DD63E0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, a7);
}

void sub_1DD424334(uint64_t a1, id *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v7;
  void *v8;

  v7 = *a2;
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a6);
  sub_1DD63E428();
  sub_1DD63E3EC();

}

uint64_t sub_1DD4243B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v20 = a6;
  v13 = sub_1DD63E524();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - v14;
  MEMORY[0x1DF0D9CA8](a1, a3, a5, a4, a7);
  v16 = *(_QWORD *)(a4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v18 = a2(v15);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v15, a4);
    if (!v7)
      *v20 = v18;
  }
  return result;
}

uint64_t sub_1DD4244BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;

  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a7);
  if ((sub_1DD63E404() & 1) != 0)
    v7 = 0;
  else
    v7 = sub_1DD63E404() ^ 1;
  return v7 & 1;
}

id static SwiftItemProvider.diffItems<A, B>(with:existingItems:itemProvider:objectProvider:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9)
{
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v12 = *(_QWORD *)(v9 + 80);
  v13 = a7;
  v14 = a8;
  v15 = a9;
  return static SwiftItemProvider.diffItems<A, B, C>(with:existingItems:keyProvider:itemProvider:itemKeyProvider:)(a1, a2, (uint64_t)sub_1DD424EFC, (uint64_t)v11, a3, a4, a5, a6, a7, a7, a8, a9);
}

id static SwiftItemProvider.diffItems<A>(with:existingItems:itemProvider:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _BYTE v15[16];
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v20 = *(_QWORD *)(v6 + 80);
  v21 = a5;
  v22 = a6;
  v16 = v20;
  v17 = a5;
  v18 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return static SwiftItemProvider.diffItems<A, B, C>(with:existingItems:keyProvider:itemProvider:itemKeyProvider:)(a1, a2, (uint64_t)sub_1DD424F50, (uint64_t)v19, a3, a4, (uint64_t)sub_1DD424FC4, (uint64_t)v15, AssociatedTypeWitness, AssociatedTypeWitness, a5, AssociatedConformanceWitness);
}

id HFItemProvider.asGeneric()()
{
  sub_1DD42484C();
  objc_opt_self();
  return (id)swift_dynamicCastObjCClassUnconditional();
}

id sub_1DD4246F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  if (a1)
  {
    MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
    v8 = (void *)sub_1DD63E380();
    swift_bridgeObjectRelease();
    if (a2)
      goto LABEL_3;
LABEL_6:
    v9 = 0;
    if (a3)
      goto LABEL_4;
LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  v8 = 0;
  if (!a2)
    goto LABEL_6;
LABEL_3:
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
  v9 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  if (!a3)
    goto LABEL_7;
LABEL_4:
  MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], a4);
  v10 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
LABEL_8:
  v11 = objc_msgSend(v4, sel_initWithAddedItems_removedItems_existingItems_, v8, v9, v10);

  return v11;
}

uint64_t sub_1DD424808()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1F03E5668;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

unint64_t sub_1DD42484C()
{
  unint64_t result;

  result = qword_1ED3783D0;
  if (!qword_1ED3783D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3783D0);
  }
  return result;
}

unint64_t sub_1DD424888()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1F03E4940;
  if (!qword_1F03E4940)
  {
    v1 = sub_1DD42484C();
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E4940);
  }
  return result;
}

uint64_t sub_1DD4248D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD4248F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD424920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1DD3DED94;
  *(_QWORD *)(v3 + 168) = v2;
  *(_OWORD *)(v3 + 152) = v4;
  return swift_task_switch();
}

uint64_t sub_1DD424988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD4249D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD424A04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DD3DE5EC;
  return sub_1DD3D8D60(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DD424A84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD424AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1DF0D9E34](v12))
  {
    sub_1DD63E6B0();
    v15 = sub_1DD63E6A4();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1DF0D9E40](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1DD63E248();
    sub_1DD63E218();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1DD63E6E0();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1DD63E0EC();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1DD63E110();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SwiftItemProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SwiftItemProvider);
}

uint64_t sub_1DD424DD8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1DD423DB0(a1, a2, v2[7], v2[8], v2[9], v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1DD424E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DD42414C(a1, a2, *(void (**)(uint64_t))(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1DD424E38(uint64_t a1, id *a2)
{
  uint64_t *v2;

  sub_1DD424334(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1DD424E58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DD4243B4(a1, *(uint64_t (**)(char *))(v2 + 56), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2, *(_QWORD *)(v2 + 48));
}

_QWORD *sub_1DD424E88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *result;
  uint64_t v5;

  result = MEMORY[0x1DF0D9CA8](&v5, a1, v2[7], v2[4], v2[5], v2[6]);
  if (v5)
    *a2 = v5;
  else
    __break(1u);
  return result;
}

uint64_t sub_1DD424ED4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DD4244BC(a1, v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_1DD424EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1DD424F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1DD424FC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 24))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1DD424FF0@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1DD424808();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD425018()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1DD422054(v0);
}

uint64_t sub_1DD425040()
{
  return 8;
}

_QWORD *sub_1DD42504C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1DD42505C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SwiftItemProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SwiftItemProvider.existingItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SwiftItemProvider.existingItems.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SwiftItemProvider.existingItems.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SwiftItemProvider.reloadItems(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DE6D4;
  return v7(a1);
}

uint64_t dispatch thunk of ItemProviderDiffable.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1DF0DB22C](a1, v6, a5);
}

uint64_t static HFNetworkRouterServiceItem.supportedServiceTypes.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD6683F0;
  *(_QWORD *)(inited + 32) = sub_1DD63E14C();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_1DD63E14C();
  *(_QWORD *)(inited + 56) = v2;
  v3 = sub_1DD3EE92C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v3;
}

uint64_t HFNetworkRouterServiceItem._subclass_update(options:)(uint64_t a1)
{
  void *v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD668460;
  *(_QWORD *)(inited + 32) = sub_1DD63E14C();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = sub_1DD63E14C();
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = sub_1DD63E14C();
  *(_QWORD *)(inited + 72) = v6;
  sub_1DD3EE92C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v7 = (void *)sub_1DD63E380();
  result = swift_bridgeObjectRelease();
  if (a1)
  {
    v9 = (void *)sub_1DD63E08C();
    v10 = objc_msgSend(v1, sel_performStandardUpdateWithCharacteristicTypes_options_, v7, v9);

    v13[4] = sub_1DD425408;
    v13[5] = 0;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1DD41BFD8;
    v13[3] = &block_descriptor_6;
    v11 = _Block_copy(v13);
    v12 = objc_msgSend(v10, sel_flatMap_, v11);

    _Block_release(v11);
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DD425408(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  __CFString *v13;
  id v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  __CFString *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __CFString *v25;
  __CFString *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  char v36;
  __CFString *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __CFString *v44;
  uint64_t v45;
  char v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  _OWORD v52[2];
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[40];
  uint64_t v58;

  v2 = objc_msgSend(a1, sel_standardResults);
  v3 = sub_1DD63E098();

  v58 = v3;
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(a1, sel_displayMetadata);
  v5 = objc_msgSend(v4, sel_serviceState);

  if (!v5)
    goto LABEL_8;
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {

LABEL_8:
    v30 = objc_allocWithZone((Class)HFItemUpdateOutcome);
    v31 = (void *)sub_1DD63E08C();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v30, sel_initWithResults_, v31);

    v33 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v32);
    v34 = objc_msgSend(v33, sel_asGeneric);
    swift_bridgeObjectRelease();

    return v34;
  }
  v7 = (void *)v6;
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithHierarchicalColor_, v8);

  v10 = objc_allocWithZone((Class)HFImageIconDescriptor);
  v11 = (void *)sub_1DD63E11C();
  v12 = objc_msgSend(v10, sel_initWithSystemImageNamed_configuration_, v11, v9);

  type metadata accessor for HFItemResultKey(0);
  sub_1DD425C34();
  v13 = CFSTR("icon");
  sub_1DD63E668();
  v54 = sub_1DD352AB0(0, (unint64_t *)&unk_1F03E6090);
  *(_QWORD *)&v53 = v12;
  sub_1DD357884(&v53, &v55);
  v14 = v12;
  v15 = v58;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DC884(&v55, (uint64_t)v57, isUniquelyReferenced_nonNull_native);
  v58 = v15;
  swift_bridgeObjectRelease();
  sub_1DD3DE9BC((uint64_t)v57);
  *(_QWORD *)&v53 = CFSTR("iconNames");
  v17 = CFSTR("iconNames");
  sub_1DD63E668();
  v18 = objc_msgSend(v14, sel_imageIdentifier);
  v19 = sub_1DD63E14C();
  v21 = v20;

  v22 = MEMORY[0x1E0DEA968];
  v54 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v53 = v19;
  *((_QWORD *)&v53 + 1) = v21;
  sub_1DD357884(&v53, &v55);
  v23 = v58;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v52[0] = v23;
  sub_1DD3DC884(&v55, (uint64_t)v57, v24);
  v58 = v23;
  swift_bridgeObjectRelease();
  sub_1DD3DE9BC((uint64_t)v57);
  if (objc_msgSend(v7, sel_type))
  {
    *(_QWORD *)&v53 = CFSTR("errorDescription");
    v25 = CFSTR("errorDescription");
    sub_1DD63E668();
    *(_QWORD *)&v55 = CFSTR("description");
    v26 = CFSTR("description");
    sub_1DD63E668();
    v27 = v58;
    if (*(_QWORD *)(v58 + 16) && (v28 = sub_1DD3D9460((uint64_t)&v53), (v29 & 1) != 0))
    {
      sub_1DD3714B4(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v55);
    }
    else
    {
      v55 = 0u;
      v56 = 0u;
    }
    sub_1DD3DE9BC((uint64_t)&v53);
    if (*((_QWORD *)&v56 + 1))
    {
      sub_1DD357884(&v55, v52);
      v36 = swift_isUniquelyReferenced_nonNull_native();
      sub_1DD3DC884(v52, (uint64_t)v57, v36);
      v58 = v27;
      swift_bridgeObjectRelease();
      sub_1DD3DE9BC((uint64_t)v57);
    }
    else
    {
      sub_1DD3F6180((uint64_t)&v55);
      sub_1DD3F94A8((uint64_t)v57, v52);
      sub_1DD3DE9BC((uint64_t)v57);
      sub_1DD3F6180((uint64_t)v52);
    }
    *(_QWORD *)&v53 = CFSTR("longErrorDescription");
    v37 = CFSTR("longErrorDescription");
    sub_1DD63E668();
    objc_msgSend(v7, sel_underlyingStatus);
    v38 = (id)HMNetworkStatusAsString();
    v39 = sub_1DD63E14C();
    v41 = v40;

    v54 = v22;
    *(_QWORD *)&v53 = v39;
    *((_QWORD *)&v53 + 1) = v41;
    sub_1DD357884(&v53, &v55);
    v42 = v58;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v52[0] = v42;
    sub_1DD3DC884(&v55, (uint64_t)v57, v43);
    v58 = *(_QWORD *)&v52[0];
    swift_bridgeObjectRelease();
    sub_1DD3DE9BC((uint64_t)v57);
    *(_QWORD *)&v53 = CFSTR("descriptionStyle");
    v44 = CFSTR("descriptionStyle");
    sub_1DD63E668();
    v54 = MEMORY[0x1E0DEBB98];
    *(_QWORD *)&v53 = 1;
    sub_1DD357884(&v53, &v55);
    v45 = v58;
    v46 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v52[0] = v45;
    sub_1DD3DC884(&v55, (uint64_t)v57, v46);
    swift_bridgeObjectRelease();
    sub_1DD3DE9BC((uint64_t)v57);
  }
  v47 = objc_allocWithZone((Class)HFItemUpdateOutcome);
  swift_bridgeObjectRetain();
  v48 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(v47, sel_initWithResults_, v48);

  v50 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v49);
  v51 = objc_msgSend(v50, sel_asGeneric);
  swift_bridgeObjectRelease();

  return v51;
}

id HFNetworkRouterServiceItem.init(valueSource:service:)(uint64_t a1, void *a2)
{
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithValueSource_service_, a1, a2);
  swift_unknownObjectRelease();

  return v3;
}

{
  id v3;
  objc_super v5;

  v5.super_class = (Class)HFNetworkRouterServiceItem;
  v3 = objc_msgSendSuper2(&v5, sel_initWithValueSource_service_, a1, a2);
  swift_unknownObjectRelease();

  return v3;
}

uint64_t type metadata accessor for HFNetworkRouterServiceItem(uint64_t a1)
{
  return sub_1DD352AB0(a1, &qword_1F03E5720);
}

unint64_t sub_1DD425C34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E3B50;
  if (!qword_1F03E3B50)
  {
    type metadata accessor for HFItemResultKey(255);
    result = MEMORY[0x1DF0DB2A4](&unk_1DD667324, v1);
    atomic_store(result, (unint64_t *)&qword_1F03E3B50);
  }
  return result;
}

uint64_t HMHomeManager.refresh(before:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1DD425C94()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  _QWORD *v5;

  _s11CancellableCMa();
  v1 = swift_allocObject();
  v0[2].i64[0] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5748);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = 0;
  v3 = swift_task_alloc();
  v0[2].i64[1] = v3;
  v4 = v0[1];
  *(_QWORD *)(v3 + 16) = v1;
  *(int8x16_t *)(v3 + 24) = vextq_s8(v4, v4, 8uLL);
  v0[3].i64[0] = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1DD425D94;
  return sub_1DD63E86C();
}

uint64_t sub_1DD425D94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1DD425E08()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD425E3C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s11CancellableCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DD425EA4()
{
  uint64_t v0;
  id v1;

  v0 = sub_1DD63DF18();
  __swift_allocate_value_buffer(v0, qword_1F03E5728);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F03E5728);
  if (qword_1F03E3820 != -1)
    swift_once();
  v1 = (id)qword_1F03ED468;
  return sub_1DD63DF24();
}

uint64_t sub_1DD425F24()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DD425F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  return swift_task_switch();
}

uint64_t sub_1DD425F6C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[11];
  v2 = v0[10];
  v0[2] = v0;
  v0[3] = sub_1DD425FD0;
  v3 = swift_continuation_init();
  sub_1DD426170(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_1DD425FD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 104) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_1DD42603C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD426090()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD4260E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1DD3DE5EC;
  *(_QWORD *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_1DD42614C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD426170(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  os_unfair_lock_s *v15;
  uint64_t aBlock[6];

  if (qword_1F03E3838 != -1)
    swift_once();
  v6 = sub_1DD63DF18();
  __swift_project_value_buffer(v6, (uint64_t)qword_1F03E5728);
  v7 = sub_1DD63DF00();
  v8 = sub_1DD63E488();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    sub_1DD3C3160(0xD000000000000010, 0x80000001DD66F630, aBlock);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v7, v8, "%s Sending homed request to refresh graph with local process", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v10, -1, -1);
    MEMORY[0x1DF0DB358](v9, -1, -1);
  }

  v11 = (void *)sub_1DD63D714();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  aBlock[4] = (uint64_t)sub_1DD42699C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DD428028;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  v13 = _Block_copy(aBlock);
  swift_release();
  v14 = objc_msgSend(a3, sel__refreshBeforeDate_completionHandler_, v11, v13);
  _Block_release(v13);

  v15 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  os_unfair_lock_lock(v15);
  *(_QWORD *)(a2 + 24) = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v15);
  return swift_unknownObjectRelease();
}

uint64_t sub_1DD4263D0(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1)
  {
    v2 = a1;
    if (qword_1F03E3838 != -1)
      swift_once();
    v3 = sub_1DD63DF18();
    __swift_project_value_buffer(v3, (uint64_t)qword_1F03E5728);
    v4 = a1;
    v5 = a1;
    v6 = sub_1DD63DF00();
    v7 = sub_1DD63E47C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v22 = v10;
      *(_DWORD *)v8 = 136315394;
      sub_1DD3C3160(0xD000000000000010, 0x80000001DD66F630, &v22);
      sub_1DD63E53C();
      *(_WORD *)(v8 + 12) = 2112;
      v11 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_1DD63E53C();
      *v9 = v21;

      _os_log_impl(&dword_1DD34E000, v6, v7, "%s HMHomeManager returned error: %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v10, -1, -1);
      MEMORY[0x1DF0DB358](v8, -1, -1);
    }
    else
    {

    }
    sub_1DD4269A4();
    v18 = swift_allocError();
    *v19 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
    swift_allocError();
    *v20 = v18;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (qword_1F03E3838 != -1)
      swift_once();
    v12 = sub_1DD63DF18();
    __swift_project_value_buffer(v12, (uint64_t)qword_1F03E5728);
    v13 = sub_1DD63DF00();
    v14 = sub_1DD63E488();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v22 = v16;
      *(_DWORD *)v15 = 136315138;
      sub_1DD3C3160(0xD000000000000010, 0x80000001DD66F630, &v22);
      sub_1DD63E53C();
      _os_log_impl(&dword_1DD34E000, v13, v14, "%s Finished refreshing with homed", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v16, -1, -1);
      MEMORY[0x1DF0DB358](v15, -1, -1);
    }

    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1DD42679C()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = (os_unfair_lock_s *)(*(_QWORD *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    v3 = *(void **)(v1 + 24);
    swift_unknownObjectRetain();
    os_unfair_lock_unlock(v2);
    if (v3)
    {
      objc_msgSend(v3, sel_cancel);
      swift_unknownObjectRelease();
    }
    os_unfair_lock_lock(v2);
    *(_QWORD *)(v1 + 24) = 0;
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DD426850()
{
  return sub_1DD42679C();
}

_QWORD *_s5ErrorOwCP_0(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void _s5ErrorOwxx_0(id *a1)
{

}

void **_s5ErrorOwca_0(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **_s5ErrorOwta_0(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s5ErrorOwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5ErrorOwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HMHomeManager.Error()
{
  return &type metadata for HMHomeManager.Error;
}

uint64_t sub_1DD42698C()
{
  return swift_deallocObject();
}

uint64_t sub_1DD42699C(void *a1)
{
  return sub_1DD4263D0(a1);
}

unint64_t sub_1DD4269A4()
{
  unint64_t result;

  result = qword_1F03E5840;
  if (!qword_1F03E5840)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HMHomeManager.Error, &type metadata for HMHomeManager.Error);
    atomic_store(result, (unint64_t *)&qword_1F03E5840);
  }
  return result;
}

uint64_t static HFNetworkRouterStatusItem.serviceTypes.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD6683F0;
  *(_QWORD *)(inited + 32) = sub_1DD63E14C();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_1DD63E14C();
  *(_QWORD *)(inited + 56) = v2;
  v3 = sub_1DD3EE92C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v3;
}

uint64_t sub_1DD426B64(void *a1, void *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  __CFString *v9;
  unint64_t v10;
  char v11;
  __CFString *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __CFString *v20;
  char isUniquelyReferenced_nonNull_native;
  void *v22;
  uint64_t result;
  id v24;
  __CFString *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __CFString *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __CFString *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __CFString *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __CFString *v57;
  id v58;
  char v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  _OWORD v65[2];
  _BYTE v66[40];
  __int128 v67;
  __int128 v68;

  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_serviceTypes);
  v5 = MEMORY[0x1E0DEA968];
  sub_1DD63E398();

  v6 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a2, sel_standardResultsForBatchReadResponse_serviceTypes_, a1, v6);

  v8 = sub_1DD63E098();
  *(_QWORD *)&v65[0] = CFSTR("hidden");
  type metadata accessor for HFItemResultKey(0);
  sub_1DD425C34();
  swift_bridgeObjectRetain();
  v9 = CFSTR("hidden");
  sub_1DD63E668();
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_1DD3D9460((uint64_t)v66), (v11 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_1DD3DE9BC((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0 && LOBYTE(v65[0]) == 1)
      goto LABEL_21;
  }
  else
  {
    sub_1DD3F6180((uint64_t)&v67);
  }
  *(_QWORD *)&v65[0] = CFSTR("representedHomeKitObjects");
  v12 = CFSTR("representedHomeKitObjects");
  sub_1DD63E668();
  if (*(_QWORD *)(v8 + 16) && (v13 = sub_1DD3D9460((uint64_t)v66), (v14 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(v8 + 56) + 32 * v13, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_1DD3DE9BC((uint64_t)v66);
  if (!*((_QWORD *)&v68 + 1))
  {
    sub_1DD3F6180((uint64_t)&v67);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E58B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_33:
    v60 = objc_allocWithZone((Class)HFItemUpdateOutcome);
    v61 = (void *)sub_1DD63E08C();
    swift_bridgeObjectRelease();
    v62 = objc_msgSend(v60, sel_initWithResults_, v61);

    v63 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v62);
    v64 = objc_msgSend(v63, sel_asGeneric);

    return (uint64_t)v64;
  }
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)&v65[0];
  v16 = a1;
  sub_1DD42765C(*(uint64_t *)&v65[0], v16);
  v18 = v17;

  v19 = sub_1DD3F6A80(v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v67 = CFSTR("statusRepresentedServiceStates");
  v20 = CFSTR("statusRepresentedServiceStates");
  sub_1DD63E668();
  *((_QWORD *)&v68 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E58B8);
  *(_QWORD *)&v67 = v19;
  sub_1DD357884(&v67, v65);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DC884(v65, (uint64_t)v66, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1DD3DE9BC((uint64_t)v66);
  if ((v19 & 0xC000000000000001) != 0)
  {
    if (sub_1DD63E5E4() == 1)
      goto LABEL_18;
LABEL_23:
    swift_bridgeObjectRelease();
    v24 = objc_msgSend((id)objc_opt_self(), sel_combinedStateTypeIdentifier);
LABEL_24:
    sub_1DD63E14C();

    if ((v15 & 0xC000000000000001) != 0)
    {
      if (sub_1DD63E5E4() == 1)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        *(_QWORD *)&v67 = CFSTR("title");
        v25 = CFSTR("title");
        sub_1DD63E668();
        v26 = (void *)sub_1DD63E11C();
        v27 = HFLocalizedString(v26);

        v28 = sub_1DD63E14C();
        v30 = v29;

        *((_QWORD *)&v68 + 1) = v5;
        *(_QWORD *)&v67 = v28;
        *((_QWORD *)&v67 + 1) = v30;
        sub_1DD357884(&v67, v65);
        v31 = swift_isUniquelyReferenced_nonNull_native();
        sub_1DD3DC884(v65, (uint64_t)v66, v31);
        swift_bridgeObjectRelease();
        sub_1DD3DE9BC((uint64_t)v66);
        *(_QWORD *)&v67 = CFSTR("description");
        v32 = CFSTR("description");
        sub_1DD63E668();
        *(_QWORD *)&v67 = 0;
        *((_QWORD *)&v67 + 1) = 0xE000000000000000;
        sub_1DD63E6BC();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v67 = 0xD000000000000024;
        *((_QWORD *)&v67 + 1) = 0x80000001DD66F730;
        sub_1DD63E188();
        swift_bridgeObjectRelease();
        v33 = (void *)sub_1DD63E11C();
        swift_bridgeObjectRelease();
        v34 = HFLocalizedString(v33);

        v35 = sub_1DD63E14C();
        v37 = v36;

        *((_QWORD *)&v68 + 1) = v5;
        *(_QWORD *)&v67 = v35;
        *((_QWORD *)&v67 + 1) = v37;
        sub_1DD357884(&v67, v65);
        v38 = swift_isUniquelyReferenced_nonNull_native();
        sub_1DD3DC884(v65, (uint64_t)v66, v38);
        swift_bridgeObjectRelease();
        sub_1DD3DE9BC((uint64_t)v66);
LABEL_32:
        *(_QWORD *)&v67 = CFSTR("statusItemCategory");
        v57 = CFSTR("statusItemCategory");
        sub_1DD63E668();
        v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, 1);
        *((_QWORD *)&v68 + 1) = sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
        *(_QWORD *)&v67 = v58;
        sub_1DD357884(&v67, v65);
        v59 = swift_isUniquelyReferenced_nonNull_native();
        sub_1DD3DC884(v65, (uint64_t)v66, v59);
        swift_bridgeObjectRelease();
        sub_1DD3DE9BC((uint64_t)v66);
        goto LABEL_33;
      }
    }
    else if (*(_QWORD *)(v15 + 16) == 1)
    {
      goto LABEL_26;
    }
    *(_QWORD *)&v67 = CFSTR("title");
    v39 = CFSTR("title");
    sub_1DD63E668();
    v40 = (void *)sub_1DD63E11C();
    v41 = HFLocalizedString(v40);

    sub_1DD63E14C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5568);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1DD667A30;
    if ((v15 & 0xC000000000000001) != 0)
      v43 = sub_1DD63E5E4();
    else
      v43 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v42 + 64) = v44;
    *(_QWORD *)(v42 + 32) = v43;
    v45 = sub_1DD63E158();
    v47 = v46;
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEA968];
    *((_QWORD *)&v68 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v67 = v45;
    *((_QWORD *)&v67 + 1) = v47;
    sub_1DD357884(&v67, v65);
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC884(v65, (uint64_t)v66, v49);
    swift_bridgeObjectRelease();
    sub_1DD3DE9BC((uint64_t)v66);
    *(_QWORD *)&v67 = CFSTR("description");
    v50 = CFSTR("description");
    sub_1DD63E668();
    *(_QWORD *)&v67 = 0;
    *((_QWORD *)&v67 + 1) = 0xE000000000000000;
    sub_1DD63E6BC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v67 = 0xD000000000000029;
    *((_QWORD *)&v67 + 1) = 0x80000001DD66F6E0;
    sub_1DD63E188();
    swift_bridgeObjectRelease();
    v51 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v52 = HFLocalizedString(v51);

    v53 = sub_1DD63E14C();
    v55 = v54;

    *((_QWORD *)&v68 + 1) = v48;
    *(_QWORD *)&v67 = v53;
    *((_QWORD *)&v67 + 1) = v55;
    sub_1DD357884(&v67, v65);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC884(v65, (uint64_t)v66, v56);
    swift_bridgeObjectRelease();
    sub_1DD3DE9BC((uint64_t)v66);
    goto LABEL_32;
  }
  if (*(_QWORD *)(v19 + 16) != 1)
    goto LABEL_23;
LABEL_18:
  v22 = (void *)sub_1DD3F7A80(v19);
  result = swift_bridgeObjectRelease();
  if (v22)
  {
    v24 = objc_msgSend(v22, sel_stateTypeIdentifier);

    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id HFNetworkRouterStatusItem.init(home:room:valueSource:)(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithHome_room_valueSource_, a1, a2, a3);

  swift_unknownObjectRelease();
  return v5;
}

{
  id v5;
  objc_super v7;

  v7.super_class = (Class)HFNetworkRouterStatusItem;
  v5 = objc_msgSendSuper2(&v7, sel_initWithHome_room_valueSource_, a1, a2, a3);

  swift_unknownObjectRelease();
  return v5;
}

void sub_1DD42765C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v3 = a1;
  v30 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    sub_1DD427D2C();
    sub_1DD63E3F8();
    v3 = v25;
    v23 = v26;
    v4 = v27;
    v5 = v28;
    v6 = v29;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v23 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v22 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_1DD63E614())
      goto LABEL_40;
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v13 = v24;
    swift_unknownObjectRelease();
    v12 = v5;
    v10 = v6;
    if (!v24)
      goto LABEL_40;
LABEL_33:
    v17 = objc_msgSend(a2, sel_batchResponseForService_, v13);
    if (v17
      && (v18 = v17,
          v19 = objc_msgSend((id)objc_opt_self(), sel_displayMetadataForService_characteristicReadResponse_, v13, v17),
          v20 = objc_msgSend(v19, sel_serviceState),
          v19,
          v18,
          v20))
    {
      objc_opt_self();
      v21 = swift_dynamicCastObjCClass();

      if (v21)
      {
        MEMORY[0x1DF0D9DA4]();
        if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD63E224();
        sub_1DD63E254();
        sub_1DD63E20C();
      }
      else
      {

      }
    }
    else
    {

    }
    v5 = v12;
    v6 = v10;
  }
  if (v6)
  {
    v10 = (v6 - 1) & v6;
    v11 = __clz(__rbit64(v6)) | (v5 << 6);
    v12 = v5;
LABEL_32:
    v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_40;
    goto LABEL_33;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v22)
      goto LABEL_40;
    v15 = *(_QWORD *)(v23 + 8 * v14);
    v12 = v5 + 1;
    if (!v15)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v22)
        goto LABEL_40;
      v15 = *(_QWORD *)(v23 + 8 * v12);
      if (!v15)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v22)
          goto LABEL_40;
        v15 = *(_QWORD *)(v23 + 8 * v12);
        if (!v15)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v22)
            goto LABEL_40;
          v15 = *(_QWORD *)(v23 + 8 * v12);
          if (!v15)
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v22)
              goto LABEL_40;
            v15 = *(_QWORD *)(v23 + 8 * v12);
            if (!v15)
            {
              v16 = v5 + 6;
              while (v22 != v16)
              {
                v15 = *(_QWORD *)(v23 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
LABEL_40:
              sub_1DD3DEBAC();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

id _sSo25HFNetworkRouterStatusItemC4HomeE16_subclass_update7optionsSo8NAFutureCySo19HFItemUpdateOutcomeCGSDys11AnyHashableVypGSg_tF_0()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v21[6];

  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD668460;
  *(_QWORD *)(inited + 32) = sub_1DD63E14C();
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = sub_1DD63E14C();
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = sub_1DD63E14C();
  *(_QWORD *)(inited + 72) = v5;
  sub_1DD3EE92C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_serviceTypes);
  v7 = sub_1DD63E398();

  sub_1DD40DD08(v7);
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1DD63E1DC();
  swift_release();
  v9 = swift_bridgeObjectRetain();
  sub_1DD40DD08(v9);
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1DD63E1DC();
  swift_release();
  v11 = objc_msgSend(v0, sel_filteredServicesOfTypes_containingCharacteristicTypes_, v8, v10);

  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  sub_1DD427D2C();
  sub_1DD63E398();

  v12 = objc_msgSend(v0, sel_valueSource);
  v13 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_readValuesForCharacteristicTypes_inServices_, v13, v14);

  swift_unknownObjectRelease();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v0;
  *(_QWORD *)(v16 + 24) = ObjectType;
  v21[4] = sub_1DD427DA8;
  v21[5] = v16;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1DD41BFD8;
  v21[3] = &block_descriptor_8;
  v17 = _Block_copy(v21);
  v18 = v0;
  swift_release();
  v19 = objc_msgSend(v15, sel_flatMap_, v17);

  _Block_release(v17);
  return v19;
}

uint64_t type metadata accessor for HFNetworkRouterStatusItem(uint64_t a1)
{
  return sub_1DD352AB0(a1, &qword_1F03E58A8);
}

unint64_t sub_1DD427D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E4AF0;
  if (!qword_1F03E4AF0)
  {
    v1 = sub_1DD352AB0(255, (unint64_t *)&qword_1F03E41C0);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F03E4AF0);
  }
  return result;
}

uint64_t sub_1DD427D84()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DD427DA8(void *a1)
{
  uint64_t v1;

  return sub_1DD426B64(a1, *(void **)(v1 + 16));
}

id sub_1DD427DB0(uint64_t a1)
{
  return sub_1DD427E7C(a1, 0, &qword_1F03E58C0);
}

id static HMHomeManagerConfiguration.widgetConfiguration.getter()
{
  return sub_1DD427E08(&qword_1F03E3840, (id *)&qword_1F03E58C0);
}

id sub_1DD427DDC(uint64_t a1)
{
  return sub_1DD427E7C(a1, 0, &qword_1F03E58C8);
}

id static HMHomeManagerConfiguration.intentsExtensionConfiguration.getter()
{
  return sub_1DD427E08(qword_1F03E3848, (id *)&qword_1F03E58C8);
}

id sub_1DD427E08(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id sub_1DD427E40(uint64_t a1)
{
  return sub_1DD427E7C(a1, 2, qword_1ED378530);
}

id static HMHomeManagerConfiguration.controlCenterInProcessModuleConfiguration.getter()
{
  return sub_1DD427E08(&qword_1ED378540, (id *)qword_1ED378530);
}

id sub_1DD427E6C(uint64_t a1)
{
  return sub_1DD427E7C(a1, 2, &qword_1F03E58D0);
}

id sub_1DD427E7C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  id result;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA6C8]), sel_initWithOptions_cachePolicy_, -1, a2);
  objc_msgSend(v4, sel_setDiscretionary_, 0);
  result = objc_msgSend(v4, sel_setAdaptive_, 1);
  *a3 = v4;
  return result;
}

id static HMHomeManagerConfiguration.configurationForTesting.getter()
{
  return sub_1DD427E08(&qword_1F03E3858, (id *)&qword_1F03E58D0);
}

id sub_1DD427F04(uint64_t a1, uint64_t a2)
{
  return sub_1DD427F3C(a1, a2, qword_1F03E3848, (id *)&qword_1F03E58C8);
}

id sub_1DD427F20(uint64_t a1, uint64_t a2)
{
  return sub_1DD427F3C(a1, a2, &qword_1F03E3858, (id *)&qword_1F03E58D0);
}

id sub_1DD427F3C(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t dispatch thunk of static HomeManagerConfigurationProviding.intentsExtensionConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static HomeManagerConfigurationProviding.configurationForTesting.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id HFActionBuilder.asGeneric()()
{
  sub_1DD427FC4();
  objc_opt_self();
  return (id)swift_dynamicCastObjCClassUnconditional();
}

unint64_t sub_1DD427FC4()
{
  unint64_t result;

  result = qword_1F03E58D8;
  if (!qword_1F03E58D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03E58D8);
  }
  return result;
}

void sub_1DD428028(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id sub_1DD42807C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  qword_1F03ED478 = (uint64_t)result;
  return result;
}

BOOL HomeKitObjectSettingsStore.StorageLocation.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

_QWORD *sub_1DD42811C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t static HomeKitObjectSettingsStore.value<A>(for:on:in:)@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;

  v8 = *a1;
  v9 = a1[1];
  if ((a4 & 1) != 0)
  {
    if (v8)
    {
      v14 = *a1;
LABEL_11:
      result = sub_1DD63E890();
      __break(1u);
      return result;
    }
  }
  else if (a3 != 1)
  {
    if (!a3)
    {
      v14 = *a1;
      v15 = v9;
      return sub_1DD4282E8(&v14, a2, a5, a6);
    }
    v14 = a3;
    goto LABEL_11;
  }
  v16 = &unk_1F0429178;
  v17 = &unk_1F0408E78;
  v18 = &unk_1F0426EF8;
  v11 = swift_dynamicCastObjCProtocolConditional();
  if (v11)
  {
    v12 = (void *)v11;
    v14 = v8;
    v15 = v9;
    swift_unknownObjectRetain();
    sub_1DD428544(v12, &v14, a5, a6);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1DD4282A4();
    swift_allocError();
    *v13 = 0;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for HomeKitObjectSettingsStore.Setting(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HomeKitObjectSettingsStore.Setting);
}

unint64_t sub_1DD4282A4()
{
  unint64_t result;

  result = qword_1F03E5A00;
  if (!qword_1F03E5A00)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HomeKitObjectSettingsStore.Errors, &type metadata for HomeKitObjectSettingsStore.Errors);
    atomic_store(result, (unint64_t *)&qword_1F03E5A00);
  }
  return result;
}

uint64_t sub_1DD4282E8@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  _OWORD v23[2];

  v8 = sub_1DD63D7C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    *(_QWORD *)&v23[0] = *a1;
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v12 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_1DD63D7A4();

    if (qword_1F03E3860 != -1)
      swift_once();
    v13 = (id)qword_1F03ED478;
    v14 = (void *)sub_1DD63E11C();
    v15 = objc_msgSend(v13, sel_dictionaryForKey_, v14);

    if (v15)
    {
      v16 = sub_1DD63E098();

      v17 = sub_1DD63D780();
      if (*(_QWORD *)(v16 + 16) && (v19 = sub_1DD3714A8(v17, v18), (v20 & 1) != 0))
        sub_1DD3714B4(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)v23);
      else
        memset(v23, 0, sizeof(v23));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED3785F0);
      v21 = swift_dynamicCast() ^ 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v21, 1, a3);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
    }
  }
  return result;
}

uint64_t sub_1DD428544@<X0>(id a1@<X1>, _QWORD *a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  int v10;
  uint64_t result;

  if (*a2)
  {
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v6 = objc_msgSend(a1, sel_applicationData);
    v7 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    v8 = (void *)sub_1DD63E11C();
    v9 = objc_msgSend(v7, sel_initWithString_, v8);

    objc_msgSend(v6, sel_objectForKey_, v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5AD0);
    v10 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v10 ^ 1u, 1, a3);
  }
  return result;
}

uint64_t static HomeKitObjectSettingsStore.set<A>(value:for:on:in:)(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;

  v7 = v6;
  v10 = *a2;
  v11 = a2[1];
  if ((a5 & 1) != 0)
  {
    if (v10)
    {
      v18 = *a2;
      goto LABEL_13;
    }
LABEL_7:
    v20 = &unk_1F0429178;
    v21 = &unk_1F0408E78;
    v22 = &unk_1F0426EF8;
    v13 = swift_dynamicCastObjCProtocolConditional();
    if (v13)
    {
      v14 = (void *)v13;
      v18 = v10;
      v19 = v11;
      swift_unknownObjectRetain();
      sub_1DD428ED0(a1, &v18, v14, a6);
      v7 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1DD4282A4();
      swift_allocError();
      *v16 = 0;
      swift_willThrow();
    }
    return v7;
  }
  if (a4 == 1)
    goto LABEL_7;
  if (!a4)
  {
    v18 = *a2;
    v19 = v11;
    v12 = sub_1DD4287F0(a1, &v18, a3, a6);
    if (!v6)
      return v12;
    return v7;
  }
  v18 = a4;
LABEL_13:
  result = sub_1DD63E890();
  __break(1u);
  return result;
}

uint64_t sub_1DD4287F0(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _OWORD v46[2];
  __int128 v47;
  uint64_t v48;
  unint64_t v49;

  v40 = a1;
  v8 = sub_1DD63E524();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v38 - v11;
  v13 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DD63D7C8();
  v42 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2)
  {
    *(_QWORD *)&v47 = *a2;
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v44 = v4;
    v18 = objc_msgSend(a3, sel_uniqueIdentifier);
    v41 = v17;
    sub_1DD63D7A4();

    if (qword_1F03E3860 != -1)
      swift_once();
    v19 = (id)qword_1F03ED478;
    v20 = (void *)sub_1DD63E11C();
    v21 = objc_msgSend(v19, sel_dictionaryForKey_, v20);

    if (v21)
    {
      v22 = sub_1DD63E098();

    }
    else
    {
      v22 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
    }
    v49 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v40, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v23 = v41;
      v24 = sub_1DD63D780();
      sub_1DD3F9288(v24, v25, &v47);
      swift_bridgeObjectRelease();
      sub_1DD3F6180((uint64_t)&v47);
    }
    else
    {
      v26 = v39;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v39, v12, a4);
      v23 = v41;
      v27 = sub_1DD63D780();
      v29 = v28;
      v48 = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
      (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(boxed_opaque_existential_1, v26, a4);
      sub_1DD357884(&v47, v46);
      v31 = v49;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = v31;
      v49 = 0x8000000000000000;
      sub_1DD3D3978((uint64_t)v46, v27, v29, isUniquelyReferenced_nonNull_native);
      v49 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v26, a4);
    }
    if (*(_QWORD *)(v49 + 16))
    {
      v33 = (id)qword_1F03ED478;
      v34 = (id)sub_1DD63E08C();
      swift_bridgeObjectRelease();
      v35 = (void *)sub_1DD63E11C();
      objc_msgSend(v33, sel_setObject_forKey_, v34, v35);

    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = (id)qword_1F03ED478;
      v35 = (void *)sub_1DD63E11C();
      objc_msgSend(v34, sel_removeObjectForKey_, v35);
    }

    v36 = objc_msgSend((id)objc_opt_self(), sel_futureWithNoResult);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v43);
    return (uint64_t)v36;
  }
  return result;
}

id sub_1DD428C54(int a1, uint64_t a2, uint64_t a3, int a4, id a5)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id result;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  if (a3)
  {
    result = (id)sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v7 = objc_msgSend(a5, sel_applicationData);
    if (a2)
    {
      v8 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      swift_bridgeObjectRetain_n();
      v9 = (void *)sub_1DD63E11C();
      v10 = objc_msgSend(v8, sel_initWithString_, v9);
      swift_bridgeObjectRelease_n();

    }
    else
    {
      v10 = 0;
    }
    v11 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    v12 = (void *)sub_1DD63E11C();
    v13 = objc_msgSend(v11, sel_initWithString_, v12);

    objc_msgSend(v7, sel_setObject_forKey_, v10, v13);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a5;
    *(_QWORD *)(v14 + 24) = v7;
    v27 = sub_1DD42A2E4;
    v28 = v14;
    v15 = MEMORY[0x1E0C809B0];
    v23 = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_1DD41BED4;
    v26 = &block_descriptor_9;
    v16 = _Block_copy(&v23);
    v17 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v18 = v7;
    v19 = objc_msgSend(v17, sel_futureWithErrorOnlyHandlerAdapterBlock_, v16);
    _Block_release(v16);
    swift_release();
    v27 = _s4Home23ItemSelectionControllerPAAE23selectionCompleteFutureSo8NAFutureCyyXlGvg_0;
    v28 = 0;
    v23 = v15;
    v24 = 1107296256;
    v25 = sub_1DD42950C;
    v26 = &block_descriptor_3;
    v20 = _Block_copy(&v23);
    v21 = objc_msgSend(v19, sel_flatMap_, v20);
    swift_unknownObjectRelease();

    _Block_release(v20);
    return v21;
  }
  return result;
}

void sub_1DD428ED0(uint64_t a1, _QWORD *a2, id a3, uint64_t a4)
{
  uint64_t v4;
  id v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id (*v25)();
  uint64_t v26;

  if (*a2)
  {
    sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v8 = objc_msgSend(a3, sel_applicationData);
    v9 = sub_1DD429114(a1, a4);
    if (v4)
    {

    }
    else
    {
      v10 = v9;
      v11 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      v12 = (void *)sub_1DD63E11C();
      v13 = objc_msgSend(v11, sel_initWithString_, v12);

      objc_msgSend(v8, sel_setObject_forKey_, v10, v13);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = a3;
      *(_QWORD *)(v14 + 24) = v8;
      v25 = (id (*)())sub_1DD42A350;
      v26 = v14;
      v15 = MEMORY[0x1E0C809B0];
      v21 = MEMORY[0x1E0C809B0];
      v22 = 1107296256;
      v23 = sub_1DD41BED4;
      v24 = &block_descriptor_13;
      v16 = _Block_copy(&v21);
      v17 = (void *)objc_opt_self();
      swift_unknownObjectRetain();
      v18 = v8;
      v19 = objc_msgSend(v17, sel_futureWithErrorOnlyHandlerAdapterBlock_, v16);
      _Block_release(v16);
      swift_release();
      v25 = _s4Home23ItemSelectionControllerPAAE23selectionCompleteFutureSo8NAFutureCyyXlGvg_0;
      v26 = 0;
      v21 = v15;
      v22 = 1107296256;
      v23 = sub_1DD42950C;
      v24 = &block_descriptor_16;
      v20 = _Block_copy(&v21);
      objc_msgSend(v19, sel_flatMap_, v20);
      swift_unknownObjectRelease();

      _Block_release(v20);
    }
  }
}

char *sub_1DD429114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  void *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v24)(char *, uint64_t);
  _BYTE *v25;
  _QWORD v26[3];

  v4 = sub_1DD63E524();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v26 - v7;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v26 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v26 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v8, a2);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v15, v17, a2);
  if (swift_dynamicCast())
  {
    v19 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    v20 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v12 = (char *)objc_msgSend(v19, sel_initWithString_, v20);

LABEL_12:
    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v17, a2);
    v22(v15, a2);
    return v12;
  }
  if (swift_dynamicCast())
  {
    sub_1DD42A2F0();
    v21 = sub_1DD63E4C4();
LABEL_11:
    v12 = (char *)v21;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    sub_1DD42A2F0();
    v21 = sub_1DD63E4D0();
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    sub_1DD42A2F0();
    v21 = sub_1DD63E4B8();
    goto LABEL_11;
  }
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v15, a2);
  v18(v12, v17, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5AE0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = (char *)v26[2];
  }
  else
  {
    sub_1DD4282A4();
    swift_allocError();
    *v25 = 1;
    swift_willThrow();
  }
  v24(v17, a2);
  return v12;
}

void sub_1DD42945C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1DD428028;
  v7[3] = &block_descriptor_6_0;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_hf_updateApplicationData_handleError_completionHandler_, a4, 1, v6);
  _Block_release(v6);
}

id sub_1DD42950C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

BOOL static HomeKitObjectSettingsStore.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HomeKitObjectSettingsStore.Errors.hash(into:)()
{
  return sub_1DD63E914();
}

uint64_t HomeKitObjectSettingsStore.Errors.hashValue.getter()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

BOOL sub_1DD4295E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

id HomeKitObjectSettingsStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeKitObjectSettingsStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HomeKitObjectSettingsStore()
{
  return objc_opt_self();
}

uint64_t HomeKitObjectSettingsStore.SettingKey.init(rawValue:)()
{
  return 0;
}

uint64_t sub_1DD429664()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

uint64_t sub_1DD4296A8()
{
  return sub_1DD63E914();
}

uint64_t sub_1DD4296D0()
{
  sub_1DD63E908();
  sub_1DD63E914();
  return sub_1DD63E938();
}

_QWORD *sub_1DD429710@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t static HomeKitObjectSettingsStore.valueForSetting(_:on:)(uint64_t a1)
{
  return sub_1DD429B34(a1);
}

uint64_t static HomeKitObjectSettingsStore.valueForSetting(_:on:in:)(uint64_t a1)
{
  return sub_1DD429B34(a1);
}

uint64_t _s4Home0A22KitObjectSettingsStoreC3set8tileSize3forSo8NAFutureCySo6NSNullCGSo015HFTileResizableH0aSg_So06HFHomebC0_ptFZ_0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t result;

  if (a1)
  {
    v1 = sub_1DD63E14C();
    v3 = v2;
  }
  else
  {
    v1 = 0;
    v3 = 0;
  }
  if (qword_1F03E3868 != -1)
    swift_once();
  if (qword_1F03ED480)
  {
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v4 = qword_1F03ED488;
    v5 = swift_dynamicCastObjCProtocolConditional();
    if (v5)
    {
      v6 = (void *)v5;
      swift_unknownObjectRetain();
      v11 = sub_1DD428C54(v1, v3, 0, v4, v6);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v11;
    }
    else
    {
      sub_1DD4282A4();
      v7 = (void *)swift_allocError();
      *v8 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      v9 = (void *)sub_1DD63D69C();
      v10 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v9);

      return (uint64_t)v10;
    }
  }
  return result;
}

uint64_t sub_1DD429B34(uint64_t a1)
{
  int v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1)
    goto LABEL_11;
  if (qword_1F03E3868 != -1)
    swift_once();
  if (qword_1F03ED480)
  {
LABEL_11:
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v1 = qword_1F03ED488;
    v2 = swift_dynamicCastObjCProtocolConditional();
    if (!v2)
      return 0;
    v3 = (void *)v2;
    swift_unknownObjectRetain();
    sub_1DD358A14(0, v1, v3);
    v5 = v4;
    swift_unknownObjectRelease();
    if (!v5)
      return 0;
    v6 = sub_1DD63E11C();
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t _s4Home0A22KitObjectSettingsStoreC21stringValueForSetting_2onSSSgAC0I3KeyO_So06HFHomebC0_ptFZ_0(uint64_t a1)
{
  int v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
    goto LABEL_13;
  if (qword_1F03E3868 != -1)
    swift_once();
  if (qword_1F03ED480)
  {
LABEL_13:
    result = sub_1DD63E890();
    __break(1u);
  }
  else
  {
    v1 = qword_1F03ED488;
    result = swift_dynamicCastObjCProtocolConditional();
    if (result)
    {
      v3 = (void *)result;
      swift_unknownObjectRetain();
      sub_1DD358A14(0, v1, v3);
      v5 = v4;
      swift_unknownObjectRelease();
      if (v5)
      {
        sub_1DD63E11C();
        swift_bridgeObjectRelease();
        if (swift_dynamicCast())
          return v6;
        else
          return 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t _s4Home0A22KitObjectSettingsStoreC8setValue__2onSo8NAFutureCySo6NSNullCGyXlSg_AC10SettingKeyOSo06HFHomebC0_ptFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE *v8;
  _BYTE *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t result;
  int v14;
  uint64_t v15;

  if (!a2)
  {
    if (a1)
    {
      swift_unknownObjectRetain();
      if (!swift_dynamicCast())
      {
        sub_1DD4282A4();
        v7 = (void *)swift_allocError();
        *v8 = 1;
        swift_willThrow();
LABEL_13:
        v10 = (void *)sub_1DD63D69C();
        v11 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v10);

        return (uint64_t)v11;
      }
      v3 = v14;
      v2 = v15;
    }
    else
    {
      v3 = 0;
      v2 = 0;
    }
    if (qword_1F03E3868 != -1)
      swift_once();
    if (!qword_1F03ED480)
    {
      v4 = qword_1F03ED488;
      v5 = swift_dynamicCastObjCProtocolConditional();
      if (v5)
      {
        v6 = (void *)v5;
        swift_unknownObjectRetain();
        v12 = sub_1DD428C54(v3, v2, 0, v4, v6);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
      sub_1DD4282A4();
      v7 = (void *)swift_allocError();
      *v9 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  result = sub_1DD63E890();
  __break(1u);
  return result;
}

unint64_t sub_1DD429FEC()
{
  unint64_t result;

  result = qword_1F03E5A08;
  if (!qword_1F03E5A08)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HomeKitObjectSettingsStore.StorageLocation, &type metadata for HomeKitObjectSettingsStore.StorageLocation);
    atomic_store(result, (unint64_t *)&qword_1F03E5A08);
  }
  return result;
}

unint64_t sub_1DD42A034()
{
  unint64_t result;

  result = qword_1F03E5A10;
  if (!qword_1F03E5A10)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HomeKitObjectSettingsStore.Errors, &type metadata for HomeKitObjectSettingsStore.Errors);
    atomic_store(result, (unint64_t *)&qword_1F03E5A10);
  }
  return result;
}

unint64_t sub_1DD42A07C()
{
  unint64_t result;

  result = qword_1F03E5A18;
  if (!qword_1F03E5A18)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for HomeKitObjectSettingsStore.SettingKey, &type metadata for HomeKitObjectSettingsStore.SettingKey);
    atomic_store(result, (unint64_t *)&qword_1F03E5A18);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitObjectSettingsStore.StorageLocation()
{
  return &type metadata for HomeKitObjectSettingsStore.StorageLocation;
}

uint64_t getEnumTagSinglePayload for HomeKitObjectSettingsStore.Errors(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeKitObjectSettingsStore.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DD42A1AC + 4 * byte_1DD668CC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DD42A1E0 + 4 * asc_1DD668CC0[v4]))();
}

uint64_t sub_1DD42A1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD42A1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD42A1F0);
  return result;
}

uint64_t sub_1DD42A1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD42A204);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DD42A208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD42A210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1DD42A21C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HomeKitObjectSettingsStore.Errors()
{
  return &type metadata for HomeKitObjectSettingsStore.Errors;
}

uint64_t sub_1DD42A238()
{
  return swift_allocateGenericValueMetadata();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1DD42A24C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1DD42A294(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitObjectSettingsStore.SettingKey()
{
  return &type metadata for HomeKitObjectSettingsStore.SettingKey;
}

void sub_1DD42A2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DD42945C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1DD42A2F0()
{
  unint64_t result;

  result = qword_1F03E49E8;
  if (!qword_1F03E49E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03E49E8);
  }
  return result;
}

uint64_t sub_1DD42A354(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C78);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DD63D984();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1DD3540B8(a1, &qword_1F03E5C78);
    sub_1DD3F9378(a2, (uint64_t)v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return sub_1DD3540B8((uint64_t)v8, &qword_1F03E5C78);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DD3DC5AC((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
}

id sub_1DD42A4C8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *), uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id v78;
  void *v79;
  void *v80;
  void *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DD3D666C(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C68);
  sub_1DD63E1B8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD3D6800(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C70);
  sub_1DD63E1B8();
  v85 = v6;
  v8 = (uint64_t)v93;
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1DD3F504C(v9);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1DD42D1F4(v11, v10);
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1DD3F504C(v13);
  v15 = swift_bridgeObjectRetain();
  sub_1DD42D1F4(v15, v14);
  swift_bridgeObjectRelease();
  v16 = swift_bridgeObjectRetain();
  v90 = (uint64_t)v93;
  v17 = sub_1DD3F504C(v16);
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1DD42E500(v18, v17);
  swift_bridgeObjectRelease();
  if (qword_1F03E37B8 != -1)
    swift_once();
  v20 = sub_1DD63DF18();
  __swift_project_value_buffer(v20, (uint64_t)qword_1F03ED3A0);
  swift_bridgeObjectRetain_n();
  v21 = sub_1DD63DF00();
  v22 = sub_1DD63E470();
  v92 = v19;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    v93 = (void *)v83;
    *(_DWORD *)v23 = 136315394;
    v24 = sub_1DD63E95C();
    sub_1DD3C3160(v24, v25, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_1DD63D984();
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    swift_retain();
    v26 = sub_1DD63E3A4();
    v28 = v27;
    swift_release();
    sub_1DD3C3160(v26, v28, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v21, v22, "%s-diffItems: newKeys=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v83, -1, -1);
    MEMORY[0x1DF0DB358](v23, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRetain();
  v29 = sub_1DD63DF00();
  v30 = sub_1DD63E470();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v84 = swift_slowAlloc();
    v93 = (void *)v84;
    *(_DWORD *)v31 = 136315394;
    v32 = sub_1DD63E95C();
    sub_1DD3C3160(v32, v33, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    sub_1DD63D984();
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    swift_retain();
    v34 = sub_1DD63E3A4();
    v36 = v35;
    swift_release();
    sub_1DD3C3160(v34, v36, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v29, v30, "%s-diffItems: removedKeys=%s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v84, -1, -1);
    MEMORY[0x1DF0DB358](v31, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v37 = v92;
  swift_bridgeObjectRetain_n();
  v38 = sub_1DD63DF00();
  v39 = sub_1DD63E470();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v93 = (void *)v41;
    *(_DWORD *)v40 = 136315394;
    v42 = sub_1DD63E95C();
    sub_1DD3C3160(v42, v43, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_1DD63D984();
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    swift_retain();
    v44 = sub_1DD63E3A4();
    v46 = v45;
    swift_release();
    v47 = v44;
    v37 = v92;
    sub_1DD3C3160(v47, v46, (uint64_t *)&v93);
    sub_1DD63E53C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v38, v39, "%s-diffItems: existingKeys=%s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v41, -1, -1);
    MEMORY[0x1DF0DB358](v40, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5B20);
  sub_1DD63E1B8();
  v48 = v93;
  swift_bridgeObjectRetain();
  v49 = sub_1DD42FBE8(v12, a5, a6, v8);
  swift_release();
  if (v85)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v50 = sub_1DD3F6920(v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v51 = sub_1DD42FF58(v37, v90);
    swift_release();
    swift_bridgeObjectRelease_n();
    v52 = sub_1DD3F6920(v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD43085C((uint64_t)v48, v50, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v53 = sub_1DD63DF00();
    v54 = sub_1DD63E470();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v88 = swift_slowAlloc();
      v93 = (void *)v88;
      *(_DWORD *)v55 = 136315394;
      v56 = sub_1DD63E95C();
      sub_1DD3C3160(v56, v57, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      type metadata accessor for MatterAccessoryLikeItem();
      sub_1DD353504((unint64_t *)&unk_1F03E4970, (uint64_t (*)(uint64_t))type metadata accessor for MatterAccessoryLikeItem, MEMORY[0x1E0DEFCF8]);
      swift_bridgeObjectRetain();
      v58 = sub_1DD63E3A4();
      v60 = v59;
      swift_bridgeObjectRelease();
      sub_1DD3C3160(v58, v60, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v53, v54, "%s-diffItems: newItems=%s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v88, -1, -1);
      MEMORY[0x1DF0DB358](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    v61 = sub_1DD63DF00();
    v62 = sub_1DD63E470();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v93 = (void *)v64;
      *(_DWORD *)v63 = 136315394;
      v65 = sub_1DD63E95C();
      sub_1DD3C3160(v65, v66, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      type metadata accessor for MatterAccessoryLikeItem();
      sub_1DD353504((unint64_t *)&unk_1F03E4970, (uint64_t (*)(uint64_t))type metadata accessor for MatterAccessoryLikeItem, MEMORY[0x1E0DEFCF8]);
      swift_bridgeObjectRetain();
      v67 = sub_1DD63E3A4();
      v69 = v68;
      swift_bridgeObjectRelease();
      sub_1DD3C3160(v67, v69, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v61, v62, "%s-diffItems: stillExistingItems=%s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v64, -1, -1);
      MEMORY[0x1DF0DB358](v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    v70 = sub_1DD63DF00();
    v71 = sub_1DD63E470();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc();
      v91 = swift_slowAlloc();
      v93 = (void *)v91;
      *(_DWORD *)v72 = 136315394;
      v73 = sub_1DD63E95C();
      sub_1DD3C3160(v73, v74, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      type metadata accessor for MatterAccessoryLikeItem();
      sub_1DD353504((unint64_t *)&unk_1F03E4970, (uint64_t (*)(uint64_t))type metadata accessor for MatterAccessoryLikeItem, MEMORY[0x1E0DEFCF8]);
      swift_retain();
      v75 = sub_1DD63E3A4();
      v77 = v76;
      swift_release();
      sub_1DD3C3160(v75, v77, (uint64_t *)&v93);
      sub_1DD63E53C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD34E000, v70, v71, "%s-diffItems: removedItems=%s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v91, -1, -1);
      MEMORY[0x1DF0DB358](v72, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v78 = objc_allocWithZone((Class)HFItemProviderReloadResults);
    type metadata accessor for MatterAccessoryLikeItem();
    sub_1DD353504((unint64_t *)&unk_1F03E4970, (uint64_t (*)(uint64_t))type metadata accessor for MatterAccessoryLikeItem, MEMORY[0x1E0DEFCF8]);
    v79 = (void *)sub_1DD63E380();
    swift_bridgeObjectRelease();
    v80 = (void *)sub_1DD63E380();
    swift_release();
    v81 = (void *)sub_1DD63E380();
    swift_bridgeObjectRelease();
    v48 = objc_msgSend(v78, sel_initWithAddedItems_removedItems_existingItems_, v79, v80, v81);

  }
  return v48;
}

uint64_t sub_1DD42B358(uint64_t *a1, void *a2, void (*a3)(void *), uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t *v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  os_log_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v51 = a5;
  v54 = a1;
  v8 = sub_1DD63D984();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v46 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v46 - v16;
  a3(a2);
  if (qword_1F03E37B8 != -1)
    swift_once();
  v18 = sub_1DD63DF18();
  __swift_project_value_buffer(v18, (uint64_t)qword_1F03ED3A0);
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v53 = v17;
  v20 = v17;
  v21 = v19;
  v19(v15, v20, v8);
  v22 = a2;
  v23 = sub_1DD63DF00();
  v24 = sub_1DD63E470();
  v25 = v24;
  v26 = os_log_type_enabled(v23, v24);
  v52 = v21;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v50 = v5;
    v28 = v27;
    v49 = swift_slowAlloc();
    v56 = v49;
    *(_DWORD *)v28 = 136315650;
    v48 = v25;
    v29 = sub_1DD63E95C();
    v47 = v23;
    v55 = sub_1DD3C3160(v29, v30, &v56);
    v51 = v22;
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v21(v12, v15, v8);
    v31 = sub_1DD63E164();
    v55 = sub_1DD3C3160(v31, v32, &v56);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    v33 = *(void (**)(char *, uint64_t))(v9 + 8);
    v33(v15, v8);
    *(_WORD *)(v28 + 22) = 2080;
    v46 = v28 + 24;
    v34 = v51;
    v35 = objc_msgSend(v34, sel_description);
    v36 = sub_1DD63E14C();
    v38 = v37;

    v55 = sub_1DD3C3160(v36, v38, &v56);
    v22 = v51;
    sub_1DD63E53C();

    swift_bridgeObjectRelease();
    v39 = v47;
    _os_log_impl(&dword_1DD34E000, v47, (os_log_type_t)v48, "%s-diffItems: key is %s for %s", (uint8_t *)v28, 0x20u);
    v40 = v49;
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v40, -1, -1);
    MEMORY[0x1DF0DB358](v28, -1, -1);

  }
  else
  {
    v33 = *(void (**)(char *, uint64_t))(v9 + 8);
    v33(v15, v8);

  }
  v41 = v53;
  v52(v12, v53, v8);
  v42 = v22;
  v43 = v54;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = *v43;
  *v43 = 0x8000000000000000;
  sub_1DD3DC728((uint64_t)v42, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  *v43 = v56;
  swift_bridgeObjectRelease();
  v33(v12, v8);
  return ((uint64_t (*)(char *, uint64_t))v33)(v41, v8);
}

uint64_t sub_1DD42B728(uint64_t a1, char *a2, void (*a3)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v19)(char *, char *, uint64_t);
  _QWORD v20[2];

  v20[1] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C78);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v20 - v9;
  v11 = sub_1DD63D984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v20 - v16;
  a3(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1DD3540B8((uint64_t)v10, &qword_1F03E5C78);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v15, v17, v11);
  v19(v8, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  sub_1DD42A354((uint64_t)v8, (uint64_t)v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_1DD42B8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DD63D984();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1DD42B934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath;
  v4 = sub_1DD63D984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

id MatterAccessoryLikeItemProvider.__allocating_init(in:filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[qword_1F03E5AE8] = a1;
  v8 = &v7[qword_1F03E5AF0];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id MatterAccessoryLikeItemProvider.init(in:filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_super v6;

  *(_QWORD *)&v3[qword_1F03E5AE8] = a1;
  v4 = &v3[qword_1F03E5AF0];
  *(_QWORD *)v4 = a2;
  *((_QWORD *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for MatterAccessoryLikeItemProvider();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for MatterAccessoryLikeItemProvider()
{
  uint64_t result;

  result = qword_1F03E5B80;
  if (!qword_1F03E5B80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD42BA74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5B00);
  v2[14] = swift_task_alloc();
  v3 = sub_1DD63DA50();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v4 = sub_1DD63D984();
  v2[18] = v4;
  v2[19] = *(_QWORD *)(v4 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v5 = sub_1DD63DB64();
  v2[24] = v5;
  v2[25] = *(_QWORD *)(v5 - 8);
  v2[26] = swift_task_alloc();
  v6 = sub_1DD63D90C();
  v2[27] = v6;
  v2[28] = *(_QWORD *)(v6 - 8);
  v2[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD42BB98()
{
  _QWORD *v0;

  v0[30] = sub_1DD63D8E8();
  v0[31] = sub_1DD63E2E4();
  v0[32] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD42BC10()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 264) = sub_1DD63D8D0();
  return swift_task_switch();
}

uint64_t sub_1DD42BC58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD42BCB8()
{
  uint64_t *v0;
  void *v1;
  _QWORD *v2;

  v1 = (void *)v0[33];
  swift_release();
  sub_1DD63D8A0();

  v2 = (_QWORD *)swift_task_alloc();
  v0[35] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1DD42BD20;
  return sub_1DD42C51C(v0[26]);
}

uint64_t sub_1DD42BD20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD42BD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 128);
  v45 = *(_QWORD *)(v0 + 152);
  v4 = sub_1DD63DB58();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v6 = 0;
  v48 = MEMORY[0x1E0DEE9E8];
  v41 = v4 + 56;
  v43 = v4;
  v7 = -1;
  v8 = -1 << *(_BYTE *)(v4 + 32);
  if (-v8 < 64)
    v7 = ~(-1 << -(char)v8);
  v9 = v7 & *(_QWORD *)(v4 + 56);
  v42 = (unint64_t)(63 - v8) >> 6;
  while (1)
  {
    if (v9)
    {
      v46 = (v9 - 1) & v9;
      v47 = v6;
      v15 = __clz(__rbit64(v9)) | (v6 << 6);
      goto LABEL_22;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v42)
      goto LABEL_26;
    v17 = *(_QWORD *)(v41 + 8 * v16);
    v18 = v6 + 1;
    if (!v17)
    {
      v18 = v6 + 2;
      if (v6 + 2 >= v42)
        goto LABEL_26;
      v17 = *(_QWORD *)(v41 + 8 * v18);
      if (!v17)
      {
        v18 = v6 + 3;
        if (v6 + 3 >= v42)
          goto LABEL_26;
        v17 = *(_QWORD *)(v41 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v46 = (v17 - 1) & v17;
    v47 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_22:
    v21 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 144);
    v23 = *(char **)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 120);
    v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16);
    v25(v20, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v45 + 72) * v15, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v21, v20, v22);
    v26 = sub_1DD63D900();
    v27 = sub_1DD42EA54(v26);
    *(_QWORD *)(swift_task_alloc() + 16) = v21;
    sub_1DD406290((uint64_t (*)(char *))sub_1DD42ECC4, v27, v23);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v23, 1, v24) == 1)
    {
      v11 = *(_QWORD *)(v0 + 168);
      v10 = *(_QWORD *)(v0 + 176);
      v12 = *(char **)(v0 + 160);
      v13 = *(_QWORD *)(v0 + 144);
      sub_1DD3540B8(*(_QWORD *)(v0 + 112), &qword_1F03E5B00);
      v25((uint64_t)v12, v10, v13);
      sub_1DD3EA180(v11, v12);
      v14 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      v14(v11, v13);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v44 + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
      v28 = *(_QWORD *)(sub_1DD63DA44() + 16);
      swift_bridgeObjectRelease();
      if (v28)
      {
        (*(void (**)(_QWORD, _QWORD))(v44 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
        v14 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      }
      else
      {
        v29 = *(_QWORD *)(v0 + 168);
        v30 = *(char **)(v0 + 160);
        v32 = *(_QWORD *)(v0 + 136);
        v31 = *(_QWORD *)(v0 + 144);
        v33 = *(_QWORD *)(v0 + 120);
        v25((uint64_t)v30, *(_QWORD *)(v0 + 176), v31);
        sub_1DD3EA180(v29, v30);
        v14 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v14(v29, v31);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v32, v33);
      }
    }
    v9 = v46;
    v6 = v47;
    result = ((uint64_t (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 144));
  }
  v19 = v6 + 4;
  if (v6 + 4 >= v42)
  {
LABEL_26:
    v35 = *(_QWORD *)(v0 + 224);
    v34 = *(_QWORD *)(v0 + 232);
    v40 = *(_QWORD *)(v0 + 216);
    v36 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 96);
    swift_release();
    *(_QWORD *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5B10);
    *(_QWORD *)(v0 + 48) = sub_1DD42ED1C(&qword_1F03E5B18, &qword_1F03E5B10);
    *(_QWORD *)(v0 + 16) = v48;
    *(_QWORD *)(v0 + 80) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5B20);
    *(_QWORD *)(v0 + 88) = sub_1DD42ED1C(&qword_1F03E5B28, &qword_1F03E5B20);
    *(_QWORD *)(v0 + 56) = v37;
    v38 = swift_task_alloc();
    *(_QWORD *)(v38 + 16) = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5B30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = sub_1DD42A4C8((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), (uint64_t)sub_1DD42B8D4, 0, (uint64_t (*)(char *))sub_1DD42ED5C, v38);
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v40);
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v39);
  }
  v17 = *(_QWORD *)(v41 + 8 * v19);
  if (v17)
  {
    v18 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v42)
      goto LABEL_26;
    v17 = *(_QWORD *)(v41 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DD42C244(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  objc_class *v21;
  char *v22;
  char *v23;
  id v24;
  objc_super v26;
  uint64_t v27;

  v4 = sub_1DD63D984();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - v9;
  v11 = *(uint64_t (**)(uint64_t))&a2[qword_1F03E5AF0];
  if (v11 && (v11(a1) & 1) == 0)
    return 0;
  v27 = v5;
  v12 = objc_msgSend(*(id *)&a2[qword_1F03E5AE8], sel_accessories);
  sub_1DD352AB0(0, &qword_1F03E46E0);
  v13 = sub_1DD63E1F4();

  MEMORY[0x1E0C80A78](v14);
  *((_QWORD *)&v26 - 2) = a1;
  v15 = sub_1DD40627C((uint64_t (*)(id *))sub_1DD430C70, (uint64_t)(&v26 - 2), v13);
  swift_bridgeObjectRelease();
  if (!v15)
    return 0;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v16(v10, a1, v4);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  v16(v8, (uint64_t)v10, v4);
  v18 = objc_allocWithZone((Class)type metadata accessor for MatterAccessoryRepresentable());
  v19 = a2;
  v20 = (char *)sub_1DD3F34D0(v15, (uint64_t)v8);
  v21 = (objc_class *)type metadata accessor for MatterAccessoryLikeItem();
  v22 = (char *)objc_allocWithZone(v21);
  v16(&v22[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath], (uint64_t)&v20[OBJC_IVAR___HFMatterAccessoryRepresentable_tilePath], v4);
  v23 = &v22[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_currentMatterSnapshot];
  *(_QWORD *)v23 = &unk_1F03E5C88;
  *((_QWORD *)v23 + 1) = v17;
  *(_QWORD *)&v22[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_matterAccessoryRepresentable] = v20;
  *(_QWORD *)&v22[OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_actionSetBuilder] = 0;
  v26.receiver = v22;
  v26.super_class = v21;
  v24 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v4);

  return v24;
}

uint64_t sub_1DD42C4C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DED78;
  return sub_1DD42C51C(a1);
}

uint64_t sub_1DD42C51C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5CA8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD42C588()
{
  _QWORD *v0;

  v0[8] = sub_1DD63D8E8();
  v0[9] = sub_1DD63E2E4();
  v0[10] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD42C600()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 88) = sub_1DD63D8D0();
  return swift_task_switch();
}

uint64_t sub_1DD42C648()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(*(id *)(v0[5] + qword_1F03E5AE8), sel_matterControllerID);
  v2 = sub_1DD63E14C();
  v4 = v3;
  v0[2] = v2;
  v0[3] = v3;

  v0[12] = v4;
  v0[13] = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD42C6EC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();
  *(_QWORD *)(v0 + 112) = sub_1DD63D8B8();

  return swift_task_switch();
}

uint64_t sub_1DD42C738()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 112) + 16)
    && (v1 = sub_1DD3714A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 96)), (v2 & 1) != 0))
  {
    v3 = v1;
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 56);
    v6 = sub_1DD63DB64();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5 + *(_QWORD *)(v7 + 72) * v3, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 56);
    v6 = sub_1DD63DB64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v8, 1, 1, v6);
  }
  v10 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DD430D64(v9, v10);
  sub_1DD63DB64();
  v11 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    sub_1DD3540B8(*(_QWORD *)(v0 + 48), &qword_1F03E5CA8);
    *(_QWORD *)(v0 + 120) = sub_1DD63E2D8();
    sub_1DD63E284();
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 32);
    sub_1DD3540B8(*(_QWORD *)(v0 + 56), &qword_1F03E5CA8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v13, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD42C8E8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 128) = sub_1DD63D8D0();
  return swift_task_switch();
}

uint64_t sub_1DD42C930()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD42C990()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_release();
  sub_1DD63D8AC();

  return swift_task_switch();
}

uint64_t sub_1DD42C9DC()
{
  uint64_t v0;

  sub_1DD3540B8(*(_QWORD *)(v0 + 56), &qword_1F03E5CA8);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1DD42CA24(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;
  objc_super v9;
  uint64_t v10;

  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for MatterAccessoryLikeItemProvider();
  v1 = v9.receiver;
  v2 = objc_msgSendSuper2(&v9, sel_invalidationReasons);
  v3 = sub_1DD63E398();

  v10 = v3;
  v4 = sub_1DD63E14C();
  sub_1DD3EA6C0(&v8, v4, v5);

  swift_bridgeObjectRelease();
  v6 = (void *)sub_1DD63E380();
  swift_bridgeObjectRelease();
  return v6;
}

id MatterAccessoryLikeItemProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MatterAccessoryLikeItemProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1DD42CB60()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1DD42CB8C()
{
  uint64_t v0;

  sub_1DD42EE08(*(_QWORD *)(v0 + qword_1F03E5AF0));

}

id MatterAccessoryLikeItemProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatterAccessoryLikeItemProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DD42CBF0(uint64_t a1)
{
  sub_1DD42EE08(*(_QWORD *)(a1 + qword_1F03E5AF0));

}

uint64_t MatterAccessoryLikeItem.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath;
  v4 = sub_1DD63D984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DD42CC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC4Home23MatterAccessoryLikeItem_tilePath;
  v4 = sub_1DD63D984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DD42CCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;

  v2 = a2;
  v51 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    sub_1DD361D24();
    sub_1DD63E3F8();
    v3 = v46;
    v4 = v47;
    v6 = v48;
    v5 = v49;
    v7 = v50;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v41 = v3;
  v42 = v4;
  v43 = v6;
  v44 = v5;
  v45 = v7;
  v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        v12 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v15 = v14;
        goto LABEL_15;
      }
      v25 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        v14 = 0;
        v12 = 0;
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        v12 = (v27 - 1) & v27;
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
        v5 = v25;
        goto LABEL_14;
      }
      v28 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_44;
      v27 = *(_QWORD *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        v27 = *(_QWORD *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          v25 = v5 + 3;
          goto LABEL_28;
        }
        v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          v14 = 0;
          v12 = 0;
          v5 += 3;
LABEL_15:
          v44 = v5;
          v45 = v12;
          if (!v14)
            goto LABEL_53;
          goto LABEL_19;
        }
        v27 = *(_QWORD *)(v42 + 8 * v28);
        if (v27)
          goto LABEL_32;
        v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          v27 = *(_QWORD *)(v42 + 8 * v25);
          if (v27)
            goto LABEL_28;
          v25 = v26 - 1;
          v29 = v5 + 6;
          while (v26 != v29)
          {
            v27 = *(_QWORD *)(v42 + 8 * v29++);
            if (v27)
            {
              v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v14 = 0;
          v12 = 0;
          v5 = v25;
          goto LABEL_15;
        }
      }
      v14 = 0;
      v12 = 0;
      v5 = v28;
      goto LABEL_15;
    }
    v16 = sub_1DD63E614();
    if (!v16
      || (v39 = v16,
          sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1DD3DEBAC();
      return v2;
    }
LABEL_19:
    v17 = sub_1DD63E4DC();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_10;
    sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
    v21 = sub_1DD63E4E8();

    if ((v21 & 1) != 0)
      break;
    v22 = ~v18;
    while (1)
    {
      v19 = (v19 + 1) & v22;
      if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        break;
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
      v24 = sub_1DD63E4E8();

      if ((v24 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v3 = v41;
    v6 = v43;
    v5 = v44;
    v7 = v45;
  }
LABEL_47:

  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1DD42D7B0((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    v35 = v34;
    swift_release();
    sub_1DD3DEBAC();
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1DD42D7B0((unint64_t *)v36, v32, v2, v19, &v41);
    v35 = v37;
    swift_release();
    sub_1DD3DEBAC();
    MEMORY[0x1DF0DB358](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1DD42D1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C78);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63D984();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 64;
  v18 = a1;
  v19 = a1 + 64;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1DD3DEBAC();
      sub_1DD3540B8((uint64_t)v6, &qword_1F03E5C78);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    v33 = sub_1DD63E0EC();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1DD353504(&qword_1F03E40D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32390]);
    v40 = sub_1DD63E110();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1DD42DB44((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1DD3DEBAC();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1DD42DB44((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1DD3DEBAC();
    MEMORY[0x1DF0DB358](v48, -1, -1);
  }
  return v46;
}

void sub_1DD42D7B0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t i;
  unint64_t v23;
  id v24;
  char v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v36;
  void *v38;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v36 = a3 + 56;
  while (2)
  {
    v34 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          v9 = a5[3];
          v8 = a5[4];
          if (v8)
          {
            v10 = (v8 - 1) & v8;
            v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            v12 = *(void **)(*(_QWORD *)(*a5 + 48) + 8 * v11);
            v13 = v12;
            goto LABEL_8;
          }
          v26 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v27 = (unint64_t)(a5[2] + 64) >> 6;
          if (v26 >= v27)
          {
            v12 = 0;
            v10 = 0;
            goto LABEL_8;
          }
          v28 = a5[1];
          v29 = *(_QWORD *)(v28 + 8 * v26);
          if (v29)
          {
LABEL_22:
            v10 = (v29 - 1) & v29;
            v11 = __clz(__rbit64(v29)) + (v26 << 6);
            v9 = v26;
            goto LABEL_7;
          }
          v31 = v9 + 2;
          if (v9 + 2 >= v27)
            goto LABEL_41;
          v29 = *(_QWORD *)(v28 + 8 * v31);
          if (v29)
          {
LABEL_29:
            v26 = v31;
            goto LABEL_22;
          }
          if (v9 + 3 < v27)
          {
            v29 = *(_QWORD *)(v28 + 8 * (v9 + 3));
            if (v29)
            {
              v26 = v9 + 3;
              goto LABEL_22;
            }
            v31 = v9 + 4;
            if (v9 + 4 >= v27)
            {
              v12 = 0;
              v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12)
                goto LABEL_47;
              goto LABEL_12;
            }
            v29 = *(_QWORD *)(v28 + 8 * v31);
            if (v29)
              goto LABEL_29;
            v26 = v9 + 5;
            if (v9 + 5 < v27)
            {
              v29 = *(_QWORD *)(v28 + 8 * v26);
              if (v29)
                goto LABEL_22;
              v26 = v27 - 1;
              v32 = v9 + 6;
              while (v27 != v32)
              {
                v29 = *(_QWORD *)(v28 + 8 * v32++);
                if (v29)
                {
                  v26 = v32 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              v12 = 0;
              v10 = 0;
              v9 = v26;
              goto LABEL_8;
            }
          }
          v12 = 0;
          v10 = 0;
          v9 = v31;
          goto LABEL_8;
        }
        if (!sub_1DD63E614()
          || (sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v12 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_47:
          swift_retain();
          sub_1DD42DFA8(a1, a2, v34, a3, &qword_1ED378560);
          return;
        }
LABEL_12:
        v14 = sub_1DD63E4DC();
        v15 = -1 << *(_BYTE *)(a3 + 32);
        v16 = v14 & ~v15;
        v17 = v16 >> 6;
        v18 = 1 << v16;
        if (((1 << v16) & *(_QWORD *)(v36 + 8 * (v16 >> 6))) == 0)
          goto LABEL_3;
        sub_1DD352AB0(0, (unint64_t *)&qword_1ED378380);
        v19 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v16);
        v20 = sub_1DD63E4E8();

        if ((v20 & 1) != 0)
          break;
        v21 = ~v15;
        for (i = v16 + 1; ; i = v23 + 1)
        {
          v23 = i & v21;
          if (((*(_QWORD *)(v36 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0)
            break;
          v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v23);
          v25 = sub_1DD63E4E8();

          if ((v25 & 1) != 0)
          {

            v17 = v23 >> 6;
            v18 = 1 << v23;
            goto LABEL_25;
          }
        }
LABEL_3:

      }
LABEL_25:
      v30 = a1[v17];
      a1[v17] = v30 & ~v18;
    }
    while ((v18 & v30) == 0);
    v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v34 != 1)
      continue;
    break;
  }
}

uint64_t sub_1DD42DB44(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5C78);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DD63D984();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1DD3540B8((uint64_t)v11, &qword_1F03E5C78);
          v47 = v56;
          swift_retain();
          return sub_1DD42E200(v51, v49, v50, v47);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
        v33 = sub_1DD63E0EC();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_1DD353504(&qword_1F03E40D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32390]);
        v39 = sub_1DD63E110();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1DD42DF9C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DD42DFA8(a1, a2, a3, a4, &qword_1ED378560);
}

uint64_t sub_1DD42DFA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_1DD63E6A4();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_36;
    v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_36;
      v17 = v29[v12];
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_36;
        v17 = v29[v12];
        if (!v17)
          break;
      }
    }
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    result = sub_1DD63E4DC();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
      goto LABEL_36;
  }
  v18 = v16 + 3;
  if (v18 >= a2)
    goto LABEL_36;
  v17 = v29[v18];
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= a2)
      goto LABEL_36;
    v17 = v29[v12];
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DD42E200(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1DD63D984();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4630);
  result = sub_1DD63E6A4();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    result = sub_1DD63E0EC();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DD42E500(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1DD42E680((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1DD42E680((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1DF0DB358](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1DD42E680(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  BOOL v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v39 = a2;
  v41 = a1;
  v6 = sub_1DD63D984();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v39 - v12;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v39 - v14;
  v45 = a3;
  v15 = *(_QWORD *)(a3 + 64);
  v42 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v43 = (unint64_t)(v16 + 63) >> 6;
  v50 = a4;
  v48 = a4 + 56;
  result = swift_bridgeObjectRetain();
  v40 = 0;
  v20 = 0;
  v49 = v7;
  while (v18)
  {
    v46 = (v18 - 1) & v18;
    v47 = v20;
    v22 = __clz(__rbit64(v18)) | (v20 << 6);
LABEL_22:
    v27 = v44;
    v28 = *(_QWORD *)(v7 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v29(v44, *(_QWORD *)(v45 + 48) + v28 * v22, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v27, v6);
    v30 = v50;
    sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
    v31 = sub_1DD63E0EC();
    v32 = -1 << *(_BYTE *)(v30 + 32);
    v33 = v31 & ~v32;
    if (((*(_QWORD *)(v48 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
    {
      v34 = ~v32;
      while (1)
      {
        v29(v10, *(_QWORD *)(v50 + 48) + v33 * v28, v6);
        sub_1DD353504(&qword_1F03E40D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32390]);
        v35 = sub_1DD63E110();
        v21 = *(void (**)(char *, uint64_t))(v49 + 8);
        v21(v10, v6);
        if ((v35 & 1) != 0)
          break;
        v33 = (v33 + 1) & v34;
        if (((*(_QWORD *)(v48 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
          goto LABEL_6;
      }
      result = ((uint64_t (*)(char *, uint64_t))v21)(v13, v6);
      v36 = (v33 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v37 = *(unint64_t *)((char *)v41 + v36);
      *(unint64_t *)((char *)v41 + v36) = v37 | (1 << v33);
      v7 = v49;
      v18 = v46;
      v20 = v47;
      if ((v37 & (1 << v33)) == 0)
      {
        v23 = __OFADD__(v40++, 1);
        if (v23)
          goto LABEL_38;
      }
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
LABEL_6:
      result = ((uint64_t (*)(char *, uint64_t))v21)(v13, v6);
      v7 = v49;
      v18 = v46;
      v20 = v47;
    }
  }
  v23 = __OFADD__(v20, 1);
  v24 = v20 + 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v24 >= v43)
    goto LABEL_35;
  v25 = *(_QWORD *)(v42 + 8 * v24);
  if (v25)
  {
LABEL_21:
    v46 = (v25 - 1) & v25;
    v47 = v24;
    v22 = __clz(__rbit64(v25)) + (v24 << 6);
    goto LABEL_22;
  }
  v26 = v24 + 1;
  if (v24 + 1 >= v43)
    goto LABEL_35;
  v25 = *(_QWORD *)(v42 + 8 * v26);
  if (v25)
    goto LABEL_20;
  v26 = v24 + 2;
  if (v24 + 2 >= v43)
    goto LABEL_35;
  v25 = *(_QWORD *)(v42 + 8 * v26);
  if (v25)
    goto LABEL_20;
  v26 = v24 + 3;
  if (v24 + 3 >= v43)
    goto LABEL_35;
  v25 = *(_QWORD *)(v42 + 8 * v26);
  if (v25)
    goto LABEL_20;
  v26 = v24 + 4;
  if (v24 + 4 >= v43)
  {
LABEL_35:
    swift_release();
    v38 = v50;
    swift_retain();
    return sub_1DD42E200(v41, v39, v40, v38);
  }
  v25 = *(_QWORD *)(v42 + 8 * v26);
  if (v25)
  {
LABEL_20:
    v24 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v24 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v24 >= v43)
      goto LABEL_35;
    v25 = *(_QWORD *)(v42 + 8 * v24);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1DD42EA54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1DD63DA50();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v25 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  sub_1DD353504(&qword_1F03E5C90, v12, MEMORY[0x1E0D32598]);
  result = sub_1DD63E3C8();
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v26 = result;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_5;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v19)
      goto LABEL_24;
    v23 = *(_QWORD *)(v25 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_24;
      v23 = *(_QWORD *)(v25 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_24;
        v23 = *(_QWORD *)(v25 + 8 * v14);
        if (!v23)
        {
          v14 = v22 + 3;
          if (v22 + 3 >= v19)
            goto LABEL_24;
          v23 = *(_QWORD *)(v25 + 8 * v14);
          if (!v23)
          {
            v14 = v22 + 4;
            if (v22 + 4 >= v19)
              goto LABEL_24;
            v23 = *(_QWORD *)(v25 + 8 * v14);
            if (!v23)
            {
              v14 = v22 + 5;
              if (v22 + 5 >= v19)
              {
LABEL_24:
                swift_release();
                return v26;
              }
              v23 = *(_QWORD *)(v25 + 8 * v14);
              v24 = v22 + 5;
              if (!v23)
                break;
            }
          }
        }
      }
    }
LABEL_23:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_1DD42EE18((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_24;
    v23 = *(_QWORD *)(v25 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_26:
  __break(1u);
  return result;
}

BOOL sub_1DD42ECC4()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;

  v0 = sub_1DD63DA38();
  v2 = v1;
  v3 = sub_1DD63D978();
  return (v2 & 1) == 0 && v0 == v3;
}

uint64_t sub_1DD42ED1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1DF0DB2A4](MEMORY[0x1E0DEB3E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DD42ED5C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD42C244(a1, *(char **)(v1 + 16));
}

uint64_t sub_1DD42ED74()
{
  return sub_1DD353504(&qword_1F03E40D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32378], MEMORY[0x1E0D32388]);
}

uint64_t sub_1DD42EDA0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MatterAccessoryLikeItemProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MatterAccessoryLikeItemProvider.__allocating_init(in:filter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1DD42EE00()
{
  return type metadata accessor for MatterAccessoryLikeItemProvider();
}

uint64_t sub_1DD42EE08(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1DD42EE18(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1DD63DA50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1DD353504(&qword_1F03E5C90, v11, MEMORY[0x1E0D32598]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1DD63E0EC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1DD353504(&qword_1F03E5C98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32578], MEMORY[0x1E0D325A8]);
      v21 = sub_1DD63E110();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DD42F074((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1DD42F074(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1DD63DA50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 <= v10)
  {
    if ((a3 & 1) != 0)
      sub_1DD42F7E4();
    else
      sub_1DD42F4A4();
    v12 = *v3;
    sub_1DD353504(&qword_1F03E5C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32578], MEMORY[0x1E0D32598]);
    v13 = sub_1DD63E0EC();
    v14 = -1 << *(_BYTE *)(v12 + 32);
    a2 = v13 & ~v14;
    if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v15 = ~v14;
      v16 = *(_QWORD *)(v7 + 72);
      v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      do
      {
        v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
        sub_1DD353504(&qword_1F03E5C98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32578], MEMORY[0x1E0D325A8]);
        v18 = sub_1DD63E110();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((v18 & 1) != 0)
          goto LABEL_14;
        a2 = (a2 + 1) & v15;
      }
      while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
  else if ((a3 & 1) == 0)
  {
    sub_1DD42F270();
  }
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_14:
  result = sub_1DD63E89C();
  __break(1u);
  return result;
}

void *sub_1DD42F270()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1DD63DA50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5CA0);
  v6 = *v0;
  v7 = sub_1DD63E680();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_31:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v21 >= v17)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_29;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_29;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_29;
          v22 = *(_QWORD *)(v10 + 8 * v13);
          if (!v22)
          {
            v13 = v21 + 4;
            if (v21 + 4 >= v17)
            {
LABEL_29:
              result = (void *)swift_release();
              v1 = v25;
              goto LABEL_31;
            }
            v22 = *(_QWORD *)(v10 + 8 * v13);
            v23 = v21 + 4;
            if (!v22)
              break;
          }
        }
      }
    }
LABEL_28:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_28;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1DD42F4A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1DD63DA50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5CA0);
  v7 = sub_1DD63E68C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_36:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_25;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v19 >= v33)
      goto LABEL_34;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_34;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_34;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
        {
          v15 = v19 + 3;
          if (v19 + 3 >= v33)
            goto LABEL_34;
          v20 = *(_QWORD *)(v32 + 8 * v15);
          if (!v20)
          {
            v15 = v19 + 4;
            if (v19 + 4 >= v33)
            {
LABEL_34:
              result = swift_release_n();
              v1 = v31;
              goto LABEL_36;
            }
            v20 = *(_QWORD *)(v32 + 8 * v15);
            v21 = v19 + 4;
            if (!v20)
              break;
          }
        }
      }
    }
LABEL_24:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_25:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1DD353504(&qword_1F03E5C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32578], MEMORY[0x1E0D32598]);
    result = sub_1DD63E0EC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_34;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_24;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1DD42F7E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t i;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1DD63DA50();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5CA0);
  v6 = sub_1DD63E68C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_34;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_34;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_34;
            v19 = v35[v14];
            if (!v19)
            {
              v14 = v18 + 3;
              if (v18 + 3 >= v34)
                goto LABEL_34;
              v19 = v35[v14];
              if (!v19)
              {
                v14 = v18 + 4;
                if (v18 + 4 >= v34)
                {
LABEL_34:
                  swift_release();
                  v1 = v33;
                  v32 = 1 << *(_BYTE *)(v5 + 32);
                  if (v32 >= 64)
                    bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  else
                    *v35 = -1 << v32;
                  *(_QWORD *)(v5 + 16) = 0;
                  break;
                }
                v19 = v35[v14];
                for (i = v18 + 4; !v19; ++i)
                {
                  v14 = i + 1;
                  if (__OFADD__(i, 1))
                    goto LABEL_40;
                  if (v14 >= v34)
                    goto LABEL_34;
                  v19 = v35[v14];
                }
              }
            }
          }
        }
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_1DD353504(&qword_1F03E5C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D32578], MEMORY[0x1E0D32598]);
      result = sub_1DD63E0EC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1DD42FB68(uint64_t *a1, void **a2)
{
  uint64_t v2;

  return sub_1DD42B358(a1, *a2, *(void (**)(void *))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1DD42FB88(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_1DD42B728(a1, a2, *(void (**)(char *))(v2 + 16));
}

void sub_1DD42FBA0(uint64_t a1, id *a2)
{
  id v2;

  sub_1DD3E9F04(&v2, *a2);

}

uint64_t sub_1DD42FBE8(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(char *);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a4;
  v39 = a2;
  v40 = a3;
  v5 = sub_1DD63D984();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v36 - v11;
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v36 - v13;
  v46 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 56);
  v37 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v43 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v21 = (v17 - 1) & v17;
      v22 = v20 | (v19 << 6);
    }
    else
    {
      if (__OFADD__(v19++, 1))
        goto LABEL_34;
      if (v19 >= v38)
      {
LABEL_31:
        swift_release();
        return v46;
      }
      v24 = *(_QWORD *)(v37 + 8 * v19);
      if (!v24)
      {
        v25 = v19 + 1;
        if (v19 + 1 >= v38)
          goto LABEL_31;
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          v25 = v19 + 2;
          if (v19 + 2 >= v38)
            goto LABEL_31;
          v24 = *(_QWORD *)(v37 + 8 * v25);
          if (!v24)
          {
            v25 = v19 + 3;
            if (v19 + 3 >= v38)
              goto LABEL_31;
            v24 = *(_QWORD *)(v37 + 8 * v25);
            if (!v24)
            {
              v25 = v19 + 4;
              if (v19 + 4 >= v38)
                goto LABEL_31;
              v24 = *(_QWORD *)(v37 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  v19 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_35;
                  if (v19 >= v38)
                    goto LABEL_31;
                  v24 = *(_QWORD *)(v37 + 8 * v19);
                  ++v25;
                  if (v24)
                    goto LABEL_18;
                }
              }
            }
          }
        }
        v19 = v25;
      }
LABEL_18:
      v21 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    v28 = v41;
    v27(v41, *(_QWORD *)(v43 + 48) + v26 * v22, v5);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v12, v28, v5);
    v29 = v42;
    if (!*(_QWORD *)(v42 + 16))
      break;
    v44 = v21;
    result = sub_1DD3D96F0((uint64_t)v12);
    if ((v30 & 1) == 0)
      goto LABEL_33;
    v27(v9, *(_QWORD *)(v29 + 56) + result * v26, v5);
    v31 = v45;
    v32 = v39(v9);
    if (v31)
    {
      v35 = *(void (**)(char *, uint64_t))(v6 + 8);
      v35(v9, v5);
      v35(v12, v5);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v33 = v32;
    v45 = 0;
    v34 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34(v9, v5);
    result = ((uint64_t (*)(char *, uint64_t))v34)(v12, v5);
    v17 = v44;
    if (v33)
    {
      MEMORY[0x1DF0D9DA4](result);
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD63E224();
      sub_1DD63E254();
      result = sub_1DD63E20C();
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DD42FF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char *v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1DD63D984();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v28 = (char *)&v25 - v9;
  v30 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v27 = (unint64_t)(v11 + 63) >> 6;
  v29 = a1;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = v28;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v28, *(_QWORD *)(v29 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v8, v21, v4);
    if (!*(_QWORD *)(a2 + 16))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    result = sub_1DD3D96F0((uint64_t)v8);
    if ((v22 & 1) == 0)
      goto LABEL_29;
    v23 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * result);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    MEMORY[0x1DF0D9DA4](v24);
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DD63E224();
    sub_1DD63E254();
    result = sub_1DD63E20C();
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_30;
    if (v18 >= v27)
      goto LABEL_27;
    v19 = *(_QWORD *)(v26 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v27)
        goto LABEL_27;
      v19 = *(_QWORD *)(v26 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v27)
          goto LABEL_27;
        v19 = *(_QWORD *)(v26 + 8 * v15);
        if (!v19)
        {
          v15 = v18 + 3;
          if (v18 + 3 >= v27)
            goto LABEL_27;
          v19 = *(_QWORD *)(v26 + 8 * v15);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v27)
  {
LABEL_27:
    swift_release();
    return v30;
  }
  v19 = *(_QWORD *)(v26 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v27)
      goto LABEL_27;
    v19 = *(_QWORD *)(v26 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1DD430218(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  id v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;

  v43 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 56);
  v6 = a3 + 56;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 24);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v45 = v6;
  v46 = (unint64_t)(v9 + 63) >> 6;
  v47 = a4 & 0xC000000000000001;
  v49 = a4 + 56;
  v44 = a5 & 0xC000000000000001;
  v52 = a5 + 56;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_22;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v14 >= v46)
      goto LABEL_47;
    v15 = *(_QWORD *)(v45 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v46)
        goto LABEL_47;
      v15 = *(_QWORD *)(v45 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v46)
          goto LABEL_47;
        v15 = *(_QWORD *)(v45 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_22:
    v17 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v13);
    type metadata accessor for MatterAccessoryLikeItem();
    v50 = v13;
    if (v47)
    {
      v18 = v17;
      v19 = sub_1DD63E620();

      if ((v19 & 1) != 0)
        goto LABEL_5;
    }
    else if (*(_QWORD *)(a4 + 16))
    {
      v20 = v17;
      v21 = sub_1DD63E4DC();
      v22 = -1 << *(_BYTE *)(a4 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v49 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v23);
        v25 = sub_1DD63E4E8();

        if ((v25 & 1) != 0)
          goto LABEL_5;
        v26 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v26;
          if (((*(_QWORD *)(v49 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v27 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v23);
          v28 = sub_1DD63E4E8();

          if ((v28 & 1) != 0)
            goto LABEL_5;
        }
      }
    }
    else
    {
      v29 = v17;
    }
    if (v44)
    {
      v30 = v17;
      v31 = sub_1DD63E620();

      if ((v31 & 1) == 0)
        goto LABEL_44;
    }
    else if (*(_QWORD *)(a5 + 16)
           && (v32 = sub_1DD63E4DC(),
               v33 = -1 << *(_BYTE *)(a5 + 32),
               v34 = v32 & ~v33,
               ((*(_QWORD *)(v52 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0))
    {
      v35 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * v34);
      v36 = sub_1DD63E4E8();

      if ((v36 & 1) == 0)
      {
        v37 = ~v33;
        do
        {
          v34 = (v34 + 1) & v37;
          if (((*(_QWORD *)(v52 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
            goto LABEL_43;
          v38 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * v34);
          v39 = sub_1DD63E4E8();

        }
        while ((v39 & 1) == 0);
      }
LABEL_5:

    }
    else
    {
LABEL_43:

LABEL_44:
      *(unint64_t *)((char *)a1 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
      if (__OFADD__(v43++, 1))
      {
        __break(1u);
LABEL_47:
        swift_retain();
        sub_1DD42DFA8(a1, a2, v43, a3, &qword_1F03E4628);
        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v46)
    goto LABEL_47;
  v15 = *(_QWORD *)(v45 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v46)
      goto LABEL_47;
    v15 = *(_QWORD *)(v45 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1DD430630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD430218((_QWORD *)((char *)v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    v13 = v12;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD430218((unint64_t *)v14, v9, a1, a2, a3);
    v13 = v15;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x1DF0DB358](v14, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1DD43085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_1DD430630(a1, a2, a3);
  v5 = MEMORY[0x1E0DEE9E8];
  v41 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DD63E5B4();
  if (!sub_1DD63E614())
    goto LABEL_40;
  type metadata accessor for MatterAccessoryLikeItem();
  v39 = a2 + 56;
  v38 = a3 + 56;
  do
  {
    swift_dynamicCast();
    if ((a2 & 0xC000000000000001) != 0)
    {
      v6 = v40;
      v7 = sub_1DD63E620();

      if ((v7 & 1) != 0)
        goto LABEL_4;
    }
    else if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_1DD63E4DC();
      v9 = -1 << *(_BYTE *)(a2 + 32);
      v10 = v8 & ~v9;
      if (((*(_QWORD *)(v39 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      {
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v10);
        v12 = sub_1DD63E4E8();

        if ((v12 & 1) != 0)
          goto LABEL_4;
        v13 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v13;
          if (((*(_QWORD *)(v39 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
            break;
          v14 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v10);
          v15 = sub_1DD63E4E8();

          if ((v15 & 1) != 0)
            goto LABEL_4;
        }
      }
    }
    if ((a3 & 0xC000000000000001) != 0)
    {
      v16 = v40;
      v17 = sub_1DD63E620();

      if ((v17 & 1) != 0)
        goto LABEL_4;
    }
    else if (*(_QWORD *)(a3 + 16))
    {
      v18 = sub_1DD63E4DC();
      v19 = -1 << *(_BYTE *)(a3 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
      {
        v21 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v20);
        v22 = sub_1DD63E4E8();

        if ((v22 & 1) != 0)
        {
LABEL_4:

          continue;
        }
        v23 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v23;
          if (((*(_QWORD *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v20);
          v25 = sub_1DD63E4E8();

          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
      }
    }
    v26 = v41;
    v27 = *(_QWORD *)(v41 + 16);
    if (*(_QWORD *)(v41 + 24) <= v27)
    {
      sub_1DD3F586C(v27 + 1);
      v26 = v41;
    }
    result = sub_1DD63E4DC();
    v29 = v26 + 56;
    v30 = -1 << *(_BYTE *)(v26 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v26 + 56 + 8 * (v31 >> 6))) != 0)
    {
      v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v26 + 56 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v36 = v32 == v35;
        if (v32 == v35)
          v32 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v29 + 8 * v32);
      }
      while (v37 == -1);
      v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(_QWORD *)(v29 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    *(_QWORD *)(*(_QWORD *)(v26 + 48) + 8 * v33) = v40;
    ++*(_QWORD *)(v26 + 16);
  }
  while (sub_1DD63E614());
  v5 = v41;
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

BOOL sub_1DD430C70()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;

  v0 = sub_1DD63E458();
  v2 = v1;
  v3 = sub_1DD63D978();
  return (v2 & 1) == 0 && v0 == v3;
}

uint64_t sub_1DD430CC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DD430CEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DE5EC;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1DD3DED78;
  return sub_1DD42C51C(a1);
}

uint64_t sub_1DD430D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id HFEvent.iconDescriptor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v13;

  v1 = sub_1DD63DD68();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DD63DE34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x1E0D33128])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    v9 = sub_1DD430F38((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_1DD63E14C();
    v10 = objc_allocWithZone((Class)HFImageIconDescriptor);
    v11 = (void *)sub_1DD63E11C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v10, sel_initWithImageIdentifier_, v11);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

id sub_1DD430F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  _UNKNOWN **v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  __CFString *v50;
  id v51;
  uint64_t v52;
  void *v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __CFString *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  __CFString *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  int v68;
  __CFString **v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  __CFString **v76;
  __CFString *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  __CFString **v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  char *v90;
  int v91;
  __CFString **v92;
  char **v93;
  char *v94;
  int v95;
  __CFString *v96;
  __CFString *v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  __CFString **v104;
  char **v105;
  void (*v106)(char *, uint64_t);
  id v107;
  void *v108;
  id v109;
  void (*v111)(char *, uint64_t);
  id v112;
  void *v113;
  id v114;
  void (*v115)(char *, uint64_t);
  id v116;
  __CFString *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  __int128 v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  _QWORD *v179;

  v163 = a1;
  v126 = sub_1DD63DD38();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v124 = (char *)&v118 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1DD63DD50();
  v129 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v127 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1DD63DD74();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v130 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1DD63DD8C();
  v133 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v134 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1DD63DDC8();
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v151 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD63DDE0();
  v154 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v155 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1DD63DC6C();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v121 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1DD63DC84();
  v122 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v123 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_1DD63DCC0();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v145 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1DD63DCD8();
  v146 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v147 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_1DD63DD14();
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v160 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_1DD63DD2C();
  v165 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v156 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1DD63DDEC();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v140 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1DD63DE04();
  v141 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_1DD63DD68();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x1E0C80A78](v162);
  v164 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DD63DC9C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v118 - v23;
  v25 = sub_1DD63DC90();
  v179 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v149 = v7;
    v150 = v1;
    v27 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v148 = v25;
    v28 = v25 + v27;
    v178 = *(_QWORD *)(v19 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    v30 = *MEMORY[0x1E0D32E08];
    v177 = *MEMORY[0x1E0D32E00];
    v174 = *MEMORY[0x1E0D32E10];
    v168 = *MEMORY[0x1E0CB9AA8];
    v167 = *MEMORY[0x1E0CB9AB8];
    v173 = *MEMORY[0x1E0CB99F0];
    v31 = *MEMORY[0x1E0CB9A00];
    v171 = *MEMORY[0x1E0CB9B28];
    v172 = v31;
    v170 = *MEMORY[0x1E0CB9A28];
    v176 = *MEMORY[0x1E0CB9A80];
    v175 = xmmword_1DD667A30;
    v169 = xmmword_1DD668FD0;
    v166 = xmmword_1DD6683F0;
    v29(v24, v25 + v27, v18);
    while (1)
    {
      v29(v22, (unint64_t)v24, v18);
      v34 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v18);
      if (v34 == v30)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v175;
        *(_QWORD *)(v32 + 32) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 40) = v33;
      }
      else if (v34 == v177)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v169;
        *(_QWORD *)(v32 + 32) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 40) = v35;
        *(_QWORD *)(v32 + 48) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 56) = v36;
        *(_QWORD *)(v32 + 64) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 72) = v37;
        *(_QWORD *)(v32 + 80) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 88) = v38;
      }
      else if (v34 == v174)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v166;
        *(_QWORD *)(v32 + 32) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 40) = v39;
        *(_QWORD *)(v32 + 48) = sub_1DD63E14C();
        *(_QWORD *)(v32 + 56) = v40;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
        v32 = MEMORY[0x1E0DEE9D8];
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
      sub_1DD420528(v32);
      v28 += v178;
      if (!--v26)
        break;
      v29(v24, v28, v18);
    }
    swift_bridgeObjectRelease();
    v41 = v179;
    v7 = v149;
  }
  else
  {
    swift_bridgeObjectRelease();
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v42 = HFEvent.accessory.getter();
  v43 = &off_1EA721000;
  v44 = v164;
  v45 = v162;
  v46 = v161;
  if (v42)
  {
    v47 = v42;
    v48 = objc_msgSend(v42, sel_hf_visibleServices);

    sub_1DD4323F0();
    sub_1DD427D2C();
    v49 = sub_1DD63E398();

    swift_bridgeObjectRetain();
    v50 = (__CFString *)sub_1DD43242C(v49, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v50)
    {
      v51 = -[__CFString hf_iconDescriptor](v50, sel_hf_iconDescriptor);

      if (v51 && (objc_opt_self(), (v52 = swift_dynamicCastObjCClass()) != 0))
      {
        v53 = (void *)v52;
        swift_unknownObjectRetain();
        v50 = (__CFString *)objc_msgSend(v53, sel_packageIdentifier);
        if (!v50)
        {
          sub_1DD63E14C();
          v50 = (__CFString *)sub_1DD63E11C();
          swift_bridgeObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      else
      {
        v50 = 0;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v50 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v44, v163, v45);
  v54 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v44, v45);
  v55 = v165;
  if (v54 == *MEMORY[0x1E0D32F60])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    v56 = v156;
    v57 = v44;
    v58 = v159;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v156, v57, v159);
    v59 = CFSTR("HFCAPackageIconIdentifierContactSensor");
    v60 = v55;
    v61 = v160;
    sub_1DD63DD20();
    v62 = v157;
    v63 = v158;
    v64 = (*(uint64_t (**)(char *, uint64_t))(v157 + 88))(v61, v158);
    if (v64 != *MEMORY[0x1E0D32F00])
    {
      if (v64 == *MEMORY[0x1E0D32EF0])
      {
        v65 = HFCAPackageStateOn;
        v66 = *(void (**)(char *, uint64_t))(v165 + 8);
LABEL_37:
        v77 = v65;
        v66(v56, v58);
        goto LABEL_38;
      }
      v60 = v165;
      if (v64 != *MEMORY[0x1E0D32EF8])
      {
        v88 = *(void (**)(char *, uint64_t))(v165 + 8);
        v77 = HFCAPackageStateOff;
        v88(v56, v58);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v160, v63);
LABEL_38:
        v43 = &off_1EA721000;
        if (!v50)
          goto LABEL_109;
LABEL_73:
        v97 = v50;
LABEL_110:
        v116 = objc_allocWithZone((Class)v43[356]);
        v117 = v50;
        v114 = objc_msgSend(v116, sel_initWithPackageIdentifier_state_, v97, v77);
        swift_unknownObjectRelease();

        return v114;
      }
    }
    v65 = HFCAPackageStateOff;
    v66 = *(void (**)(char *, uint64_t))(v60 + 8);
    goto LABEL_37;
  }
  if (v54 == *MEMORY[0x1E0D32F78])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v155, v44, v7);
    v59 = CFSTR("HFCAPackageIconIdentifierDoor");
    v67 = v151;
    sub_1DD63DDD4();
    v68 = (*(uint64_t (**)(char *, uint64_t))(v152 + 88))(v67, v153);
    if (v68 == *MEMORY[0x1E0D33068])
      goto LABEL_30;
    if (v68 == *MEMORY[0x1E0D33048])
    {
      v69 = &HFCAPackageStateOn;
      goto LABEL_42;
    }
    if (v68 == *MEMORY[0x1E0D33050] || v68 == *MEMORY[0x1E0D33060] || v68 == *MEMORY[0x1E0D33058])
    {
LABEL_30:
      v69 = &HFCAPackageStateOff;
LABEL_42:
      v78 = *(void (**)(char *, uint64_t))(v154 + 8);
      v77 = *v69;
      v79 = v155;
      v80 = v7;
      goto LABEL_72;
    }
    v89 = *(void (**)(char *, uint64_t))(v154 + 8);
    v77 = HFCAPackageStateOff;
    v89(v155, v7);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v151, v153);
LABEL_52:
    if (!v50)
      goto LABEL_109;
    goto LABEL_73;
  }
  if (v54 == *MEMORY[0x1E0D32F58])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    v70 = v44;
    v71 = v144;
    (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v147, v70, v144);
    v59 = CFSTR("HFCAPackageIconIdentifierGarageDoor");
    v72 = v145;
    sub_1DD63DCCC();
    v73 = v142;
    v74 = v143;
    v75 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v72, v143);
    if (v75 == *MEMORY[0x1E0D32E88])
      goto LABEL_60;
    if (v75 == *MEMORY[0x1E0D32E60])
    {
LABEL_34:
      v76 = &HFCAPackageStateOn;
LABEL_61:
      v78 = *(void (**)(char *, uint64_t))(v146 + 8);
      v77 = *v76;
      v93 = (char **)&v175 + 1;
LABEL_62:
      v79 = *(v93 - 32);
LABEL_71:
      v80 = v71;
      goto LABEL_72;
    }
    if (v75 == *MEMORY[0x1E0D32E68])
    {
LABEL_60:
      v76 = &HFCAPackageStateOff;
      goto LABEL_61;
    }
    if (v75 == *MEMORY[0x1E0D32E78]
      || v75 == *MEMORY[0x1E0D32E70]
      || v75 == *MEMORY[0x1E0D32E80]
      || v75 == *MEMORY[0x1E0D32E58])
    {
      goto LABEL_34;
    }
    v98 = *(void (**)(char *, uint64_t))(v146 + 8);
    v77 = HFCAPackageStateOff;
    v98(v147, v71);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v145, v74);
LABEL_108:
    if (v50)
      goto LABEL_73;
    goto LABEL_109;
  }
  if (v54 == *MEMORY[0x1E0D32F80])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    v81 = v136;
    v82 = v44;
    v71 = v139;
    (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v136, v82, v139);
    v59 = CFSTR("HFCAPackageIconIdentifierDoorLock");
    v83 = v140;
    sub_1DD63DDF8();
    v84 = v137;
    v85 = v138;
    v86 = (*(uint64_t (**)(char *, uint64_t))(v137 + 88))(v83, v138);
    if (v86 != *MEMORY[0x1E0D330C0])
    {
      if (v86 == *MEMORY[0x1E0D330C8])
      {
LABEL_46:
        v87 = &HFCAPackageStateOn;
LABEL_70:
        v78 = *(void (**)(char *, uint64_t))(v141 + 8);
        v77 = *v87;
        v79 = v81;
        goto LABEL_71;
      }
      if (v86 != *MEMORY[0x1E0D330B0])
      {
        if (v86 != *MEMORY[0x1E0D330D0] && v86 != *MEMORY[0x1E0D330B8] && v86 != *MEMORY[0x1E0D330A8])
        {
          v106 = *(void (**)(char *, uint64_t))(v141 + 8);
          v77 = HFCAPackageStateOff;
          v106(v81, v71);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v140, v85);
          goto LABEL_108;
        }
        goto LABEL_46;
      }
    }
    v87 = &HFCAPackageStateOff;
    goto LABEL_70;
  }
  if (v54 == *MEMORY[0x1E0D32F70])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v134, v44, v135);
    v59 = CFSTR("HFCAPackageIconIdentifierSecuritySystem");
    v90 = v130;
    sub_1DD63DD80();
    v91 = (*(uint64_t (**)(char *, uint64_t))(v131 + 88))(v90, v132);
    if (v91 != *MEMORY[0x1E0D32FB0] && v91 != *MEMORY[0x1E0D32FC0])
    {
      if (v91 == *MEMORY[0x1E0D32FA8])
      {
LABEL_58:
        v92 = &HFCAPackageStateOn;
LABEL_92:
        v78 = *(void (**)(char *, uint64_t))(v133 + 8);
        v77 = *v92;
        v79 = v134;
        v105 = (char **)&v166 + 1;
LABEL_93:
        v80 = (uint64_t)*(v105 - 32);
LABEL_72:
        v78(v79, v80);
        if (v50)
          goto LABEL_73;
LABEL_109:
        v97 = v59;
        goto LABEL_110;
      }
      if (v91 != *MEMORY[0x1E0D32FD0])
      {
        if (v91 != *MEMORY[0x1E0D32FB8]
          && v91 != *MEMORY[0x1E0D32FC8]
          && v91 != *MEMORY[0x1E0D32FA0]
          && v91 != *MEMORY[0x1E0D32FD8])
        {
          v111 = *(void (**)(char *, uint64_t))(v133 + 8);
          v77 = HFCAPackageStateOff;
          v111(v134, v135);
          (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
          goto LABEL_52;
        }
        goto LABEL_58;
      }
    }
    v92 = &HFCAPackageStateOff;
    goto LABEL_92;
  }
  if (v54 == *MEMORY[0x1E0D32F68])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v127, v44, v128);
    v59 = CFSTR("HFCAPackageIconIdentifierSmokeSensor");
    v94 = v124;
    sub_1DD63DD44();
    v95 = (*(uint64_t (**)(char *, uint64_t))(v125 + 88))(v94, v126);
    if (v95 == *MEMORY[0x1E0D32F28] || v95 == *MEMORY[0x1E0D32F20])
    {
      v96 = HFCAPackageStateOff;
      v78 = *(void (**)(char *, uint64_t))(v129 + 8);
    }
    else
    {
      v78 = *(void (**)(char *, uint64_t))(v129 + 8);
      if (v95 != *MEMORY[0x1E0D32F30])
      {
        v77 = HFCAPackageStateOff;
        v78(v127, v128);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
        goto LABEL_52;
      }
      v96 = HFCAPackageStateOn;
    }
    v77 = v96;
    v79 = v127;
    v105 = &v160;
    goto LABEL_93;
  }
  if (v54 == *MEMORY[0x1E0D32F88])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v44, v45);
    v99 = v44;
    v71 = v120;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v123, v99, v120);
    v59 = CFSTR("HFCAPackageIconIdentifierWindowVertical");
    v100 = v121;
    sub_1DD63DC78();
    v101 = v118;
    v102 = v119;
    v103 = (*(uint64_t (**)(char *, uint64_t))(v118 + 88))(v100, v119);
    if (v103 != *MEMORY[0x1E0D32DC0])
    {
      if (v103 == *MEMORY[0x1E0D32DA0])
      {
        v104 = &HFCAPackageStateOn;
        goto LABEL_96;
      }
      if (v103 != *MEMORY[0x1E0D32DA8] && v103 != *MEMORY[0x1E0D32DB8] && v103 != *MEMORY[0x1E0D32DB0])
      {
        v115 = *(void (**)(char *, uint64_t))(v122 + 8);
        v77 = HFCAPackageStateOff;
        v115(v123, v71);
        (*(void (**)(char *, uint64_t))(v101 + 8))(v121, v102);
        goto LABEL_108;
      }
    }
    v104 = &HFCAPackageStateOff;
LABEL_96:
    v78 = *(void (**)(char *, uint64_t))(v122 + 8);
    v77 = *v104;
    v93 = &v155;
    goto LABEL_62;
  }
  v107 = HFEvent.accessory.getter();
  if (v107)
  {
    v108 = v107;
    v109 = objc_msgSend((id)objc_opt_self(), sel_iconDescriptorForAccessory_, v107);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
    return v109;
  }
  sub_1DD63E14C();
  v112 = objc_allocWithZone((Class)HFImageIconDescriptor);
  v113 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  v114 = objc_msgSend(v112, sel_initWithImageIdentifier_, v113);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
  return v114;
}

unint64_t sub_1DD4323F0()
{
  unint64_t result;

  result = qword_1F03E41C0;
  if (!qword_1F03E41C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03E41C0);
  }
  return result;
}

uint64_t sub_1DD43242C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD4323F0();
    sub_1DD427D2C();
    result = sub_1DD63E3F8();
    v2 = v32;
    v29 = v33;
    v4 = v34;
    v5 = v35;
    v6 = v36;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v28 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_1DD63E614())
        goto LABEL_49;
      sub_1DD4323F0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v37;
      swift_unknownObjectRelease();
      v13 = v5;
      v11 = v6;
      if (!v37)
        goto LABEL_47;
    }
    else
    {
      if (v6)
      {
        v11 = (v6 - 1) & v6;
        v12 = __clz(__rbit64(v6)) | (v5 << 6);
        v13 = v5;
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_51;
        if (v15 >= v28)
          goto LABEL_49;
        v16 = *(_QWORD *)(v29 + 8 * v15);
        v13 = v5 + 1;
        if (!v16)
        {
          v13 = v5 + 2;
          if (v5 + 2 >= v28)
            goto LABEL_49;
          v16 = *(_QWORD *)(v29 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 3;
            if (v5 + 3 >= v28)
              goto LABEL_49;
            v16 = *(_QWORD *)(v29 + 8 * v13);
            if (!v16)
            {
              v13 = v5 + 4;
              if (v5 + 4 >= v28)
                goto LABEL_49;
              v16 = *(_QWORD *)(v29 + 8 * v13);
              if (!v16)
              {
                v13 = v5 + 5;
                if (v5 + 5 >= v28)
                  goto LABEL_49;
                v16 = *(_QWORD *)(v29 + 8 * v13);
                if (!v16)
                {
                  v17 = v5 + 6;
                  while (v28 != v17)
                  {
                    v16 = *(_QWORD *)(v29 + 8 * v17++);
                    if (v16)
                    {
                      v13 = v17 - 1;
                      goto LABEL_30;
                    }
                  }
LABEL_49:
                  v14 = 0;
LABEL_47:
                  sub_1DD3DEBAC();
                  return (uint64_t)v14;
                }
              }
            }
          }
        }
LABEL_30:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
      if (!v14)
        goto LABEL_47;
    }
    v30 = v13;
    v18 = v2;
    v19 = objc_msgSend(v14, sel_serviceType);
    v20 = sub_1DD63E14C();
    v22 = v21;

    v23 = a2[2];
    if (v23)
    {
      if (a2[4] == v20 && a2[5] == v22 || (result = sub_1DD63E860(), (result & 1) != 0))
      {
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      if (v23 != 1)
        break;
    }
LABEL_8:

    result = swift_bridgeObjectRelease();
    v5 = v30;
    v6 = v11;
    v2 = v18;
  }
  v24 = a2 + 7;
  v25 = 1;
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (*(v24 - 1) == v20 && *v24 == v22)
      goto LABEL_46;
    result = sub_1DD63E860();
    if ((result & 1) != 0)
      goto LABEL_46;
    v24 += 2;
    ++v25;
    if (v26 == v23)
      goto LABEL_8;
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void __swiftcall HFStaticItem.init(results:)(HFStaticItem *__return_ptr retstr, Swift::OpaquePointer results)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  int64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v3 = 1 << *((_BYTE *)results._rawValue + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *((_QWORD *)results._rawValue + 8);
  v35 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v6 << 6);
    }
    else
    {
      v11 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_38;
      if (v11 >= v35)
      {
LABEL_35:
        swift_release();
        swift_bridgeObjectRelease();
        v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        sub_1DD3D8478((uint64_t)v7);
        swift_bridgeObjectRelease();
        v33 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        objc_msgSend(v32, sel_initWithResults_, v33);

        return;
      }
      v12 = *(_QWORD *)(v34 + 8 * v11);
      ++v6;
      if (!v12)
      {
        v6 = v11 + 1;
        if (v11 + 1 >= v35)
          goto LABEL_35;
        v12 = *(_QWORD *)(v34 + 8 * v6);
        if (!v12)
        {
          v6 = v11 + 2;
          if (v11 + 2 >= v35)
            goto LABEL_35;
          v12 = *(_QWORD *)(v34 + 8 * v6);
          if (!v12)
          {
            v6 = v11 + 3;
            if (v11 + 3 >= v35)
              goto LABEL_35;
            v12 = *(_QWORD *)(v34 + 8 * v6);
            if (!v12)
            {
              v13 = v11 + 4;
              if (v13 >= v35)
                goto LABEL_35;
              v12 = *(_QWORD *)(v34 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v6 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_39;
                  if (v6 >= v35)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v34 + 8 * v6);
                  ++v13;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v6 = v13;
            }
          }
        }
      }
LABEL_23:
      v5 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v6 << 6);
    }
    v14 = *(void **)(*((_QWORD *)results._rawValue + 6) + 8 * v10);
    sub_1DD3714B4(*((_QWORD *)results._rawValue + 7) + 32 * v10, (uint64_t)v40 + 8);
    *(_QWORD *)&v40[0] = v14;
    v38[0] = v40[0];
    v38[1] = v40[1];
    v39 = v41;
    sub_1DD3714B4((uint64_t)v38 + 8, (uint64_t)v36 + 8);
    sub_1DD357884((_OWORD *)((char *)v36 + 8), v37);
    v15 = sub_1DD63E14C();
    v17 = v16;
    sub_1DD3714B4((uint64_t)v37, (uint64_t)v36);
    v18 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = sub_1DD3714A8(v15, v17);
    v22 = v7[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v7[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v20 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1DD3DD088();
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1DD3DA058(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1DD3714A8(v15, v17);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_40;
      v21 = v26;
      if ((v25 & 1) != 0)
      {
LABEL_4:
        v8 = (_OWORD *)(v7[7] + 32 * v21);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
        sub_1DD357884(v36, v8);
        goto LABEL_5;
      }
    }
    v7[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(v7[6] + 16 * v21);
    *v28 = v15;
    v28[1] = v17;
    sub_1DD357884(v36, (_OWORD *)(v7[7] + 32 * v21));
    v29 = v7[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_37;
    v7[2] = v31;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    sub_1DD432BA8((uint64_t)v38);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  sub_1DD63E8A8();
  __break(1u);
}

uint64_t sub_1DD432BA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HFTileResizable.set(tileSize:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_hf_setTileSize_, a1);
}

BOOL static DashboardStaticSectionListItemType.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t DashboardStaticSectionListItemType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

Home::DashboardStaticSectionListItemType_optional __swiftcall DashboardStaticSectionListItemType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (Home::DashboardStaticSectionListItemType_optional)rawValue;
}

Home::DashboardStaticSectionListItemType_optional sub_1DD432C40(Swift::Int *a1)
{
  return DashboardStaticSectionListItemType.init(rawValue:)(*a1);
}

void sub_1DD432C48(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_1DD432C54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1DD432C68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1DD432C7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1DD432C90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1DD432D0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___HFDashboardStaticSectionListItem_uuidString);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DD432DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___HFDashboardStaticSectionListItem_uuidString);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD432E24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___HFDashboardStaticSectionListItem_uuidString);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DD432E8C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void DashboardStaticSectionListItem.sectionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType);
}

id DashboardStaticSectionListItem.__allocating_init(results:type:)(uint64_t a1, unsigned __int8 *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return DashboardStaticSectionListItem.init(results:type:)(a1, a2);
}

id DashboardStaticSectionListItem.init(results:type:)(uint64_t a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  id v10;
  objc_super v12;

  v3 = *a2;
  v2[OBJC_IVAR___HFDashboardStaticSectionListItem_sectionType] = v3;
  v4 = 0xED00006E6F697463;
  v5 = 0x655373656E656373;
  if (v3 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x80000001DD66EC10;
  }
  v6 = v3 == 0;
  if (v3)
    v7 = v5;
  else
    v7 = 0x53736172656D6163;
  if (v6)
    v4 = 0xEE006E6F69746365;
  v8 = (uint64_t *)&v2[OBJC_IVAR___HFDashboardStaticSectionListItem_uuidString];
  *v8 = v7;
  v8[1] = v4;
  v9 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for DashboardStaticSectionListItem();
  v10 = objc_msgSendSuper2(&v12, sel_initWithResults_, v9);

  return v10;
}

uint64_t type metadata accessor for DashboardStaticSectionListItem()
{
  return objc_opt_self();
}

id DashboardStaticSectionListItem.__allocating_init(results:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithResults_, v2);

  return v3;
}

void DashboardStaticSectionListItem.init(results:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DashboardStaticSectionListItem.__allocating_init(resultsBlock:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  v5 = objc_allocWithZone(v2);
  v9[4] = a1;
  v9[5] = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1DD4331D0;
  v9[3] = &block_descriptor_10;
  v6 = _Block_copy(v9);
  v7 = objc_msgSend(v5, sel_initWithResultsBlock_, v6);
  _Block_release(v6);
  swift_release();
  return v7;
}

id sub_1DD4331D0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

void DashboardStaticSectionListItem.init(resultsBlock:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DashboardStaticSectionListItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DashboardStaticSectionListItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1DD4332A0()
{
  unint64_t result;

  result = qword_1F03E5CC0;
  if (!qword_1F03E5CC0)
  {
    result = MEMORY[0x1DF0DB2A4](&protocol conformance descriptor for DashboardStaticSectionListItemType, &type metadata for DashboardStaticSectionListItemType);
    atomic_store(result, (unint64_t *)&qword_1F03E5CC0);
  }
  return result;
}

uint64_t sub_1DD4332E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___HFDashboardStaticSectionListItem_uuidString);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for DashboardStaticSectionListItemType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DashboardStaticSectionListItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DD433418 + 4 * byte_1DD668FF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DD43344C + 4 * byte_1DD668FF0[v4]))();
}

uint64_t sub_1DD43344C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD433454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD43345CLL);
  return result;
}

uint64_t sub_1DD433468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD433470);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DD433474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD43347C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DashboardStaticSectionListItemType()
{
  return &type metadata for DashboardStaticSectionListItemType;
}

uint64_t method lookup function for DashboardStaticSectionListItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DashboardStaticSectionListItem.uuidString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DashboardStaticSectionListItem.uuidString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DashboardStaticSectionListItem.uuidString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DashboardStaticSectionListItem.__allocating_init(results:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

id static HFServiceItem.serviceItem(for:valueSource:)(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_serviceItemForService_valueSource_, a1, a2);
  if (result)
    return (id)swift_dynamicCastUnknownClassUnconditional();
  return result;
}

uint64_t sub_1DD43357C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  int v26;
  char v27[40];
  _OWORD v28[2];
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1DD3E8734(0, v1, 0);
  result = sub_1DD434F1C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v39 = &v35;
  v26 = v5;
  v25 = v1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_26;
    v12 = v8;
    sub_1DD3DE980(*(_QWORD *)(a1 + 48) + 40 * v6, (uint64_t)v34);
    v13 = (uint64_t)v39;
    sub_1DD3714B4(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)v39);
    sub_1DD3DE980((uint64_t)v34, (uint64_t)v31);
    sub_1DD3714B4(v13, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_1DD3540B8((uint64_t)v34, &qword_1F03E5F78);
    sub_1DD3DE980((uint64_t)v28, (uint64_t)v27);
    swift_dynamicCast();
    v14 = sub_1DD63E11C();
    swift_bridgeObjectRelease();
    sub_1DD3714B4((uint64_t)v29 + 8, (uint64_t)v36 + 8);
    *(_QWORD *)&v36[0] = v14;
    sub_1DD3540B8((uint64_t)v28, &qword_1F03E5F78);
    v2 = v38;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1DD3E8734(0, *(_QWORD *)(v2 + 16) + 1, 1);
      v2 = v38;
    }
    v16 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    v8 = v12;
    if (v16 >= v15 >> 1)
    {
      result = sub_1DD3E8734(v15 > 1, v16 + 1, 1);
      v8 = v12;
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v16 + 1;
    v17 = v2 + 40 * v16;
    v18 = v36[0];
    v19 = v36[1];
    *(_QWORD *)(v17 + 64) = v37;
    *(_OWORD *)(v17 + 32) = v18;
    *(_OWORD *)(v17 + 48) = v19;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v20 = *(_QWORD *)(v8 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26)
      goto LABEL_29;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v8 + 8 * v22);
        if (v24)
        {
LABEL_22:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DD43389C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  int v29;
  _OWORD v30[2];
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t *v39;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1DD3E8718(0, v1, 0);
  result = sub_1DD434F1C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v39 = &v35;
  v29 = v5;
  v28 = v1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_26;
    v12 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v6);
    v13 = (uint64_t)v39;
    sub_1DD3714B4(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)v39);
    v34 = v12;
    *(_QWORD *)&v32[0] = v12;
    sub_1DD3714B4(v13, (uint64_t)v32 + 8);
    v30[0] = v32[0];
    v30[1] = v32[1];
    v31 = v33;
    v14 = v12;
    sub_1DD3540B8((uint64_t)&v34, &qword_1F03E6000);
    v15 = sub_1DD63E14C();
    v17 = v16;
    sub_1DD3714B4((uint64_t)v30 + 8, (uint64_t)v37);
    *(_QWORD *)&v36 = v15;
    *((_QWORD *)&v36 + 1) = v17;
    sub_1DD3540B8((uint64_t)v30, &qword_1F03E6000);
    v2 = v38;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1DD3E8718(0, *(_QWORD *)(v2 + 16) + 1, 1);
      v2 = v38;
    }
    v19 = *(_QWORD *)(v2 + 16);
    v18 = *(_QWORD *)(v2 + 24);
    if (v19 >= v18 >> 1)
    {
      result = sub_1DD3E8718(v18 > 1, v19 + 1, 1);
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v19 + 1;
    v20 = (_OWORD *)(v2 + 48 * v19);
    v21 = v36;
    v22 = v37[1];
    v20[3] = v37[0];
    v20[4] = v22;
    v20[2] = v21;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v23 = *(_QWORD *)(v8 + 8 * v11);
    if ((v23 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v29;
    if (*(_DWORD *)(a1 + 36) != v29)
      goto LABEL_29;
    v24 = v23 & (-2 << (v6 & 0x3F));
    if (v24)
    {
      v9 = __clz(__rbit64(v24)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v28;
    }
    else
    {
      v25 = v11 + 1;
      v26 = (unint64_t)(v9 + 63) >> 6;
      v10 = v28;
      if (v11 + 1 < v26)
      {
        v27 = *(_QWORD *)(v8 + 8 * v25);
        if (v27)
        {
LABEL_22:
          v9 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v11)
          {
            v27 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v27)
            {
              v25 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

id HFTransformItem.transformedSourceItem.getter()
{
  void *v0;

  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
  return objc_msgSend(v0, sel_sourceItem);
}

id sub_1DD433BF0()
{
  id *v0;

  sub_1DD352AB0(0, (unint64_t *)&qword_1ED3783D0);
  return objc_msgSend(*v0, sel_transformedSourceItem);
}

id ConfigurableTransformItem.sourceItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1F03E5CF8);
}

uint64_t sub_1DD433C3C()
{
  sub_1DD434FB4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD433C50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1F03E5D00);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DD433CA0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1DD433CE4()
{
  return (id)sub_1DD434FA4();
}

id ConfigurableTransformItem.__allocating_init(sourceItem:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_allocWithZone(v1);
  return ConfigurableTransformItem.init(sourceItem:)(a1, v4, v5, v6);
}

id ConfigurableTransformItem.init(sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  objc_super v9;

  v5 = *v4;
  v6 = *MEMORY[0x1E0DEEDD8];
  *(uint64_t *)((char *)v4 + qword_1F03E5D00) = MEMORY[0x1E0DEE9D8];
  *(uint64_t *)((char *)v4 + qword_1F03E5CF8) = a1;
  v7 = (objc_class *)type metadata accessor for ConfigurableTransformItem(0, *(_QWORD *)((v6 & v5) + 0x50), a3, a4);
  v9.receiver = v4;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1DD433D98(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  _QWORD v10[6];

  v2 = *(void **)&v1[qword_1F03E5CF8];
  sub_1DD433ECC(a1);
  type metadata accessor for HFItemUpdateOption(0);
  sub_1DD435004();
  v3 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_updateWithOptions_, v3);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v10[4] = sub_1DD435070;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1DD41BFD8;
  v10[3] = &block_descriptor_11;
  v6 = _Block_copy(v10);
  v7 = v1;
  swift_release();
  v8 = objc_msgSend(v4, sel_flatMap_, v6);

  _Block_release(v6);
  return v8;
}

uint64_t sub_1DD433ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  _OWORD v27[4];
  _OWORD v28[2];
  uint64_t v29;
  _QWORD v30[9];
  _OWORD v31[2];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  uint64_t v36;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5F90);
    v2 = sub_1DD63E7E8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v25 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v26 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v26 << 6);
      goto LABEL_28;
    }
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v24)
      goto LABEL_37;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    v13 = v26 + 1;
    if (!v12)
    {
      v13 = v26 + 2;
      if (v26 + 2 >= v24)
        goto LABEL_37;
      v12 = *(_QWORD *)(v25 + 8 * v13);
      if (!v12)
      {
        v13 = v26 + 3;
        if (v26 + 3 >= v24)
          goto LABEL_37;
        v12 = *(_QWORD *)(v25 + 8 * v13);
        if (!v12)
        {
          v13 = v26 + 4;
          if (v26 + 4 >= v24)
            goto LABEL_37;
          v12 = *(_QWORD *)(v25 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v26 = v13;
LABEL_28:
    sub_1DD3DE980(*(_QWORD *)(a1 + 48) + 40 * v10, (uint64_t)&v33);
    sub_1DD3714B4(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v35 + 8);
    v31[0] = v35[0];
    v31[1] = v35[1];
    v32 = v36;
    *(_OWORD *)&v30[5] = v33;
    *(_OWORD *)&v30[7] = v34;
    v28[0] = v33;
    v28[1] = v34;
    v29 = *(_QWORD *)&v35[0];
    type metadata accessor for HFItemUpdateOption(0);
    swift_dynamicCast();
    sub_1DD357884((_OWORD *)((char *)v31 + 8), &v30[1]);
    v15 = v30[0];
    sub_1DD357884(&v30[1], v27);
    sub_1DD357884(v27, v30);
    sub_1DD357884(v30, v28);
    sub_1DD63E14C();
    sub_1DD63E908();
    sub_1DD63E17C();
    v16 = sub_1DD63E938();
    result = swift_bridgeObjectRelease();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v6 + 8 * (v18 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v6 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v6 + 8 * v19);
      }
      while (v23 == -1);
      v8 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v15;
    result = (uint64_t)sub_1DD357884(v28, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v26 + 5;
  if (v26 + 5 >= v24)
  {
LABEL_37:
    swift_release();
    sub_1DD3DEBAC();
    return v2;
  }
  v12 = *(_QWORD *)(v25 + 8 * v14);
  if (v12)
  {
    v13 = v26 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v24)
      goto LABEL_37;
    v12 = *(_QWORD *)(v25 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1DD4342B0(void *a1, _QWORD *a2)
{
  id v3;
  void *v5;

  objc_msgSend(a1, sel_mutableCopy);
  sub_1DD63E56C();
  swift_unknownObjectRelease();
  sub_1DD352AB0(0, &qword_1F03E5F80);
  swift_dynamicCast();
  (*(void (**)())((*MEMORY[0x1E0DEEDD8] & *a2) + 0x90))();
  objc_msgSend(v5, sel_copy);
  sub_1DD63E56C();
  swift_unknownObjectRelease();
  sub_1DD352AB0(0, &qword_1F03E5F88);
  swift_dynamicCast();
  v3 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v5);

  return v3;
}

id sub_1DD4343E8(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;

  v2 = sub_1DD63E098();
  v3 = a1;
  v4 = sub_1DD433D98(v2);

  swift_bridgeObjectRelease();
  return v4;
}

void sub_1DD43445C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[3];

  v2 = v1;
  v4 = v1 + qword_1F03E5D00;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    v5 = objc_msgSend(a1, sel_results);
    v6 = sub_1DD63E098();

    v7 = sub_1DD43357C(v6);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E5D10);
      v8 = sub_1DD63E7E8();
    }
    else
    {
      v8 = MEMORY[0x1E0DEE9E0];
    }
    v21[0] = v8;
    sub_1DD435078(v7, 1, v21);
    swift_bridgeObjectRelease();
    v9 = v21[0];
    v10 = (uint64_t *)(v2 + qword_1F03E5D00);
    swift_beginAccess();
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = v11 + 40;
      do
      {
        v14 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v13 - 8);
        v20 = v9;
        swift_retain();
        v14(&v19, &v20);
        swift_bridgeObjectRelease();
        swift_release();
        v9 = v19;
        v13 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    v15 = sub_1DD43389C(v9);
    swift_bridgeObjectRelease();
    v16 = sub_1DD41FB3C(v15);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v16 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E40C0);
      v17 = sub_1DD63E7E8();
    }
    else
    {
      v17 = MEMORY[0x1E0DEE9E0];
    }
    v20 = v17;
    sub_1DD435350(v16, 1, &v20);
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1DD63E08C();
    swift_release();
    objc_msgSend(a1, sel_setResults_, v18);

  }
}

id ConfigurableTransformItem.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ConfigurableTransformItem.init()()
{
  sub_1DD435670();
}

void sub_1DD434710()
{
  sub_1DD435670();
}

id ConfigurableTransformItem.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ConfigurableTransformItem(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1DD434778(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

id sub_1DD4347B0()
{
  return (id)sub_1DD434FA4();
}

uint64_t sub_1DD4347D4()
{
  uint64_t v0;

  return MEMORY[0x1DF0DB400](v0 + qword_1F03E5D20);
}

id SelectableTransformItem.__allocating_init(sourceItem:selectionControllerContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_1DD43569C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v8;
}

id SelectableTransformItem.init(sourceItem:selectionControllerContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;

  v3 = sub_1DD43569C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

void sub_1DD43488C(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  void *v26;
  char v27;
  _OWORD v28[2];
  uint64_t v29;
  id v30[3];
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  sub_1DD43445C(a1);
  v3 = &v1[qword_1F03E5D20];
  if (!MEMORY[0x1DF0DB400](&v1[qword_1F03E5D20]))
    return;
  v4 = *((_QWORD *)v3 + 1);
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  v8 = v7;
  swift_unknownObjectRelease();
  if (!v6)
    return;
  v9 = swift_getObjectType();
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))(v1, v9, v8);
  v11 = objc_msgSend(v1, sel_latestResults);
  if (!v11)
  {
    v32 = 0u;
    v33 = 0u;
    goto LABEL_11;
  }
  v12 = v11;
  v13 = sub_1DD63E098();

  v14 = sub_1DD63E14C();
  if (!*(_QWORD *)(v13 + 16) || (v16 = sub_1DD3714A8(v14, v15), (v17 & 1) == 0))
  {
    v32 = 0u;
    v33 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1DD3714B4(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
  {
LABEL_11:
    sub_1DD3540B8((uint64_t)&v32, (uint64_t *)&unk_1ED3785F0);
    goto LABEL_12;
  }
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v19 = 0;
    v20 = 0;
    v18 = 0;
    goto LABEL_13;
  }
  v18 = v30[0];
  v19 = objc_msgSend(v30[0], sel_integerValue);
  v20 = 1;
LABEL_13:
  v21 = HFPrimaryStateFromBOOL(v10 & 1);
  sub_1DD63E14C();
  v30[1] = v22;
  sub_1DD63E668();
  v31 = sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
  v30[0] = (id)sub_1DD63E4D0();
  v23 = objc_msgSend(a1, sel_results);
  v24 = sub_1DD63E098();

  v29 = v24;
  if (v31)
  {
    sub_1DD357884(v30, v28);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC884(v28, (uint64_t)&v32, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1DD3DE9BC((uint64_t)&v32);
  }
  else
  {
    sub_1DD3540B8((uint64_t)v30, (uint64_t *)&unk_1ED3785F0);
    sub_1DD3F94A8((uint64_t)&v32, v28);
    sub_1DD3DE9BC((uint64_t)&v32);
    sub_1DD3540B8((uint64_t)v28, (uint64_t *)&unk_1ED3785F0);
  }
  v26 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setResults_, v26);

  if (v19 == (id)v21)
    v27 = v20;
  else
    v27 = 0;
  if ((v27 & 1) == 0)
    objc_msgSend(a1, sel_setOutcomeType_, 2);
  swift_unknownObjectRelease();

}

void SelectableTransformItem.__allocating_init(sourceItem:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SelectableTransformItem.init(sourceItem:)()
{
  sub_1DD4356F0();
}

uint64_t sub_1DD434C58()
{
  uint64_t v0;

  return sub_1DD435994(v0 + qword_1F03E5D20);
}

id SelectableTransformItem.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SelectableTransformItem(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x98), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1DD434CB4(uint64_t a1)
{
  return sub_1DD435994(a1 + qword_1F03E5D20);
}

id sub_1DD434CC4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + qword_1F03E5CF8), sel_accessoryRepresentableObject);
}

id sub_1DD434CF4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1F03E5CF8), sel_accessoryRepresentableObject);
}

id sub_1DD434D20(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + qword_1F03E5CF8), sel_homeKitObject);
}

id sub_1DD434D50()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1F03E5CF8), sel_homeKitObject);
}

uint64_t static AccessoryRepresentableSelectableTransformItem.withAccessoryRepresentableObject(_:valueSource:)()
{
  return 0;
}

id sub_1DD434D84()
{
  return 0;
}

id AccessoryRepresentableSelectableTransformItem.__allocating_init(sourceItem:selectionControllerContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v6;
  id v7;
  objc_super v9;

  v6 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v6[qword_1F03E5D20 + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = a3;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v6[qword_1F03E5D00] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[qword_1F03E5CF8] = a1;
  v9.receiver = v6;
  v9.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(qword_1F03E5D28);
  v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_unknownObjectRelease();
  return v7;
}

id AccessoryRepresentableSelectableTransformItem.init(sourceItem:selectionControllerContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  id v5;
  objc_super v7;

  *(_QWORD *)&v3[qword_1F03E5D20 + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = a3;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v3[qword_1F03E5D00] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[qword_1F03E5CF8] = a1;
  v7.receiver = v3;
  v7.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(qword_1F03E5D28);
  v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_unknownObjectRelease();
  return v5;
}

id AccessoryRepresentableSelectableTransformItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessoryRepresentableSelectableTransformItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD434F1C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1DD434FA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1F03E5CF8);
}

uint64_t sub_1DD434FB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1F03E5D00;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t type metadata accessor for ConfigurableTransformItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConfigurableTransformItem);
}

unint64_t sub_1DD435004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03E3B30;
  if (!qword_1F03E3B30)
  {
    type metadata accessor for HFItemUpdateOption(255);
    result = MEMORY[0x1DF0DB2A4](&unk_1DD667908, v1);
    atomic_store(result, (unint64_t *)&qword_1F03E3B30);
  }
  return result;
}

uint64_t sub_1DD43504C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DD435070(void *a1)
{
  uint64_t v1;

  return sub_1DD4342B0(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1DD435078(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t i;
  _QWORD *v25;
  _OWORD *v26;
  void *v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];
  void *v42;
  _OWORD v43[2];
  uint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result + 32;
    v44 = result;
    swift_bridgeObjectRetain();
    sub_1DD3DEBB4(v6, (uint64_t)&v42, &qword_1F03E5F70);
    v7 = v42;
    sub_1DD357884(v43, v41);
    v8 = (_QWORD *)*a3;
    v10 = sub_1DD3D94F4((uint64_t)v7);
    v11 = v8[2];
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v14 = v9;
    if (v8[3] < v13)
    {
      sub_1DD3D9D20(v13, a2 & 1);
      v15 = sub_1DD3D94F4((uint64_t)v7);
      if ((v14 & 1) != (v16 & 1))
      {
LABEL_28:
        type metadata accessor for HFItemResultKey(0);
        result = sub_1DD63E8A8();
        __break(1u);
        return result;
      }
      v10 = v15;
      if ((v14 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v17 = (_QWORD *)*a3;
      sub_1DD357884(v41, v40);

      v18 = (_OWORD *)(v17[7] + 32 * v10);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      sub_1DD357884(v40, v18);
      v19 = v3 - 1;
      if (!v19)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = v44 + 72; ; i += 40)
      {
        sub_1DD3DEBB4(i, (uint64_t)&v42, &qword_1F03E5F70);
        v27 = v42;
        sub_1DD357884(v43, v41);
        v28 = (_QWORD *)*a3;
        v30 = sub_1DD3D94F4((uint64_t)v27);
        v31 = v28[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          break;
        v34 = v29;
        if (v28[3] < v33)
        {
          sub_1DD3D9D20(v33, 1);
          v35 = sub_1DD3D94F4((uint64_t)v27);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_28;
          v30 = v35;
        }
        if ((v34 & 1) != 0)
        {
          v25 = (_QWORD *)*a3;
          sub_1DD357884(v41, v40);

          v26 = (_OWORD *)(v25[7] + 32 * v30);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
          sub_1DD357884(v40, v26);
        }
        else
        {
          v37 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
          *(_QWORD *)(v37[6] + 8 * v30) = v27;
          sub_1DD357884(v41, (_OWORD *)(v37[7] + 32 * v30));
          v38 = v37[2];
          v22 = __OFADD__(v38, 1);
          v39 = v38 + 1;
          if (v22)
            goto LABEL_27;
          v37[2] = v39;
        }
        if (!--v19)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_26;
    }
    if ((a2 & 1) != 0)
    {
      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1DD3DCEC4();
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(_QWORD *)(v20[6] + 8 * v10) = v7;
    sub_1DD357884(v41, (_OWORD *)(v20[7] + 32 * v10));
    v21 = v20[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v20[2] = v23;
    v19 = v3 - 1;
    if (!v19)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1DD435350(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t i;
  _OWORD *v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v50[2];
  uint64_t v51;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result + 32;
    v51 = result;
    swift_bridgeObjectRetain();
    sub_1DD3DEBB4(v6, (uint64_t)&v47, (uint64_t *)&unk_1F03E5600);
    v44 = v47;
    v45 = v48;
    v46 = v49;
    sub_1DD357884(v50, v43);
    v7 = *a3;
    v9 = sub_1DD3D9460((uint64_t)&v44);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = (v8 & 1) == 0;
    v12 = v10 + v11;
    if (__OFADD__(v10, v11))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v13 = v8;
    if (*(_QWORD *)(v7 + 24) < v12)
    {
      sub_1DD3DB994(v12, a2 & 1);
      v14 = sub_1DD3D9460((uint64_t)&v44);
      if ((v13 & 1) != (v15 & 1))
      {
LABEL_28:
        result = sub_1DD63E8A8();
        __break(1u);
        return result;
      }
      v9 = v14;
      if ((v13 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      sub_1DD357884(v43, v42);
      sub_1DD3DE9BC((uint64_t)&v44);
      v16 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + 32 * v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      sub_1DD357884(v42, v16);
      v17 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = v51 + 104; ; i += 72)
      {
        sub_1DD3DEBB4(i, (uint64_t)&v47, (uint64_t *)&unk_1F03E5600);
        v44 = v47;
        v45 = v48;
        v46 = v49;
        sub_1DD357884(v50, v43);
        v27 = *a3;
        v29 = sub_1DD3D9460((uint64_t)&v44);
        v30 = *(_QWORD *)(v27 + 16);
        v31 = (v28 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
          break;
        v33 = v28;
        if (*(_QWORD *)(v27 + 24) < v32)
        {
          sub_1DD3DB994(v32, 1);
          v34 = sub_1DD3D9460((uint64_t)&v44);
          if ((v33 & 1) != (v35 & 1))
            goto LABEL_28;
          v29 = v34;
        }
        if ((v33 & 1) != 0)
        {
          sub_1DD357884(v43, v42);
          sub_1DD3DE9BC((uint64_t)&v44);
          v26 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + 32 * v29);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
          sub_1DD357884(v42, v26);
        }
        else
        {
          v36 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v29 >> 6) + 64) |= 1 << v29;
          v37 = v36[6] + 40 * v29;
          v38 = v44;
          v39 = v45;
          *(_QWORD *)(v37 + 32) = v46;
          *(_OWORD *)v37 = v38;
          *(_OWORD *)(v37 + 16) = v39;
          sub_1DD357884(v43, (_OWORD *)(v36[7] + 32 * v29));
          v40 = v36[2];
          v23 = __OFADD__(v40, 1);
          v41 = v40 + 1;
          if (v23)
            goto LABEL_27;
          v36[2] = v41;
        }
        if (!--v17)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_26;
    }
    if ((a2 & 1) != 0)
    {
      if ((v8 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1DD3DE04C();
      if ((v13 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    v19 = v18[6] + 40 * v9;
    v20 = v44;
    v21 = v45;
    *(_QWORD *)(v19 + 32) = v46;
    *(_OWORD *)v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    sub_1DD357884(v43, (_OWORD *)(v18[7] + 32 * v9));
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v18[2] = v24;
    v17 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

void sub_1DD435670()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1DD43569C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + qword_1F03E5D20 + 8) = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = a3;
  swift_unknownObjectWeakAssign();
  return ConfigurableTransformItem.init(sourceItem:)(a1, v5, v6, v7);
}

void sub_1DD4356F0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SelectableTransformItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelectableTransformItem);
}

uint64_t type metadata accessor for AccessoryRepresentableSelectableTransformItem()
{
  uint64_t result;

  result = qword_1F03E5E58;
  if (!qword_1F03E5E58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD435764@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1DD434FB4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD43578C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1DD433C50(v0);
}

uint64_t sub_1DD4357B4()
{
  return 8;
}

_QWORD *sub_1DD4357C0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of TransformItem.transformedSourceItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DD4357D4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ConfigurableTransformItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfigurableTransformItem.transforms.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConfigurableTransformItem.transforms.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ConfigurableTransformItem.transforms.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ConfigurableTransformItem.transformedSourceItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConfigurableTransformItem.__allocating_init(sourceItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ConfigurableTransformItem.transform(outcome:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1DD4358C0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SelectableTransformItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SelectableTransformItem.__allocating_init(sourceItem:selectionControllerContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1DD435914()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccessoryRepresentableSelectableTransformItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectableTransformItem.accessoryRepresentableObject.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccessoryRepresentableSelectableTransformItem.homeKitObject.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t sub_1DD43598C()
{
  return type metadata accessor for AccessoryRepresentableSelectableTransformItem();
}

uint64_t sub_1DD435994(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

id static NAFutureHelper.future<A>(priority:descriptor:with:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3785B0);
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (a3)
    a3 = (void *)sub_1DD63E11C();
  objc_msgSend(v14, sel_setDescriptor_, a3);

  sub_1DD424988(a1, (uint64_t)v13);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a6;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = v14;
  swift_retain();
  v16 = v14;
  sub_1DD3D883C((uint64_t)v13, (uint64_t)&unk_1F03E5FA8, (uint64_t)v15);
  swift_release();
  return v16;
}

id static NAFutureHelper.future(priority:descriptor:with:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  id v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a5;
  swift_retain();
  v11 = sub_1DD3EF118(a1, a2, a3, (uint64_t)&unk_1F03E4810, v10);
  swift_release();
  return v11;
}

id NAFuture.asGeneric()()
{
  objc_opt_self();
  return (id)swift_dynamicCastObjCClassUnconditional();
}

id sub_1DD435BAC()
{
  return NAFuture.asGeneric()();
}

uint64_t static NAFutureHelper.continuation<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1DD435BE4()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_1DD435C84;
  return sub_1DD63E884();
}

uint64_t sub_1DD435C84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD435CF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DD435CFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DD435D30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  v6 = sub_1DD63E2B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - v8, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, v9, v6);
  aBlock[4] = sub_1DD436E80;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD435F68;
  aBlock[3] = &block_descriptor_12;
  v12 = _Block_copy(aBlock);
  swift_release();
  v13 = objc_msgSend(a2, sel_addCompletionBlock_, v12);
  _Block_release(v12);

}

id sub_1DD435E90(uint64_t a1, id a2)
{
  id v2;
  id result;

  if (a2)
  {
    v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
    sub_1DD63E2B4();
    return (id)sub_1DD63E29C();
  }
  if (a1)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
    sub_1DD63E2B4();
    return (id)sub_1DD63E2A8();
  }
  else
  {
    result = objc_msgSend((id)objc_opt_self(), sel_na_genericError);
    if (result)
      goto LABEL_3;
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD435F68(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1DD435FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1DD435FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_1DD4360AC;
  return sub_1DD63E86C();
}

uint64_t sub_1DD4360AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DD436108()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD43613C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1DD3DED78;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1DD4361B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = sub_1DD63E2C0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD43621C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_1DD63E368();
  v3 = (uint64_t (*)(void))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1DD43638C;
  return v3();
}

uint64_t sub_1DD43638C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4363F8()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  void (**v3)(id, uint64_t, _QWORD);

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_isCancelled);
  v2 = *(_QWORD *)(v0 + 80);
  if ((v1 & 1) == 0)
  {
    v3 = (void (**)(id, uint64_t, _QWORD))objc_msgSend(*(id *)(v0 + 40), sel_completionHandlerAdapter);
    v3[2](v3, v2, 0);
    _Block_release(v3);
  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id static NAFutureHelper.futureOnMainActor<A>(priority:descriptor:with:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v10;
  _QWORD *v11;
  id v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3785B0);
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (a3)
    a3 = (void *)sub_1DD63E11C();
  objc_msgSend(v10, sel_setDescriptor_, a3);

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a6;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = v10;
  swift_retain();
  v12 = v10;
  sub_1DD63E344();
  swift_release();
  return v12;
}

uint64_t sub_1DD436570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = sub_1DD63E2E4();
  v5[8] = sub_1DD63E2D8();
  v5[9] = sub_1DD63E284();
  v5[10] = v6;
  return swift_task_switch();
}

uint64_t sub_1DD4365E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v0 + 104) = sub_1DD63E2D8();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v6;
  *v6 = v0;
  v6[1] = sub_1DD4366C0;
  return sub_1DD63E86C();
}

uint64_t sub_1DD4366C0()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD436730()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD436760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = sub_1DD63E2C0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_1DD63E2E4();
  v4[9] = sub_1DD63E2D8();
  v4[10] = sub_1DD63E284();
  v4[11] = v6;
  return swift_task_switch();
}

uint64_t sub_1DD4367F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_1DD63E368();
  v3 = (uint64_t (*)(void))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1DD436970;
  return v3();
}

uint64_t sub_1DD436970(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4369D8()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  void (**v4)(id, uint64_t, _QWORD);

  v1 = *(void **)(v0 + 40);
  swift_release();
  v2 = objc_msgSend(v1, sel_isCancelled);
  v3 = *(_QWORD *)(v0 + 104);
  if ((v2 & 1) == 0)
  {
    v4 = (void (**)(id, uint64_t, _QWORD))objc_msgSend(*(id *)(v0 + 40), sel_completionHandlerAdapter);
    v4[2](v4, v3, 0);
    _Block_release(v4);
  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD436A6C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void (**v8)(id, _QWORD, void *);
  id v9;
  void *v10;

  swift_release();
  v1 = *(void **)(v0 + 112);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = *(void **)(v0 + 16);
  }
  else
  {
    v7 = *(void **)(v0 + 40);

    if ((objc_msgSend(v7, sel_isCancelled) & 1) == 0)
    {
      v8 = (void (**)(id, _QWORD, void *))objc_msgSend(*(id *)(v0 + 40), sel_completionHandlerAdapter);
      v9 = v1;
      v10 = (void *)sub_1DD63D69C();
      v8[2](v8, 0, v10);

      _Block_release(v8);
    }
    v6 = v1;
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD436B9C(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1DD436BF4;
  return v4();
}

uint64_t sub_1DD436BF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1DD436C60()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 8))(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init));
}

uint64_t sub_1DD436CA4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DD436CC8(uint64_t a1)
{
  uint64_t v1;

  sub_1DD435D30(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DD436CD0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD436CFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DD3DE5EC;
  return sub_1DD436570(a1, v5, v7, v6, v4);
}

ValueMetadata *type metadata accessor for NAFutureHelper()
{
  return &type metadata for NAFutureHelper;
}

uint64_t sub_1DD436D84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DE5EC;
  return sub_1DD436760(a1, v4, v6, v5);
}

uint64_t sub_1DD436E00()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  v1 = sub_1DD63E2B4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_1DD436E80(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED378600);
  sub_1DD63E2B4();
  return sub_1DD435E90(a1, a2);
}

uint64_t sub_1DD436EF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DD3DED78;
  return sub_1DD4361B8(a1, v4, v6, v5);
}

id sub_1DD436F68()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + 24);
  result = objc_msgSend(v1, sel_isCancelled);
  if ((result & 1) == 0)
    return objc_msgSend(v1, sel_cancel);
  return result;
}

uint64_t ActivityEventStatusItem.activityLogCoordinator.getter()
{
  return swift_retain();
}

id ActivityEventStatusItem.__allocating_init(home:room:valueSource:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v6;

  v6 = objc_msgSend(objc_allocWithZone(v3), sel_initWithHome_room_valueSource_, a1, a2, a3);

  swift_unknownObjectRelease();
  return v6;
}

id ActivityEventStatusItem.init(home:room:valueSource:)(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = sub_1DD43B530(a1, (uint64_t)a2, a3);

  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1DD437104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  __CFString *v13;
  unint64_t v14;
  char v15;
  __CFString *v16;
  unsigned __int8 v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  unsigned int v26;
  id v27;
  unsigned int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  id v36;
  id v37;
  char *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  id v43;
  unsigned int v44;
  id v45;
  unsigned int v46;
  id v47;
  unsigned int v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t inited;
  uint64_t v55;
  __CFString *v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  _OWORD *v67;
  unint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  SEL *v78;
  char isUniquelyReferenced_nonNull_native;
  SEL *v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  uint64_t result;
  unint64_t v95;
  int64_t v96;
  uint64_t *ObjectType;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  _QWORD *v102;
  _OWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  __CFString *v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _OWORD v111[2];
  uint64_t v112;

  v2 = v1;
  ObjectType = (uint64_t *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v95 - v8;
  v10 = sub_1DD63DF18();
  v99 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v101 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    __break(1u);
LABEL_63:
    result = sub_1DD63E8A8();
    __break(1u);
    return result;
  }
  v12 = HFItemUpdateOptionFastInitialUpdate;
  v106 = HFItemUpdateOptionFastInitialUpdate;
  type metadata accessor for HFItemUpdateOption(0);
  sub_1DD435004();
  v13 = v12;
  sub_1DD63E668();
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_1DD3D9460((uint64_t)v111), (v15 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v108);
  }
  else
  {
    v109 = 0u;
    v108 = 0u;
  }
  sub_1DD3DE9BC((uint64_t)v111);
  v98 = (char *)v10;
  if (*((_QWORD *)&v109 + 1))
  {
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v16 = v106;
      v17 = -[__CFString BOOLValue](v106, sel_BOOLValue);

      goto LABEL_11;
    }
  }
  else
  {
    sub_1DD3540B8((uint64_t)&v108, (uint64_t *)&unk_1ED3785F0);
  }
  v17 = 0;
LABEL_11:
  v18 = (uint64_t)&selRef_hf_fakeNetworkStrengthError;
  v19 = objc_msgSend((id)v2, sel_home);
  v20 = objc_msgSend((id)v2, sel_home);
  v21 = objc_msgSend(v20, sel_currentUser);

  v22 = objc_msgSend(v19, sel_homeAccessControlForUser_, v21);
  LODWORD(v100) = objc_msgSend(v22, sel_isRemoteAccessAllowed);

  v23 = objc_msgSend((id)v2, sel_home);
  v24 = objc_msgSend(v23, sel_homeLocationStatus);

  v25 = objc_msgSend((id)v2, sel_home);
  v26 = objc_msgSend(v25, sel_activityLogAvailable);

  if (v26)
  {
    v27 = objc_msgSend((id)v2, sel_home);
    v28 = objc_msgSend(v27, sel_isEventLogEnabled);

    v29 = v100;
    if (v24 == (id)1)
      v29 = 1;
    if (v28 && (v29 & 1) != 0)
    {
      v30 = sub_1DD63E2FC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
      v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v32 = swift_allocObject();
      *(_BYTE *)(v32 + 16) = v17;
      v33 = (uint64_t)ObjectType;
      *(_QWORD *)(v32 + 24) = v31;
      *(_QWORD *)(v32 + 32) = v33;
      v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D519C0]), sel_init);
      objc_msgSend(v34, sel_setDescriptor_, 0);
      sub_1DD424988((uint64_t)v9, (uint64_t)v7);
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = 0;
      v35[3] = 0;
      v35[4] = &unk_1F03E6010;
      v35[5] = v32;
      v35[6] = v34;
      swift_retain();
      v36 = v34;
      sub_1DD3D883C((uint64_t)v7, (uint64_t)&unk_1F03E4050, (uint64_t)v35);
      swift_release();
      swift_release();
      sub_1DD3540B8((uint64_t)v9, &qword_1ED378350);
      return (uint64_t)v36;
    }
  }
  if (qword_1F03E3810 != -1)
LABEL_61:
    swift_once();
  v37 = (id)qword_1F03ED460;
  v38 = v101;
  sub_1DD63DF24();
  v39 = (id)v2;
  v40 = sub_1DD63DF00();
  v41 = sub_1DD63E488();
  v2 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    ObjectType = (uint64_t *)swift_slowAlloc();
    *(_QWORD *)&v111[0] = ObjectType;
    *(_DWORD *)v42 = 67110146;
    v43 = objc_msgSend(v39, *(SEL *)(v18 + 3880));
    v44 = objc_msgSend(v43, sel_activityLogAvailable);

    LODWORD(v108) = v44;
    sub_1DD63E53C();

    *(_WORD *)(v42 + 8) = 1024;
    v45 = objc_msgSend(v39, *(SEL *)(v18 + 3880));
    v46 = objc_msgSend(v45, sel_isEventLogEnabled);

    LODWORD(v108) = v46;
    sub_1DD63E53C();

    *(_WORD *)(v42 + 14) = 1024;
    LODWORD(v108) = v100;
    sub_1DD63E53C();
    *(_WORD *)(v42 + 20) = 1024;
    v47 = objc_msgSend(v39, *(SEL *)(v18 + 3880));
    v48 = objc_msgSend(v47, sel_userSupportsActivityLog);

    LODWORD(v108) = v48;
    sub_1DD63E53C();

    *(_WORD *)(v42 + 26) = 2080;
    v49 = objc_msgSend(v39, *(SEL *)(v18 + 3880));
    v50 = objc_msgSend(v49, sel_homeLocationStatus);

    *(_QWORD *)&v108 = v50;
    type metadata accessor for HMHomeLocation(0);
    v51 = sub_1DD63E164();
    *(_QWORD *)&v108 = sub_1DD3C3160(v51, v52, (uint64_t *)v111);
    sub_1DD63E53C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v40, (os_log_type_t)v2, "Hiding activity status, available %{BOOL}d enabled %{BOOL}d remoteAccess %{BOOL}d. userSupportsActivityLog = %{BOOL}d. atHome %s", (uint8_t *)v42, 0x24u);
    v53 = (uint64_t)ObjectType;
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v53, -1, -1);
    MEMORY[0x1DF0DB358](v42, -1, -1);

    (*(void (**)(char *, char *))(v99 + 8))(v101, v98);
  }
  else
  {

    (*(void (**)(char *, char *))(v99 + 8))(v38, v98);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4620);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD667A30;
  *(_QWORD *)(inited + 32) = CFSTR("hidden");
  v55 = sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
  v56 = CFSTR("hidden");
  v18 = 1;
  v57 = sub_1DD63E4C4();
  *(_QWORD *)(inited + 64) = v55;
  *(_QWORD *)(inited + 40) = v57;
  v58 = sub_1DD3D6250(inited);
  v59 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v60 = *(_QWORD *)(v58 + 64);
  v95 = v58 + 64;
  v61 = 1 << *(_BYTE *)(v58 + 32);
  v62 = -1;
  if (v61 < 64)
    v62 = ~(-1 << v61);
  v63 = v62 & v60;
  v64 = &v107;
  v98 = (char *)&v108 + 8;
  v99 = (uint64_t)v111 + 8;
  v96 = (unint64_t)(v61 + 63) >> 6;
  ObjectType = &v105;
  v100 = v58;
  swift_bridgeObjectRetain();
  v65 = 0;
  v66 = (uint64_t)v98;
  while (1)
  {
    if (v63)
    {
      v68 = __clz(__rbit64(v63));
      v63 &= v63 - 1;
      v101 = v65;
      v69 = v68 | ((_QWORD)v65 << 6);
      goto LABEL_44;
    }
    v70 = (int64_t)(v65 + 1);
    if (__OFADD__(v65, 1))
      goto LABEL_59;
    if (v70 >= v96)
      goto LABEL_55;
    v71 = *(_QWORD *)(v95 + 8 * v70);
    v72 = (int64_t)(v65 + 1);
    if (!v71)
    {
      v72 = (int64_t)(v65 + 2);
      if ((uint64_t)(v65 + 2) >= v96)
        goto LABEL_55;
      v71 = *(_QWORD *)(v95 + 8 * v72);
      if (!v71)
      {
        v72 = (int64_t)(v65 + 3);
        if ((uint64_t)(v65 + 3) >= v96)
          goto LABEL_55;
        v71 = *(_QWORD *)(v95 + 8 * v72);
        if (!v71)
        {
          v72 = (int64_t)(v65 + 4);
          if ((uint64_t)(v65 + 4) >= v96)
            goto LABEL_55;
          v71 = *(_QWORD *)(v95 + 8 * v72);
          if (!v71)
            break;
        }
      }
    }
LABEL_43:
    v63 = (v71 - 1) & v71;
    v101 = (char *)v72;
    v69 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_44:
    v18 = *(_QWORD *)(*(_QWORD *)(v100 + 48) + 8 * v69);
    sub_1DD3714B4(*(_QWORD *)(v100 + 56) + 32 * v69, v99);
    *(_QWORD *)&v111[0] = v18;
    v108 = v111[0];
    v109 = v111[1];
    v110 = v112;
    v106 = (__CFString *)v18;
    v2 = (uint64_t)v64;
    sub_1DD3714B4(v66, (uint64_t)v64);
    v74 = sub_1DD63E14C();
    v76 = v75;
    v104 = v18;
    v77 = ObjectType;
    sub_1DD3714B4(v66, (uint64_t)ObjectType);
    sub_1DD357884(v77, v103);
    v78 = (SEL *)(id)v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v102 = v59;
    v81 = sub_1DD3714A8(v74, v76);
    v82 = v59[2];
    v83 = (v80 & 1) == 0;
    v84 = v82 + v83;
    if (__OFADD__(v82, v83))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v18 = (uint64_t)v80;
    if (v59[3] >= v84)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v59 = v102;
        if ((v80 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        sub_1DD3DD088();
        v59 = v102;
        if ((v18 & 1) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_1DD3DA058(v84, isUniquelyReferenced_nonNull_native);
      v85 = sub_1DD3714A8(v74, v76);
      if ((v18 & 1) != (v86 & 1))
        goto LABEL_63;
      v81 = v85;
      v59 = v102;
      if ((v18 & 1) != 0)
      {
LABEL_24:
        v67 = (_OWORD *)(v59[7] + 32 * v81);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
        sub_1DD357884(v103, v67);
        goto LABEL_25;
      }
    }
    v59[(v81 >> 6) + 8] |= 1 << v81;
    v87 = (uint64_t *)(v59[6] + 16 * v81);
    *v87 = v74;
    v87[1] = v76;
    sub_1DD357884(v103, (_OWORD *)(v59[7] + 32 * v81));
    v88 = v59[2];
    v89 = __OFADD__(v88, 1);
    v90 = v88 + 1;
    if (v89)
      goto LABEL_58;
    v59[2] = v90;
    swift_bridgeObjectRetain();
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 = (uint64_t *)v2;
    __swift_destroy_boxed_opaque_existential_0(v2);
    sub_1DD3540B8((uint64_t)&v108, &qword_1F03E6000);
    v65 = v101;
  }
  v73 = v65 + 5;
  if ((uint64_t)(v65 + 5) < v96)
  {
    v71 = *(_QWORD *)(v95 + 8 * (_QWORD)v73);
    if (!v71)
    {
      while (1)
      {
        v72 = (int64_t)(v73 + 1);
        if (__OFADD__(v73, 1))
          goto LABEL_60;
        if (v72 >= v96)
          goto LABEL_55;
        v71 = *(_QWORD *)(v95 + 8 * v72);
        ++v73;
        if (v71)
          goto LABEL_43;
      }
    }
    v72 = (int64_t)(v65 + 5);
    goto LABEL_43;
  }
LABEL_55:
  swift_release();
  swift_bridgeObjectRelease();
  v91 = objc_allocWithZone((Class)HFItemUpdateOutcome);
  sub_1DD3D8478((uint64_t)v59);
  swift_bridgeObjectRelease();
  v92 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  v93 = objc_msgSend(v91, sel_initWithResults_, v92);

  v36 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v93);
  return (uint64_t)v36;
}

uint64_t sub_1DD437CBC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 1320) = a2;
  *(_BYTE *)(v2 + 1544) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378350);
  *(_QWORD *)(v2 + 1328) = swift_task_alloc();
  v3 = sub_1DD63DF18();
  *(_QWORD *)(v2 + 1336) = v3;
  *(_QWORD *)(v2 + 1344) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 1352) = swift_task_alloc();
  *(_QWORD *)(v2 + 1360) = swift_task_alloc();
  *(_QWORD *)(v2 + 1368) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4600);
  *(_QWORD *)(v2 + 1376) = swift_task_alloc();
  *(_QWORD *)(v2 + 1384) = swift_task_alloc();
  *(_QWORD *)(v2 + 1392) = swift_task_alloc();
  *(_QWORD *)(v2 + 1400) = swift_task_alloc();
  v4 = sub_1DD63D768();
  *(_QWORD *)(v2 + 1408) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 1416) = v5;
  *(_QWORD *)(v2 + 1424) = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v2 + 1432) = swift_task_alloc();
  *(_QWORD *)(v2 + 1440) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD437DE8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  __CFString *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __CFString *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  __CFString *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __CFString *v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  int64_t v30;
  uint64_t v31;
  _OWORD *v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v69;
  id v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  int64_t v74;
  _OWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  int64_t v81;
  _OWORD *v82;
  id v83;

  v1 = *(unsigned __int8 *)(v0 + 1544);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E4620);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DD668460;
  *(_QWORD *)(v2 + 32) = CFSTR("title");
  v3 = CFSTR("title");
  v4 = (void *)sub_1DD63E11C();
  v5 = HFLocalizedString(v4);

  v6 = sub_1DD63E14C();
  v8 = v7;

  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 40) = v6;
  *(_QWORD *)(v2 + 48) = v8;
  *(_QWORD *)(v2 + 64) = v9;
  *(_QWORD *)(v2 + 72) = CFSTR("icon");
  v10 = objc_allocWithZone((Class)HFImageIconDescriptor);
  v11 = CFSTR("icon");
  v12 = (void *)sub_1DD63E11C();
  v13 = objc_msgSend(v10, sel_initWithSystemImageNamed_, v12);

  v14 = sub_1DD352AB0(0, (unint64_t *)&unk_1F03E6090);
  *(_QWORD *)(v2 + 80) = v13;
  *(_QWORD *)(v2 + 104) = v14;
  *(_QWORD *)(v2 + 112) = CFSTR("statusItemCategory");
  v15 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v16 = CFSTR("statusItemCategory");
  v17 = objc_msgSend(v15, sel_initWithUnsignedInteger_, 2);
  v18 = sub_1DD352AB0(0, (unint64_t *)&qword_1F03E49E8);
  *(_QWORD *)(v0 + 1448) = v18;
  *(_QWORD *)(v2 + 144) = v18;
  *(_QWORD *)(v2 + 120) = v17;
  v19 = sub_1DD3D6250(v2);
  *(_QWORD *)(v0 + 1456) = v19;
  if (v1 != 1)
  {
    v59 = *(_QWORD *)(v0 + 1320) + 16;
    swift_beginAccess();
    v60 = MEMORY[0x1DF0DB400](v59);
    *(_QWORD *)(v0 + 1464) = v60;
    v61 = *(_QWORD *)(v0 + 1440);
    if (v60)
    {
      v62 = *(_QWORD *)(v0 + 1416);
      v63 = *(_QWORD *)(v0 + 1408);
      v64 = *(_QWORD *)(v0 + 1400);
      v65 = *(_QWORD *)(v0 + 1392);
      v66 = v60 + OBJC_IVAR___HFActivityEventStatusItem_midnightToday;
      v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
      *(_QWORD *)(v0 + 1472) = v67;
      v67(v61, v66, v63);
      *(_QWORD *)(v0 + 1480) = OBJC_IVAR___HFActivityEventStatusItem_activityLogCoordinator;
      v67(v64, v61, v63);
      v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
      *(_QWORD *)(v0 + 1488) = v68;
      v68(v64, 0, 1, v63);
      v68(v65, 1, 1, v63);
      v69 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1496) = v69;
      *v69 = v0;
      v69[1] = sub_1DD438690;
      return sub_1DD4105C4(*(_QWORD *)(v0 + 1400), *(_QWORD *)(v0 + 1392), 0, 1, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      objc_msgSend((id)objc_opt_self(), sel_hf_errorWithCode_, 37);
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v78 = (_QWORD *)(v0 + 96);
  v79 = (_QWORD *)(v0 + 56);
  v20 = v0 + 296;
  v76 = v0 + 336;
  v82 = (_OWORD *)(v0 + 816);
  v21 = CFSTR("hidden");
  v22 = sub_1DD63E4C4();
  *(_QWORD *)(v0 + 1128) = v18;
  *(_QWORD *)(v0 + 1104) = v22;
  sub_1DD357884((_OWORD *)(v0 + 1104), (_OWORD *)(v0 + 1136));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0((_OWORD *)(v0 + 1136), v21, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();

  v24 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v72 = v0;
  v73 = v19 + 64;
  v25 = -1;
  v26 = -1 << *(_BYTE *)(v19 + 32);
  if (-v26 < 64)
    v25 = ~(-1 << -(char)v26);
  v27 = v25 & *(_QWORD *)(v19 + 64);
  v77 = v0 + 344;
  v28 = v0 + 104;
  v74 = (unint64_t)(63 - v26) >> 6;
  v75 = (_OWORD *)(v0 + 64);
  v80 = v19;
  result = swift_bridgeObjectRetain();
  v30 = 0;
  v31 = v0 + 304;
  while (1)
  {
    if (v27)
    {
      v33 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v81 = v30;
      v34 = v33 | (v30 << 6);
    }
    else
    {
      v35 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_43;
      if (v35 >= v74)
      {
LABEL_38:
        swift_release();
        swift_bridgeObjectRelease();
        v70 = objc_allocWithZone((Class)HFItemUpdateOutcome);
        sub_1DD3D8478((uint64_t)v24);
        swift_bridgeObjectRelease();
        v71 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v83 = objc_msgSend(v70, sel_initWithResults_, v71);

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(id))(v72 + 8))(v83);
      }
      v36 = *(_QWORD *)(v73 + 8 * v35);
      v37 = v30 + 1;
      if (!v36)
      {
        v37 = v30 + 2;
        if (v30 + 2 >= v74)
          goto LABEL_38;
        v36 = *(_QWORD *)(v73 + 8 * v37);
        if (!v36)
        {
          v37 = v30 + 3;
          if (v30 + 3 >= v74)
            goto LABEL_38;
          v36 = *(_QWORD *)(v73 + 8 * v37);
          if (!v36)
          {
            v37 = v30 + 4;
            if (v30 + 4 >= v74)
              goto LABEL_38;
            v36 = *(_QWORD *)(v73 + 8 * v37);
            if (!v36)
            {
              v38 = v30 + 5;
              if (v30 + 5 >= v74)
                goto LABEL_38;
              v36 = *(_QWORD *)(v73 + 8 * v38);
              if (!v36)
              {
                while (1)
                {
                  v37 = v38 + 1;
                  if (__OFADD__(v38, 1))
                    goto LABEL_44;
                  if (v37 >= v74)
                    goto LABEL_38;
                  v36 = *(_QWORD *)(v73 + 8 * v37);
                  ++v38;
                  if (v36)
                    goto LABEL_24;
                }
              }
              v37 = v30 + 5;
            }
          }
        }
      }
LABEL_24:
      v27 = (v36 - 1) & v36;
      v81 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v39 = *(void **)(*(_QWORD *)(v80 + 48) + 8 * v34);
    sub_1DD3714B4(*(_QWORD *)(v80 + 56) + 32 * v34, v77);
    *(_QWORD *)v76 = v39;
    v40 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v76;
    *(_OWORD *)(v20 + 16) = v40;
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v76 + 32);
    v41 = *(_QWORD *)v20;
    *v78 = *(_QWORD *)v20;
    v42 = v28;
    sub_1DD3714B4(v31, v28);
    v43 = sub_1DD63E14C();
    v45 = v44;
    *v79 = v41;
    sub_1DD3714B4(v31, (uint64_t)v75);
    sub_1DD357884(v75, v82);
    v46 = v39;
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v49 = sub_1DD3714A8(v43, v45);
    v50 = v24[2];
    v51 = (v48 & 1) == 0;
    result = v50 + v51;
    if (__OFADD__(v50, v51))
      break;
    v52 = v48;
    if (v24[3] >= result)
    {
      if ((v47 & 1) != 0)
      {
        if ((v48 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1DD3DD088();
        if ((v52 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_1DD3DA058(result, v47);
      v53 = sub_1DD3714A8(v43, v45);
      if ((v52 & 1) != (v54 & 1))
        return sub_1DD63E8A8();
      v49 = v53;
      if ((v52 & 1) != 0)
      {
LABEL_5:
        v32 = (_OWORD *)(v24[7] + 32 * v49);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
        sub_1DD357884(v82, v32);
        goto LABEL_6;
      }
    }
    v24[(v49 >> 6) + 8] |= 1 << v49;
    v55 = (uint64_t *)(v24[6] + 16 * v49);
    *v55 = v43;
    v55[1] = v45;
    result = (uint64_t)sub_1DD357884(v82, (_OWORD *)(v24[7] + 32 * v49));
    v56 = v24[2];
    v57 = __OFADD__(v56, 1);
    v58 = v56 + 1;
    if (v57)
      goto LABEL_42;
    v24[2] = v58;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v42;
    __swift_destroy_boxed_opaque_existential_0(v42);
    result = sub_1DD3540B8(v20, &qword_1F03E6000);
    v30 = v81;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DD438690(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v2;
  *(_QWORD *)(*v2 + 1504) = a1;
  swift_task_dealloc();
  v4 = *(_QWORD *)(v3 + 1400);
  v5 = *(_QWORD *)(v3 + 1392);
  if (v1)

  sub_1DD3540B8(v5, (uint64_t *)&unk_1F03E4600);
  sub_1DD3540B8(v4, (uint64_t *)&unk_1F03E4600);
  return swift_task_switch();
}

uint64_t sub_1DD438754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __CFString *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  int64_t v34;
  uint64_t v35;
  _OWORD *v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  int64_t v78;
  _OWORD *v79;
  id v80;

  v1 = *(_QWORD *)(v0 + 1504);
  if (!v1)
  {
    *(_QWORD *)(v0 + 1512) = *(_QWORD *)(*(_QWORD *)(v0 + 1464) + *(_QWORD *)(v0 + 1480));
    swift_retain();
    return swift_task_switch();
  }
  v79 = (_OWORD *)(v0 + 1008);
  v2 = *(_QWORD *)(v0 + 1456);
  v3 = CFSTR("description");
  v4 = (void *)sub_1DD63E11C();
  v5 = HFLocalizedString(v4);

  sub_1DD63E14C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5568);
  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v6 + 16) = xmmword_1DD667A30;
  v8 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v1;
  v9 = sub_1DD63E128();
  v69 = v0;
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1192) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 1168) = v9;
  *(_QWORD *)(v0 + 1176) = v11;
  v12 = v0;
  sub_1DD357884((_OWORD *)(v0 + 1168), (_OWORD *)(v0 + 1040));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0((_OWORD *)(v0 + 1040), v3, isUniquelyReferenced_nonNull_native);
  v77 = v2;
  swift_bridgeObjectRelease();

  if (v1 <= 40)
  {
    v14 = *(_QWORD *)(v0 + 1480);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1472);
    v16 = *(_QWORD *)(v0 + 1464);
    v17 = *(_QWORD *)(v0 + 1440);
    v18 = *(_QWORD *)(v0 + 1432);
    v19 = *(_QWORD *)(v69 + 1416);
    v20 = *(_QWORD *)(v69 + 1408);
    v21 = *(_QWORD *)(v69 + 1328);
    v22 = *(_QWORD *)(v16 + v14);
    v23 = sub_1DD63E2FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
    v15(v18, v17, v20);
    v24 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = 0;
    *((_QWORD *)v25 + 3) = 0;
    *((_QWORD *)v25 + 4) = v22;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v12 = v69;
    v26(&v25[v24], v18, v20);
    swift_retain();
    sub_1DD3D89F0(v21, (uint64_t)&unk_1F03E60A8, (uint64_t)v25);
    swift_release();
  }
  v73 = v12 + 416;
  v27 = v12 + 456;
  v75 = (_QWORD *)(v12 + 536);
  v76 = (_QWORD *)(v12 + 496);
  v28 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v70 = v77 + 64;
  v29 = -1;
  v30 = -1 << *(_BYTE *)(v77 + 32);
  if (-v30 < 64)
    v29 = ~(-1 << -(char)v30);
  v31 = v29 & *(_QWORD *)(v77 + 64);
  v32 = v12 + 504;
  v74 = v12 + 424;
  v71 = (unint64_t)(63 - v30) >> 6;
  v72 = (_OWORD *)(v12 + 544);
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v35 = v12 + 464;
  while (1)
  {
    if (v31)
    {
      v37 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v78 = v34;
      v38 = v37 | (v34 << 6);
    }
    else
    {
      v39 = v34 + 1;
      if (__OFADD__(v34, 1))
        goto LABEL_43;
      if (v39 >= v71)
      {
LABEL_39:
        v63 = *(void **)(v69 + 1464);
        v64 = *(_QWORD *)(v69 + 1440);
        v65 = *(_QWORD *)(v69 + 1416);
        v66 = *(_QWORD *)(v69 + 1408);
        swift_release();
        swift_bridgeObjectRelease();
        v67 = objc_allocWithZone((Class)HFItemUpdateOutcome);
        sub_1DD3D8478((uint64_t)v28);
        swift_bridgeObjectRelease();
        v68 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v80 = objc_msgSend(v67, sel_initWithResults_, v68);

        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(id))(v69 + 8))(v80);
      }
      v40 = *(_QWORD *)(v70 + 8 * v39);
      v41 = v34 + 1;
      if (!v40)
      {
        v41 = v34 + 2;
        if (v34 + 2 >= v71)
          goto LABEL_39;
        v40 = *(_QWORD *)(v70 + 8 * v41);
        if (!v40)
        {
          v41 = v34 + 3;
          if (v34 + 3 >= v71)
            goto LABEL_39;
          v40 = *(_QWORD *)(v70 + 8 * v41);
          if (!v40)
          {
            v41 = v34 + 4;
            if (v34 + 4 >= v71)
              goto LABEL_39;
            v40 = *(_QWORD *)(v70 + 8 * v41);
            if (!v40)
            {
              v42 = v34 + 5;
              if (v34 + 5 >= v71)
                goto LABEL_39;
              v40 = *(_QWORD *)(v70 + 8 * v42);
              if (!v40)
              {
                while (1)
                {
                  v41 = v42 + 1;
                  if (__OFADD__(v42, 1))
                    goto LABEL_44;
                  if (v41 >= v71)
                    goto LABEL_39;
                  v40 = *(_QWORD *)(v70 + 8 * v41);
                  ++v42;
                  if (v40)
                    goto LABEL_26;
                }
              }
              v41 = v34 + 5;
            }
          }
        }
      }
LABEL_26:
      v31 = (v40 - 1) & v40;
      v78 = v41;
      v38 = __clz(__rbit64(v40)) + (v41 << 6);
    }
    v43 = *(void **)(*(_QWORD *)(v77 + 48) + 8 * v38);
    sub_1DD3714B4(*(_QWORD *)(v77 + 56) + 32 * v38, v74);
    *(_QWORD *)v73 = v43;
    v44 = *(_OWORD *)(v73 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v73;
    *(_OWORD *)(v27 + 16) = v44;
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(v73 + 32);
    v45 = *(_QWORD *)v27;
    *v76 = *(_QWORD *)v27;
    v46 = v32;
    sub_1DD3714B4(v35, v32);
    v47 = sub_1DD63E14C();
    v49 = v48;
    *v75 = v45;
    sub_1DD3714B4(v35, (uint64_t)v72);
    sub_1DD357884(v72, v79);
    v50 = v43;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    v53 = sub_1DD3714A8(v47, v49);
    v54 = v28[2];
    v55 = (v52 & 1) == 0;
    result = v54 + v55;
    if (__OFADD__(v54, v55))
      break;
    v56 = v52;
    if (v28[3] >= result)
    {
      if ((v51 & 1) != 0)
      {
        if ((v52 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DD088();
        if ((v56 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DA058(result, v51);
      v57 = sub_1DD3714A8(v47, v49);
      if ((v56 & 1) != (v58 & 1))
        return sub_1DD63E8A8();
      v53 = v57;
      if ((v56 & 1) != 0)
      {
LABEL_7:
        v36 = (_OWORD *)(v28[7] + 32 * v53);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        sub_1DD357884(v79, v36);
        goto LABEL_8;
      }
    }
    v28[(v53 >> 6) + 8] |= 1 << v53;
    v59 = (uint64_t *)(v28[6] + 16 * v53);
    *v59 = v47;
    v59[1] = v49;
    result = (uint64_t)sub_1DD357884(v79, (_OWORD *)(v28[7] + 32 * v53));
    v60 = v28[2];
    v61 = __OFADD__(v60, 1);
    v62 = v60 + 1;
    if (v61)
      goto LABEL_42;
    v28[2] = v62;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v46;
    __swift_destroy_boxed_opaque_existential_0(v46);
    result = sub_1DD3540B8(v27, &qword_1F03E6000);
    v34 = v78;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DD438EA0()
{
  unint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  _OWORD *v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  _OWORD *v67;
  id v68;

  v1 = v0 + 1232;
  v2 = (_OWORD *)(v0 + 1264);
  if (qword_1F03E3810 != -1)
LABEL_43:
    swift_once();
  v67 = (_OWORD *)(v0 + 1200);
  v3 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v4 = sub_1DD63DF00();
  v5 = sub_1DD63E47C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1DD34E000, v4, v5, "Failed to determine today event count", v6, 2u);
    MEMORY[0x1DF0DB358](v6, -1, -1);
  }
  v61 = v0 + 136;
  v7 = v0 + 176;
  v63 = (_QWORD *)(v0 + 256);
  v64 = (_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 1456);
  v9 = *(_QWORD *)(v0 + 1368);
  v10 = *(_QWORD *)(v0 + 1344);
  v11 = *(_QWORD *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v12 = CFSTR("description");
  v13 = (void *)sub_1DD63E11C();
  v14 = HFLocalizedString(v13);

  v15 = sub_1DD63E14C();
  v17 = v16;

  *(_QWORD *)(v0 + 1288) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 1264) = v15;
  *(_QWORD *)(v0 + 1272) = v17;
  sub_1DD357884(v2, (_OWORD *)v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0((_OWORD *)v1, v12, isUniquelyReferenced_nonNull_native);
  v19 = v8;
  swift_bridgeObjectRelease();

  v20 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v57 = v0;
  v58 = v19 + 64;
  v21 = -1;
  v22 = -1 << *(_BYTE *)(v19 + 32);
  if (-v22 < 64)
    v21 = ~(-1 << -(char)v22);
  v23 = v21 & *(_QWORD *)(v19 + 64);
  v62 = v0 + 144;
  v1 = v0 + 224;
  v59 = (unint64_t)(63 - v22) >> 6;
  v60 = (_OWORD *)(v0 + 264);
  v65 = v19;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v26 = v0 + 184;
  while (1)
  {
    if (v23)
    {
      v27 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v66 = v25;
      v28 = v27 | (v25 << 6);
      goto LABEL_27;
    }
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
      goto LABEL_42;
    if (v29 >= v59)
    {
LABEL_38:
      v51 = *(void **)(v57 + 1464);
      v52 = *(_QWORD *)(v57 + 1440);
      v53 = *(_QWORD *)(v57 + 1416);
      v54 = *(_QWORD *)(v57 + 1408);
      swift_release();
      swift_bridgeObjectRelease();
      v55 = objc_allocWithZone((Class)HFItemUpdateOutcome);
      sub_1DD3D8478((uint64_t)v20);
      swift_bridgeObjectRelease();
      v56 = (void *)sub_1DD63E08C();
      swift_bridgeObjectRelease();
      v68 = objc_msgSend(v55, sel_initWithResults_, v56);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(id))(v57 + 8))(v68);
    }
    v30 = *(_QWORD *)(v58 + 8 * v29);
    v31 = v25 + 1;
    if (!v30)
    {
      v31 = v25 + 2;
      if (v25 + 2 >= v59)
        goto LABEL_38;
      v30 = *(_QWORD *)(v58 + 8 * v31);
      if (!v30)
      {
        v31 = v25 + 3;
        if (v25 + 3 >= v59)
          goto LABEL_38;
        v30 = *(_QWORD *)(v58 + 8 * v31);
        if (!v30)
        {
          v31 = v25 + 4;
          if (v25 + 4 >= v59)
            goto LABEL_38;
          v30 = *(_QWORD *)(v58 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_26:
    v23 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_27:
    v33 = *(void **)(*(_QWORD *)(v65 + 48) + 8 * v28);
    sub_1DD3714B4(*(_QWORD *)(v65 + 56) + 32 * v28, v62);
    *(_QWORD *)v61 = v33;
    v34 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v61;
    *(_OWORD *)(v7 + 16) = v34;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v61 + 32);
    v35 = *(_QWORD *)v7;
    *v64 = *(_QWORD *)v7;
    v36 = v1;
    sub_1DD3714B4(v26, v1);
    v2 = (_OWORD *)sub_1DD63E14C();
    v38 = v37;
    *v63 = v35;
    sub_1DD3714B4(v26, (uint64_t)v60);
    sub_1DD357884(v60, v67);
    v39 = v33;
    v1 = swift_isUniquelyReferenced_nonNull_native();
    v0 = sub_1DD3714A8((uint64_t)v2, v38);
    v41 = v20[2];
    v42 = (v40 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v44 = v40;
    if (v20[3] >= v43)
    {
      if ((v1 & 1) != 0)
      {
        if ((v40 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DD088();
        if ((v44 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DA058(v43, v1);
      v45 = sub_1DD3714A8((uint64_t)v2, v38);
      if ((v44 & 1) != (v46 & 1))
        return sub_1DD63E8A8();
      v0 = v45;
      if ((v44 & 1) != 0)
      {
LABEL_7:
        v0 = v20[7] + 32 * v0;
        __swift_destroy_boxed_opaque_existential_0(v0);
        sub_1DD357884(v67, (_OWORD *)v0);
        goto LABEL_8;
      }
    }
    v20[(v0 >> 6) + 8] |= 1 << v0;
    v47 = (_QWORD *)(v20[6] + 16 * v0);
    *v47 = v2;
    v47[1] = v38;
    sub_1DD357884(v67, (_OWORD *)(v20[7] + 32 * v0));
    v48 = v20[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_41;
    v20[2] = v50;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v36;
    __swift_destroy_boxed_opaque_existential_0(v36);
    result = sub_1DD3540B8(v7, &qword_1F03E6000);
    v25 = v66;
  }
  v32 = v25 + 5;
  if (v25 + 5 >= v59)
    goto LABEL_38;
  v30 = *(_QWORD *)(v58 + 8 * v32);
  if (v30)
  {
    v31 = v25 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v59)
      goto LABEL_38;
    v30 = *(_QWORD *)(v58 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD439518()
{
  uint64_t *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[186];
  v2 = v0[176];
  v3 = v0[172];
  v1(v0[173], 1, 1, v2);
  v1(v3, 1, 1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[190] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1DD4395B0;
  return sub_1DD4110F8(v0[173], v0[172], 1, 0);
}

uint64_t sub_1DD4395B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 1528) = v1;
  swift_task_dealloc();
  v5 = v4[173];
  v6 = v4[172];
  if (v1)
  {
    sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v5, (uint64_t *)&unk_1F03E4600);
  }
  else
  {
    v4[192] = a1;
    sub_1DD3540B8(v6, (uint64_t *)&unk_1F03E4600);
    sub_1DD3540B8(v5, (uint64_t *)&unk_1F03E4600);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1DD43967C()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __CFString *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t i;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __CFString *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t result;
  int64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int64_t v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  void *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char v94;
  unint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int64_t v114;
  int64_t v115;
  _OWORD *v116;
  _OWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  int64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  id v132;

  if (*(uint64_t *)(v0 + 1536) <= 0)
  {
    v28 = v0 + 880;
    v29 = v0 + 912;
    if (qword_1F03E3810 != -1)
      goto LABEL_84;
    goto LABEL_39;
  }
  v130 = (_OWORD *)(v0 + 1008);
  v1 = MEMORY[0x1E0DEA968];
  v2 = (_OWORD *)(v0 + 1168);
  v3 = (_OWORD *)(v0 + 1040);
  v4 = *(_QWORD *)(v0 + 1504);
  v5 = *(_QWORD *)(v0 + 1456);
  v6 = CFSTR("description");
  v7 = (void *)sub_1DD63E11C();
  v8 = HFLocalizedString(v7);

  sub_1DD63E14C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E5568);
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v9 + 16) = xmmword_1DD667A30;
  v11 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = v4;
  v12 = sub_1DD63E128();
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v111 + 1192) = v1;
  *(_QWORD *)(v111 + 1168) = v12;
  *(_QWORD *)(v111 + 1176) = v14;
  v15 = v111;
  sub_1DD357884(v2, v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0(v3, v6, isUniquelyReferenced_nonNull_native);
  v126 = v5;
  swift_bridgeObjectRelease();

  if (v4 <= 40)
  {
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 1472);
    v18 = *(_QWORD *)(v111 + 1440);
    v19 = *(_QWORD *)(v111 + 1432);
    v20 = *(_QWORD *)(v111 + 1416);
    v21 = *(_QWORD *)(v111 + 1408);
    v22 = *(_QWORD *)(v111 + 1328);
    v23 = *(_QWORD *)(*(_QWORD *)(v111 + 1464) + *(_QWORD *)(v111 + 1480));
    v24 = sub_1DD63E2FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
    v17(v19, v18, v21);
    v25 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v26 = (char *)swift_allocObject();
    *((_QWORD *)v26 + 2) = 0;
    *((_QWORD *)v26 + 3) = 0;
    *((_QWORD *)v26 + 4) = v23;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
    v15 = v111;
    v27(&v26[v25], v19, v21);
    swift_retain();
    sub_1DD3D89F0(v22, (uint64_t)&unk_1F03E60A8, (uint64_t)v26);
    swift_release();
  }
  v28 = v15 + 416;
  v29 = v15 + 456;
  v122 = (_QWORD *)(v15 + 536);
  v124 = (_QWORD *)(v15 + 496);
  v30 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v113 = v126 + 64;
  v31 = -1;
  v32 = -1 << *(_BYTE *)(v126 + 32);
  if (-v32 < 64)
    v31 = ~(-1 << -(char)v32);
  v33 = v31 & *(_QWORD *)(v126 + 64);
  v0 = v15 + 504;
  v118 = v15 + 464;
  v120 = v15 + 424;
  v115 = (unint64_t)(63 - v32) >> 6;
  v117 = (_OWORD *)(v15 + 544);
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v128)
  {
    if (v33)
    {
      v36 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      v128 = i;
      v37 = v36 | (i << 6);
    }
    else
    {
      v38 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_80;
      if (v38 >= v115)
      {
LABEL_75:
        v105 = *(void **)(v111 + 1464);
        v106 = *(_QWORD *)(v111 + 1440);
        v107 = *(_QWORD *)(v111 + 1416);
        v108 = *(_QWORD *)(v111 + 1408);
        swift_release();
        swift_bridgeObjectRelease();
        v109 = objc_allocWithZone((Class)HFItemUpdateOutcome);
        sub_1DD3D8478((uint64_t)v30);
        swift_bridgeObjectRelease();
        v110 = (void *)sub_1DD63E08C();
        swift_bridgeObjectRelease();
        v132 = objc_msgSend(v109, sel_initWithResults_, v110);

        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v108);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(id))(v111 + 8))(v132);
      }
      v39 = *(_QWORD *)(v113 + 8 * v38);
      v40 = i + 1;
      if (!v39)
      {
        v40 = i + 2;
        if (i + 2 >= v115)
          goto LABEL_75;
        v39 = *(_QWORD *)(v113 + 8 * v40);
        if (!v39)
        {
          v40 = i + 3;
          if (i + 3 >= v115)
            goto LABEL_75;
          v39 = *(_QWORD *)(v113 + 8 * v40);
          if (!v39)
          {
            v40 = i + 4;
            if (i + 4 >= v115)
              goto LABEL_75;
            v39 = *(_QWORD *)(v113 + 8 * v40);
            if (!v39)
            {
              v41 = i + 5;
              if (i + 5 >= v115)
                goto LABEL_75;
              v39 = *(_QWORD *)(v113 + 8 * v41);
              if (!v39)
              {
                while (1)
                {
                  v40 = v41 + 1;
                  if (__OFADD__(v41, 1))
                    goto LABEL_83;
                  if (v40 >= v115)
                    goto LABEL_75;
                  v39 = *(_QWORD *)(v113 + 8 * v40);
                  ++v41;
                  if (v39)
                    goto LABEL_26;
                }
              }
              v40 = i + 5;
            }
          }
        }
      }
LABEL_26:
      v33 = (v39 - 1) & v39;
      v128 = v40;
      v37 = __clz(__rbit64(v39)) + (v40 << 6);
    }
    v42 = *(void **)(*(_QWORD *)(v126 + 48) + 8 * v37);
    sub_1DD3714B4(*(_QWORD *)(v126 + 56) + 32 * v37, v120);
    *(_QWORD *)v28 = v42;
    v43 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v28;
    *(_OWORD *)(v29 + 16) = v43;
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v28 + 32);
    v44 = *(_QWORD *)v29;
    *v124 = *(_QWORD *)v29;
    v45 = v0;
    sub_1DD3714B4(v118, v0);
    v0 = sub_1DD63E14C();
    v47 = v46;
    *v122 = v44;
    sub_1DD3714B4(v118, (uint64_t)v117);
    sub_1DD357884(v117, v130);
    v48 = v42;
    v49 = swift_isUniquelyReferenced_nonNull_native();
    v51 = sub_1DD3714A8(v0, v47);
    v52 = v30[2];
    v53 = (v50 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
      break;
    v55 = v50;
    if (v30[3] >= v54)
    {
      if ((v49 & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DD088();
        if ((v55 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DA058(v54, v49);
      v56 = sub_1DD3714A8(v0, v47);
      if ((v55 & 1) != (v57 & 1))
        return sub_1DD63E8A8();
      v51 = v56;
      if ((v55 & 1) != 0)
      {
LABEL_7:
        v35 = (_OWORD *)(v30[7] + 32 * v51);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        sub_1DD357884(v130, v35);
        goto LABEL_8;
      }
    }
    v30[(v51 >> 6) + 8] |= 1 << v51;
    v58 = (uint64_t *)(v30[6] + 16 * v51);
    *v58 = v0;
    v58[1] = v47;
    sub_1DD357884(v130, (_OWORD *)(v30[7] + 32 * v51));
    v59 = v30[2];
    v60 = __OFADD__(v59, 1);
    v61 = v59 + 1;
    if (v60)
      goto LABEL_79;
    v30[2] = v61;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0 = v45;
    __swift_destroy_boxed_opaque_existential_0(v45);
    sub_1DD3540B8(v29, &qword_1F03E6000);
  }
  __break(1u);
  while (2)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    while (2)
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      swift_once();
LABEL_39:
      v131 = (_OWORD *)(v0 + 1072);
      v62 = (id)qword_1F03ED460;
      sub_1DD63DF24();
      v63 = sub_1DD63DF00();
      v64 = sub_1DD63E488();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v65 = 0;
        _os_log_impl(&dword_1DD34E000, v63, v64, "Hiding activity status, no events found", v65, 2u);
        MEMORY[0x1DF0DB358](v65, -1, -1);
      }
      v123 = (_QWORD *)(v0 + 576);
      v125 = (_QWORD *)(v0 + 376);
      v66 = v0 + 616;
      v119 = v0 + 656;
      v67 = *(_QWORD *)(v0 + 1456);
      v68 = *(_QWORD *)(v0 + 1448);
      v69 = *(_QWORD *)(v0 + 1352);
      v70 = *(_QWORD *)(v0 + 1344);
      v71 = *(_QWORD *)(v0 + 1336);

      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
      v72 = CFSTR("hidden");
      v73 = sub_1DD63E4C4();
      *(_QWORD *)(v0 + 904) = v68;
      *(_QWORD *)(v0 + 880) = v73;
      sub_1DD357884((_OWORD *)v28, (_OWORD *)v29);
      v74 = swift_isUniquelyReferenced_nonNull_native();
      sub_1DD3DBFD0((_OWORD *)v29, v72, v74);
      swift_bridgeObjectRelease();

      v30 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
      v112 = v67 + 64;
      v75 = -1;
      v76 = -1 << *(_BYTE *)(v67 + 32);
      if (-v76 < 64)
        v75 = ~(-1 << -(char)v76);
      v77 = v75 & *(_QWORD *)(v67 + 64);
      v121 = v0 + 664;
      v78 = v0 + 584;
      v114 = (unint64_t)(63 - v76) >> 6;
      v116 = (_OWORD *)(v0 + 384);
      v127 = v67;
      result = swift_bridgeObjectRetain();
      v80 = 0;
      v81 = v0 + 624;
LABEL_46:
      if (v77)
      {
        v82 = __clz(__rbit64(v77));
        v77 &= v77 - 1;
        v129 = v80;
        v83 = v82 | (v80 << 6);
        goto LABEL_64;
      }
      v84 = v80 + 1;
      if (__OFADD__(v80, 1))
        continue;
      break;
    }
    if (v84 >= v114)
      goto LABEL_75;
    v85 = *(_QWORD *)(v112 + 8 * v84);
    v86 = v80 + 1;
    if (v85)
      goto LABEL_63;
    v86 = v80 + 2;
    if (v80 + 2 >= v114)
      goto LABEL_75;
    v85 = *(_QWORD *)(v112 + 8 * v86);
    if (v85)
      goto LABEL_63;
    v86 = v80 + 3;
    if (v80 + 3 >= v114)
      goto LABEL_75;
    v85 = *(_QWORD *)(v112 + 8 * v86);
    if (v85)
      goto LABEL_63;
    v86 = v80 + 4;
    if (v80 + 4 >= v114)
      goto LABEL_75;
    v85 = *(_QWORD *)(v112 + 8 * v86);
    if (v85)
    {
LABEL_63:
      v77 = (v85 - 1) & v85;
      v129 = v86;
      v83 = __clz(__rbit64(v85)) + (v86 << 6);
LABEL_64:
      v88 = *(void **)(*(_QWORD *)(v127 + 48) + 8 * v83);
      sub_1DD3714B4(*(_QWORD *)(v127 + 56) + 32 * v83, v121);
      *(_QWORD *)v119 = v88;
      v89 = *(_OWORD *)(v119 + 16);
      *(_OWORD *)v66 = *(_OWORD *)v119;
      *(_OWORD *)(v66 + 16) = v89;
      *(_QWORD *)(v66 + 32) = *(_QWORD *)(v119 + 32);
      v90 = *(_QWORD *)v66;
      *v123 = *(_QWORD *)v66;
      v28 = v78;
      sub_1DD3714B4(v81, v78);
      v0 = sub_1DD63E14C();
      v92 = v91;
      *v125 = v90;
      sub_1DD3714B4(v81, (uint64_t)v116);
      sub_1DD357884(v116, v131);
      v93 = v88;
      v29 = swift_isUniquelyReferenced_nonNull_native();
      v95 = sub_1DD3714A8(v0, v92);
      v96 = v30[2];
      v97 = (v94 & 1) == 0;
      v98 = v96 + v97;
      if (__OFADD__(v96, v97))
        continue;
      v99 = v94;
      if (v30[3] < v98)
      {
        sub_1DD3DA058(v98, v29);
        v100 = sub_1DD3714A8(v0, v92);
        if ((v99 & 1) != (v101 & 1))
          return sub_1DD63E8A8();
        v95 = v100;
        if ((v99 & 1) == 0)
          goto LABEL_71;
LABEL_44:
        v0 = v30[7] + 32 * v95;
        __swift_destroy_boxed_opaque_existential_0(v0);
        sub_1DD357884(v131, (_OWORD *)v0);
LABEL_45:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v78 = v28;
        __swift_destroy_boxed_opaque_existential_0(v28);
        result = sub_1DD3540B8(v66, &qword_1F03E6000);
        v80 = v129;
        goto LABEL_46;
      }
      if ((v29 & 1) != 0)
      {
        if ((v94 & 1) != 0)
          goto LABEL_44;
      }
      else
      {
        sub_1DD3DD088();
        if ((v99 & 1) != 0)
          goto LABEL_44;
      }
LABEL_71:
      v30[(v95 >> 6) + 8] |= 1 << v95;
      v102 = (uint64_t *)(v30[6] + 16 * v95);
      *v102 = v0;
      v102[1] = v92;
      sub_1DD357884(v131, (_OWORD *)(v30[7] + 32 * v95));
      v103 = v30[2];
      v60 = __OFADD__(v103, 1);
      v104 = v103 + 1;
      if (v60)
        goto LABEL_81;
      v30[2] = v104;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    break;
  }
  v87 = v80 + 5;
  if (v80 + 5 >= v114)
    goto LABEL_75;
  v85 = *(_QWORD *)(v112 + 8 * v87);
  if (v85)
  {
    v86 = v80 + 5;
    goto LABEL_63;
  }
  while (1)
  {
    v86 = v87 + 1;
    if (__OFADD__(v87, 1))
      break;
    if (v86 >= v114)
      goto LABEL_75;
    v85 = *(_QWORD *)(v112 + 8 * v86);
    ++v87;
    if (v85)
      goto LABEL_63;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD43A218()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1528);
  swift_release();

  return swift_task_switch();
}

uint64_t sub_1DD43A260()
{
  unint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  _OWORD *v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  _OWORD *v67;
  id v68;

  v1 = v0 + 944;
  v2 = (_OWORD *)(v0 + 976);
  if (qword_1F03E3810 != -1)
LABEL_43:
    swift_once();
  v67 = (_OWORD *)(v0 + 848);
  v3 = (id)qword_1F03ED460;
  sub_1DD63DF24();
  v4 = sub_1DD63DF00();
  v5 = sub_1DD63E47C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1DD34E000, v4, v5, "Failed to determine if any events exist", v6, 2u);
    MEMORY[0x1DF0DB358](v6, -1, -1);
  }
  v7 = v0 + 16;
  v61 = v0 + 696;
  v63 = (_QWORD *)(v0 + 776);
  v64 = (_QWORD *)(v0 + 736);
  v8 = *(_QWORD *)(v0 + 1456);
  v9 = *(_QWORD *)(v0 + 1360);
  v10 = *(_QWORD *)(v0 + 1344);
  v11 = *(_QWORD *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v12 = CFSTR("description");
  v13 = (void *)sub_1DD63E11C();
  v14 = HFLocalizedString(v13);

  v15 = sub_1DD63E14C();
  v17 = v16;

  *(_QWORD *)(v0 + 1000) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 976) = v15;
  *(_QWORD *)(v0 + 984) = v17;
  sub_1DD357884(v2, (_OWORD *)v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DD3DBFD0((_OWORD *)v1, v12, isUniquelyReferenced_nonNull_native);
  v19 = v8;
  swift_bridgeObjectRelease();

  v20 = (_QWORD *)sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  v57 = v0;
  v58 = v19 + 64;
  v21 = -1;
  v22 = -1 << *(_BYTE *)(v19 + 32);
  if (-v22 < 64)
    v21 = ~(-1 << -(char)v22);
  v23 = v21 & *(_QWORD *)(v19 + 64);
  v62 = v0 + 704;
  v1 = v0 + 784;
  v59 = (unint64_t)(63 - v22) >> 6;
  v60 = (_OWORD *)(v0 + 744);
  v65 = v19;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v26 = v0 + 24;
  while (1)
  {
    if (v23)
    {
      v27 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v66 = v25;
      v28 = v27 | (v25 << 6);
      goto LABEL_27;
    }
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
      goto LABEL_42;
    if (v29 >= v59)
    {
LABEL_38:
      v51 = *(void **)(v57 + 1464);
      v52 = *(_QWORD *)(v57 + 1440);
      v53 = *(_QWORD *)(v57 + 1416);
      v54 = *(_QWORD *)(v57 + 1408);
      swift_release();
      swift_bridgeObjectRelease();
      v55 = objc_allocWithZone((Class)HFItemUpdateOutcome);
      sub_1DD3D8478((uint64_t)v20);
      swift_bridgeObjectRelease();
      v56 = (void *)sub_1DD63E08C();
      swift_bridgeObjectRelease();
      v68 = objc_msgSend(v55, sel_initWithResults_, v56);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(id))(v57 + 8))(v68);
    }
    v30 = *(_QWORD *)(v58 + 8 * v29);
    v31 = v25 + 1;
    if (!v30)
    {
      v31 = v25 + 2;
      if (v25 + 2 >= v59)
        goto LABEL_38;
      v30 = *(_QWORD *)(v58 + 8 * v31);
      if (!v30)
      {
        v31 = v25 + 3;
        if (v25 + 3 >= v59)
          goto LABEL_38;
        v30 = *(_QWORD *)(v58 + 8 * v31);
        if (!v30)
        {
          v31 = v25 + 4;
          if (v25 + 4 >= v59)
            goto LABEL_38;
          v30 = *(_QWORD *)(v58 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_26:
    v23 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_27:
    v33 = *(void **)(*(_QWORD *)(v65 + 48) + 8 * v28);
    sub_1DD3714B4(*(_QWORD *)(v65 + 56) + 32 * v28, v62);
    *(_QWORD *)v61 = v33;
    v34 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v61;
    *(_OWORD *)(v7 + 16) = v34;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v61 + 32);
    v35 = *(_QWORD *)v7;
    *v63 = *(_QWORD *)v7;
    v36 = v1;
    sub_1DD3714B4(v26, v1);
    v2 = (_OWORD *)sub_1DD63E14C();
    v38 = v37;
    *v64 = v35;
    sub_1DD3714B4(v26, (uint64_t)v60);
    sub_1DD357884(v60, v67);
    v39 = v33;
    v1 = swift_isUniquelyReferenced_nonNull_native();
    v0 = sub_1DD3714A8((uint64_t)v2, v38);
    v41 = v20[2];
    v42 = (v40 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v44 = v40;
    if (v20[3] >= v43)
    {
      if ((v1 & 1) != 0)
      {
        if ((v40 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1DD3DD088();
        if ((v44 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1DD3DA058(v43, v1);
      v45 = sub_1DD3714A8((uint64_t)v2, v38);
      if ((v44 & 1) != (v46 & 1))
        return sub_1DD63E8A8();
      v0 = v45;
      if ((v44 & 1) != 0)
      {
LABEL_7:
        v0 = v20[7] + 32 * v0;
        __swift_destroy_boxed_opaque_existential_0(v0);
        sub_1DD357884(v67, (_OWORD *)v0);
        goto LABEL_8;
      }
    }
    v20[(v0 >> 6) + 8] |= 1 << v0;
    v47 = (_QWORD *)(v20[6] + 16 * v0);
    *v47 = v2;
    v47[1] = v38;
    sub_1DD357884(v67, (_OWORD *)(v20[7] + 32 * v0));
    v48 = v20[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_41;
    v20[2] = v50;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v36;
    __swift_destroy_boxed_opaque_existential_0(v36);
    result = sub_1DD3540B8(v7, &qword_1F03E6000);
    v25 = v66;
  }
  v32 = v25 + 5;
  if (v25 + 5 >= v59)
    goto LABEL_38;
  v30 = *(_QWORD *)(v58 + 8 * v32);
  if (v30)
  {
    v31 = v25 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v59)
      goto LABEL_38;
    v30 = *(_QWORD *)(v58 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD43A8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  *(_QWORD *)(v5 + 16) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v7;
  *v7 = v5;
  v7[1] = sub_1DD43A930;
  return sub_1DD412520(a5);
}

uint64_t sub_1DD43A930(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43A98C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ActivityEventStatusItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityEventStatusItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall HMHome.hasCompatibleActivityLogAccessories()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t);
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  void *v28;
  _QWORD v30[4];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  __int128 v41;
  int v42;
  int v43;
  _QWORD *v44;

  v0 = sub_1DD63DC9C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v30 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6020);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD668460;
  v30[2] = v9;
  v10 = v9 + v8;
  v11 = *(void (**)(unint64_t))(v1 + 104);
  v43 = *MEMORY[0x1E0D32E08];
  v11(v10);
  v12 = v7;
  v42 = *MEMORY[0x1E0D32E00];
  v11(v10 + v7);
  v39 = *MEMORY[0x1E0D32E10];
  v11(v10 + 2 * v7);
  v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  v33 = *MEMORY[0x1E0CB9AA8];
  v32 = *MEMORY[0x1E0CB9AB8];
  v38 = *MEMORY[0x1E0CB99F0];
  v14 = *MEMORY[0x1E0CB9A00];
  v36 = *MEMORY[0x1E0CB9B28];
  v37 = v14;
  v35 = *MEMORY[0x1E0CB9A28];
  v15 = 3;
  v41 = xmmword_1DD667A30;
  v34 = xmmword_1DD668FD0;
  v31 = xmmword_1DD6683F0;
  v30[1] = v10;
  v40 = *MEMORY[0x1E0CB9A80];
  v13(v6, v10, v0);
  while (1)
  {
    v13(v4, (unint64_t)v6, v0);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
    if (v18 == v43)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v41;
      *(_QWORD *)(v16 + 32) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 40) = v17;
    }
    else if (v18 == v42)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v34;
      *(_QWORD *)(v16 + 32) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 40) = v19;
      *(_QWORD *)(v16 + 48) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 56) = v20;
      *(_QWORD *)(v16 + 64) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 72) = v21;
      *(_QWORD *)(v16 + 80) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 88) = v22;
    }
    else if (v18 == v39)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378408);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v31;
      *(_QWORD *)(v16 + 32) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 40) = v23;
      *(_QWORD *)(v16 + 48) = sub_1DD63E14C();
      *(_QWORD *)(v16 + 56) = v24;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      v16 = MEMORY[0x1E0DEE9D8];
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    sub_1DD420528(v16);
    v10 += v12;
    if (!--v15)
      break;
    v13(v6, v10, v0);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v25 = v44;
  v26 = objc_msgSend((id)v30[3], sel_hf_allVisibleServices);
  sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
  sub_1DD427D2C();
  v27 = sub_1DD63E398();

  swift_bridgeObjectRetain();
  v28 = (void *)sub_1DD43B168(v27, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v28)

  return v28 != 0;
}

BOOL sub_1DD43AEAC(void *a1)
{
  id v1;
  Swift::Bool v2;

  v1 = a1;
  v2 = HMHome.hasCompatibleActivityLogAccessories()();

  return v2;
}

Swift::Bool __swiftcall HMHome.hasActivityLogPrerequisites()()
{
  id v0;
  id v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v1 = objc_msgSend(v0, sel_homeManager);

  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, sel_hasOptedToHH2);

  return v2;
}

id sub_1DD43AF5C(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_sharedDispatcher);
  v5 = objc_msgSend(v4, sel_homeManager);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_hasOptedToHH2);

    v3 = v5;
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

Swift::Bool __swiftcall HMHome.userSupportsActivityLog()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;

  v1 = objc_msgSend(v0, sel_currentUser);
  v2 = objc_msgSend(v0, sel_hf_userIsRestrictedGuest_, v1);

  return v2 ^ 1;
}

uint64_t sub_1DD43B054(void *a1)
{
  id v1;
  id v2;
  unsigned int v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_currentUser);
  v3 = objc_msgSend(v1, sel_hf_userIsRestrictedGuest_, v2);

  return v3 ^ 1;
}

Swift::Bool __swiftcall HMHome.activityLogAvailable()()
{
  void *v0;
  unsigned int v1;

  v1 = objc_msgSend(v0, sel_hasCompatibleActivityLogAccessories);
  if (v1)
  {
    v1 = objc_msgSend(v0, sel_hasActivityLogPrerequisites);
    if (v1)
      LOBYTE(v1) = objc_msgSend(v0, sel_userSupportsActivityLog);
  }
  return v1;
}

id sub_1DD43B100(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if (objc_msgSend(v1, sel_hasCompatibleActivityLogAccessories)
    && objc_msgSend(v1, sel_hasActivityLogPrerequisites))
  {
    v2 = objc_msgSend(v1, sel_userSupportsActivityLog);
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t sub_1DD43B168(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DD63E5B4();
    sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
    sub_1DD427D2C();
    result = sub_1DD63E3F8();
    v2 = v32;
    v29 = v33;
    v4 = v34;
    v5 = v35;
    v6 = v36;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v28 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_1DD63E614())
        goto LABEL_49;
      sub_1DD352AB0(0, (unint64_t *)&qword_1F03E41C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v37;
      swift_unknownObjectRelease();
      v13 = v5;
      v11 = v6;
      if (!v37)
        goto LABEL_47;
    }
    else
    {
      if (v6)
      {
        v11 = (v6 - 1) & v6;
        v12 = __clz(__rbit64(v6)) | (v5 << 6);
        v13 = v5;
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_51;
        if (v15 >= v28)
          goto LABEL_49;
        v16 = *(_QWORD *)(v29 + 8 * v15);
        v13 = v5 + 1;
        if (!v16)
        {
          v13 = v5 + 2;
          if (v5 + 2 >= v28)
            goto LABEL_49;
          v16 = *(_QWORD *)(v29 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 3;
            if (v5 + 3 >= v28)
              goto LABEL_49;
            v16 = *(_QWORD *)(v29 + 8 * v13);
            if (!v16)
            {
              v13 = v5 + 4;
              if (v5 + 4 >= v28)
                goto LABEL_49;
              v16 = *(_QWORD *)(v29 + 8 * v13);
              if (!v16)
              {
                v13 = v5 + 5;
                if (v5 + 5 >= v28)
                  goto LABEL_49;
                v16 = *(_QWORD *)(v29 + 8 * v13);
                if (!v16)
                {
                  v17 = v5 + 6;
                  while (v28 != v17)
                  {
                    v16 = *(_QWORD *)(v29 + 8 * v17++);
                    if (v16)
                    {
                      v13 = v17 - 1;
                      goto LABEL_30;
                    }
                  }
LABEL_49:
                  v14 = 0;
LABEL_47:
                  sub_1DD3DEBAC();
                  return (uint64_t)v14;
                }
              }
            }
          }
        }
LABEL_30:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
      if (!v14)
        goto LABEL_47;
    }
    v30 = v13;
    v18 = v2;
    v19 = objc_msgSend(v14, sel_serviceType);
    v20 = sub_1DD63E14C();
    v22 = v21;

    v23 = a2[2];
    if (v23)
    {
      if (a2[4] == v20 && a2[5] == v22 || (result = sub_1DD63E860(), (result & 1) != 0))
      {
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      if (v23 != 1)
        break;
    }
LABEL_8:

    result = swift_bridgeObjectRelease();
    v5 = v30;
    v6 = v11;
    v2 = v18;
  }
  v24 = a2 + 7;
  v25 = 1;
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (*(v24 - 1) == v20 && *v24 == v22)
      goto LABEL_46;
    result = sub_1DD63E860();
    if ((result & 1) != 0)
      goto LABEL_46;
    v24 += 2;
    ++v25;
    if (v26 == v23)
      goto LABEL_8;
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

id sub_1DD43B530(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_class *v18;
  objc_super v20;

  v7 = sub_1DD63D768();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v3[OBJC_IVAR___HFActivityEventStatusItem_midnightToday];
  v12 = objc_allocWithZone(MEMORY[0x1E0C99D68]);
  v13 = v3;
  v14 = objc_msgSend(v12, sel_init);
  v15 = objc_msgSend(v14, sel_hf_startOfDay);

  sub_1DD63D744();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  type metadata accessor for ActivityLogCoordinator();
  swift_allocObject();
  v16 = a1;
  v17 = sub_1DD41918C(v16);

  *(_QWORD *)&v13[OBJC_IVAR___HFActivityEventStatusItem_activityLogCoordinator] = v17;
  v18 = (objc_class *)type metadata accessor for ActivityEventStatusItem();
  v20.receiver = v13;
  v20.super_class = v18;
  return objc_msgSendSuper2(&v20, sel_initWithHome_room_valueSource_, v16, a2, a3);
}

uint64_t sub_1DD43B690()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DD43B6B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD43B6D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DE6D4;
  return sub_1DD437CBC(v2, v3);
}

uint64_t sub_1DD43B738()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DD43B76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DD63D768();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DD43B7E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DD63D768() - 8) + 80);
  v5 = v1 + ((v4 + 40) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1DD3DED78;
  v6[2] = a1;
  v7 = (_QWORD *)swift_task_alloc();
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_1DD43A930;
  return sub_1DD412520(v5);
}

id HFHomeEnergyManager.home.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home);
}

uint64_t HFHomeEnergyManager.geocoder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DD3D3C30(v1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_geocoder, a1);
}

id HFHomeEnergyManager.__allocating_init(home:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  _BYTE *v5;
  id v6;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E390]), sel_init);
  v5 = objc_allocWithZone((Class)type metadata accessor for HFHomeEnergyManager());
  v6 = sub_1DD447E14(a1, (uint64_t)v4, v5);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

id HFHomeEnergyManager.init(home:)(void *a1)
{
  id v2;
  _BYTE *v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E390]), sel_init);
  v3 = objc_allocWithZone((Class)type metadata accessor for HFHomeEnergyManager());
  v4 = sub_1DD447E14(a1, (uint64_t)v2, v3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v4;
}

id HFHomeEnergyManager.__allocating_init(home:geocoder:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  v8 = sub_1DD44845C(a1, v7, v2, v5, v6);

  __swift_destroy_boxed_opaque_existential_0(a2);
  return v8;
}

uint64_t type metadata accessor for HFHomeEnergyManager()
{
  return objc_opt_self();
}

id HFHomeEnergyManager.init(home:geocoder:)(void *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_1DD448138(a1, (uint64_t)v9, v2, v5, v6);

  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_1DD43BB84()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = sub_1DD63DF18();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD4465E0();
  if (qword_1ED378308 != -1)
    swift_once();
  v5 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v6 = v0;
  v7 = sub_1DD63DF00();
  v8 = sub_1DD63E488();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v16 = v1;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v18 = v11;
    v12 = &v6[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable];
    swift_beginAccess();
    LOBYTE(v17) = *v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378300);
    v13 = sub_1DD63E164();
    v17 = sub_1DD3C3160(v13, v14, &v18);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v7, v8, "HFHomeEnergyManager-->didSet: isGridForecastAvailable: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v11, -1, -1);
    MEMORY[0x1DF0DB358](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1DD43BDB0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DD43BDF4(char a1)
{
  return sub_1DD43CA70(a1, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable, (uint64_t (*)(uint64_t))sub_1DD43BB84);
}

uint64_t (*sub_1DD43BE08(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD43BE50;
}

uint64_t sub_1DD43BE50(uint64_t a1, char a2)
{
  return sub_1DD43CB18(a1, a2, (uint64_t (*)(uint64_t))sub_1DD43BB84);
}

void *sub_1DD43BEA4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1DD43BF4C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1DD43BF9C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1DD43BFFC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DD43C070()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  char v3;
  unsigned __int8 *v4;
  int v5;
  unsigned __int8 *v6;

  if (objc_msgSend((id)objc_opt_self(), sel_isInternalInstall)
    && (v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v2 = objc_msgSend(v1, sel_BOOLForKey_, CFSTR("ForceShowHomeEnergyFeatures")),
        v1,
        (v2 & 1) != 0))
  {
    v3 = 1;
  }
  else
  {
    v4 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable);
    swift_beginAccess();
    v5 = *v4;
    if (v5 == 2
      && (v6 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable),
          swift_beginAccess(),
          v5 = *v6,
          v5 == 2)
      || (v5 & 1) == 0)
    {
      v3 = 0;
    }
    else
    {
      v3 = sub_1DD43C1A0();
    }
  }
  return v3 & 1;
}

uint64_t sub_1DD43C1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[16];
  __int128 v16;
  __int128 v17;

  v1 = sub_1DD63D7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v6 = objc_msgSend(v5, sel_dictionaryForKey_, CFSTR("showHomeEnergy"));

  if (v6)
  {
    v7 = sub_1DD63E098();

    v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    v9 = sub_1DD63D780();
    v11 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    if (*(_QWORD *)(v7 + 16) && (v12 = sub_1DD3714A8(v9, v11), (v13 & 1) != 0))
    {
      sub_1DD3714B4(*(_QWORD *)(v7 + 56) + 32 * v12, (uint64_t)&v16);
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v17 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v15[15];
    }
    else
    {
      sub_1DD3540B8((uint64_t)&v16, (uint64_t *)&unk_1ED3785F0);
    }
  }
  return 1;
}

uint64_t sub_1DD43C3A8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[2];
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;

  v2 = v1;
  v4 = sub_1DD63D7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_standardUserDefaults);
  v10 = objc_msgSend(v9, sel_dictionaryForKey_, CFSTR("showHomeEnergy"));

  if (v10)
  {
    v11 = sub_1DD63E098();

  }
  else
  {
    v11 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  }
  v12 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v13 = sub_1DD63D780();
  v21[0] = v2;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v23) = a1 & 1;
  sub_1DD357884(&v23, v22);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21[1] = v11;
  sub_1DD3D3978((uint64_t)v22, v13, v15, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v8, sel_standardUserDefaults);
  v18 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setObject_forKey_, v18, CFSTR("showHomeEnergy"));

  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED378590 != -1)
    swift_once();
  objc_msgSend(v19, sel_postNotificationName_object_, qword_1ED378580, 0);

  return sub_1DD4465E0();
}

uint64_t (*sub_1DD43C640(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1DD43C1A0() & 1;
  return sub_1DD43C678;
}

uint64_t sub_1DD43C678(uint64_t a1)
{
  return sub_1DD43C3A8(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1DD43C714()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  _BYTE *v3;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable);
  swift_beginAccess();
  v2 = *v1;
  if (v2 == 2)
  {
    v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable);
    swift_beginAccess();
    LOBYTE(v2) = *v3;
  }
  return v2 & 1;
}

void sub_1DD43C788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = sub_1DD63D7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_standardUserDefaults);
  v8 = objc_msgSend(v7, sel_dictionaryForKey_, CFSTR("homeEnergyAvailableCache"));

  if (v8)
  {
    v9 = sub_1DD63E098();

  }
  else
  {
    v9 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  }
  v25 = v9;
  v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v11 = sub_1DD63D780();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable);
  swift_beginAccess();
  v15 = *v14;
  if (v15 == 2)
  {
    sub_1DD3F9288(v11, v13, &v23);
    swift_bridgeObjectRelease();
    sub_1DD3540B8((uint64_t)&v23, (uint64_t *)&unk_1ED3785F0);
  }
  else
  {
    v24 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v23) = v15 & 1;
    sub_1DD357884(&v23, v22);
    v16 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = v16;
    v25 = 0x8000000000000000;
    sub_1DD3D3978((uint64_t)v22, v11, v13, isUniquelyReferenced_nonNull_native);
    v25 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend(v6, sel_standardUserDefaults);
  v19 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setObject_forKey_, v19, CFSTR("homeEnergyAvailableCache"));

}

uint64_t sub_1DD43CA18()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DD43CA5C(char a1)
{
  return sub_1DD43CA70(a1, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable, (uint64_t (*)(uint64_t))sub_1DD43C788);
}

uint64_t sub_1DD43CA70(char a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _BYTE *v6;
  uint64_t v7;

  v6 = (_BYTE *)(v3 + *a2);
  v7 = swift_beginAccess();
  *v6 = a1;
  return a3(v7);
}

uint64_t (*sub_1DD43CAC4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD43CB0C;
}

uint64_t sub_1DD43CB0C(uint64_t a1, char a2)
{
  return sub_1DD43CB18(a1, a2, (uint64_t (*)(uint64_t))sub_1DD43C788);
}

uint64_t sub_1DD43CB18(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t sub_1DD43CB54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[15] = v0;
  v2 = sub_1DD63DF18();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD43CBC4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = v0 + 16;
  if (qword_1ED378308 != -1)
    swift_once();
  v2 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v3 = sub_1DD63DF00();
  v4 = sub_1DD63E488();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  if (v5)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 112) = sub_1DD3C3160(0xD000000000000023, 0x80000001DD66FBB0, &v16);
    v1 = v0 + 16;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v3, v4, "%s async call started", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v10, -1, -1);
    MEMORY[0x1DF0DB358](v9, -1, -1);
  }

  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v6, v7);
  *(_QWORD *)(v0 + 160) = v11;
  *(_QWORD *)(v0 + 40) = &type metadata for HomeEnergyFeatures;
  *(_QWORD *)(v0 + 48) = sub_1DD3B3F24();
  *(_BYTE *)(v0 + 16) = 3;
  LOBYTE(v11) = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0(v1);
  if ((v11 & 1) != 0)
  {
    if ((sub_1DD43D47C() & 1) != 0)
    {
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_1DD43CF40;
      return sub_1DD43DF00();
    }
    else
    {
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v15;
      *v15 = v0;
      v15[1] = sub_1DD43CE50;
      return sub_1DD440234();
    }
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v14;
    *v14 = v0;
    v14[1] = sub_1DD43CFA4;
    return sub_1DD443FB4();
  }
}

uint64_t sub_1DD43CE50(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 196) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43CEAC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 196) == 1)
  {
    sub_1DD43D4C8(1);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v1;
    *v1 = v0;
    v1[1] = sub_1DD43CF40;
    return sub_1DD43DF00();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v3;
    *v3 = v0;
    v3[1] = sub_1DD43CFA4;
    return sub_1DD443FB4();
  }
}

uint64_t sub_1DD43CF40()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 184) = v2;
  *v2 = v4;
  v2[1] = sub_1DD43CFA4;
  return sub_1DD443FB4();
}

uint64_t sub_1DD43CFA4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 197) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43D000()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  int v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = *(_BYTE *)(v0 + 197);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = (_BYTE *)(v2 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable);
  swift_beginAccess();
  *v3 = v1;
  sub_1DD43BB84();
  v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable);
  swift_beginAccess();
  *v4 = v1;
  sub_1DD43C788();
  v5 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E488();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(unsigned __int8 *)(v0 + 197);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v10 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 128);
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v18 = v13;
    *(_DWORD *)v12 = 136315394;
    *(_QWORD *)(v0 + 104) = sub_1DD3C3160(0xD000000000000023, 0x80000001DD66FBB0, &v18);
    sub_1DD63E53C();
    *(_WORD *)(v12 + 12) = 1024;
    *(_DWORD *)(v0 + 192) = v8;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v6, v7, "%s async call finished: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v13, -1, -1);
    MEMORY[0x1DF0DB358](v12, -1, -1);

    v9(v10, v11);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 128);

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 197));
}

uint64_t sub_1DD43D340(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD43D3A0;
  return sub_1DD43CB54();
}

uint64_t sub_1DD43D3A0(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1DD63D69C();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DD43D47C()
{
  return sub_1DD43D88C();
}

void sub_1DD43D4C8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  id v17;
  void *v18;
  void *v19;
  _QWORD v20[2];
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;

  v3 = sub_1DD63D7C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v7 = (void *)objc_opt_self();
    v8 = objc_msgSend(v7, sel_standardUserDefaults);
    v9 = (void *)sub_1DD63E11C();
    v10 = objc_msgSend(v8, sel_dictionaryForKey_, v9);

    if (v10)
    {
      v11 = sub_1DD63E098();

    }
    else
    {
      v11 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
    }
    v12 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    v13 = sub_1DD63D780();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v23 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v22) = 1;
    sub_1DD357884(&v22, v21);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20[1] = v11;
    sub_1DD3D3978((uint64_t)v21, v13, v15, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v7, sel_standardUserDefaults);
    v18 = (void *)sub_1DD63E08C();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_1DD63E11C();
    objc_msgSend(v17, sel_setObject_forKey_, v18, v19);

  }
}

void (*sub_1DD43D724(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1DD43D47C() & 1;
  return sub_1DD43D75C;
}

void sub_1DD43D75C(uint64_t a1)
{
  sub_1DD43D4C8(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1DD43D7C4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DD43D880()
{
  return sub_1DD43D88C();
}

uint64_t sub_1DD43D88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v16[16];
  __int128 v17;
  __int128 v18;

  v1 = sub_1DD63D7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v6 = (void *)sub_1DD63E11C();
  v7 = objc_msgSend(v5, sel_dictionaryForKey_, v6);

  if (v7)
  {
    v8 = sub_1DD63E098();

    v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    v10 = sub_1DD63D780();
    v12 = v11;
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    if (*(_QWORD *)(v8 + 16) && (v13 = sub_1DD3714A8(v10, v12), (v14 & 1) != 0))
    {
      sub_1DD3714B4(*(_QWORD *)(v8 + 56) + 32 * v13, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v18 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v16[15];
    }
    else
    {
      sub_1DD3540B8((uint64_t)&v17, (uint64_t *)&unk_1ED3785F0);
    }
  }
  return 0;
}

uint64_t sub_1DD43DA6C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 80) = v1;
  *(_BYTE *)(v2 + 120) = a1;
  v3 = sub_1DD63D7C8();
  *(_QWORD *)(v2 + 88) = v3;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 104) = swift_task_alloc();
  sub_1DD63E2E4();
  *(_QWORD *)(v2 + 112) = sub_1DD63E2D8();
  sub_1DD63E284();
  return swift_task_switch();
}

uint64_t sub_1DD43DB04()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v1 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  if (v1 != (sub_1DD43D880() & 1))
  {
    v2 = (void *)objc_opt_self();
    v3 = objc_msgSend(v2, sel_standardUserDefaults);
    v4 = (void *)sub_1DD63E11C();
    v5 = objc_msgSend(v3, sel_dictionaryForKey_, v4);

    if (v5)
    {
      sub_1DD63E098();

    }
    else
    {
      sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
    }
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_BYTE *)(v0 + 120);
    v10 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    v11 = sub_1DD63D780();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v0 + 16) = v9;
    sub_1DD357884((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3D3978(v0 + 48, v11, v13, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v2, sel_standardUserDefaults);
    v16 = (void *)sub_1DD63E08C();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1DD63E11C();
    objc_msgSend(v15, sel_setObject_forKey_, v16, v17);

    v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1ED3785A8 != -1)
      swift_once();
    objc_msgSend(v18, sel_postNotificationName_object_, qword_1ED378598, 0);

    sub_1DD4465E0();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD43DE00()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  unsigned __int8 *v3;
  int v4;
  unsigned __int8 *v5;
  char v6;

  if (objc_msgSend((id)objc_opt_self(), sel_isInternalInstall))
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v2 = objc_msgSend(v1, sel_BOOLForKey_, CFSTR("ForceShowHomeEnergyFeatures"));

    if ((v2 & 1) != 0)
      goto LABEL_7;
  }
  if (((v3 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable),
         swift_beginAccess(),
         v4 = *v3,
         v4 != 2)
     || (v5 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable),
         swift_beginAccess(),
         v4 = *v5,
         v4 != 2))
    && (v4 & 1) != 0
    && (sub_1DD43C1A0() & 1) != 0)
  {
LABEL_7:
    v6 = 1;
  }
  else
  {
    v6 = sub_1DD43D880();
  }
  return v6 & 1;
}

uint64_t sub_1DD43DF00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[29] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378550);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v2 = sub_1DD63DF18();
  v1[32] = v2;
  v1[33] = *(_QWORD *)(v2 - 8);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v3 = sub_1DD63D7C8();
  v1[41] = v3;
  v1[42] = *(_QWORD *)(v3 - 8);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD43E018()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;

  v1 = v0[44];
  v2 = v0[41];
  v3 = v0[42];
  v4 = *(void **)(v0[29] + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home);
  v0[45] = v4;
  v5 = objc_msgSend(v4, sel_name);
  v6 = sub_1DD63E14C();
  v8 = v7;

  v0[46] = v6;
  v0[47] = v8;
  v9 = objc_msgSend(v4, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v0[48] = sub_1DD63D780();
  v0[49] = v10;
  v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[50] = v11;
  v11(v1, v2);
  v0[51] = sub_1DD63E074();
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  v0[52] = v12;
  *v12 = v0;
  v12[1] = sub_1DD43E134;
  return sub_1DD63E008();
}

uint64_t sub_1DD43E134(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43E190()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD, uint64_t, uint64_t);
  uint64_t v26;

  if (*(_QWORD *)(v0 + 424))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 472) = *(_QWORD *)(v0 + 424);
    v1 = (_BYTE *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
    swift_beginAccess();
    *v1 = 1;
    swift_retain();
    sub_1DD63E044();
    v3 = v2;
    if (v2)
      swift_bridgeObjectRelease();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_1DD43EA20;
    return sub_1DD43DA6C(v3 != 0);
  }
  else if (objc_msgSend(*(id *)(v0 + 360), sel_hf_currentUserIsOwner))
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v6;
    *v6 = v0;
    v6[1] = sub_1DD43E524;
    return sub_1DD63DFD8();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = sub_1DD63DFE4();
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 448) = v9;
    if (qword_1ED378308 != -1)
      swift_once();
    v10 = (id)qword_1ED379F38;
    sub_1DD63DF24();
    v11 = sub_1DD63DF00();
    v12 = sub_1DD63E464();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 264);
    if (v13)
    {
      v23 = *(_QWORD *)(v0 + 312);
      v17 = (uint8_t *)swift_slowAlloc();
      v24 = v9;
      v26 = swift_slowAlloc();
      v18 = v26;
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)(v0 + 208) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v26);
      sub_1DD63E53C();
      _os_log_impl(&dword_1DD34E000, v11, v12, "%s Attempting to request to be added to EnergyKit share if needed", v17, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      v9 = v24;
      MEMORY[0x1DF0DB358](v19, -1, -1);
      MEMORY[0x1DF0DB358](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v23, v15);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    v20 = *(void **)(v0 + 360);
    sub_1DD63DFCC();
    *(_QWORD *)(v0 + 456) = sub_1DD63DFC0();
    v21 = objc_msgSend(v20, sel_uniqueIdentifier);
    sub_1DD63D7A4();

    v25 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))((int)*MEMORY[0x1E0D1F358] + MEMORY[0x1E0D1F358]);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 464) = v22;
    *v22 = v0;
    v22[1] = sub_1DD43E8C8;
    return v25(*(_QWORD *)(v0 + 344), v7, v9);
  }
}

uint64_t sub_1DD43E524(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DD43E58C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 440);
  if (v1)
  {
    *(_QWORD *)(v0 + 472) = v1;
    v2 = (_BYTE *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
    swift_beginAccess();
    *v2 = 1;
    swift_retain();
    sub_1DD63E044();
    v4 = v3;
    if (v3)
      swift_bridgeObjectRelease();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v5;
    *v5 = v0;
    v5[1] = sub_1DD43EA20;
    return sub_1DD43DA6C(v4 != 0);
  }
  else
  {
    if (qword_1ED378308 != -1)
      swift_once();
    v7 = (id)qword_1ED379F38;
    sub_1DD63DF24();
    swift_bridgeObjectRetain();
    v8 = sub_1DD63DF00();
    v9 = sub_1DD63E47C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 376);
    if (v10)
    {
      v12 = *(_QWORD *)(v0 + 368);
      v18 = *(_QWORD *)(v0 + 264);
      v19 = *(_QWORD *)(v0 + 256);
      v20 = *(_QWORD *)(v0 + 320);
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = v14;
      *(_DWORD *)v13 = 136315394;
      *(_QWORD *)(v0 + 216) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v21);
      sub_1DD63E53C();
      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_1DD3C3160(v12, v11, &v21);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DD34E000, v8, v9, "%s Failed to create site for home %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v14, -1, -1);
      MEMORY[0x1DF0DB358](v13, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 320);
      v16 = *(_QWORD *)(v0 + 256);
      v17 = *(_QWORD *)(v0 + 264);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DD43E8C8()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(void (**)(uint64_t, uint64_t))(v2 + 400);
  v4 = *(_QWORD *)(v2 + 344);
  v5 = *(_QWORD *)(v2 + 328);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();

    v3(v4, v5);
    return swift_task_switch();
  }
  else
  {
    v3(*(_QWORD *)(v2 + 344), *(_QWORD *)(v2 + 328));
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_1DD43EA20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43EA74()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(id);
  uint64_t v33;

  if (!objc_msgSend(*(id *)(v0 + 360), sel_hf_currentUserIsOwner))
    goto LABEL_7;
  v1 = *(void **)(v0 + 360);
  swift_bridgeObjectRetain();
  sub_1DD63E050();
  v2 = objc_msgSend(v1, sel_location);
  *(_QWORD *)(v0 + 488) = v2;
  if (!v2)
  {
    v15 = (void *)sub_1DD63E05C();

    if (v15)
    {
      if (qword_1ED378308 != -1)
        swift_once();
      v16 = (id)qword_1ED379F38;
      sub_1DD63DF24();
      swift_bridgeObjectRetain();
      v17 = sub_1DD63DF00();
      v18 = sub_1DD63E47C();
      v19 = os_log_type_enabled(v17, v18);
      v20 = *(_QWORD *)(v0 + 376);
      if (v19)
      {
        v27 = *(_QWORD *)(v0 + 368);
        v28 = *(_QWORD *)(v0 + 264);
        v29 = *(_QWORD *)(v0 + 256);
        v31 = *(_QWORD *)(v0 + 280);
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v33 = v22;
        *(_DWORD *)v21 = 136315394;
        *(_QWORD *)(v0 + 168) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v33);
        sub_1DD63E53C();
        *(_WORD *)(v21 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 176) = sub_1DD3C3160(v27, v20, &v33);
        sub_1DD63E53C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DD34E000, v17, v18, "%s have site.location BUT home.location is nil for home %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1DF0DB358](v22, -1, -1);
        MEMORY[0x1DF0DB358](v21, -1, -1);
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
      }
      else
      {
        v24 = *(_QWORD *)(v0 + 280);
        v25 = *(_QWORD *)(v0 + 256);
        v26 = *(_QWORD *)(v0 + 264);
        swift_bridgeObjectRelease_n();

        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
      goto LABEL_8;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v2;
  swift_bridgeObjectRelease();
  if (qword_1ED378308 != -1)
    swift_once();
  v4 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E470();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  if (v7)
  {
    v30 = *(_QWORD *)(v0 + 304);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v33 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v0 + 200) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v33);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v5, v6, "%s Updating site's location", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);

    v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v13(v30, v10);
  }
  else
  {

    v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v13(v8, v10);
  }
  *(_QWORD *)(v0 + 496) = v13;
  v32 = (uint64_t (*)(id))((int)*MEMORY[0x1E0D1F398] + MEMORY[0x1E0D1F398]);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v23;
  *v23 = v0;
  v23[1] = sub_1DD43EF8C;
  return v32(v3);
}

uint64_t sub_1DD43EF8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD43EFF0()
{
  _QWORD *v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v2 = sub_1DD63DF00();
  v3 = sub_1DD63E470();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (void (*)(uint64_t, uint64_t))v0[62];
    v5 = v0[37];
    v6 = v0[32];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17 = v8;
    *(_DWORD *)v7 = 136315138;
    v0[24] = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v17);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v2, v3, "%s Updating site's timezone", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v8, -1, -1);
    MEMORY[0x1DF0DB358](v7, -1, -1);

    v4(v5, v6);
  }
  else
  {
    v9 = (void (*)(uint64_t, uint64_t))v0[62];
    v10 = v0[37];
    v11 = v0[32];

    v9(v10, v11);
  }
  v12 = v0[61];
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E390]), sel_init);
  v0[65] = v13;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_1DD43F210;
  v14 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v15 = v0 + 10;
  v15[1] = 0x40000000;
  v15[2] = sub_1DD44018C;
  v15[3] = &block_descriptor_168;
  v15[4] = v14;
  objc_msgSend(v13, sel_reverseGeocodeLocation_completionHandler_, v12, v15);
  return swift_continuation_await();
}

uint64_t sub_1DD43F210()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 528) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_1DD43F270()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 160);

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF0DA2C0](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v2 = *(id *)(v1 + 32);
  }
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v3, sel_timeZone);

  v5 = *(_QWORD *)(v0 + 240);
  if (v4)
  {
    sub_1DD63D870();

    v6 = sub_1DD63D87C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    v6 = sub_1DD63D87C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  v7 = *(_QWORD *)(v0 + 248);
  sub_1DD4495A4(*(_QWORD *)(v0 + 240), v7);
  sub_1DD63D87C();
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v6) != 1)
  {
    v9 = *(_QWORD *)(v0 + 248);
    v10 = sub_1DD63D858();
    v12 = v11;
    *(_QWORD *)(v0 + 536) = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v6);
    v27 = (void (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E0D1F3A0] + MEMORY[0x1E0D1F3A0]);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 544) = v13;
    *v13 = v0;
    v13[1] = sub_1DD43F670;
    v27(v10, v12);
    return;
  }
  sub_1DD3540B8(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1ED378550);
LABEL_14:
  v15 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v16 = sub_1DD63DF00();
  v17 = sub_1DD63E47C();
  v18 = os_log_type_enabled(v16, v17);
  v20 = *(void **)(v0 + 488);
  v19 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 256);
  if (v18)
  {
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v25 = *(_QWORD *)(v0 + 288);
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v28 = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)(v0 + 184) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v28);
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v16, v17, "%s Unable to get timezone", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v24, -1, -1);
    MEMORY[0x1DF0DB358](v23, -1, -1);

    swift_release_n();
    v26(v25, v22);
  }
  else
  {

    swift_release_n();
    v19(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_1DD43F670()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DD43F6DC()
{
  uint64_t v0;

  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD43F7AC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD43F864()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;

  v1 = v0;
  v2 = (void *)v0[64];
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v4 = v2;
  v5 = v2;
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E47C();
  if (os_log_type_enabled(v6, v7))
  {
    v17 = (void *)v0[61];
    v19 = v0[34];
    v20 = (void (*)(uint64_t, uint64_t))v0[62];
    v18 = v0[32];
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v8 = 136315394;
    v0[18] = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v21);
    sub_1DD63E53C();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v2;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v11;
    sub_1DD63E53C();
    *v9 = v11;

    _os_log_impl(&dword_1DD34E000, v6, v7, "%s Unable to update location. Error: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v16, -1, -1);
    MEMORY[0x1DF0DB358](v8, -1, -1);

    swift_release();
    swift_release();
    v20(v19, v18);
  }
  else
  {
    v12 = (void (*)(uint64_t, uint64_t))v0[62];
    v13 = v0[34];
    v14 = v1[32];

    swift_release_n();
    v12(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1DD43FB68()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *log;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void **)(v0 + 520);
  swift_willThrow();

  v2 = *(void **)(v0 + 528);
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v4 = v2;
  v5 = v2;
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E47C();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = *(void **)(v0 + 488);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v19 = *(_QWORD *)(v0 + 256);
    log = v6;
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22 = v10;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 144) = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v22);
    sub_1DD63E53C();
    *(_WORD *)(v8 + 12) = 2112;
    v11 = v2;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 152) = v12;
    sub_1DD63E53C();
    *v9 = v12;

    _os_log_impl(&dword_1DD34E000, log, v7, "%s Unable to update location. Error: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v10, -1, -1);
    MEMORY[0x1DF0DB358](v8, -1, -1);

    swift_release();
    swift_release();
    v21(v20, v19);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v14 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 256);

    swift_release_n();
    v13(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD43FE80()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = (void *)v0[69];
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v4 = v2;
  v5 = v2;
  v6 = sub_1DD63DF00();
  v7 = sub_1DD63E47C();
  if (os_log_type_enabled(v6, v7))
  {
    v17 = (void *)v0[61];
    v19 = v0[34];
    v20 = (void (*)(uint64_t, uint64_t))v0[62];
    v18 = v0[32];
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v8 = 136315394;
    v0[18] = sub_1DD3C3160(0xD000000000000011, 0x80000001DD670240, &v21);
    sub_1DD63E53C();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v2;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v11;
    sub_1DD63E53C();
    *v9 = v11;

    _os_log_impl(&dword_1DD34E000, v6, v7, "%s Unable to update location. Error: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v16, -1, -1);
    MEMORY[0x1DF0DB358](v8, -1, -1);

    swift_release();
    swift_release();
    v20(v19, v18);
  }
  else
  {
    v12 = (void (*)(uint64_t, uint64_t))v0[62];
    v13 = v0[34];
    v14 = v1[32];

    swift_release_n();
    v12(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1DD44018C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378600);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1DD352AB0(0, &qword_1F03E62C0);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1DD63E1F4();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1DD440234()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[15] = v0;
  v2 = sub_1DD63DF18();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD4402A4()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 40) = &type metadata for HomeEnergyFeatures;
  v1 = sub_1DD3B3F24();
  *(_BYTE *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) != 0)
  {
    *(_BYTE *)(v0 + 220) = 0;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_1DD440350;
    return sub_1DD4444EC();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1DD440350(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4403AC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DD63DEDC();
  *(_QWORD *)(v0 + 184) = sub_1DD63DEB8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_1DD440418;
  return sub_1DD63DEC4();
}

uint64_t sub_1DD440418(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1DD44048C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  int v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 200);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1DD63E7B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(_BYTE *)(v0 + 220) = v2 != 0;
  if (qword_1ED378308 != -1)
    swift_once();
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v4 = *(unsigned __int8 *)(v0 + 220);
  swift_bridgeObjectRetain();
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E488();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 176);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 152);
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136315650;
    *(_QWORD *)(v0 + 88) = sub_1DD3C3160(0xD000000000000028, 0x80000001DD66FBE0, &v20);
    sub_1DD63E53C();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v9, v8, &v20);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 1024;
    *(_DWORD *)(v0 + 216) = v4;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v5, v6, "%s %s returning %{BOOL}d", (uint8_t *)v10, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v11, -1, -1);
    MEMORY[0x1DF0DB358](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_beginAccess();
  v15 = *(unsigned __int8 *)(v0 + 220);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

uint64_t sub_1DD440770()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_1ED378308 != -1)
    swift_once();
  v1 = *(void **)(v0 + 208);
  v2 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E47C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 176);
  if (v7)
  {
    v32 = *(_QWORD *)(v0 + 168);
    v34 = *(_QWORD *)(v0 + 136);
    v36 = *(_QWORD *)(v0 + 128);
    v38 = *(_QWORD *)(v0 + 144);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v39 = v12;
    *(_DWORD *)v10 = 136315650;
    *(_QWORD *)(v0 + 96) = sub_1DD3C3160(0xD000000000000028, 0x80000001DD66FBE0, &v39);
    sub_1DD63E53C();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 104) = sub_1DD3C3160(v32, v9, &v39);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2112;
    v13 = v8;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 112) = v14;
    sub_1DD63E53C();
    *v11 = v14;

    _os_log_impl(&dword_1DD34E000, v5, v6, "%s %s error: %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v38, v36);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 128);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  if (qword_1ED378308 != -1)
    swift_once();
  v18 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v19 = *(unsigned __int8 *)(v0 + 220);
  swift_bridgeObjectRetain();
  v20 = sub_1DD63DF00();
  v21 = sub_1DD63E488();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 176);
  if (v22)
  {
    v24 = *(_QWORD *)(v0 + 168);
    v33 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 128);
    v37 = *(_QWORD *)(v0 + 152);
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v39 = v26;
    *(_DWORD *)v25 = 136315650;
    *(_QWORD *)(v0 + 88) = sub_1DD3C3160(0xD000000000000028, 0x80000001DD66FBE0, &v39);
    sub_1DD63E53C();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v24, v23, &v39);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 22) = 1024;
    *(_DWORD *)(v0 + 216) = v19;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v20, v21, "%s %s returning %{BOOL}d", (uint8_t *)v25, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v26, -1, -1);
    MEMORY[0x1DF0DB358](v25, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v35);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  swift_beginAccess();
  v30 = *(unsigned __int8 *)(v0 + 220);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

uint64_t sub_1DD440DE0(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD449644;
  return sub_1DD440234();
}

uint64_t sub_1DD440E40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[165] = v0;
  v2 = sub_1DD63DF18();
  v1[166] = v2;
  v1[167] = *(_QWORD *)(v2 - 8);
  v1[168] = swift_task_alloc();
  v3 = sub_1DD63D7C8();
  v1[169] = v3;
  v1[170] = *(_QWORD *)(v3 - 8);
  v1[171] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD440EC8()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  unint64_t v10;

  *(_QWORD *)(v0 + 40) = &type metadata for HomeEnergyFeatures;
  v1 = sub_1DD3B3F24();
  *(_BYTE *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 1368);
    v4 = *(_QWORD *)(v0 + 1360);
    v5 = *(_QWORD *)(v0 + 1352);
    v6 = *(_QWORD *)(v0 + 1320);
    *(_QWORD *)(v0 + 1296) = sub_1DD3D69A8(MEMORY[0x1E0DEE9D8]);
    *(_BYTE *)(v0 + 1456) = sub_1DD43D47C() & 1;
    sub_1DD63E074();
    v7 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), sel_uniqueIdentifier);
    sub_1DD63D7A4();

    sub_1DD63D780();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1376) = v8;
    *v8 = v0;
    v8[1] = sub_1DD441030;
    return sub_1DD63E008();
  }
  else
  {
    v10 = sub_1DD3D69A8(MEMORY[0x1E0DEE9D8]);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v10);
  }
}

uint64_t sub_1DD441030(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1384) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD44108C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (*(_QWORD *)(v0 + 1384))
  {
    v1 = sub_1DD63DFF0();
    v2 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 304) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 280) = v1;
    *(_QWORD *)(v0 + 288) = v3;
    sub_1DD357884((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 312));
    v4 = *(_QWORD *)(v0 + 1296);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC(v0 + 312, 0x444965746973, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v6 = sub_1DD63E014();
    v8 = v7;
    *(_QWORD *)(v0 + 368) = v2;
    *(_QWORD *)(v0 + 344) = v6;
    *(_QWORD *)(v0 + 352) = v7;
    sub_1DD357884((_OWORD *)(v0 + 344), (_OWORD *)(v0 + 376));
    swift_bridgeObjectRetain();
    v9 = swift_isUniquelyReferenced_nonNull_native();
    v38 = v4;
    sub_1DD3DC9BC(v0 + 376, 0xD000000000000011, 0x80000001DD66FC30, v9);
    *(_QWORD *)(v0 + 1296) = v4;
    swift_bridgeObjectRelease();
    if (v6 == 0x64657269707865 && v8 == 0xE700000000000000
      || (sub_1DD63E860() & 1) != 0
      || v6 == 0x656E6E6F63736964 && v8 == 0xEC00000064657463)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1DD63E860();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
LABEL_18:
        v29 = *(_QWORD *)(v0 + 1320);
        v30 = sub_1DD63E044();
        v32 = v31;
        *(_QWORD *)(v0 + 1280) = v30;
        *(_QWORD *)(v0 + 1288) = v31;
        *(_QWORD *)(v0 + 1392) = v31;
        v33 = (_BYTE *)(v29 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
        swift_beginAccess();
        *v33 = 1;
        v34 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 1400) = v34;
        *v34 = v0;
        v34[1] = sub_1DD441660;
        return sub_1DD43DA6C(v32 != 0);
      }
    }
    *(_QWORD *)(v0 + 208) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v0 + 184) = 1;
    sub_1DD357884((_OWORD *)(v0 + 184), (_OWORD *)(v0 + 152));
    v27 = *(_QWORD *)(v0 + 1296);
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v38 = v27;
    sub_1DD3DC9BC(v0 + 152, 0x6E6F637369447369, 0xEE0064657463656ELL, v28);
    *(_QWORD *)(v0 + 1296) = v27;
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v0 + 1456);
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEAFA0];
  sub_1DD357884((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 120));
  v10 = *(_QWORD *)(v0 + 1296);
  v11 = swift_isUniquelyReferenced_nonNull_native();
  v38 = v10;
  sub_1DD3DC9BC(v0 + 120, 0x726F707075537369, 0xEB00000000646574, v11);
  *(_QWORD *)(v0 + 1296) = v10;
  swift_bridgeObjectRelease();
  if (qword_1ED378308 != -1)
    swift_once();
  v12 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v13 = sub_1DD63DF00();
  v14 = sub_1DD63E488();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 1344);
  v17 = *(_QWORD *)(v0 + 1336);
  v18 = *(_QWORD *)(v0 + 1328);
  if (v15)
  {
    v37 = *(_QWORD *)(v0 + 1336);
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v38 = v20;
    *(_DWORD *)v19 = 136315394;
    *(_QWORD *)(v0 + 1312) = sub_1DD3C3160(0xD000000000000010, 0x80000001DD66FC10, &v38);
    sub_1DD63E53C();
    *(_WORD *)(v19 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6120);
    v35 = v18;
    v36 = v16;
    v21 = sub_1DD63E0A4();
    v23 = v22;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1304) = sub_1DD3C3160(v21, v23, &v38);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v13, v14, "%s returning: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v20, -1, -1);
    MEMORY[0x1DF0DB358](v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v35);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_beginAccess();
  v24 = *(_QWORD *)(v0 + 1296);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t sub_1DD441660()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4416B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char v21;
  uint64_t v22;
  char v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 1392);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 1280);
    v3 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 464) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 440) = v2;
    *(_QWORD *)(v0 + 448) = v1;
    sub_1DD357884((_OWORD *)(v0 + 440), (_OWORD *)(v0 + 472));
    v4 = *(_QWORD *)(v0 + 1296);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39 = v4;
    sub_1DD3DC9BC(v0 + 472, 0xD000000000000015, 0x80000001DD66FC50, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v0 + 1296) = v4;
    swift_bridgeObjectRelease();
    v6 = sub_1DD63E02C();
    if (v7)
    {
      *(_QWORD *)(v0 + 272) = v3;
      *(_QWORD *)(v0 + 248) = v6;
      *(_QWORD *)(v0 + 256) = v7;
      sub_1DD357884((_OWORD *)(v0 + 248), (_OWORD *)(v0 + 216));
      v8 = swift_isUniquelyReferenced_nonNull_native();
      v39 = v4;
      sub_1DD3DC9BC(v0 + 216, 0xD000000000000013, 0x80000001DD66FD30, v8);
      *(_QWORD *)(v0 + 1296) = v4;
      swift_bridgeObjectRelease();
    }
    v9 = sub_1DD63E038();
    if (v10)
    {
      *(_QWORD *)(v0 + 720) = v3;
      *(_QWORD *)(v0 + 696) = v9;
      *(_QWORD *)(v0 + 704) = v10;
      sub_1DD357884((_OWORD *)(v0 + 696), (_OWORD *)(v0 + 408));
      v11 = swift_isUniquelyReferenced_nonNull_native();
      v39 = v4;
      sub_1DD3DC9BC(v0 + 408, 0xD000000000000014, 0x80000001DD66FD10, v11);
      *(_QWORD *)(v0 + 1296) = v4;
      swift_bridgeObjectRelease();
    }
    v12 = sub_1DD63E020();
    if (v13)
    {
      *(_QWORD *)(v0 + 1168) = v3;
      *(_QWORD *)(v0 + 1144) = v12;
      *(_QWORD *)(v0 + 1152) = v13;
      sub_1DD357884((_OWORD *)(v0 + 1144), (_OWORD *)(v0 + 1176));
      v14 = swift_isUniquelyReferenced_nonNull_native();
      v39 = *(_QWORD *)(v0 + 1296);
      sub_1DD3DC9BC(v0 + 1176, 0xD000000000000012, 0x80000001DD66FCF0, v14);
      *(_QWORD *)(v0 + 1296) = v39;
      swift_bridgeObjectRelease();
    }
    v15 = sub_1DD63DFFC();
    if (v16)
    {
      *(_QWORD *)(v0 + 1104) = v3;
      *(_QWORD *)(v0 + 1080) = v15;
      *(_QWORD *)(v0 + 1088) = v16;
      sub_1DD357884((_OWORD *)(v0 + 1080), (_OWORD *)(v0 + 1112));
      v17 = swift_isUniquelyReferenced_nonNull_native();
      v39 = *(_QWORD *)(v0 + 1296);
      sub_1DD3DC9BC(v0 + 1112, 0x4165636976726573, 0xEE00737365726464, v17);
      *(_QWORD *)(v0 + 1296) = v39;
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v0 + 1408) = sub_1DD63E068();
    *(_QWORD *)(v0 + 1416) = v18;
    if (v18)
    {
      sub_1DD63DEDC();
      *(_QWORD *)(v0 + 1424) = sub_1DD63DEB8();
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1432) = v19;
      *v19 = v0;
      v19[1] = sub_1DD441C94;
      return sub_1DD63DED0();
    }
    swift_release();
    v21 = 1;
  }
  else
  {
    swift_release();
    v21 = *(_BYTE *)(v0 + 1456);
  }
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v0 + 88) = v21;
  sub_1DD357884((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 120));
  v22 = *(_QWORD *)(v0 + 1296);
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v39 = v22;
  sub_1DD3DC9BC(v0 + 120, 0x726F707075537369, 0xEB00000000646574, v23);
  *(_QWORD *)(v0 + 1296) = v22;
  swift_bridgeObjectRelease();
  if (qword_1ED378308 != -1)
    swift_once();
  v24 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v25 = sub_1DD63DF00();
  v26 = sub_1DD63E488();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(_QWORD *)(v0 + 1344);
  v29 = *(_QWORD *)(v0 + 1336);
  v30 = *(_QWORD *)(v0 + 1328);
  if (v27)
  {
    v38 = *(_QWORD *)(v0 + 1336);
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v39 = v32;
    *(_DWORD *)v31 = 136315394;
    *(_QWORD *)(v0 + 1312) = sub_1DD3C3160(0xD000000000000010, 0x80000001DD66FC10, &v39);
    sub_1DD63E53C();
    *(_WORD *)(v31 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6120);
    v37 = v30;
    v33 = sub_1DD63E0A4();
    v35 = v34;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1304) = sub_1DD3C3160(v33, v35, &v39);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v25, v26, "%s returning: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v32, -1, -1);
    MEMORY[0x1DF0DB358](v31, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v37);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  }
  swift_beginAccess();
  v36 = *(_QWORD *)(v0 + 1296);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
}

uint64_t sub_1DD441C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 1440) = a1;
  *(_QWORD *)(v3 + 1448) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1DD441D0C()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _OWORD *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  _OWORD *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;

  v1 = (_OWORD *)(v0 + 88);
  v2 = (_OWORD *)(v0 + 120);
  v3 = *(void **)(v0 + 1440);
  if (v3)
  {
    v68 = (_OWORD *)(v0 + 664);
    v69 = (_OWORD *)(v0 + 728);
    v67 = (_OWORD *)(v0 + 792);
    v4 = sub_1DD63DE70();
    v6 = v5;
    v73 = v3;
    v7 = sub_1DD63DE7C();
    v72 = (_OWORD *)(v0 + 984);
    v70 = (_OWORD *)(v0 + 856);
    if (!v8)
    {
      swift_bridgeObjectRetain();
      v7 = v4;
      v8 = v6;
    }
    v9 = *(_QWORD *)(v0 + 1416);
    v10 = *(_QWORD *)(v0 + 1408);
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 528) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 504) = v7;
    *(_QWORD *)(v0 + 512) = v8;
    sub_1DD357884((_OWORD *)(v0 + 504), (_OWORD *)(v0 + 536));
    v12 = *(_QWORD *)(v0 + 1296);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC(v0 + 536, 0x4E7974696C697475, 0xEB00000000656D61, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 592) = v11;
    *(_QWORD *)(v0 + 568) = v10;
    *(_QWORD *)(v0 + 576) = v9;
    sub_1DD357884((_OWORD *)(v0 + 568), (_OWORD *)(v0 + 600));
    v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC(v0 + 600, 0x497974696C697475, 0xE900000000000044, v14);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 656) = v11;
    *(_QWORD *)(v0 + 632) = v4;
    *(_QWORD *)(v0 + 640) = v6;
    sub_1DD357884((_OWORD *)(v0 + 632), v68);
    v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC((uint64_t)v68, 0x4C7974696C697475, 0xEF656D614E676E6FLL, v15);
    v16 = v12;
    *(_QWORD *)(v0 + 1296) = v12;
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1DD63DE64();
    v18 = (void *)sub_1DD63DE40();

    v19 = sub_1DD63DE88();
    v21 = v20;

    *(_QWORD *)(v0 + 80) = v11;
    *(_QWORD *)(v0 + 56) = v19;
    *(_QWORD *)(v0 + 64) = v21;
    sub_1DD357884((_OWORD *)(v0 + 56), v69);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v75 = v16;
    sub_1DD3DC9BC((uint64_t)v69, 0xD000000000000011, 0x80000001DD66FC70, v22);
    v23 = v16;
    swift_bridgeObjectRelease();
    if (objc_msgSend((id)objc_opt_self(), sel_isInternalInstall))
    {
      v24 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v25 = (void *)sub_1DD63E11C();
      v26 = objc_msgSend(v24, sel_stringForKey_, v25);

      v27 = (_OWORD *)(v0 + 824);
      if (v26)
      {
        v28 = sub_1DD63E14C();
        v30 = v29;

        *(_QWORD *)(v0 + 1040) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v0 + 1016) = v28;
        *(_QWORD *)(v0 + 1024) = v30;
        sub_1DD357884((_OWORD *)(v0 + 1016), (_OWORD *)(v0 + 1048));
        v31 = swift_isUniquelyReferenced_nonNull_native();
        v75 = v23;
        sub_1DD3DC9BC(v0 + 1048, 0xD000000000000011, 0x80000001DD66FC70, v31);
        *(_QWORD *)(v0 + 1296) = v23;
        swift_bridgeObjectRelease();
      }
      v32 = (_OWORD *)(v0 + 920);
      v2 = (_OWORD *)(v0 + 120);
    }
    else
    {
      v32 = (_OWORD *)(v0 + 920);
      v2 = (_OWORD *)(v0 + 120);
      v27 = (_OWORD *)(v0 + 824);
    }
    v33 = (void *)sub_1DD63DE64();
    v34 = (void *)sub_1DD63DE4C();

    v35 = sub_1DD63DEA0();
    v36 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 784) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 760) = v35;
    *(_QWORD *)(v0 + 768) = v37;
    sub_1DD357884((_OWORD *)(v0 + 760), v67);
    v38 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC((uint64_t)v67, 0xD000000000000014, 0x80000001DD66FC90, v38);
    swift_bridgeObjectRelease();
    v39 = sub_1DD63DE94();
    *(_QWORD *)(v0 + 848) = v36;
    *(_QWORD *)(v0 + 824) = v39;
    *(_QWORD *)(v0 + 832) = v40;
    sub_1DD357884(v27, v70);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC((uint64_t)v70, 0xD000000000000012, 0x80000001DD66FCB0, v41);
    swift_bridgeObjectRelease();
    v42 = sub_1DD63DEAC();
    *(_QWORD *)(v0 + 912) = v36;
    *(_QWORD *)(v0 + 888) = v42;
    *(_QWORD *)(v0 + 896) = v43;
    sub_1DD357884((_OWORD *)(v0 + 888), v32);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DD3DC9BC((uint64_t)v32, 0xD00000000000001BLL, 0x80000001DD66FCD0, v44);
    v45 = v23;
    swift_bridgeObjectRelease();
    v46 = (void *)sub_1DD63DE64();
    v47 = sub_1DD63DE58();
    v49 = v48;

    *(_QWORD *)(v0 + 976) = v36;
    *(_QWORD *)(v0 + 952) = v47;
    *(_QWORD *)(v0 + 960) = v49;
    sub_1DD357884((_OWORD *)(v0 + 952), v72);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v75 = v45;
    sub_1DD3DC9BC((uint64_t)v72, 0x577974696C697475, 0xEE00657469736265, v50);
    *(_QWORD *)(v0 + 1296) = v45;
    swift_bridgeObjectRelease();

    swift_release();
    v1 = (_OWORD *)(v0 + 88);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v0 + 88) = 1;
  sub_1DD357884(v1, v2);
  v51 = *(_QWORD *)(v0 + 1296);
  v52 = swift_isUniquelyReferenced_nonNull_native();
  v75 = v51;
  sub_1DD3DC9BC((uint64_t)v2, 0x726F707075537369, 0xEB00000000646574, v52);
  *(_QWORD *)(v0 + 1296) = v51;
  swift_bridgeObjectRelease();
  if (qword_1ED378308 != -1)
    swift_once();
  v53 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v54 = sub_1DD63DF00();
  v55 = sub_1DD63E488();
  v56 = os_log_type_enabled(v54, v55);
  v57 = *(_QWORD *)(v0 + 1344);
  v58 = *(_QWORD *)(v0 + 1336);
  v59 = *(_QWORD *)(v0 + 1328);
  if (v56)
  {
    v74 = *(_QWORD *)(v0 + 1336);
    v60 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v75 = v61;
    *(_DWORD *)v60 = 136315394;
    *(_QWORD *)(v0 + 1312) = sub_1DD3C3160(0xD000000000000010, 0x80000001DD66FC10, &v75);
    sub_1DD63E53C();
    *(_WORD *)(v60 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6120);
    v62 = sub_1DD63E0A4();
    v71 = v57;
    v64 = v63;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1304) = sub_1DD3C3160(v62, v64, &v75);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v54, v55, "%s returning: %s", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v61, -1, -1);
    MEMORY[0x1DF0DB358](v60, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v71, v59);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
  }
  swift_beginAccess();
  v65 = *(_QWORD *)(v0 + 1296);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v65);
}

uint64_t sub_1DD442560()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1448);

  swift_bridgeObjectRelease();
  swift_release();
  *(_BYTE *)(v0 + 88) = 1;
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEAFA0];
  sub_1DD357884((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 120));
  v2 = *(_QWORD *)(v0 + 1296);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = v2;
  sub_1DD3DC9BC(v0 + 120, 0x726F707075537369, 0xEB00000000646574, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 1296) = v2;
  swift_bridgeObjectRelease();
  if (qword_1ED378308 != -1)
    swift_once();
  v4 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E488();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 1344);
  v9 = *(_QWORD *)(v0 + 1336);
  v10 = *(_QWORD *)(v0 + 1328);
  if (v7)
  {
    v11 = swift_slowAlloc();
    v19 = v9;
    v20 = swift_slowAlloc();
    v12 = v20;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 1312) = sub_1DD3C3160(0xD000000000000010, 0x80000001DD66FC10, &v20);
    sub_1DD63E53C();
    *(_WORD *)(v11 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6120);
    v18 = v10;
    v13 = sub_1DD63E0A4();
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1304) = sub_1DD3C3160(v13, v15, &v20);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DD34E000, v5, v6, "%s returning: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v18);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_beginAccess();
  v16 = *(_QWORD *)(v0 + 1296);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_1DD4429AC(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD442A0C;
  return sub_1DD440E40();
}

uint64_t sub_1DD442A0C()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03E6120);
  v3 = (void *)sub_1DD63E08C();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v3);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DD442AB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[23] = v0;
  v2 = sub_1DD63D7C8();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  v3 = sub_1DD63DF18();
  v1[27] = v3;
  v1[28] = *(_QWORD *)(v3 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD442B74()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v0 + 40) = &type metadata for HomeEnergyFeatures;
  v1 = sub_1DD3B3F24();
  *(_BYTE *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
    goto LABEL_17;
  v3 = *(void **)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home);
  v4 = objc_msgSend(v3, sel_name);
  v5 = sub_1DD63E14C();
  v7 = v6;

  *(_BYTE *)(v0 + 56) = 6;
  *(_QWORD *)(v0 + 272) = v5;
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v0 + 80) = &type metadata for HomeEnergyFeatures;
  *(_QWORD *)(v0 + 88) = v1;
  v8 = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  if ((v8 & 1) == 0)
  {
    if ((objc_msgSend(v3, sel_hf_currentUserIsOwner) & 1) == 0)
    {
      if (qword_1ED378308 != -1)
        swift_once();
      v24 = (id)qword_1ED379F38;
      sub_1DD63DF24();
      swift_bridgeObjectRetain();
      v25 = sub_1DD63DF00();
      v26 = sub_1DD63E488();
      v27 = os_log_type_enabled(v25, v26);
      v28 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 216);
      v30 = *(_QWORD *)(v0 + 224);
      if (!v27)
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
        goto LABEL_17;
      }
      v35 = *(_QWORD *)(v0 + 256);
      v31 = swift_slowAlloc();
      v34 = v30;
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v31 = 136315394;
      v33 = v29;
      *(_QWORD *)(v0 + 96) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v36);
      sub_1DD63E53C();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_1DD3C3160(v5, v7, &v36);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DD34E000, v25, v26, "%s not allowed for home %s because: not owner", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v32, -1, -1);
      MEMORY[0x1DF0DB358](v31, -1, -1);

      goto LABEL_14;
    }
LABEL_9:
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    sub_1DD63E074();
    v21 = objc_msgSend(v3, sel_uniqueIdentifier);
    sub_1DD63D7A4();

    sub_1DD63D780();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v22;
    *v22 = v0;
    v22[1] = sub_1DD443100;
    return sub_1DD63E008();
  }
  if ((objc_msgSend(v3, sel_hf_currentUserIsAdministrator) & 1) != 0)
    goto LABEL_9;
  if (qword_1ED378308 != -1)
    swift_once();
  v9 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v10 = sub_1DD63DF00();
  v11 = sub_1DD63E488();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 224);
  if (!v12)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    goto LABEL_17;
  }
  v35 = *(_QWORD *)(v0 + 264);
  v16 = swift_slowAlloc();
  v34 = v15;
  v17 = swift_slowAlloc();
  v36 = v17;
  *(_DWORD *)v16 = 136315394;
  v33 = v14;
  *(_QWORD *)(v0 + 176) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v36);
  sub_1DD63E53C();
  *(_WORD *)(v16 + 12) = 2080;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 136) = sub_1DD3C3160(v5, v7, &v36);
  sub_1DD63E53C();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1DD34E000, v10, v11, "%s not allowed for home %s because: not admin", (uint8_t *)v16, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1DF0DB358](v17, -1, -1);
  MEMORY[0x1DF0DB358](v16, -1, -1);

LABEL_14:
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD443100(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD44315C()
{
  uint64_t v0;
  _QWORD *v1;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;

  if (*(_QWORD *)(v0 + 296))
  {
    v16 = (uint64_t (*)(void))((int)*MEMORY[0x1E0D1F3E8] + MEMORY[0x1E0D1F3E8]);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v1;
    *v1 = v0;
    v1[1] = sub_1DD443420;
    return v16();
  }
  else
  {
    if (qword_1ED378308 != -1)
      swift_once();
    v3 = (id)qword_1ED379F38;
    sub_1DD63DF24();
    swift_bridgeObjectRetain();
    v4 = sub_1DD63DF00();
    v5 = sub_1DD63E47C();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 280);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 272);
      v14 = *(_QWORD *)(v0 + 224);
      v15 = *(_QWORD *)(v0 + 216);
      v17 = *(_QWORD *)(v0 + 240);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v18 = v10;
      *(_DWORD *)v9 = 136315394;
      *(_QWORD *)(v0 + 112) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v18);
      sub_1DD63E53C();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 120) = sub_1DD3C3160(v8, v7, &v18);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DD34E000, v4, v5, "%s Error fetching Energy Site for %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v10, -1, -1);
      MEMORY[0x1DF0DB358](v9, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v15);
    }
    else
    {
      v11 = *(_QWORD *)(v0 + 240);
      v12 = *(_QWORD *)(v0 + 216);
      v13 = *(_QWORD *)(v0 + 224);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1DD443420(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 332) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1DD443498()
{
  uint64_t v0;
  int v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(unsigned __int8 *)(v0 + 332);
  if (qword_1ED378308 != -1)
    swift_once();
  v2 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v3 = sub_1DD63DF00();
  v4 = sub_1DD63E488();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 280);
  if (v5)
  {
    v14 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 248);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136315650;
    *(_QWORD *)(v0 + 128) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v18);
    sub_1DD63E53C();
    *(_WORD *)(v7 + 12) = 1024;
    *(_DWORD *)(v0 + 328) = v1;
    sub_1DD63E53C();
    *(_WORD *)(v7 + 18) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 144) = sub_1DD3C3160(v14, v6, &v18);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DD34E000, v3, v4, "%s success: %{BOOL}d for home %s", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v8, -1, -1);
    MEMORY[0x1DF0DB358](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
    if (!v1)
    {
LABEL_5:
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 248);
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 224);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    if (!v1)
      goto LABEL_5;
  }
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v13;
  *v13 = v0;
  v13[1] = sub_1DD443794;
  return sub_1DD43DA6C(0);
}

uint64_t sub_1DD443794()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4437E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1DD443868()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  unint64_t v9;
  char **__ptr32 *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_1ED378308 != -1)
    swift_once();
  v1 = *(void **)(v0 + 312);
  v2 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_1DD63DF00();
  v6 = sub_1DD63E47C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 280);
  v10 = &off_1DD667000;
  if (v7)
  {
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 232);
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v39 = v13;
    *(_DWORD *)v11 = 136315650;
    *(_QWORD *)(v0 + 152) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v39);
    sub_1DD63E53C();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 160) = sub_1DD3C3160(v32, v9, &v39);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2112;
    v14 = v8;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 168) = v15;
    sub_1DD63E53C();
    *v12 = v15;

    _os_log_impl(&dword_1DD34E000, v5, v6, "%s revokeUtilitySubscription failed for %s error: %@", (uint8_t *)v11, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03E4770);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    swift_arrayDestroy();
    v16 = v13;
    v10 = &off_1DD667000;
    MEMORY[0x1DF0DB358](v16, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v35);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 232);
    v19 = *(_QWORD *)(v0 + 216);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  if (qword_1ED378308 != -1)
    swift_once();
  v20 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v21 = sub_1DD63DF00();
  v22 = sub_1DD63E488();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 280);
  if (v23)
  {
    v25 = *(_QWORD *)(v0 + 272);
    v34 = *(_QWORD *)(v0 + 224);
    v36 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 248);
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v39 = v27;
    *(_DWORD *)v26 = *((_QWORD *)v10 + 339);
    *(_QWORD *)(v0 + 128) = sub_1DD3C3160(0xD000000000000014, 0x80000001DD66FD50, &v39);
    sub_1DD63E53C();
    *(_WORD *)(v26 + 12) = 1024;
    *(_DWORD *)(v0 + 328) = 0;
    sub_1DD63E53C();
    *(_WORD *)(v26 + 18) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 144) = sub_1DD3C3160(v25, v24, &v39);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DD34E000, v21, v22, "%s success: %{BOOL}d for home %s", (uint8_t *)v26, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v27, -1, -1);
    MEMORY[0x1DF0DB358](v26, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v38, v36);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD443ED8(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD449644;
  return sub_1DD442AB8();
}

id sub_1DD443F38()
{
  uint64_t v0;
  char v1;
  char **v2;
  char v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for HomeEnergyFeatures;
  v6 = sub_1DD3B3F24();
  v4[0] = 6;
  v1 = sub_1DD63D888();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  v2 = &selRef_hf_currentUserIsAdministrator;
  if ((v1 & 1) == 0)
    v2 = &selRef_hf_currentUserIsOwner;
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home), *v2);
}

uint64_t sub_1DD443FB4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1DD63DF18();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = swift_task_alloc();
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1DD444020;
  return sub_1DD4444EC();
}

uint64_t sub_1DD444020(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD44407C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1DD63D894();
  if (qword_1ED378308 != -1)
    swift_once();
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain();
  v4 = sub_1DD63DF00();
  v5 = sub_1DD63E488();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 72);
  if (v6)
  {
    v14 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136315650;
    *(_QWORD *)(v0 + 16) = sub_1DD3C3160(0xD000000000000025, 0x80000001DD66FD70, &v18);
    sub_1DD63E53C();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_1DD3C3160(v14, v7, &v18);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 1024;
    *(_DWORD *)(v0 + 80) = v2 & 1;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v4, v5, "%s %s returning %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v9, -1, -1);
    MEMORY[0x1DF0DB358](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v2 & 1);
}

uint64_t sub_1DD444418(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD444478;
  return sub_1DD443FB4();
}

uint64_t sub_1DD444478(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1DD4444EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[26] = v0;
  v2 = sub_1DD63D804();
  v1[27] = v2;
  v1[28] = *(_QWORD *)(v2 - 8);
  v1[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E8);
  v1[30] = swift_task_alloc();
  v3 = sub_1DD63DF18();
  v1[31] = v3;
  v1[32] = *(_QWORD *)(v3 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD4445D8()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  id v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  void *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  os_log_type_t v98[8];
  void *v99;
  os_log_type_t v100[8];
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  void (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(id, uint64_t, uint64_t);
  uint64_t v116;

  if (qword_1ED378308 != -1)
    swift_once();
  v1 = *(void **)(v0 + 208);
  v2 = &qword_1ED379000;
  v3 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v4 = v1;
  v5 = sub_1DD63DF00();
  type = sub_1DD63E488();
  v6 = os_log_type_enabled(v5, type);
  v7 = *(_QWORD *)(v0 + 304);
  v108 = *(_QWORD *)(v0 + 256);
  v111 = *(_QWORD *)(v0 + 248);
  v8 = &qword_1F03E6000;
  v9 = *(char **)(v0 + 208);
  if (v6)
  {
    *(_QWORD *)v98 = *(_QWORD *)(v0 + 304);
    v10 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v116 = v96;
    *(_DWORD *)v10 = 136315906;
    *(_QWORD *)(v0 + 168) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v116);
    sub_1DD63E53C();
    *(_WORD *)(v10 + 12) = 2080;
    v95 = *(id *)&v9[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home];
    v11 = objc_msgSend(v95, sel_name);
    v12 = sub_1DD63E14C();
    v14 = v13;

    *(_QWORD *)(v0 + 176) = sub_1DD3C3160(v12, v14, &v116);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedRegionCode + 8];
    *(_QWORD *)(v0 + 40) = *(_QWORD *)&v9[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedRegionCode];
    *(_QWORD *)(v0 + 48) = v15;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782F8);
    v16 = sub_1DD63E164();
    *(_QWORD *)(v0 + 192) = sub_1DD3C3160(v16, v17, &v116);
    sub_1DD63E53C();
    v2 = &qword_1ED379000;
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 32) = 2080;
    v18 = objc_msgSend(v95, sel_location);

    if (v18)
      v19 = 0xD000000000000010;
    else
      v19 = 0x20636F4C656D6F68;
    if (v18)
      v20 = 0x80000001DD66FDA0;
    else
      v20 = 0xEE004C494E207369;
    *(_QWORD *)(v0 + 200) = sub_1DD3C3160(v19, v20, &v116);
    sub_1DD63E53C();
    v8 = &qword_1F03E6000;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v5, type, "%s called for %s: cached: %s, %s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v96, -1, -1);
    MEMORY[0x1DF0DB358](v10, -1, -1);

    v21 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
    v21(*(_QWORD *)v98, v111);
  }
  else
  {

    v21 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
    v21(v7, v111);
  }
  v22 = *(char **)(v0 + 208);
  v23 = v8[39];
  *(_QWORD *)(v0 + 312) = v21;
  *(_QWORD *)(v0 + 320) = v23;
  v24 = (uint64_t *)&v22[v23];
  v25 = v24[1];
  if (v25)
  {
    v26 = *v24;
    v27 = (void *)v2[487];
    swift_bridgeObjectRetain();
    v28 = v27;
    sub_1DD63DF24();
    v29 = v22;
    swift_bridgeObjectRetain_n();
    v30 = v29;
    v31 = sub_1DD63DF00();
    v32 = sub_1DD63E488();
    v33 = os_log_type_enabled(v31, v32);
    v34 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(char **)(v0 + 208);
    if (!v33)
    {
      swift_bridgeObjectRelease_n();

      v21(v34, v35);
      goto LABEL_20;
    }
    *(_QWORD *)typea = *(_QWORD *)(v0 + 296);
    v112 = v26;
    v37 = swift_slowAlloc();
    v97 = swift_slowAlloc();
    v116 = v97;
    *(_DWORD *)v37 = 136315650;
    *(_QWORD *)v100 = v35;
    *(_QWORD *)(v0 + 144) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v116);
    sub_1DD63E53C();
    v109 = v21;
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1DD3C3160(v112, v25, &v116);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 22) = 2080;
    v38 = objc_msgSend(*(id *)&v36[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home], sel_name);
    v39 = sub_1DD63E14C();
    v41 = v40;

    *(_QWORD *)(v0 + 160) = sub_1DD3C3160(v39, v41, &v116);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v31, v32, "%s returning cached region code: %s for %s", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v97, -1, -1);
    v42 = v37;
    v26 = v112;
    MEMORY[0x1DF0DB358](v42, -1, -1);

    v43 = *(_QWORD *)typea;
    v44 = *(_QWORD *)v100;
LABEL_15:
    v109(v43, v44);
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v26, v25);
  }
  v45 = *(void **)&v22[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home];
  *(_QWORD *)(v0 + 328) = v45;
  v46 = objc_msgSend(v45, sel_location);
  *(_QWORD *)(v0 + 336) = v46;
  if (!v46)
  {
    v65 = v2;
    v67 = *(_QWORD *)(v0 + 232);
    v66 = *(_QWORD *)(v0 + 240);
    v68 = *(_QWORD *)(v0 + 216);
    v69 = *(_QWORD *)(v0 + 224);
    sub_1DD63D7F8();
    sub_1DD63D7EC();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
    v70 = sub_1DD63D7E0();
    v71 = *(_QWORD *)(v70 - 8);
    v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v66, 1, v70);
    v73 = *(_QWORD *)(v0 + 240);
    if (v72 == 1)
    {
      sub_1DD3540B8(*(_QWORD *)(v0 + 240), &qword_1ED3782E8);
      v114 = 0;
      v25 = 0xE000000000000000;
    }
    else
    {
      v114 = sub_1DD63D7D4();
      v25 = v78;
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v70);
    }
    v79 = *(void **)(v0 + 208);
    v80 = (id)v65[487];
    sub_1DD63DF24();
    v81 = v79;
    swift_bridgeObjectRetain_n();
    v82 = v81;
    v83 = sub_1DD63DF00();
    v84 = sub_1DD63E488();
    if (!os_log_type_enabled(v83, v84))
    {
      v91 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      v92 = *(_QWORD *)(v0 + 272);
      v93 = *(_QWORD *)(v0 + 248);
      v94 = *(void **)(v0 + 208);
      swift_bridgeObjectRelease_n();

      v91(v92, v93);
      v26 = v114;
      goto LABEL_20;
    }
    v85 = *(void **)(v0 + 328);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 272);
    v109 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v104 = *(_QWORD *)(v0 + 248);
    v99 = *(void **)(v0 + 208);
    v86 = swift_slowAlloc();
    v102 = swift_slowAlloc();
    v116 = v102;
    *(_DWORD *)v86 = 136315650;
    *(_QWORD *)(v0 + 184) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v116);
    sub_1DD63E53C();
    *(_WORD *)(v86 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v114, v25, &v116);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v86 + 22) = 2080;
    v87 = objc_msgSend(v85, sel_name);
    v88 = sub_1DD63E14C();
    v90 = v89;

    *(_QWORD *)(v0 + 56) = sub_1DD3C3160(v88, v90, &v116);
    sub_1DD63E53C();
    v26 = v114;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v83, v84, "%s falling back to device region code: %s for %s", (uint8_t *)v86, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v102, -1, -1);
    MEMORY[0x1DF0DB358](v86, -1, -1);

    v44 = v104;
    v43 = *(_QWORD *)typeb;
    goto LABEL_15;
  }
  v47 = v46;
  v110 = v21;
  v48 = *(void **)(v0 + 208);
  v49 = (id)v2[487];
  sub_1DD63DF24();
  v50 = v48;
  v51 = sub_1DD63DF00();
  v52 = sub_1DD63E488();
  v53 = os_log_type_enabled(v51, v52);
  v54 = *(_QWORD *)(v0 + 288);
  v55 = *(_QWORD *)(v0 + 248);
  v56 = *(void **)(v0 + 208);
  if (v53)
  {
    v113 = *(_QWORD *)(v0 + 248);
    v101 = v52;
    v57 = swift_slowAlloc();
    v103 = swift_slowAlloc();
    v116 = v103;
    *(_DWORD *)v57 = 136315394;
    *(_QWORD *)(v0 + 128) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v116);
    sub_1DD63E53C();
    *(_WORD *)(v57 + 12) = 2080;
    v58 = objc_msgSend(v45, sel_name);
    v59 = sub_1DD63E14C();
    v61 = v60;

    *(_QWORD *)(v0 + 136) = sub_1DD3C3160(v59, v61, &v116);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v51, v101, "%s %s has a location. Reverse geocode started...", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v103, -1, -1);
    MEMORY[0x1DF0DB358](v57, -1, -1);

    v62 = v54;
    v63 = v113;
  }
  else
  {

    v62 = v54;
    v63 = v55;
  }
  v110(v62, v63);
  v74 = (_QWORD *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_geocoder);
  v75 = v74[3];
  v76 = v74[4];
  __swift_project_boxed_opaque_existential_1(v74, v75);
  v115 = (uint64_t (*)(id, uint64_t, uint64_t))(**(int **)(v76 + 8) + *(_QWORD *)(v76 + 8));
  v77 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v77;
  *v77 = v0;
  v77[1] = sub_1DD4451C8;
  return v115(v47, v75, v76);
}

uint64_t sub_1DD4451C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1DD445234()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 352);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_13:
    v20 = *(void **)(v0 + 336);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1DD63E7B8();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_13;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF0DA2C0](0, *(_QWORD *)(v0 + 352));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 352) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(v2, sel_ISOcountryCode);

    if (v3)
    {
      v4 = *(void **)(v0 + 208);
      v5 = sub_1DD63E14C();
      v7 = v6;

      v8 = (id)qword_1ED379F38;
      sub_1DD63DF24();
      v9 = v4;
      swift_bridgeObjectRetain_n();
      v10 = v9;
      v11 = sub_1DD63DF00();
      v12 = sub_1DD63E488();
      if (os_log_type_enabled(v11, v12))
      {
        v54 = *(id *)(v0 + 328);
        v61 = *(_QWORD *)(v0 + 280);
        v63 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
        v59 = *(_QWORD *)(v0 + 248);
        v55 = *(void **)(v0 + 208);
        v13 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        v65 = v57;
        *(_DWORD *)v13 = 136315650;
        v14 = v5;
        *(_QWORD *)(v0 + 104) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v65);
        sub_1DD63E53C();
        *(_WORD *)(v13 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 112) = sub_1DD3C3160(v5, v7, &v65);
        sub_1DD63E53C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v13 + 22) = 2080;
        v15 = objc_msgSend(v54, sel_name);
        v16 = sub_1DD63E14C();
        v18 = v17;

        v19 = v16;
        v5 = v14;
        *(_QWORD *)(v0 + 120) = sub_1DD3C3160(v19, v18, &v65);
        sub_1DD63E53C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1DD34E000, v11, v12, "%s Reverse geocode succeeded, region code: %s for %s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1DF0DB358](v57, -1, -1);
        MEMORY[0x1DF0DB358](v13, -1, -1);

        v63(v61, v59);
      }
      else
      {
        v21 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
        v22 = *(_QWORD *)(v0 + 280);
        v23 = *(_QWORD *)(v0 + 248);
        v24 = *(void **)(v0 + 208);
        swift_bridgeObjectRelease_n();

        v21(v22, v23);
      }
      v25 = *(void **)(v0 + 336);
      v26 = (uint64_t *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 320));
      *v26 = v5;
      v26[1] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();

LABEL_20:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(uint64_t, unint64_t))(v0 + 8))(v5, v7);
      return;
    }
    v20 = *(void **)(v0 + 336);
LABEL_14:

    v29 = *(_QWORD *)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    sub_1DD63D7F8();
    sub_1DD63D7EC();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    v32 = sub_1DD63D7E0();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v28, 1, v32);
    v35 = *(_QWORD *)(v0 + 240);
    if (v34 == 1)
    {
      sub_1DD3540B8(*(_QWORD *)(v0 + 240), &qword_1ED3782E8);
      v5 = 0;
      v7 = 0xE000000000000000;
    }
    else
    {
      v5 = sub_1DD63D7D4();
      v7 = v36;
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
    }
    v37 = *(void **)(v0 + 208);
    v38 = (id)qword_1ED379F38;
    sub_1DD63DF24();
    v39 = v37;
    swift_bridgeObjectRetain_n();
    v40 = v39;
    v41 = sub_1DD63DF00();
    v42 = sub_1DD63E488();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = *(void **)(v0 + 328);
      v60 = *(_QWORD *)(v0 + 272);
      v62 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      v58 = *(_QWORD *)(v0 + 248);
      v56 = *(void **)(v0 + 208);
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_DWORD *)v44 = 136315650;
      v64 = v5;
      v65 = v45;
      *(_QWORD *)(v0 + 184) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v65);
      sub_1DD63E53C();
      *(_WORD *)(v44 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v5, v7, &v65);
      sub_1DD63E53C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 22) = 2080;
      v46 = objc_msgSend(v43, sel_name);
      v47 = sub_1DD63E14C();
      v49 = v48;

      *(_QWORD *)(v0 + 56) = sub_1DD3C3160(v47, v49, &v65);
      sub_1DD63E53C();
      v5 = v64;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DD34E000, v41, v42, "%s falling back to device region code: %s for %s", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1DF0DB358](v45, -1, -1);
      MEMORY[0x1DF0DB358](v44, -1, -1);

      v62(v60, v58);
    }
    else
    {
      v50 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      v51 = *(_QWORD *)(v0 + 272);
      v52 = *(_QWORD *)(v0 + 248);
      v53 = *(void **)(v0 + 208);
      swift_bridgeObjectRelease_n();

      v50(v51, v52);
    }
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_1DD445918()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v55;
  void *v56;
  uint64_t v57;
  void *type;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  v1 = *(void **)(v0 + 360);
  v2 = *(void **)(v0 + 208);
  v3 = &qword_1ED379000;
  v4 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v5 = v2;
  v6 = v1;
  v7 = v5;
  v8 = v1;
  v9 = sub_1DD63DF00();
  v10 = sub_1DD63E488();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 360);
    v12 = *(void **)(v0 + 328);
    v63 = *(_QWORD *)(v0 + 264);
    v65 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v59 = *(void **)(v0 + 336);
    v61 = *(_QWORD *)(v0 + 248);
    v56 = *(void **)(v0 + 208);
    v13 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v67 = v57;
    *(_DWORD *)v13 = 136315650;
    *(_QWORD *)(v0 + 64) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v67);
    sub_1DD63E53C();
    *(_WORD *)(v13 + 12) = 2080;
    swift_getErrorValue();
    v14 = sub_1DD63E8B4();
    *(_QWORD *)(v0 + 88) = sub_1DD3C3160(v14, v15, &v67);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();
    v55 = v11;

    *(_WORD *)(v13 + 22) = 2080;
    v16 = objc_msgSend(v12, sel_name);
    v17 = sub_1DD63E14C();
    v19 = v18;

    *(_QWORD *)(v0 + 96) = sub_1DD3C3160(v17, v19, &v67);
    sub_1DD63E53C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v9, v10, "%s Reverse geocode error: %s for %s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v57, -1, -1);
    v20 = v13;
    v3 = &qword_1ED379000;
    MEMORY[0x1DF0DB358](v20, -1, -1);

    v65(v63, v61);
  }
  else
  {
    v21 = *(void **)(v0 + 360);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v23 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 248);
    v25 = *(void **)(v0 + 208);

    v22(v23, v24);
  }
  v27 = *(_QWORD *)(v0 + 232);
  v26 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 224);
  sub_1DD63D7F8();
  sub_1DD63D7EC();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  v30 = sub_1DD63D7E0();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v26, 1, v30);
  v33 = *(_QWORD *)(v0 + 240);
  if (v32 == 1)
  {
    sub_1DD3540B8(*(_QWORD *)(v0 + 240), &qword_1ED3782E8);
    v34 = 0;
    v35 = 0xE000000000000000;
  }
  else
  {
    v34 = sub_1DD63D7D4();
    v35 = v36;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
  }
  v37 = *(void **)(v0 + 208);
  v38 = (id)v3[487];
  sub_1DD63DF24();
  v39 = v37;
  swift_bridgeObjectRetain_n();
  v40 = v39;
  v41 = sub_1DD63DF00();
  v42 = sub_1DD63E488();
  if (os_log_type_enabled(v41, v42))
  {
    v66 = v34;
    v43 = *(void **)(v0 + 328);
    v62 = *(_QWORD *)(v0 + 272);
    v64 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v60 = *(_QWORD *)(v0 + 248);
    type = *(void **)(v0 + 208);
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v67 = v45;
    *(_DWORD *)v44 = 136315650;
    *(_QWORD *)(v0 + 184) = sub_1DD3C3160(0x69676552656D6F68, 0xEC00000029286E6FLL, &v67);
    sub_1DD63E53C();
    *(_WORD *)(v44 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1DD3C3160(v34, v35, &v67);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v44 + 22) = 2080;
    v46 = objc_msgSend(v43, sel_name);
    v47 = sub_1DD63E14C();
    v49 = v48;

    *(_QWORD *)(v0 + 56) = sub_1DD3C3160(v47, v49, &v67);
    sub_1DD63E53C();
    v34 = v66;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DD34E000, v41, v42, "%s falling back to device region code: %s for %s", (uint8_t *)v44, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v45, -1, -1);
    MEMORY[0x1DF0DB358](v44, -1, -1);

    v64(v62, v60);
  }
  else
  {
    v50 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v51 = *(_QWORD *)(v0 + 272);
    v52 = *(_QWORD *)(v0 + 248);
    v53 = *(void **)(v0 + 208);
    swift_bridgeObjectRelease_n();

    v50(v51, v52);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v34, v35);
}

uint64_t sub_1DD446064(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DD4460C4;
  return sub_1DD4444EC();
}

uint64_t sub_1DD4460C4()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc();

  v3 = (void *)sub_1DD63E11C();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v3);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DD446174(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_1DD63DF18();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DD4461D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[5] + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_geocoder);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_1DD446260;
  return v6(v0[4], v2, v3);
}

uint64_t sub_1DD446260(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1DD4462DC()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 80);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1DD63E7B8();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF0DA2C0](0, *(_QWORD *)(v1 + 80));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(*(_QWORD *)(v1 + 80) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v4, sel_ISOcountryCode);

    if (v5)
    {
      v3 = sub_1DD63E14C();
      v0 = v6;

      if (qword_1ED378308 == -1)
        goto LABEL_8;
      goto LABEL_18;
    }
    v3 = 0;
LABEL_14:
    v0 = 0xE000000000000000;
    goto LABEL_15;
  }
  __break(1u);
LABEL_18:
  swift_once();
LABEL_8:
  v7 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain_n();
  v8 = sub_1DD63DF00();
  v9 = sub_1DD63E488();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v13 = *(_QWORD *)(v1 + 48);
  if (v10)
  {
    v18 = *(_QWORD *)(v1 + 64);
    v17 = *(_QWORD *)(v1 + 56);
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v19 = v15;
    *(_DWORD *)v14 = 136315394;
    *(_QWORD *)(v1 + 16) = sub_1DD3C3160(0xD000000000000015, 0x80000001DD66FDC0, &v19);
    sub_1DD63E53C();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 24) = sub_1DD3C3160(v3, v0, &v19);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DD34E000, v8, v9, "%s returning country code: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v15, -1, -1);
    MEMORY[0x1DF0DB358](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v13);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
LABEL_15:
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DD4465E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v1 = sub_1DD63DF9C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DD63DFB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD352AB0(0, (unint64_t *)&unk_1ED378398);
  v9 = (void *)sub_1DD63E4A0();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_1DD449610;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D3BBC;
  aBlock[3] = &block_descriptor_175;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  sub_1DD63DFA8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DD3D3BE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED378340);
  sub_1DD3D3B70();
  sub_1DD63E584();
  MEMORY[0x1DF0DA080](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DD4467B8()
{
  id v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[6];

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedDispatcher);
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3[4] = sub_1DD44963C;
  v3[5] = v1;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 1107296256;
  v3[2] = sub_1DD3D3B04;
  v3[3] = &block_descriptor_181;
  v2 = _Block_copy(v3);
  swift_release();
  objc_msgSend(v0, sel_dispatchHomeObserverMessage_sender_, v2, 0);
  _Block_release(v2);

}

void sub_1DD44689C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0DB400](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(id *)(v4 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home);

    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_homeDidUpdateHomeEnergyManagerEnabled_) & 1) != 0)
      objc_msgSend(a1, sel_homeDidUpdateHomeEnergyManagerEnabled_, v6);

  }
}

uint64_t sub_1DD446938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1DD446950()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DD63DEDC();
  *(_QWORD *)(v0 + 32) = sub_1DD63DEB8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1DD4469BC;
  return sub_1DD63DED0();
}

uint64_t sub_1DD4469BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1DD446A44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD446BA4(int a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = _Block_copy(aBlock);
  v2[3] = sub_1DD63E14C();
  v2[4] = v3;
  return swift_task_switch();
}

uint64_t sub_1DD446BF4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DD63DEDC();
  *(_QWORD *)(v0 + 40) = sub_1DD63DEB8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1DD446C60;
  return sub_1DD63DED0();
}

uint64_t sub_1DD446C60(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void (**v6)(_QWORD, _QWORD, _QWORD);

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 16);

  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, a1, 0);
  _Block_release(v6);

  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DD446D10()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 16);

  swift_bridgeObjectRelease();
  v3 = (void *)sub_1DD63D69C();

  ((void (**)(_QWORD, _QWORD, void *))v2)[2](v2, 0, v3);
  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DD446D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v9 + 144) = v16;
  *(_QWORD *)(v9 + 152) = v8;
  *(_OWORD *)(v9 + 112) = v14;
  *(_OWORD *)(v9 + 128) = v15;
  *(_OWORD *)(v9 + 96) = v13;
  *(_QWORD *)(v9 + 80) = a7;
  *(_QWORD *)(v9 + 88) = a8;
  *(_QWORD *)(v9 + 64) = a5;
  *(_QWORD *)(v9 + 72) = a6;
  *(_QWORD *)(v9 + 48) = a3;
  *(_QWORD *)(v9 + 56) = a4;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  v10 = sub_1DD63DF18();
  *(_QWORD *)(v9 + 160) = v10;
  *(_QWORD *)(v9 + 168) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 176) = swift_task_alloc();
  *(_QWORD *)(v9 + 184) = swift_task_alloc();
  sub_1DD63E074();
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 192) = v11;
  *v11 = v9;
  v11[1] = sub_1DD446E68;
  return sub_1DD63E008();
}

uint64_t sub_1DD446E68(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD446EC4()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(v0 + 200))
  {
    v15 = (int)*MEMORY[0x1E0D1F3E0] + MEMORY[0x1E0D1F3E0];
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v1;
    *v1 = v0;
    v1[1] = sub_1DD44713C;
    __asm { BR              X8 }
  }
  if (qword_1ED378308 != -1)
    swift_once();
  v2 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  swift_bridgeObjectRetain_n();
  v3 = sub_1DD63DF00();
  v4 = sub_1DD63E47C();
  v5 = os_log_type_enabled(v3, v4);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 40);
  if (v5)
  {
    v10 = *(_QWORD *)(v0 + 32);
    v16 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 176);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1DD3C3160(v10, v9, &v17);
    sub_1DD63E53C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DD34E000, v3, v4, "Error fetching Energy Site for %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v12, -1, -1);
    MEMORY[0x1DF0DB358](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v16);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD44713C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 236) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD4471AC()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED378308 != -1)
    swift_once();
  v1 = (id)qword_1ED379F38;
  sub_1DD63DF24();
  v2 = sub_1DD63DF00();
  v3 = sub_1DD63E488();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 236);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 184);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_1DD3C3160(0xD00000000000008DLL, 0x80000001DD66FDE0, &v15);
    sub_1DD63E53C();
    *(_WORD *)(v5 + 12) = 1024;
    *(_DWORD *)(v0 + 232) = v4;
    sub_1DD63E53C();
    _os_log_impl(&dword_1DD34E000, v2, v3, "%s Created utility subscription: %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1DF0DB358](v6, -1, -1);
    MEMORY[0x1DF0DB358](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  if (*(_BYTE *)(v0 + 236) == 1)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v10;
    *v10 = v0;
    v10[1] = sub_1DD447404;
    return sub_1DD43DA6C(1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1DD447404()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DD447458()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1DD4474A0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DD44767C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9, void *a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v10[2] = a10;
  v11 = sub_1DD63D768();
  v10[3] = v11;
  v10[4] = *(_QWORD *)(v11 - 8);
  v10[5] = swift_task_alloc();
  v10[6] = _Block_copy(a9);
  v12 = sub_1DD63E14C();
  v32 = v13;
  v33 = v12;
  v10[7] = v13;
  v14 = sub_1DD63E14C();
  v30 = v15;
  v31 = v14;
  v10[8] = v15;
  v16 = sub_1DD63E14C();
  v27 = v17;
  v28 = v16;
  v10[9] = v17;
  v26 = sub_1DD63E14C();
  v19 = v18;
  v10[10] = v18;
  sub_1DD63D744();
  sub_1DD63E14C();
  v10[11] = v20;
  sub_1DD63E14C();
  v10[12] = v21;
  if (a8)
  {
    sub_1DD63E14C();
    v23 = v22;
  }
  else
  {
    v23 = 0;
  }
  v10[13] = v23;
  a10;
  v24 = (_QWORD *)swift_task_alloc();
  v10[14] = v24;
  *v24 = v10;
  v24[1] = sub_1DD447814;
  return sub_1DD446D8C(v33, v32, v31, v30, v28, v27, v26, v19);
}

uint64_t sub_1DD447814(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v8;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(void **)(v2 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 32) + 8))(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 24));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    v5 = (void *)sub_1DD63D69C();

    (*(void (**)(uint64_t, _QWORD, void *))(v3 + 16))(v3, 0, v5);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v3 + 16))(v3, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v2 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id HFHomeEnergyManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HFHomeEnergyManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HFHomeEnergyManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HFHomeEnergyManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD447A6C()
{
  uint64_t result;

  result = sub_1DD63E11C();
  qword_1ED378580 = result;
  return result;
}

id static NSNotificationName.gridForecastEnabledDidChange.getter()
{
  return sub_1DD427E08(&qword_1ED378590, (id *)&qword_1ED378580);
}

uint64_t sub_1DD447ABC()
{
  uint64_t result;

  result = sub_1DD63E11C();
  qword_1ED378598 = result;
  return result;
}

id static NSNotificationName.hasUtilitySubscriptionDidChange.getter()
{
  return sub_1DD427E08(&qword_1ED3785A8, (id *)&qword_1ED378598);
}

uint64_t sub_1DD447B0C(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_1DD447BB0;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x1E0C809B0];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1DD44018C;
  v6[3] = &block_descriptor_13;
  v6[4] = v5;
  objc_msgSend(v4, sel_reverseGeocodeLocation_completionHandler_, a1, v6);
  return swift_continuation_await();
}

uint64_t sub_1DD447BB0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 120));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1DD447C20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1DD3DED78;
  return v6();
}

uint64_t sub_1DD447C74(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1DD3DED78;
  return v7();
}

uint64_t sub_1DD447CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DD63E2FC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DD63E2F0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DD3540B8(a1, &qword_1ED378350);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD63E284();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_1DD447E14(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  _BYTE *v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  objc_class *v28;
  id v29;
  _BYTE v31[16];
  objc_super v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[5];

  v6 = sub_1DD63D7C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1DD352AB0(0, &qword_1ED378358);
  v11 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedRegionCode];
  *v11 = 0;
  v11[1] = 0;
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable] = 2;
  v35[3] = v10;
  v35[4] = &protocol witness table for CLGeocoder;
  *(_QWORD *)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation] = 0;
  v35[0] = a2;
  v12 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable];
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable] = 2;
  v13 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_homeElectricitySupportedCache];
  *v13 = 0xD00000000000001DLL;
  v13[1] = 0x80000001DD6700B0;
  v14 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_hasUtilitySubscriptionCache];
  *v14 = 0xD00000000000001ELL;
  v14[1] = 0x80000001DD670280;
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home] = a1;
  sub_1DD3D3C30((uint64_t)v35, (uint64_t)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_geocoder]);
  v15 = (void *)objc_opt_self();
  v16 = a3;
  v17 = a1;
  v18 = objc_msgSend(v15, sel_standardUserDefaults);
  v19 = objc_msgSend(v18, sel_dictionaryForKey_, CFSTR("homeEnergyAvailableCache"));

  if (v19)
  {
    v20 = sub_1DD63E098();

  }
  else
  {
    v20 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  }
  v21 = objc_msgSend(v17, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v22 = sub_1DD63D780();
  v24 = v23;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  if (*(_QWORD *)(v20 + 16) && (v25 = sub_1DD3714A8(v22, v24), (v26 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(v20 + 56) + 32 * v25, (uint64_t)&v33);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v34 + 1))
  {
    if (swift_dynamicCast())
      v27 = v31[15];
    else
      v27 = 2;
  }
  else
  {
    sub_1DD3540B8((uint64_t)&v33, (uint64_t *)&unk_1ED3785F0);
    v27 = 2;
  }
  swift_beginAccess();
  *v12 = v27;

  v28 = (objc_class *)type metadata accessor for HFHomeEnergyManager();
  v32.receiver = v16;
  v32.super_class = v28;
  v29 = objc_msgSendSuper2(&v32, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  return v29;
}

id sub_1DD448138(void *a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  _BYTE *v20;
  id v21;
  id v22;
  id v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  objc_class *v32;
  id v33;
  _BYTE v35[16];
  objc_super v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39[5];

  v10 = sub_1DD63D7C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39[3] = a4;
  v39[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v15 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedRegionCode];
  *v15 = 0;
  v15[1] = 0;
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable] = 2;
  *(_QWORD *)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation] = 0;
  v16 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable];
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable] = 2;
  v17 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_homeElectricitySupportedCache];
  *v17 = 0xD00000000000001DLL;
  v17[1] = 0x80000001DD6700B0;
  v18 = &a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_hasUtilitySubscriptionCache];
  *v18 = 0xD00000000000001ELL;
  v18[1] = 0x80000001DD670280;
  a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_home] = a1;
  sub_1DD3D3C30((uint64_t)v39, (uint64_t)&a3[OBJC_IVAR____TtC4Home19HFHomeEnergyManager_geocoder]);
  v19 = (void *)objc_opt_self();
  v20 = a3;
  v21 = a1;
  v22 = objc_msgSend(v19, sel_standardUserDefaults);
  v23 = objc_msgSend(v22, sel_dictionaryForKey_, CFSTR("homeEnergyAvailableCache"));

  if (v23)
  {
    v24 = sub_1DD63E098();

  }
  else
  {
    v24 = sub_1DD3D6234(MEMORY[0x1E0DEE9D8]);
  }
  v25 = objc_msgSend(v21, sel_uniqueIdentifier);
  sub_1DD63D7A4();

  v26 = sub_1DD63D780();
  v28 = v27;
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if (*(_QWORD *)(v24 + 16) && (v29 = sub_1DD3714A8(v26, v28), (v30 & 1) != 0))
  {
    sub_1DD3714B4(*(_QWORD *)(v24 + 56) + 32 * v29, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v38 + 1))
  {
    if (swift_dynamicCast())
      v31 = v35[15];
    else
      v31 = 2;
  }
  else
  {
    sub_1DD3540B8((uint64_t)&v37, (uint64_t *)&unk_1ED3785F0);
    v31 = 2;
  }
  swift_beginAccess();
  *v16 = v31;

  v32 = (objc_class *)type metadata accessor for HFHomeEnergyManager();
  v36.receiver = v20;
  v36.super_class = v32;
  v33 = objc_msgSendSuper2(&v36, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  return v33;
}

id sub_1DD44845C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone((Class)type metadata accessor for HFHomeEnergyManager());
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_1DD448138(a1, (uint64_t)v11, v12, a4, a5);
}

uint64_t sub_1DD448504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  v0 = sub_1DD63D804();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED3782E8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD63D7F8();
  sub_1DD63D7EC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_1DD63D7E0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DD3540B8((uint64_t)v6, &qword_1ED3782E8);
  }
  else
  {
    sub_1DD63D7D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = sub_1DD63D894();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DD448644@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable, a2);
}

uint64_t sub_1DD448650(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_isGridForecastAvailable, (uint64_t (*)(uint64_t))sub_1DD43BB84);
}

id sub_1DD448664@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_temporaryLocation);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1DD4486B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DD43C1A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DD4486E4(char *a1)
{
  return sub_1DD43C3A8(*a1);
}

uint64_t sub_1DD448708@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1DD448760(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedGridForecastAvailable, (uint64_t (*)(uint64_t))sub_1DD43C788);
}

uint64_t keypath_setTm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  _BYTE *v8;
  uint64_t v9;

  v7 = *a1;
  v8 = (_BYTE *)(*a2 + *a5);
  v9 = swift_beginAccess();
  *v8 = v7;
  return a6(v9);
}

uint64_t sub_1DD4487CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DD43D47C();
  *a1 = result & 1;
  return result;
}

void sub_1DD4487F8(char *a1)
{
  sub_1DD43D4C8(*a1);
}

uint64_t sub_1DD44881C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1DD44886C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC4Home19HFHomeEnergyManager_cachedHasEnergySite);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t dispatch thunk of Geocoding.reverseGeocodeLocation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DD3DED94;
  return v9(a1, a2, a3);
}

uint64_t method lookup function for HFHomeEnergyManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HFHomeEnergyManager.__allocating_init(home:geocoder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastAvailable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastAvailable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.temporaryLocation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.temporaryLocation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.temporaryLocation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.effectiveGridForecastAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.cachedGridForecastAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.cachedGridForecastAvailable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.cachedGridForecastAvailable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.updateHomeEnergyAvailableFeatures()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD3DE6D4;
  return v5();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isHomeElectricitySupported.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isHomeElectricitySupported.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isHomeElectricitySupported.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.cachedHasEnergySite.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.cachedHasUtilitySubscription.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isHomeEnergyVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isHomeElectricitySupportedInHomeRegion()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD449648;
  return v5();
}

uint64_t dispatch thunk of HFHomeEnergyManager.utilityDetails()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD419B9C;
  return v5();
}

uint64_t dispatch thunk of HFHomeEnergyManager.revokeSubscription()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD449648;
  return v5();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isRevokeDisconnectUtilityAllowed()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastAvailableInHomeRegion()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD419B9C;
  return v5();
}

uint64_t dispatch thunk of HFHomeEnergyManager.homeRegion()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DD448E00;
  return v5();
}

uint64_t sub_1DD448E00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of HFHomeEnergyManager.isGridForecastAvailableForNewFeaturesView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of HFHomeEnergyManager.lookupCountryCode(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1C0);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD448EE8;
  return v7(a1);
}

uint64_t sub_1DD448EE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of static HFHomeEnergyManager.utilityConfiguration(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 464) + *(_QWORD *)(v2 + 464));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1DD3DE6D4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of HFHomeEnergyManager.createUtilitySubscription(homeID:utilityID:serviceLocationID:accessToken:accessTokenExpirationDate:refreshToken:address:utilityCustomerName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  _QWORD *v15;
  uint64_t v16;
  int *v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x1D8);
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v18 + *v18);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v16 + 16) = v19;
  *v19 = v16;
  v19[1] = sub_1DD3DED94;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1DD449084()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 80));
  return swift_deallocObject();
}

void sub_1DD4490F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DD3DED78;
  __asm { BR              X8; sub_1DD44767C }
}

uint64_t sub_1DD4491A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD4491C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DD3DE5EC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F03E61D0 + dword_1F03E61D0))(a1, v4);
}

uint64_t sub_1DD44923C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E61E0 + dword_1F03E61E0))(v2, v3);
}

uint64_t sub_1DD4492AC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DE5EC;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E6200 + dword_1F03E6200))(v2, v3);
}

uint64_t sub_1DD44931C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E6220 + dword_1F03E6220))(v2, v3);
}

uint64_t sub_1DD44938C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E6240 + dword_1F03E6240))(v2, v3);
}

uint64_t sub_1DD4493FC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E6260 + dword_1F03E6260))(v2, v3);
}

uint64_t objectdestroy_60Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1DD449498()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F03E6280 + dword_1F03E6280))(v2, v3);
}

uint64_t sub_1DD449504()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1DD449530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DD3DED78;
  return ((uint64_t (*)(int, void *))((char *)&dword_1F03E62A0 + dword_1F03E62A0))(v2, v3);
}

uint64_t sub_1DD4495A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED378550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD4495EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD449610()
{
  sub_1DD4467B8();
}

uint64_t sub_1DD449618()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DD44963C(void *a1)
{
  uint64_t v1;

  sub_1DD44689C(a1, v1);
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_1ED378BA8 == -1)
  {
    if (qword_1ED378BB0)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_1ED378BA8, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_1ED378BB0)
      return _availability_version_check();
  }
  if (qword_1ED378BA0 == -1)
  {
    v8 = _MergedGlobals_206 < a2;
    if (_MergedGlobals_206 > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1ED378BA0, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals_206 < a2;
    if (_MergedGlobals_206 > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_1ED378B94 > a3)
    return 1;
  return dword_1ED378B94 >= a3 && dword_1ED378B98 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t (*)(void))qword_1ED378BB0;
  if (qword_1ED378BB0)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x1E0C80CC0])
    {
      qword_1ED378BB0 = (uint64_t)MEMORY[0x1E0C80CC0];
      v1 = MEMORY[0x1E0C80CC0];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x1DF0DAAB8](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals_206, &dword_1ED378B94, &dword_1ED378B98);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1DD44F2DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD44F5AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD44F924(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1DD44FF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD450A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_1DD451560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD452500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4542A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1DD454CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD455938(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1DD4586D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD45A884(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1DD45C00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1DD4623B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t HFToggledPrimaryState(uint64_t a1)
{
  if (a1 == 2)
    return 1;
  else
    return 2 * (a1 == 1);
}

BOOL HFIsValidPrimaryState(uint64_t a1)
{
  return a1 != 0;
}

const __CFString *NSStringFromHFRemoteAccessState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("NotSet");
  else
    return off_1EA727900[a1 - 1];
}

__CFString *HFLocalizedStringFromHMHomeInvitationState(uint64_t a1)
{
  __CFString *v1;
  __CFString *v2;

  switch(a1)
  {
    case 1:
      v1 = CFSTR("HMHomeInvitationStateCanceled");
      goto LABEL_9;
    case 2:
    case 5:
    case 7:
      v1 = CFSTR("HMHomeInvitationStatePending");
      goto LABEL_9;
    case 3:
      v1 = CFSTR("HMHomeInvitationStateAccepted");
      goto LABEL_9;
    case 4:
      v1 = CFSTR("HMHomeInvitationStateDeclined");
      goto LABEL_9;
    case 6:
      v1 = CFSTR("HMHomeInvitationStateExpired");
LABEL_9:
      _HFLocalizedStringWithDefaultValue(v1, v1, 1);
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      v2 = &stru_1EA741FF8;
      break;
  }
  return v2;
}

void sub_1DD4640EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *HFCAPackageStateForHFPrimaryState(uint64_t a1)
{
  __CFString **v1;

  v1 = &HFCAPackageStateOn;
  if (a1 != 2)
    v1 = &HFCAPackageStateOff;
  return *v1;
}

__CFString *HFVibrantStateForHFCAPackageState(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;

  v1 = a1;
  v2 = v1;
  if (HFCAPackageStateOn == v1)
  {
    v1 = HFCAPackageStateOnVibrant;
  }
  else if (HFCAPackageStateActivated == v1)
  {
    v1 = HFCAPackageStateActivatedVibrant;
  }
  v3 = v1;

  return v3;
}

void sub_1DD4654CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1DD465D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD465F58(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD46612C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD466484(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1DD466790(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD466AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4687B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1DD47199C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD473654(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1DD4758D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD475A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD47AAF0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1DD47AD04(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DD47AE6C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void FetchNaturalLightColorTemperatureForBrightness(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __FetchNaturalLightColorTemperatureForBrightness_block_invoke;
  v9[3] = &unk_1EA729228;
  v10 = v5;
  v11 = v6;
  v7 = v6;
  v8 = v5;
  objc_msgSend(v8, "fetchNaturalLightColorTemperatureForBrightness:completion:", a1, v9);

}

void sub_1DD47D624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4801A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1DD482B24(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1DD486910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4876D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD487B1C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak(v3);
  _Unwind_Resume(a1);
}

void sub_1DD4881CC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD4884A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4894AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DD4898C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1DD489FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t HMPresenceEventUserTypeFromSelectedUserCollectionType(unint64_t a1)
{
  void *v2;

  if (a1 < 3)
    return qword_1DD6694B8[a1];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  NSLog(CFSTR("Unexpected user type %@"), v2);

  return 2;
}

uint64_t HFSelectedUserCollectionTypeFromPresenceEventUserType(uint64_t a1)
{
  void *v2;

  if ((unint64_t)(a1 - 1) < 3)
    return qword_1DD6694D0[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  NSLog(CFSTR("Unknown presence user type %@"), v2);

  return 0;
}

void sub_1DD490488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

const __CFString *HFStringFromHFLocationEventType(unint64_t a1)
{
  void *v2;
  void *v3;

  if (a1 < 3)
    return off_1EA72A9B0[a1];
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString * _Nonnull HFStringFromHFLocationEventType(HFLocationEventType)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HFLocationEventAdditions.m"), 29, CFSTR("Unknown HFLocationEventType"));

  return &stru_1EA741FF8;
}

const __CFString *NSStringFromHFPresenceEventActivationGranularity(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("(unknown)");
  if (!a1)
    v1 = CFSTR("ActivationGranularityUser");
  if (a1 == 1)
    return CFSTR("ActivationGranularityHome");
  else
    return v1;
}

void sub_1DD495E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD496344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD496F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD498638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD499C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD49A940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD49AAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD49AD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD49AE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromHMSoftwareUpdateState(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 6)
    return off_1EA72B710[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMSoftwareUpdateState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromHMSoftwareUpdateStatusV2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if ((unint64_t)(a1 - 1) < 0x12)
    return off_1EA72B740[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("HMSoftwareUpdateStatusV2(%ld)"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromHMHomeInvitationState(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if ((unint64_t)(a1 - 1) < 7)
    return off_1EA72B7D0[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMHomeInvitationState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

void sub_1DD4A1268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9)
{
  id v9;
  NSObject *v10;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    HFLogForCategory(0x40uLL);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v9;
      _os_log_error_impl(&dword_1DD34E000, v10, OS_LOG_TYPE_ERROR, "Tried to decode something that didn't want to be decoded... : %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1DD4A1234);
  }
  _Unwind_Resume(exception_object);
}

__CFString *NSStringFromNSPropertyListFormat(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  switch(a1)
  {
    case 1:
      return CFSTR("NSPropertyListOpenStepFormat");
    case 200:
      return CFSTR("NSPropertyListBinaryFormat_v1_0");
    case 100:
      return CFSTR("NSPropertyListXMLFormat_v1_0");
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify NSPropertyListFormat: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

void sub_1DD4A1588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9)
{
  id v9;
  NSObject *v10;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    HFLogForCategory(0x40uLL);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v9;
      _os_log_error_impl(&dword_1DD34E000, v10, OS_LOG_TYPE_ERROR, "Tried to decode something that didn't want to be decoded... : %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1DD4A1554);
  }
  _Unwind_Resume(exception_object);
}

__CFString *NSStringFromHMUserActionPredictionType(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 5)
    return off_1EA72B808[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMUserActionPredictionType: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromHMMediaPlaybackState(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 7)
    return off_1EA72B830[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMMediaPlaybackState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromHMCameraStreamState(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if ((unint64_t)(a1 - 1) < 4)
    return off_1EA72B868[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMCameraStreamState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromHMSymptomFixSessionState(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 3)
    return off_1EA72B888[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMSymptomFixSessionState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromConfigurationState(unint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (a1 < 4)
    return off_1EA72B8A0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Yet to stringify HMServiceConfigurationState: %lu"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HFLogForCategory(0x24uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
  }

  NSLog(CFSTR("%@"), v2);
  return (__CFString *)v2;
}

__CFString *NSStringFromBooleanValue(int a1)
{
  if (a1)
    return CFSTR("YES");
  else
    return CFSTR("NO");
}

const __CFString *NSStringFromNSOperationQueuePriority(uint64_t a1)
{
  unint64_t v1;
  __int128 v2;

  *((_QWORD *)&v2 + 1) = a1;
  *(_QWORD *)&v2 = a1 + 8;
  v1 = v2 >> 2;
  if (v1 > 4)
    return CFSTR("Unknown");
  else
    return off_1EA72B8C0[v1];
}

id HFDescriptionForBitmask(unint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t *v7;
  uint8x8_t v8;
  int v9;
  unsigned int v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  void *v18;
  id v19;
  id v20;
  char v21;

  v3 = a2;
  v4 = (void *)objc_opt_new();
  v15 = MEMORY[0x1E0C809B0];
  v16 = 3221225472;
  v17 = __HFDescriptionForBitmask_block_invoke;
  v18 = &unk_1EA72B6B8;
  v5 = v3;
  v20 = v5;
  v6 = v4;
  v19 = v6;
  v7 = &v15;
  if (a1)
  {
    v21 = 0;
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v8.i16[0] = vaddlv_u8(v8);
    v9 = v8.i32[0];
    if (v8.i32[0])
    {
      v10 = 0;
      do
      {
        if (((1 << v10) & a1) != 0)
        {
          ((void (*)(uint64_t *))v17)(v7);
          if (v21)
            break;
          --v9;
        }
        if (v10 > 0x3E)
          break;
        ++v10;
      }
      while (v9 > 0);
    }
  }

  v11 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v6, "componentsJoinedByString:", CFSTR(","));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "stringWithFormat:", CFSTR("{%@}"), v12, v15, v16);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

void sub_1DD4A39C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4A3D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4ABF7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4AF278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4B2C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4B2E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4B2FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4B316C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DD4B916C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DD4B97E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromHMSymptomType(uint64_t a1)
{
  uint64_t v1;
  const __CFString *result;
  NSObject *v3;
  int v4;
  const char *v5;
  __int16 v6;
  const __CFString *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = a1 - 1;
  result = CFSTR("HMSymptomTypeNeediCloudCredential");
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = CFSTR("HMSymptomTypeNeediTunesCredential");
      break;
    case 2:
      result = CFSTR("HMSymptomTypeNeedHomeKitFix");
      break;
    case 3:
      result = CFSTR("HMSymptomTypeNeedWiFiFix");
      break;
    case 4:
      result = CFSTR("HMSymptomTypeNeedWiFiPerformanceFix");
      break;
    case 5:
      result = CFSTR("HMSymptomTypeNeedInternetFix");
      break;
    case 6:
      result = CFSTR("HMSymptomTypeNeedHardwareFix");
      break;
    case 7:
      result = CFSTR("HMSymptomTypeStereoVersionMismatch");
      break;
    case 8:
      result = CFSTR("HMSymptomTypeStereoNotFound");
      break;
    case 9:
      result = CFSTR("HMSymptomTypeStereoError");
      break;
    case 10:
      result = CFSTR("HMSymptomTypeWiFiNetworkMismatch");
      break;
    case 11:
      result = CFSTR("HMSymptomTypeNoConfiguredTargets");
      break;
    case 12:
      result = CFSTR("HMSymptomTypeVPNProfileExpired");
      break;
    case 13:
      result = CFSTR("HMSymptomTypeNeed8021xNetworkFix");
      break;
    case 14:
      result = CFSTR("HMSymptomTypeNeedWiFiSecurityFix");
      break;
    case 15:
      result = CFSTR("HMSymptomTypeNeedNetworkProfileFix");
      break;
    case 16:
      result = CFSTR("HMSymptomTypeNeedNetworkProfileInstall");
      break;
    case 17:
      result = CFSTR("HMSymptomTypeNetworkNotShareable");
      break;
    case 18:
      result = CFSTR("HMSymptomTypeNeedCaptiveLeaseRenewal");
      break;
    case 19:
      result = CFSTR("HMSymptomTypeNeedCDPFix");
      break;
    case 20:
      result = CFSTR("HMSymptomTypePrimaryResidentUnreachable");
      break;
    default:
      if (CFSTR("HMSymptomTypeNeediCloudCredential") == (__CFString *)999)
      {
        result = CFSTR("HMSymptomTypeNeedGeneralFix");
      }
      else if (CFSTR("HMSymptomTypeNeediCloudCredential") == (__CFString *)1000)
      {
        result = CFSTR("HMSymptomTypeFixInProgress");
      }
      else
      {
        HFLogForCategory(0);
        v3 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        {
          v4 = 136315394;
          v5 = "NSString * _Nonnull NSStringFromHMSymptomType(HMSymptomType)";
          v6 = 2048;
          v7 = CFSTR("HMSymptomTypeNeediCloudCredential");
          _os_log_error_impl(&dword_1DD34E000, v3, OS_LOG_TYPE_ERROR, "%s: Unhandled symptom type: %ld", (uint8_t *)&v4, 0x16u);
        }

        result = CFSTR("HMSymptomType??????");
      }
      break;
  }
  return result;
}

